// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module/SceneElementDefine.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "module/SceneElementDefine.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* SceneElementDefine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SceneElementDefine_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ESceneConfType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ESceneElementType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EAssetType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EGuardEventType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_module_2fSceneElementDefine_2eproto() {
  protobuf_AddDesc_module_2fSceneElementDefine_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "module/SceneElementDefine.proto");
  GOOGLE_CHECK(file != NULL);
  SceneElementDefine_descriptor_ = file->message_type(0);
  static const int SceneElementDefine_offsets_[1] = {
  };
  SceneElementDefine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SceneElementDefine_descriptor_,
      SceneElementDefine::default_instance_,
      SceneElementDefine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneElementDefine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneElementDefine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SceneElementDefine));
  ESceneConfType_descriptor_ = file->enum_type(0);
  ESceneElementType_descriptor_ = file->enum_type(1);
  EAssetType_descriptor_ = file->enum_type(2);
  EGuardEventType_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_module_2fSceneElementDefine_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SceneElementDefine_descriptor_, &SceneElementDefine::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_module_2fSceneElementDefine_2eproto() {
  delete SceneElementDefine::default_instance_;
  delete SceneElementDefine_reflection_;
}

void protobuf_AddDesc_module_2fSceneElementDefine_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037module/SceneElementDefine.proto\022\002pb\"\024\n"
    "\022SceneElementDefine*\363\001\n\016ESceneConfType\022\010"
    "\n\004NONE\020\001\022\r\n\tRPG_SCENE\020\002\022\r\n\tSLG_SCENE\020\003\022\022"
    "\n\016INSTANCE_SCENE\020\004\022\021\n\rDUNGEON_SCENE\020\005\022\023\n"
    "\017GAME_PLAY_SCENE\020\006\022\023\n\017ADVENTURE_SCENE\020\007\022"
    "\025\n\021NATIONALWAR_SCENE\020\010\022\026\n\022ADVENTURE_TEMP"
    "LATE\020\t\022\023\n\017GUILD_WAR_SCENE\020\n\022\022\n\016ADVENTURE"
    "_ROOM\020\013\022\020\n\014ARCHER_SCENE\020\014*\220\t\n\021ESceneElem"
    "entType\022\016\n\nSPAWN_SPOT\020\001\022\r\n\tHOLD_SPOT\020\002\022\022"
    "\n\016MAP_SPAWN_SPOT\020\003\022\014\n\010SUM_SPOT\020\004\022\017\n\013CENT"
    "ER_SPOT\020\005\022\n\n\006CAMERA\020e\022\020\n\014CAMERA_TRACK\020f\022"
    "\021\n\rBATTLE_CAMERA\020g\022\023\n\017INSTANCE_CAMERA\020h\022"
    "\024\n\020GAME_PLAY_CAMERA\020i\022\025\n\021BATTLE_PRE_CAME"
    "RA\020j\022\023\n\017BATTLE_CAMERA_2\020k\022\025\n\020CAMERA_MOVE"
    "_AREA\020\311\001\022\r\n\010OBSTACLE\020\312\001\022\025\n\020DUNGEON_ENTRA"
    "NCE\020\313\001\022\031\n\024STRONG_HOLD_ENTRANCE\020\314\001\022\021\n\014TRE"
    "ASURE_BOX\020\315\001\022\034\n\027ELITE_INSTANCE_ENTRANCE\020"
    "\316\001\022\021\n\014DESTRUCTABLE\020\317\001\022\033\n\026RPG_MAIN_CITY_E"
    "NTRANCE\020\320\001\022\024\n\017INTERACT_OBJECT\020\321\001\022\030\n\023FUNN"
    "Y_GAME_ENTRANCE\020\322\001\022\023\n\016INSTANCE_EVENT\020\323\001\022"
    "\021\n\014MYSTERY_SHOP\020\324\001\022\024\n\017HIDDEN_INSTANCE\020\326\001"
    "\022\031\n\024EXIT_HIDDEN_INSTANCE\020\327\001\022\022\n\rMESSAGE_B"
    "OARD\020\330\001\022\r\n\010TASK_NPC\020\331\001\022\030\n\023CUT_SCENE_CONF"
    "_AREA\020\332\001\022\025\n\020CROSS_LEVY_TOWER\020\333\001\022\035\n\030CROSS"
    "_LEVY_TEAM_ENTRANCE\020\334\001\022\016\n\tWALK_AREA\020\255\002\022\022"
    "\n\rBLOW_FLY_AREA\020\256\002\022\021\n\014TRIGGER_AREA\020\257\002\022\020\n"
    "\013BATTLE_AREA\020\260\002\022\033\n\026OBSTACLE_INSTANCE_ARE"
    "A\020\261\002\022\017\n\nSPAWN_AREA\020\262\002\022\017\n\nEVENT_AREA\020\263\002\022\022"
    "\n\rANIM_ASSET_SE\020\221\003\022\024\n\017STATIC_ASSET_SE\020\222\003"
    "\022\024\n\017EFFECT_ASSET_SE\020\223\003\022\n\n\005AUDIO\020\224\003\022\026\n\021BU"
    "ILDING_ASSET_SE\020\225\003\022\036\n\031FEATURE_ENTRANCE_A"
    "SSET_SE\020\226\003\022\027\n\022INTERACTE_SCENE_UI\020\227\003\022\020\n\013A"
    "SSET_GROUP\020\230\003\022\017\n\nBENCH_MARK\020\365\003\022\017\n\nJUMP_T"
    "RACK\020\366\003\022\023\n\016WAR_MISTY_AREA\020\367\003\022\020\n\013PATROL_P"
    "ATH\020\370\003\022\020\n\013CARRIER_ENT\020\371\003\022\020\n\013CURVE_TRACK\020"
    "\372\003\022\025\n\020PATROL_PATH_CONF\020\373\003\022\026\n\021BATTLE_BLOC"
    "K_LINE\020\374\003\022\031\n\024BENCHMARK_PATH_TRACK\020\375\003*m\n\n"
    "EAssetType\022\n\n\006UNKNOW\020\001\022\020\n\014STATIC_ASSET\020e"
    "\022\027\n\022TEXTURE_ANIM_ASSET\020\311\001\022\025\n\020SPINE_ANIM_"
    "ASSET\020\312\001\022\021\n\014EFFECT_ASSET\020\255\002*:\n\017EGuardEve"
    "ntType\022\025\n\021STRONGHOLD_BATTLE\020\001\022\020\n\014RUN_BEH"
    "AVIOR\020\002", 1647);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "module/SceneElementDefine.proto", &protobuf_RegisterTypes);
  SceneElementDefine::default_instance_ = new SceneElementDefine();
  SceneElementDefine::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_module_2fSceneElementDefine_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_module_2fSceneElementDefine_2eproto {
  StaticDescriptorInitializer_module_2fSceneElementDefine_2eproto() {
    protobuf_AddDesc_module_2fSceneElementDefine_2eproto();
  }
} static_descriptor_initializer_module_2fSceneElementDefine_2eproto_;
const ::google::protobuf::EnumDescriptor* ESceneConfType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ESceneConfType_descriptor_;
}
bool ESceneConfType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ESceneElementType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ESceneElementType_descriptor_;
}
bool ESceneElementType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 219:
    case 220:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 401:
    case 402:
    case 403:
    case 404:
    case 405:
    case 406:
    case 407:
    case 408:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 508:
    case 509:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EAssetType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EAssetType_descriptor_;
}
bool EAssetType_IsValid(int value) {
  switch(value) {
    case 1:
    case 101:
    case 201:
    case 202:
    case 301:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGuardEventType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGuardEventType_descriptor_;
}
bool EGuardEventType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

SceneElementDefine::SceneElementDefine()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.SceneElementDefine)
}

void SceneElementDefine::InitAsDefaultInstance() {
}

SceneElementDefine::SceneElementDefine(const SceneElementDefine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.SceneElementDefine)
}

void SceneElementDefine::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SceneElementDefine::~SceneElementDefine() {
  // @@protoc_insertion_point(destructor:pb.SceneElementDefine)
  SharedDtor();
}

void SceneElementDefine::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SceneElementDefine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneElementDefine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SceneElementDefine_descriptor_;
}

const SceneElementDefine& SceneElementDefine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fSceneElementDefine_2eproto();
  return *default_instance_;
}

SceneElementDefine* SceneElementDefine::default_instance_ = NULL;

SceneElementDefine* SceneElementDefine::New() const {
  return new SceneElementDefine;
}

void SceneElementDefine::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SceneElementDefine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.SceneElementDefine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.SceneElementDefine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.SceneElementDefine)
  return false;
#undef DO_
}

void SceneElementDefine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.SceneElementDefine)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.SceneElementDefine)
}

::google::protobuf::uint8* SceneElementDefine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SceneElementDefine)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SceneElementDefine)
  return target;
}

int SceneElementDefine::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneElementDefine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SceneElementDefine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SceneElementDefine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SceneElementDefine::MergeFrom(const SceneElementDefine& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SceneElementDefine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneElementDefine::CopyFrom(const SceneElementDefine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneElementDefine::IsInitialized() const {

  return true;
}

void SceneElementDefine::Swap(SceneElementDefine* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SceneElementDefine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SceneElementDefine_descriptor_;
  metadata.reflection = SceneElementDefine_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
