// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Mount.proto

#ifndef PROTOBUF_net_2fMount_2eproto__INCLUDED
#define PROTOBUF_net_2fMount_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fMount_2eproto();
void protobuf_AssignDesc_net_2fMount_2eproto();
void protobuf_ShutdownFile_net_2fMount_2eproto();

class TMountEquip;
class MountSingleInfo;
class TOtherMountSingleInfo;
class TOtherMountEquip;
class TMountGetInfoRsp;
class TMountLevelUpReq;
class TMountSetFigureReq;
class TMountRebornReq;
class TMountEquipReq;
class TMountEquipMountReq;
class TMountEquipMountRsp;
class TMountEquipAspectMountReq;
class TMountNotify;
class TMountFigureNotify;
class TMountActivateBookReq;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TMountEquip</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMountEquip : public ::google::protobuf::Message {
 public:
  TMountEquip();
  virtual ~TMountEquip();

  TMountEquip(const TMountEquip& from);

  inline TMountEquip& operator=(const TMountEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMountEquip& default_instance();

  void Swap(TMountEquip* other);

  // implements Message ----------------------------------------------

  TMountEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMountEquip& from);
  void MergeFrom(const TMountEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ItemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMountEquip</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 ItemTid = 2;
  inline bool has_itemtid() const;
  inline void clear_itemtid();
  static const int kItemTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TMountEquip</name>
  	<Function>
  		<name>itemtid</name>
  		<replaceName>ItemTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemtid</name>
  		<replaceName>ItemTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemtid</name>
  		<replaceName>ItemTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemtid() const;
  inline void set_itemtid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TMountEquip)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemtid();
  inline void clear_has_itemtid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemtid_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TMountEquip* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>MountSingleInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class MountSingleInfo : public ::google::protobuf::Message {
 public:
  MountSingleInfo();
  virtual ~MountSingleInfo();

  MountSingleInfo(const MountSingleInfo& from);

  inline MountSingleInfo& operator=(const MountSingleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountSingleInfo& default_instance();

  void Swap(MountSingleInfo* other);

  // implements Message ----------------------------------------------

  MountSingleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountSingleInfo& from);
  void MergeFrom(const MountSingleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>MountSingleInfo</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 Figure = 2;
  inline bool has_figure() const;
  inline void clear_figure();
  static const int kFigureFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>MountSingleInfo</name>
  	<Function>
  		<name>figure</name>
  		<replaceName>Figure</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_figure</name>
  		<replaceName>Figure</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_figure</name>
  		<replaceName>Figure</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 figure() const;
  inline void set_figure(::google::protobuf::uint32 value);

  // optional uint64 ExpireTime = 3;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpireTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>MountSingleInfo</name>
  	<Function>
  		<name>expiretime</name>
  		<replaceName>ExpireTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_expiretime</name>
  		<replaceName>ExpireTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_expiretime</name>
  		<replaceName>ExpireTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint64 value);

  // optional uint32 MountTid = 4;
  inline bool has_mounttid() const;
  inline void clear_mounttid();
  static const int kMountTidFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>MountSingleInfo</name>
  	<Function>
  		<name>mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 mounttid() const;
  inline void set_mounttid(::google::protobuf::uint32 value);

  // repeated .pb.TMountEquip EquipArr = 5;
  inline int equiparr_size() const;
  inline void clear_equiparr();
  static const int kEquipArrFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>MountSingleInfo</name>
  	<Function>
  		<name>equiparr</name>
  		<replaceName>EquipArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_equiparr</name>
  		<replaceName>EquipArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_equiparr</name>
  		<replaceName>EquipArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_equiparr</name>
  		<replaceName>EquipArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>equiparr_size</name>
  		<replaceName>EquipArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TMountEquip& equiparr(int index) const;
  inline ::pb::TMountEquip* mutable_equiparr(int index);
  inline ::pb::TMountEquip* add_equiparr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TMountEquip >&
      equiparr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TMountEquip >*
      mutable_equiparr();

  // @@protoc_insertion_point(class_scope:pb.MountSingleInfo)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_figure();
  inline void clear_has_figure();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_mounttid();
  inline void clear_has_mounttid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 figure_;
  ::google::protobuf::uint64 expiretime_;
  ::google::protobuf::RepeatedPtrField< ::pb::TMountEquip > equiparr_;
  ::google::protobuf::uint32 mounttid_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static MountSingleInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOtherMountSingleInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOtherMountSingleInfo : public ::google::protobuf::Message {
 public:
  TOtherMountSingleInfo();
  virtual ~TOtherMountSingleInfo();

  TOtherMountSingleInfo(const TOtherMountSingleInfo& from);

  inline TOtherMountSingleInfo& operator=(const TOtherMountSingleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOtherMountSingleInfo& default_instance();

  void Swap(TOtherMountSingleInfo* other);

  // implements Message ----------------------------------------------

  TOtherMountSingleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOtherMountSingleInfo& from);
  void MergeFrom(const TOtherMountSingleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOtherMountSingleInfo</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 Figure = 2;
  inline bool has_figure() const;
  inline void clear_figure();
  static const int kFigureFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOtherMountSingleInfo</name>
  	<Function>
  		<name>figure</name>
  		<replaceName>Figure</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_figure</name>
  		<replaceName>Figure</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_figure</name>
  		<replaceName>Figure</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 figure() const;
  inline void set_figure(::google::protobuf::uint32 value);

  // optional uint64 ExpireTime = 3;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpireTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TOtherMountSingleInfo</name>
  	<Function>
  		<name>expiretime</name>
  		<replaceName>ExpireTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_expiretime</name>
  		<replaceName>ExpireTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_expiretime</name>
  		<replaceName>ExpireTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint64 value);

  // optional uint32 MountTid = 4;
  inline bool has_mounttid() const;
  inline void clear_mounttid();
  static const int kMountTidFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TOtherMountSingleInfo</name>
  	<Function>
  		<name>mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 mounttid() const;
  inline void set_mounttid(::google::protobuf::uint32 value);

  // repeated .pb.TOtherMountEquip EquipArr = 5;
  inline int equiparr_size() const;
  inline void clear_equiparr();
  static const int kEquipArrFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TOtherMountSingleInfo</name>
  	<Function>
  		<name>equiparr</name>
  		<replaceName>EquipArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_equiparr</name>
  		<replaceName>EquipArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_equiparr</name>
  		<replaceName>EquipArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_equiparr</name>
  		<replaceName>EquipArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>equiparr_size</name>
  		<replaceName>EquipArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOtherMountEquip& equiparr(int index) const;
  inline ::pb::TOtherMountEquip* mutable_equiparr(int index);
  inline ::pb::TOtherMountEquip* add_equiparr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TOtherMountEquip >&
      equiparr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TOtherMountEquip >*
      mutable_equiparr();

  // @@protoc_insertion_point(class_scope:pb.TOtherMountSingleInfo)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_figure();
  inline void clear_has_figure();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_mounttid();
  inline void clear_has_mounttid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 figure_;
  ::google::protobuf::uint64 expiretime_;
  ::google::protobuf::RepeatedPtrField< ::pb::TOtherMountEquip > equiparr_;
  ::google::protobuf::uint32 mounttid_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TOtherMountSingleInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOtherMountEquip</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOtherMountEquip : public ::google::protobuf::Message {
 public:
  TOtherMountEquip();
  virtual ~TOtherMountEquip();

  TOtherMountEquip(const TOtherMountEquip& from);

  inline TOtherMountEquip& operator=(const TOtherMountEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOtherMountEquip& default_instance();

  void Swap(TOtherMountEquip* other);

  // implements Message ----------------------------------------------

  TOtherMountEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOtherMountEquip& from);
  void MergeFrom(const TOtherMountEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ItemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOtherMountEquip</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 ItemTid = 2;
  inline bool has_itemtid() const;
  inline void clear_itemtid();
  static const int kItemTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOtherMountEquip</name>
  	<Function>
  		<name>itemtid</name>
  		<replaceName>ItemTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemtid</name>
  		<replaceName>ItemTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemtid</name>
  		<replaceName>ItemTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemtid() const;
  inline void set_itemtid(::google::protobuf::uint32 value);

  // optional uint32 Exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TOtherMountEquip</name>
  	<Function>
  		<name>exp</name>
  		<replaceName>Exp</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_exp</name>
  		<replaceName>Exp</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_exp</name>
  		<replaceName>Exp</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOtherMountEquip)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemtid();
  inline void clear_has_itemtid();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemtid_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TOtherMountEquip* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMountGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMountGetInfoRsp : public ::google::protobuf::Message {
 public:
  TMountGetInfoRsp();
  virtual ~TMountGetInfoRsp();

  TMountGetInfoRsp(const TMountGetInfoRsp& from);

  inline TMountGetInfoRsp& operator=(const TMountGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMountGetInfoRsp& default_instance();

  void Swap(TMountGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TMountGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMountGetInfoRsp& from);
  void MergeFrom(const TMountGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 CurMount = 1;
  inline bool has_curmount() const;
  inline void clear_curmount();
  static const int kCurMountFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMountGetInfoRsp</name>
  	<Function>
  		<name>curmount</name>
  		<replaceName>CurMount</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_curmount</name>
  		<replaceName>CurMount</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_curmount</name>
  		<replaceName>CurMount</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 curmount() const;
  inline void set_curmount(::google::protobuf::uint32 value);

  // repeated .pb.MountSingleInfo MountArr = 2;
  inline int mountarr_size() const;
  inline void clear_mountarr();
  static const int kMountArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TMountGetInfoRsp</name>
  	<Function>
  		<name>mountarr</name>
  		<replaceName>MountArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_mountarr</name>
  		<replaceName>MountArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_mountarr</name>
  		<replaceName>MountArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mountarr</name>
  		<replaceName>MountArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mountarr_size</name>
  		<replaceName>MountArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::MountSingleInfo& mountarr(int index) const;
  inline ::pb::MountSingleInfo* mutable_mountarr(int index);
  inline ::pb::MountSingleInfo* add_mountarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::MountSingleInfo >&
      mountarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::MountSingleInfo >*
      mutable_mountarr();

  // repeated uint32 FigureArr = 3;
  inline int figurearr_size() const;
  inline void clear_figurearr();
  static const int kFigureArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TMountGetInfoRsp</name>
  	<Function>
  		<name>figurearr</name>
  		<replaceName>FigureArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_figurearr</name>
  		<replaceName>FigureArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_figurearr</name>
  		<replaceName>FigureArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_figurearr</name>
  		<replaceName>FigureArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>figurearr_size</name>
  		<replaceName>FigureArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 figurearr(int index) const;
  inline void set_figurearr(int index, ::google::protobuf::uint32 value);
  inline void add_figurearr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      figurearr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_figurearr();

  // repeated uint32 ActiveBookIdArr = 4;
  inline int activebookidarr_size() const;
  inline void clear_activebookidarr();
  static const int kActiveBookIdArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TMountGetInfoRsp</name>
  	<Function>
  		<name>activebookidarr</name>
  		<replaceName>ActiveBookIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_activebookidarr</name>
  		<replaceName>ActiveBookIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_activebookidarr</name>
  		<replaceName>ActiveBookIdArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_activebookidarr</name>
  		<replaceName>ActiveBookIdArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>activebookidarr_size</name>
  		<replaceName>ActiveBookIdArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 activebookidarr(int index) const;
  inline void set_activebookidarr(int index, ::google::protobuf::uint32 value);
  inline void add_activebookidarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      activebookidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_activebookidarr();

  // optional uint32 CurAspectMount = 5;
  inline bool has_curaspectmount() const;
  inline void clear_curaspectmount();
  static const int kCurAspectMountFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TMountGetInfoRsp</name>
  	<Function>
  		<name>curaspectmount</name>
  		<replaceName>CurAspectMount</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_curaspectmount</name>
  		<replaceName>CurAspectMount</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_curaspectmount</name>
  		<replaceName>CurAspectMount</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 curaspectmount() const;
  inline void set_curaspectmount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TMountGetInfoRsp)
 private:
  inline void set_has_curmount();
  inline void clear_has_curmount();
  inline void set_has_curaspectmount();
  inline void clear_has_curaspectmount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::MountSingleInfo > mountarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > figurearr_;
  ::google::protobuf::uint32 curmount_;
  ::google::protobuf::uint32 curaspectmount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > activebookidarr_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TMountGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMountLevelUpReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMountLevelUpReq : public ::google::protobuf::Message {
 public:
  TMountLevelUpReq();
  virtual ~TMountLevelUpReq();

  TMountLevelUpReq(const TMountLevelUpReq& from);

  inline TMountLevelUpReq& operator=(const TMountLevelUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMountLevelUpReq& default_instance();

  void Swap(TMountLevelUpReq* other);

  // implements Message ----------------------------------------------

  TMountLevelUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMountLevelUpReq& from);
  void MergeFrom(const TMountLevelUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 MountTid = 1;
  inline bool has_mounttid() const;
  inline void clear_mounttid();
  static const int kMountTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMountLevelUpReq</name>
  	<Function>
  		<name>mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 mounttid() const;
  inline void set_mounttid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TMountLevelUpReq)
 private:
  inline void set_has_mounttid();
  inline void clear_has_mounttid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mounttid_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TMountLevelUpReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMountSetFigureReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMountSetFigureReq : public ::google::protobuf::Message {
 public:
  TMountSetFigureReq();
  virtual ~TMountSetFigureReq();

  TMountSetFigureReq(const TMountSetFigureReq& from);

  inline TMountSetFigureReq& operator=(const TMountSetFigureReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMountSetFigureReq& default_instance();

  void Swap(TMountSetFigureReq* other);

  // implements Message ----------------------------------------------

  TMountSetFigureReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMountSetFigureReq& from);
  void MergeFrom(const TMountSetFigureReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 MountTid = 2;
  inline bool has_mounttid() const;
  inline void clear_mounttid();
  static const int kMountTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TMountSetFigureReq</name>
  	<Function>
  		<name>mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 mounttid() const;
  inline void set_mounttid(::google::protobuf::uint32 value);

  // optional uint32 FigureId = 1;
  inline bool has_figureid() const;
  inline void clear_figureid();
  static const int kFigureIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMountSetFigureReq</name>
  	<Function>
  		<name>figureid</name>
  		<replaceName>FigureId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_figureid</name>
  		<replaceName>FigureId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_figureid</name>
  		<replaceName>FigureId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 figureid() const;
  inline void set_figureid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TMountSetFigureReq)
 private:
  inline void set_has_mounttid();
  inline void clear_has_mounttid();
  inline void set_has_figureid();
  inline void clear_has_figureid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mounttid_;
  ::google::protobuf::uint32 figureid_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TMountSetFigureReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMountRebornReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMountRebornReq : public ::google::protobuf::Message {
 public:
  TMountRebornReq();
  virtual ~TMountRebornReq();

  TMountRebornReq(const TMountRebornReq& from);

  inline TMountRebornReq& operator=(const TMountRebornReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMountRebornReq& default_instance();

  void Swap(TMountRebornReq* other);

  // implements Message ----------------------------------------------

  TMountRebornReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMountRebornReq& from);
  void MergeFrom(const TMountRebornReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 MountTid = 1;
  inline int mounttid_size() const;
  inline void clear_mounttid();
  static const int kMountTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMountRebornReq</name>
  	<Function>
  		<name>mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mounttid_size</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 mounttid(int index) const;
  inline void set_mounttid(int index, ::google::protobuf::uint32 value);
  inline void add_mounttid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mounttid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mounttid();

  // @@protoc_insertion_point(class_scope:pb.TMountRebornReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mounttid_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TMountRebornReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMountEquipReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMountEquipReq : public ::google::protobuf::Message {
 public:
  TMountEquipReq();
  virtual ~TMountEquipReq();

  TMountEquipReq(const TMountEquipReq& from);

  inline TMountEquipReq& operator=(const TMountEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMountEquipReq& default_instance();

  void Swap(TMountEquipReq* other);

  // implements Message ----------------------------------------------

  TMountEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMountEquipReq& from);
  void MergeFrom(const TMountEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 MountTid = 1;
  inline bool has_mounttid() const;
  inline void clear_mounttid();
  static const int kMountTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMountEquipReq</name>
  	<Function>
  		<name>mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 mounttid() const;
  inline void set_mounttid(::google::protobuf::uint32 value);

  // optional uint32 PreItemId = 2;
  inline bool has_preitemid() const;
  inline void clear_preitemid();
  static const int kPreItemIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TMountEquipReq</name>
  	<Function>
  		<name>preitemid</name>
  		<replaceName>PreItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_preitemid</name>
  		<replaceName>PreItemId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_preitemid</name>
  		<replaceName>PreItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 preitemid() const;
  inline void set_preitemid(::google::protobuf::uint32 value);

  // optional uint32 ItemId = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TMountEquipReq</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TMountEquipReq)
 private:
  inline void set_has_mounttid();
  inline void clear_has_mounttid();
  inline void set_has_preitemid();
  inline void clear_has_preitemid();
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mounttid_;
  ::google::protobuf::uint32 preitemid_;
  ::google::protobuf::uint32 itemid_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TMountEquipReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMountEquipMountReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMountEquipMountReq : public ::google::protobuf::Message {
 public:
  TMountEquipMountReq();
  virtual ~TMountEquipMountReq();

  TMountEquipMountReq(const TMountEquipMountReq& from);

  inline TMountEquipMountReq& operator=(const TMountEquipMountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMountEquipMountReq& default_instance();

  void Swap(TMountEquipMountReq* other);

  // implements Message ----------------------------------------------

  TMountEquipMountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMountEquipMountReq& from);
  void MergeFrom(const TMountEquipMountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 MountTid = 1;
  inline bool has_mounttid() const;
  inline void clear_mounttid();
  static const int kMountTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMountEquipMountReq</name>
  	<Function>
  		<name>mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 mounttid() const;
  inline void set_mounttid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TMountEquipMountReq)
 private:
  inline void set_has_mounttid();
  inline void clear_has_mounttid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mounttid_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TMountEquipMountReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMountEquipMountRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMountEquipMountRsp : public ::google::protobuf::Message {
 public:
  TMountEquipMountRsp();
  virtual ~TMountEquipMountRsp();

  TMountEquipMountRsp(const TMountEquipMountRsp& from);

  inline TMountEquipMountRsp& operator=(const TMountEquipMountRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMountEquipMountRsp& default_instance();

  void Swap(TMountEquipMountRsp* other);

  // implements Message ----------------------------------------------

  TMountEquipMountRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMountEquipMountRsp& from);
  void MergeFrom(const TMountEquipMountRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ReturnItem = 1;
  inline int returnitem_size() const;
  inline void clear_returnitem();
  static const int kReturnItemFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMountEquipMountRsp</name>
  	<Function>
  		<name>returnitem</name>
  		<replaceName>ReturnItem</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_returnitem</name>
  		<replaceName>ReturnItem</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_returnitem</name>
  		<replaceName>ReturnItem</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_returnitem</name>
  		<replaceName>ReturnItem</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>returnitem_size</name>
  		<replaceName>ReturnItem</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& returnitem(int index) const;
  inline ::pb::TCommonReward* mutable_returnitem(int index);
  inline ::pb::TCommonReward* add_returnitem();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      returnitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_returnitem();

  // repeated .pb.MountSingleInfo MountArr = 2;
  inline int mountarr_size() const;
  inline void clear_mountarr();
  static const int kMountArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TMountEquipMountRsp</name>
  	<Function>
  		<name>mountarr</name>
  		<replaceName>MountArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_mountarr</name>
  		<replaceName>MountArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_mountarr</name>
  		<replaceName>MountArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mountarr</name>
  		<replaceName>MountArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mountarr_size</name>
  		<replaceName>MountArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::MountSingleInfo& mountarr(int index) const;
  inline ::pb::MountSingleInfo* mutable_mountarr(int index);
  inline ::pb::MountSingleInfo* add_mountarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::MountSingleInfo >&
      mountarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::MountSingleInfo >*
      mutable_mountarr();

  // @@protoc_insertion_point(class_scope:pb.TMountEquipMountRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > returnitem_;
  ::google::protobuf::RepeatedPtrField< ::pb::MountSingleInfo > mountarr_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TMountEquipMountRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMountEquipAspectMountReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMountEquipAspectMountReq : public ::google::protobuf::Message {
 public:
  TMountEquipAspectMountReq();
  virtual ~TMountEquipAspectMountReq();

  TMountEquipAspectMountReq(const TMountEquipAspectMountReq& from);

  inline TMountEquipAspectMountReq& operator=(const TMountEquipAspectMountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMountEquipAspectMountReq& default_instance();

  void Swap(TMountEquipAspectMountReq* other);

  // implements Message ----------------------------------------------

  TMountEquipAspectMountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMountEquipAspectMountReq& from);
  void MergeFrom(const TMountEquipAspectMountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 MountTid = 1;
  inline bool has_mounttid() const;
  inline void clear_mounttid();
  static const int kMountTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMountEquipAspectMountReq</name>
  	<Function>
  		<name>mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 mounttid() const;
  inline void set_mounttid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TMountEquipAspectMountReq)
 private:
  inline void set_has_mounttid();
  inline void clear_has_mounttid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mounttid_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TMountEquipAspectMountReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMountNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMountNotify : public ::google::protobuf::Message {
 public:
  TMountNotify();
  virtual ~TMountNotify();

  TMountNotify(const TMountNotify& from);

  inline TMountNotify& operator=(const TMountNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMountNotify& default_instance();

  void Swap(TMountNotify* other);

  // implements Message ----------------------------------------------

  TMountNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMountNotify& from);
  void MergeFrom(const TMountNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 MountTid = 1;
  inline bool has_mounttid() const;
  inline void clear_mounttid();
  static const int kMountTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMountNotify</name>
  	<Function>
  		<name>mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mounttid</name>
  		<replaceName>MountTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 mounttid() const;
  inline void set_mounttid(::google::protobuf::uint32 value);

  // optional .pb.MountSingleInfo MountInfo = 2;
  inline bool has_mountinfo() const;
  inline void clear_mountinfo();
  static const int kMountInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TMountNotify</name>
  	<Function>
  		<name>mountinfo</name>
  		<replaceName>MountInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_mountinfo</name>
  		<replaceName>MountInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_mountinfo</name>
  		<replaceName>MountInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mountinfo</name>
  		<replaceName>MountInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::MountSingleInfo& mountinfo() const;
  inline ::pb::MountSingleInfo* mutable_mountinfo();
  inline ::pb::MountSingleInfo* release_mountinfo();
  inline void set_allocated_mountinfo(::pb::MountSingleInfo* mountinfo);

  // repeated .pb.TCommonReward RewardArr = 3;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TMountNotify</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarr(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarr(int index);
  inline ::pb::TCommonReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarr();

  // @@protoc_insertion_point(class_scope:pb.TMountNotify)
 private:
  inline void set_has_mounttid();
  inline void clear_has_mounttid();
  inline void set_has_mountinfo();
  inline void clear_has_mountinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::MountSingleInfo* mountinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarr_;
  ::google::protobuf::uint32 mounttid_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TMountNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMountFigureNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMountFigureNotify : public ::google::protobuf::Message {
 public:
  TMountFigureNotify();
  virtual ~TMountFigureNotify();

  TMountFigureNotify(const TMountFigureNotify& from);

  inline TMountFigureNotify& operator=(const TMountFigureNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMountFigureNotify& default_instance();

  void Swap(TMountFigureNotify* other);

  // implements Message ----------------------------------------------

  TMountFigureNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMountFigureNotify& from);
  void MergeFrom(const TMountFigureNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 FigureId = 1;
  inline bool has_figureid() const;
  inline void clear_figureid();
  static const int kFigureIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMountFigureNotify</name>
  	<Function>
  		<name>figureid</name>
  		<replaceName>FigureId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_figureid</name>
  		<replaceName>FigureId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_figureid</name>
  		<replaceName>FigureId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 figureid() const;
  inline void set_figureid(::google::protobuf::uint32 value);

  // optional uint32 Resolved = 2;
  inline bool has_resolved() const;
  inline void clear_resolved();
  static const int kResolvedFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TMountFigureNotify</name>
  	<Function>
  		<name>resolved</name>
  		<replaceName>Resolved</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_resolved</name>
  		<replaceName>Resolved</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_resolved</name>
  		<replaceName>Resolved</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 resolved() const;
  inline void set_resolved(::google::protobuf::uint32 value);

  // repeated .pb.TCommonReward RewardArr = 3;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TMountFigureNotify</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarr(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarr(int index);
  inline ::pb::TCommonReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarr();

  // @@protoc_insertion_point(class_scope:pb.TMountFigureNotify)
 private:
  inline void set_has_figureid();
  inline void clear_has_figureid();
  inline void set_has_resolved();
  inline void clear_has_resolved();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 figureid_;
  ::google::protobuf::uint32 resolved_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarr_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TMountFigureNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TMountActivateBookReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Mount.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TMountActivateBookReq : public ::google::protobuf::Message {
 public:
  TMountActivateBookReq();
  virtual ~TMountActivateBookReq();

  TMountActivateBookReq(const TMountActivateBookReq& from);

  inline TMountActivateBookReq& operator=(const TMountActivateBookReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TMountActivateBookReq& default_instance();

  void Swap(TMountActivateBookReq* other);

  // implements Message ----------------------------------------------

  TMountActivateBookReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TMountActivateBookReq& from);
  void MergeFrom(const TMountActivateBookReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 BookId = 1;
  inline bool has_bookid() const;
  inline void clear_bookid();
  static const int kBookIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TMountActivateBookReq</name>
  	<Function>
  		<name>bookid</name>
  		<replaceName>BookId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_bookid</name>
  		<replaceName>BookId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bookid</name>
  		<replaceName>BookId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 bookid() const;
  inline void set_bookid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TMountActivateBookReq)
 private:
  inline void set_has_bookid();
  inline void clear_has_bookid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 bookid_;
  friend void  protobuf_AddDesc_net_2fMount_2eproto();
  friend void protobuf_AssignDesc_net_2fMount_2eproto();
  friend void protobuf_ShutdownFile_net_2fMount_2eproto();

  void InitAsDefaultInstance();
  static TMountActivateBookReq* default_instance_;
};
// ===================================================================


// ===================================================================

// TMountEquip

// optional uint32 ItemId = 1;
inline bool TMountEquip::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMountEquip::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMountEquip::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMountEquip::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 TMountEquip::itemid() const {
  // @@protoc_insertion_point(field_get:pb.TMountEquip.ItemId)
  return itemid_;
}
inline void TMountEquip::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountEquip.ItemId)
}

// optional uint32 ItemTid = 2;
inline bool TMountEquip::has_itemtid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TMountEquip::set_has_itemtid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TMountEquip::clear_has_itemtid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TMountEquip::clear_itemtid() {
  itemtid_ = 0u;
  clear_has_itemtid();
}
inline ::google::protobuf::uint32 TMountEquip::itemtid() const {
  // @@protoc_insertion_point(field_get:pb.TMountEquip.ItemTid)
  return itemtid_;
}
inline void TMountEquip::set_itemtid(::google::protobuf::uint32 value) {
  set_has_itemtid();
  itemtid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountEquip.ItemTid)
}

// -------------------------------------------------------------------

// MountSingleInfo

// optional uint32 Level = 1;
inline bool MountSingleInfo::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountSingleInfo::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountSingleInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountSingleInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 MountSingleInfo::level() const {
  // @@protoc_insertion_point(field_get:pb.MountSingleInfo.Level)
  return level_;
}
inline void MountSingleInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.MountSingleInfo.Level)
}

// optional uint32 Figure = 2;
inline bool MountSingleInfo::has_figure() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountSingleInfo::set_has_figure() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountSingleInfo::clear_has_figure() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountSingleInfo::clear_figure() {
  figure_ = 0u;
  clear_has_figure();
}
inline ::google::protobuf::uint32 MountSingleInfo::figure() const {
  // @@protoc_insertion_point(field_get:pb.MountSingleInfo.Figure)
  return figure_;
}
inline void MountSingleInfo::set_figure(::google::protobuf::uint32 value) {
  set_has_figure();
  figure_ = value;
  // @@protoc_insertion_point(field_set:pb.MountSingleInfo.Figure)
}

// optional uint64 ExpireTime = 3;
inline bool MountSingleInfo::has_expiretime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountSingleInfo::set_has_expiretime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountSingleInfo::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountSingleInfo::clear_expiretime() {
  expiretime_ = GOOGLE_ULONGLONG(0);
  clear_has_expiretime();
}
inline ::google::protobuf::uint64 MountSingleInfo::expiretime() const {
  // @@protoc_insertion_point(field_get:pb.MountSingleInfo.ExpireTime)
  return expiretime_;
}
inline void MountSingleInfo::set_expiretime(::google::protobuf::uint64 value) {
  set_has_expiretime();
  expiretime_ = value;
  // @@protoc_insertion_point(field_set:pb.MountSingleInfo.ExpireTime)
}

// optional uint32 MountTid = 4;
inline bool MountSingleInfo::has_mounttid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MountSingleInfo::set_has_mounttid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MountSingleInfo::clear_has_mounttid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MountSingleInfo::clear_mounttid() {
  mounttid_ = 0u;
  clear_has_mounttid();
}
inline ::google::protobuf::uint32 MountSingleInfo::mounttid() const {
  // @@protoc_insertion_point(field_get:pb.MountSingleInfo.MountTid)
  return mounttid_;
}
inline void MountSingleInfo::set_mounttid(::google::protobuf::uint32 value) {
  set_has_mounttid();
  mounttid_ = value;
  // @@protoc_insertion_point(field_set:pb.MountSingleInfo.MountTid)
}

// repeated .pb.TMountEquip EquipArr = 5;
inline int MountSingleInfo::equiparr_size() const {
  return equiparr_.size();
}
inline void MountSingleInfo::clear_equiparr() {
  equiparr_.Clear();
}
inline const ::pb::TMountEquip& MountSingleInfo::equiparr(int index) const {
  // @@protoc_insertion_point(field_get:pb.MountSingleInfo.EquipArr)
  return equiparr_.Get(index);
}
inline ::pb::TMountEquip* MountSingleInfo::mutable_equiparr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.MountSingleInfo.EquipArr)
  return equiparr_.Mutable(index);
}
inline ::pb::TMountEquip* MountSingleInfo::add_equiparr() {
  // @@protoc_insertion_point(field_add:pb.MountSingleInfo.EquipArr)
  return equiparr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TMountEquip >&
MountSingleInfo::equiparr() const {
  // @@protoc_insertion_point(field_list:pb.MountSingleInfo.EquipArr)
  return equiparr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TMountEquip >*
MountSingleInfo::mutable_equiparr() {
  // @@protoc_insertion_point(field_mutable_list:pb.MountSingleInfo.EquipArr)
  return &equiparr_;
}

// -------------------------------------------------------------------

// TOtherMountSingleInfo

// optional uint32 Level = 1;
inline bool TOtherMountSingleInfo::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOtherMountSingleInfo::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOtherMountSingleInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOtherMountSingleInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TOtherMountSingleInfo::level() const {
  // @@protoc_insertion_point(field_get:pb.TOtherMountSingleInfo.Level)
  return level_;
}
inline void TOtherMountSingleInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.TOtherMountSingleInfo.Level)
}

// optional uint32 Figure = 2;
inline bool TOtherMountSingleInfo::has_figure() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TOtherMountSingleInfo::set_has_figure() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TOtherMountSingleInfo::clear_has_figure() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TOtherMountSingleInfo::clear_figure() {
  figure_ = 0u;
  clear_has_figure();
}
inline ::google::protobuf::uint32 TOtherMountSingleInfo::figure() const {
  // @@protoc_insertion_point(field_get:pb.TOtherMountSingleInfo.Figure)
  return figure_;
}
inline void TOtherMountSingleInfo::set_figure(::google::protobuf::uint32 value) {
  set_has_figure();
  figure_ = value;
  // @@protoc_insertion_point(field_set:pb.TOtherMountSingleInfo.Figure)
}

// optional uint64 ExpireTime = 3;
inline bool TOtherMountSingleInfo::has_expiretime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TOtherMountSingleInfo::set_has_expiretime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TOtherMountSingleInfo::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TOtherMountSingleInfo::clear_expiretime() {
  expiretime_ = GOOGLE_ULONGLONG(0);
  clear_has_expiretime();
}
inline ::google::protobuf::uint64 TOtherMountSingleInfo::expiretime() const {
  // @@protoc_insertion_point(field_get:pb.TOtherMountSingleInfo.ExpireTime)
  return expiretime_;
}
inline void TOtherMountSingleInfo::set_expiretime(::google::protobuf::uint64 value) {
  set_has_expiretime();
  expiretime_ = value;
  // @@protoc_insertion_point(field_set:pb.TOtherMountSingleInfo.ExpireTime)
}

// optional uint32 MountTid = 4;
inline bool TOtherMountSingleInfo::has_mounttid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TOtherMountSingleInfo::set_has_mounttid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TOtherMountSingleInfo::clear_has_mounttid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TOtherMountSingleInfo::clear_mounttid() {
  mounttid_ = 0u;
  clear_has_mounttid();
}
inline ::google::protobuf::uint32 TOtherMountSingleInfo::mounttid() const {
  // @@protoc_insertion_point(field_get:pb.TOtherMountSingleInfo.MountTid)
  return mounttid_;
}
inline void TOtherMountSingleInfo::set_mounttid(::google::protobuf::uint32 value) {
  set_has_mounttid();
  mounttid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOtherMountSingleInfo.MountTid)
}

// repeated .pb.TOtherMountEquip EquipArr = 5;
inline int TOtherMountSingleInfo::equiparr_size() const {
  return equiparr_.size();
}
inline void TOtherMountSingleInfo::clear_equiparr() {
  equiparr_.Clear();
}
inline const ::pb::TOtherMountEquip& TOtherMountSingleInfo::equiparr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOtherMountSingleInfo.EquipArr)
  return equiparr_.Get(index);
}
inline ::pb::TOtherMountEquip* TOtherMountSingleInfo::mutable_equiparr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOtherMountSingleInfo.EquipArr)
  return equiparr_.Mutable(index);
}
inline ::pb::TOtherMountEquip* TOtherMountSingleInfo::add_equiparr() {
  // @@protoc_insertion_point(field_add:pb.TOtherMountSingleInfo.EquipArr)
  return equiparr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TOtherMountEquip >&
TOtherMountSingleInfo::equiparr() const {
  // @@protoc_insertion_point(field_list:pb.TOtherMountSingleInfo.EquipArr)
  return equiparr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TOtherMountEquip >*
TOtherMountSingleInfo::mutable_equiparr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOtherMountSingleInfo.EquipArr)
  return &equiparr_;
}

// -------------------------------------------------------------------

// TOtherMountEquip

// optional uint32 ItemId = 1;
inline bool TOtherMountEquip::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOtherMountEquip::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOtherMountEquip::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOtherMountEquip::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 TOtherMountEquip::itemid() const {
  // @@protoc_insertion_point(field_get:pb.TOtherMountEquip.ItemId)
  return itemid_;
}
inline void TOtherMountEquip::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOtherMountEquip.ItemId)
}

// optional uint32 ItemTid = 2;
inline bool TOtherMountEquip::has_itemtid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TOtherMountEquip::set_has_itemtid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TOtherMountEquip::clear_has_itemtid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TOtherMountEquip::clear_itemtid() {
  itemtid_ = 0u;
  clear_has_itemtid();
}
inline ::google::protobuf::uint32 TOtherMountEquip::itemtid() const {
  // @@protoc_insertion_point(field_get:pb.TOtherMountEquip.ItemTid)
  return itemtid_;
}
inline void TOtherMountEquip::set_itemtid(::google::protobuf::uint32 value) {
  set_has_itemtid();
  itemtid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOtherMountEquip.ItemTid)
}

// optional uint32 Exp = 3;
inline bool TOtherMountEquip::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TOtherMountEquip::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TOtherMountEquip::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TOtherMountEquip::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 TOtherMountEquip::exp() const {
  // @@protoc_insertion_point(field_get:pb.TOtherMountEquip.Exp)
  return exp_;
}
inline void TOtherMountEquip::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:pb.TOtherMountEquip.Exp)
}

// -------------------------------------------------------------------

// TMountGetInfoRsp

// optional uint32 CurMount = 1;
inline bool TMountGetInfoRsp::has_curmount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMountGetInfoRsp::set_has_curmount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMountGetInfoRsp::clear_has_curmount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMountGetInfoRsp::clear_curmount() {
  curmount_ = 0u;
  clear_has_curmount();
}
inline ::google::protobuf::uint32 TMountGetInfoRsp::curmount() const {
  // @@protoc_insertion_point(field_get:pb.TMountGetInfoRsp.CurMount)
  return curmount_;
}
inline void TMountGetInfoRsp::set_curmount(::google::protobuf::uint32 value) {
  set_has_curmount();
  curmount_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountGetInfoRsp.CurMount)
}

// repeated .pb.MountSingleInfo MountArr = 2;
inline int TMountGetInfoRsp::mountarr_size() const {
  return mountarr_.size();
}
inline void TMountGetInfoRsp::clear_mountarr() {
  mountarr_.Clear();
}
inline const ::pb::MountSingleInfo& TMountGetInfoRsp::mountarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TMountGetInfoRsp.MountArr)
  return mountarr_.Get(index);
}
inline ::pb::MountSingleInfo* TMountGetInfoRsp::mutable_mountarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TMountGetInfoRsp.MountArr)
  return mountarr_.Mutable(index);
}
inline ::pb::MountSingleInfo* TMountGetInfoRsp::add_mountarr() {
  // @@protoc_insertion_point(field_add:pb.TMountGetInfoRsp.MountArr)
  return mountarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::MountSingleInfo >&
TMountGetInfoRsp::mountarr() const {
  // @@protoc_insertion_point(field_list:pb.TMountGetInfoRsp.MountArr)
  return mountarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::MountSingleInfo >*
TMountGetInfoRsp::mutable_mountarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TMountGetInfoRsp.MountArr)
  return &mountarr_;
}

// repeated uint32 FigureArr = 3;
inline int TMountGetInfoRsp::figurearr_size() const {
  return figurearr_.size();
}
inline void TMountGetInfoRsp::clear_figurearr() {
  figurearr_.Clear();
}
inline ::google::protobuf::uint32 TMountGetInfoRsp::figurearr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TMountGetInfoRsp.FigureArr)
  return figurearr_.Get(index);
}
inline void TMountGetInfoRsp::set_figurearr(int index, ::google::protobuf::uint32 value) {
  figurearr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TMountGetInfoRsp.FigureArr)
}
inline void TMountGetInfoRsp::add_figurearr(::google::protobuf::uint32 value) {
  figurearr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TMountGetInfoRsp.FigureArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TMountGetInfoRsp::figurearr() const {
  // @@protoc_insertion_point(field_list:pb.TMountGetInfoRsp.FigureArr)
  return figurearr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TMountGetInfoRsp::mutable_figurearr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TMountGetInfoRsp.FigureArr)
  return &figurearr_;
}

// repeated uint32 ActiveBookIdArr = 4;
inline int TMountGetInfoRsp::activebookidarr_size() const {
  return activebookidarr_.size();
}
inline void TMountGetInfoRsp::clear_activebookidarr() {
  activebookidarr_.Clear();
}
inline ::google::protobuf::uint32 TMountGetInfoRsp::activebookidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TMountGetInfoRsp.ActiveBookIdArr)
  return activebookidarr_.Get(index);
}
inline void TMountGetInfoRsp::set_activebookidarr(int index, ::google::protobuf::uint32 value) {
  activebookidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TMountGetInfoRsp.ActiveBookIdArr)
}
inline void TMountGetInfoRsp::add_activebookidarr(::google::protobuf::uint32 value) {
  activebookidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TMountGetInfoRsp.ActiveBookIdArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TMountGetInfoRsp::activebookidarr() const {
  // @@protoc_insertion_point(field_list:pb.TMountGetInfoRsp.ActiveBookIdArr)
  return activebookidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TMountGetInfoRsp::mutable_activebookidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TMountGetInfoRsp.ActiveBookIdArr)
  return &activebookidarr_;
}

// optional uint32 CurAspectMount = 5;
inline bool TMountGetInfoRsp::has_curaspectmount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TMountGetInfoRsp::set_has_curaspectmount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TMountGetInfoRsp::clear_has_curaspectmount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TMountGetInfoRsp::clear_curaspectmount() {
  curaspectmount_ = 0u;
  clear_has_curaspectmount();
}
inline ::google::protobuf::uint32 TMountGetInfoRsp::curaspectmount() const {
  // @@protoc_insertion_point(field_get:pb.TMountGetInfoRsp.CurAspectMount)
  return curaspectmount_;
}
inline void TMountGetInfoRsp::set_curaspectmount(::google::protobuf::uint32 value) {
  set_has_curaspectmount();
  curaspectmount_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountGetInfoRsp.CurAspectMount)
}

// -------------------------------------------------------------------

// TMountLevelUpReq

// optional uint32 MountTid = 1;
inline bool TMountLevelUpReq::has_mounttid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMountLevelUpReq::set_has_mounttid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMountLevelUpReq::clear_has_mounttid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMountLevelUpReq::clear_mounttid() {
  mounttid_ = 0u;
  clear_has_mounttid();
}
inline ::google::protobuf::uint32 TMountLevelUpReq::mounttid() const {
  // @@protoc_insertion_point(field_get:pb.TMountLevelUpReq.MountTid)
  return mounttid_;
}
inline void TMountLevelUpReq::set_mounttid(::google::protobuf::uint32 value) {
  set_has_mounttid();
  mounttid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountLevelUpReq.MountTid)
}

// -------------------------------------------------------------------

// TMountSetFigureReq

// optional uint32 MountTid = 2;
inline bool TMountSetFigureReq::has_mounttid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMountSetFigureReq::set_has_mounttid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMountSetFigureReq::clear_has_mounttid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMountSetFigureReq::clear_mounttid() {
  mounttid_ = 0u;
  clear_has_mounttid();
}
inline ::google::protobuf::uint32 TMountSetFigureReq::mounttid() const {
  // @@protoc_insertion_point(field_get:pb.TMountSetFigureReq.MountTid)
  return mounttid_;
}
inline void TMountSetFigureReq::set_mounttid(::google::protobuf::uint32 value) {
  set_has_mounttid();
  mounttid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountSetFigureReq.MountTid)
}

// optional uint32 FigureId = 1;
inline bool TMountSetFigureReq::has_figureid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TMountSetFigureReq::set_has_figureid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TMountSetFigureReq::clear_has_figureid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TMountSetFigureReq::clear_figureid() {
  figureid_ = 0u;
  clear_has_figureid();
}
inline ::google::protobuf::uint32 TMountSetFigureReq::figureid() const {
  // @@protoc_insertion_point(field_get:pb.TMountSetFigureReq.FigureId)
  return figureid_;
}
inline void TMountSetFigureReq::set_figureid(::google::protobuf::uint32 value) {
  set_has_figureid();
  figureid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountSetFigureReq.FigureId)
}

// -------------------------------------------------------------------

// TMountRebornReq

// repeated uint32 MountTid = 1;
inline int TMountRebornReq::mounttid_size() const {
  return mounttid_.size();
}
inline void TMountRebornReq::clear_mounttid() {
  mounttid_.Clear();
}
inline ::google::protobuf::uint32 TMountRebornReq::mounttid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TMountRebornReq.MountTid)
  return mounttid_.Get(index);
}
inline void TMountRebornReq::set_mounttid(int index, ::google::protobuf::uint32 value) {
  mounttid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TMountRebornReq.MountTid)
}
inline void TMountRebornReq::add_mounttid(::google::protobuf::uint32 value) {
  mounttid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TMountRebornReq.MountTid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TMountRebornReq::mounttid() const {
  // @@protoc_insertion_point(field_list:pb.TMountRebornReq.MountTid)
  return mounttid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TMountRebornReq::mutable_mounttid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TMountRebornReq.MountTid)
  return &mounttid_;
}

// -------------------------------------------------------------------

// TMountEquipReq

// optional uint32 MountTid = 1;
inline bool TMountEquipReq::has_mounttid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMountEquipReq::set_has_mounttid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMountEquipReq::clear_has_mounttid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMountEquipReq::clear_mounttid() {
  mounttid_ = 0u;
  clear_has_mounttid();
}
inline ::google::protobuf::uint32 TMountEquipReq::mounttid() const {
  // @@protoc_insertion_point(field_get:pb.TMountEquipReq.MountTid)
  return mounttid_;
}
inline void TMountEquipReq::set_mounttid(::google::protobuf::uint32 value) {
  set_has_mounttid();
  mounttid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountEquipReq.MountTid)
}

// optional uint32 PreItemId = 2;
inline bool TMountEquipReq::has_preitemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TMountEquipReq::set_has_preitemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TMountEquipReq::clear_has_preitemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TMountEquipReq::clear_preitemid() {
  preitemid_ = 0u;
  clear_has_preitemid();
}
inline ::google::protobuf::uint32 TMountEquipReq::preitemid() const {
  // @@protoc_insertion_point(field_get:pb.TMountEquipReq.PreItemId)
  return preitemid_;
}
inline void TMountEquipReq::set_preitemid(::google::protobuf::uint32 value) {
  set_has_preitemid();
  preitemid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountEquipReq.PreItemId)
}

// optional uint32 ItemId = 3;
inline bool TMountEquipReq::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TMountEquipReq::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TMountEquipReq::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TMountEquipReq::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 TMountEquipReq::itemid() const {
  // @@protoc_insertion_point(field_get:pb.TMountEquipReq.ItemId)
  return itemid_;
}
inline void TMountEquipReq::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountEquipReq.ItemId)
}

// -------------------------------------------------------------------

// TMountEquipMountReq

// optional uint32 MountTid = 1;
inline bool TMountEquipMountReq::has_mounttid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMountEquipMountReq::set_has_mounttid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMountEquipMountReq::clear_has_mounttid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMountEquipMountReq::clear_mounttid() {
  mounttid_ = 0u;
  clear_has_mounttid();
}
inline ::google::protobuf::uint32 TMountEquipMountReq::mounttid() const {
  // @@protoc_insertion_point(field_get:pb.TMountEquipMountReq.MountTid)
  return mounttid_;
}
inline void TMountEquipMountReq::set_mounttid(::google::protobuf::uint32 value) {
  set_has_mounttid();
  mounttid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountEquipMountReq.MountTid)
}

// -------------------------------------------------------------------

// TMountEquipMountRsp

// repeated .pb.TCommonReward ReturnItem = 1;
inline int TMountEquipMountRsp::returnitem_size() const {
  return returnitem_.size();
}
inline void TMountEquipMountRsp::clear_returnitem() {
  returnitem_.Clear();
}
inline const ::pb::TCommonReward& TMountEquipMountRsp::returnitem(int index) const {
  // @@protoc_insertion_point(field_get:pb.TMountEquipMountRsp.ReturnItem)
  return returnitem_.Get(index);
}
inline ::pb::TCommonReward* TMountEquipMountRsp::mutable_returnitem(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TMountEquipMountRsp.ReturnItem)
  return returnitem_.Mutable(index);
}
inline ::pb::TCommonReward* TMountEquipMountRsp::add_returnitem() {
  // @@protoc_insertion_point(field_add:pb.TMountEquipMountRsp.ReturnItem)
  return returnitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TMountEquipMountRsp::returnitem() const {
  // @@protoc_insertion_point(field_list:pb.TMountEquipMountRsp.ReturnItem)
  return returnitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TMountEquipMountRsp::mutable_returnitem() {
  // @@protoc_insertion_point(field_mutable_list:pb.TMountEquipMountRsp.ReturnItem)
  return &returnitem_;
}

// repeated .pb.MountSingleInfo MountArr = 2;
inline int TMountEquipMountRsp::mountarr_size() const {
  return mountarr_.size();
}
inline void TMountEquipMountRsp::clear_mountarr() {
  mountarr_.Clear();
}
inline const ::pb::MountSingleInfo& TMountEquipMountRsp::mountarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TMountEquipMountRsp.MountArr)
  return mountarr_.Get(index);
}
inline ::pb::MountSingleInfo* TMountEquipMountRsp::mutable_mountarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TMountEquipMountRsp.MountArr)
  return mountarr_.Mutable(index);
}
inline ::pb::MountSingleInfo* TMountEquipMountRsp::add_mountarr() {
  // @@protoc_insertion_point(field_add:pb.TMountEquipMountRsp.MountArr)
  return mountarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::MountSingleInfo >&
TMountEquipMountRsp::mountarr() const {
  // @@protoc_insertion_point(field_list:pb.TMountEquipMountRsp.MountArr)
  return mountarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::MountSingleInfo >*
TMountEquipMountRsp::mutable_mountarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TMountEquipMountRsp.MountArr)
  return &mountarr_;
}

// -------------------------------------------------------------------

// TMountEquipAspectMountReq

// optional uint32 MountTid = 1;
inline bool TMountEquipAspectMountReq::has_mounttid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMountEquipAspectMountReq::set_has_mounttid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMountEquipAspectMountReq::clear_has_mounttid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMountEquipAspectMountReq::clear_mounttid() {
  mounttid_ = 0u;
  clear_has_mounttid();
}
inline ::google::protobuf::uint32 TMountEquipAspectMountReq::mounttid() const {
  // @@protoc_insertion_point(field_get:pb.TMountEquipAspectMountReq.MountTid)
  return mounttid_;
}
inline void TMountEquipAspectMountReq::set_mounttid(::google::protobuf::uint32 value) {
  set_has_mounttid();
  mounttid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountEquipAspectMountReq.MountTid)
}

// -------------------------------------------------------------------

// TMountNotify

// optional uint32 MountTid = 1;
inline bool TMountNotify::has_mounttid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMountNotify::set_has_mounttid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMountNotify::clear_has_mounttid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMountNotify::clear_mounttid() {
  mounttid_ = 0u;
  clear_has_mounttid();
}
inline ::google::protobuf::uint32 TMountNotify::mounttid() const {
  // @@protoc_insertion_point(field_get:pb.TMountNotify.MountTid)
  return mounttid_;
}
inline void TMountNotify::set_mounttid(::google::protobuf::uint32 value) {
  set_has_mounttid();
  mounttid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountNotify.MountTid)
}

// optional .pb.MountSingleInfo MountInfo = 2;
inline bool TMountNotify::has_mountinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TMountNotify::set_has_mountinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TMountNotify::clear_has_mountinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TMountNotify::clear_mountinfo() {
  if (mountinfo_ != NULL) mountinfo_->::pb::MountSingleInfo::Clear();
  clear_has_mountinfo();
}
inline const ::pb::MountSingleInfo& TMountNotify::mountinfo() const {
  // @@protoc_insertion_point(field_get:pb.TMountNotify.MountInfo)
  return mountinfo_ != NULL ? *mountinfo_ : *default_instance_->mountinfo_;
}
inline ::pb::MountSingleInfo* TMountNotify::mutable_mountinfo() {
  set_has_mountinfo();
  if (mountinfo_ == NULL) mountinfo_ = new ::pb::MountSingleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TMountNotify.MountInfo)
  return mountinfo_;
}
inline ::pb::MountSingleInfo* TMountNotify::release_mountinfo() {
  clear_has_mountinfo();
  ::pb::MountSingleInfo* temp = mountinfo_;
  mountinfo_ = NULL;
  return temp;
}
inline void TMountNotify::set_allocated_mountinfo(::pb::MountSingleInfo* mountinfo) {
  delete mountinfo_;
  mountinfo_ = mountinfo;
  if (mountinfo) {
    set_has_mountinfo();
  } else {
    clear_has_mountinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TMountNotify.MountInfo)
}

// repeated .pb.TCommonReward RewardArr = 3;
inline int TMountNotify::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TMountNotify::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TCommonReward& TMountNotify::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TMountNotify.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TCommonReward* TMountNotify::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TMountNotify.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TCommonReward* TMountNotify::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TMountNotify.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TMountNotify::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TMountNotify.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TMountNotify::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TMountNotify.RewardArr)
  return &rewardarr_;
}

// -------------------------------------------------------------------

// TMountFigureNotify

// optional uint32 FigureId = 1;
inline bool TMountFigureNotify::has_figureid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMountFigureNotify::set_has_figureid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMountFigureNotify::clear_has_figureid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMountFigureNotify::clear_figureid() {
  figureid_ = 0u;
  clear_has_figureid();
}
inline ::google::protobuf::uint32 TMountFigureNotify::figureid() const {
  // @@protoc_insertion_point(field_get:pb.TMountFigureNotify.FigureId)
  return figureid_;
}
inline void TMountFigureNotify::set_figureid(::google::protobuf::uint32 value) {
  set_has_figureid();
  figureid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountFigureNotify.FigureId)
}

// optional uint32 Resolved = 2;
inline bool TMountFigureNotify::has_resolved() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TMountFigureNotify::set_has_resolved() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TMountFigureNotify::clear_has_resolved() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TMountFigureNotify::clear_resolved() {
  resolved_ = 0u;
  clear_has_resolved();
}
inline ::google::protobuf::uint32 TMountFigureNotify::resolved() const {
  // @@protoc_insertion_point(field_get:pb.TMountFigureNotify.Resolved)
  return resolved_;
}
inline void TMountFigureNotify::set_resolved(::google::protobuf::uint32 value) {
  set_has_resolved();
  resolved_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountFigureNotify.Resolved)
}

// repeated .pb.TCommonReward RewardArr = 3;
inline int TMountFigureNotify::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TMountFigureNotify::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TCommonReward& TMountFigureNotify::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TMountFigureNotify.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TCommonReward* TMountFigureNotify::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TMountFigureNotify.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TCommonReward* TMountFigureNotify::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TMountFigureNotify.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TMountFigureNotify::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TMountFigureNotify.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TMountFigureNotify::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TMountFigureNotify.RewardArr)
  return &rewardarr_;
}

// -------------------------------------------------------------------

// TMountActivateBookReq

// optional uint32 BookId = 1;
inline bool TMountActivateBookReq::has_bookid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TMountActivateBookReq::set_has_bookid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TMountActivateBookReq::clear_has_bookid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TMountActivateBookReq::clear_bookid() {
  bookid_ = 0u;
  clear_has_bookid();
}
inline ::google::protobuf::uint32 TMountActivateBookReq::bookid() const {
  // @@protoc_insertion_point(field_get:pb.TMountActivateBookReq.BookId)
  return bookid_;
}
inline void TMountActivateBookReq::set_bookid(::google::protobuf::uint32 value) {
  set_has_bookid();
  bookid_ = value;
  // @@protoc_insertion_point(field_set:pb.TMountActivateBookReq.BookId)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fMount_2eproto__INCLUDED
