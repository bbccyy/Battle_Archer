// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/FunGift.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/FunGift.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TFunGiftBuyInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFunGiftBuyInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFunGiftInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFunGiftInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFunGiftGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFunGiftGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFunGiftGetSingleInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFunGiftGetSingleInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFunGiftGetSingleInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFunGiftGetSingleInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFunGiftBuyFreeGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFunGiftBuyFreeGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFunGiftBuyFreeGiftRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFunGiftBuyFreeGiftRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFunGiftBuyGoldGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFunGiftBuyGoldGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFunGiftBuyGoldGiftRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFunGiftBuyGoldGiftRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFunGiftRmbGiftChangeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFunGiftRmbGiftChangeNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fFunGift_2eproto() {
  protobuf_AddDesc_net_2fFunGift_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/FunGift.proto");
  GOOGLE_CHECK(file != NULL);
  TFunGiftBuyInfo_descriptor_ = file->message_type(0);
  static const int TFunGiftBuyInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyInfo, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyInfo, buytime_),
  };
  TFunGiftBuyInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFunGiftBuyInfo_descriptor_,
      TFunGiftBuyInfo::default_instance_,
      TFunGiftBuyInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFunGiftBuyInfo));
  TFunGiftInfo_descriptor_ = file->message_type(1);
  static const int TFunGiftInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftInfo, confid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftInfo, starttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftInfo, arrrmbgiftbuyinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftInfo, arrgoldgiftbuyinfo_),
  };
  TFunGiftInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFunGiftInfo_descriptor_,
      TFunGiftInfo::default_instance_,
      TFunGiftInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFunGiftInfo));
  TFunGiftGetInfoRsp_descriptor_ = file->message_type(2);
  static const int TFunGiftGetInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftGetInfoRsp, arrfungiftinfo_),
  };
  TFunGiftGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFunGiftGetInfoRsp_descriptor_,
      TFunGiftGetInfoRsp::default_instance_,
      TFunGiftGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFunGiftGetInfoRsp));
  TFunGiftGetSingleInfoReq_descriptor_ = file->message_type(3);
  static const int TFunGiftGetSingleInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftGetSingleInfoReq, confid_),
  };
  TFunGiftGetSingleInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFunGiftGetSingleInfoReq_descriptor_,
      TFunGiftGetSingleInfoReq::default_instance_,
      TFunGiftGetSingleInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftGetSingleInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftGetSingleInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFunGiftGetSingleInfoReq));
  TFunGiftGetSingleInfoRsp_descriptor_ = file->message_type(4);
  static const int TFunGiftGetSingleInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftGetSingleInfoRsp, fungiftinfo_),
  };
  TFunGiftGetSingleInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFunGiftGetSingleInfoRsp_descriptor_,
      TFunGiftGetSingleInfoRsp::default_instance_,
      TFunGiftGetSingleInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftGetSingleInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftGetSingleInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFunGiftGetSingleInfoRsp));
  TFunGiftBuyFreeGiftReq_descriptor_ = file->message_type(5);
  static const int TFunGiftBuyFreeGiftReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyFreeGiftReq, confid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyFreeGiftReq, giftid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyFreeGiftReq, num_),
  };
  TFunGiftBuyFreeGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFunGiftBuyFreeGiftReq_descriptor_,
      TFunGiftBuyFreeGiftReq::default_instance_,
      TFunGiftBuyFreeGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyFreeGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyFreeGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFunGiftBuyFreeGiftReq));
  TFunGiftBuyFreeGiftRsp_descriptor_ = file->message_type(6);
  static const int TFunGiftBuyFreeGiftRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyFreeGiftRsp, arrreward_),
  };
  TFunGiftBuyFreeGiftRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFunGiftBuyFreeGiftRsp_descriptor_,
      TFunGiftBuyFreeGiftRsp::default_instance_,
      TFunGiftBuyFreeGiftRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyFreeGiftRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyFreeGiftRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFunGiftBuyFreeGiftRsp));
  TFunGiftBuyGoldGiftReq_descriptor_ = file->message_type(7);
  static const int TFunGiftBuyGoldGiftReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyGoldGiftReq, confid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyGoldGiftReq, giftid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyGoldGiftReq, num_),
  };
  TFunGiftBuyGoldGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFunGiftBuyGoldGiftReq_descriptor_,
      TFunGiftBuyGoldGiftReq::default_instance_,
      TFunGiftBuyGoldGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyGoldGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyGoldGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFunGiftBuyGoldGiftReq));
  TFunGiftBuyGoldGiftRsp_descriptor_ = file->message_type(8);
  static const int TFunGiftBuyGoldGiftRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyGoldGiftRsp, arrreward_),
  };
  TFunGiftBuyGoldGiftRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFunGiftBuyGoldGiftRsp_descriptor_,
      TFunGiftBuyGoldGiftRsp::default_instance_,
      TFunGiftBuyGoldGiftRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyGoldGiftRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftBuyGoldGiftRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFunGiftBuyGoldGiftRsp));
  TFunGiftRmbGiftChangeNotify_descriptor_ = file->message_type(9);
  static const int TFunGiftRmbGiftChangeNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftRmbGiftChangeNotify, confid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftRmbGiftChangeNotify, arrrmbgiftbuyinfo_),
  };
  TFunGiftRmbGiftChangeNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFunGiftRmbGiftChangeNotify_descriptor_,
      TFunGiftRmbGiftChangeNotify::default_instance_,
      TFunGiftRmbGiftChangeNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftRmbGiftChangeNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFunGiftRmbGiftChangeNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFunGiftRmbGiftChangeNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fFunGift_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFunGiftBuyInfo_descriptor_, &TFunGiftBuyInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFunGiftInfo_descriptor_, &TFunGiftInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFunGiftGetInfoRsp_descriptor_, &TFunGiftGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFunGiftGetSingleInfoReq_descriptor_, &TFunGiftGetSingleInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFunGiftGetSingleInfoRsp_descriptor_, &TFunGiftGetSingleInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFunGiftBuyFreeGiftReq_descriptor_, &TFunGiftBuyFreeGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFunGiftBuyFreeGiftRsp_descriptor_, &TFunGiftBuyFreeGiftRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFunGiftBuyGoldGiftReq_descriptor_, &TFunGiftBuyGoldGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFunGiftBuyGoldGiftRsp_descriptor_, &TFunGiftBuyGoldGiftRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFunGiftRmbGiftChangeNotify_descriptor_, &TFunGiftRmbGiftChangeNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fFunGift_2eproto() {
  delete TFunGiftBuyInfo::default_instance_;
  delete TFunGiftBuyInfo_reflection_;
  delete TFunGiftInfo::default_instance_;
  delete TFunGiftInfo_reflection_;
  delete TFunGiftGetInfoRsp::default_instance_;
  delete TFunGiftGetInfoRsp_reflection_;
  delete TFunGiftGetSingleInfoReq::default_instance_;
  delete TFunGiftGetSingleInfoReq_reflection_;
  delete TFunGiftGetSingleInfoRsp::default_instance_;
  delete TFunGiftGetSingleInfoRsp_reflection_;
  delete TFunGiftBuyFreeGiftReq::default_instance_;
  delete TFunGiftBuyFreeGiftReq_reflection_;
  delete TFunGiftBuyFreeGiftRsp::default_instance_;
  delete TFunGiftBuyFreeGiftRsp_reflection_;
  delete TFunGiftBuyGoldGiftReq::default_instance_;
  delete TFunGiftBuyGoldGiftReq_reflection_;
  delete TFunGiftBuyGoldGiftRsp::default_instance_;
  delete TFunGiftBuyGoldGiftRsp_reflection_;
  delete TFunGiftRmbGiftChangeNotify::default_instance_;
  delete TFunGiftRmbGiftChangeNotify_reflection_;
}

void protobuf_AddDesc_net_2fFunGift_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021net/FunGift.proto\022\002pb\032\026net/CommonRewar"
    "d.proto\";\n\017TFunGiftBuyInfo\022\n\n\002Id\030\001 \001(\r\022\013"
    "\n\003Num\030\002 \001(\r\022\017\n\007BuyTime\030\003 \001(\004\"\222\001\n\014TFunGif"
    "tInfo\022\016\n\006ConfId\030\001 \001(\r\022\021\n\tStartTime\030\002 \001(\004"
    "\022.\n\021ArrRmbGiftBuyInfo\030\003 \003(\0132\023.pb.TFunGif"
    "tBuyInfo\022/\n\022ArrGoldGiftBuyInfo\030\004 \003(\0132\023.p"
    "b.TFunGiftBuyInfo\">\n\022TFunGiftGetInfoRsp\022"
    "(\n\016ArrFunGiftInfo\030\001 \003(\0132\020.pb.TFunGiftInf"
    "o\"*\n\030TFunGiftGetSingleInfoReq\022\016\n\006ConfId\030"
    "\001 \001(\r\"A\n\030TFunGiftGetSingleInfoRsp\022%\n\013Fun"
    "GiftInfo\030\001 \001(\0132\020.pb.TFunGiftInfo\"E\n\026TFun"
    "GiftBuyFreeGiftReq\022\016\n\006ConfId\030\001 \001(\r\022\016\n\006Gi"
    "ftId\030\002 \001(\r\022\013\n\003Num\030\003 \001(\r\">\n\026TFunGiftBuyFr"
    "eeGiftRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb.TCommo"
    "nReward\"E\n\026TFunGiftBuyGoldGiftReq\022\016\n\006Con"
    "fId\030\001 \001(\r\022\016\n\006GiftId\030\002 \001(\r\022\013\n\003Num\030\003 \001(\r\">"
    "\n\026TFunGiftBuyGoldGiftRsp\022$\n\tArrReward\030\001 "
    "\003(\0132\021.pb.TCommonReward\"]\n\033TFunGiftRmbGif"
    "tChangeNotify\022\016\n\006ConfId\030\001 \001(\r\022.\n\021ArrRmbG"
    "iftBuyInfo\030\002 \003(\0132\023.pb.TFunGiftBuyInfo", 797);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/FunGift.proto", &protobuf_RegisterTypes);
  TFunGiftBuyInfo::default_instance_ = new TFunGiftBuyInfo();
  TFunGiftInfo::default_instance_ = new TFunGiftInfo();
  TFunGiftGetInfoRsp::default_instance_ = new TFunGiftGetInfoRsp();
  TFunGiftGetSingleInfoReq::default_instance_ = new TFunGiftGetSingleInfoReq();
  TFunGiftGetSingleInfoRsp::default_instance_ = new TFunGiftGetSingleInfoRsp();
  TFunGiftBuyFreeGiftReq::default_instance_ = new TFunGiftBuyFreeGiftReq();
  TFunGiftBuyFreeGiftRsp::default_instance_ = new TFunGiftBuyFreeGiftRsp();
  TFunGiftBuyGoldGiftReq::default_instance_ = new TFunGiftBuyGoldGiftReq();
  TFunGiftBuyGoldGiftRsp::default_instance_ = new TFunGiftBuyGoldGiftRsp();
  TFunGiftRmbGiftChangeNotify::default_instance_ = new TFunGiftRmbGiftChangeNotify();
  TFunGiftBuyInfo::default_instance_->InitAsDefaultInstance();
  TFunGiftInfo::default_instance_->InitAsDefaultInstance();
  TFunGiftGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TFunGiftGetSingleInfoReq::default_instance_->InitAsDefaultInstance();
  TFunGiftGetSingleInfoRsp::default_instance_->InitAsDefaultInstance();
  TFunGiftBuyFreeGiftReq::default_instance_->InitAsDefaultInstance();
  TFunGiftBuyFreeGiftRsp::default_instance_->InitAsDefaultInstance();
  TFunGiftBuyGoldGiftReq::default_instance_->InitAsDefaultInstance();
  TFunGiftBuyGoldGiftRsp::default_instance_->InitAsDefaultInstance();
  TFunGiftRmbGiftChangeNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fFunGift_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fFunGift_2eproto {
  StaticDescriptorInitializer_net_2fFunGift_2eproto() {
    protobuf_AddDesc_net_2fFunGift_2eproto();
  }
} static_descriptor_initializer_net_2fFunGift_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TFunGiftBuyInfo::kIdFieldNumber;
const int TFunGiftBuyInfo::kNumFieldNumber;
const int TFunGiftBuyInfo::kBuyTimeFieldNumber;
#endif  // !_MSC_VER

TFunGiftBuyInfo::TFunGiftBuyInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFunGiftBuyInfo)
}

void TFunGiftBuyInfo::InitAsDefaultInstance() {
}

TFunGiftBuyInfo::TFunGiftBuyInfo(const TFunGiftBuyInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFunGiftBuyInfo)
}

void TFunGiftBuyInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  buytime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFunGiftBuyInfo::~TFunGiftBuyInfo() {
  // @@protoc_insertion_point(destructor:pb.TFunGiftBuyInfo)
  SharedDtor();
}

void TFunGiftBuyInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFunGiftBuyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFunGiftBuyInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFunGiftBuyInfo_descriptor_;
}

const TFunGiftBuyInfo& TFunGiftBuyInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFunGift_2eproto();
  return *default_instance_;
}

TFunGiftBuyInfo* TFunGiftBuyInfo::default_instance_ = NULL;

TFunGiftBuyInfo* TFunGiftBuyInfo::New() const {
  return new TFunGiftBuyInfo;
}

void TFunGiftBuyInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFunGiftBuyInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, buytime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFunGiftBuyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFunGiftBuyInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BuyTime;
        break;
      }

      // optional uint64 BuyTime = 3;
      case 3: {
        if (tag == 24) {
         parse_BuyTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &buytime_)));
          set_has_buytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFunGiftBuyInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFunGiftBuyInfo)
  return false;
#undef DO_
}

void TFunGiftBuyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFunGiftBuyInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  // optional uint64 BuyTime = 3;
  if (has_buytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->buytime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFunGiftBuyInfo)
}

::google::protobuf::uint8* TFunGiftBuyInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFunGiftBuyInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  // optional uint64 BuyTime = 3;
  if (has_buytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->buytime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFunGiftBuyInfo)
  return target;
}

int TFunGiftBuyInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint64 BuyTime = 3;
    if (has_buytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->buytime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFunGiftBuyInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFunGiftBuyInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFunGiftBuyInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFunGiftBuyInfo::MergeFrom(const TFunGiftBuyInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_buytime()) {
      set_buytime(from.buytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFunGiftBuyInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFunGiftBuyInfo::CopyFrom(const TFunGiftBuyInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFunGiftBuyInfo::IsInitialized() const {

  return true;
}

void TFunGiftBuyInfo::Swap(TFunGiftBuyInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(buytime_, other->buytime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFunGiftBuyInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFunGiftBuyInfo_descriptor_;
  metadata.reflection = TFunGiftBuyInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFunGiftInfo::kConfIdFieldNumber;
const int TFunGiftInfo::kStartTimeFieldNumber;
const int TFunGiftInfo::kArrRmbGiftBuyInfoFieldNumber;
const int TFunGiftInfo::kArrGoldGiftBuyInfoFieldNumber;
#endif  // !_MSC_VER

TFunGiftInfo::TFunGiftInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFunGiftInfo)
}

void TFunGiftInfo::InitAsDefaultInstance() {
}

TFunGiftInfo::TFunGiftInfo(const TFunGiftInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFunGiftInfo)
}

void TFunGiftInfo::SharedCtor() {
  _cached_size_ = 0;
  confid_ = 0u;
  starttime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFunGiftInfo::~TFunGiftInfo() {
  // @@protoc_insertion_point(destructor:pb.TFunGiftInfo)
  SharedDtor();
}

void TFunGiftInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFunGiftInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFunGiftInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFunGiftInfo_descriptor_;
}

const TFunGiftInfo& TFunGiftInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFunGift_2eproto();
  return *default_instance_;
}

TFunGiftInfo* TFunGiftInfo::default_instance_ = NULL;

TFunGiftInfo* TFunGiftInfo::New() const {
  return new TFunGiftInfo;
}

void TFunGiftInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    confid_ = 0u;
    starttime_ = GOOGLE_ULONGLONG(0);
  }
  arrrmbgiftbuyinfo_.Clear();
  arrgoldgiftbuyinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFunGiftInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFunGiftInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ConfId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confid_)));
          set_has_confid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StartTime;
        break;
      }

      // optional uint64 StartTime = 2;
      case 2: {
        if (tag == 16) {
         parse_StartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrRmbGiftBuyInfo;
        break;
      }

      // repeated .pb.TFunGiftBuyInfo ArrRmbGiftBuyInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrRmbGiftBuyInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrmbgiftbuyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrRmbGiftBuyInfo;
        if (input->ExpectTag(34)) goto parse_ArrGoldGiftBuyInfo;
        break;
      }

      // repeated .pb.TFunGiftBuyInfo ArrGoldGiftBuyInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_ArrGoldGiftBuyInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrgoldgiftbuyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrGoldGiftBuyInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFunGiftInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFunGiftInfo)
  return false;
#undef DO_
}

void TFunGiftInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFunGiftInfo)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->confid(), output);
  }

  // optional uint64 StartTime = 2;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->starttime(), output);
  }

  // repeated .pb.TFunGiftBuyInfo ArrRmbGiftBuyInfo = 3;
  for (int i = 0; i < this->arrrmbgiftbuyinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrrmbgiftbuyinfo(i), output);
  }

  // repeated .pb.TFunGiftBuyInfo ArrGoldGiftBuyInfo = 4;
  for (int i = 0; i < this->arrgoldgiftbuyinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->arrgoldgiftbuyinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFunGiftInfo)
}

::google::protobuf::uint8* TFunGiftInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFunGiftInfo)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->confid(), target);
  }

  // optional uint64 StartTime = 2;
  if (has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->starttime(), target);
  }

  // repeated .pb.TFunGiftBuyInfo ArrRmbGiftBuyInfo = 3;
  for (int i = 0; i < this->arrrmbgiftbuyinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrrmbgiftbuyinfo(i), target);
  }

  // repeated .pb.TFunGiftBuyInfo ArrGoldGiftBuyInfo = 4;
  for (int i = 0; i < this->arrgoldgiftbuyinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->arrgoldgiftbuyinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFunGiftInfo)
  return target;
}

int TFunGiftInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ConfId = 1;
    if (has_confid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->confid());
    }

    // optional uint64 StartTime = 2;
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->starttime());
    }

  }
  // repeated .pb.TFunGiftBuyInfo ArrRmbGiftBuyInfo = 3;
  total_size += 1 * this->arrrmbgiftbuyinfo_size();
  for (int i = 0; i < this->arrrmbgiftbuyinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrmbgiftbuyinfo(i));
  }

  // repeated .pb.TFunGiftBuyInfo ArrGoldGiftBuyInfo = 4;
  total_size += 1 * this->arrgoldgiftbuyinfo_size();
  for (int i = 0; i < this->arrgoldgiftbuyinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrgoldgiftbuyinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFunGiftInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFunGiftInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFunGiftInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFunGiftInfo::MergeFrom(const TFunGiftInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrmbgiftbuyinfo_.MergeFrom(from.arrrmbgiftbuyinfo_);
  arrgoldgiftbuyinfo_.MergeFrom(from.arrgoldgiftbuyinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_confid()) {
      set_confid(from.confid());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFunGiftInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFunGiftInfo::CopyFrom(const TFunGiftInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFunGiftInfo::IsInitialized() const {

  return true;
}

void TFunGiftInfo::Swap(TFunGiftInfo* other) {
  if (other != this) {
    std::swap(confid_, other->confid_);
    std::swap(starttime_, other->starttime_);
    arrrmbgiftbuyinfo_.Swap(&other->arrrmbgiftbuyinfo_);
    arrgoldgiftbuyinfo_.Swap(&other->arrgoldgiftbuyinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFunGiftInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFunGiftInfo_descriptor_;
  metadata.reflection = TFunGiftInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFunGiftGetInfoRsp::kArrFunGiftInfoFieldNumber;
#endif  // !_MSC_VER

TFunGiftGetInfoRsp::TFunGiftGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFunGiftGetInfoRsp)
}

void TFunGiftGetInfoRsp::InitAsDefaultInstance() {
}

TFunGiftGetInfoRsp::TFunGiftGetInfoRsp(const TFunGiftGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFunGiftGetInfoRsp)
}

void TFunGiftGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFunGiftGetInfoRsp::~TFunGiftGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TFunGiftGetInfoRsp)
  SharedDtor();
}

void TFunGiftGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFunGiftGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFunGiftGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFunGiftGetInfoRsp_descriptor_;
}

const TFunGiftGetInfoRsp& TFunGiftGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFunGift_2eproto();
  return *default_instance_;
}

TFunGiftGetInfoRsp* TFunGiftGetInfoRsp::default_instance_ = NULL;

TFunGiftGetInfoRsp* TFunGiftGetInfoRsp::New() const {
  return new TFunGiftGetInfoRsp;
}

void TFunGiftGetInfoRsp::Clear() {
  arrfungiftinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFunGiftGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFunGiftGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TFunGiftInfo ArrFunGiftInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrFunGiftInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrfungiftinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrFunGiftInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFunGiftGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFunGiftGetInfoRsp)
  return false;
#undef DO_
}

void TFunGiftGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFunGiftGetInfoRsp)
  // repeated .pb.TFunGiftInfo ArrFunGiftInfo = 1;
  for (int i = 0; i < this->arrfungiftinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrfungiftinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFunGiftGetInfoRsp)
}

::google::protobuf::uint8* TFunGiftGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFunGiftGetInfoRsp)
  // repeated .pb.TFunGiftInfo ArrFunGiftInfo = 1;
  for (int i = 0; i < this->arrfungiftinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrfungiftinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFunGiftGetInfoRsp)
  return target;
}

int TFunGiftGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TFunGiftInfo ArrFunGiftInfo = 1;
  total_size += 1 * this->arrfungiftinfo_size();
  for (int i = 0; i < this->arrfungiftinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrfungiftinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFunGiftGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFunGiftGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFunGiftGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFunGiftGetInfoRsp::MergeFrom(const TFunGiftGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrfungiftinfo_.MergeFrom(from.arrfungiftinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFunGiftGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFunGiftGetInfoRsp::CopyFrom(const TFunGiftGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFunGiftGetInfoRsp::IsInitialized() const {

  return true;
}

void TFunGiftGetInfoRsp::Swap(TFunGiftGetInfoRsp* other) {
  if (other != this) {
    arrfungiftinfo_.Swap(&other->arrfungiftinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFunGiftGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFunGiftGetInfoRsp_descriptor_;
  metadata.reflection = TFunGiftGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFunGiftGetSingleInfoReq::kConfIdFieldNumber;
#endif  // !_MSC_VER

TFunGiftGetSingleInfoReq::TFunGiftGetSingleInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFunGiftGetSingleInfoReq)
}

void TFunGiftGetSingleInfoReq::InitAsDefaultInstance() {
}

TFunGiftGetSingleInfoReq::TFunGiftGetSingleInfoReq(const TFunGiftGetSingleInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFunGiftGetSingleInfoReq)
}

void TFunGiftGetSingleInfoReq::SharedCtor() {
  _cached_size_ = 0;
  confid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFunGiftGetSingleInfoReq::~TFunGiftGetSingleInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TFunGiftGetSingleInfoReq)
  SharedDtor();
}

void TFunGiftGetSingleInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFunGiftGetSingleInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFunGiftGetSingleInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFunGiftGetSingleInfoReq_descriptor_;
}

const TFunGiftGetSingleInfoReq& TFunGiftGetSingleInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFunGift_2eproto();
  return *default_instance_;
}

TFunGiftGetSingleInfoReq* TFunGiftGetSingleInfoReq::default_instance_ = NULL;

TFunGiftGetSingleInfoReq* TFunGiftGetSingleInfoReq::New() const {
  return new TFunGiftGetSingleInfoReq;
}

void TFunGiftGetSingleInfoReq::Clear() {
  confid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFunGiftGetSingleInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFunGiftGetSingleInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ConfId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confid_)));
          set_has_confid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFunGiftGetSingleInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFunGiftGetSingleInfoReq)
  return false;
#undef DO_
}

void TFunGiftGetSingleInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFunGiftGetSingleInfoReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->confid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFunGiftGetSingleInfoReq)
}

::google::protobuf::uint8* TFunGiftGetSingleInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFunGiftGetSingleInfoReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->confid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFunGiftGetSingleInfoReq)
  return target;
}

int TFunGiftGetSingleInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ConfId = 1;
    if (has_confid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->confid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFunGiftGetSingleInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFunGiftGetSingleInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFunGiftGetSingleInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFunGiftGetSingleInfoReq::MergeFrom(const TFunGiftGetSingleInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_confid()) {
      set_confid(from.confid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFunGiftGetSingleInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFunGiftGetSingleInfoReq::CopyFrom(const TFunGiftGetSingleInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFunGiftGetSingleInfoReq::IsInitialized() const {

  return true;
}

void TFunGiftGetSingleInfoReq::Swap(TFunGiftGetSingleInfoReq* other) {
  if (other != this) {
    std::swap(confid_, other->confid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFunGiftGetSingleInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFunGiftGetSingleInfoReq_descriptor_;
  metadata.reflection = TFunGiftGetSingleInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFunGiftGetSingleInfoRsp::kFunGiftInfoFieldNumber;
#endif  // !_MSC_VER

TFunGiftGetSingleInfoRsp::TFunGiftGetSingleInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFunGiftGetSingleInfoRsp)
}

void TFunGiftGetSingleInfoRsp::InitAsDefaultInstance() {
  fungiftinfo_ = const_cast< ::pb::TFunGiftInfo*>(&::pb::TFunGiftInfo::default_instance());
}

TFunGiftGetSingleInfoRsp::TFunGiftGetSingleInfoRsp(const TFunGiftGetSingleInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFunGiftGetSingleInfoRsp)
}

void TFunGiftGetSingleInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  fungiftinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFunGiftGetSingleInfoRsp::~TFunGiftGetSingleInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TFunGiftGetSingleInfoRsp)
  SharedDtor();
}

void TFunGiftGetSingleInfoRsp::SharedDtor() {
  if (this != default_instance_) {
    delete fungiftinfo_;
  }
}

void TFunGiftGetSingleInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFunGiftGetSingleInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFunGiftGetSingleInfoRsp_descriptor_;
}

const TFunGiftGetSingleInfoRsp& TFunGiftGetSingleInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFunGift_2eproto();
  return *default_instance_;
}

TFunGiftGetSingleInfoRsp* TFunGiftGetSingleInfoRsp::default_instance_ = NULL;

TFunGiftGetSingleInfoRsp* TFunGiftGetSingleInfoRsp::New() const {
  return new TFunGiftGetSingleInfoRsp;
}

void TFunGiftGetSingleInfoRsp::Clear() {
  if (has_fungiftinfo()) {
    if (fungiftinfo_ != NULL) fungiftinfo_->::pb::TFunGiftInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFunGiftGetSingleInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFunGiftGetSingleInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TFunGiftInfo FunGiftInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fungiftinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFunGiftGetSingleInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFunGiftGetSingleInfoRsp)
  return false;
#undef DO_
}

void TFunGiftGetSingleInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFunGiftGetSingleInfoRsp)
  // optional .pb.TFunGiftInfo FunGiftInfo = 1;
  if (has_fungiftinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fungiftinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFunGiftGetSingleInfoRsp)
}

::google::protobuf::uint8* TFunGiftGetSingleInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFunGiftGetSingleInfoRsp)
  // optional .pb.TFunGiftInfo FunGiftInfo = 1;
  if (has_fungiftinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fungiftinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFunGiftGetSingleInfoRsp)
  return target;
}

int TFunGiftGetSingleInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TFunGiftInfo FunGiftInfo = 1;
    if (has_fungiftinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fungiftinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFunGiftGetSingleInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFunGiftGetSingleInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFunGiftGetSingleInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFunGiftGetSingleInfoRsp::MergeFrom(const TFunGiftGetSingleInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fungiftinfo()) {
      mutable_fungiftinfo()->::pb::TFunGiftInfo::MergeFrom(from.fungiftinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFunGiftGetSingleInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFunGiftGetSingleInfoRsp::CopyFrom(const TFunGiftGetSingleInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFunGiftGetSingleInfoRsp::IsInitialized() const {

  return true;
}

void TFunGiftGetSingleInfoRsp::Swap(TFunGiftGetSingleInfoRsp* other) {
  if (other != this) {
    std::swap(fungiftinfo_, other->fungiftinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFunGiftGetSingleInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFunGiftGetSingleInfoRsp_descriptor_;
  metadata.reflection = TFunGiftGetSingleInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFunGiftBuyFreeGiftReq::kConfIdFieldNumber;
const int TFunGiftBuyFreeGiftReq::kGiftIdFieldNumber;
const int TFunGiftBuyFreeGiftReq::kNumFieldNumber;
#endif  // !_MSC_VER

TFunGiftBuyFreeGiftReq::TFunGiftBuyFreeGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFunGiftBuyFreeGiftReq)
}

void TFunGiftBuyFreeGiftReq::InitAsDefaultInstance() {
}

TFunGiftBuyFreeGiftReq::TFunGiftBuyFreeGiftReq(const TFunGiftBuyFreeGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFunGiftBuyFreeGiftReq)
}

void TFunGiftBuyFreeGiftReq::SharedCtor() {
  _cached_size_ = 0;
  confid_ = 0u;
  giftid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFunGiftBuyFreeGiftReq::~TFunGiftBuyFreeGiftReq() {
  // @@protoc_insertion_point(destructor:pb.TFunGiftBuyFreeGiftReq)
  SharedDtor();
}

void TFunGiftBuyFreeGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFunGiftBuyFreeGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFunGiftBuyFreeGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFunGiftBuyFreeGiftReq_descriptor_;
}

const TFunGiftBuyFreeGiftReq& TFunGiftBuyFreeGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFunGift_2eproto();
  return *default_instance_;
}

TFunGiftBuyFreeGiftReq* TFunGiftBuyFreeGiftReq::default_instance_ = NULL;

TFunGiftBuyFreeGiftReq* TFunGiftBuyFreeGiftReq::New() const {
  return new TFunGiftBuyFreeGiftReq;
}

void TFunGiftBuyFreeGiftReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFunGiftBuyFreeGiftReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(confid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFunGiftBuyFreeGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFunGiftBuyFreeGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ConfId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confid_)));
          set_has_confid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_GiftId;
        break;
      }

      // optional uint32 GiftId = 2;
      case 2: {
        if (tag == 16) {
         parse_GiftId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giftid_)));
          set_has_giftid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 3;
      case 3: {
        if (tag == 24) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFunGiftBuyFreeGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFunGiftBuyFreeGiftReq)
  return false;
#undef DO_
}

void TFunGiftBuyFreeGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFunGiftBuyFreeGiftReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->confid(), output);
  }

  // optional uint32 GiftId = 2;
  if (has_giftid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->giftid(), output);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFunGiftBuyFreeGiftReq)
}

::google::protobuf::uint8* TFunGiftBuyFreeGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFunGiftBuyFreeGiftReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->confid(), target);
  }

  // optional uint32 GiftId = 2;
  if (has_giftid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->giftid(), target);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFunGiftBuyFreeGiftReq)
  return target;
}

int TFunGiftBuyFreeGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ConfId = 1;
    if (has_confid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->confid());
    }

    // optional uint32 GiftId = 2;
    if (has_giftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->giftid());
    }

    // optional uint32 Num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFunGiftBuyFreeGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFunGiftBuyFreeGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFunGiftBuyFreeGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFunGiftBuyFreeGiftReq::MergeFrom(const TFunGiftBuyFreeGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_confid()) {
      set_confid(from.confid());
    }
    if (from.has_giftid()) {
      set_giftid(from.giftid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFunGiftBuyFreeGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFunGiftBuyFreeGiftReq::CopyFrom(const TFunGiftBuyFreeGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFunGiftBuyFreeGiftReq::IsInitialized() const {

  return true;
}

void TFunGiftBuyFreeGiftReq::Swap(TFunGiftBuyFreeGiftReq* other) {
  if (other != this) {
    std::swap(confid_, other->confid_);
    std::swap(giftid_, other->giftid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFunGiftBuyFreeGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFunGiftBuyFreeGiftReq_descriptor_;
  metadata.reflection = TFunGiftBuyFreeGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFunGiftBuyFreeGiftRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TFunGiftBuyFreeGiftRsp::TFunGiftBuyFreeGiftRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFunGiftBuyFreeGiftRsp)
}

void TFunGiftBuyFreeGiftRsp::InitAsDefaultInstance() {
}

TFunGiftBuyFreeGiftRsp::TFunGiftBuyFreeGiftRsp(const TFunGiftBuyFreeGiftRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFunGiftBuyFreeGiftRsp)
}

void TFunGiftBuyFreeGiftRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFunGiftBuyFreeGiftRsp::~TFunGiftBuyFreeGiftRsp() {
  // @@protoc_insertion_point(destructor:pb.TFunGiftBuyFreeGiftRsp)
  SharedDtor();
}

void TFunGiftBuyFreeGiftRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFunGiftBuyFreeGiftRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFunGiftBuyFreeGiftRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFunGiftBuyFreeGiftRsp_descriptor_;
}

const TFunGiftBuyFreeGiftRsp& TFunGiftBuyFreeGiftRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFunGift_2eproto();
  return *default_instance_;
}

TFunGiftBuyFreeGiftRsp* TFunGiftBuyFreeGiftRsp::default_instance_ = NULL;

TFunGiftBuyFreeGiftRsp* TFunGiftBuyFreeGiftRsp::New() const {
  return new TFunGiftBuyFreeGiftRsp;
}

void TFunGiftBuyFreeGiftRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFunGiftBuyFreeGiftRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFunGiftBuyFreeGiftRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFunGiftBuyFreeGiftRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFunGiftBuyFreeGiftRsp)
  return false;
#undef DO_
}

void TFunGiftBuyFreeGiftRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFunGiftBuyFreeGiftRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFunGiftBuyFreeGiftRsp)
}

::google::protobuf::uint8* TFunGiftBuyFreeGiftRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFunGiftBuyFreeGiftRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFunGiftBuyFreeGiftRsp)
  return target;
}

int TFunGiftBuyFreeGiftRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFunGiftBuyFreeGiftRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFunGiftBuyFreeGiftRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFunGiftBuyFreeGiftRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFunGiftBuyFreeGiftRsp::MergeFrom(const TFunGiftBuyFreeGiftRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFunGiftBuyFreeGiftRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFunGiftBuyFreeGiftRsp::CopyFrom(const TFunGiftBuyFreeGiftRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFunGiftBuyFreeGiftRsp::IsInitialized() const {

  return true;
}

void TFunGiftBuyFreeGiftRsp::Swap(TFunGiftBuyFreeGiftRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFunGiftBuyFreeGiftRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFunGiftBuyFreeGiftRsp_descriptor_;
  metadata.reflection = TFunGiftBuyFreeGiftRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFunGiftBuyGoldGiftReq::kConfIdFieldNumber;
const int TFunGiftBuyGoldGiftReq::kGiftIdFieldNumber;
const int TFunGiftBuyGoldGiftReq::kNumFieldNumber;
#endif  // !_MSC_VER

TFunGiftBuyGoldGiftReq::TFunGiftBuyGoldGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFunGiftBuyGoldGiftReq)
}

void TFunGiftBuyGoldGiftReq::InitAsDefaultInstance() {
}

TFunGiftBuyGoldGiftReq::TFunGiftBuyGoldGiftReq(const TFunGiftBuyGoldGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFunGiftBuyGoldGiftReq)
}

void TFunGiftBuyGoldGiftReq::SharedCtor() {
  _cached_size_ = 0;
  confid_ = 0u;
  giftid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFunGiftBuyGoldGiftReq::~TFunGiftBuyGoldGiftReq() {
  // @@protoc_insertion_point(destructor:pb.TFunGiftBuyGoldGiftReq)
  SharedDtor();
}

void TFunGiftBuyGoldGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFunGiftBuyGoldGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFunGiftBuyGoldGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFunGiftBuyGoldGiftReq_descriptor_;
}

const TFunGiftBuyGoldGiftReq& TFunGiftBuyGoldGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFunGift_2eproto();
  return *default_instance_;
}

TFunGiftBuyGoldGiftReq* TFunGiftBuyGoldGiftReq::default_instance_ = NULL;

TFunGiftBuyGoldGiftReq* TFunGiftBuyGoldGiftReq::New() const {
  return new TFunGiftBuyGoldGiftReq;
}

void TFunGiftBuyGoldGiftReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFunGiftBuyGoldGiftReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(confid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFunGiftBuyGoldGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFunGiftBuyGoldGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ConfId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confid_)));
          set_has_confid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_GiftId;
        break;
      }

      // optional uint32 GiftId = 2;
      case 2: {
        if (tag == 16) {
         parse_GiftId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giftid_)));
          set_has_giftid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 3;
      case 3: {
        if (tag == 24) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFunGiftBuyGoldGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFunGiftBuyGoldGiftReq)
  return false;
#undef DO_
}

void TFunGiftBuyGoldGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFunGiftBuyGoldGiftReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->confid(), output);
  }

  // optional uint32 GiftId = 2;
  if (has_giftid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->giftid(), output);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFunGiftBuyGoldGiftReq)
}

::google::protobuf::uint8* TFunGiftBuyGoldGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFunGiftBuyGoldGiftReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->confid(), target);
  }

  // optional uint32 GiftId = 2;
  if (has_giftid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->giftid(), target);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFunGiftBuyGoldGiftReq)
  return target;
}

int TFunGiftBuyGoldGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ConfId = 1;
    if (has_confid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->confid());
    }

    // optional uint32 GiftId = 2;
    if (has_giftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->giftid());
    }

    // optional uint32 Num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFunGiftBuyGoldGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFunGiftBuyGoldGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFunGiftBuyGoldGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFunGiftBuyGoldGiftReq::MergeFrom(const TFunGiftBuyGoldGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_confid()) {
      set_confid(from.confid());
    }
    if (from.has_giftid()) {
      set_giftid(from.giftid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFunGiftBuyGoldGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFunGiftBuyGoldGiftReq::CopyFrom(const TFunGiftBuyGoldGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFunGiftBuyGoldGiftReq::IsInitialized() const {

  return true;
}

void TFunGiftBuyGoldGiftReq::Swap(TFunGiftBuyGoldGiftReq* other) {
  if (other != this) {
    std::swap(confid_, other->confid_);
    std::swap(giftid_, other->giftid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFunGiftBuyGoldGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFunGiftBuyGoldGiftReq_descriptor_;
  metadata.reflection = TFunGiftBuyGoldGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFunGiftBuyGoldGiftRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TFunGiftBuyGoldGiftRsp::TFunGiftBuyGoldGiftRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFunGiftBuyGoldGiftRsp)
}

void TFunGiftBuyGoldGiftRsp::InitAsDefaultInstance() {
}

TFunGiftBuyGoldGiftRsp::TFunGiftBuyGoldGiftRsp(const TFunGiftBuyGoldGiftRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFunGiftBuyGoldGiftRsp)
}

void TFunGiftBuyGoldGiftRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFunGiftBuyGoldGiftRsp::~TFunGiftBuyGoldGiftRsp() {
  // @@protoc_insertion_point(destructor:pb.TFunGiftBuyGoldGiftRsp)
  SharedDtor();
}

void TFunGiftBuyGoldGiftRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFunGiftBuyGoldGiftRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFunGiftBuyGoldGiftRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFunGiftBuyGoldGiftRsp_descriptor_;
}

const TFunGiftBuyGoldGiftRsp& TFunGiftBuyGoldGiftRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFunGift_2eproto();
  return *default_instance_;
}

TFunGiftBuyGoldGiftRsp* TFunGiftBuyGoldGiftRsp::default_instance_ = NULL;

TFunGiftBuyGoldGiftRsp* TFunGiftBuyGoldGiftRsp::New() const {
  return new TFunGiftBuyGoldGiftRsp;
}

void TFunGiftBuyGoldGiftRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFunGiftBuyGoldGiftRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFunGiftBuyGoldGiftRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFunGiftBuyGoldGiftRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFunGiftBuyGoldGiftRsp)
  return false;
#undef DO_
}

void TFunGiftBuyGoldGiftRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFunGiftBuyGoldGiftRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFunGiftBuyGoldGiftRsp)
}

::google::protobuf::uint8* TFunGiftBuyGoldGiftRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFunGiftBuyGoldGiftRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFunGiftBuyGoldGiftRsp)
  return target;
}

int TFunGiftBuyGoldGiftRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFunGiftBuyGoldGiftRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFunGiftBuyGoldGiftRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFunGiftBuyGoldGiftRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFunGiftBuyGoldGiftRsp::MergeFrom(const TFunGiftBuyGoldGiftRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFunGiftBuyGoldGiftRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFunGiftBuyGoldGiftRsp::CopyFrom(const TFunGiftBuyGoldGiftRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFunGiftBuyGoldGiftRsp::IsInitialized() const {

  return true;
}

void TFunGiftBuyGoldGiftRsp::Swap(TFunGiftBuyGoldGiftRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFunGiftBuyGoldGiftRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFunGiftBuyGoldGiftRsp_descriptor_;
  metadata.reflection = TFunGiftBuyGoldGiftRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFunGiftRmbGiftChangeNotify::kConfIdFieldNumber;
const int TFunGiftRmbGiftChangeNotify::kArrRmbGiftBuyInfoFieldNumber;
#endif  // !_MSC_VER

TFunGiftRmbGiftChangeNotify::TFunGiftRmbGiftChangeNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFunGiftRmbGiftChangeNotify)
}

void TFunGiftRmbGiftChangeNotify::InitAsDefaultInstance() {
}

TFunGiftRmbGiftChangeNotify::TFunGiftRmbGiftChangeNotify(const TFunGiftRmbGiftChangeNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFunGiftRmbGiftChangeNotify)
}

void TFunGiftRmbGiftChangeNotify::SharedCtor() {
  _cached_size_ = 0;
  confid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFunGiftRmbGiftChangeNotify::~TFunGiftRmbGiftChangeNotify() {
  // @@protoc_insertion_point(destructor:pb.TFunGiftRmbGiftChangeNotify)
  SharedDtor();
}

void TFunGiftRmbGiftChangeNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFunGiftRmbGiftChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFunGiftRmbGiftChangeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFunGiftRmbGiftChangeNotify_descriptor_;
}

const TFunGiftRmbGiftChangeNotify& TFunGiftRmbGiftChangeNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFunGift_2eproto();
  return *default_instance_;
}

TFunGiftRmbGiftChangeNotify* TFunGiftRmbGiftChangeNotify::default_instance_ = NULL;

TFunGiftRmbGiftChangeNotify* TFunGiftRmbGiftChangeNotify::New() const {
  return new TFunGiftRmbGiftChangeNotify;
}

void TFunGiftRmbGiftChangeNotify::Clear() {
  confid_ = 0u;
  arrrmbgiftbuyinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFunGiftRmbGiftChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFunGiftRmbGiftChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ConfId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confid_)));
          set_has_confid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRmbGiftBuyInfo;
        break;
      }

      // repeated .pb.TFunGiftBuyInfo ArrRmbGiftBuyInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrRmbGiftBuyInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrmbgiftbuyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRmbGiftBuyInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFunGiftRmbGiftChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFunGiftRmbGiftChangeNotify)
  return false;
#undef DO_
}

void TFunGiftRmbGiftChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFunGiftRmbGiftChangeNotify)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->confid(), output);
  }

  // repeated .pb.TFunGiftBuyInfo ArrRmbGiftBuyInfo = 2;
  for (int i = 0; i < this->arrrmbgiftbuyinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrrmbgiftbuyinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFunGiftRmbGiftChangeNotify)
}

::google::protobuf::uint8* TFunGiftRmbGiftChangeNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFunGiftRmbGiftChangeNotify)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->confid(), target);
  }

  // repeated .pb.TFunGiftBuyInfo ArrRmbGiftBuyInfo = 2;
  for (int i = 0; i < this->arrrmbgiftbuyinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrrmbgiftbuyinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFunGiftRmbGiftChangeNotify)
  return target;
}

int TFunGiftRmbGiftChangeNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ConfId = 1;
    if (has_confid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->confid());
    }

  }
  // repeated .pb.TFunGiftBuyInfo ArrRmbGiftBuyInfo = 2;
  total_size += 1 * this->arrrmbgiftbuyinfo_size();
  for (int i = 0; i < this->arrrmbgiftbuyinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrmbgiftbuyinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFunGiftRmbGiftChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFunGiftRmbGiftChangeNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFunGiftRmbGiftChangeNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFunGiftRmbGiftChangeNotify::MergeFrom(const TFunGiftRmbGiftChangeNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrmbgiftbuyinfo_.MergeFrom(from.arrrmbgiftbuyinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_confid()) {
      set_confid(from.confid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFunGiftRmbGiftChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFunGiftRmbGiftChangeNotify::CopyFrom(const TFunGiftRmbGiftChangeNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFunGiftRmbGiftChangeNotify::IsInitialized() const {

  return true;
}

void TFunGiftRmbGiftChangeNotify::Swap(TFunGiftRmbGiftChangeNotify* other) {
  if (other != this) {
    std::swap(confid_, other->confid_);
    arrrmbgiftbuyinfo_.Swap(&other->arrrmbgiftbuyinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFunGiftRmbGiftChangeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFunGiftRmbGiftChangeNotify_descriptor_;
  metadata.reflection = TFunGiftRmbGiftChangeNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
