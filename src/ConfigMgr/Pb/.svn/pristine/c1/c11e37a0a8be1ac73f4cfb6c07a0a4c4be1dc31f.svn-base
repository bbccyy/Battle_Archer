// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/HeroTitle.proto

#ifndef PROTOBUF_net_2fHeroTitle_2eproto__INCLUDED
#define PROTOBUF_net_2fHeroTitle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fHeroTitle_2eproto();
void protobuf_AssignDesc_net_2fHeroTitle_2eproto();
void protobuf_ShutdownFile_net_2fHeroTitle_2eproto();

class THeroTitleInfo;
class THeroTitleGetInfoRsp;
class THeroTitleActiveTitleReq;
class THeroTitleEquipTitleReq;
class THeroTitleChangeNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>THeroTitleInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/HeroTitle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroTitleInfo : public ::google::protobuf::Message {
 public:
  THeroTitleInfo();
  virtual ~THeroTitleInfo();

  THeroTitleInfo(const THeroTitleInfo& from);

  inline THeroTitleInfo& operator=(const THeroTitleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroTitleInfo& default_instance();

  void Swap(THeroTitleInfo* other);

  // implements Message ----------------------------------------------

  THeroTitleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroTitleInfo& from);
  void MergeFrom(const THeroTitleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ModelId = 1;
  inline bool has_modelid() const;
  inline void clear_modelid();
  static const int kModelIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroTitleInfo</name>
  	<Function>
  		<name>modelid</name>
  		<replaceName>ModelId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_modelid</name>
  		<replaceName>ModelId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_modelid</name>
  		<replaceName>ModelId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 modelid() const;
  inline void set_modelid(::google::protobuf::uint32 value);

  // optional uint32 TitleId = 2;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroTitleInfo</name>
  	<Function>
  		<name>titleid</name>
  		<replaceName>TitleId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_titleid</name>
  		<replaceName>TitleId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_titleid</name>
  		<replaceName>TitleId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 titleid() const;
  inline void set_titleid(::google::protobuf::uint32 value);

  // repeated uint32 ArrActiveTitleId = 3;
  inline int arractivetitleid_size() const;
  inline void clear_arractivetitleid();
  static const int kArrActiveTitleIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroTitleInfo</name>
  	<Function>
  		<name>arractivetitleid</name>
  		<replaceName>ArrActiveTitleId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arractivetitleid</name>
  		<replaceName>ArrActiveTitleId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arractivetitleid</name>
  		<replaceName>ArrActiveTitleId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arractivetitleid</name>
  		<replaceName>ArrActiveTitleId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arractivetitleid_size</name>
  		<replaceName>ArrActiveTitleId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 arractivetitleid(int index) const;
  inline void set_arractivetitleid(int index, ::google::protobuf::uint32 value);
  inline void add_arractivetitleid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arractivetitleid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arractivetitleid();

  // @@protoc_insertion_point(class_scope:pb.THeroTitleInfo)
 private:
  inline void set_has_modelid();
  inline void clear_has_modelid();
  inline void set_has_titleid();
  inline void clear_has_titleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 modelid_;
  ::google::protobuf::uint32 titleid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arractivetitleid_;
  friend void  protobuf_AddDesc_net_2fHeroTitle_2eproto();
  friend void protobuf_AssignDesc_net_2fHeroTitle_2eproto();
  friend void protobuf_ShutdownFile_net_2fHeroTitle_2eproto();

  void InitAsDefaultInstance();
  static THeroTitleInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroTitleGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/HeroTitle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroTitleGetInfoRsp : public ::google::protobuf::Message {
 public:
  THeroTitleGetInfoRsp();
  virtual ~THeroTitleGetInfoRsp();

  THeroTitleGetInfoRsp(const THeroTitleGetInfoRsp& from);

  inline THeroTitleGetInfoRsp& operator=(const THeroTitleGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroTitleGetInfoRsp& default_instance();

  void Swap(THeroTitleGetInfoRsp* other);

  // implements Message ----------------------------------------------

  THeroTitleGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroTitleGetInfoRsp& from);
  void MergeFrom(const THeroTitleGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.THeroTitleInfo ArrHeroTitleInfo = 1;
  inline int arrherotitleinfo_size() const;
  inline void clear_arrherotitleinfo();
  static const int kArrHeroTitleInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroTitleGetInfoRsp</name>
  	<Function>
  		<name>arrherotitleinfo</name>
  		<replaceName>ArrHeroTitleInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrherotitleinfo</name>
  		<replaceName>ArrHeroTitleInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrherotitleinfo</name>
  		<replaceName>ArrHeroTitleInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrherotitleinfo</name>
  		<replaceName>ArrHeroTitleInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrherotitleinfo_size</name>
  		<replaceName>ArrHeroTitleInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroTitleInfo& arrherotitleinfo(int index) const;
  inline ::pb::THeroTitleInfo* mutable_arrherotitleinfo(int index);
  inline ::pb::THeroTitleInfo* add_arrherotitleinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroTitleInfo >&
      arrherotitleinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroTitleInfo >*
      mutable_arrherotitleinfo();

  // @@protoc_insertion_point(class_scope:pb.THeroTitleGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroTitleInfo > arrherotitleinfo_;
  friend void  protobuf_AddDesc_net_2fHeroTitle_2eproto();
  friend void protobuf_AssignDesc_net_2fHeroTitle_2eproto();
  friend void protobuf_ShutdownFile_net_2fHeroTitle_2eproto();

  void InitAsDefaultInstance();
  static THeroTitleGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroTitleActiveTitleReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/HeroTitle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroTitleActiveTitleReq : public ::google::protobuf::Message {
 public:
  THeroTitleActiveTitleReq();
  virtual ~THeroTitleActiveTitleReq();

  THeroTitleActiveTitleReq(const THeroTitleActiveTitleReq& from);

  inline THeroTitleActiveTitleReq& operator=(const THeroTitleActiveTitleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroTitleActiveTitleReq& default_instance();

  void Swap(THeroTitleActiveTitleReq* other);

  // implements Message ----------------------------------------------

  THeroTitleActiveTitleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroTitleActiveTitleReq& from);
  void MergeFrom(const THeroTitleActiveTitleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TitleId = 1;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroTitleActiveTitleReq</name>
  	<Function>
  		<name>titleid</name>
  		<replaceName>TitleId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_titleid</name>
  		<replaceName>TitleId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_titleid</name>
  		<replaceName>TitleId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 titleid() const;
  inline void set_titleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroTitleActiveTitleReq)
 private:
  inline void set_has_titleid();
  inline void clear_has_titleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 titleid_;
  friend void  protobuf_AddDesc_net_2fHeroTitle_2eproto();
  friend void protobuf_AssignDesc_net_2fHeroTitle_2eproto();
  friend void protobuf_ShutdownFile_net_2fHeroTitle_2eproto();

  void InitAsDefaultInstance();
  static THeroTitleActiveTitleReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroTitleEquipTitleReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/HeroTitle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroTitleEquipTitleReq : public ::google::protobuf::Message {
 public:
  THeroTitleEquipTitleReq();
  virtual ~THeroTitleEquipTitleReq();

  THeroTitleEquipTitleReq(const THeroTitleEquipTitleReq& from);

  inline THeroTitleEquipTitleReq& operator=(const THeroTitleEquipTitleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroTitleEquipTitleReq& default_instance();

  void Swap(THeroTitleEquipTitleReq* other);

  // implements Message ----------------------------------------------

  THeroTitleEquipTitleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroTitleEquipTitleReq& from);
  void MergeFrom(const THeroTitleEquipTitleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroTitleEquipTitleReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 TitleId = 2;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroTitleEquipTitleReq</name>
  	<Function>
  		<name>titleid</name>
  		<replaceName>TitleId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_titleid</name>
  		<replaceName>TitleId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_titleid</name>
  		<replaceName>TitleId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 titleid() const;
  inline void set_titleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroTitleEquipTitleReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_titleid();
  inline void clear_has_titleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 titleid_;
  friend void  protobuf_AddDesc_net_2fHeroTitle_2eproto();
  friend void protobuf_AssignDesc_net_2fHeroTitle_2eproto();
  friend void protobuf_ShutdownFile_net_2fHeroTitle_2eproto();

  void InitAsDefaultInstance();
  static THeroTitleEquipTitleReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroTitleChangeNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/HeroTitle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroTitleChangeNotify : public ::google::protobuf::Message {
 public:
  THeroTitleChangeNotify();
  virtual ~THeroTitleChangeNotify();

  THeroTitleChangeNotify(const THeroTitleChangeNotify& from);

  inline THeroTitleChangeNotify& operator=(const THeroTitleChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroTitleChangeNotify& default_instance();

  void Swap(THeroTitleChangeNotify* other);

  // implements Message ----------------------------------------------

  THeroTitleChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroTitleChangeNotify& from);
  void MergeFrom(const THeroTitleChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.THeroTitleInfo ArrHeroTitleInfo = 1;
  inline int arrherotitleinfo_size() const;
  inline void clear_arrherotitleinfo();
  static const int kArrHeroTitleInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroTitleChangeNotify</name>
  	<Function>
  		<name>arrherotitleinfo</name>
  		<replaceName>ArrHeroTitleInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrherotitleinfo</name>
  		<replaceName>ArrHeroTitleInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrherotitleinfo</name>
  		<replaceName>ArrHeroTitleInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrherotitleinfo</name>
  		<replaceName>ArrHeroTitleInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrherotitleinfo_size</name>
  		<replaceName>ArrHeroTitleInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroTitleInfo& arrherotitleinfo(int index) const;
  inline ::pb::THeroTitleInfo* mutable_arrherotitleinfo(int index);
  inline ::pb::THeroTitleInfo* add_arrherotitleinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroTitleInfo >&
      arrherotitleinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroTitleInfo >*
      mutable_arrherotitleinfo();

  // @@protoc_insertion_point(class_scope:pb.THeroTitleChangeNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroTitleInfo > arrherotitleinfo_;
  friend void  protobuf_AddDesc_net_2fHeroTitle_2eproto();
  friend void protobuf_AssignDesc_net_2fHeroTitle_2eproto();
  friend void protobuf_ShutdownFile_net_2fHeroTitle_2eproto();

  void InitAsDefaultInstance();
  static THeroTitleChangeNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// THeroTitleInfo

// optional uint32 ModelId = 1;
inline bool THeroTitleInfo::has_modelid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroTitleInfo::set_has_modelid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroTitleInfo::clear_has_modelid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroTitleInfo::clear_modelid() {
  modelid_ = 0u;
  clear_has_modelid();
}
inline ::google::protobuf::uint32 THeroTitleInfo::modelid() const {
  // @@protoc_insertion_point(field_get:pb.THeroTitleInfo.ModelId)
  return modelid_;
}
inline void THeroTitleInfo::set_modelid(::google::protobuf::uint32 value) {
  set_has_modelid();
  modelid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroTitleInfo.ModelId)
}

// optional uint32 TitleId = 2;
inline bool THeroTitleInfo::has_titleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroTitleInfo::set_has_titleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroTitleInfo::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroTitleInfo::clear_titleid() {
  titleid_ = 0u;
  clear_has_titleid();
}
inline ::google::protobuf::uint32 THeroTitleInfo::titleid() const {
  // @@protoc_insertion_point(field_get:pb.THeroTitleInfo.TitleId)
  return titleid_;
}
inline void THeroTitleInfo::set_titleid(::google::protobuf::uint32 value) {
  set_has_titleid();
  titleid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroTitleInfo.TitleId)
}

// repeated uint32 ArrActiveTitleId = 3;
inline int THeroTitleInfo::arractivetitleid_size() const {
  return arractivetitleid_.size();
}
inline void THeroTitleInfo::clear_arractivetitleid() {
  arractivetitleid_.Clear();
}
inline ::google::protobuf::uint32 THeroTitleInfo::arractivetitleid(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroTitleInfo.ArrActiveTitleId)
  return arractivetitleid_.Get(index);
}
inline void THeroTitleInfo::set_arractivetitleid(int index, ::google::protobuf::uint32 value) {
  arractivetitleid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.THeroTitleInfo.ArrActiveTitleId)
}
inline void THeroTitleInfo::add_arractivetitleid(::google::protobuf::uint32 value) {
  arractivetitleid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.THeroTitleInfo.ArrActiveTitleId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
THeroTitleInfo::arractivetitleid() const {
  // @@protoc_insertion_point(field_list:pb.THeroTitleInfo.ArrActiveTitleId)
  return arractivetitleid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
THeroTitleInfo::mutable_arractivetitleid() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroTitleInfo.ArrActiveTitleId)
  return &arractivetitleid_;
}

// -------------------------------------------------------------------

// THeroTitleGetInfoRsp

// repeated .pb.THeroTitleInfo ArrHeroTitleInfo = 1;
inline int THeroTitleGetInfoRsp::arrherotitleinfo_size() const {
  return arrherotitleinfo_.size();
}
inline void THeroTitleGetInfoRsp::clear_arrherotitleinfo() {
  arrherotitleinfo_.Clear();
}
inline const ::pb::THeroTitleInfo& THeroTitleGetInfoRsp::arrherotitleinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroTitleGetInfoRsp.ArrHeroTitleInfo)
  return arrherotitleinfo_.Get(index);
}
inline ::pb::THeroTitleInfo* THeroTitleGetInfoRsp::mutable_arrherotitleinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroTitleGetInfoRsp.ArrHeroTitleInfo)
  return arrherotitleinfo_.Mutable(index);
}
inline ::pb::THeroTitleInfo* THeroTitleGetInfoRsp::add_arrherotitleinfo() {
  // @@protoc_insertion_point(field_add:pb.THeroTitleGetInfoRsp.ArrHeroTitleInfo)
  return arrherotitleinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroTitleInfo >&
THeroTitleGetInfoRsp::arrherotitleinfo() const {
  // @@protoc_insertion_point(field_list:pb.THeroTitleGetInfoRsp.ArrHeroTitleInfo)
  return arrherotitleinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroTitleInfo >*
THeroTitleGetInfoRsp::mutable_arrherotitleinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroTitleGetInfoRsp.ArrHeroTitleInfo)
  return &arrherotitleinfo_;
}

// -------------------------------------------------------------------

// THeroTitleActiveTitleReq

// optional uint32 TitleId = 1;
inline bool THeroTitleActiveTitleReq::has_titleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroTitleActiveTitleReq::set_has_titleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroTitleActiveTitleReq::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroTitleActiveTitleReq::clear_titleid() {
  titleid_ = 0u;
  clear_has_titleid();
}
inline ::google::protobuf::uint32 THeroTitleActiveTitleReq::titleid() const {
  // @@protoc_insertion_point(field_get:pb.THeroTitleActiveTitleReq.TitleId)
  return titleid_;
}
inline void THeroTitleActiveTitleReq::set_titleid(::google::protobuf::uint32 value) {
  set_has_titleid();
  titleid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroTitleActiveTitleReq.TitleId)
}

// -------------------------------------------------------------------

// THeroTitleEquipTitleReq

// optional uint32 Hid = 1;
inline bool THeroTitleEquipTitleReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroTitleEquipTitleReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroTitleEquipTitleReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroTitleEquipTitleReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 THeroTitleEquipTitleReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.THeroTitleEquipTitleReq.Hid)
  return hid_;
}
inline void THeroTitleEquipTitleReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroTitleEquipTitleReq.Hid)
}

// optional uint32 TitleId = 2;
inline bool THeroTitleEquipTitleReq::has_titleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroTitleEquipTitleReq::set_has_titleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroTitleEquipTitleReq::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroTitleEquipTitleReq::clear_titleid() {
  titleid_ = 0u;
  clear_has_titleid();
}
inline ::google::protobuf::uint32 THeroTitleEquipTitleReq::titleid() const {
  // @@protoc_insertion_point(field_get:pb.THeroTitleEquipTitleReq.TitleId)
  return titleid_;
}
inline void THeroTitleEquipTitleReq::set_titleid(::google::protobuf::uint32 value) {
  set_has_titleid();
  titleid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroTitleEquipTitleReq.TitleId)
}

// -------------------------------------------------------------------

// THeroTitleChangeNotify

// repeated .pb.THeroTitleInfo ArrHeroTitleInfo = 1;
inline int THeroTitleChangeNotify::arrherotitleinfo_size() const {
  return arrherotitleinfo_.size();
}
inline void THeroTitleChangeNotify::clear_arrherotitleinfo() {
  arrherotitleinfo_.Clear();
}
inline const ::pb::THeroTitleInfo& THeroTitleChangeNotify::arrherotitleinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroTitleChangeNotify.ArrHeroTitleInfo)
  return arrherotitleinfo_.Get(index);
}
inline ::pb::THeroTitleInfo* THeroTitleChangeNotify::mutable_arrherotitleinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroTitleChangeNotify.ArrHeroTitleInfo)
  return arrherotitleinfo_.Mutable(index);
}
inline ::pb::THeroTitleInfo* THeroTitleChangeNotify::add_arrherotitleinfo() {
  // @@protoc_insertion_point(field_add:pb.THeroTitleChangeNotify.ArrHeroTitleInfo)
  return arrherotitleinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroTitleInfo >&
THeroTitleChangeNotify::arrherotitleinfo() const {
  // @@protoc_insertion_point(field_list:pb.THeroTitleChangeNotify.ArrHeroTitleInfo)
  return arrherotitleinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroTitleInfo >*
THeroTitleChangeNotify::mutable_arrherotitleinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroTitleChangeNotify.ArrHeroTitleInfo)
  return &arrherotitleinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fHeroTitle_2eproto__INCLUDED
