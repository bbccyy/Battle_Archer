// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/DivineTroops.proto

#ifndef PROTOBUF_net_2fDivineTroops_2eproto__INCLUDED
#define PROTOBUF_net_2fDivineTroops_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
#include "module/Attributer.pb.h"
#include "net/Battle.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

class TDivineTroopsSmeltReq;
class TDivineTroopsSmeltRsp;
class TDivineTroopsReplaceSmeltReq;
class TDivineTroopsReplaceSmeltRsp;
class TDivineTroopsCancelSmeltReq;
class TDivineTroopsSurmountReq;
class TDivineTroopsSurmountRes;
class TDivineTroopsLotteryReq;
class TDivineTroopsLotteryRsp;
class TDivineRecruitBuyReq;
class TDivineRecruitBuyRsp;
class TDivineRecruitInfoRsp;
class TItemIdInfo;
class TDivineRecruitRewardReq;
class TDivineRecruitRewardRsp;
class TDivineGetChallengeRsp;
class TSquadInfo;
class TDivineTroopsSetSquadReq;
class TBuyChallengeNumReq;
class TDivineDoBattleReq;
class TDivineDoBattleRsp;
class TDivineReportBattleReq;
class TDivineReportBattleRsp;
class TDivineSweepReq;
class TDivineSweepRsp;
class TDivineSkipFightReq;
class TDivineSkipFightRsp;
class TDivineBookReq;
class TDivineGetBookItemRsp;
class TDivineRecycleReq;
class TDivineRecycleRsp;
class TDivineCompoundFragReq;
class TDivineCompoundFragRsp;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TDivineTroopsSmeltReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineTroopsSmeltReq : public ::google::protobuf::Message {
 public:
  TDivineTroopsSmeltReq();
  virtual ~TDivineTroopsSmeltReq();

  TDivineTroopsSmeltReq(const TDivineTroopsSmeltReq& from);

  inline TDivineTroopsSmeltReq& operator=(const TDivineTroopsSmeltReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineTroopsSmeltReq& default_instance();

  void Swap(TDivineTroopsSmeltReq* other);

  // implements Message ----------------------------------------------

  TDivineTroopsSmeltReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineTroopsSmeltReq& from);
  void MergeFrom(const TDivineTroopsSmeltReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 EquipId = 1;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsSmeltReq</name>
  	<Function>
  		<name>equipid</name>
  		<replaceName>EquipId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_equipid</name>
  		<replaceName>EquipId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_equipid</name>
  		<replaceName>EquipId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 equipid() const;
  inline void set_equipid(::google::protobuf::uint32 value);

  // optional uint32 SmeltType = 2;
  inline bool has_smelttype() const;
  inline void clear_smelttype();
  static const int kSmeltTypeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsSmeltReq</name>
  	<Function>
  		<name>smelttype</name>
  		<replaceName>SmeltType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_smelttype</name>
  		<replaceName>SmeltType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_smelttype</name>
  		<replaceName>SmeltType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 smelttype() const;
  inline void set_smelttype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineTroopsSmeltReq)
 private:
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_smelttype();
  inline void clear_has_smelttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 equipid_;
  ::google::protobuf::uint32 smelttype_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineTroopsSmeltReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineTroopsSmeltRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineTroopsSmeltRsp : public ::google::protobuf::Message {
 public:
  TDivineTroopsSmeltRsp();
  virtual ~TDivineTroopsSmeltRsp();

  TDivineTroopsSmeltRsp(const TDivineTroopsSmeltRsp& from);

  inline TDivineTroopsSmeltRsp& operator=(const TDivineTroopsSmeltRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineTroopsSmeltRsp& default_instance();

  void Swap(TDivineTroopsSmeltRsp* other);

  // implements Message ----------------------------------------------

  TDivineTroopsSmeltRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineTroopsSmeltRsp& from);
  void MergeFrom(const TDivineTroopsSmeltRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 SmeltAfterLv = 1;
  inline bool has_smeltafterlv() const;
  inline void clear_smeltafterlv();
  static const int kSmeltAfterLvFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsSmeltRsp</name>
  	<Function>
  		<name>smeltafterlv</name>
  		<replaceName>SmeltAfterLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_smeltafterlv</name>
  		<replaceName>SmeltAfterLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_smeltafterlv</name>
  		<replaceName>SmeltAfterLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 smeltafterlv() const;
  inline void set_smeltafterlv(::google::protobuf::uint32 value);

  // repeated .pb.TAttributeInfo SmeltUnSubmitAttribute = 2;
  inline int smeltunsubmitattribute_size() const;
  inline void clear_smeltunsubmitattribute();
  static const int kSmeltUnSubmitAttributeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsSmeltRsp</name>
  	<Function>
  		<name>smeltunsubmitattribute</name>
  		<replaceName>SmeltUnSubmitAttribute</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_smeltunsubmitattribute</name>
  		<replaceName>SmeltUnSubmitAttribute</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_smeltunsubmitattribute</name>
  		<replaceName>SmeltUnSubmitAttribute</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_smeltunsubmitattribute</name>
  		<replaceName>SmeltUnSubmitAttribute</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>smeltunsubmitattribute_size</name>
  		<replaceName>SmeltUnSubmitAttribute</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAttributeInfo& smeltunsubmitattribute(int index) const;
  inline ::pb::TAttributeInfo* mutable_smeltunsubmitattribute(int index);
  inline ::pb::TAttributeInfo* add_smeltunsubmitattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo >&
      smeltunsubmitattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo >*
      mutable_smeltunsubmitattribute();

  // repeated .pb.TAttributeInfo SmeltAttribute = 3;
  inline int smeltattribute_size() const;
  inline void clear_smeltattribute();
  static const int kSmeltAttributeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsSmeltRsp</name>
  	<Function>
  		<name>smeltattribute</name>
  		<replaceName>SmeltAttribute</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_smeltattribute</name>
  		<replaceName>SmeltAttribute</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_smeltattribute</name>
  		<replaceName>SmeltAttribute</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_smeltattribute</name>
  		<replaceName>SmeltAttribute</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>smeltattribute_size</name>
  		<replaceName>SmeltAttribute</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAttributeInfo& smeltattribute(int index) const;
  inline ::pb::TAttributeInfo* mutable_smeltattribute(int index);
  inline ::pb::TAttributeInfo* add_smeltattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo >&
      smeltattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo >*
      mutable_smeltattribute();

  // @@protoc_insertion_point(class_scope:pb.TDivineTroopsSmeltRsp)
 private:
  inline void set_has_smeltafterlv();
  inline void clear_has_smeltafterlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo > smeltunsubmitattribute_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo > smeltattribute_;
  ::google::protobuf::uint32 smeltafterlv_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineTroopsSmeltRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineTroopsReplaceSmeltReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineTroopsReplaceSmeltReq : public ::google::protobuf::Message {
 public:
  TDivineTroopsReplaceSmeltReq();
  virtual ~TDivineTroopsReplaceSmeltReq();

  TDivineTroopsReplaceSmeltReq(const TDivineTroopsReplaceSmeltReq& from);

  inline TDivineTroopsReplaceSmeltReq& operator=(const TDivineTroopsReplaceSmeltReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineTroopsReplaceSmeltReq& default_instance();

  void Swap(TDivineTroopsReplaceSmeltReq* other);

  // implements Message ----------------------------------------------

  TDivineTroopsReplaceSmeltReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineTroopsReplaceSmeltReq& from);
  void MergeFrom(const TDivineTroopsReplaceSmeltReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 EquipId = 1;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsReplaceSmeltReq</name>
  	<Function>
  		<name>equipid</name>
  		<replaceName>EquipId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_equipid</name>
  		<replaceName>EquipId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_equipid</name>
  		<replaceName>EquipId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 equipid() const;
  inline void set_equipid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineTroopsReplaceSmeltReq)
 private:
  inline void set_has_equipid();
  inline void clear_has_equipid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 equipid_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineTroopsReplaceSmeltReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineTroopsReplaceSmeltRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineTroopsReplaceSmeltRsp : public ::google::protobuf::Message {
 public:
  TDivineTroopsReplaceSmeltRsp();
  virtual ~TDivineTroopsReplaceSmeltRsp();

  TDivineTroopsReplaceSmeltRsp(const TDivineTroopsReplaceSmeltRsp& from);

  inline TDivineTroopsReplaceSmeltRsp& operator=(const TDivineTroopsReplaceSmeltRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineTroopsReplaceSmeltRsp& default_instance();

  void Swap(TDivineTroopsReplaceSmeltRsp* other);

  // implements Message ----------------------------------------------

  TDivineTroopsReplaceSmeltRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineTroopsReplaceSmeltRsp& from);
  void MergeFrom(const TDivineTroopsReplaceSmeltRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 SmeltLv = 1;
  inline bool has_smeltlv() const;
  inline void clear_smeltlv();
  static const int kSmeltLvFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsReplaceSmeltRsp</name>
  	<Function>
  		<name>smeltlv</name>
  		<replaceName>SmeltLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_smeltlv</name>
  		<replaceName>SmeltLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_smeltlv</name>
  		<replaceName>SmeltLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 smeltlv() const;
  inline void set_smeltlv(::google::protobuf::uint32 value);

  // repeated .pb.TAttributeInfo SmeltAttribute = 2;
  inline int smeltattribute_size() const;
  inline void clear_smeltattribute();
  static const int kSmeltAttributeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsReplaceSmeltRsp</name>
  	<Function>
  		<name>smeltattribute</name>
  		<replaceName>SmeltAttribute</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_smeltattribute</name>
  		<replaceName>SmeltAttribute</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_smeltattribute</name>
  		<replaceName>SmeltAttribute</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_smeltattribute</name>
  		<replaceName>SmeltAttribute</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>smeltattribute_size</name>
  		<replaceName>SmeltAttribute</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAttributeInfo& smeltattribute(int index) const;
  inline ::pb::TAttributeInfo* mutable_smeltattribute(int index);
  inline ::pb::TAttributeInfo* add_smeltattribute();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo >&
      smeltattribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo >*
      mutable_smeltattribute();

  // @@protoc_insertion_point(class_scope:pb.TDivineTroopsReplaceSmeltRsp)
 private:
  inline void set_has_smeltlv();
  inline void clear_has_smeltlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo > smeltattribute_;
  ::google::protobuf::uint32 smeltlv_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineTroopsReplaceSmeltRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineTroopsCancelSmeltReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineTroopsCancelSmeltReq : public ::google::protobuf::Message {
 public:
  TDivineTroopsCancelSmeltReq();
  virtual ~TDivineTroopsCancelSmeltReq();

  TDivineTroopsCancelSmeltReq(const TDivineTroopsCancelSmeltReq& from);

  inline TDivineTroopsCancelSmeltReq& operator=(const TDivineTroopsCancelSmeltReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineTroopsCancelSmeltReq& default_instance();

  void Swap(TDivineTroopsCancelSmeltReq* other);

  // implements Message ----------------------------------------------

  TDivineTroopsCancelSmeltReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineTroopsCancelSmeltReq& from);
  void MergeFrom(const TDivineTroopsCancelSmeltReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 EquipId = 1;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsCancelSmeltReq</name>
  	<Function>
  		<name>equipid</name>
  		<replaceName>EquipId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_equipid</name>
  		<replaceName>EquipId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_equipid</name>
  		<replaceName>EquipId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 equipid() const;
  inline void set_equipid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineTroopsCancelSmeltReq)
 private:
  inline void set_has_equipid();
  inline void clear_has_equipid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 equipid_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineTroopsCancelSmeltReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineTroopsSurmountReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineTroopsSurmountReq : public ::google::protobuf::Message {
 public:
  TDivineTroopsSurmountReq();
  virtual ~TDivineTroopsSurmountReq();

  TDivineTroopsSurmountReq(const TDivineTroopsSurmountReq& from);

  inline TDivineTroopsSurmountReq& operator=(const TDivineTroopsSurmountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineTroopsSurmountReq& default_instance();

  void Swap(TDivineTroopsSurmountReq* other);

  // implements Message ----------------------------------------------

  TDivineTroopsSurmountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineTroopsSurmountReq& from);
  void MergeFrom(const TDivineTroopsSurmountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 EquipId = 1;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsSurmountReq</name>
  	<Function>
  		<name>equipid</name>
  		<replaceName>EquipId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_equipid</name>
  		<replaceName>EquipId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_equipid</name>
  		<replaceName>EquipId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 equipid() const;
  inline void set_equipid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineTroopsSurmountReq)
 private:
  inline void set_has_equipid();
  inline void clear_has_equipid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 equipid_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineTroopsSurmountReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineTroopsSurmountRes</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineTroopsSurmountRes : public ::google::protobuf::Message {
 public:
  TDivineTroopsSurmountRes();
  virtual ~TDivineTroopsSurmountRes();

  TDivineTroopsSurmountRes(const TDivineTroopsSurmountRes& from);

  inline TDivineTroopsSurmountRes& operator=(const TDivineTroopsSurmountRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineTroopsSurmountRes& default_instance();

  void Swap(TDivineTroopsSurmountRes* other);

  // implements Message ----------------------------------------------

  TDivineTroopsSurmountRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineTroopsSurmountRes& from);
  void MergeFrom(const TDivineTroopsSurmountRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 SmeltLv = 1;
  inline bool has_smeltlv() const;
  inline void clear_smeltlv();
  static const int kSmeltLvFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsSurmountRes</name>
  	<Function>
  		<name>smeltlv</name>
  		<replaceName>SmeltLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_smeltlv</name>
  		<replaceName>SmeltLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_smeltlv</name>
  		<replaceName>SmeltLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 smeltlv() const;
  inline void set_smeltlv(::google::protobuf::uint32 value);

  // optional uint32 SurmountLv = 2;
  inline bool has_surmountlv() const;
  inline void clear_surmountlv();
  static const int kSurmountLvFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsSurmountRes</name>
  	<Function>
  		<name>surmountlv</name>
  		<replaceName>SurmountLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_surmountlv</name>
  		<replaceName>SurmountLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_surmountlv</name>
  		<replaceName>SurmountLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 surmountlv() const;
  inline void set_surmountlv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineTroopsSurmountRes)
 private:
  inline void set_has_smeltlv();
  inline void clear_has_smeltlv();
  inline void set_has_surmountlv();
  inline void clear_has_surmountlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 smeltlv_;
  ::google::protobuf::uint32 surmountlv_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineTroopsSurmountRes* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineTroopsLotteryReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineTroopsLotteryReq : public ::google::protobuf::Message {
 public:
  TDivineTroopsLotteryReq();
  virtual ~TDivineTroopsLotteryReq();

  TDivineTroopsLotteryReq(const TDivineTroopsLotteryReq& from);

  inline TDivineTroopsLotteryReq& operator=(const TDivineTroopsLotteryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineTroopsLotteryReq& default_instance();

  void Swap(TDivineTroopsLotteryReq* other);

  // implements Message ----------------------------------------------

  TDivineTroopsLotteryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineTroopsLotteryReq& from);
  void MergeFrom(const TDivineTroopsLotteryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 DrawType = 1;
  inline bool has_drawtype() const;
  inline void clear_drawtype();
  static const int kDrawTypeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsLotteryReq</name>
  	<Function>
  		<name>drawtype</name>
  		<replaceName>DrawType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_drawtype</name>
  		<replaceName>DrawType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_drawtype</name>
  		<replaceName>DrawType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 drawtype() const;
  inline void set_drawtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineTroopsLotteryReq)
 private:
  inline void set_has_drawtype();
  inline void clear_has_drawtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 drawtype_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineTroopsLotteryReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineTroopsLotteryRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineTroopsLotteryRsp : public ::google::protobuf::Message {
 public:
  TDivineTroopsLotteryRsp();
  virtual ~TDivineTroopsLotteryRsp();

  TDivineTroopsLotteryRsp(const TDivineTroopsLotteryRsp& from);

  inline TDivineTroopsLotteryRsp& operator=(const TDivineTroopsLotteryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineTroopsLotteryRsp& default_instance();

  void Swap(TDivineTroopsLotteryRsp* other);

  // implements Message ----------------------------------------------

  TDivineTroopsLotteryRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineTroopsLotteryRsp& from);
  void MergeFrom(const TDivineTroopsLotteryRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsLotteryRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // optional uint32 RecruitScore = 2;
  inline bool has_recruitscore() const;
  inline void clear_recruitscore();
  static const int kRecruitScoreFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsLotteryRsp</name>
  	<Function>
  		<name>recruitscore</name>
  		<replaceName>RecruitScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recruitscore</name>
  		<replaceName>RecruitScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recruitscore</name>
  		<replaceName>RecruitScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recruitscore() const;
  inline void set_recruitscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineTroopsLotteryRsp)
 private:
  inline void set_has_recruitscore();
  inline void clear_has_recruitscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  ::google::protobuf::uint32 recruitscore_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineTroopsLotteryRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineRecruitBuyReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineRecruitBuyReq : public ::google::protobuf::Message {
 public:
  TDivineRecruitBuyReq();
  virtual ~TDivineRecruitBuyReq();

  TDivineRecruitBuyReq(const TDivineRecruitBuyReq& from);

  inline TDivineRecruitBuyReq& operator=(const TDivineRecruitBuyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineRecruitBuyReq& default_instance();

  void Swap(TDivineRecruitBuyReq* other);

  // implements Message ----------------------------------------------

  TDivineRecruitBuyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineRecruitBuyReq& from);
  void MergeFrom(const TDivineRecruitBuyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RecruitBuyType = 1;
  inline bool has_recruitbuytype() const;
  inline void clear_recruitbuytype();
  static const int kRecruitBuyTypeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineRecruitBuyReq</name>
  	<Function>
  		<name>recruitbuytype</name>
  		<replaceName>RecruitBuyType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recruitbuytype</name>
  		<replaceName>RecruitBuyType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recruitbuytype</name>
  		<replaceName>RecruitBuyType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recruitbuytype() const;
  inline void set_recruitbuytype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineRecruitBuyReq)
 private:
  inline void set_has_recruitbuytype();
  inline void clear_has_recruitbuytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recruitbuytype_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineRecruitBuyReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineRecruitBuyRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineRecruitBuyRsp : public ::google::protobuf::Message {
 public:
  TDivineRecruitBuyRsp();
  virtual ~TDivineRecruitBuyRsp();

  TDivineRecruitBuyRsp(const TDivineRecruitBuyRsp& from);

  inline TDivineRecruitBuyRsp& operator=(const TDivineRecruitBuyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineRecruitBuyRsp& default_instance();

  void Swap(TDivineRecruitBuyRsp* other);

  // implements Message ----------------------------------------------

  TDivineRecruitBuyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineRecruitBuyRsp& from);
  void MergeFrom(const TDivineRecruitBuyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineRecruitBuyRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TDivineRecruitBuyRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineRecruitBuyRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineRecruitInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineRecruitInfoRsp : public ::google::protobuf::Message {
 public:
  TDivineRecruitInfoRsp();
  virtual ~TDivineRecruitInfoRsp();

  TDivineRecruitInfoRsp(const TDivineRecruitInfoRsp& from);

  inline TDivineRecruitInfoRsp& operator=(const TDivineRecruitInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineRecruitInfoRsp& default_instance();

  void Swap(TDivineRecruitInfoRsp* other);

  // implements Message ----------------------------------------------

  TDivineRecruitInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineRecruitInfoRsp& from);
  void MergeFrom(const TDivineRecruitInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RecruitScore = 1;
  inline bool has_recruitscore() const;
  inline void clear_recruitscore();
  static const int kRecruitScoreFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineRecruitInfoRsp</name>
  	<Function>
  		<name>recruitscore</name>
  		<replaceName>RecruitScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recruitscore</name>
  		<replaceName>RecruitScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recruitscore</name>
  		<replaceName>RecruitScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recruitscore() const;
  inline void set_recruitscore(::google::protobuf::uint32 value);

  // optional uint32 RecruitNum = 2;
  inline bool has_recruitnum() const;
  inline void clear_recruitnum();
  static const int kRecruitNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineRecruitInfoRsp</name>
  	<Function>
  		<name>recruitnum</name>
  		<replaceName>RecruitNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recruitnum</name>
  		<replaceName>RecruitNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recruitnum</name>
  		<replaceName>RecruitNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recruitnum() const;
  inline void set_recruitnum(::google::protobuf::uint32 value);

  // optional uint32 HasBuyNum = 3;
  inline bool has_hasbuynum() const;
  inline void clear_hasbuynum();
  static const int kHasBuyNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TDivineRecruitInfoRsp</name>
  	<Function>
  		<name>hasbuynum</name>
  		<replaceName>HasBuyNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hasbuynum</name>
  		<replaceName>HasBuyNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hasbuynum</name>
  		<replaceName>HasBuyNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hasbuynum() const;
  inline void set_hasbuynum(::google::protobuf::uint32 value);

  // repeated .pb.TItemIdInfo ItemId = 4;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TDivineRecruitInfoRsp</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemid_size</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TItemIdInfo& itemid(int index) const;
  inline ::pb::TItemIdInfo* mutable_itemid(int index);
  inline ::pb::TItemIdInfo* add_itemid();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TItemIdInfo >&
      itemid() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TItemIdInfo >*
      mutable_itemid();

  // @@protoc_insertion_point(class_scope:pb.TDivineRecruitInfoRsp)
 private:
  inline void set_has_recruitscore();
  inline void clear_has_recruitscore();
  inline void set_has_recruitnum();
  inline void clear_has_recruitnum();
  inline void set_has_hasbuynum();
  inline void clear_has_hasbuynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recruitscore_;
  ::google::protobuf::uint32 recruitnum_;
  ::google::protobuf::RepeatedPtrField< ::pb::TItemIdInfo > itemid_;
  ::google::protobuf::uint32 hasbuynum_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineRecruitInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TItemIdInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TItemIdInfo : public ::google::protobuf::Message {
 public:
  TItemIdInfo();
  virtual ~TItemIdInfo();

  TItemIdInfo(const TItemIdInfo& from);

  inline TItemIdInfo& operator=(const TItemIdInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TItemIdInfo& default_instance();

  void Swap(TItemIdInfo* other);

  // implements Message ----------------------------------------------

  TItemIdInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TItemIdInfo& from);
  void MergeFrom(const TItemIdInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TItemIdInfo</name>
  	<Function>
  		<name>ids</name>
  		<replaceName>ids</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_ids</name>
  		<replaceName>ids</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_ids</name>
  		<replaceName>ids</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_ids</name>
  		<replaceName>ids</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>ids_size</name>
  		<replaceName>ids</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::uint32 value);
  inline void add_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:pb.TItemIdInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ids_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TItemIdInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineRecruitRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineRecruitRewardReq : public ::google::protobuf::Message {
 public:
  TDivineRecruitRewardReq();
  virtual ~TDivineRecruitRewardReq();

  TDivineRecruitRewardReq(const TDivineRecruitRewardReq& from);

  inline TDivineRecruitRewardReq& operator=(const TDivineRecruitRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineRecruitRewardReq& default_instance();

  void Swap(TDivineRecruitRewardReq* other);

  // implements Message ----------------------------------------------

  TDivineRecruitRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineRecruitRewardReq& from);
  void MergeFrom(const TDivineRecruitRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineRecruitRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineRecruitRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineRecruitRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineRecruitRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineRecruitRewardRsp : public ::google::protobuf::Message {
 public:
  TDivineRecruitRewardRsp();
  virtual ~TDivineRecruitRewardRsp();

  TDivineRecruitRewardRsp(const TDivineRecruitRewardRsp& from);

  inline TDivineRecruitRewardRsp& operator=(const TDivineRecruitRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineRecruitRewardRsp& default_instance();

  void Swap(TDivineRecruitRewardRsp* other);

  // implements Message ----------------------------------------------

  TDivineRecruitRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineRecruitRewardRsp& from);
  void MergeFrom(const TDivineRecruitRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineRecruitRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // repeated .pb.TItemIdInfo ItemId = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineRecruitRewardRsp</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemid_size</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TItemIdInfo& itemid(int index) const;
  inline ::pb::TItemIdInfo* mutable_itemid(int index);
  inline ::pb::TItemIdInfo* add_itemid();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TItemIdInfo >&
      itemid() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TItemIdInfo >*
      mutable_itemid();

  // @@protoc_insertion_point(class_scope:pb.TDivineRecruitRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  ::google::protobuf::RepeatedPtrField< ::pb::TItemIdInfo > itemid_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineRecruitRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineGetChallengeRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineGetChallengeRsp : public ::google::protobuf::Message {
 public:
  TDivineGetChallengeRsp();
  virtual ~TDivineGetChallengeRsp();

  TDivineGetChallengeRsp(const TDivineGetChallengeRsp& from);

  inline TDivineGetChallengeRsp& operator=(const TDivineGetChallengeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineGetChallengeRsp& default_instance();

  void Swap(TDivineGetChallengeRsp* other);

  // implements Message ----------------------------------------------

  TDivineGetChallengeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineGetChallengeRsp& from);
  void MergeFrom(const TDivineGetChallengeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 CurrentIndexId = 1;
  inline bool has_currentindexid() const;
  inline void clear_currentindexid();
  static const int kCurrentIndexIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineGetChallengeRsp</name>
  	<Function>
  		<name>currentindexid</name>
  		<replaceName>CurrentIndexId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_currentindexid</name>
  		<replaceName>CurrentIndexId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_currentindexid</name>
  		<replaceName>CurrentIndexId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 currentindexid() const;
  inline void set_currentindexid(::google::protobuf::uint32 value);

  // optional uint32 ChangeNum = 2;
  inline bool has_changenum() const;
  inline void clear_changenum();
  static const int kChangeNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineGetChallengeRsp</name>
  	<Function>
  		<name>changenum</name>
  		<replaceName>ChangeNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_changenum</name>
  		<replaceName>ChangeNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_changenum</name>
  		<replaceName>ChangeNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 changenum() const;
  inline void set_changenum(::google::protobuf::uint32 value);

  // optional uint32 buyChangeNum = 3;
  inline bool has_buychangenum() const;
  inline void clear_buychangenum();
  static const int kBuyChangeNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TDivineGetChallengeRsp</name>
  	<Function>
  		<name>buychangenum</name>
  		<replaceName>buyChangeNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buychangenum</name>
  		<replaceName>buyChangeNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buychangenum</name>
  		<replaceName>buyChangeNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buychangenum() const;
  inline void set_buychangenum(::google::protobuf::uint32 value);

  // repeated .pb.TSquadInfo SquadArr = 4;
  inline int squadarr_size() const;
  inline void clear_squadarr();
  static const int kSquadArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TDivineGetChallengeRsp</name>
  	<Function>
  		<name>squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>squadarr_size</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSquadInfo& squadarr(int index) const;
  inline ::pb::TSquadInfo* mutable_squadarr(int index);
  inline ::pb::TSquadInfo* add_squadarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSquadInfo >&
      squadarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSquadInfo >*
      mutable_squadarr();

  // @@protoc_insertion_point(class_scope:pb.TDivineGetChallengeRsp)
 private:
  inline void set_has_currentindexid();
  inline void clear_has_currentindexid();
  inline void set_has_changenum();
  inline void clear_has_changenum();
  inline void set_has_buychangenum();
  inline void clear_has_buychangenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 currentindexid_;
  ::google::protobuf::uint32 changenum_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSquadInfo > squadarr_;
  ::google::protobuf::uint32 buychangenum_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineGetChallengeRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSquadInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSquadInfo : public ::google::protobuf::Message {
 public:
  TSquadInfo();
  virtual ~TSquadInfo();

  TSquadInfo(const TSquadInfo& from);

  inline TSquadInfo& operator=(const TSquadInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSquadInfo& default_instance();

  void Swap(TSquadInfo* other);

  // implements Message ----------------------------------------------

  TSquadInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSquadInfo& from);
  void MergeFrom(const TSquadInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSquadInfo</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 Hid = 2;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSquadInfo</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TSquadInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TSquadInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineTroopsSetSquadReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineTroopsSetSquadReq : public ::google::protobuf::Message {
 public:
  TDivineTroopsSetSquadReq();
  virtual ~TDivineTroopsSetSquadReq();

  TDivineTroopsSetSquadReq(const TDivineTroopsSetSquadReq& from);

  inline TDivineTroopsSetSquadReq& operator=(const TDivineTroopsSetSquadReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineTroopsSetSquadReq& default_instance();

  void Swap(TDivineTroopsSetSquadReq* other);

  // implements Message ----------------------------------------------

  TDivineTroopsSetSquadReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineTroopsSetSquadReq& from);
  void MergeFrom(const TDivineTroopsSetSquadReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSquadInfo SquadArr = 1;
  inline int squadarr_size() const;
  inline void clear_squadarr();
  static const int kSquadArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineTroopsSetSquadReq</name>
  	<Function>
  		<name>squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_squadarr</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>squadarr_size</name>
  		<replaceName>SquadArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSquadInfo& squadarr(int index) const;
  inline ::pb::TSquadInfo* mutable_squadarr(int index);
  inline ::pb::TSquadInfo* add_squadarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSquadInfo >&
      squadarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSquadInfo >*
      mutable_squadarr();

  // @@protoc_insertion_point(class_scope:pb.TDivineTroopsSetSquadReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSquadInfo > squadarr_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineTroopsSetSquadReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBuyChallengeNumReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBuyChallengeNumReq : public ::google::protobuf::Message {
 public:
  TBuyChallengeNumReq();
  virtual ~TBuyChallengeNumReq();

  TBuyChallengeNumReq(const TBuyChallengeNumReq& from);

  inline TBuyChallengeNumReq& operator=(const TBuyChallengeNumReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBuyChallengeNumReq& default_instance();

  void Swap(TBuyChallengeNumReq* other);

  // implements Message ----------------------------------------------

  TBuyChallengeNumReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBuyChallengeNumReq& from);
  void MergeFrom(const TBuyChallengeNumReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBuyChallengeNumReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TBuyChallengeNumReq)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TBuyChallengeNumReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineDoBattleReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineDoBattleReq : public ::google::protobuf::Message {
 public:
  TDivineDoBattleReq();
  virtual ~TDivineDoBattleReq();

  TDivineDoBattleReq(const TDivineDoBattleReq& from);

  inline TDivineDoBattleReq& operator=(const TDivineDoBattleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineDoBattleReq& default_instance();

  void Swap(TDivineDoBattleReq* other);

  // implements Message ----------------------------------------------

  TDivineDoBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineDoBattleReq& from);
  void MergeFrom(const TDivineDoBattleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 IndexId = 1;
  inline bool has_indexid() const;
  inline void clear_indexid();
  static const int kIndexIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineDoBattleReq</name>
  	<Function>
  		<name>indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 indexid() const;
  inline void set_indexid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineDoBattleReq)
 private:
  inline void set_has_indexid();
  inline void clear_has_indexid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 indexid_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineDoBattleReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineDoBattleRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineDoBattleRsp : public ::google::protobuf::Message {
 public:
  TDivineDoBattleRsp();
  virtual ~TDivineDoBattleRsp();

  TDivineDoBattleRsp(const TDivineDoBattleRsp& from);

  inline TDivineDoBattleRsp& operator=(const TDivineDoBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineDoBattleRsp& default_instance();

  void Swap(TDivineDoBattleRsp* other);

  // implements Message ----------------------------------------------

  TDivineDoBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineDoBattleRsp& from);
  void MergeFrom(const TDivineDoBattleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward DropArray = 1;
  inline int droparray_size() const;
  inline void clear_droparray();
  static const int kDropArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineDoBattleRsp</name>
  	<Function>
  		<name>droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>droparray_size</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& droparray(int index) const;
  inline ::pb::TCommonReward* mutable_droparray(int index);
  inline ::pb::TCommonReward* add_droparray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      droparray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_droparray();

  // optional .pb.TBattleArgs BattleArgs = 2;
  inline bool has_battleargs() const;
  inline void clear_battleargs();
  static const int kBattleArgsFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineDoBattleRsp</name>
  	<Function>
  		<name>battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBattleArgs& battleargs() const;
  inline ::pb::TBattleArgs* mutable_battleargs();
  inline ::pb::TBattleArgs* release_battleargs();
  inline void set_allocated_battleargs(::pb::TBattleArgs* battleargs);

  // @@protoc_insertion_point(class_scope:pb.TDivineDoBattleRsp)
 private:
  inline void set_has_battleargs();
  inline void clear_has_battleargs();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > droparray_;
  ::pb::TBattleArgs* battleargs_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineDoBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineReportBattleReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineReportBattleReq : public ::google::protobuf::Message {
 public:
  TDivineReportBattleReq();
  virtual ~TDivineReportBattleReq();

  TDivineReportBattleReq(const TDivineReportBattleReq& from);

  inline TDivineReportBattleReq& operator=(const TDivineReportBattleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineReportBattleReq& default_instance();

  void Swap(TDivineReportBattleReq* other);

  // implements Message ----------------------------------------------

  TDivineReportBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineReportBattleReq& from);
  void MergeFrom(const TDivineReportBattleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 IndexId = 1;
  inline bool has_indexid() const;
  inline void clear_indexid();
  static const int kIndexIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineReportBattleReq</name>
  	<Function>
  		<name>indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 indexid() const;
  inline void set_indexid(::google::protobuf::uint32 value);

  // optional bytes BattleResultBytes = 2;
  inline bool has_battleresultbytes() const;
  inline void clear_battleresultbytes();
  static const int kBattleResultBytesFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineReportBattleReq</name>
  	<Function>
  		<name>battleresultbytes</name>
  		<replaceName>BattleResultBytes</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleresultbytes</name>
  		<replaceName>BattleResultBytes</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleresultbytes</name>
  		<replaceName>BattleResultBytes</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& battleresultbytes() const;
  inline void set_battleresultbytes(const ::std::string& value);
  inline void set_battleresultbytes(const char* value);
  inline void set_battleresultbytes(const void* value, size_t size);
  inline ::std::string* mutable_battleresultbytes();
  inline ::std::string* release_battleresultbytes();
  inline void set_allocated_battleresultbytes(::std::string* battleresultbytes);

  // @@protoc_insertion_point(class_scope:pb.TDivineReportBattleReq)
 private:
  inline void set_has_indexid();
  inline void clear_has_indexid();
  inline void set_has_battleresultbytes();
  inline void clear_has_battleresultbytes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* battleresultbytes_;
  ::google::protobuf::uint32 indexid_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineReportBattleReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineReportBattleRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineReportBattleRsp : public ::google::protobuf::Message {
 public:
  TDivineReportBattleRsp();
  virtual ~TDivineReportBattleRsp();

  TDivineReportBattleRsp(const TDivineReportBattleRsp& from);

  inline TDivineReportBattleRsp& operator=(const TDivineReportBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineReportBattleRsp& default_instance();

  void Swap(TDivineReportBattleRsp* other);

  // implements Message ----------------------------------------------

  TDivineReportBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineReportBattleRsp& from);
  void MergeFrom(const TDivineReportBattleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward DropArray = 1;
  inline int droparray_size() const;
  inline void clear_droparray();
  static const int kDropArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineReportBattleRsp</name>
  	<Function>
  		<name>droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>droparray_size</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& droparray(int index) const;
  inline ::pb::TCommonReward* mutable_droparray(int index);
  inline ::pb::TCommonReward* add_droparray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      droparray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_droparray();

  // @@protoc_insertion_point(class_scope:pb.TDivineReportBattleRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > droparray_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineReportBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineSweepReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineSweepReq : public ::google::protobuf::Message {
 public:
  TDivineSweepReq();
  virtual ~TDivineSweepReq();

  TDivineSweepReq(const TDivineSweepReq& from);

  inline TDivineSweepReq& operator=(const TDivineSweepReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineSweepReq& default_instance();

  void Swap(TDivineSweepReq* other);

  // implements Message ----------------------------------------------

  TDivineSweepReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineSweepReq& from);
  void MergeFrom(const TDivineSweepReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 IndexId = 1;
  inline bool has_indexid() const;
  inline void clear_indexid();
  static const int kIndexIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineSweepReq</name>
  	<Function>
  		<name>indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 indexid() const;
  inline void set_indexid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineSweepReq)
 private:
  inline void set_has_indexid();
  inline void clear_has_indexid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 indexid_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineSweepReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineSweepRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineSweepRsp : public ::google::protobuf::Message {
 public:
  TDivineSweepRsp();
  virtual ~TDivineSweepRsp();

  TDivineSweepRsp(const TDivineSweepRsp& from);

  inline TDivineSweepRsp& operator=(const TDivineSweepRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineSweepRsp& default_instance();

  void Swap(TDivineSweepRsp* other);

  // implements Message ----------------------------------------------

  TDivineSweepRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineSweepRsp& from);
  void MergeFrom(const TDivineSweepRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward DropArray = 1;
  inline int droparray_size() const;
  inline void clear_droparray();
  static const int kDropArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineSweepRsp</name>
  	<Function>
  		<name>droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>droparray_size</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& droparray(int index) const;
  inline ::pb::TCommonReward* mutable_droparray(int index);
  inline ::pb::TCommonReward* add_droparray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      droparray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_droparray();

  // @@protoc_insertion_point(class_scope:pb.TDivineSweepRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > droparray_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineSweepRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineSkipFightReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineSkipFightReq : public ::google::protobuf::Message {
 public:
  TDivineSkipFightReq();
  virtual ~TDivineSkipFightReq();

  TDivineSkipFightReq(const TDivineSkipFightReq& from);

  inline TDivineSkipFightReq& operator=(const TDivineSkipFightReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineSkipFightReq& default_instance();

  void Swap(TDivineSkipFightReq* other);

  // implements Message ----------------------------------------------

  TDivineSkipFightReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineSkipFightReq& from);
  void MergeFrom(const TDivineSkipFightReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 IndexId = 1;
  inline bool has_indexid() const;
  inline void clear_indexid();
  static const int kIndexIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineSkipFightReq</name>
  	<Function>
  		<name>indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 indexid() const;
  inline void set_indexid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineSkipFightReq)
 private:
  inline void set_has_indexid();
  inline void clear_has_indexid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 indexid_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineSkipFightReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineSkipFightRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineSkipFightRsp : public ::google::protobuf::Message {
 public:
  TDivineSkipFightRsp();
  virtual ~TDivineSkipFightRsp();

  TDivineSkipFightRsp(const TDivineSkipFightRsp& from);

  inline TDivineSkipFightRsp& operator=(const TDivineSkipFightRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineSkipFightRsp& default_instance();

  void Swap(TDivineSkipFightRsp* other);

  // implements Message ----------------------------------------------

  TDivineSkipFightRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineSkipFightRsp& from);
  void MergeFrom(const TDivineSkipFightRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TBattleResult BattleRet = 1;
  inline bool has_battleret() const;
  inline void clear_battleret();
  static const int kBattleRetFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineSkipFightRsp</name>
  	<Function>
  		<name>battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBattleResult& battleret() const;
  inline ::pb::TBattleResult* mutable_battleret();
  inline ::pb::TBattleResult* release_battleret();
  inline void set_allocated_battleret(::pb::TBattleResult* battleret);

  // repeated .pb.TCommonReward RewardArray = 2;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineSkipFightRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // optional uint32 Success = 3;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TDivineSkipFightRsp</name>
  	<Function>
  		<name>success</name>
  		<replaceName>Success</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_success</name>
  		<replaceName>Success</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_success</name>
  		<replaceName>Success</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 success() const;
  inline void set_success(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineSkipFightRsp)
 private:
  inline void set_has_battleret();
  inline void clear_has_battleret();
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TBattleResult* battleret_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  ::google::protobuf::uint32 success_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineSkipFightRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineBookReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineBookReq : public ::google::protobuf::Message {
 public:
  TDivineBookReq();
  virtual ~TDivineBookReq();

  TDivineBookReq(const TDivineBookReq& from);

  inline TDivineBookReq& operator=(const TDivineBookReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineBookReq& default_instance();

  void Swap(TDivineBookReq* other);

  // implements Message ----------------------------------------------

  TDivineBookReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineBookReq& from);
  void MergeFrom(const TDivineBookReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 BookId = 1;
  inline bool has_bookid() const;
  inline void clear_bookid();
  static const int kBookIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineBookReq</name>
  	<Function>
  		<name>bookid</name>
  		<replaceName>BookId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_bookid</name>
  		<replaceName>BookId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bookid</name>
  		<replaceName>BookId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 bookid() const;
  inline void set_bookid(::google::protobuf::uint32 value);

  // optional uint32 BookType = 2;
  inline bool has_booktype() const;
  inline void clear_booktype();
  static const int kBookTypeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineBookReq</name>
  	<Function>
  		<name>booktype</name>
  		<replaceName>BookType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_booktype</name>
  		<replaceName>BookType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_booktype</name>
  		<replaceName>BookType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 booktype() const;
  inline void set_booktype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineBookReq)
 private:
  inline void set_has_bookid();
  inline void clear_has_bookid();
  inline void set_has_booktype();
  inline void clear_has_booktype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 bookid_;
  ::google::protobuf::uint32 booktype_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineBookReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineGetBookItemRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineGetBookItemRsp : public ::google::protobuf::Message {
 public:
  TDivineGetBookItemRsp();
  virtual ~TDivineGetBookItemRsp();

  TDivineGetBookItemRsp(const TDivineGetBookItemRsp& from);

  inline TDivineGetBookItemRsp& operator=(const TDivineGetBookItemRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineGetBookItemRsp& default_instance();

  void Swap(TDivineGetBookItemRsp* other);

  // implements Message ----------------------------------------------

  TDivineGetBookItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineGetBookItemRsp& from);
  void MergeFrom(const TDivineGetBookItemRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 BookId = 1;
  inline int bookid_size() const;
  inline void clear_bookid();
  static const int kBookIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineGetBookItemRsp</name>
  	<Function>
  		<name>bookid</name>
  		<replaceName>BookId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_bookid</name>
  		<replaceName>BookId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_bookid</name>
  		<replaceName>BookId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bookid</name>
  		<replaceName>BookId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>bookid_size</name>
  		<replaceName>BookId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 bookid(int index) const;
  inline void set_bookid(int index, ::google::protobuf::uint32 value);
  inline void add_bookid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bookid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bookid();

  // @@protoc_insertion_point(class_scope:pb.TDivineGetBookItemRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bookid_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineGetBookItemRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineRecycleReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineRecycleReq : public ::google::protobuf::Message {
 public:
  TDivineRecycleReq();
  virtual ~TDivineRecycleReq();

  TDivineRecycleReq(const TDivineRecycleReq& from);

  inline TDivineRecycleReq& operator=(const TDivineRecycleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineRecycleReq& default_instance();

  void Swap(TDivineRecycleReq* other);

  // implements Message ----------------------------------------------

  TDivineRecycleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineRecycleReq& from);
  void MergeFrom(const TDivineRecycleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 Id = 1;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineRecycleReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>id_size</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // optional uint32 RecycleType = 2;
  inline bool has_recycletype() const;
  inline void clear_recycletype();
  static const int kRecycleTypeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineRecycleReq</name>
  	<Function>
  		<name>recycletype</name>
  		<replaceName>RecycleType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recycletype</name>
  		<replaceName>RecycleType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recycletype</name>
  		<replaceName>RecycleType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recycletype() const;
  inline void set_recycletype(::google::protobuf::uint32 value);

  // optional uint32 ActType = 3;
  inline bool has_acttype() const;
  inline void clear_acttype();
  static const int kActTypeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TDivineRecycleReq</name>
  	<Function>
  		<name>acttype</name>
  		<replaceName>ActType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_acttype</name>
  		<replaceName>ActType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_acttype</name>
  		<replaceName>ActType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 acttype() const;
  inline void set_acttype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineRecycleReq)
 private:
  inline void set_has_recycletype();
  inline void clear_has_recycletype();
  inline void set_has_acttype();
  inline void clear_has_acttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;
  ::google::protobuf::uint32 recycletype_;
  ::google::protobuf::uint32 acttype_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineRecycleReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineRecycleRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineRecycleRsp : public ::google::protobuf::Message {
 public:
  TDivineRecycleRsp();
  virtual ~TDivineRecycleRsp();

  TDivineRecycleRsp(const TDivineRecycleRsp& from);

  inline TDivineRecycleRsp& operator=(const TDivineRecycleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineRecycleRsp& default_instance();

  void Swap(TDivineRecycleRsp* other);

  // implements Message ----------------------------------------------

  TDivineRecycleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineRecycleRsp& from);
  void MergeFrom(const TDivineRecycleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineRecycleRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TDivineRecycleRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineRecycleRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineCompoundFragReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineCompoundFragReq : public ::google::protobuf::Message {
 public:
  TDivineCompoundFragReq();
  virtual ~TDivineCompoundFragReq();

  TDivineCompoundFragReq(const TDivineCompoundFragReq& from);

  inline TDivineCompoundFragReq& operator=(const TDivineCompoundFragReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineCompoundFragReq& default_instance();

  void Swap(TDivineCompoundFragReq* other);

  // implements Message ----------------------------------------------

  TDivineCompoundFragReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineCompoundFragReq& from);
  void MergeFrom(const TDivineCompoundFragReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineCompoundFragReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // repeated uint32 FlagId = 2;
  inline int flagid_size() const;
  inline void clear_flagid();
  static const int kFlagIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDivineCompoundFragReq</name>
  	<Function>
  		<name>flagid</name>
  		<replaceName>FlagId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_flagid</name>
  		<replaceName>FlagId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_flagid</name>
  		<replaceName>FlagId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_flagid</name>
  		<replaceName>FlagId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>flagid_size</name>
  		<replaceName>FlagId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 flagid(int index) const;
  inline void set_flagid(int index, ::google::protobuf::uint32 value);
  inline void add_flagid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      flagid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_flagid();

  // optional uint32 ActType = 3;
  inline bool has_acttype() const;
  inline void clear_acttype();
  static const int kActTypeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TDivineCompoundFragReq</name>
  	<Function>
  		<name>acttype</name>
  		<replaceName>ActType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_acttype</name>
  		<replaceName>ActType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_acttype</name>
  		<replaceName>ActType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 acttype() const;
  inline void set_acttype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDivineCompoundFragReq)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_acttype();
  inline void clear_has_acttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > flagid_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 acttype_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineCompoundFragReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDivineCompoundFragRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DivineTroops.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDivineCompoundFragRsp : public ::google::protobuf::Message {
 public:
  TDivineCompoundFragRsp();
  virtual ~TDivineCompoundFragRsp();

  TDivineCompoundFragRsp(const TDivineCompoundFragRsp& from);

  inline TDivineCompoundFragRsp& operator=(const TDivineCompoundFragRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDivineCompoundFragRsp& default_instance();

  void Swap(TDivineCompoundFragRsp* other);

  // implements Message ----------------------------------------------

  TDivineCompoundFragRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDivineCompoundFragRsp& from);
  void MergeFrom(const TDivineCompoundFragRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ItemId = 1;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDivineCompoundFragRsp</name>
  	<Function>
  		<name>itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemid</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>itemid_size</name>
  		<replaceName>ItemId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::uint32 value);
  inline void add_itemid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemid();

  // @@protoc_insertion_point(class_scope:pb.TDivineCompoundFragRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemid_;
  friend void  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_AssignDesc_net_2fDivineTroops_2eproto();
  friend void protobuf_ShutdownFile_net_2fDivineTroops_2eproto();

  void InitAsDefaultInstance();
  static TDivineCompoundFragRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TDivineTroopsSmeltReq

// optional uint32 EquipId = 1;
inline bool TDivineTroopsSmeltReq::has_equipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineTroopsSmeltReq::set_has_equipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineTroopsSmeltReq::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineTroopsSmeltReq::clear_equipid() {
  equipid_ = 0u;
  clear_has_equipid();
}
inline ::google::protobuf::uint32 TDivineTroopsSmeltReq::equipid() const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsSmeltReq.EquipId)
  return equipid_;
}
inline void TDivineTroopsSmeltReq::set_equipid(::google::protobuf::uint32 value) {
  set_has_equipid();
  equipid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineTroopsSmeltReq.EquipId)
}

// optional uint32 SmeltType = 2;
inline bool TDivineTroopsSmeltReq::has_smelttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDivineTroopsSmeltReq::set_has_smelttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDivineTroopsSmeltReq::clear_has_smelttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDivineTroopsSmeltReq::clear_smelttype() {
  smelttype_ = 0u;
  clear_has_smelttype();
}
inline ::google::protobuf::uint32 TDivineTroopsSmeltReq::smelttype() const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsSmeltReq.SmeltType)
  return smelttype_;
}
inline void TDivineTroopsSmeltReq::set_smelttype(::google::protobuf::uint32 value) {
  set_has_smelttype();
  smelttype_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineTroopsSmeltReq.SmeltType)
}

// -------------------------------------------------------------------

// TDivineTroopsSmeltRsp

// optional uint32 SmeltAfterLv = 1;
inline bool TDivineTroopsSmeltRsp::has_smeltafterlv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineTroopsSmeltRsp::set_has_smeltafterlv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineTroopsSmeltRsp::clear_has_smeltafterlv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineTroopsSmeltRsp::clear_smeltafterlv() {
  smeltafterlv_ = 0u;
  clear_has_smeltafterlv();
}
inline ::google::protobuf::uint32 TDivineTroopsSmeltRsp::smeltafterlv() const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsSmeltRsp.SmeltAfterLv)
  return smeltafterlv_;
}
inline void TDivineTroopsSmeltRsp::set_smeltafterlv(::google::protobuf::uint32 value) {
  set_has_smeltafterlv();
  smeltafterlv_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineTroopsSmeltRsp.SmeltAfterLv)
}

// repeated .pb.TAttributeInfo SmeltUnSubmitAttribute = 2;
inline int TDivineTroopsSmeltRsp::smeltunsubmitattribute_size() const {
  return smeltunsubmitattribute_.size();
}
inline void TDivineTroopsSmeltRsp::clear_smeltunsubmitattribute() {
  smeltunsubmitattribute_.Clear();
}
inline const ::pb::TAttributeInfo& TDivineTroopsSmeltRsp::smeltunsubmitattribute(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsSmeltRsp.SmeltUnSubmitAttribute)
  return smeltunsubmitattribute_.Get(index);
}
inline ::pb::TAttributeInfo* TDivineTroopsSmeltRsp::mutable_smeltunsubmitattribute(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineTroopsSmeltRsp.SmeltUnSubmitAttribute)
  return smeltunsubmitattribute_.Mutable(index);
}
inline ::pb::TAttributeInfo* TDivineTroopsSmeltRsp::add_smeltunsubmitattribute() {
  // @@protoc_insertion_point(field_add:pb.TDivineTroopsSmeltRsp.SmeltUnSubmitAttribute)
  return smeltunsubmitattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo >&
TDivineTroopsSmeltRsp::smeltunsubmitattribute() const {
  // @@protoc_insertion_point(field_list:pb.TDivineTroopsSmeltRsp.SmeltUnSubmitAttribute)
  return smeltunsubmitattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo >*
TDivineTroopsSmeltRsp::mutable_smeltunsubmitattribute() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineTroopsSmeltRsp.SmeltUnSubmitAttribute)
  return &smeltunsubmitattribute_;
}

// repeated .pb.TAttributeInfo SmeltAttribute = 3;
inline int TDivineTroopsSmeltRsp::smeltattribute_size() const {
  return smeltattribute_.size();
}
inline void TDivineTroopsSmeltRsp::clear_smeltattribute() {
  smeltattribute_.Clear();
}
inline const ::pb::TAttributeInfo& TDivineTroopsSmeltRsp::smeltattribute(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsSmeltRsp.SmeltAttribute)
  return smeltattribute_.Get(index);
}
inline ::pb::TAttributeInfo* TDivineTroopsSmeltRsp::mutable_smeltattribute(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineTroopsSmeltRsp.SmeltAttribute)
  return smeltattribute_.Mutable(index);
}
inline ::pb::TAttributeInfo* TDivineTroopsSmeltRsp::add_smeltattribute() {
  // @@protoc_insertion_point(field_add:pb.TDivineTroopsSmeltRsp.SmeltAttribute)
  return smeltattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo >&
TDivineTroopsSmeltRsp::smeltattribute() const {
  // @@protoc_insertion_point(field_list:pb.TDivineTroopsSmeltRsp.SmeltAttribute)
  return smeltattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo >*
TDivineTroopsSmeltRsp::mutable_smeltattribute() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineTroopsSmeltRsp.SmeltAttribute)
  return &smeltattribute_;
}

// -------------------------------------------------------------------

// TDivineTroopsReplaceSmeltReq

// optional uint32 EquipId = 1;
inline bool TDivineTroopsReplaceSmeltReq::has_equipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineTroopsReplaceSmeltReq::set_has_equipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineTroopsReplaceSmeltReq::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineTroopsReplaceSmeltReq::clear_equipid() {
  equipid_ = 0u;
  clear_has_equipid();
}
inline ::google::protobuf::uint32 TDivineTroopsReplaceSmeltReq::equipid() const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsReplaceSmeltReq.EquipId)
  return equipid_;
}
inline void TDivineTroopsReplaceSmeltReq::set_equipid(::google::protobuf::uint32 value) {
  set_has_equipid();
  equipid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineTroopsReplaceSmeltReq.EquipId)
}

// -------------------------------------------------------------------

// TDivineTroopsReplaceSmeltRsp

// optional uint32 SmeltLv = 1;
inline bool TDivineTroopsReplaceSmeltRsp::has_smeltlv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineTroopsReplaceSmeltRsp::set_has_smeltlv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineTroopsReplaceSmeltRsp::clear_has_smeltlv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineTroopsReplaceSmeltRsp::clear_smeltlv() {
  smeltlv_ = 0u;
  clear_has_smeltlv();
}
inline ::google::protobuf::uint32 TDivineTroopsReplaceSmeltRsp::smeltlv() const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsReplaceSmeltRsp.SmeltLv)
  return smeltlv_;
}
inline void TDivineTroopsReplaceSmeltRsp::set_smeltlv(::google::protobuf::uint32 value) {
  set_has_smeltlv();
  smeltlv_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineTroopsReplaceSmeltRsp.SmeltLv)
}

// repeated .pb.TAttributeInfo SmeltAttribute = 2;
inline int TDivineTroopsReplaceSmeltRsp::smeltattribute_size() const {
  return smeltattribute_.size();
}
inline void TDivineTroopsReplaceSmeltRsp::clear_smeltattribute() {
  smeltattribute_.Clear();
}
inline const ::pb::TAttributeInfo& TDivineTroopsReplaceSmeltRsp::smeltattribute(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsReplaceSmeltRsp.SmeltAttribute)
  return smeltattribute_.Get(index);
}
inline ::pb::TAttributeInfo* TDivineTroopsReplaceSmeltRsp::mutable_smeltattribute(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineTroopsReplaceSmeltRsp.SmeltAttribute)
  return smeltattribute_.Mutable(index);
}
inline ::pb::TAttributeInfo* TDivineTroopsReplaceSmeltRsp::add_smeltattribute() {
  // @@protoc_insertion_point(field_add:pb.TDivineTroopsReplaceSmeltRsp.SmeltAttribute)
  return smeltattribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo >&
TDivineTroopsReplaceSmeltRsp::smeltattribute() const {
  // @@protoc_insertion_point(field_list:pb.TDivineTroopsReplaceSmeltRsp.SmeltAttribute)
  return smeltattribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAttributeInfo >*
TDivineTroopsReplaceSmeltRsp::mutable_smeltattribute() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineTroopsReplaceSmeltRsp.SmeltAttribute)
  return &smeltattribute_;
}

// -------------------------------------------------------------------

// TDivineTroopsCancelSmeltReq

// optional uint32 EquipId = 1;
inline bool TDivineTroopsCancelSmeltReq::has_equipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineTroopsCancelSmeltReq::set_has_equipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineTroopsCancelSmeltReq::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineTroopsCancelSmeltReq::clear_equipid() {
  equipid_ = 0u;
  clear_has_equipid();
}
inline ::google::protobuf::uint32 TDivineTroopsCancelSmeltReq::equipid() const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsCancelSmeltReq.EquipId)
  return equipid_;
}
inline void TDivineTroopsCancelSmeltReq::set_equipid(::google::protobuf::uint32 value) {
  set_has_equipid();
  equipid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineTroopsCancelSmeltReq.EquipId)
}

// -------------------------------------------------------------------

// TDivineTroopsSurmountReq

// optional uint32 EquipId = 1;
inline bool TDivineTroopsSurmountReq::has_equipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineTroopsSurmountReq::set_has_equipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineTroopsSurmountReq::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineTroopsSurmountReq::clear_equipid() {
  equipid_ = 0u;
  clear_has_equipid();
}
inline ::google::protobuf::uint32 TDivineTroopsSurmountReq::equipid() const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsSurmountReq.EquipId)
  return equipid_;
}
inline void TDivineTroopsSurmountReq::set_equipid(::google::protobuf::uint32 value) {
  set_has_equipid();
  equipid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineTroopsSurmountReq.EquipId)
}

// -------------------------------------------------------------------

// TDivineTroopsSurmountRes

// optional uint32 SmeltLv = 1;
inline bool TDivineTroopsSurmountRes::has_smeltlv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineTroopsSurmountRes::set_has_smeltlv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineTroopsSurmountRes::clear_has_smeltlv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineTroopsSurmountRes::clear_smeltlv() {
  smeltlv_ = 0u;
  clear_has_smeltlv();
}
inline ::google::protobuf::uint32 TDivineTroopsSurmountRes::smeltlv() const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsSurmountRes.SmeltLv)
  return smeltlv_;
}
inline void TDivineTroopsSurmountRes::set_smeltlv(::google::protobuf::uint32 value) {
  set_has_smeltlv();
  smeltlv_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineTroopsSurmountRes.SmeltLv)
}

// optional uint32 SurmountLv = 2;
inline bool TDivineTroopsSurmountRes::has_surmountlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDivineTroopsSurmountRes::set_has_surmountlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDivineTroopsSurmountRes::clear_has_surmountlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDivineTroopsSurmountRes::clear_surmountlv() {
  surmountlv_ = 0u;
  clear_has_surmountlv();
}
inline ::google::protobuf::uint32 TDivineTroopsSurmountRes::surmountlv() const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsSurmountRes.SurmountLv)
  return surmountlv_;
}
inline void TDivineTroopsSurmountRes::set_surmountlv(::google::protobuf::uint32 value) {
  set_has_surmountlv();
  surmountlv_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineTroopsSurmountRes.SurmountLv)
}

// -------------------------------------------------------------------

// TDivineTroopsLotteryReq

// optional uint32 DrawType = 1;
inline bool TDivineTroopsLotteryReq::has_drawtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineTroopsLotteryReq::set_has_drawtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineTroopsLotteryReq::clear_has_drawtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineTroopsLotteryReq::clear_drawtype() {
  drawtype_ = 0u;
  clear_has_drawtype();
}
inline ::google::protobuf::uint32 TDivineTroopsLotteryReq::drawtype() const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsLotteryReq.DrawType)
  return drawtype_;
}
inline void TDivineTroopsLotteryReq::set_drawtype(::google::protobuf::uint32 value) {
  set_has_drawtype();
  drawtype_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineTroopsLotteryReq.DrawType)
}

// -------------------------------------------------------------------

// TDivineTroopsLotteryRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TDivineTroopsLotteryRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TDivineTroopsLotteryRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TDivineTroopsLotteryRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsLotteryRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TDivineTroopsLotteryRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineTroopsLotteryRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TDivineTroopsLotteryRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TDivineTroopsLotteryRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TDivineTroopsLotteryRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TDivineTroopsLotteryRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TDivineTroopsLotteryRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineTroopsLotteryRsp.ArrReward)
  return &arrreward_;
}

// optional uint32 RecruitScore = 2;
inline bool TDivineTroopsLotteryRsp::has_recruitscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDivineTroopsLotteryRsp::set_has_recruitscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDivineTroopsLotteryRsp::clear_has_recruitscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDivineTroopsLotteryRsp::clear_recruitscore() {
  recruitscore_ = 0u;
  clear_has_recruitscore();
}
inline ::google::protobuf::uint32 TDivineTroopsLotteryRsp::recruitscore() const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsLotteryRsp.RecruitScore)
  return recruitscore_;
}
inline void TDivineTroopsLotteryRsp::set_recruitscore(::google::protobuf::uint32 value) {
  set_has_recruitscore();
  recruitscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineTroopsLotteryRsp.RecruitScore)
}

// -------------------------------------------------------------------

// TDivineRecruitBuyReq

// optional uint32 RecruitBuyType = 1;
inline bool TDivineRecruitBuyReq::has_recruitbuytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineRecruitBuyReq::set_has_recruitbuytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineRecruitBuyReq::clear_has_recruitbuytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineRecruitBuyReq::clear_recruitbuytype() {
  recruitbuytype_ = 0u;
  clear_has_recruitbuytype();
}
inline ::google::protobuf::uint32 TDivineRecruitBuyReq::recruitbuytype() const {
  // @@protoc_insertion_point(field_get:pb.TDivineRecruitBuyReq.RecruitBuyType)
  return recruitbuytype_;
}
inline void TDivineRecruitBuyReq::set_recruitbuytype(::google::protobuf::uint32 value) {
  set_has_recruitbuytype();
  recruitbuytype_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineRecruitBuyReq.RecruitBuyType)
}

// -------------------------------------------------------------------

// TDivineRecruitBuyRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TDivineRecruitBuyRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TDivineRecruitBuyRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TDivineRecruitBuyRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineRecruitBuyRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TDivineRecruitBuyRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineRecruitBuyRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TDivineRecruitBuyRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TDivineRecruitBuyRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TDivineRecruitBuyRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TDivineRecruitBuyRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TDivineRecruitBuyRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineRecruitBuyRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TDivineRecruitInfoRsp

// optional uint32 RecruitScore = 1;
inline bool TDivineRecruitInfoRsp::has_recruitscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineRecruitInfoRsp::set_has_recruitscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineRecruitInfoRsp::clear_has_recruitscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineRecruitInfoRsp::clear_recruitscore() {
  recruitscore_ = 0u;
  clear_has_recruitscore();
}
inline ::google::protobuf::uint32 TDivineRecruitInfoRsp::recruitscore() const {
  // @@protoc_insertion_point(field_get:pb.TDivineRecruitInfoRsp.RecruitScore)
  return recruitscore_;
}
inline void TDivineRecruitInfoRsp::set_recruitscore(::google::protobuf::uint32 value) {
  set_has_recruitscore();
  recruitscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineRecruitInfoRsp.RecruitScore)
}

// optional uint32 RecruitNum = 2;
inline bool TDivineRecruitInfoRsp::has_recruitnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDivineRecruitInfoRsp::set_has_recruitnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDivineRecruitInfoRsp::clear_has_recruitnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDivineRecruitInfoRsp::clear_recruitnum() {
  recruitnum_ = 0u;
  clear_has_recruitnum();
}
inline ::google::protobuf::uint32 TDivineRecruitInfoRsp::recruitnum() const {
  // @@protoc_insertion_point(field_get:pb.TDivineRecruitInfoRsp.RecruitNum)
  return recruitnum_;
}
inline void TDivineRecruitInfoRsp::set_recruitnum(::google::protobuf::uint32 value) {
  set_has_recruitnum();
  recruitnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineRecruitInfoRsp.RecruitNum)
}

// optional uint32 HasBuyNum = 3;
inline bool TDivineRecruitInfoRsp::has_hasbuynum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDivineRecruitInfoRsp::set_has_hasbuynum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDivineRecruitInfoRsp::clear_has_hasbuynum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDivineRecruitInfoRsp::clear_hasbuynum() {
  hasbuynum_ = 0u;
  clear_has_hasbuynum();
}
inline ::google::protobuf::uint32 TDivineRecruitInfoRsp::hasbuynum() const {
  // @@protoc_insertion_point(field_get:pb.TDivineRecruitInfoRsp.HasBuyNum)
  return hasbuynum_;
}
inline void TDivineRecruitInfoRsp::set_hasbuynum(::google::protobuf::uint32 value) {
  set_has_hasbuynum();
  hasbuynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineRecruitInfoRsp.HasBuyNum)
}

// repeated .pb.TItemIdInfo ItemId = 4;
inline int TDivineRecruitInfoRsp::itemid_size() const {
  return itemid_.size();
}
inline void TDivineRecruitInfoRsp::clear_itemid() {
  itemid_.Clear();
}
inline const ::pb::TItemIdInfo& TDivineRecruitInfoRsp::itemid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineRecruitInfoRsp.ItemId)
  return itemid_.Get(index);
}
inline ::pb::TItemIdInfo* TDivineRecruitInfoRsp::mutable_itemid(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineRecruitInfoRsp.ItemId)
  return itemid_.Mutable(index);
}
inline ::pb::TItemIdInfo* TDivineRecruitInfoRsp::add_itemid() {
  // @@protoc_insertion_point(field_add:pb.TDivineRecruitInfoRsp.ItemId)
  return itemid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TItemIdInfo >&
TDivineRecruitInfoRsp::itemid() const {
  // @@protoc_insertion_point(field_list:pb.TDivineRecruitInfoRsp.ItemId)
  return itemid_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TItemIdInfo >*
TDivineRecruitInfoRsp::mutable_itemid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineRecruitInfoRsp.ItemId)
  return &itemid_;
}

// -------------------------------------------------------------------

// TItemIdInfo

// repeated uint32 ids = 1;
inline int TItemIdInfo::ids_size() const {
  return ids_.size();
}
inline void TItemIdInfo::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::uint32 TItemIdInfo::ids(int index) const {
  // @@protoc_insertion_point(field_get:pb.TItemIdInfo.ids)
  return ids_.Get(index);
}
inline void TItemIdInfo::set_ids(int index, ::google::protobuf::uint32 value) {
  ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TItemIdInfo.ids)
}
inline void TItemIdInfo::add_ids(::google::protobuf::uint32 value) {
  ids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TItemIdInfo.ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TItemIdInfo::ids() const {
  // @@protoc_insertion_point(field_list:pb.TItemIdInfo.ids)
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TItemIdInfo::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:pb.TItemIdInfo.ids)
  return &ids_;
}

// -------------------------------------------------------------------

// TDivineRecruitRewardReq

// optional uint32 Id = 1;
inline bool TDivineRecruitRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineRecruitRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineRecruitRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineRecruitRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TDivineRecruitRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TDivineRecruitRewardReq.Id)
  return id_;
}
inline void TDivineRecruitRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineRecruitRewardReq.Id)
}

// -------------------------------------------------------------------

// TDivineRecruitRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TDivineRecruitRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TDivineRecruitRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TDivineRecruitRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineRecruitRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TDivineRecruitRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineRecruitRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TDivineRecruitRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TDivineRecruitRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TDivineRecruitRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TDivineRecruitRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TDivineRecruitRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineRecruitRewardRsp.ArrReward)
  return &arrreward_;
}

// repeated .pb.TItemIdInfo ItemId = 2;
inline int TDivineRecruitRewardRsp::itemid_size() const {
  return itemid_.size();
}
inline void TDivineRecruitRewardRsp::clear_itemid() {
  itemid_.Clear();
}
inline const ::pb::TItemIdInfo& TDivineRecruitRewardRsp::itemid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineRecruitRewardRsp.ItemId)
  return itemid_.Get(index);
}
inline ::pb::TItemIdInfo* TDivineRecruitRewardRsp::mutable_itemid(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineRecruitRewardRsp.ItemId)
  return itemid_.Mutable(index);
}
inline ::pb::TItemIdInfo* TDivineRecruitRewardRsp::add_itemid() {
  // @@protoc_insertion_point(field_add:pb.TDivineRecruitRewardRsp.ItemId)
  return itemid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TItemIdInfo >&
TDivineRecruitRewardRsp::itemid() const {
  // @@protoc_insertion_point(field_list:pb.TDivineRecruitRewardRsp.ItemId)
  return itemid_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TItemIdInfo >*
TDivineRecruitRewardRsp::mutable_itemid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineRecruitRewardRsp.ItemId)
  return &itemid_;
}

// -------------------------------------------------------------------

// TDivineGetChallengeRsp

// optional uint32 CurrentIndexId = 1;
inline bool TDivineGetChallengeRsp::has_currentindexid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineGetChallengeRsp::set_has_currentindexid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineGetChallengeRsp::clear_has_currentindexid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineGetChallengeRsp::clear_currentindexid() {
  currentindexid_ = 0u;
  clear_has_currentindexid();
}
inline ::google::protobuf::uint32 TDivineGetChallengeRsp::currentindexid() const {
  // @@protoc_insertion_point(field_get:pb.TDivineGetChallengeRsp.CurrentIndexId)
  return currentindexid_;
}
inline void TDivineGetChallengeRsp::set_currentindexid(::google::protobuf::uint32 value) {
  set_has_currentindexid();
  currentindexid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineGetChallengeRsp.CurrentIndexId)
}

// optional uint32 ChangeNum = 2;
inline bool TDivineGetChallengeRsp::has_changenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDivineGetChallengeRsp::set_has_changenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDivineGetChallengeRsp::clear_has_changenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDivineGetChallengeRsp::clear_changenum() {
  changenum_ = 0u;
  clear_has_changenum();
}
inline ::google::protobuf::uint32 TDivineGetChallengeRsp::changenum() const {
  // @@protoc_insertion_point(field_get:pb.TDivineGetChallengeRsp.ChangeNum)
  return changenum_;
}
inline void TDivineGetChallengeRsp::set_changenum(::google::protobuf::uint32 value) {
  set_has_changenum();
  changenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineGetChallengeRsp.ChangeNum)
}

// optional uint32 buyChangeNum = 3;
inline bool TDivineGetChallengeRsp::has_buychangenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDivineGetChallengeRsp::set_has_buychangenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDivineGetChallengeRsp::clear_has_buychangenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDivineGetChallengeRsp::clear_buychangenum() {
  buychangenum_ = 0u;
  clear_has_buychangenum();
}
inline ::google::protobuf::uint32 TDivineGetChallengeRsp::buychangenum() const {
  // @@protoc_insertion_point(field_get:pb.TDivineGetChallengeRsp.buyChangeNum)
  return buychangenum_;
}
inline void TDivineGetChallengeRsp::set_buychangenum(::google::protobuf::uint32 value) {
  set_has_buychangenum();
  buychangenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineGetChallengeRsp.buyChangeNum)
}

// repeated .pb.TSquadInfo SquadArr = 4;
inline int TDivineGetChallengeRsp::squadarr_size() const {
  return squadarr_.size();
}
inline void TDivineGetChallengeRsp::clear_squadarr() {
  squadarr_.Clear();
}
inline const ::pb::TSquadInfo& TDivineGetChallengeRsp::squadarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineGetChallengeRsp.SquadArr)
  return squadarr_.Get(index);
}
inline ::pb::TSquadInfo* TDivineGetChallengeRsp::mutable_squadarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineGetChallengeRsp.SquadArr)
  return squadarr_.Mutable(index);
}
inline ::pb::TSquadInfo* TDivineGetChallengeRsp::add_squadarr() {
  // @@protoc_insertion_point(field_add:pb.TDivineGetChallengeRsp.SquadArr)
  return squadarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSquadInfo >&
TDivineGetChallengeRsp::squadarr() const {
  // @@protoc_insertion_point(field_list:pb.TDivineGetChallengeRsp.SquadArr)
  return squadarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSquadInfo >*
TDivineGetChallengeRsp::mutable_squadarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineGetChallengeRsp.SquadArr)
  return &squadarr_;
}

// -------------------------------------------------------------------

// TSquadInfo

// optional uint32 Pos = 1;
inline bool TSquadInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSquadInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSquadInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSquadInfo::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TSquadInfo::pos() const {
  // @@protoc_insertion_point(field_get:pb.TSquadInfo.Pos)
  return pos_;
}
inline void TSquadInfo::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TSquadInfo.Pos)
}

// optional uint32 Hid = 2;
inline bool TSquadInfo::has_hid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSquadInfo::set_has_hid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSquadInfo::clear_has_hid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSquadInfo::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TSquadInfo::hid() const {
  // @@protoc_insertion_point(field_get:pb.TSquadInfo.Hid)
  return hid_;
}
inline void TSquadInfo::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSquadInfo.Hid)
}

// -------------------------------------------------------------------

// TDivineTroopsSetSquadReq

// repeated .pb.TSquadInfo SquadArr = 1;
inline int TDivineTroopsSetSquadReq::squadarr_size() const {
  return squadarr_.size();
}
inline void TDivineTroopsSetSquadReq::clear_squadarr() {
  squadarr_.Clear();
}
inline const ::pb::TSquadInfo& TDivineTroopsSetSquadReq::squadarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineTroopsSetSquadReq.SquadArr)
  return squadarr_.Get(index);
}
inline ::pb::TSquadInfo* TDivineTroopsSetSquadReq::mutable_squadarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineTroopsSetSquadReq.SquadArr)
  return squadarr_.Mutable(index);
}
inline ::pb::TSquadInfo* TDivineTroopsSetSquadReq::add_squadarr() {
  // @@protoc_insertion_point(field_add:pb.TDivineTroopsSetSquadReq.SquadArr)
  return squadarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSquadInfo >&
TDivineTroopsSetSquadReq::squadarr() const {
  // @@protoc_insertion_point(field_list:pb.TDivineTroopsSetSquadReq.SquadArr)
  return squadarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSquadInfo >*
TDivineTroopsSetSquadReq::mutable_squadarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineTroopsSetSquadReq.SquadArr)
  return &squadarr_;
}

// -------------------------------------------------------------------

// TBuyChallengeNumReq

// optional uint32 Num = 1;
inline bool TBuyChallengeNumReq::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBuyChallengeNumReq::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBuyChallengeNumReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBuyChallengeNumReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TBuyChallengeNumReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TBuyChallengeNumReq.Num)
  return num_;
}
inline void TBuyChallengeNumReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TBuyChallengeNumReq.Num)
}

// -------------------------------------------------------------------

// TDivineDoBattleReq

// optional uint32 IndexId = 1;
inline bool TDivineDoBattleReq::has_indexid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineDoBattleReq::set_has_indexid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineDoBattleReq::clear_has_indexid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineDoBattleReq::clear_indexid() {
  indexid_ = 0u;
  clear_has_indexid();
}
inline ::google::protobuf::uint32 TDivineDoBattleReq::indexid() const {
  // @@protoc_insertion_point(field_get:pb.TDivineDoBattleReq.IndexId)
  return indexid_;
}
inline void TDivineDoBattleReq::set_indexid(::google::protobuf::uint32 value) {
  set_has_indexid();
  indexid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineDoBattleReq.IndexId)
}

// -------------------------------------------------------------------

// TDivineDoBattleRsp

// repeated .pb.TCommonReward DropArray = 1;
inline int TDivineDoBattleRsp::droparray_size() const {
  return droparray_.size();
}
inline void TDivineDoBattleRsp::clear_droparray() {
  droparray_.Clear();
}
inline const ::pb::TCommonReward& TDivineDoBattleRsp::droparray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineDoBattleRsp.DropArray)
  return droparray_.Get(index);
}
inline ::pb::TCommonReward* TDivineDoBattleRsp::mutable_droparray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineDoBattleRsp.DropArray)
  return droparray_.Mutable(index);
}
inline ::pb::TCommonReward* TDivineDoBattleRsp::add_droparray() {
  // @@protoc_insertion_point(field_add:pb.TDivineDoBattleRsp.DropArray)
  return droparray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TDivineDoBattleRsp::droparray() const {
  // @@protoc_insertion_point(field_list:pb.TDivineDoBattleRsp.DropArray)
  return droparray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TDivineDoBattleRsp::mutable_droparray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineDoBattleRsp.DropArray)
  return &droparray_;
}

// optional .pb.TBattleArgs BattleArgs = 2;
inline bool TDivineDoBattleRsp::has_battleargs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDivineDoBattleRsp::set_has_battleargs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDivineDoBattleRsp::clear_has_battleargs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDivineDoBattleRsp::clear_battleargs() {
  if (battleargs_ != NULL) battleargs_->::pb::TBattleArgs::Clear();
  clear_has_battleargs();
}
inline const ::pb::TBattleArgs& TDivineDoBattleRsp::battleargs() const {
  // @@protoc_insertion_point(field_get:pb.TDivineDoBattleRsp.BattleArgs)
  return battleargs_ != NULL ? *battleargs_ : *default_instance_->battleargs_;
}
inline ::pb::TBattleArgs* TDivineDoBattleRsp::mutable_battleargs() {
  set_has_battleargs();
  if (battleargs_ == NULL) battleargs_ = new ::pb::TBattleArgs;
  // @@protoc_insertion_point(field_mutable:pb.TDivineDoBattleRsp.BattleArgs)
  return battleargs_;
}
inline ::pb::TBattleArgs* TDivineDoBattleRsp::release_battleargs() {
  clear_has_battleargs();
  ::pb::TBattleArgs* temp = battleargs_;
  battleargs_ = NULL;
  return temp;
}
inline void TDivineDoBattleRsp::set_allocated_battleargs(::pb::TBattleArgs* battleargs) {
  delete battleargs_;
  battleargs_ = battleargs;
  if (battleargs) {
    set_has_battleargs();
  } else {
    clear_has_battleargs();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TDivineDoBattleRsp.BattleArgs)
}

// -------------------------------------------------------------------

// TDivineReportBattleReq

// optional uint32 IndexId = 1;
inline bool TDivineReportBattleReq::has_indexid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineReportBattleReq::set_has_indexid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineReportBattleReq::clear_has_indexid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineReportBattleReq::clear_indexid() {
  indexid_ = 0u;
  clear_has_indexid();
}
inline ::google::protobuf::uint32 TDivineReportBattleReq::indexid() const {
  // @@protoc_insertion_point(field_get:pb.TDivineReportBattleReq.IndexId)
  return indexid_;
}
inline void TDivineReportBattleReq::set_indexid(::google::protobuf::uint32 value) {
  set_has_indexid();
  indexid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineReportBattleReq.IndexId)
}

// optional bytes BattleResultBytes = 2;
inline bool TDivineReportBattleReq::has_battleresultbytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDivineReportBattleReq::set_has_battleresultbytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDivineReportBattleReq::clear_has_battleresultbytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDivineReportBattleReq::clear_battleresultbytes() {
  if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_->clear();
  }
  clear_has_battleresultbytes();
}
inline const ::std::string& TDivineReportBattleReq::battleresultbytes() const {
  // @@protoc_insertion_point(field_get:pb.TDivineReportBattleReq.BattleResultBytes)
  return *battleresultbytes_;
}
inline void TDivineReportBattleReq::set_battleresultbytes(const ::std::string& value) {
  set_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_ = new ::std::string;
  }
  battleresultbytes_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TDivineReportBattleReq.BattleResultBytes)
}
inline void TDivineReportBattleReq::set_battleresultbytes(const char* value) {
  set_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_ = new ::std::string;
  }
  battleresultbytes_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TDivineReportBattleReq.BattleResultBytes)
}
inline void TDivineReportBattleReq::set_battleresultbytes(const void* value, size_t size) {
  set_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_ = new ::std::string;
  }
  battleresultbytes_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TDivineReportBattleReq.BattleResultBytes)
}
inline ::std::string* TDivineReportBattleReq::mutable_battleresultbytes() {
  set_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TDivineReportBattleReq.BattleResultBytes)
  return battleresultbytes_;
}
inline ::std::string* TDivineReportBattleReq::release_battleresultbytes() {
  clear_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = battleresultbytes_;
    battleresultbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TDivineReportBattleReq::set_allocated_battleresultbytes(::std::string* battleresultbytes) {
  if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleresultbytes_;
  }
  if (battleresultbytes) {
    set_has_battleresultbytes();
    battleresultbytes_ = battleresultbytes;
  } else {
    clear_has_battleresultbytes();
    battleresultbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TDivineReportBattleReq.BattleResultBytes)
}

// -------------------------------------------------------------------

// TDivineReportBattleRsp

// repeated .pb.TCommonReward DropArray = 1;
inline int TDivineReportBattleRsp::droparray_size() const {
  return droparray_.size();
}
inline void TDivineReportBattleRsp::clear_droparray() {
  droparray_.Clear();
}
inline const ::pb::TCommonReward& TDivineReportBattleRsp::droparray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineReportBattleRsp.DropArray)
  return droparray_.Get(index);
}
inline ::pb::TCommonReward* TDivineReportBattleRsp::mutable_droparray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineReportBattleRsp.DropArray)
  return droparray_.Mutable(index);
}
inline ::pb::TCommonReward* TDivineReportBattleRsp::add_droparray() {
  // @@protoc_insertion_point(field_add:pb.TDivineReportBattleRsp.DropArray)
  return droparray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TDivineReportBattleRsp::droparray() const {
  // @@protoc_insertion_point(field_list:pb.TDivineReportBattleRsp.DropArray)
  return droparray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TDivineReportBattleRsp::mutable_droparray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineReportBattleRsp.DropArray)
  return &droparray_;
}

// -------------------------------------------------------------------

// TDivineSweepReq

// optional uint32 IndexId = 1;
inline bool TDivineSweepReq::has_indexid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineSweepReq::set_has_indexid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineSweepReq::clear_has_indexid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineSweepReq::clear_indexid() {
  indexid_ = 0u;
  clear_has_indexid();
}
inline ::google::protobuf::uint32 TDivineSweepReq::indexid() const {
  // @@protoc_insertion_point(field_get:pb.TDivineSweepReq.IndexId)
  return indexid_;
}
inline void TDivineSweepReq::set_indexid(::google::protobuf::uint32 value) {
  set_has_indexid();
  indexid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineSweepReq.IndexId)
}

// -------------------------------------------------------------------

// TDivineSweepRsp

// repeated .pb.TCommonReward DropArray = 1;
inline int TDivineSweepRsp::droparray_size() const {
  return droparray_.size();
}
inline void TDivineSweepRsp::clear_droparray() {
  droparray_.Clear();
}
inline const ::pb::TCommonReward& TDivineSweepRsp::droparray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineSweepRsp.DropArray)
  return droparray_.Get(index);
}
inline ::pb::TCommonReward* TDivineSweepRsp::mutable_droparray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineSweepRsp.DropArray)
  return droparray_.Mutable(index);
}
inline ::pb::TCommonReward* TDivineSweepRsp::add_droparray() {
  // @@protoc_insertion_point(field_add:pb.TDivineSweepRsp.DropArray)
  return droparray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TDivineSweepRsp::droparray() const {
  // @@protoc_insertion_point(field_list:pb.TDivineSweepRsp.DropArray)
  return droparray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TDivineSweepRsp::mutable_droparray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineSweepRsp.DropArray)
  return &droparray_;
}

// -------------------------------------------------------------------

// TDivineSkipFightReq

// optional uint32 IndexId = 1;
inline bool TDivineSkipFightReq::has_indexid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineSkipFightReq::set_has_indexid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineSkipFightReq::clear_has_indexid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineSkipFightReq::clear_indexid() {
  indexid_ = 0u;
  clear_has_indexid();
}
inline ::google::protobuf::uint32 TDivineSkipFightReq::indexid() const {
  // @@protoc_insertion_point(field_get:pb.TDivineSkipFightReq.IndexId)
  return indexid_;
}
inline void TDivineSkipFightReq::set_indexid(::google::protobuf::uint32 value) {
  set_has_indexid();
  indexid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineSkipFightReq.IndexId)
}

// -------------------------------------------------------------------

// TDivineSkipFightRsp

// optional .pb.TBattleResult BattleRet = 1;
inline bool TDivineSkipFightRsp::has_battleret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineSkipFightRsp::set_has_battleret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineSkipFightRsp::clear_has_battleret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineSkipFightRsp::clear_battleret() {
  if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
  clear_has_battleret();
}
inline const ::pb::TBattleResult& TDivineSkipFightRsp::battleret() const {
  // @@protoc_insertion_point(field_get:pb.TDivineSkipFightRsp.BattleRet)
  return battleret_ != NULL ? *battleret_ : *default_instance_->battleret_;
}
inline ::pb::TBattleResult* TDivineSkipFightRsp::mutable_battleret() {
  set_has_battleret();
  if (battleret_ == NULL) battleret_ = new ::pb::TBattleResult;
  // @@protoc_insertion_point(field_mutable:pb.TDivineSkipFightRsp.BattleRet)
  return battleret_;
}
inline ::pb::TBattleResult* TDivineSkipFightRsp::release_battleret() {
  clear_has_battleret();
  ::pb::TBattleResult* temp = battleret_;
  battleret_ = NULL;
  return temp;
}
inline void TDivineSkipFightRsp::set_allocated_battleret(::pb::TBattleResult* battleret) {
  delete battleret_;
  battleret_ = battleret;
  if (battleret) {
    set_has_battleret();
  } else {
    clear_has_battleret();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TDivineSkipFightRsp.BattleRet)
}

// repeated .pb.TCommonReward RewardArray = 2;
inline int TDivineSkipFightRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TDivineSkipFightRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TDivineSkipFightRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineSkipFightRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TDivineSkipFightRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineSkipFightRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TDivineSkipFightRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TDivineSkipFightRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TDivineSkipFightRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TDivineSkipFightRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TDivineSkipFightRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineSkipFightRsp.RewardArray)
  return &rewardarray_;
}

// optional uint32 Success = 3;
inline bool TDivineSkipFightRsp::has_success() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDivineSkipFightRsp::set_has_success() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDivineSkipFightRsp::clear_has_success() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDivineSkipFightRsp::clear_success() {
  success_ = 0u;
  clear_has_success();
}
inline ::google::protobuf::uint32 TDivineSkipFightRsp::success() const {
  // @@protoc_insertion_point(field_get:pb.TDivineSkipFightRsp.Success)
  return success_;
}
inline void TDivineSkipFightRsp::set_success(::google::protobuf::uint32 value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineSkipFightRsp.Success)
}

// -------------------------------------------------------------------

// TDivineBookReq

// optional uint32 BookId = 1;
inline bool TDivineBookReq::has_bookid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineBookReq::set_has_bookid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineBookReq::clear_has_bookid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineBookReq::clear_bookid() {
  bookid_ = 0u;
  clear_has_bookid();
}
inline ::google::protobuf::uint32 TDivineBookReq::bookid() const {
  // @@protoc_insertion_point(field_get:pb.TDivineBookReq.BookId)
  return bookid_;
}
inline void TDivineBookReq::set_bookid(::google::protobuf::uint32 value) {
  set_has_bookid();
  bookid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineBookReq.BookId)
}

// optional uint32 BookType = 2;
inline bool TDivineBookReq::has_booktype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDivineBookReq::set_has_booktype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDivineBookReq::clear_has_booktype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDivineBookReq::clear_booktype() {
  booktype_ = 0u;
  clear_has_booktype();
}
inline ::google::protobuf::uint32 TDivineBookReq::booktype() const {
  // @@protoc_insertion_point(field_get:pb.TDivineBookReq.BookType)
  return booktype_;
}
inline void TDivineBookReq::set_booktype(::google::protobuf::uint32 value) {
  set_has_booktype();
  booktype_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineBookReq.BookType)
}

// -------------------------------------------------------------------

// TDivineGetBookItemRsp

// repeated uint32 BookId = 1;
inline int TDivineGetBookItemRsp::bookid_size() const {
  return bookid_.size();
}
inline void TDivineGetBookItemRsp::clear_bookid() {
  bookid_.Clear();
}
inline ::google::protobuf::uint32 TDivineGetBookItemRsp::bookid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineGetBookItemRsp.BookId)
  return bookid_.Get(index);
}
inline void TDivineGetBookItemRsp::set_bookid(int index, ::google::protobuf::uint32 value) {
  bookid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TDivineGetBookItemRsp.BookId)
}
inline void TDivineGetBookItemRsp::add_bookid(::google::protobuf::uint32 value) {
  bookid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TDivineGetBookItemRsp.BookId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TDivineGetBookItemRsp::bookid() const {
  // @@protoc_insertion_point(field_list:pb.TDivineGetBookItemRsp.BookId)
  return bookid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TDivineGetBookItemRsp::mutable_bookid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineGetBookItemRsp.BookId)
  return &bookid_;
}

// -------------------------------------------------------------------

// TDivineRecycleReq

// repeated uint32 Id = 1;
inline int TDivineRecycleReq::id_size() const {
  return id_.size();
}
inline void TDivineRecycleReq::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 TDivineRecycleReq::id(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineRecycleReq.Id)
  return id_.Get(index);
}
inline void TDivineRecycleReq::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TDivineRecycleReq.Id)
}
inline void TDivineRecycleReq::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TDivineRecycleReq.Id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TDivineRecycleReq::id() const {
  // @@protoc_insertion_point(field_list:pb.TDivineRecycleReq.Id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TDivineRecycleReq::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineRecycleReq.Id)
  return &id_;
}

// optional uint32 RecycleType = 2;
inline bool TDivineRecycleReq::has_recycletype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDivineRecycleReq::set_has_recycletype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDivineRecycleReq::clear_has_recycletype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDivineRecycleReq::clear_recycletype() {
  recycletype_ = 0u;
  clear_has_recycletype();
}
inline ::google::protobuf::uint32 TDivineRecycleReq::recycletype() const {
  // @@protoc_insertion_point(field_get:pb.TDivineRecycleReq.RecycleType)
  return recycletype_;
}
inline void TDivineRecycleReq::set_recycletype(::google::protobuf::uint32 value) {
  set_has_recycletype();
  recycletype_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineRecycleReq.RecycleType)
}

// optional uint32 ActType = 3;
inline bool TDivineRecycleReq::has_acttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDivineRecycleReq::set_has_acttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDivineRecycleReq::clear_has_acttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDivineRecycleReq::clear_acttype() {
  acttype_ = 0u;
  clear_has_acttype();
}
inline ::google::protobuf::uint32 TDivineRecycleReq::acttype() const {
  // @@protoc_insertion_point(field_get:pb.TDivineRecycleReq.ActType)
  return acttype_;
}
inline void TDivineRecycleReq::set_acttype(::google::protobuf::uint32 value) {
  set_has_acttype();
  acttype_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineRecycleReq.ActType)
}

// -------------------------------------------------------------------

// TDivineRecycleRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TDivineRecycleRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TDivineRecycleRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TDivineRecycleRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineRecycleRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TDivineRecycleRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDivineRecycleRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TDivineRecycleRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TDivineRecycleRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TDivineRecycleRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TDivineRecycleRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TDivineRecycleRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineRecycleRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TDivineCompoundFragReq

// optional uint32 Num = 1;
inline bool TDivineCompoundFragReq::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDivineCompoundFragReq::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDivineCompoundFragReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDivineCompoundFragReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TDivineCompoundFragReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TDivineCompoundFragReq.Num)
  return num_;
}
inline void TDivineCompoundFragReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineCompoundFragReq.Num)
}

// repeated uint32 FlagId = 2;
inline int TDivineCompoundFragReq::flagid_size() const {
  return flagid_.size();
}
inline void TDivineCompoundFragReq::clear_flagid() {
  flagid_.Clear();
}
inline ::google::protobuf::uint32 TDivineCompoundFragReq::flagid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineCompoundFragReq.FlagId)
  return flagid_.Get(index);
}
inline void TDivineCompoundFragReq::set_flagid(int index, ::google::protobuf::uint32 value) {
  flagid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TDivineCompoundFragReq.FlagId)
}
inline void TDivineCompoundFragReq::add_flagid(::google::protobuf::uint32 value) {
  flagid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TDivineCompoundFragReq.FlagId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TDivineCompoundFragReq::flagid() const {
  // @@protoc_insertion_point(field_list:pb.TDivineCompoundFragReq.FlagId)
  return flagid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TDivineCompoundFragReq::mutable_flagid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineCompoundFragReq.FlagId)
  return &flagid_;
}

// optional uint32 ActType = 3;
inline bool TDivineCompoundFragReq::has_acttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDivineCompoundFragReq::set_has_acttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDivineCompoundFragReq::clear_has_acttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDivineCompoundFragReq::clear_acttype() {
  acttype_ = 0u;
  clear_has_acttype();
}
inline ::google::protobuf::uint32 TDivineCompoundFragReq::acttype() const {
  // @@protoc_insertion_point(field_get:pb.TDivineCompoundFragReq.ActType)
  return acttype_;
}
inline void TDivineCompoundFragReq::set_acttype(::google::protobuf::uint32 value) {
  set_has_acttype();
  acttype_ = value;
  // @@protoc_insertion_point(field_set:pb.TDivineCompoundFragReq.ActType)
}

// -------------------------------------------------------------------

// TDivineCompoundFragRsp

// repeated uint32 ItemId = 1;
inline int TDivineCompoundFragRsp::itemid_size() const {
  return itemid_.size();
}
inline void TDivineCompoundFragRsp::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::uint32 TDivineCompoundFragRsp::itemid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDivineCompoundFragRsp.ItemId)
  return itemid_.Get(index);
}
inline void TDivineCompoundFragRsp::set_itemid(int index, ::google::protobuf::uint32 value) {
  itemid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TDivineCompoundFragRsp.ItemId)
}
inline void TDivineCompoundFragRsp::add_itemid(::google::protobuf::uint32 value) {
  itemid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TDivineCompoundFragRsp.ItemId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TDivineCompoundFragRsp::itemid() const {
  // @@protoc_insertion_point(field_list:pb.TDivineCompoundFragRsp.ItemId)
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TDivineCompoundFragRsp::mutable_itemid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDivineCompoundFragRsp.ItemId)
  return &itemid_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fDivineTroops_2eproto__INCLUDED
