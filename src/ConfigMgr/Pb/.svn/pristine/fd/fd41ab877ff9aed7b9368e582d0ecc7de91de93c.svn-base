// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/AllyWar.proto

#ifndef PROTOBUF_net_2fAllyWar_2eproto__INCLUDED
#define PROTOBUF_net_2fAllyWar_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/User.pb.h"
#include "net/Alliance.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fAllyWar_2eproto();
void protobuf_AssignDesc_net_2fAllyWar_2eproto();
void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

class TAllyWarExpectProcess;
class TAllyWarActualProcess;
class TAllyWarAllyBaseInfo;
class TAllyWarUserBaseInfo;
class TAllyWarGuildContriInfo;
class TAllyWarAllyMatchInfo;
class TAllyWarFieldUnitInfo;
class TAllyWarFieldAreaInfo;
class TAllyWarDeployInfo;
class TAllyWarPosInfo;
class TAllyWarFmtInfo;
class TAllyWarFmtRecordInfo;
class TAllyWarUnitRecordInfo;
class TAllyWarAreaRecordInfo;
class TAllianceSimpleInfoWithUser;
class TAllyWarGetBaseInfoRsp;
class TAllyWarGetMatchInfoRsp;
class TAllyWarGetFieldInfoRsp;
class TAllyWarGetWinnerInfoRsp;
class TAllyWarSignRsp;
class TAllyWarGetFmtRsp;
class TAllyWarSetFmtReq;
class TAllyWarSetPosReq;
class TAllyWarGetDeployRsp;
class TAllyWarSetDeployReq;
class TAllyWarSetOptionReq;
class TAllyWarGetRecordReq;
class TAllyWarGetRecordRsp;
class TInnerAllyWarGetServerTeamInfoRsp;

enum EAllyWarStage {
  EALLYWAR_STAGE_INVALID = 0,
  EALLYWAR_STAGE_GROUP = 1,
  EALLYWAR_STAGE_SIGN = 2,
  EALLYWAR_STAGE_AUDITION = 3,
  EALLYWAR_STAGE_PROMOTION_PREPARE = 4,
  EALLYWAR_STAGE_PROMOTION_FIGHT = 5,
  EALLYWAR_STAGE_SHOW = 100
};
bool EAllyWarStage_IsValid(int value);
const EAllyWarStage EAllyWarStage_MIN = EALLYWAR_STAGE_INVALID;
const EAllyWarStage EAllyWarStage_MAX = EALLYWAR_STAGE_SHOW;
const int EAllyWarStage_ARRAYSIZE = EAllyWarStage_MAX + 1;

const ::google::protobuf::EnumDescriptor* EAllyWarStage_descriptor();
inline const ::std::string& EAllyWarStage_Name(EAllyWarStage value) {
  return ::google::protobuf::internal::NameOfEnum(
    EAllyWarStage_descriptor(), value);
}
inline bool EAllyWarStage_Parse(
    const ::std::string& name, EAllyWarStage* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EAllyWarStage>(
    EAllyWarStage_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TAllyWarExpectProcess</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarExpectProcess : public ::google::protobuf::Message {
 public:
  TAllyWarExpectProcess();
  virtual ~TAllyWarExpectProcess();

  TAllyWarExpectProcess(const TAllyWarExpectProcess& from);

  inline TAllyWarExpectProcess& operator=(const TAllyWarExpectProcess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarExpectProcess& default_instance();

  void Swap(TAllyWarExpectProcess* other);

  // implements Message ----------------------------------------------

  TAllyWarExpectProcess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarExpectProcess& from);
  void MergeFrom(const TAllyWarExpectProcess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Round = 1;
  inline bool has_round() const;
  inline void clear_round();
  static const int kRoundFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarExpectProcess</name>
  	<Function>
  		<name>round</name>
  		<replaceName>Round</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_round</name>
  		<replaceName>Round</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_round</name>
  		<replaceName>Round</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 round() const;
  inline void set_round(::google::protobuf::uint32 value);

  // optional .pb.EAllyWarStage Stage = 2;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarExpectProcess</name>
  	<Function>
  		<name>stage</name>
  		<replaceName>Stage</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_stage</name>
  		<replaceName>Stage</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_stage</name>
  		<replaceName>Stage</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EAllyWarStage stage() const;
  inline void set_stage(::pb::EAllyWarStage value);

  // optional uint64 BegTime = 3;
  inline bool has_begtime() const;
  inline void clear_begtime();
  static const int kBegTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarExpectProcess</name>
  	<Function>
  		<name>begtime</name>
  		<replaceName>BegTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_begtime</name>
  		<replaceName>BegTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_begtime</name>
  		<replaceName>BegTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 begtime() const;
  inline void set_begtime(::google::protobuf::uint64 value);

  // optional uint64 EndTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarExpectProcess</name>
  	<Function>
  		<name>endtime</name>
  		<replaceName>EndTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_endtime</name>
  		<replaceName>EndTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_endtime</name>
  		<replaceName>EndTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarExpectProcess)
 private:
  inline void set_has_round();
  inline void clear_has_round();
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_begtime();
  inline void clear_has_begtime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 round_;
  int stage_;
  ::google::protobuf::uint64 begtime_;
  ::google::protobuf::uint64 endtime_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarExpectProcess* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarActualProcess</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarActualProcess : public ::google::protobuf::Message {
 public:
  TAllyWarActualProcess();
  virtual ~TAllyWarActualProcess();

  TAllyWarActualProcess(const TAllyWarActualProcess& from);

  inline TAllyWarActualProcess& operator=(const TAllyWarActualProcess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarActualProcess& default_instance();

  void Swap(TAllyWarActualProcess* other);

  // implements Message ----------------------------------------------

  TAllyWarActualProcess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarActualProcess& from);
  void MergeFrom(const TAllyWarActualProcess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TAllyWarExpectProcess ExpectProcess = 1;
  inline bool has_expectprocess() const;
  inline void clear_expectprocess();
  static const int kExpectProcessFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarActualProcess</name>
  	<Function>
  		<name>expectprocess</name>
  		<replaceName>ExpectProcess</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_expectprocess</name>
  		<replaceName>ExpectProcess</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_expectprocess</name>
  		<replaceName>ExpectProcess</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_expectprocess</name>
  		<replaceName>ExpectProcess</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarExpectProcess& expectprocess() const;
  inline ::pb::TAllyWarExpectProcess* mutable_expectprocess();
  inline ::pb::TAllyWarExpectProcess* release_expectprocess();
  inline void set_allocated_expectprocess(::pb::TAllyWarExpectProcess* expectprocess);

  // optional uint64 DoneTime = 2;
  inline bool has_donetime() const;
  inline void clear_donetime();
  static const int kDoneTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarActualProcess</name>
  	<Function>
  		<name>donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 donetime() const;
  inline void set_donetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarActualProcess)
 private:
  inline void set_has_expectprocess();
  inline void clear_has_expectprocess();
  inline void set_has_donetime();
  inline void clear_has_donetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TAllyWarExpectProcess* expectprocess_;
  ::google::protobuf::uint64 donetime_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarActualProcess* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarAllyBaseInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarAllyBaseInfo : public ::google::protobuf::Message {
 public:
  TAllyWarAllyBaseInfo();
  virtual ~TAllyWarAllyBaseInfo();

  TAllyWarAllyBaseInfo(const TAllyWarAllyBaseInfo& from);

  inline TAllyWarAllyBaseInfo& operator=(const TAllyWarAllyBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarAllyBaseInfo& default_instance();

  void Swap(TAllyWarAllyBaseInfo* other);

  // implements Message ----------------------------------------------

  TAllyWarAllyBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarAllyBaseInfo& from);
  void MergeFrom(const TAllyWarAllyBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 AllyId = 1;
  inline bool has_allyid() const;
  inline void clear_allyid();
  static const int kAllyIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAllyBaseInfo</name>
  	<Function>
  		<name>allyid</name>
  		<replaceName>AllyId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allyid</name>
  		<replaceName>AllyId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_allyid</name>
  		<replaceName>AllyId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 allyid() const;
  inline void set_allyid(::google::protobuf::uint64 value);

  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAllyBaseInfo</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional string Name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAllyBaseInfo</name>
  	<Function>
  		<name>name</name>
  		<replaceName>Name</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_name</name>
  		<replaceName>Name</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_name</name>
  		<replaceName>Name</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 FightForce = 4;
  inline bool has_fightforce() const;
  inline void clear_fightforce();
  static const int kFightForceFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAllyBaseInfo</name>
  	<Function>
  		<name>fightforce</name>
  		<replaceName>FightForce</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_fightforce</name>
  		<replaceName>FightForce</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_fightforce</name>
  		<replaceName>FightForce</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 fightforce() const;
  inline void set_fightforce(::google::protobuf::uint64 value);

  // optional uint32 BannerBase = 5;
  inline bool has_bannerbase() const;
  inline void clear_bannerbase();
  static const int kBannerBaseFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAllyBaseInfo</name>
  	<Function>
  		<name>bannerbase</name>
  		<replaceName>BannerBase</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_bannerbase</name>
  		<replaceName>BannerBase</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bannerbase</name>
  		<replaceName>BannerBase</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 bannerbase() const;
  inline void set_bannerbase(::google::protobuf::uint32 value);

  // optional string BannerName = 6;
  inline bool has_bannername() const;
  inline void clear_bannername();
  static const int kBannerNameFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAllyBaseInfo</name>
  	<Function>
  		<name>bannername</name>
  		<replaceName>BannerName</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_bannername</name>
  		<replaceName>BannerName</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bannername</name>
  		<replaceName>BannerName</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& bannername() const;
  inline void set_bannername(const ::std::string& value);
  inline void set_bannername(const char* value);
  inline void set_bannername(const char* value, size_t size);
  inline ::std::string* mutable_bannername();
  inline ::std::string* release_bannername();
  inline void set_allocated_bannername(::std::string* bannername);

  // optional uint32 BannerFigure = 7;
  inline bool has_bannerfigure() const;
  inline void clear_bannerfigure();
  static const int kBannerFigureFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAllyBaseInfo</name>
  	<Function>
  		<name>bannerfigure</name>
  		<replaceName>BannerFigure</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_bannerfigure</name>
  		<replaceName>BannerFigure</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bannerfigure</name>
  		<replaceName>BannerFigure</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 bannerfigure() const;
  inline void set_bannerfigure(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarAllyBaseInfo)
 private:
  inline void set_has_allyid();
  inline void clear_has_allyid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_fightforce();
  inline void clear_has_fightforce();
  inline void set_has_bannerbase();
  inline void clear_has_bannerbase();
  inline void set_has_bannername();
  inline void clear_has_bannername();
  inline void set_has_bannerfigure();
  inline void clear_has_bannerfigure();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 allyid_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 bannerbase_;
  ::google::protobuf::uint64 fightforce_;
  ::std::string* bannername_;
  ::google::protobuf::uint32 bannerfigure_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarAllyBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarUserBaseInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarUserBaseInfo : public ::google::protobuf::Message {
 public:
  TAllyWarUserBaseInfo();
  virtual ~TAllyWarUserBaseInfo();

  TAllyWarUserBaseInfo(const TAllyWarUserBaseInfo& from);

  inline TAllyWarUserBaseInfo& operator=(const TAllyWarUserBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarUserBaseInfo& default_instance();

  void Swap(TAllyWarUserBaseInfo* other);

  // implements Message ----------------------------------------------

  TAllyWarUserBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarUserBaseInfo& from);
  void MergeFrom(const TAllyWarUserBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarUserBaseInfo</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional string ServerId = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarUserBaseInfo</name>
  	<Function>
  		<name>serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& serverid() const;
  inline void set_serverid(const ::std::string& value);
  inline void set_serverid(const char* value);
  inline void set_serverid(const char* value, size_t size);
  inline ::std::string* mutable_serverid();
  inline ::std::string* release_serverid();
  inline void set_allocated_serverid(::std::string* serverid);

  // optional .pb.EAlliancePost Post = 3;
  inline bool has_post() const;
  inline void clear_post();
  static const int kPostFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarUserBaseInfo</name>
  	<Function>
  		<name>post</name>
  		<replaceName>Post</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_post</name>
  		<replaceName>Post</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_post</name>
  		<replaceName>Post</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EAlliancePost post() const;
  inline void set_post(::pb::EAlliancePost value);

  // optional .pb.TUserSimpleInfo UserInfo = 4;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarUserBaseInfo</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarUserBaseInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_post();
  inline void clear_has_post();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::std::string* serverid_;
  ::pb::TUserSimpleInfo* userinfo_;
  int post_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarUserBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarGuildContriInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarGuildContriInfo : public ::google::protobuf::Message {
 public:
  TAllyWarGuildContriInfo();
  virtual ~TAllyWarGuildContriInfo();

  TAllyWarGuildContriInfo(const TAllyWarGuildContriInfo& from);

  inline TAllyWarGuildContriInfo& operator=(const TAllyWarGuildContriInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarGuildContriInfo& default_instance();

  void Swap(TAllyWarGuildContriInfo* other);

  // implements Message ----------------------------------------------

  TAllyWarGuildContriInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarGuildContriInfo& from);
  void MergeFrom(const TAllyWarGuildContriInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Gid = 1;
  inline bool has_gid() const;
  inline void clear_gid();
  static const int kGidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGuildContriInfo</name>
  	<Function>
  		<name>gid</name>
  		<replaceName>Gid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_gid</name>
  		<replaceName>Gid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_gid</name>
  		<replaceName>Gid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 gid() const;
  inline void set_gid(::google::protobuf::uint64 value);

  // optional string ServerId = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGuildContriInfo</name>
  	<Function>
  		<name>serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& serverid() const;
  inline void set_serverid(const ::std::string& value);
  inline void set_serverid(const char* value);
  inline void set_serverid(const char* value, size_t size);
  inline ::std::string* mutable_serverid();
  inline ::std::string* release_serverid();
  inline void set_allocated_serverid(::std::string* serverid);

  // optional uint32 ContriNum = 3;
  inline bool has_contrinum() const;
  inline void clear_contrinum();
  static const int kContriNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGuildContriInfo</name>
  	<Function>
  		<name>contrinum</name>
  		<replaceName>ContriNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_contrinum</name>
  		<replaceName>ContriNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_contrinum</name>
  		<replaceName>ContriNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 contrinum() const;
  inline void set_contrinum(::google::protobuf::uint32 value);

  // optional .pb.TAllianceGuildMemberInfo GuildInfo = 4;
  inline bool has_guildinfo() const;
  inline void clear_guildinfo();
  static const int kGuildInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGuildContriInfo</name>
  	<Function>
  		<name>guildinfo</name>
  		<replaceName>GuildInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_guildinfo</name>
  		<replaceName>GuildInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_guildinfo</name>
  		<replaceName>GuildInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_guildinfo</name>
  		<replaceName>GuildInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllianceGuildMemberInfo& guildinfo() const;
  inline ::pb::TAllianceGuildMemberInfo* mutable_guildinfo();
  inline ::pb::TAllianceGuildMemberInfo* release_guildinfo();
  inline void set_allocated_guildinfo(::pb::TAllianceGuildMemberInfo* guildinfo);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarGuildContriInfo)
 private:
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_contrinum();
  inline void clear_has_contrinum();
  inline void set_has_guildinfo();
  inline void clear_has_guildinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 gid_;
  ::std::string* serverid_;
  ::pb::TAllianceGuildMemberInfo* guildinfo_;
  ::google::protobuf::uint32 contrinum_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarGuildContriInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarAllyMatchInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarAllyMatchInfo : public ::google::protobuf::Message {
 public:
  TAllyWarAllyMatchInfo();
  virtual ~TAllyWarAllyMatchInfo();

  TAllyWarAllyMatchInfo(const TAllyWarAllyMatchInfo& from);

  inline TAllyWarAllyMatchInfo& operator=(const TAllyWarAllyMatchInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarAllyMatchInfo& default_instance();

  void Swap(TAllyWarAllyMatchInfo* other);

  // implements Message ----------------------------------------------

  TAllyWarAllyMatchInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarAllyMatchInfo& from);
  void MergeFrom(const TAllyWarAllyMatchInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 MatchId = 1;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAllyMatchInfo</name>
  	<Function>
  		<name>matchid</name>
  		<replaceName>MatchId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_matchid</name>
  		<replaceName>MatchId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_matchid</name>
  		<replaceName>MatchId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 matchid() const;
  inline void set_matchid(::google::protobuf::uint32 value);

  // optional uint64 AtkAllyId = 2;
  inline bool has_atkallyid() const;
  inline void clear_atkallyid();
  static const int kAtkAllyIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAllyMatchInfo</name>
  	<Function>
  		<name>atkallyid</name>
  		<replaceName>AtkAllyId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_atkallyid</name>
  		<replaceName>AtkAllyId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_atkallyid</name>
  		<replaceName>AtkAllyId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 atkallyid() const;
  inline void set_atkallyid(::google::protobuf::uint64 value);

  // optional uint64 DefAllyId = 3;
  inline bool has_defallyid() const;
  inline void clear_defallyid();
  static const int kDefAllyIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAllyMatchInfo</name>
  	<Function>
  		<name>defallyid</name>
  		<replaceName>DefAllyId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_defallyid</name>
  		<replaceName>DefAllyId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_defallyid</name>
  		<replaceName>DefAllyId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 defallyid() const;
  inline void set_defallyid(::google::protobuf::uint64 value);

  // optional uint64 DoneTime = 4;
  inline bool has_donetime() const;
  inline void clear_donetime();
  static const int kDoneTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAllyMatchInfo</name>
  	<Function>
  		<name>donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 donetime() const;
  inline void set_donetime(::google::protobuf::uint64 value);

  // optional uint64 WinAllyId = 5;
  inline bool has_winallyid() const;
  inline void clear_winallyid();
  static const int kWinAllyIdFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAllyMatchInfo</name>
  	<Function>
  		<name>winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 winallyid() const;
  inline void set_winallyid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarAllyMatchInfo)
 private:
  inline void set_has_matchid();
  inline void clear_has_matchid();
  inline void set_has_atkallyid();
  inline void clear_has_atkallyid();
  inline void set_has_defallyid();
  inline void clear_has_defallyid();
  inline void set_has_donetime();
  inline void clear_has_donetime();
  inline void set_has_winallyid();
  inline void clear_has_winallyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 atkallyid_;
  ::google::protobuf::uint64 defallyid_;
  ::google::protobuf::uint64 donetime_;
  ::google::protobuf::uint64 winallyid_;
  ::google::protobuf::uint32 matchid_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarAllyMatchInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarFieldUnitInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarFieldUnitInfo : public ::google::protobuf::Message {
 public:
  TAllyWarFieldUnitInfo();
  virtual ~TAllyWarFieldUnitInfo();

  TAllyWarFieldUnitInfo(const TAllyWarFieldUnitInfo& from);

  inline TAllyWarFieldUnitInfo& operator=(const TAllyWarFieldUnitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarFieldUnitInfo& default_instance();

  void Swap(TAllyWarFieldUnitInfo* other);

  // implements Message ----------------------------------------------

  TAllyWarFieldUnitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarFieldUnitInfo& from);
  void MergeFrom(const TAllyWarFieldUnitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 PosId = 1;
  inline bool has_posid() const;
  inline void clear_posid();
  static const int kPosIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarFieldUnitInfo</name>
  	<Function>
  		<name>posid</name>
  		<replaceName>PosId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_posid</name>
  		<replaceName>PosId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_posid</name>
  		<replaceName>PosId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 posid() const;
  inline void set_posid(::google::protobuf::uint32 value);

  // optional uint64 Uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarFieldUnitInfo</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional string ServerId = 3;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarFieldUnitInfo</name>
  	<Function>
  		<name>serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& serverid() const;
  inline void set_serverid(const ::std::string& value);
  inline void set_serverid(const char* value);
  inline void set_serverid(const char* value, size_t size);
  inline ::std::string* mutable_serverid();
  inline ::std::string* release_serverid();
  inline void set_allocated_serverid(::std::string* serverid);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarFieldUnitInfo)
 private:
  inline void set_has_posid();
  inline void clear_has_posid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::std::string* serverid_;
  ::google::protobuf::uint32 posid_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarFieldUnitInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarFieldAreaInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarFieldAreaInfo : public ::google::protobuf::Message {
 public:
  TAllyWarFieldAreaInfo();
  virtual ~TAllyWarFieldAreaInfo();

  TAllyWarFieldAreaInfo(const TAllyWarFieldAreaInfo& from);

  inline TAllyWarFieldAreaInfo& operator=(const TAllyWarFieldAreaInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarFieldAreaInfo& default_instance();

  void Swap(TAllyWarFieldAreaInfo* other);

  // implements Message ----------------------------------------------

  TAllyWarFieldAreaInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarFieldAreaInfo& from);
  void MergeFrom(const TAllyWarFieldAreaInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AreaId = 1;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarFieldAreaInfo</name>
  	<Function>
  		<name>areaid</name>
  		<replaceName>AreaId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_areaid</name>
  		<replaceName>AreaId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_areaid</name>
  		<replaceName>AreaId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 areaid() const;
  inline void set_areaid(::google::protobuf::uint32 value);

  // repeated .pb.TAllyWarFieldUnitInfo ArrUnit = 2;
  inline int arrunit_size() const;
  inline void clear_arrunit();
  static const int kArrUnitFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarFieldAreaInfo</name>
  	<Function>
  		<name>arrunit</name>
  		<replaceName>ArrUnit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrunit</name>
  		<replaceName>ArrUnit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrunit</name>
  		<replaceName>ArrUnit</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrunit</name>
  		<replaceName>ArrUnit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrunit_size</name>
  		<replaceName>ArrUnit</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarFieldUnitInfo& arrunit(int index) const;
  inline ::pb::TAllyWarFieldUnitInfo* mutable_arrunit(int index);
  inline ::pb::TAllyWarFieldUnitInfo* add_arrunit();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFieldUnitInfo >&
      arrunit() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFieldUnitInfo >*
      mutable_arrunit();

  // optional uint64 DoneTime = 3;
  inline bool has_donetime() const;
  inline void clear_donetime();
  static const int kDoneTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarFieldAreaInfo</name>
  	<Function>
  		<name>donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 donetime() const;
  inline void set_donetime(::google::protobuf::uint64 value);

  // optional uint64 WinAllyId = 4;
  inline bool has_winallyid() const;
  inline void clear_winallyid();
  static const int kWinAllyIdFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarFieldAreaInfo</name>
  	<Function>
  		<name>winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 winallyid() const;
  inline void set_winallyid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarFieldAreaInfo)
 private:
  inline void set_has_areaid();
  inline void clear_has_areaid();
  inline void set_has_donetime();
  inline void clear_has_donetime();
  inline void set_has_winallyid();
  inline void clear_has_winallyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFieldUnitInfo > arrunit_;
  ::google::protobuf::uint64 donetime_;
  ::google::protobuf::uint64 winallyid_;
  ::google::protobuf::uint32 areaid_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarFieldAreaInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarDeployInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarDeployInfo : public ::google::protobuf::Message {
 public:
  TAllyWarDeployInfo();
  virtual ~TAllyWarDeployInfo();

  TAllyWarDeployInfo(const TAllyWarDeployInfo& from);

  inline TAllyWarDeployInfo& operator=(const TAllyWarDeployInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarDeployInfo& default_instance();

  void Swap(TAllyWarDeployInfo* other);

  // implements Message ----------------------------------------------

  TAllyWarDeployInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarDeployInfo& from);
  void MergeFrom(const TAllyWarDeployInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AreaId = 1;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarDeployInfo</name>
  	<Function>
  		<name>areaid</name>
  		<replaceName>AreaId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_areaid</name>
  		<replaceName>AreaId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_areaid</name>
  		<replaceName>AreaId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 areaid() const;
  inline void set_areaid(::google::protobuf::uint32 value);

  // optional uint32 PosId = 2;
  inline bool has_posid() const;
  inline void clear_posid();
  static const int kPosIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarDeployInfo</name>
  	<Function>
  		<name>posid</name>
  		<replaceName>PosId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_posid</name>
  		<replaceName>PosId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_posid</name>
  		<replaceName>PosId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 posid() const;
  inline void set_posid(::google::protobuf::uint32 value);

  // optional uint64 Uid = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarDeployInfo</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional string ServerId = 4;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarDeployInfo</name>
  	<Function>
  		<name>serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& serverid() const;
  inline void set_serverid(const ::std::string& value);
  inline void set_serverid(const char* value);
  inline void set_serverid(const char* value, size_t size);
  inline ::std::string* mutable_serverid();
  inline ::std::string* release_serverid();
  inline void set_allocated_serverid(::std::string* serverid);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarDeployInfo)
 private:
  inline void set_has_areaid();
  inline void clear_has_areaid();
  inline void set_has_posid();
  inline void clear_has_posid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 areaid_;
  ::google::protobuf::uint32 posid_;
  ::google::protobuf::uint64 uid_;
  ::std::string* serverid_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarDeployInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarPosInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarPosInfo : public ::google::protobuf::Message {
 public:
  TAllyWarPosInfo();
  virtual ~TAllyWarPosInfo();

  TAllyWarPosInfo(const TAllyWarPosInfo& from);

  inline TAllyWarPosInfo& operator=(const TAllyWarPosInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarPosInfo& default_instance();

  void Swap(TAllyWarPosInfo* other);

  // implements Message ----------------------------------------------

  TAllyWarPosInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarPosInfo& from);
  void MergeFrom(const TAllyWarPosInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarPosInfo</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 Hid = 2;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarPosInfo</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarPosInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarPosInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarFmtInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarFmtInfo : public ::google::protobuf::Message {
 public:
  TAllyWarFmtInfo();
  virtual ~TAllyWarFmtInfo();

  TAllyWarFmtInfo(const TAllyWarFmtInfo& from);

  inline TAllyWarFmtInfo& operator=(const TAllyWarFmtInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarFmtInfo& default_instance();

  void Swap(TAllyWarFmtInfo* other);

  // implements Message ----------------------------------------------

  TAllyWarFmtInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarFmtInfo& from);
  void MergeFrom(const TAllyWarFmtInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 FmtId = 1;
  inline bool has_fmtid() const;
  inline void clear_fmtid();
  static const int kFmtIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarFmtInfo</name>
  	<Function>
  		<name>fmtid</name>
  		<replaceName>FmtId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_fmtid</name>
  		<replaceName>FmtId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_fmtid</name>
  		<replaceName>FmtId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 fmtid() const;
  inline void set_fmtid(::google::protobuf::uint32 value);

  // repeated .pb.TAllyWarPosInfo ArrPos = 2;
  inline int arrpos_size() const;
  inline void clear_arrpos();
  static const int kArrPosFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarFmtInfo</name>
  	<Function>
  		<name>arrpos</name>
  		<replaceName>ArrPos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrpos</name>
  		<replaceName>ArrPos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrpos</name>
  		<replaceName>ArrPos</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrpos</name>
  		<replaceName>ArrPos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrpos_size</name>
  		<replaceName>ArrPos</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarPosInfo& arrpos(int index) const;
  inline ::pb::TAllyWarPosInfo* mutable_arrpos(int index);
  inline ::pb::TAllyWarPosInfo* add_arrpos();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarPosInfo >&
      arrpos() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarPosInfo >*
      mutable_arrpos();

  // @@protoc_insertion_point(class_scope:pb.TAllyWarFmtInfo)
 private:
  inline void set_has_fmtid();
  inline void clear_has_fmtid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarPosInfo > arrpos_;
  ::google::protobuf::uint32 fmtid_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarFmtInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarFmtRecordInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarFmtRecordInfo : public ::google::protobuf::Message {
 public:
  TAllyWarFmtRecordInfo();
  virtual ~TAllyWarFmtRecordInfo();

  TAllyWarFmtRecordInfo(const TAllyWarFmtRecordInfo& from);

  inline TAllyWarFmtRecordInfo& operator=(const TAllyWarFmtRecordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarFmtRecordInfo& default_instance();

  void Swap(TAllyWarFmtRecordInfo* other);

  // implements Message ----------------------------------------------

  TAllyWarFmtRecordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarFmtRecordInfo& from);
  void MergeFrom(const TAllyWarFmtRecordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 FmtId = 1;
  inline bool has_fmtid() const;
  inline void clear_fmtid();
  static const int kFmtIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarFmtRecordInfo</name>
  	<Function>
  		<name>fmtid</name>
  		<replaceName>FmtId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_fmtid</name>
  		<replaceName>FmtId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_fmtid</name>
  		<replaceName>FmtId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 fmtid() const;
  inline void set_fmtid(::google::protobuf::uint32 value);

  // optional bool Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarFmtRecordInfo</name>
  	<Function>
  		<name>result</name>
  		<replaceName>Result</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_result</name>
  		<replaceName>Result</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_result</name>
  		<replaceName>Result</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool result() const;
  inline void set_result(bool value);

  // optional uint64 Rid = 3;
  inline bool has_rid() const;
  inline void clear_rid();
  static const int kRidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarFmtRecordInfo</name>
  	<Function>
  		<name>rid</name>
  		<replaceName>Rid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rid</name>
  		<replaceName>Rid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rid</name>
  		<replaceName>Rid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 rid() const;
  inline void set_rid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarFmtRecordInfo)
 private:
  inline void set_has_fmtid();
  inline void clear_has_fmtid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_rid();
  inline void clear_has_rid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 fmtid_;
  bool result_;
  ::google::protobuf::uint64 rid_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarFmtRecordInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarUnitRecordInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarUnitRecordInfo : public ::google::protobuf::Message {
 public:
  TAllyWarUnitRecordInfo();
  virtual ~TAllyWarUnitRecordInfo();

  TAllyWarUnitRecordInfo(const TAllyWarUnitRecordInfo& from);

  inline TAllyWarUnitRecordInfo& operator=(const TAllyWarUnitRecordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarUnitRecordInfo& default_instance();

  void Swap(TAllyWarUnitRecordInfo* other);

  // implements Message ----------------------------------------------

  TAllyWarUnitRecordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarUnitRecordInfo& from);
  void MergeFrom(const TAllyWarUnitRecordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 AtkUid = 1;
  inline bool has_atkuid() const;
  inline void clear_atkuid();
  static const int kAtkUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarUnitRecordInfo</name>
  	<Function>
  		<name>atkuid</name>
  		<replaceName>AtkUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_atkuid</name>
  		<replaceName>AtkUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_atkuid</name>
  		<replaceName>AtkUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 atkuid() const;
  inline void set_atkuid(::google::protobuf::uint64 value);

  // optional string AtkServerId = 2;
  inline bool has_atkserverid() const;
  inline void clear_atkserverid();
  static const int kAtkServerIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarUnitRecordInfo</name>
  	<Function>
  		<name>atkserverid</name>
  		<replaceName>AtkServerId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_atkserverid</name>
  		<replaceName>AtkServerId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_atkserverid</name>
  		<replaceName>AtkServerId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& atkserverid() const;
  inline void set_atkserverid(const ::std::string& value);
  inline void set_atkserverid(const char* value);
  inline void set_atkserverid(const char* value, size_t size);
  inline ::std::string* mutable_atkserverid();
  inline ::std::string* release_atkserverid();
  inline void set_allocated_atkserverid(::std::string* atkserverid);

  // optional uint64 DefUid = 3;
  inline bool has_defuid() const;
  inline void clear_defuid();
  static const int kDefUidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarUnitRecordInfo</name>
  	<Function>
  		<name>defuid</name>
  		<replaceName>DefUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_defuid</name>
  		<replaceName>DefUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_defuid</name>
  		<replaceName>DefUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 defuid() const;
  inline void set_defuid(::google::protobuf::uint64 value);

  // optional string DefServerId = 4;
  inline bool has_defserverid() const;
  inline void clear_defserverid();
  static const int kDefServerIdFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarUnitRecordInfo</name>
  	<Function>
  		<name>defserverid</name>
  		<replaceName>DefServerId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_defserverid</name>
  		<replaceName>DefServerId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_defserverid</name>
  		<replaceName>DefServerId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& defserverid() const;
  inline void set_defserverid(const ::std::string& value);
  inline void set_defserverid(const char* value);
  inline void set_defserverid(const char* value, size_t size);
  inline ::std::string* mutable_defserverid();
  inline ::std::string* release_defserverid();
  inline void set_allocated_defserverid(::std::string* defserverid);

  // optional uint64 WinUid = 5;
  inline bool has_winuid() const;
  inline void clear_winuid();
  static const int kWinUidFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarUnitRecordInfo</name>
  	<Function>
  		<name>winuid</name>
  		<replaceName>WinUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_winuid</name>
  		<replaceName>WinUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_winuid</name>
  		<replaceName>WinUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 winuid() const;
  inline void set_winuid(::google::protobuf::uint64 value);

  // optional uint32 ContiWinNum = 6;
  inline bool has_contiwinnum() const;
  inline void clear_contiwinnum();
  static const int kContiWinNumFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarUnitRecordInfo</name>
  	<Function>
  		<name>contiwinnum</name>
  		<replaceName>ContiWinNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_contiwinnum</name>
  		<replaceName>ContiWinNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_contiwinnum</name>
  		<replaceName>ContiWinNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 contiwinnum() const;
  inline void set_contiwinnum(::google::protobuf::uint32 value);

  // repeated .pb.TAllyWarFmtRecordInfo ArrFmtRecord = 7;
  inline int arrfmtrecord_size() const;
  inline void clear_arrfmtrecord();
  static const int kArrFmtRecordFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarUnitRecordInfo</name>
  	<Function>
  		<name>arrfmtrecord</name>
  		<replaceName>ArrFmtRecord</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrfmtrecord</name>
  		<replaceName>ArrFmtRecord</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrfmtrecord</name>
  		<replaceName>ArrFmtRecord</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrfmtrecord</name>
  		<replaceName>ArrFmtRecord</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrfmtrecord_size</name>
  		<replaceName>ArrFmtRecord</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarFmtRecordInfo& arrfmtrecord(int index) const;
  inline ::pb::TAllyWarFmtRecordInfo* mutable_arrfmtrecord(int index);
  inline ::pb::TAllyWarFmtRecordInfo* add_arrfmtrecord();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtRecordInfo >&
      arrfmtrecord() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtRecordInfo >*
      mutable_arrfmtrecord();

  // @@protoc_insertion_point(class_scope:pb.TAllyWarUnitRecordInfo)
 private:
  inline void set_has_atkuid();
  inline void clear_has_atkuid();
  inline void set_has_atkserverid();
  inline void clear_has_atkserverid();
  inline void set_has_defuid();
  inline void clear_has_defuid();
  inline void set_has_defserverid();
  inline void clear_has_defserverid();
  inline void set_has_winuid();
  inline void clear_has_winuid();
  inline void set_has_contiwinnum();
  inline void clear_has_contiwinnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 atkuid_;
  ::std::string* atkserverid_;
  ::google::protobuf::uint64 defuid_;
  ::std::string* defserverid_;
  ::google::protobuf::uint64 winuid_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtRecordInfo > arrfmtrecord_;
  ::google::protobuf::uint32 contiwinnum_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarUnitRecordInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarAreaRecordInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarAreaRecordInfo : public ::google::protobuf::Message {
 public:
  TAllyWarAreaRecordInfo();
  virtual ~TAllyWarAreaRecordInfo();

  TAllyWarAreaRecordInfo(const TAllyWarAreaRecordInfo& from);

  inline TAllyWarAreaRecordInfo& operator=(const TAllyWarAreaRecordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarAreaRecordInfo& default_instance();

  void Swap(TAllyWarAreaRecordInfo* other);

  // implements Message ----------------------------------------------

  TAllyWarAreaRecordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarAreaRecordInfo& from);
  void MergeFrom(const TAllyWarAreaRecordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AreaId = 1;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAreaRecordInfo</name>
  	<Function>
  		<name>areaid</name>
  		<replaceName>AreaId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_areaid</name>
  		<replaceName>AreaId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_areaid</name>
  		<replaceName>AreaId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 areaid() const;
  inline void set_areaid(::google::protobuf::uint32 value);

  // repeated .pb.TAllyWarUnitRecordInfo ArrUnitRecord = 2;
  inline int arrunitrecord_size() const;
  inline void clear_arrunitrecord();
  static const int kArrUnitRecordFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAreaRecordInfo</name>
  	<Function>
  		<name>arrunitrecord</name>
  		<replaceName>ArrUnitRecord</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrunitrecord</name>
  		<replaceName>ArrUnitRecord</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrunitrecord</name>
  		<replaceName>ArrUnitRecord</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrunitrecord</name>
  		<replaceName>ArrUnitRecord</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrunitrecord_size</name>
  		<replaceName>ArrUnitRecord</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarUnitRecordInfo& arrunitrecord(int index) const;
  inline ::pb::TAllyWarUnitRecordInfo* mutable_arrunitrecord(int index);
  inline ::pb::TAllyWarUnitRecordInfo* add_arrunitrecord();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUnitRecordInfo >&
      arrunitrecord() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUnitRecordInfo >*
      mutable_arrunitrecord();

  // optional uint64 DoneTime = 3;
  inline bool has_donetime() const;
  inline void clear_donetime();
  static const int kDoneTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAreaRecordInfo</name>
  	<Function>
  		<name>donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 donetime() const;
  inline void set_donetime(::google::protobuf::uint64 value);

  // optional uint64 WinAllyId = 5;
  inline bool has_winallyid() const;
  inline void clear_winallyid();
  static const int kWinAllyIdFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarAreaRecordInfo</name>
  	<Function>
  		<name>winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 winallyid() const;
  inline void set_winallyid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarAreaRecordInfo)
 private:
  inline void set_has_areaid();
  inline void clear_has_areaid();
  inline void set_has_donetime();
  inline void clear_has_donetime();
  inline void set_has_winallyid();
  inline void clear_has_winallyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUnitRecordInfo > arrunitrecord_;
  ::google::protobuf::uint64 donetime_;
  ::google::protobuf::uint64 winallyid_;
  ::google::protobuf::uint32 areaid_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarAreaRecordInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllianceSimpleInfoWithUser</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllianceSimpleInfoWithUser : public ::google::protobuf::Message {
 public:
  TAllianceSimpleInfoWithUser();
  virtual ~TAllianceSimpleInfoWithUser();

  TAllianceSimpleInfoWithUser(const TAllianceSimpleInfoWithUser& from);

  inline TAllianceSimpleInfoWithUser& operator=(const TAllianceSimpleInfoWithUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllianceSimpleInfoWithUser& default_instance();

  void Swap(TAllianceSimpleInfoWithUser* other);

  // implements Message ----------------------------------------------

  TAllianceSimpleInfoWithUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllianceSimpleInfoWithUser& from);
  void MergeFrom(const TAllianceSimpleInfoWithUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TAllianceSimpleInfo AllianceSimpleInfo = 1;
  inline bool has_alliancesimpleinfo() const;
  inline void clear_alliancesimpleinfo();
  static const int kAllianceSimpleInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllianceSimpleInfoWithUser</name>
  	<Function>
  		<name>alliancesimpleinfo</name>
  		<replaceName>AllianceSimpleInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_alliancesimpleinfo</name>
  		<replaceName>AllianceSimpleInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_alliancesimpleinfo</name>
  		<replaceName>AllianceSimpleInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_alliancesimpleinfo</name>
  		<replaceName>AllianceSimpleInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllianceSimpleInfo& alliancesimpleinfo() const;
  inline ::pb::TAllianceSimpleInfo* mutable_alliancesimpleinfo();
  inline ::pb::TAllianceSimpleInfo* release_alliancesimpleinfo();
  inline void set_allocated_alliancesimpleinfo(::pb::TAllianceSimpleInfo* alliancesimpleinfo);

  // repeated .pb.TAllyWarUserBaseInfo ArrUserBaseInfo = 2;
  inline int arruserbaseinfo_size() const;
  inline void clear_arruserbaseinfo();
  static const int kArrUserBaseInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllianceSimpleInfoWithUser</name>
  	<Function>
  		<name>arruserbaseinfo</name>
  		<replaceName>ArrUserBaseInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arruserbaseinfo</name>
  		<replaceName>ArrUserBaseInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arruserbaseinfo</name>
  		<replaceName>ArrUserBaseInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arruserbaseinfo</name>
  		<replaceName>ArrUserBaseInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arruserbaseinfo_size</name>
  		<replaceName>ArrUserBaseInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarUserBaseInfo& arruserbaseinfo(int index) const;
  inline ::pb::TAllyWarUserBaseInfo* mutable_arruserbaseinfo(int index);
  inline ::pb::TAllyWarUserBaseInfo* add_arruserbaseinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >&
      arruserbaseinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >*
      mutable_arruserbaseinfo();

  // @@protoc_insertion_point(class_scope:pb.TAllianceSimpleInfoWithUser)
 private:
  inline void set_has_alliancesimpleinfo();
  inline void clear_has_alliancesimpleinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TAllianceSimpleInfo* alliancesimpleinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo > arruserbaseinfo_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllianceSimpleInfoWithUser* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarGetBaseInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarGetBaseInfoRsp : public ::google::protobuf::Message {
 public:
  TAllyWarGetBaseInfoRsp();
  virtual ~TAllyWarGetBaseInfoRsp();

  TAllyWarGetBaseInfoRsp(const TAllyWarGetBaseInfoRsp& from);

  inline TAllyWarGetBaseInfoRsp& operator=(const TAllyWarGetBaseInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarGetBaseInfoRsp& default_instance();

  void Swap(TAllyWarGetBaseInfoRsp* other);

  // implements Message ----------------------------------------------

  TAllyWarGetBaseInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarGetBaseInfoRsp& from);
  void MergeFrom(const TAllyWarGetBaseInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TAllyWarExpectProcess ArrExpectProcess = 1;
  inline int arrexpectprocess_size() const;
  inline void clear_arrexpectprocess();
  static const int kArrExpectProcessFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetBaseInfoRsp</name>
  	<Function>
  		<name>arrexpectprocess</name>
  		<replaceName>ArrExpectProcess</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrexpectprocess</name>
  		<replaceName>ArrExpectProcess</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrexpectprocess</name>
  		<replaceName>ArrExpectProcess</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrexpectprocess</name>
  		<replaceName>ArrExpectProcess</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrexpectprocess_size</name>
  		<replaceName>ArrExpectProcess</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarExpectProcess& arrexpectprocess(int index) const;
  inline ::pb::TAllyWarExpectProcess* mutable_arrexpectprocess(int index);
  inline ::pb::TAllyWarExpectProcess* add_arrexpectprocess();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarExpectProcess >&
      arrexpectprocess() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarExpectProcess >*
      mutable_arrexpectprocess();

  // optional bool FuncOpen = 2;
  inline bool has_funcopen() const;
  inline void clear_funcopen();
  static const int kFuncOpenFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetBaseInfoRsp</name>
  	<Function>
  		<name>funcopen</name>
  		<replaceName>FuncOpen</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_funcopen</name>
  		<replaceName>FuncOpen</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_funcopen</name>
  		<replaceName>FuncOpen</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool funcopen() const;
  inline void set_funcopen(bool value);

  // optional .pb.TAllyWarActualProcess ActualProcess = 3;
  inline bool has_actualprocess() const;
  inline void clear_actualprocess();
  static const int kActualProcessFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetBaseInfoRsp</name>
  	<Function>
  		<name>actualprocess</name>
  		<replaceName>ActualProcess</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_actualprocess</name>
  		<replaceName>ActualProcess</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_actualprocess</name>
  		<replaceName>ActualProcess</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_actualprocess</name>
  		<replaceName>ActualProcess</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarActualProcess& actualprocess() const;
  inline ::pb::TAllyWarActualProcess* mutable_actualprocess();
  inline ::pb::TAllyWarActualProcess* release_actualprocess();
  inline void set_allocated_actualprocess(::pb::TAllyWarActualProcess* actualprocess);

  // optional string SceneId = 4;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetBaseInfoRsp</name>
  	<Function>
  		<name>sceneid</name>
  		<replaceName>SceneId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_sceneid</name>
  		<replaceName>SceneId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_sceneid</name>
  		<replaceName>SceneId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& sceneid() const;
  inline void set_sceneid(const ::std::string& value);
  inline void set_sceneid(const char* value);
  inline void set_sceneid(const char* value, size_t size);
  inline ::std::string* mutable_sceneid();
  inline ::std::string* release_sceneid();
  inline void set_allocated_sceneid(::std::string* sceneid);

  // optional uint32 SignAllyNum = 5;
  inline bool has_signallynum() const;
  inline void clear_signallynum();
  static const int kSignAllyNumFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetBaseInfoRsp</name>
  	<Function>
  		<name>signallynum</name>
  		<replaceName>SignAllyNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_signallynum</name>
  		<replaceName>SignAllyNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_signallynum</name>
  		<replaceName>SignAllyNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 signallynum() const;
  inline void set_signallynum(::google::protobuf::uint32 value);

  // optional uint64 SignTime = 6;
  inline bool has_signtime() const;
  inline void clear_signtime();
  static const int kSignTimeFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetBaseInfoRsp</name>
  	<Function>
  		<name>signtime</name>
  		<replaceName>SignTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_signtime</name>
  		<replaceName>SignTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_signtime</name>
  		<replaceName>SignTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 signtime() const;
  inline void set_signtime(::google::protobuf::uint64 value);

  // optional uint32 MyAreaId = 7;
  inline bool has_myareaid() const;
  inline void clear_myareaid();
  static const int kMyAreaIdFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetBaseInfoRsp</name>
  	<Function>
  		<name>myareaid</name>
  		<replaceName>MyAreaId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_myareaid</name>
  		<replaceName>MyAreaId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_myareaid</name>
  		<replaceName>MyAreaId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 myareaid() const;
  inline void set_myareaid(::google::protobuf::uint32 value);

  // optional uint32 MyPosId = 8;
  inline bool has_myposid() const;
  inline void clear_myposid();
  static const int kMyPosIdFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetBaseInfoRsp</name>
  	<Function>
  		<name>myposid</name>
  		<replaceName>MyPosId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_myposid</name>
  		<replaceName>MyPosId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_myposid</name>
  		<replaceName>MyPosId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 myposid() const;
  inline void set_myposid(::google::protobuf::uint32 value);

  // optional .pb.TAllyWarAllyBaseInfo MyAllyInfo = 9;
  inline bool has_myallyinfo() const;
  inline void clear_myallyinfo();
  static const int kMyAllyInfoFieldNumber = 9;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetBaseInfoRsp</name>
  	<Function>
  		<name>myallyinfo</name>
  		<replaceName>MyAllyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_myallyinfo</name>
  		<replaceName>MyAllyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_myallyinfo</name>
  		<replaceName>MyAllyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_myallyinfo</name>
  		<replaceName>MyAllyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarAllyBaseInfo& myallyinfo() const;
  inline ::pb::TAllyWarAllyBaseInfo* mutable_myallyinfo();
  inline ::pb::TAllyWarAllyBaseInfo* release_myallyinfo();
  inline void set_allocated_myallyinfo(::pb::TAllyWarAllyBaseInfo* myallyinfo);

  // optional .pb.TAllyWarAllyBaseInfo EnemyAllyInfo = 10;
  inline bool has_enemyallyinfo() const;
  inline void clear_enemyallyinfo();
  static const int kEnemyAllyInfoFieldNumber = 10;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetBaseInfoRsp</name>
  	<Function>
  		<name>enemyallyinfo</name>
  		<replaceName>EnemyAllyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_enemyallyinfo</name>
  		<replaceName>EnemyAllyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_enemyallyinfo</name>
  		<replaceName>EnemyAllyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_enemyallyinfo</name>
  		<replaceName>EnemyAllyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarAllyBaseInfo& enemyallyinfo() const;
  inline ::pb::TAllyWarAllyBaseInfo* mutable_enemyallyinfo();
  inline ::pb::TAllyWarAllyBaseInfo* release_enemyallyinfo();
  inline void set_allocated_enemyallyinfo(::pb::TAllyWarAllyBaseInfo* enemyallyinfo);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarGetBaseInfoRsp)
 private:
  inline void set_has_funcopen();
  inline void clear_has_funcopen();
  inline void set_has_actualprocess();
  inline void clear_has_actualprocess();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_signallynum();
  inline void clear_has_signallynum();
  inline void set_has_signtime();
  inline void clear_has_signtime();
  inline void set_has_myareaid();
  inline void clear_has_myareaid();
  inline void set_has_myposid();
  inline void clear_has_myposid();
  inline void set_has_myallyinfo();
  inline void clear_has_myallyinfo();
  inline void set_has_enemyallyinfo();
  inline void clear_has_enemyallyinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarExpectProcess > arrexpectprocess_;
  ::pb::TAllyWarActualProcess* actualprocess_;
  bool funcopen_;
  ::google::protobuf::uint32 signallynum_;
  ::std::string* sceneid_;
  ::google::protobuf::uint64 signtime_;
  ::google::protobuf::uint32 myareaid_;
  ::google::protobuf::uint32 myposid_;
  ::pb::TAllyWarAllyBaseInfo* myallyinfo_;
  ::pb::TAllyWarAllyBaseInfo* enemyallyinfo_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarGetBaseInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarGetMatchInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarGetMatchInfoRsp : public ::google::protobuf::Message {
 public:
  TAllyWarGetMatchInfoRsp();
  virtual ~TAllyWarGetMatchInfoRsp();

  TAllyWarGetMatchInfoRsp(const TAllyWarGetMatchInfoRsp& from);

  inline TAllyWarGetMatchInfoRsp& operator=(const TAllyWarGetMatchInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarGetMatchInfoRsp& default_instance();

  void Swap(TAllyWarGetMatchInfoRsp* other);

  // implements Message ----------------------------------------------

  TAllyWarGetMatchInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarGetMatchInfoRsp& from);
  void MergeFrom(const TAllyWarGetMatchInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TAllyWarAllyMatchInfo ArrMatch = 1;
  inline int arrmatch_size() const;
  inline void clear_arrmatch();
  static const int kArrMatchFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetMatchInfoRsp</name>
  	<Function>
  		<name>arrmatch</name>
  		<replaceName>ArrMatch</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrmatch</name>
  		<replaceName>ArrMatch</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrmatch</name>
  		<replaceName>ArrMatch</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrmatch</name>
  		<replaceName>ArrMatch</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrmatch_size</name>
  		<replaceName>ArrMatch</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarAllyMatchInfo& arrmatch(int index) const;
  inline ::pb::TAllyWarAllyMatchInfo* mutable_arrmatch(int index);
  inline ::pb::TAllyWarAllyMatchInfo* add_arrmatch();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAllyMatchInfo >&
      arrmatch() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAllyMatchInfo >*
      mutable_arrmatch();

  // repeated .pb.TAllyWarAllyBaseInfo ArrBase = 2;
  inline int arrbase_size() const;
  inline void clear_arrbase();
  static const int kArrBaseFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetMatchInfoRsp</name>
  	<Function>
  		<name>arrbase</name>
  		<replaceName>ArrBase</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrbase</name>
  		<replaceName>ArrBase</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrbase</name>
  		<replaceName>ArrBase</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrbase</name>
  		<replaceName>ArrBase</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrbase_size</name>
  		<replaceName>ArrBase</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarAllyBaseInfo& arrbase(int index) const;
  inline ::pb::TAllyWarAllyBaseInfo* mutable_arrbase(int index);
  inline ::pb::TAllyWarAllyBaseInfo* add_arrbase();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAllyBaseInfo >&
      arrbase() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAllyBaseInfo >*
      mutable_arrbase();

  // @@protoc_insertion_point(class_scope:pb.TAllyWarGetMatchInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAllyMatchInfo > arrmatch_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAllyBaseInfo > arrbase_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarGetMatchInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarGetFieldInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarGetFieldInfoRsp : public ::google::protobuf::Message {
 public:
  TAllyWarGetFieldInfoRsp();
  virtual ~TAllyWarGetFieldInfoRsp();

  TAllyWarGetFieldInfoRsp(const TAllyWarGetFieldInfoRsp& from);

  inline TAllyWarGetFieldInfoRsp& operator=(const TAllyWarGetFieldInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarGetFieldInfoRsp& default_instance();

  void Swap(TAllyWarGetFieldInfoRsp* other);

  // implements Message ----------------------------------------------

  TAllyWarGetFieldInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarGetFieldInfoRsp& from);
  void MergeFrom(const TAllyWarGetFieldInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TAllyWarAllyBaseInfo MyAllyInfo = 1;
  inline bool has_myallyinfo() const;
  inline void clear_myallyinfo();
  static const int kMyAllyInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetFieldInfoRsp</name>
  	<Function>
  		<name>myallyinfo</name>
  		<replaceName>MyAllyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_myallyinfo</name>
  		<replaceName>MyAllyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_myallyinfo</name>
  		<replaceName>MyAllyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_myallyinfo</name>
  		<replaceName>MyAllyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarAllyBaseInfo& myallyinfo() const;
  inline ::pb::TAllyWarAllyBaseInfo* mutable_myallyinfo();
  inline ::pb::TAllyWarAllyBaseInfo* release_myallyinfo();
  inline void set_allocated_myallyinfo(::pb::TAllyWarAllyBaseInfo* myallyinfo);

  // optional .pb.TAllyWarAllyBaseInfo EnemyAllyInfo = 2;
  inline bool has_enemyallyinfo() const;
  inline void clear_enemyallyinfo();
  static const int kEnemyAllyInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetFieldInfoRsp</name>
  	<Function>
  		<name>enemyallyinfo</name>
  		<replaceName>EnemyAllyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_enemyallyinfo</name>
  		<replaceName>EnemyAllyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_enemyallyinfo</name>
  		<replaceName>EnemyAllyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_enemyallyinfo</name>
  		<replaceName>EnemyAllyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarAllyBaseInfo& enemyallyinfo() const;
  inline ::pb::TAllyWarAllyBaseInfo* mutable_enemyallyinfo();
  inline ::pb::TAllyWarAllyBaseInfo* release_enemyallyinfo();
  inline void set_allocated_enemyallyinfo(::pb::TAllyWarAllyBaseInfo* enemyallyinfo);

  // repeated .pb.TAllyWarFieldAreaInfo ArrArea = 3;
  inline int arrarea_size() const;
  inline void clear_arrarea();
  static const int kArrAreaFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetFieldInfoRsp</name>
  	<Function>
  		<name>arrarea</name>
  		<replaceName>ArrArea</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrarea</name>
  		<replaceName>ArrArea</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrarea</name>
  		<replaceName>ArrArea</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrarea</name>
  		<replaceName>ArrArea</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrarea_size</name>
  		<replaceName>ArrArea</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarFieldAreaInfo& arrarea(int index) const;
  inline ::pb::TAllyWarFieldAreaInfo* mutable_arrarea(int index);
  inline ::pb::TAllyWarFieldAreaInfo* add_arrarea();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFieldAreaInfo >&
      arrarea() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFieldAreaInfo >*
      mutable_arrarea();

  // repeated uint64 ArrCandi = 4;
  inline int arrcandi_size() const;
  inline void clear_arrcandi();
  static const int kArrCandiFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetFieldInfoRsp</name>
  	<Function>
  		<name>arrcandi</name>
  		<replaceName>ArrCandi</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrcandi</name>
  		<replaceName>ArrCandi</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrcandi</name>
  		<replaceName>ArrCandi</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrcandi</name>
  		<replaceName>ArrCandi</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrcandi_size</name>
  		<replaceName>ArrCandi</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 arrcandi(int index) const;
  inline void set_arrcandi(int index, ::google::protobuf::uint64 value);
  inline void add_arrcandi(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      arrcandi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_arrcandi();

  // repeated .pb.TAllyWarUserBaseInfo ArrUserInfo = 5;
  inline int arruserinfo_size() const;
  inline void clear_arruserinfo();
  static const int kArrUserInfoFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetFieldInfoRsp</name>
  	<Function>
  		<name>arruserinfo</name>
  		<replaceName>ArrUserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arruserinfo</name>
  		<replaceName>ArrUserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arruserinfo</name>
  		<replaceName>ArrUserInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arruserinfo</name>
  		<replaceName>ArrUserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arruserinfo_size</name>
  		<replaceName>ArrUserInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarUserBaseInfo& arruserinfo(int index) const;
  inline ::pb::TAllyWarUserBaseInfo* mutable_arruserinfo(int index);
  inline ::pb::TAllyWarUserBaseInfo* add_arruserinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >&
      arruserinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >*
      mutable_arruserinfo();

  // optional uint64 DoneTime = 6;
  inline bool has_donetime() const;
  inline void clear_donetime();
  static const int kDoneTimeFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetFieldInfoRsp</name>
  	<Function>
  		<name>donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_donetime</name>
  		<replaceName>DoneTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 donetime() const;
  inline void set_donetime(::google::protobuf::uint64 value);

  // optional uint64 WinAllyId = 7;
  inline bool has_winallyid() const;
  inline void clear_winallyid();
  static const int kWinAllyIdFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetFieldInfoRsp</name>
  	<Function>
  		<name>winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 winallyid() const;
  inline void set_winallyid(::google::protobuf::uint64 value);

  // optional uint32 MatchId = 8;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchIdFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetFieldInfoRsp</name>
  	<Function>
  		<name>matchid</name>
  		<replaceName>MatchId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_matchid</name>
  		<replaceName>MatchId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_matchid</name>
  		<replaceName>MatchId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 matchid() const;
  inline void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarGetFieldInfoRsp)
 private:
  inline void set_has_myallyinfo();
  inline void clear_has_myallyinfo();
  inline void set_has_enemyallyinfo();
  inline void clear_has_enemyallyinfo();
  inline void set_has_donetime();
  inline void clear_has_donetime();
  inline void set_has_winallyid();
  inline void clear_has_winallyid();
  inline void set_has_matchid();
  inline void clear_has_matchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TAllyWarAllyBaseInfo* myallyinfo_;
  ::pb::TAllyWarAllyBaseInfo* enemyallyinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFieldAreaInfo > arrarea_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > arrcandi_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo > arruserinfo_;
  ::google::protobuf::uint64 donetime_;
  ::google::protobuf::uint64 winallyid_;
  ::google::protobuf::uint32 matchid_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarGetFieldInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarGetWinnerInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarGetWinnerInfoRsp : public ::google::protobuf::Message {
 public:
  TAllyWarGetWinnerInfoRsp();
  virtual ~TAllyWarGetWinnerInfoRsp();

  TAllyWarGetWinnerInfoRsp(const TAllyWarGetWinnerInfoRsp& from);

  inline TAllyWarGetWinnerInfoRsp& operator=(const TAllyWarGetWinnerInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarGetWinnerInfoRsp& default_instance();

  void Swap(TAllyWarGetWinnerInfoRsp* other);

  // implements Message ----------------------------------------------

  TAllyWarGetWinnerInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarGetWinnerInfoRsp& from);
  void MergeFrom(const TAllyWarGetWinnerInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TAllyWarAllyBaseInfo WinAllyInfo = 1;
  inline bool has_winallyinfo() const;
  inline void clear_winallyinfo();
  static const int kWinAllyInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetWinnerInfoRsp</name>
  	<Function>
  		<name>winallyinfo</name>
  		<replaceName>WinAllyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_winallyinfo</name>
  		<replaceName>WinAllyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_winallyinfo</name>
  		<replaceName>WinAllyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_winallyinfo</name>
  		<replaceName>WinAllyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarAllyBaseInfo& winallyinfo() const;
  inline ::pb::TAllyWarAllyBaseInfo* mutable_winallyinfo();
  inline ::pb::TAllyWarAllyBaseInfo* release_winallyinfo();
  inline void set_allocated_winallyinfo(::pb::TAllyWarAllyBaseInfo* winallyinfo);

  // repeated .pb.TAllyWarUserBaseInfo ArrShowUser = 2;
  inline int arrshowuser_size() const;
  inline void clear_arrshowuser();
  static const int kArrShowUserFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetWinnerInfoRsp</name>
  	<Function>
  		<name>arrshowuser</name>
  		<replaceName>ArrShowUser</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrshowuser</name>
  		<replaceName>ArrShowUser</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrshowuser</name>
  		<replaceName>ArrShowUser</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrshowuser</name>
  		<replaceName>ArrShowUser</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrshowuser_size</name>
  		<replaceName>ArrShowUser</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarUserBaseInfo& arrshowuser(int index) const;
  inline ::pb::TAllyWarUserBaseInfo* mutable_arrshowuser(int index);
  inline ::pb::TAllyWarUserBaseInfo* add_arrshowuser();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >&
      arrshowuser() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >*
      mutable_arrshowuser();

  // repeated .pb.TAllyWarGuildContriInfo ArrGuildContri = 3;
  inline int arrguildcontri_size() const;
  inline void clear_arrguildcontri();
  static const int kArrGuildContriFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetWinnerInfoRsp</name>
  	<Function>
  		<name>arrguildcontri</name>
  		<replaceName>ArrGuildContri</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrguildcontri</name>
  		<replaceName>ArrGuildContri</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrguildcontri</name>
  		<replaceName>ArrGuildContri</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrguildcontri</name>
  		<replaceName>ArrGuildContri</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrguildcontri_size</name>
  		<replaceName>ArrGuildContri</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarGuildContriInfo& arrguildcontri(int index) const;
  inline ::pb::TAllyWarGuildContriInfo* mutable_arrguildcontri(int index);
  inline ::pb::TAllyWarGuildContriInfo* add_arrguildcontri();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarGuildContriInfo >&
      arrguildcontri() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarGuildContriInfo >*
      mutable_arrguildcontri();

  // @@protoc_insertion_point(class_scope:pb.TAllyWarGetWinnerInfoRsp)
 private:
  inline void set_has_winallyinfo();
  inline void clear_has_winallyinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TAllyWarAllyBaseInfo* winallyinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo > arrshowuser_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarGuildContriInfo > arrguildcontri_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarGetWinnerInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarSignRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarSignRsp : public ::google::protobuf::Message {
 public:
  TAllyWarSignRsp();
  virtual ~TAllyWarSignRsp();

  TAllyWarSignRsp(const TAllyWarSignRsp& from);

  inline TAllyWarSignRsp& operator=(const TAllyWarSignRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarSignRsp& default_instance();

  void Swap(TAllyWarSignRsp* other);

  // implements Message ----------------------------------------------

  TAllyWarSignRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarSignRsp& from);
  void MergeFrom(const TAllyWarSignRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 SignTime = 1;
  inline bool has_signtime() const;
  inline void clear_signtime();
  static const int kSignTimeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarSignRsp</name>
  	<Function>
  		<name>signtime</name>
  		<replaceName>SignTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_signtime</name>
  		<replaceName>SignTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_signtime</name>
  		<replaceName>SignTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 signtime() const;
  inline void set_signtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarSignRsp)
 private:
  inline void set_has_signtime();
  inline void clear_has_signtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 signtime_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarSignRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarGetFmtRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarGetFmtRsp : public ::google::protobuf::Message {
 public:
  TAllyWarGetFmtRsp();
  virtual ~TAllyWarGetFmtRsp();

  TAllyWarGetFmtRsp(const TAllyWarGetFmtRsp& from);

  inline TAllyWarGetFmtRsp& operator=(const TAllyWarGetFmtRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarGetFmtRsp& default_instance();

  void Swap(TAllyWarGetFmtRsp* other);

  // implements Message ----------------------------------------------

  TAllyWarGetFmtRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarGetFmtRsp& from);
  void MergeFrom(const TAllyWarGetFmtRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TAllyWarFmtInfo ArrFmt = 1;
  inline int arrfmt_size() const;
  inline void clear_arrfmt();
  static const int kArrFmtFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetFmtRsp</name>
  	<Function>
  		<name>arrfmt</name>
  		<replaceName>ArrFmt</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrfmt</name>
  		<replaceName>ArrFmt</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrfmt</name>
  		<replaceName>ArrFmt</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrfmt</name>
  		<replaceName>ArrFmt</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrfmt_size</name>
  		<replaceName>ArrFmt</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarFmtInfo& arrfmt(int index) const;
  inline ::pb::TAllyWarFmtInfo* mutable_arrfmt(int index);
  inline ::pb::TAllyWarFmtInfo* add_arrfmt();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtInfo >&
      arrfmt() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtInfo >*
      mutable_arrfmt();

  // @@protoc_insertion_point(class_scope:pb.TAllyWarGetFmtRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtInfo > arrfmt_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarGetFmtRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarSetFmtReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarSetFmtReq : public ::google::protobuf::Message {
 public:
  TAllyWarSetFmtReq();
  virtual ~TAllyWarSetFmtReq();

  TAllyWarSetFmtReq(const TAllyWarSetFmtReq& from);

  inline TAllyWarSetFmtReq& operator=(const TAllyWarSetFmtReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarSetFmtReq& default_instance();

  void Swap(TAllyWarSetFmtReq* other);

  // implements Message ----------------------------------------------

  TAllyWarSetFmtReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarSetFmtReq& from);
  void MergeFrom(const TAllyWarSetFmtReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TAllyWarFmtInfo ArrFmt = 1;
  inline int arrfmt_size() const;
  inline void clear_arrfmt();
  static const int kArrFmtFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarSetFmtReq</name>
  	<Function>
  		<name>arrfmt</name>
  		<replaceName>ArrFmt</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrfmt</name>
  		<replaceName>ArrFmt</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrfmt</name>
  		<replaceName>ArrFmt</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrfmt</name>
  		<replaceName>ArrFmt</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrfmt_size</name>
  		<replaceName>ArrFmt</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarFmtInfo& arrfmt(int index) const;
  inline ::pb::TAllyWarFmtInfo* mutable_arrfmt(int index);
  inline ::pb::TAllyWarFmtInfo* add_arrfmt();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtInfo >&
      arrfmt() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtInfo >*
      mutable_arrfmt();

  // @@protoc_insertion_point(class_scope:pb.TAllyWarSetFmtReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtInfo > arrfmt_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarSetFmtReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarSetPosReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarSetPosReq : public ::google::protobuf::Message {
 public:
  TAllyWarSetPosReq();
  virtual ~TAllyWarSetPosReq();

  TAllyWarSetPosReq(const TAllyWarSetPosReq& from);

  inline TAllyWarSetPosReq& operator=(const TAllyWarSetPosReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarSetPosReq& default_instance();

  void Swap(TAllyWarSetPosReq* other);

  // implements Message ----------------------------------------------

  TAllyWarSetPosReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarSetPosReq& from);
  void MergeFrom(const TAllyWarSetPosReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AreaId = 1;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarSetPosReq</name>
  	<Function>
  		<name>areaid</name>
  		<replaceName>AreaId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_areaid</name>
  		<replaceName>AreaId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_areaid</name>
  		<replaceName>AreaId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 areaid() const;
  inline void set_areaid(::google::protobuf::uint32 value);

  // optional uint32 PosId = 2;
  inline bool has_posid() const;
  inline void clear_posid();
  static const int kPosIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarSetPosReq</name>
  	<Function>
  		<name>posid</name>
  		<replaceName>PosId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_posid</name>
  		<replaceName>PosId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_posid</name>
  		<replaceName>PosId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 posid() const;
  inline void set_posid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarSetPosReq)
 private:
  inline void set_has_areaid();
  inline void clear_has_areaid();
  inline void set_has_posid();
  inline void clear_has_posid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 areaid_;
  ::google::protobuf::uint32 posid_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarSetPosReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarGetDeployRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarGetDeployRsp : public ::google::protobuf::Message {
 public:
  TAllyWarGetDeployRsp();
  virtual ~TAllyWarGetDeployRsp();

  TAllyWarGetDeployRsp(const TAllyWarGetDeployRsp& from);

  inline TAllyWarGetDeployRsp& operator=(const TAllyWarGetDeployRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarGetDeployRsp& default_instance();

  void Swap(TAllyWarGetDeployRsp* other);

  // implements Message ----------------------------------------------

  TAllyWarGetDeployRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarGetDeployRsp& from);
  void MergeFrom(const TAllyWarGetDeployRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TAllyWarDeployInfo ArrDeploy = 1;
  inline int arrdeploy_size() const;
  inline void clear_arrdeploy();
  static const int kArrDeployFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetDeployRsp</name>
  	<Function>
  		<name>arrdeploy</name>
  		<replaceName>ArrDeploy</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrdeploy</name>
  		<replaceName>ArrDeploy</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrdeploy</name>
  		<replaceName>ArrDeploy</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrdeploy</name>
  		<replaceName>ArrDeploy</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrdeploy_size</name>
  		<replaceName>ArrDeploy</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarDeployInfo& arrdeploy(int index) const;
  inline ::pb::TAllyWarDeployInfo* mutable_arrdeploy(int index);
  inline ::pb::TAllyWarDeployInfo* add_arrdeploy();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo >&
      arrdeploy() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo >*
      mutable_arrdeploy();

  // repeated uint64 ArrCandi = 2;
  inline int arrcandi_size() const;
  inline void clear_arrcandi();
  static const int kArrCandiFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetDeployRsp</name>
  	<Function>
  		<name>arrcandi</name>
  		<replaceName>ArrCandi</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrcandi</name>
  		<replaceName>ArrCandi</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrcandi</name>
  		<replaceName>ArrCandi</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrcandi</name>
  		<replaceName>ArrCandi</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrcandi_size</name>
  		<replaceName>ArrCandi</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 arrcandi(int index) const;
  inline void set_arrcandi(int index, ::google::protobuf::uint64 value);
  inline void add_arrcandi(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      arrcandi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_arrcandi();

  // repeated .pb.TAllyWarUserBaseInfo ArrUserInfo = 3;
  inline int arruserinfo_size() const;
  inline void clear_arruserinfo();
  static const int kArrUserInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetDeployRsp</name>
  	<Function>
  		<name>arruserinfo</name>
  		<replaceName>ArrUserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arruserinfo</name>
  		<replaceName>ArrUserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arruserinfo</name>
  		<replaceName>ArrUserInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arruserinfo</name>
  		<replaceName>ArrUserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arruserinfo_size</name>
  		<replaceName>ArrUserInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarUserBaseInfo& arruserinfo(int index) const;
  inline ::pb::TAllyWarUserBaseInfo* mutable_arruserinfo(int index);
  inline ::pb::TAllyWarUserBaseInfo* add_arruserinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >&
      arruserinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >*
      mutable_arruserinfo();

  // optional bool AutoComplete = 4;
  inline bool has_autocomplete() const;
  inline void clear_autocomplete();
  static const int kAutoCompleteFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetDeployRsp</name>
  	<Function>
  		<name>autocomplete</name>
  		<replaceName>AutoComplete</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_autocomplete</name>
  		<replaceName>AutoComplete</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_autocomplete</name>
  		<replaceName>AutoComplete</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool autocomplete() const;
  inline void set_autocomplete(bool value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarGetDeployRsp)
 private:
  inline void set_has_autocomplete();
  inline void clear_has_autocomplete();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo > arrdeploy_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > arrcandi_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo > arruserinfo_;
  bool autocomplete_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarGetDeployRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarSetDeployReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarSetDeployReq : public ::google::protobuf::Message {
 public:
  TAllyWarSetDeployReq();
  virtual ~TAllyWarSetDeployReq();

  TAllyWarSetDeployReq(const TAllyWarSetDeployReq& from);

  inline TAllyWarSetDeployReq& operator=(const TAllyWarSetDeployReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarSetDeployReq& default_instance();

  void Swap(TAllyWarSetDeployReq* other);

  // implements Message ----------------------------------------------

  TAllyWarSetDeployReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarSetDeployReq& from);
  void MergeFrom(const TAllyWarSetDeployReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TAllyWarDeployInfo ArrPreDeploy = 1;
  inline int arrpredeploy_size() const;
  inline void clear_arrpredeploy();
  static const int kArrPreDeployFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarSetDeployReq</name>
  	<Function>
  		<name>arrpredeploy</name>
  		<replaceName>ArrPreDeploy</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrpredeploy</name>
  		<replaceName>ArrPreDeploy</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrpredeploy</name>
  		<replaceName>ArrPreDeploy</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrpredeploy</name>
  		<replaceName>ArrPreDeploy</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrpredeploy_size</name>
  		<replaceName>ArrPreDeploy</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarDeployInfo& arrpredeploy(int index) const;
  inline ::pb::TAllyWarDeployInfo* mutable_arrpredeploy(int index);
  inline ::pb::TAllyWarDeployInfo* add_arrpredeploy();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo >&
      arrpredeploy() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo >*
      mutable_arrpredeploy();

  // repeated .pb.TAllyWarDeployInfo ArrCurDeploy = 2;
  inline int arrcurdeploy_size() const;
  inline void clear_arrcurdeploy();
  static const int kArrCurDeployFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarSetDeployReq</name>
  	<Function>
  		<name>arrcurdeploy</name>
  		<replaceName>ArrCurDeploy</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrcurdeploy</name>
  		<replaceName>ArrCurDeploy</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrcurdeploy</name>
  		<replaceName>ArrCurDeploy</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrcurdeploy</name>
  		<replaceName>ArrCurDeploy</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrcurdeploy_size</name>
  		<replaceName>ArrCurDeploy</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarDeployInfo& arrcurdeploy(int index) const;
  inline ::pb::TAllyWarDeployInfo* mutable_arrcurdeploy(int index);
  inline ::pb::TAllyWarDeployInfo* add_arrcurdeploy();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo >&
      arrcurdeploy() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo >*
      mutable_arrcurdeploy();

  // @@protoc_insertion_point(class_scope:pb.TAllyWarSetDeployReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo > arrpredeploy_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo > arrcurdeploy_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarSetDeployReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarSetOptionReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarSetOptionReq : public ::google::protobuf::Message {
 public:
  TAllyWarSetOptionReq();
  virtual ~TAllyWarSetOptionReq();

  TAllyWarSetOptionReq(const TAllyWarSetOptionReq& from);

  inline TAllyWarSetOptionReq& operator=(const TAllyWarSetOptionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarSetOptionReq& default_instance();

  void Swap(TAllyWarSetOptionReq* other);

  // implements Message ----------------------------------------------

  TAllyWarSetOptionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarSetOptionReq& from);
  void MergeFrom(const TAllyWarSetOptionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool AutoComplete = 1;
  inline bool has_autocomplete() const;
  inline void clear_autocomplete();
  static const int kAutoCompleteFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarSetOptionReq</name>
  	<Function>
  		<name>autocomplete</name>
  		<replaceName>AutoComplete</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_autocomplete</name>
  		<replaceName>AutoComplete</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_autocomplete</name>
  		<replaceName>AutoComplete</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool autocomplete() const;
  inline void set_autocomplete(bool value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarSetOptionReq)
 private:
  inline void set_has_autocomplete();
  inline void clear_has_autocomplete();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool autocomplete_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarSetOptionReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarGetRecordReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarGetRecordReq : public ::google::protobuf::Message {
 public:
  TAllyWarGetRecordReq();
  virtual ~TAllyWarGetRecordReq();

  TAllyWarGetRecordReq(const TAllyWarGetRecordReq& from);

  inline TAllyWarGetRecordReq& operator=(const TAllyWarGetRecordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarGetRecordReq& default_instance();

  void Swap(TAllyWarGetRecordReq* other);

  // implements Message ----------------------------------------------

  TAllyWarGetRecordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarGetRecordReq& from);
  void MergeFrom(const TAllyWarGetRecordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 MatchId = 1;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetRecordReq</name>
  	<Function>
  		<name>matchid</name>
  		<replaceName>MatchId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_matchid</name>
  		<replaceName>MatchId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_matchid</name>
  		<replaceName>MatchId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 matchid() const;
  inline void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TAllyWarGetRecordReq)
 private:
  inline void set_has_matchid();
  inline void clear_has_matchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 matchid_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarGetRecordReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAllyWarGetRecordRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAllyWarGetRecordRsp : public ::google::protobuf::Message {
 public:
  TAllyWarGetRecordRsp();
  virtual ~TAllyWarGetRecordRsp();

  TAllyWarGetRecordRsp(const TAllyWarGetRecordRsp& from);

  inline TAllyWarGetRecordRsp& operator=(const TAllyWarGetRecordRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAllyWarGetRecordRsp& default_instance();

  void Swap(TAllyWarGetRecordRsp* other);

  // implements Message ----------------------------------------------

  TAllyWarGetRecordRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAllyWarGetRecordRsp& from);
  void MergeFrom(const TAllyWarGetRecordRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TAllyWarAllyBaseInfo AtkAlly = 1;
  inline bool has_atkally() const;
  inline void clear_atkally();
  static const int kAtkAllyFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetRecordRsp</name>
  	<Function>
  		<name>atkally</name>
  		<replaceName>AtkAlly</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_atkally</name>
  		<replaceName>AtkAlly</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_atkally</name>
  		<replaceName>AtkAlly</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_atkally</name>
  		<replaceName>AtkAlly</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarAllyBaseInfo& atkally() const;
  inline ::pb::TAllyWarAllyBaseInfo* mutable_atkally();
  inline ::pb::TAllyWarAllyBaseInfo* release_atkally();
  inline void set_allocated_atkally(::pb::TAllyWarAllyBaseInfo* atkally);

  // optional .pb.TAllyWarAllyBaseInfo DefAlly = 2;
  inline bool has_defally() const;
  inline void clear_defally();
  static const int kDefAllyFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetRecordRsp</name>
  	<Function>
  		<name>defally</name>
  		<replaceName>DefAlly</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_defally</name>
  		<replaceName>DefAlly</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_defally</name>
  		<replaceName>DefAlly</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_defally</name>
  		<replaceName>DefAlly</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarAllyBaseInfo& defally() const;
  inline ::pb::TAllyWarAllyBaseInfo* mutable_defally();
  inline ::pb::TAllyWarAllyBaseInfo* release_defally();
  inline void set_allocated_defally(::pb::TAllyWarAllyBaseInfo* defally);

  // optional uint32 AtkScore = 3;
  inline bool has_atkscore() const;
  inline void clear_atkscore();
  static const int kAtkScoreFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetRecordRsp</name>
  	<Function>
  		<name>atkscore</name>
  		<replaceName>AtkScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_atkscore</name>
  		<replaceName>AtkScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_atkscore</name>
  		<replaceName>AtkScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 atkscore() const;
  inline void set_atkscore(::google::protobuf::uint32 value);

  // optional uint32 DefScore = 4;
  inline bool has_defscore() const;
  inline void clear_defscore();
  static const int kDefScoreFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetRecordRsp</name>
  	<Function>
  		<name>defscore</name>
  		<replaceName>DefScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_defscore</name>
  		<replaceName>DefScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_defscore</name>
  		<replaceName>DefScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 defscore() const;
  inline void set_defscore(::google::protobuf::uint32 value);

  // optional uint64 WinAllyId = 5;
  inline bool has_winallyid() const;
  inline void clear_winallyid();
  static const int kWinAllyIdFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetRecordRsp</name>
  	<Function>
  		<name>winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_winallyid</name>
  		<replaceName>WinAllyId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 winallyid() const;
  inline void set_winallyid(::google::protobuf::uint64 value);

  // repeated .pb.TUserSimpleInfo ArrAtkUser = 6;
  inline int arratkuser_size() const;
  inline void clear_arratkuser();
  static const int kArrAtkUserFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetRecordRsp</name>
  	<Function>
  		<name>arratkuser</name>
  		<replaceName>ArrAtkUser</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arratkuser</name>
  		<replaceName>ArrAtkUser</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arratkuser</name>
  		<replaceName>ArrAtkUser</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arratkuser</name>
  		<replaceName>ArrAtkUser</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arratkuser_size</name>
  		<replaceName>ArrAtkUser</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& arratkuser(int index) const;
  inline ::pb::TUserSimpleInfo* mutable_arratkuser(int index);
  inline ::pb::TUserSimpleInfo* add_arratkuser();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >&
      arratkuser() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >*
      mutable_arratkuser();

  // repeated .pb.TUserSimpleInfo ArrDefUser = 7;
  inline int arrdefuser_size() const;
  inline void clear_arrdefuser();
  static const int kArrDefUserFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetRecordRsp</name>
  	<Function>
  		<name>arrdefuser</name>
  		<replaceName>ArrDefUser</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrdefuser</name>
  		<replaceName>ArrDefUser</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrdefuser</name>
  		<replaceName>ArrDefUser</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrdefuser</name>
  		<replaceName>ArrDefUser</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrdefuser_size</name>
  		<replaceName>ArrDefUser</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& arrdefuser(int index) const;
  inline ::pb::TUserSimpleInfo* mutable_arrdefuser(int index);
  inline ::pb::TUserSimpleInfo* add_arrdefuser();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >&
      arrdefuser() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >*
      mutable_arrdefuser();

  // repeated .pb.TAllyWarAreaRecordInfo ArrAreaRecord = 8;
  inline int arrarearecord_size() const;
  inline void clear_arrarearecord();
  static const int kArrAreaRecordFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TAllyWarGetRecordRsp</name>
  	<Function>
  		<name>arrarearecord</name>
  		<replaceName>ArrAreaRecord</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrarearecord</name>
  		<replaceName>ArrAreaRecord</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrarearecord</name>
  		<replaceName>ArrAreaRecord</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrarearecord</name>
  		<replaceName>ArrAreaRecord</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrarearecord_size</name>
  		<replaceName>ArrAreaRecord</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllyWarAreaRecordInfo& arrarearecord(int index) const;
  inline ::pb::TAllyWarAreaRecordInfo* mutable_arrarearecord(int index);
  inline ::pb::TAllyWarAreaRecordInfo* add_arrarearecord();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAreaRecordInfo >&
      arrarearecord() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAreaRecordInfo >*
      mutable_arrarearecord();

  // @@protoc_insertion_point(class_scope:pb.TAllyWarGetRecordRsp)
 private:
  inline void set_has_atkally();
  inline void clear_has_atkally();
  inline void set_has_defally();
  inline void clear_has_defally();
  inline void set_has_atkscore();
  inline void clear_has_atkscore();
  inline void set_has_defscore();
  inline void clear_has_defscore();
  inline void set_has_winallyid();
  inline void clear_has_winallyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TAllyWarAllyBaseInfo* atkally_;
  ::pb::TAllyWarAllyBaseInfo* defally_;
  ::google::protobuf::uint32 atkscore_;
  ::google::protobuf::uint32 defscore_;
  ::google::protobuf::uint64 winallyid_;
  ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo > arratkuser_;
  ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo > arrdefuser_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAreaRecordInfo > arrarearecord_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TAllyWarGetRecordRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInnerAllyWarGetServerTeamInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AllyWar.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInnerAllyWarGetServerTeamInfoRsp : public ::google::protobuf::Message {
 public:
  TInnerAllyWarGetServerTeamInfoRsp();
  virtual ~TInnerAllyWarGetServerTeamInfoRsp();

  TInnerAllyWarGetServerTeamInfoRsp(const TInnerAllyWarGetServerTeamInfoRsp& from);

  inline TInnerAllyWarGetServerTeamInfoRsp& operator=(const TInnerAllyWarGetServerTeamInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInnerAllyWarGetServerTeamInfoRsp& default_instance();

  void Swap(TInnerAllyWarGetServerTeamInfoRsp* other);

  // implements Message ----------------------------------------------

  TInnerAllyWarGetServerTeamInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInnerAllyWarGetServerTeamInfoRsp& from);
  void MergeFrom(const TInnerAllyWarGetServerTeamInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ServerTeamId = 1;
  inline bool has_serverteamid() const;
  inline void clear_serverteamid();
  static const int kServerTeamIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInnerAllyWarGetServerTeamInfoRsp</name>
  	<Function>
  		<name>serverteamid</name>
  		<replaceName>ServerTeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_serverteamid</name>
  		<replaceName>ServerTeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_serverteamid</name>
  		<replaceName>ServerTeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 serverteamid() const;
  inline void set_serverteamid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TInnerAllyWarGetServerTeamInfoRsp)
 private:
  inline void set_has_serverteamid();
  inline void clear_has_serverteamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 serverteamid_;
  friend void  protobuf_AddDesc_net_2fAllyWar_2eproto();
  friend void protobuf_AssignDesc_net_2fAllyWar_2eproto();
  friend void protobuf_ShutdownFile_net_2fAllyWar_2eproto();

  void InitAsDefaultInstance();
  static TInnerAllyWarGetServerTeamInfoRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TAllyWarExpectProcess

// optional uint32 Round = 1;
inline bool TAllyWarExpectProcess::has_round() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarExpectProcess::set_has_round() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarExpectProcess::clear_has_round() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarExpectProcess::clear_round() {
  round_ = 0u;
  clear_has_round();
}
inline ::google::protobuf::uint32 TAllyWarExpectProcess::round() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarExpectProcess.Round)
  return round_;
}
inline void TAllyWarExpectProcess::set_round(::google::protobuf::uint32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarExpectProcess.Round)
}

// optional .pb.EAllyWarStage Stage = 2;
inline bool TAllyWarExpectProcess::has_stage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarExpectProcess::set_has_stage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarExpectProcess::clear_has_stage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarExpectProcess::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::pb::EAllyWarStage TAllyWarExpectProcess::stage() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarExpectProcess.Stage)
  return static_cast< ::pb::EAllyWarStage >(stage_);
}
inline void TAllyWarExpectProcess::set_stage(::pb::EAllyWarStage value) {
  assert(::pb::EAllyWarStage_IsValid(value));
  set_has_stage();
  stage_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarExpectProcess.Stage)
}

// optional uint64 BegTime = 3;
inline bool TAllyWarExpectProcess::has_begtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAllyWarExpectProcess::set_has_begtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAllyWarExpectProcess::clear_has_begtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAllyWarExpectProcess::clear_begtime() {
  begtime_ = GOOGLE_ULONGLONG(0);
  clear_has_begtime();
}
inline ::google::protobuf::uint64 TAllyWarExpectProcess::begtime() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarExpectProcess.BegTime)
  return begtime_;
}
inline void TAllyWarExpectProcess::set_begtime(::google::protobuf::uint64 value) {
  set_has_begtime();
  begtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarExpectProcess.BegTime)
}

// optional uint64 EndTime = 4;
inline bool TAllyWarExpectProcess::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAllyWarExpectProcess::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAllyWarExpectProcess::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAllyWarExpectProcess::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 TAllyWarExpectProcess::endtime() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarExpectProcess.EndTime)
  return endtime_;
}
inline void TAllyWarExpectProcess::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarExpectProcess.EndTime)
}

// -------------------------------------------------------------------

// TAllyWarActualProcess

// optional .pb.TAllyWarExpectProcess ExpectProcess = 1;
inline bool TAllyWarActualProcess::has_expectprocess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarActualProcess::set_has_expectprocess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarActualProcess::clear_has_expectprocess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarActualProcess::clear_expectprocess() {
  if (expectprocess_ != NULL) expectprocess_->::pb::TAllyWarExpectProcess::Clear();
  clear_has_expectprocess();
}
inline const ::pb::TAllyWarExpectProcess& TAllyWarActualProcess::expectprocess() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarActualProcess.ExpectProcess)
  return expectprocess_ != NULL ? *expectprocess_ : *default_instance_->expectprocess_;
}
inline ::pb::TAllyWarExpectProcess* TAllyWarActualProcess::mutable_expectprocess() {
  set_has_expectprocess();
  if (expectprocess_ == NULL) expectprocess_ = new ::pb::TAllyWarExpectProcess;
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarActualProcess.ExpectProcess)
  return expectprocess_;
}
inline ::pb::TAllyWarExpectProcess* TAllyWarActualProcess::release_expectprocess() {
  clear_has_expectprocess();
  ::pb::TAllyWarExpectProcess* temp = expectprocess_;
  expectprocess_ = NULL;
  return temp;
}
inline void TAllyWarActualProcess::set_allocated_expectprocess(::pb::TAllyWarExpectProcess* expectprocess) {
  delete expectprocess_;
  expectprocess_ = expectprocess;
  if (expectprocess) {
    set_has_expectprocess();
  } else {
    clear_has_expectprocess();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarActualProcess.ExpectProcess)
}

// optional uint64 DoneTime = 2;
inline bool TAllyWarActualProcess::has_donetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarActualProcess::set_has_donetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarActualProcess::clear_has_donetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarActualProcess::clear_donetime() {
  donetime_ = GOOGLE_ULONGLONG(0);
  clear_has_donetime();
}
inline ::google::protobuf::uint64 TAllyWarActualProcess::donetime() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarActualProcess.DoneTime)
  return donetime_;
}
inline void TAllyWarActualProcess::set_donetime(::google::protobuf::uint64 value) {
  set_has_donetime();
  donetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarActualProcess.DoneTime)
}

// -------------------------------------------------------------------

// TAllyWarAllyBaseInfo

// optional uint64 AllyId = 1;
inline bool TAllyWarAllyBaseInfo::has_allyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarAllyBaseInfo::set_has_allyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarAllyBaseInfo::clear_has_allyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarAllyBaseInfo::clear_allyid() {
  allyid_ = GOOGLE_ULONGLONG(0);
  clear_has_allyid();
}
inline ::google::protobuf::uint64 TAllyWarAllyBaseInfo::allyid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAllyBaseInfo.AllyId)
  return allyid_;
}
inline void TAllyWarAllyBaseInfo::set_allyid(::google::protobuf::uint64 value) {
  set_has_allyid();
  allyid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarAllyBaseInfo.AllyId)
}

// optional uint32 Level = 2;
inline bool TAllyWarAllyBaseInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarAllyBaseInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarAllyBaseInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarAllyBaseInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TAllyWarAllyBaseInfo::level() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAllyBaseInfo.Level)
  return level_;
}
inline void TAllyWarAllyBaseInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarAllyBaseInfo.Level)
}

// optional string Name = 3;
inline bool TAllyWarAllyBaseInfo::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAllyWarAllyBaseInfo::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAllyWarAllyBaseInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAllyWarAllyBaseInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TAllyWarAllyBaseInfo::name() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAllyBaseInfo.Name)
  return *name_;
}
inline void TAllyWarAllyBaseInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TAllyWarAllyBaseInfo.Name)
}
inline void TAllyWarAllyBaseInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TAllyWarAllyBaseInfo.Name)
}
inline void TAllyWarAllyBaseInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TAllyWarAllyBaseInfo.Name)
}
inline ::std::string* TAllyWarAllyBaseInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarAllyBaseInfo.Name)
  return name_;
}
inline ::std::string* TAllyWarAllyBaseInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TAllyWarAllyBaseInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarAllyBaseInfo.Name)
}

// optional uint64 FightForce = 4;
inline bool TAllyWarAllyBaseInfo::has_fightforce() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAllyWarAllyBaseInfo::set_has_fightforce() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAllyWarAllyBaseInfo::clear_has_fightforce() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAllyWarAllyBaseInfo::clear_fightforce() {
  fightforce_ = GOOGLE_ULONGLONG(0);
  clear_has_fightforce();
}
inline ::google::protobuf::uint64 TAllyWarAllyBaseInfo::fightforce() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAllyBaseInfo.FightForce)
  return fightforce_;
}
inline void TAllyWarAllyBaseInfo::set_fightforce(::google::protobuf::uint64 value) {
  set_has_fightforce();
  fightforce_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarAllyBaseInfo.FightForce)
}

// optional uint32 BannerBase = 5;
inline bool TAllyWarAllyBaseInfo::has_bannerbase() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TAllyWarAllyBaseInfo::set_has_bannerbase() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TAllyWarAllyBaseInfo::clear_has_bannerbase() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TAllyWarAllyBaseInfo::clear_bannerbase() {
  bannerbase_ = 0u;
  clear_has_bannerbase();
}
inline ::google::protobuf::uint32 TAllyWarAllyBaseInfo::bannerbase() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAllyBaseInfo.BannerBase)
  return bannerbase_;
}
inline void TAllyWarAllyBaseInfo::set_bannerbase(::google::protobuf::uint32 value) {
  set_has_bannerbase();
  bannerbase_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarAllyBaseInfo.BannerBase)
}

// optional string BannerName = 6;
inline bool TAllyWarAllyBaseInfo::has_bannername() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TAllyWarAllyBaseInfo::set_has_bannername() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TAllyWarAllyBaseInfo::clear_has_bannername() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TAllyWarAllyBaseInfo::clear_bannername() {
  if (bannername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bannername_->clear();
  }
  clear_has_bannername();
}
inline const ::std::string& TAllyWarAllyBaseInfo::bannername() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAllyBaseInfo.BannerName)
  return *bannername_;
}
inline void TAllyWarAllyBaseInfo::set_bannername(const ::std::string& value) {
  set_has_bannername();
  if (bannername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bannername_ = new ::std::string;
  }
  bannername_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TAllyWarAllyBaseInfo.BannerName)
}
inline void TAllyWarAllyBaseInfo::set_bannername(const char* value) {
  set_has_bannername();
  if (bannername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bannername_ = new ::std::string;
  }
  bannername_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TAllyWarAllyBaseInfo.BannerName)
}
inline void TAllyWarAllyBaseInfo::set_bannername(const char* value, size_t size) {
  set_has_bannername();
  if (bannername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bannername_ = new ::std::string;
  }
  bannername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TAllyWarAllyBaseInfo.BannerName)
}
inline ::std::string* TAllyWarAllyBaseInfo::mutable_bannername() {
  set_has_bannername();
  if (bannername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bannername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarAllyBaseInfo.BannerName)
  return bannername_;
}
inline ::std::string* TAllyWarAllyBaseInfo::release_bannername() {
  clear_has_bannername();
  if (bannername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = bannername_;
    bannername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TAllyWarAllyBaseInfo::set_allocated_bannername(::std::string* bannername) {
  if (bannername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bannername_;
  }
  if (bannername) {
    set_has_bannername();
    bannername_ = bannername;
  } else {
    clear_has_bannername();
    bannername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarAllyBaseInfo.BannerName)
}

// optional uint32 BannerFigure = 7;
inline bool TAllyWarAllyBaseInfo::has_bannerfigure() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TAllyWarAllyBaseInfo::set_has_bannerfigure() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TAllyWarAllyBaseInfo::clear_has_bannerfigure() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TAllyWarAllyBaseInfo::clear_bannerfigure() {
  bannerfigure_ = 0u;
  clear_has_bannerfigure();
}
inline ::google::protobuf::uint32 TAllyWarAllyBaseInfo::bannerfigure() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAllyBaseInfo.BannerFigure)
  return bannerfigure_;
}
inline void TAllyWarAllyBaseInfo::set_bannerfigure(::google::protobuf::uint32 value) {
  set_has_bannerfigure();
  bannerfigure_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarAllyBaseInfo.BannerFigure)
}

// -------------------------------------------------------------------

// TAllyWarUserBaseInfo

// optional uint64 Uid = 1;
inline bool TAllyWarUserBaseInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarUserBaseInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarUserBaseInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarUserBaseInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TAllyWarUserBaseInfo::uid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarUserBaseInfo.Uid)
  return uid_;
}
inline void TAllyWarUserBaseInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarUserBaseInfo.Uid)
}

// optional string ServerId = 2;
inline bool TAllyWarUserBaseInfo::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarUserBaseInfo::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarUserBaseInfo::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarUserBaseInfo::clear_serverid() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_->clear();
  }
  clear_has_serverid();
}
inline const ::std::string& TAllyWarUserBaseInfo::serverid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarUserBaseInfo.ServerId)
  return *serverid_;
}
inline void TAllyWarUserBaseInfo::set_serverid(const ::std::string& value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TAllyWarUserBaseInfo.ServerId)
}
inline void TAllyWarUserBaseInfo::set_serverid(const char* value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TAllyWarUserBaseInfo.ServerId)
}
inline void TAllyWarUserBaseInfo::set_serverid(const char* value, size_t size) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TAllyWarUserBaseInfo.ServerId)
}
inline ::std::string* TAllyWarUserBaseInfo::mutable_serverid() {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarUserBaseInfo.ServerId)
  return serverid_;
}
inline ::std::string* TAllyWarUserBaseInfo::release_serverid() {
  clear_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = serverid_;
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TAllyWarUserBaseInfo::set_allocated_serverid(::std::string* serverid) {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (serverid) {
    set_has_serverid();
    serverid_ = serverid;
  } else {
    clear_has_serverid();
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarUserBaseInfo.ServerId)
}

// optional .pb.EAlliancePost Post = 3;
inline bool TAllyWarUserBaseInfo::has_post() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAllyWarUserBaseInfo::set_has_post() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAllyWarUserBaseInfo::clear_has_post() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAllyWarUserBaseInfo::clear_post() {
  post_ = 0;
  clear_has_post();
}
inline ::pb::EAlliancePost TAllyWarUserBaseInfo::post() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarUserBaseInfo.Post)
  return static_cast< ::pb::EAlliancePost >(post_);
}
inline void TAllyWarUserBaseInfo::set_post(::pb::EAlliancePost value) {
  assert(::pb::EAlliancePost_IsValid(value));
  set_has_post();
  post_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarUserBaseInfo.Post)
}

// optional .pb.TUserSimpleInfo UserInfo = 4;
inline bool TAllyWarUserBaseInfo::has_userinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAllyWarUserBaseInfo::set_has_userinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAllyWarUserBaseInfo::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAllyWarUserBaseInfo::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TAllyWarUserBaseInfo::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarUserBaseInfo.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TAllyWarUserBaseInfo::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarUserBaseInfo.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TAllyWarUserBaseInfo::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TAllyWarUserBaseInfo::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarUserBaseInfo.UserInfo)
}

// -------------------------------------------------------------------

// TAllyWarGuildContriInfo

// optional uint64 Gid = 1;
inline bool TAllyWarGuildContriInfo::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarGuildContriInfo::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarGuildContriInfo::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarGuildContriInfo::clear_gid() {
  gid_ = GOOGLE_ULONGLONG(0);
  clear_has_gid();
}
inline ::google::protobuf::uint64 TAllyWarGuildContriInfo::gid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGuildContriInfo.Gid)
  return gid_;
}
inline void TAllyWarGuildContriInfo::set_gid(::google::protobuf::uint64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGuildContriInfo.Gid)
}

// optional string ServerId = 2;
inline bool TAllyWarGuildContriInfo::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarGuildContriInfo::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarGuildContriInfo::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarGuildContriInfo::clear_serverid() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_->clear();
  }
  clear_has_serverid();
}
inline const ::std::string& TAllyWarGuildContriInfo::serverid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGuildContriInfo.ServerId)
  return *serverid_;
}
inline void TAllyWarGuildContriInfo::set_serverid(const ::std::string& value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TAllyWarGuildContriInfo.ServerId)
}
inline void TAllyWarGuildContriInfo::set_serverid(const char* value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TAllyWarGuildContriInfo.ServerId)
}
inline void TAllyWarGuildContriInfo::set_serverid(const char* value, size_t size) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TAllyWarGuildContriInfo.ServerId)
}
inline ::std::string* TAllyWarGuildContriInfo::mutable_serverid() {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGuildContriInfo.ServerId)
  return serverid_;
}
inline ::std::string* TAllyWarGuildContriInfo::release_serverid() {
  clear_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = serverid_;
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TAllyWarGuildContriInfo::set_allocated_serverid(::std::string* serverid) {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (serverid) {
    set_has_serverid();
    serverid_ = serverid;
  } else {
    clear_has_serverid();
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarGuildContriInfo.ServerId)
}

// optional uint32 ContriNum = 3;
inline bool TAllyWarGuildContriInfo::has_contrinum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAllyWarGuildContriInfo::set_has_contrinum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAllyWarGuildContriInfo::clear_has_contrinum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAllyWarGuildContriInfo::clear_contrinum() {
  contrinum_ = 0u;
  clear_has_contrinum();
}
inline ::google::protobuf::uint32 TAllyWarGuildContriInfo::contrinum() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGuildContriInfo.ContriNum)
  return contrinum_;
}
inline void TAllyWarGuildContriInfo::set_contrinum(::google::protobuf::uint32 value) {
  set_has_contrinum();
  contrinum_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGuildContriInfo.ContriNum)
}

// optional .pb.TAllianceGuildMemberInfo GuildInfo = 4;
inline bool TAllyWarGuildContriInfo::has_guildinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAllyWarGuildContriInfo::set_has_guildinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAllyWarGuildContriInfo::clear_has_guildinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAllyWarGuildContriInfo::clear_guildinfo() {
  if (guildinfo_ != NULL) guildinfo_->::pb::TAllianceGuildMemberInfo::Clear();
  clear_has_guildinfo();
}
inline const ::pb::TAllianceGuildMemberInfo& TAllyWarGuildContriInfo::guildinfo() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGuildContriInfo.GuildInfo)
  return guildinfo_ != NULL ? *guildinfo_ : *default_instance_->guildinfo_;
}
inline ::pb::TAllianceGuildMemberInfo* TAllyWarGuildContriInfo::mutable_guildinfo() {
  set_has_guildinfo();
  if (guildinfo_ == NULL) guildinfo_ = new ::pb::TAllianceGuildMemberInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGuildContriInfo.GuildInfo)
  return guildinfo_;
}
inline ::pb::TAllianceGuildMemberInfo* TAllyWarGuildContriInfo::release_guildinfo() {
  clear_has_guildinfo();
  ::pb::TAllianceGuildMemberInfo* temp = guildinfo_;
  guildinfo_ = NULL;
  return temp;
}
inline void TAllyWarGuildContriInfo::set_allocated_guildinfo(::pb::TAllianceGuildMemberInfo* guildinfo) {
  delete guildinfo_;
  guildinfo_ = guildinfo;
  if (guildinfo) {
    set_has_guildinfo();
  } else {
    clear_has_guildinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarGuildContriInfo.GuildInfo)
}

// -------------------------------------------------------------------

// TAllyWarAllyMatchInfo

// optional uint32 MatchId = 1;
inline bool TAllyWarAllyMatchInfo::has_matchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarAllyMatchInfo::set_has_matchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarAllyMatchInfo::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarAllyMatchInfo::clear_matchid() {
  matchid_ = 0u;
  clear_has_matchid();
}
inline ::google::protobuf::uint32 TAllyWarAllyMatchInfo::matchid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAllyMatchInfo.MatchId)
  return matchid_;
}
inline void TAllyWarAllyMatchInfo::set_matchid(::google::protobuf::uint32 value) {
  set_has_matchid();
  matchid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarAllyMatchInfo.MatchId)
}

// optional uint64 AtkAllyId = 2;
inline bool TAllyWarAllyMatchInfo::has_atkallyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarAllyMatchInfo::set_has_atkallyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarAllyMatchInfo::clear_has_atkallyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarAllyMatchInfo::clear_atkallyid() {
  atkallyid_ = GOOGLE_ULONGLONG(0);
  clear_has_atkallyid();
}
inline ::google::protobuf::uint64 TAllyWarAllyMatchInfo::atkallyid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAllyMatchInfo.AtkAllyId)
  return atkallyid_;
}
inline void TAllyWarAllyMatchInfo::set_atkallyid(::google::protobuf::uint64 value) {
  set_has_atkallyid();
  atkallyid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarAllyMatchInfo.AtkAllyId)
}

// optional uint64 DefAllyId = 3;
inline bool TAllyWarAllyMatchInfo::has_defallyid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAllyWarAllyMatchInfo::set_has_defallyid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAllyWarAllyMatchInfo::clear_has_defallyid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAllyWarAllyMatchInfo::clear_defallyid() {
  defallyid_ = GOOGLE_ULONGLONG(0);
  clear_has_defallyid();
}
inline ::google::protobuf::uint64 TAllyWarAllyMatchInfo::defallyid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAllyMatchInfo.DefAllyId)
  return defallyid_;
}
inline void TAllyWarAllyMatchInfo::set_defallyid(::google::protobuf::uint64 value) {
  set_has_defallyid();
  defallyid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarAllyMatchInfo.DefAllyId)
}

// optional uint64 DoneTime = 4;
inline bool TAllyWarAllyMatchInfo::has_donetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAllyWarAllyMatchInfo::set_has_donetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAllyWarAllyMatchInfo::clear_has_donetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAllyWarAllyMatchInfo::clear_donetime() {
  donetime_ = GOOGLE_ULONGLONG(0);
  clear_has_donetime();
}
inline ::google::protobuf::uint64 TAllyWarAllyMatchInfo::donetime() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAllyMatchInfo.DoneTime)
  return donetime_;
}
inline void TAllyWarAllyMatchInfo::set_donetime(::google::protobuf::uint64 value) {
  set_has_donetime();
  donetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarAllyMatchInfo.DoneTime)
}

// optional uint64 WinAllyId = 5;
inline bool TAllyWarAllyMatchInfo::has_winallyid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TAllyWarAllyMatchInfo::set_has_winallyid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TAllyWarAllyMatchInfo::clear_has_winallyid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TAllyWarAllyMatchInfo::clear_winallyid() {
  winallyid_ = GOOGLE_ULONGLONG(0);
  clear_has_winallyid();
}
inline ::google::protobuf::uint64 TAllyWarAllyMatchInfo::winallyid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAllyMatchInfo.WinAllyId)
  return winallyid_;
}
inline void TAllyWarAllyMatchInfo::set_winallyid(::google::protobuf::uint64 value) {
  set_has_winallyid();
  winallyid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarAllyMatchInfo.WinAllyId)
}

// -------------------------------------------------------------------

// TAllyWarFieldUnitInfo

// optional uint32 PosId = 1;
inline bool TAllyWarFieldUnitInfo::has_posid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarFieldUnitInfo::set_has_posid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarFieldUnitInfo::clear_has_posid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarFieldUnitInfo::clear_posid() {
  posid_ = 0u;
  clear_has_posid();
}
inline ::google::protobuf::uint32 TAllyWarFieldUnitInfo::posid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarFieldUnitInfo.PosId)
  return posid_;
}
inline void TAllyWarFieldUnitInfo::set_posid(::google::protobuf::uint32 value) {
  set_has_posid();
  posid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarFieldUnitInfo.PosId)
}

// optional uint64 Uid = 2;
inline bool TAllyWarFieldUnitInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarFieldUnitInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarFieldUnitInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarFieldUnitInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TAllyWarFieldUnitInfo::uid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarFieldUnitInfo.Uid)
  return uid_;
}
inline void TAllyWarFieldUnitInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarFieldUnitInfo.Uid)
}

// optional string ServerId = 3;
inline bool TAllyWarFieldUnitInfo::has_serverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAllyWarFieldUnitInfo::set_has_serverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAllyWarFieldUnitInfo::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAllyWarFieldUnitInfo::clear_serverid() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_->clear();
  }
  clear_has_serverid();
}
inline const ::std::string& TAllyWarFieldUnitInfo::serverid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarFieldUnitInfo.ServerId)
  return *serverid_;
}
inline void TAllyWarFieldUnitInfo::set_serverid(const ::std::string& value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TAllyWarFieldUnitInfo.ServerId)
}
inline void TAllyWarFieldUnitInfo::set_serverid(const char* value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TAllyWarFieldUnitInfo.ServerId)
}
inline void TAllyWarFieldUnitInfo::set_serverid(const char* value, size_t size) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TAllyWarFieldUnitInfo.ServerId)
}
inline ::std::string* TAllyWarFieldUnitInfo::mutable_serverid() {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarFieldUnitInfo.ServerId)
  return serverid_;
}
inline ::std::string* TAllyWarFieldUnitInfo::release_serverid() {
  clear_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = serverid_;
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TAllyWarFieldUnitInfo::set_allocated_serverid(::std::string* serverid) {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (serverid) {
    set_has_serverid();
    serverid_ = serverid;
  } else {
    clear_has_serverid();
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarFieldUnitInfo.ServerId)
}

// -------------------------------------------------------------------

// TAllyWarFieldAreaInfo

// optional uint32 AreaId = 1;
inline bool TAllyWarFieldAreaInfo::has_areaid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarFieldAreaInfo::set_has_areaid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarFieldAreaInfo::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarFieldAreaInfo::clear_areaid() {
  areaid_ = 0u;
  clear_has_areaid();
}
inline ::google::protobuf::uint32 TAllyWarFieldAreaInfo::areaid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarFieldAreaInfo.AreaId)
  return areaid_;
}
inline void TAllyWarFieldAreaInfo::set_areaid(::google::protobuf::uint32 value) {
  set_has_areaid();
  areaid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarFieldAreaInfo.AreaId)
}

// repeated .pb.TAllyWarFieldUnitInfo ArrUnit = 2;
inline int TAllyWarFieldAreaInfo::arrunit_size() const {
  return arrunit_.size();
}
inline void TAllyWarFieldAreaInfo::clear_arrunit() {
  arrunit_.Clear();
}
inline const ::pb::TAllyWarFieldUnitInfo& TAllyWarFieldAreaInfo::arrunit(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarFieldAreaInfo.ArrUnit)
  return arrunit_.Get(index);
}
inline ::pb::TAllyWarFieldUnitInfo* TAllyWarFieldAreaInfo::mutable_arrunit(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarFieldAreaInfo.ArrUnit)
  return arrunit_.Mutable(index);
}
inline ::pb::TAllyWarFieldUnitInfo* TAllyWarFieldAreaInfo::add_arrunit() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarFieldAreaInfo.ArrUnit)
  return arrunit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFieldUnitInfo >&
TAllyWarFieldAreaInfo::arrunit() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarFieldAreaInfo.ArrUnit)
  return arrunit_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFieldUnitInfo >*
TAllyWarFieldAreaInfo::mutable_arrunit() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarFieldAreaInfo.ArrUnit)
  return &arrunit_;
}

// optional uint64 DoneTime = 3;
inline bool TAllyWarFieldAreaInfo::has_donetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAllyWarFieldAreaInfo::set_has_donetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAllyWarFieldAreaInfo::clear_has_donetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAllyWarFieldAreaInfo::clear_donetime() {
  donetime_ = GOOGLE_ULONGLONG(0);
  clear_has_donetime();
}
inline ::google::protobuf::uint64 TAllyWarFieldAreaInfo::donetime() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarFieldAreaInfo.DoneTime)
  return donetime_;
}
inline void TAllyWarFieldAreaInfo::set_donetime(::google::protobuf::uint64 value) {
  set_has_donetime();
  donetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarFieldAreaInfo.DoneTime)
}

// optional uint64 WinAllyId = 4;
inline bool TAllyWarFieldAreaInfo::has_winallyid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAllyWarFieldAreaInfo::set_has_winallyid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAllyWarFieldAreaInfo::clear_has_winallyid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAllyWarFieldAreaInfo::clear_winallyid() {
  winallyid_ = GOOGLE_ULONGLONG(0);
  clear_has_winallyid();
}
inline ::google::protobuf::uint64 TAllyWarFieldAreaInfo::winallyid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarFieldAreaInfo.WinAllyId)
  return winallyid_;
}
inline void TAllyWarFieldAreaInfo::set_winallyid(::google::protobuf::uint64 value) {
  set_has_winallyid();
  winallyid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarFieldAreaInfo.WinAllyId)
}

// -------------------------------------------------------------------

// TAllyWarDeployInfo

// optional uint32 AreaId = 1;
inline bool TAllyWarDeployInfo::has_areaid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarDeployInfo::set_has_areaid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarDeployInfo::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarDeployInfo::clear_areaid() {
  areaid_ = 0u;
  clear_has_areaid();
}
inline ::google::protobuf::uint32 TAllyWarDeployInfo::areaid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarDeployInfo.AreaId)
  return areaid_;
}
inline void TAllyWarDeployInfo::set_areaid(::google::protobuf::uint32 value) {
  set_has_areaid();
  areaid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarDeployInfo.AreaId)
}

// optional uint32 PosId = 2;
inline bool TAllyWarDeployInfo::has_posid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarDeployInfo::set_has_posid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarDeployInfo::clear_has_posid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarDeployInfo::clear_posid() {
  posid_ = 0u;
  clear_has_posid();
}
inline ::google::protobuf::uint32 TAllyWarDeployInfo::posid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarDeployInfo.PosId)
  return posid_;
}
inline void TAllyWarDeployInfo::set_posid(::google::protobuf::uint32 value) {
  set_has_posid();
  posid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarDeployInfo.PosId)
}

// optional uint64 Uid = 3;
inline bool TAllyWarDeployInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAllyWarDeployInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAllyWarDeployInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAllyWarDeployInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TAllyWarDeployInfo::uid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarDeployInfo.Uid)
  return uid_;
}
inline void TAllyWarDeployInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarDeployInfo.Uid)
}

// optional string ServerId = 4;
inline bool TAllyWarDeployInfo::has_serverid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAllyWarDeployInfo::set_has_serverid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAllyWarDeployInfo::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAllyWarDeployInfo::clear_serverid() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_->clear();
  }
  clear_has_serverid();
}
inline const ::std::string& TAllyWarDeployInfo::serverid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarDeployInfo.ServerId)
  return *serverid_;
}
inline void TAllyWarDeployInfo::set_serverid(const ::std::string& value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TAllyWarDeployInfo.ServerId)
}
inline void TAllyWarDeployInfo::set_serverid(const char* value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TAllyWarDeployInfo.ServerId)
}
inline void TAllyWarDeployInfo::set_serverid(const char* value, size_t size) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TAllyWarDeployInfo.ServerId)
}
inline ::std::string* TAllyWarDeployInfo::mutable_serverid() {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarDeployInfo.ServerId)
  return serverid_;
}
inline ::std::string* TAllyWarDeployInfo::release_serverid() {
  clear_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = serverid_;
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TAllyWarDeployInfo::set_allocated_serverid(::std::string* serverid) {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (serverid) {
    set_has_serverid();
    serverid_ = serverid;
  } else {
    clear_has_serverid();
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarDeployInfo.ServerId)
}

// -------------------------------------------------------------------

// TAllyWarPosInfo

// optional uint32 Pos = 1;
inline bool TAllyWarPosInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarPosInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarPosInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarPosInfo::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TAllyWarPosInfo::pos() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarPosInfo.Pos)
  return pos_;
}
inline void TAllyWarPosInfo::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarPosInfo.Pos)
}

// optional uint32 Hid = 2;
inline bool TAllyWarPosInfo::has_hid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarPosInfo::set_has_hid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarPosInfo::clear_has_hid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarPosInfo::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TAllyWarPosInfo::hid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarPosInfo.Hid)
  return hid_;
}
inline void TAllyWarPosInfo::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarPosInfo.Hid)
}

// -------------------------------------------------------------------

// TAllyWarFmtInfo

// optional uint32 FmtId = 1;
inline bool TAllyWarFmtInfo::has_fmtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarFmtInfo::set_has_fmtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarFmtInfo::clear_has_fmtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarFmtInfo::clear_fmtid() {
  fmtid_ = 0u;
  clear_has_fmtid();
}
inline ::google::protobuf::uint32 TAllyWarFmtInfo::fmtid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarFmtInfo.FmtId)
  return fmtid_;
}
inline void TAllyWarFmtInfo::set_fmtid(::google::protobuf::uint32 value) {
  set_has_fmtid();
  fmtid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarFmtInfo.FmtId)
}

// repeated .pb.TAllyWarPosInfo ArrPos = 2;
inline int TAllyWarFmtInfo::arrpos_size() const {
  return arrpos_.size();
}
inline void TAllyWarFmtInfo::clear_arrpos() {
  arrpos_.Clear();
}
inline const ::pb::TAllyWarPosInfo& TAllyWarFmtInfo::arrpos(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarFmtInfo.ArrPos)
  return arrpos_.Get(index);
}
inline ::pb::TAllyWarPosInfo* TAllyWarFmtInfo::mutable_arrpos(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarFmtInfo.ArrPos)
  return arrpos_.Mutable(index);
}
inline ::pb::TAllyWarPosInfo* TAllyWarFmtInfo::add_arrpos() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarFmtInfo.ArrPos)
  return arrpos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarPosInfo >&
TAllyWarFmtInfo::arrpos() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarFmtInfo.ArrPos)
  return arrpos_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarPosInfo >*
TAllyWarFmtInfo::mutable_arrpos() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarFmtInfo.ArrPos)
  return &arrpos_;
}

// -------------------------------------------------------------------

// TAllyWarFmtRecordInfo

// optional uint32 FmtId = 1;
inline bool TAllyWarFmtRecordInfo::has_fmtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarFmtRecordInfo::set_has_fmtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarFmtRecordInfo::clear_has_fmtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarFmtRecordInfo::clear_fmtid() {
  fmtid_ = 0u;
  clear_has_fmtid();
}
inline ::google::protobuf::uint32 TAllyWarFmtRecordInfo::fmtid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarFmtRecordInfo.FmtId)
  return fmtid_;
}
inline void TAllyWarFmtRecordInfo::set_fmtid(::google::protobuf::uint32 value) {
  set_has_fmtid();
  fmtid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarFmtRecordInfo.FmtId)
}

// optional bool Result = 2;
inline bool TAllyWarFmtRecordInfo::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarFmtRecordInfo::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarFmtRecordInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarFmtRecordInfo::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool TAllyWarFmtRecordInfo::result() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarFmtRecordInfo.Result)
  return result_;
}
inline void TAllyWarFmtRecordInfo::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarFmtRecordInfo.Result)
}

// optional uint64 Rid = 3;
inline bool TAllyWarFmtRecordInfo::has_rid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAllyWarFmtRecordInfo::set_has_rid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAllyWarFmtRecordInfo::clear_has_rid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAllyWarFmtRecordInfo::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
inline ::google::protobuf::uint64 TAllyWarFmtRecordInfo::rid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarFmtRecordInfo.Rid)
  return rid_;
}
inline void TAllyWarFmtRecordInfo::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarFmtRecordInfo.Rid)
}

// -------------------------------------------------------------------

// TAllyWarUnitRecordInfo

// optional uint64 AtkUid = 1;
inline bool TAllyWarUnitRecordInfo::has_atkuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarUnitRecordInfo::set_has_atkuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarUnitRecordInfo::clear_has_atkuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarUnitRecordInfo::clear_atkuid() {
  atkuid_ = GOOGLE_ULONGLONG(0);
  clear_has_atkuid();
}
inline ::google::protobuf::uint64 TAllyWarUnitRecordInfo::atkuid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarUnitRecordInfo.AtkUid)
  return atkuid_;
}
inline void TAllyWarUnitRecordInfo::set_atkuid(::google::protobuf::uint64 value) {
  set_has_atkuid();
  atkuid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarUnitRecordInfo.AtkUid)
}

// optional string AtkServerId = 2;
inline bool TAllyWarUnitRecordInfo::has_atkserverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarUnitRecordInfo::set_has_atkserverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarUnitRecordInfo::clear_has_atkserverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarUnitRecordInfo::clear_atkserverid() {
  if (atkserverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    atkserverid_->clear();
  }
  clear_has_atkserverid();
}
inline const ::std::string& TAllyWarUnitRecordInfo::atkserverid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarUnitRecordInfo.AtkServerId)
  return *atkserverid_;
}
inline void TAllyWarUnitRecordInfo::set_atkserverid(const ::std::string& value) {
  set_has_atkserverid();
  if (atkserverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    atkserverid_ = new ::std::string;
  }
  atkserverid_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TAllyWarUnitRecordInfo.AtkServerId)
}
inline void TAllyWarUnitRecordInfo::set_atkserverid(const char* value) {
  set_has_atkserverid();
  if (atkserverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    atkserverid_ = new ::std::string;
  }
  atkserverid_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TAllyWarUnitRecordInfo.AtkServerId)
}
inline void TAllyWarUnitRecordInfo::set_atkserverid(const char* value, size_t size) {
  set_has_atkserverid();
  if (atkserverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    atkserverid_ = new ::std::string;
  }
  atkserverid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TAllyWarUnitRecordInfo.AtkServerId)
}
inline ::std::string* TAllyWarUnitRecordInfo::mutable_atkserverid() {
  set_has_atkserverid();
  if (atkserverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    atkserverid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarUnitRecordInfo.AtkServerId)
  return atkserverid_;
}
inline ::std::string* TAllyWarUnitRecordInfo::release_atkserverid() {
  clear_has_atkserverid();
  if (atkserverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = atkserverid_;
    atkserverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TAllyWarUnitRecordInfo::set_allocated_atkserverid(::std::string* atkserverid) {
  if (atkserverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete atkserverid_;
  }
  if (atkserverid) {
    set_has_atkserverid();
    atkserverid_ = atkserverid;
  } else {
    clear_has_atkserverid();
    atkserverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarUnitRecordInfo.AtkServerId)
}

// optional uint64 DefUid = 3;
inline bool TAllyWarUnitRecordInfo::has_defuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAllyWarUnitRecordInfo::set_has_defuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAllyWarUnitRecordInfo::clear_has_defuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAllyWarUnitRecordInfo::clear_defuid() {
  defuid_ = GOOGLE_ULONGLONG(0);
  clear_has_defuid();
}
inline ::google::protobuf::uint64 TAllyWarUnitRecordInfo::defuid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarUnitRecordInfo.DefUid)
  return defuid_;
}
inline void TAllyWarUnitRecordInfo::set_defuid(::google::protobuf::uint64 value) {
  set_has_defuid();
  defuid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarUnitRecordInfo.DefUid)
}

// optional string DefServerId = 4;
inline bool TAllyWarUnitRecordInfo::has_defserverid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAllyWarUnitRecordInfo::set_has_defserverid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAllyWarUnitRecordInfo::clear_has_defserverid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAllyWarUnitRecordInfo::clear_defserverid() {
  if (defserverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defserverid_->clear();
  }
  clear_has_defserverid();
}
inline const ::std::string& TAllyWarUnitRecordInfo::defserverid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarUnitRecordInfo.DefServerId)
  return *defserverid_;
}
inline void TAllyWarUnitRecordInfo::set_defserverid(const ::std::string& value) {
  set_has_defserverid();
  if (defserverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defserverid_ = new ::std::string;
  }
  defserverid_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TAllyWarUnitRecordInfo.DefServerId)
}
inline void TAllyWarUnitRecordInfo::set_defserverid(const char* value) {
  set_has_defserverid();
  if (defserverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defserverid_ = new ::std::string;
  }
  defserverid_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TAllyWarUnitRecordInfo.DefServerId)
}
inline void TAllyWarUnitRecordInfo::set_defserverid(const char* value, size_t size) {
  set_has_defserverid();
  if (defserverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defserverid_ = new ::std::string;
  }
  defserverid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TAllyWarUnitRecordInfo.DefServerId)
}
inline ::std::string* TAllyWarUnitRecordInfo::mutable_defserverid() {
  set_has_defserverid();
  if (defserverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defserverid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarUnitRecordInfo.DefServerId)
  return defserverid_;
}
inline ::std::string* TAllyWarUnitRecordInfo::release_defserverid() {
  clear_has_defserverid();
  if (defserverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = defserverid_;
    defserverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TAllyWarUnitRecordInfo::set_allocated_defserverid(::std::string* defserverid) {
  if (defserverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete defserverid_;
  }
  if (defserverid) {
    set_has_defserverid();
    defserverid_ = defserverid;
  } else {
    clear_has_defserverid();
    defserverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarUnitRecordInfo.DefServerId)
}

// optional uint64 WinUid = 5;
inline bool TAllyWarUnitRecordInfo::has_winuid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TAllyWarUnitRecordInfo::set_has_winuid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TAllyWarUnitRecordInfo::clear_has_winuid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TAllyWarUnitRecordInfo::clear_winuid() {
  winuid_ = GOOGLE_ULONGLONG(0);
  clear_has_winuid();
}
inline ::google::protobuf::uint64 TAllyWarUnitRecordInfo::winuid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarUnitRecordInfo.WinUid)
  return winuid_;
}
inline void TAllyWarUnitRecordInfo::set_winuid(::google::protobuf::uint64 value) {
  set_has_winuid();
  winuid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarUnitRecordInfo.WinUid)
}

// optional uint32 ContiWinNum = 6;
inline bool TAllyWarUnitRecordInfo::has_contiwinnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TAllyWarUnitRecordInfo::set_has_contiwinnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TAllyWarUnitRecordInfo::clear_has_contiwinnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TAllyWarUnitRecordInfo::clear_contiwinnum() {
  contiwinnum_ = 0u;
  clear_has_contiwinnum();
}
inline ::google::protobuf::uint32 TAllyWarUnitRecordInfo::contiwinnum() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarUnitRecordInfo.ContiWinNum)
  return contiwinnum_;
}
inline void TAllyWarUnitRecordInfo::set_contiwinnum(::google::protobuf::uint32 value) {
  set_has_contiwinnum();
  contiwinnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarUnitRecordInfo.ContiWinNum)
}

// repeated .pb.TAllyWarFmtRecordInfo ArrFmtRecord = 7;
inline int TAllyWarUnitRecordInfo::arrfmtrecord_size() const {
  return arrfmtrecord_.size();
}
inline void TAllyWarUnitRecordInfo::clear_arrfmtrecord() {
  arrfmtrecord_.Clear();
}
inline const ::pb::TAllyWarFmtRecordInfo& TAllyWarUnitRecordInfo::arrfmtrecord(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarUnitRecordInfo.ArrFmtRecord)
  return arrfmtrecord_.Get(index);
}
inline ::pb::TAllyWarFmtRecordInfo* TAllyWarUnitRecordInfo::mutable_arrfmtrecord(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarUnitRecordInfo.ArrFmtRecord)
  return arrfmtrecord_.Mutable(index);
}
inline ::pb::TAllyWarFmtRecordInfo* TAllyWarUnitRecordInfo::add_arrfmtrecord() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarUnitRecordInfo.ArrFmtRecord)
  return arrfmtrecord_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtRecordInfo >&
TAllyWarUnitRecordInfo::arrfmtrecord() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarUnitRecordInfo.ArrFmtRecord)
  return arrfmtrecord_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtRecordInfo >*
TAllyWarUnitRecordInfo::mutable_arrfmtrecord() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarUnitRecordInfo.ArrFmtRecord)
  return &arrfmtrecord_;
}

// -------------------------------------------------------------------

// TAllyWarAreaRecordInfo

// optional uint32 AreaId = 1;
inline bool TAllyWarAreaRecordInfo::has_areaid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarAreaRecordInfo::set_has_areaid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarAreaRecordInfo::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarAreaRecordInfo::clear_areaid() {
  areaid_ = 0u;
  clear_has_areaid();
}
inline ::google::protobuf::uint32 TAllyWarAreaRecordInfo::areaid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAreaRecordInfo.AreaId)
  return areaid_;
}
inline void TAllyWarAreaRecordInfo::set_areaid(::google::protobuf::uint32 value) {
  set_has_areaid();
  areaid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarAreaRecordInfo.AreaId)
}

// repeated .pb.TAllyWarUnitRecordInfo ArrUnitRecord = 2;
inline int TAllyWarAreaRecordInfo::arrunitrecord_size() const {
  return arrunitrecord_.size();
}
inline void TAllyWarAreaRecordInfo::clear_arrunitrecord() {
  arrunitrecord_.Clear();
}
inline const ::pb::TAllyWarUnitRecordInfo& TAllyWarAreaRecordInfo::arrunitrecord(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAreaRecordInfo.ArrUnitRecord)
  return arrunitrecord_.Get(index);
}
inline ::pb::TAllyWarUnitRecordInfo* TAllyWarAreaRecordInfo::mutable_arrunitrecord(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarAreaRecordInfo.ArrUnitRecord)
  return arrunitrecord_.Mutable(index);
}
inline ::pb::TAllyWarUnitRecordInfo* TAllyWarAreaRecordInfo::add_arrunitrecord() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarAreaRecordInfo.ArrUnitRecord)
  return arrunitrecord_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUnitRecordInfo >&
TAllyWarAreaRecordInfo::arrunitrecord() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarAreaRecordInfo.ArrUnitRecord)
  return arrunitrecord_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUnitRecordInfo >*
TAllyWarAreaRecordInfo::mutable_arrunitrecord() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarAreaRecordInfo.ArrUnitRecord)
  return &arrunitrecord_;
}

// optional uint64 DoneTime = 3;
inline bool TAllyWarAreaRecordInfo::has_donetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAllyWarAreaRecordInfo::set_has_donetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAllyWarAreaRecordInfo::clear_has_donetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAllyWarAreaRecordInfo::clear_donetime() {
  donetime_ = GOOGLE_ULONGLONG(0);
  clear_has_donetime();
}
inline ::google::protobuf::uint64 TAllyWarAreaRecordInfo::donetime() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAreaRecordInfo.DoneTime)
  return donetime_;
}
inline void TAllyWarAreaRecordInfo::set_donetime(::google::protobuf::uint64 value) {
  set_has_donetime();
  donetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarAreaRecordInfo.DoneTime)
}

// optional uint64 WinAllyId = 5;
inline bool TAllyWarAreaRecordInfo::has_winallyid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAllyWarAreaRecordInfo::set_has_winallyid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAllyWarAreaRecordInfo::clear_has_winallyid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAllyWarAreaRecordInfo::clear_winallyid() {
  winallyid_ = GOOGLE_ULONGLONG(0);
  clear_has_winallyid();
}
inline ::google::protobuf::uint64 TAllyWarAreaRecordInfo::winallyid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarAreaRecordInfo.WinAllyId)
  return winallyid_;
}
inline void TAllyWarAreaRecordInfo::set_winallyid(::google::protobuf::uint64 value) {
  set_has_winallyid();
  winallyid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarAreaRecordInfo.WinAllyId)
}

// -------------------------------------------------------------------

// TAllianceSimpleInfoWithUser

// optional .pb.TAllianceSimpleInfo AllianceSimpleInfo = 1;
inline bool TAllianceSimpleInfoWithUser::has_alliancesimpleinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllianceSimpleInfoWithUser::set_has_alliancesimpleinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllianceSimpleInfoWithUser::clear_has_alliancesimpleinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllianceSimpleInfoWithUser::clear_alliancesimpleinfo() {
  if (alliancesimpleinfo_ != NULL) alliancesimpleinfo_->::pb::TAllianceSimpleInfo::Clear();
  clear_has_alliancesimpleinfo();
}
inline const ::pb::TAllianceSimpleInfo& TAllianceSimpleInfoWithUser::alliancesimpleinfo() const {
  // @@protoc_insertion_point(field_get:pb.TAllianceSimpleInfoWithUser.AllianceSimpleInfo)
  return alliancesimpleinfo_ != NULL ? *alliancesimpleinfo_ : *default_instance_->alliancesimpleinfo_;
}
inline ::pb::TAllianceSimpleInfo* TAllianceSimpleInfoWithUser::mutable_alliancesimpleinfo() {
  set_has_alliancesimpleinfo();
  if (alliancesimpleinfo_ == NULL) alliancesimpleinfo_ = new ::pb::TAllianceSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAllianceSimpleInfoWithUser.AllianceSimpleInfo)
  return alliancesimpleinfo_;
}
inline ::pb::TAllianceSimpleInfo* TAllianceSimpleInfoWithUser::release_alliancesimpleinfo() {
  clear_has_alliancesimpleinfo();
  ::pb::TAllianceSimpleInfo* temp = alliancesimpleinfo_;
  alliancesimpleinfo_ = NULL;
  return temp;
}
inline void TAllianceSimpleInfoWithUser::set_allocated_alliancesimpleinfo(::pb::TAllianceSimpleInfo* alliancesimpleinfo) {
  delete alliancesimpleinfo_;
  alliancesimpleinfo_ = alliancesimpleinfo;
  if (alliancesimpleinfo) {
    set_has_alliancesimpleinfo();
  } else {
    clear_has_alliancesimpleinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllianceSimpleInfoWithUser.AllianceSimpleInfo)
}

// repeated .pb.TAllyWarUserBaseInfo ArrUserBaseInfo = 2;
inline int TAllianceSimpleInfoWithUser::arruserbaseinfo_size() const {
  return arruserbaseinfo_.size();
}
inline void TAllianceSimpleInfoWithUser::clear_arruserbaseinfo() {
  arruserbaseinfo_.Clear();
}
inline const ::pb::TAllyWarUserBaseInfo& TAllianceSimpleInfoWithUser::arruserbaseinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllianceSimpleInfoWithUser.ArrUserBaseInfo)
  return arruserbaseinfo_.Get(index);
}
inline ::pb::TAllyWarUserBaseInfo* TAllianceSimpleInfoWithUser::mutable_arruserbaseinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllianceSimpleInfoWithUser.ArrUserBaseInfo)
  return arruserbaseinfo_.Mutable(index);
}
inline ::pb::TAllyWarUserBaseInfo* TAllianceSimpleInfoWithUser::add_arruserbaseinfo() {
  // @@protoc_insertion_point(field_add:pb.TAllianceSimpleInfoWithUser.ArrUserBaseInfo)
  return arruserbaseinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >&
TAllianceSimpleInfoWithUser::arruserbaseinfo() const {
  // @@protoc_insertion_point(field_list:pb.TAllianceSimpleInfoWithUser.ArrUserBaseInfo)
  return arruserbaseinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >*
TAllianceSimpleInfoWithUser::mutable_arruserbaseinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllianceSimpleInfoWithUser.ArrUserBaseInfo)
  return &arruserbaseinfo_;
}

// -------------------------------------------------------------------

// TAllyWarGetBaseInfoRsp

// repeated .pb.TAllyWarExpectProcess ArrExpectProcess = 1;
inline int TAllyWarGetBaseInfoRsp::arrexpectprocess_size() const {
  return arrexpectprocess_.size();
}
inline void TAllyWarGetBaseInfoRsp::clear_arrexpectprocess() {
  arrexpectprocess_.Clear();
}
inline const ::pb::TAllyWarExpectProcess& TAllyWarGetBaseInfoRsp::arrexpectprocess(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetBaseInfoRsp.ArrExpectProcess)
  return arrexpectprocess_.Get(index);
}
inline ::pb::TAllyWarExpectProcess* TAllyWarGetBaseInfoRsp::mutable_arrexpectprocess(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetBaseInfoRsp.ArrExpectProcess)
  return arrexpectprocess_.Mutable(index);
}
inline ::pb::TAllyWarExpectProcess* TAllyWarGetBaseInfoRsp::add_arrexpectprocess() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetBaseInfoRsp.ArrExpectProcess)
  return arrexpectprocess_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarExpectProcess >&
TAllyWarGetBaseInfoRsp::arrexpectprocess() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetBaseInfoRsp.ArrExpectProcess)
  return arrexpectprocess_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarExpectProcess >*
TAllyWarGetBaseInfoRsp::mutable_arrexpectprocess() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetBaseInfoRsp.ArrExpectProcess)
  return &arrexpectprocess_;
}

// optional bool FuncOpen = 2;
inline bool TAllyWarGetBaseInfoRsp::has_funcopen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarGetBaseInfoRsp::set_has_funcopen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarGetBaseInfoRsp::clear_has_funcopen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarGetBaseInfoRsp::clear_funcopen() {
  funcopen_ = false;
  clear_has_funcopen();
}
inline bool TAllyWarGetBaseInfoRsp::funcopen() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetBaseInfoRsp.FuncOpen)
  return funcopen_;
}
inline void TAllyWarGetBaseInfoRsp::set_funcopen(bool value) {
  set_has_funcopen();
  funcopen_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetBaseInfoRsp.FuncOpen)
}

// optional .pb.TAllyWarActualProcess ActualProcess = 3;
inline bool TAllyWarGetBaseInfoRsp::has_actualprocess() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAllyWarGetBaseInfoRsp::set_has_actualprocess() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAllyWarGetBaseInfoRsp::clear_has_actualprocess() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAllyWarGetBaseInfoRsp::clear_actualprocess() {
  if (actualprocess_ != NULL) actualprocess_->::pb::TAllyWarActualProcess::Clear();
  clear_has_actualprocess();
}
inline const ::pb::TAllyWarActualProcess& TAllyWarGetBaseInfoRsp::actualprocess() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetBaseInfoRsp.ActualProcess)
  return actualprocess_ != NULL ? *actualprocess_ : *default_instance_->actualprocess_;
}
inline ::pb::TAllyWarActualProcess* TAllyWarGetBaseInfoRsp::mutable_actualprocess() {
  set_has_actualprocess();
  if (actualprocess_ == NULL) actualprocess_ = new ::pb::TAllyWarActualProcess;
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetBaseInfoRsp.ActualProcess)
  return actualprocess_;
}
inline ::pb::TAllyWarActualProcess* TAllyWarGetBaseInfoRsp::release_actualprocess() {
  clear_has_actualprocess();
  ::pb::TAllyWarActualProcess* temp = actualprocess_;
  actualprocess_ = NULL;
  return temp;
}
inline void TAllyWarGetBaseInfoRsp::set_allocated_actualprocess(::pb::TAllyWarActualProcess* actualprocess) {
  delete actualprocess_;
  actualprocess_ = actualprocess;
  if (actualprocess) {
    set_has_actualprocess();
  } else {
    clear_has_actualprocess();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarGetBaseInfoRsp.ActualProcess)
}

// optional string SceneId = 4;
inline bool TAllyWarGetBaseInfoRsp::has_sceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAllyWarGetBaseInfoRsp::set_has_sceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAllyWarGetBaseInfoRsp::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAllyWarGetBaseInfoRsp::clear_sceneid() {
  if (sceneid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sceneid_->clear();
  }
  clear_has_sceneid();
}
inline const ::std::string& TAllyWarGetBaseInfoRsp::sceneid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetBaseInfoRsp.SceneId)
  return *sceneid_;
}
inline void TAllyWarGetBaseInfoRsp::set_sceneid(const ::std::string& value) {
  set_has_sceneid();
  if (sceneid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sceneid_ = new ::std::string;
  }
  sceneid_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetBaseInfoRsp.SceneId)
}
inline void TAllyWarGetBaseInfoRsp::set_sceneid(const char* value) {
  set_has_sceneid();
  if (sceneid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sceneid_ = new ::std::string;
  }
  sceneid_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TAllyWarGetBaseInfoRsp.SceneId)
}
inline void TAllyWarGetBaseInfoRsp::set_sceneid(const char* value, size_t size) {
  set_has_sceneid();
  if (sceneid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sceneid_ = new ::std::string;
  }
  sceneid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TAllyWarGetBaseInfoRsp.SceneId)
}
inline ::std::string* TAllyWarGetBaseInfoRsp::mutable_sceneid() {
  set_has_sceneid();
  if (sceneid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sceneid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetBaseInfoRsp.SceneId)
  return sceneid_;
}
inline ::std::string* TAllyWarGetBaseInfoRsp::release_sceneid() {
  clear_has_sceneid();
  if (sceneid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sceneid_;
    sceneid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TAllyWarGetBaseInfoRsp::set_allocated_sceneid(::std::string* sceneid) {
  if (sceneid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sceneid_;
  }
  if (sceneid) {
    set_has_sceneid();
    sceneid_ = sceneid;
  } else {
    clear_has_sceneid();
    sceneid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarGetBaseInfoRsp.SceneId)
}

// optional uint32 SignAllyNum = 5;
inline bool TAllyWarGetBaseInfoRsp::has_signallynum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TAllyWarGetBaseInfoRsp::set_has_signallynum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TAllyWarGetBaseInfoRsp::clear_has_signallynum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TAllyWarGetBaseInfoRsp::clear_signallynum() {
  signallynum_ = 0u;
  clear_has_signallynum();
}
inline ::google::protobuf::uint32 TAllyWarGetBaseInfoRsp::signallynum() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetBaseInfoRsp.SignAllyNum)
  return signallynum_;
}
inline void TAllyWarGetBaseInfoRsp::set_signallynum(::google::protobuf::uint32 value) {
  set_has_signallynum();
  signallynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetBaseInfoRsp.SignAllyNum)
}

// optional uint64 SignTime = 6;
inline bool TAllyWarGetBaseInfoRsp::has_signtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TAllyWarGetBaseInfoRsp::set_has_signtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TAllyWarGetBaseInfoRsp::clear_has_signtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TAllyWarGetBaseInfoRsp::clear_signtime() {
  signtime_ = GOOGLE_ULONGLONG(0);
  clear_has_signtime();
}
inline ::google::protobuf::uint64 TAllyWarGetBaseInfoRsp::signtime() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetBaseInfoRsp.SignTime)
  return signtime_;
}
inline void TAllyWarGetBaseInfoRsp::set_signtime(::google::protobuf::uint64 value) {
  set_has_signtime();
  signtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetBaseInfoRsp.SignTime)
}

// optional uint32 MyAreaId = 7;
inline bool TAllyWarGetBaseInfoRsp::has_myareaid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TAllyWarGetBaseInfoRsp::set_has_myareaid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TAllyWarGetBaseInfoRsp::clear_has_myareaid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TAllyWarGetBaseInfoRsp::clear_myareaid() {
  myareaid_ = 0u;
  clear_has_myareaid();
}
inline ::google::protobuf::uint32 TAllyWarGetBaseInfoRsp::myareaid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetBaseInfoRsp.MyAreaId)
  return myareaid_;
}
inline void TAllyWarGetBaseInfoRsp::set_myareaid(::google::protobuf::uint32 value) {
  set_has_myareaid();
  myareaid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetBaseInfoRsp.MyAreaId)
}

// optional uint32 MyPosId = 8;
inline bool TAllyWarGetBaseInfoRsp::has_myposid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TAllyWarGetBaseInfoRsp::set_has_myposid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TAllyWarGetBaseInfoRsp::clear_has_myposid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TAllyWarGetBaseInfoRsp::clear_myposid() {
  myposid_ = 0u;
  clear_has_myposid();
}
inline ::google::protobuf::uint32 TAllyWarGetBaseInfoRsp::myposid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetBaseInfoRsp.MyPosId)
  return myposid_;
}
inline void TAllyWarGetBaseInfoRsp::set_myposid(::google::protobuf::uint32 value) {
  set_has_myposid();
  myposid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetBaseInfoRsp.MyPosId)
}

// optional .pb.TAllyWarAllyBaseInfo MyAllyInfo = 9;
inline bool TAllyWarGetBaseInfoRsp::has_myallyinfo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TAllyWarGetBaseInfoRsp::set_has_myallyinfo() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TAllyWarGetBaseInfoRsp::clear_has_myallyinfo() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TAllyWarGetBaseInfoRsp::clear_myallyinfo() {
  if (myallyinfo_ != NULL) myallyinfo_->::pb::TAllyWarAllyBaseInfo::Clear();
  clear_has_myallyinfo();
}
inline const ::pb::TAllyWarAllyBaseInfo& TAllyWarGetBaseInfoRsp::myallyinfo() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetBaseInfoRsp.MyAllyInfo)
  return myallyinfo_ != NULL ? *myallyinfo_ : *default_instance_->myallyinfo_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetBaseInfoRsp::mutable_myallyinfo() {
  set_has_myallyinfo();
  if (myallyinfo_ == NULL) myallyinfo_ = new ::pb::TAllyWarAllyBaseInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetBaseInfoRsp.MyAllyInfo)
  return myallyinfo_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetBaseInfoRsp::release_myallyinfo() {
  clear_has_myallyinfo();
  ::pb::TAllyWarAllyBaseInfo* temp = myallyinfo_;
  myallyinfo_ = NULL;
  return temp;
}
inline void TAllyWarGetBaseInfoRsp::set_allocated_myallyinfo(::pb::TAllyWarAllyBaseInfo* myallyinfo) {
  delete myallyinfo_;
  myallyinfo_ = myallyinfo;
  if (myallyinfo) {
    set_has_myallyinfo();
  } else {
    clear_has_myallyinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarGetBaseInfoRsp.MyAllyInfo)
}

// optional .pb.TAllyWarAllyBaseInfo EnemyAllyInfo = 10;
inline bool TAllyWarGetBaseInfoRsp::has_enemyallyinfo() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TAllyWarGetBaseInfoRsp::set_has_enemyallyinfo() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TAllyWarGetBaseInfoRsp::clear_has_enemyallyinfo() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TAllyWarGetBaseInfoRsp::clear_enemyallyinfo() {
  if (enemyallyinfo_ != NULL) enemyallyinfo_->::pb::TAllyWarAllyBaseInfo::Clear();
  clear_has_enemyallyinfo();
}
inline const ::pb::TAllyWarAllyBaseInfo& TAllyWarGetBaseInfoRsp::enemyallyinfo() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetBaseInfoRsp.EnemyAllyInfo)
  return enemyallyinfo_ != NULL ? *enemyallyinfo_ : *default_instance_->enemyallyinfo_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetBaseInfoRsp::mutable_enemyallyinfo() {
  set_has_enemyallyinfo();
  if (enemyallyinfo_ == NULL) enemyallyinfo_ = new ::pb::TAllyWarAllyBaseInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetBaseInfoRsp.EnemyAllyInfo)
  return enemyallyinfo_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetBaseInfoRsp::release_enemyallyinfo() {
  clear_has_enemyallyinfo();
  ::pb::TAllyWarAllyBaseInfo* temp = enemyallyinfo_;
  enemyallyinfo_ = NULL;
  return temp;
}
inline void TAllyWarGetBaseInfoRsp::set_allocated_enemyallyinfo(::pb::TAllyWarAllyBaseInfo* enemyallyinfo) {
  delete enemyallyinfo_;
  enemyallyinfo_ = enemyallyinfo;
  if (enemyallyinfo) {
    set_has_enemyallyinfo();
  } else {
    clear_has_enemyallyinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarGetBaseInfoRsp.EnemyAllyInfo)
}

// -------------------------------------------------------------------

// TAllyWarGetMatchInfoRsp

// repeated .pb.TAllyWarAllyMatchInfo ArrMatch = 1;
inline int TAllyWarGetMatchInfoRsp::arrmatch_size() const {
  return arrmatch_.size();
}
inline void TAllyWarGetMatchInfoRsp::clear_arrmatch() {
  arrmatch_.Clear();
}
inline const ::pb::TAllyWarAllyMatchInfo& TAllyWarGetMatchInfoRsp::arrmatch(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetMatchInfoRsp.ArrMatch)
  return arrmatch_.Get(index);
}
inline ::pb::TAllyWarAllyMatchInfo* TAllyWarGetMatchInfoRsp::mutable_arrmatch(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetMatchInfoRsp.ArrMatch)
  return arrmatch_.Mutable(index);
}
inline ::pb::TAllyWarAllyMatchInfo* TAllyWarGetMatchInfoRsp::add_arrmatch() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetMatchInfoRsp.ArrMatch)
  return arrmatch_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAllyMatchInfo >&
TAllyWarGetMatchInfoRsp::arrmatch() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetMatchInfoRsp.ArrMatch)
  return arrmatch_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAllyMatchInfo >*
TAllyWarGetMatchInfoRsp::mutable_arrmatch() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetMatchInfoRsp.ArrMatch)
  return &arrmatch_;
}

// repeated .pb.TAllyWarAllyBaseInfo ArrBase = 2;
inline int TAllyWarGetMatchInfoRsp::arrbase_size() const {
  return arrbase_.size();
}
inline void TAllyWarGetMatchInfoRsp::clear_arrbase() {
  arrbase_.Clear();
}
inline const ::pb::TAllyWarAllyBaseInfo& TAllyWarGetMatchInfoRsp::arrbase(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetMatchInfoRsp.ArrBase)
  return arrbase_.Get(index);
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetMatchInfoRsp::mutable_arrbase(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetMatchInfoRsp.ArrBase)
  return arrbase_.Mutable(index);
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetMatchInfoRsp::add_arrbase() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetMatchInfoRsp.ArrBase)
  return arrbase_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAllyBaseInfo >&
TAllyWarGetMatchInfoRsp::arrbase() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetMatchInfoRsp.ArrBase)
  return arrbase_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAllyBaseInfo >*
TAllyWarGetMatchInfoRsp::mutable_arrbase() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetMatchInfoRsp.ArrBase)
  return &arrbase_;
}

// -------------------------------------------------------------------

// TAllyWarGetFieldInfoRsp

// optional .pb.TAllyWarAllyBaseInfo MyAllyInfo = 1;
inline bool TAllyWarGetFieldInfoRsp::has_myallyinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarGetFieldInfoRsp::set_has_myallyinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarGetFieldInfoRsp::clear_has_myallyinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarGetFieldInfoRsp::clear_myallyinfo() {
  if (myallyinfo_ != NULL) myallyinfo_->::pb::TAllyWarAllyBaseInfo::Clear();
  clear_has_myallyinfo();
}
inline const ::pb::TAllyWarAllyBaseInfo& TAllyWarGetFieldInfoRsp::myallyinfo() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetFieldInfoRsp.MyAllyInfo)
  return myallyinfo_ != NULL ? *myallyinfo_ : *default_instance_->myallyinfo_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetFieldInfoRsp::mutable_myallyinfo() {
  set_has_myallyinfo();
  if (myallyinfo_ == NULL) myallyinfo_ = new ::pb::TAllyWarAllyBaseInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetFieldInfoRsp.MyAllyInfo)
  return myallyinfo_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetFieldInfoRsp::release_myallyinfo() {
  clear_has_myallyinfo();
  ::pb::TAllyWarAllyBaseInfo* temp = myallyinfo_;
  myallyinfo_ = NULL;
  return temp;
}
inline void TAllyWarGetFieldInfoRsp::set_allocated_myallyinfo(::pb::TAllyWarAllyBaseInfo* myallyinfo) {
  delete myallyinfo_;
  myallyinfo_ = myallyinfo;
  if (myallyinfo) {
    set_has_myallyinfo();
  } else {
    clear_has_myallyinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarGetFieldInfoRsp.MyAllyInfo)
}

// optional .pb.TAllyWarAllyBaseInfo EnemyAllyInfo = 2;
inline bool TAllyWarGetFieldInfoRsp::has_enemyallyinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarGetFieldInfoRsp::set_has_enemyallyinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarGetFieldInfoRsp::clear_has_enemyallyinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarGetFieldInfoRsp::clear_enemyallyinfo() {
  if (enemyallyinfo_ != NULL) enemyallyinfo_->::pb::TAllyWarAllyBaseInfo::Clear();
  clear_has_enemyallyinfo();
}
inline const ::pb::TAllyWarAllyBaseInfo& TAllyWarGetFieldInfoRsp::enemyallyinfo() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetFieldInfoRsp.EnemyAllyInfo)
  return enemyallyinfo_ != NULL ? *enemyallyinfo_ : *default_instance_->enemyallyinfo_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetFieldInfoRsp::mutable_enemyallyinfo() {
  set_has_enemyallyinfo();
  if (enemyallyinfo_ == NULL) enemyallyinfo_ = new ::pb::TAllyWarAllyBaseInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetFieldInfoRsp.EnemyAllyInfo)
  return enemyallyinfo_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetFieldInfoRsp::release_enemyallyinfo() {
  clear_has_enemyallyinfo();
  ::pb::TAllyWarAllyBaseInfo* temp = enemyallyinfo_;
  enemyallyinfo_ = NULL;
  return temp;
}
inline void TAllyWarGetFieldInfoRsp::set_allocated_enemyallyinfo(::pb::TAllyWarAllyBaseInfo* enemyallyinfo) {
  delete enemyallyinfo_;
  enemyallyinfo_ = enemyallyinfo;
  if (enemyallyinfo) {
    set_has_enemyallyinfo();
  } else {
    clear_has_enemyallyinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarGetFieldInfoRsp.EnemyAllyInfo)
}

// repeated .pb.TAllyWarFieldAreaInfo ArrArea = 3;
inline int TAllyWarGetFieldInfoRsp::arrarea_size() const {
  return arrarea_.size();
}
inline void TAllyWarGetFieldInfoRsp::clear_arrarea() {
  arrarea_.Clear();
}
inline const ::pb::TAllyWarFieldAreaInfo& TAllyWarGetFieldInfoRsp::arrarea(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetFieldInfoRsp.ArrArea)
  return arrarea_.Get(index);
}
inline ::pb::TAllyWarFieldAreaInfo* TAllyWarGetFieldInfoRsp::mutable_arrarea(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetFieldInfoRsp.ArrArea)
  return arrarea_.Mutable(index);
}
inline ::pb::TAllyWarFieldAreaInfo* TAllyWarGetFieldInfoRsp::add_arrarea() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetFieldInfoRsp.ArrArea)
  return arrarea_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFieldAreaInfo >&
TAllyWarGetFieldInfoRsp::arrarea() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetFieldInfoRsp.ArrArea)
  return arrarea_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFieldAreaInfo >*
TAllyWarGetFieldInfoRsp::mutable_arrarea() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetFieldInfoRsp.ArrArea)
  return &arrarea_;
}

// repeated uint64 ArrCandi = 4;
inline int TAllyWarGetFieldInfoRsp::arrcandi_size() const {
  return arrcandi_.size();
}
inline void TAllyWarGetFieldInfoRsp::clear_arrcandi() {
  arrcandi_.Clear();
}
inline ::google::protobuf::uint64 TAllyWarGetFieldInfoRsp::arrcandi(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetFieldInfoRsp.ArrCandi)
  return arrcandi_.Get(index);
}
inline void TAllyWarGetFieldInfoRsp::set_arrcandi(int index, ::google::protobuf::uint64 value) {
  arrcandi_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetFieldInfoRsp.ArrCandi)
}
inline void TAllyWarGetFieldInfoRsp::add_arrcandi(::google::protobuf::uint64 value) {
  arrcandi_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetFieldInfoRsp.ArrCandi)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TAllyWarGetFieldInfoRsp::arrcandi() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetFieldInfoRsp.ArrCandi)
  return arrcandi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TAllyWarGetFieldInfoRsp::mutable_arrcandi() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetFieldInfoRsp.ArrCandi)
  return &arrcandi_;
}

// repeated .pb.TAllyWarUserBaseInfo ArrUserInfo = 5;
inline int TAllyWarGetFieldInfoRsp::arruserinfo_size() const {
  return arruserinfo_.size();
}
inline void TAllyWarGetFieldInfoRsp::clear_arruserinfo() {
  arruserinfo_.Clear();
}
inline const ::pb::TAllyWarUserBaseInfo& TAllyWarGetFieldInfoRsp::arruserinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetFieldInfoRsp.ArrUserInfo)
  return arruserinfo_.Get(index);
}
inline ::pb::TAllyWarUserBaseInfo* TAllyWarGetFieldInfoRsp::mutable_arruserinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetFieldInfoRsp.ArrUserInfo)
  return arruserinfo_.Mutable(index);
}
inline ::pb::TAllyWarUserBaseInfo* TAllyWarGetFieldInfoRsp::add_arruserinfo() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetFieldInfoRsp.ArrUserInfo)
  return arruserinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >&
TAllyWarGetFieldInfoRsp::arruserinfo() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetFieldInfoRsp.ArrUserInfo)
  return arruserinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >*
TAllyWarGetFieldInfoRsp::mutable_arruserinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetFieldInfoRsp.ArrUserInfo)
  return &arruserinfo_;
}

// optional uint64 DoneTime = 6;
inline bool TAllyWarGetFieldInfoRsp::has_donetime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TAllyWarGetFieldInfoRsp::set_has_donetime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TAllyWarGetFieldInfoRsp::clear_has_donetime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TAllyWarGetFieldInfoRsp::clear_donetime() {
  donetime_ = GOOGLE_ULONGLONG(0);
  clear_has_donetime();
}
inline ::google::protobuf::uint64 TAllyWarGetFieldInfoRsp::donetime() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetFieldInfoRsp.DoneTime)
  return donetime_;
}
inline void TAllyWarGetFieldInfoRsp::set_donetime(::google::protobuf::uint64 value) {
  set_has_donetime();
  donetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetFieldInfoRsp.DoneTime)
}

// optional uint64 WinAllyId = 7;
inline bool TAllyWarGetFieldInfoRsp::has_winallyid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TAllyWarGetFieldInfoRsp::set_has_winallyid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TAllyWarGetFieldInfoRsp::clear_has_winallyid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TAllyWarGetFieldInfoRsp::clear_winallyid() {
  winallyid_ = GOOGLE_ULONGLONG(0);
  clear_has_winallyid();
}
inline ::google::protobuf::uint64 TAllyWarGetFieldInfoRsp::winallyid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetFieldInfoRsp.WinAllyId)
  return winallyid_;
}
inline void TAllyWarGetFieldInfoRsp::set_winallyid(::google::protobuf::uint64 value) {
  set_has_winallyid();
  winallyid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetFieldInfoRsp.WinAllyId)
}

// optional uint32 MatchId = 8;
inline bool TAllyWarGetFieldInfoRsp::has_matchid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TAllyWarGetFieldInfoRsp::set_has_matchid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TAllyWarGetFieldInfoRsp::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TAllyWarGetFieldInfoRsp::clear_matchid() {
  matchid_ = 0u;
  clear_has_matchid();
}
inline ::google::protobuf::uint32 TAllyWarGetFieldInfoRsp::matchid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetFieldInfoRsp.MatchId)
  return matchid_;
}
inline void TAllyWarGetFieldInfoRsp::set_matchid(::google::protobuf::uint32 value) {
  set_has_matchid();
  matchid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetFieldInfoRsp.MatchId)
}

// -------------------------------------------------------------------

// TAllyWarGetWinnerInfoRsp

// optional .pb.TAllyWarAllyBaseInfo WinAllyInfo = 1;
inline bool TAllyWarGetWinnerInfoRsp::has_winallyinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarGetWinnerInfoRsp::set_has_winallyinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarGetWinnerInfoRsp::clear_has_winallyinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarGetWinnerInfoRsp::clear_winallyinfo() {
  if (winallyinfo_ != NULL) winallyinfo_->::pb::TAllyWarAllyBaseInfo::Clear();
  clear_has_winallyinfo();
}
inline const ::pb::TAllyWarAllyBaseInfo& TAllyWarGetWinnerInfoRsp::winallyinfo() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetWinnerInfoRsp.WinAllyInfo)
  return winallyinfo_ != NULL ? *winallyinfo_ : *default_instance_->winallyinfo_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetWinnerInfoRsp::mutable_winallyinfo() {
  set_has_winallyinfo();
  if (winallyinfo_ == NULL) winallyinfo_ = new ::pb::TAllyWarAllyBaseInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetWinnerInfoRsp.WinAllyInfo)
  return winallyinfo_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetWinnerInfoRsp::release_winallyinfo() {
  clear_has_winallyinfo();
  ::pb::TAllyWarAllyBaseInfo* temp = winallyinfo_;
  winallyinfo_ = NULL;
  return temp;
}
inline void TAllyWarGetWinnerInfoRsp::set_allocated_winallyinfo(::pb::TAllyWarAllyBaseInfo* winallyinfo) {
  delete winallyinfo_;
  winallyinfo_ = winallyinfo;
  if (winallyinfo) {
    set_has_winallyinfo();
  } else {
    clear_has_winallyinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarGetWinnerInfoRsp.WinAllyInfo)
}

// repeated .pb.TAllyWarUserBaseInfo ArrShowUser = 2;
inline int TAllyWarGetWinnerInfoRsp::arrshowuser_size() const {
  return arrshowuser_.size();
}
inline void TAllyWarGetWinnerInfoRsp::clear_arrshowuser() {
  arrshowuser_.Clear();
}
inline const ::pb::TAllyWarUserBaseInfo& TAllyWarGetWinnerInfoRsp::arrshowuser(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetWinnerInfoRsp.ArrShowUser)
  return arrshowuser_.Get(index);
}
inline ::pb::TAllyWarUserBaseInfo* TAllyWarGetWinnerInfoRsp::mutable_arrshowuser(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetWinnerInfoRsp.ArrShowUser)
  return arrshowuser_.Mutable(index);
}
inline ::pb::TAllyWarUserBaseInfo* TAllyWarGetWinnerInfoRsp::add_arrshowuser() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetWinnerInfoRsp.ArrShowUser)
  return arrshowuser_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >&
TAllyWarGetWinnerInfoRsp::arrshowuser() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetWinnerInfoRsp.ArrShowUser)
  return arrshowuser_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >*
TAllyWarGetWinnerInfoRsp::mutable_arrshowuser() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetWinnerInfoRsp.ArrShowUser)
  return &arrshowuser_;
}

// repeated .pb.TAllyWarGuildContriInfo ArrGuildContri = 3;
inline int TAllyWarGetWinnerInfoRsp::arrguildcontri_size() const {
  return arrguildcontri_.size();
}
inline void TAllyWarGetWinnerInfoRsp::clear_arrguildcontri() {
  arrguildcontri_.Clear();
}
inline const ::pb::TAllyWarGuildContriInfo& TAllyWarGetWinnerInfoRsp::arrguildcontri(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetWinnerInfoRsp.ArrGuildContri)
  return arrguildcontri_.Get(index);
}
inline ::pb::TAllyWarGuildContriInfo* TAllyWarGetWinnerInfoRsp::mutable_arrguildcontri(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetWinnerInfoRsp.ArrGuildContri)
  return arrguildcontri_.Mutable(index);
}
inline ::pb::TAllyWarGuildContriInfo* TAllyWarGetWinnerInfoRsp::add_arrguildcontri() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetWinnerInfoRsp.ArrGuildContri)
  return arrguildcontri_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarGuildContriInfo >&
TAllyWarGetWinnerInfoRsp::arrguildcontri() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetWinnerInfoRsp.ArrGuildContri)
  return arrguildcontri_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarGuildContriInfo >*
TAllyWarGetWinnerInfoRsp::mutable_arrguildcontri() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetWinnerInfoRsp.ArrGuildContri)
  return &arrguildcontri_;
}

// -------------------------------------------------------------------

// TAllyWarSignRsp

// optional uint64 SignTime = 1;
inline bool TAllyWarSignRsp::has_signtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarSignRsp::set_has_signtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarSignRsp::clear_has_signtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarSignRsp::clear_signtime() {
  signtime_ = GOOGLE_ULONGLONG(0);
  clear_has_signtime();
}
inline ::google::protobuf::uint64 TAllyWarSignRsp::signtime() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarSignRsp.SignTime)
  return signtime_;
}
inline void TAllyWarSignRsp::set_signtime(::google::protobuf::uint64 value) {
  set_has_signtime();
  signtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarSignRsp.SignTime)
}

// -------------------------------------------------------------------

// TAllyWarGetFmtRsp

// repeated .pb.TAllyWarFmtInfo ArrFmt = 1;
inline int TAllyWarGetFmtRsp::arrfmt_size() const {
  return arrfmt_.size();
}
inline void TAllyWarGetFmtRsp::clear_arrfmt() {
  arrfmt_.Clear();
}
inline const ::pb::TAllyWarFmtInfo& TAllyWarGetFmtRsp::arrfmt(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetFmtRsp.ArrFmt)
  return arrfmt_.Get(index);
}
inline ::pb::TAllyWarFmtInfo* TAllyWarGetFmtRsp::mutable_arrfmt(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetFmtRsp.ArrFmt)
  return arrfmt_.Mutable(index);
}
inline ::pb::TAllyWarFmtInfo* TAllyWarGetFmtRsp::add_arrfmt() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetFmtRsp.ArrFmt)
  return arrfmt_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtInfo >&
TAllyWarGetFmtRsp::arrfmt() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetFmtRsp.ArrFmt)
  return arrfmt_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtInfo >*
TAllyWarGetFmtRsp::mutable_arrfmt() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetFmtRsp.ArrFmt)
  return &arrfmt_;
}

// -------------------------------------------------------------------

// TAllyWarSetFmtReq

// repeated .pb.TAllyWarFmtInfo ArrFmt = 1;
inline int TAllyWarSetFmtReq::arrfmt_size() const {
  return arrfmt_.size();
}
inline void TAllyWarSetFmtReq::clear_arrfmt() {
  arrfmt_.Clear();
}
inline const ::pb::TAllyWarFmtInfo& TAllyWarSetFmtReq::arrfmt(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarSetFmtReq.ArrFmt)
  return arrfmt_.Get(index);
}
inline ::pb::TAllyWarFmtInfo* TAllyWarSetFmtReq::mutable_arrfmt(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarSetFmtReq.ArrFmt)
  return arrfmt_.Mutable(index);
}
inline ::pb::TAllyWarFmtInfo* TAllyWarSetFmtReq::add_arrfmt() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarSetFmtReq.ArrFmt)
  return arrfmt_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtInfo >&
TAllyWarSetFmtReq::arrfmt() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarSetFmtReq.ArrFmt)
  return arrfmt_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarFmtInfo >*
TAllyWarSetFmtReq::mutable_arrfmt() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarSetFmtReq.ArrFmt)
  return &arrfmt_;
}

// -------------------------------------------------------------------

// TAllyWarSetPosReq

// optional uint32 AreaId = 1;
inline bool TAllyWarSetPosReq::has_areaid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarSetPosReq::set_has_areaid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarSetPosReq::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarSetPosReq::clear_areaid() {
  areaid_ = 0u;
  clear_has_areaid();
}
inline ::google::protobuf::uint32 TAllyWarSetPosReq::areaid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarSetPosReq.AreaId)
  return areaid_;
}
inline void TAllyWarSetPosReq::set_areaid(::google::protobuf::uint32 value) {
  set_has_areaid();
  areaid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarSetPosReq.AreaId)
}

// optional uint32 PosId = 2;
inline bool TAllyWarSetPosReq::has_posid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarSetPosReq::set_has_posid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarSetPosReq::clear_has_posid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarSetPosReq::clear_posid() {
  posid_ = 0u;
  clear_has_posid();
}
inline ::google::protobuf::uint32 TAllyWarSetPosReq::posid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarSetPosReq.PosId)
  return posid_;
}
inline void TAllyWarSetPosReq::set_posid(::google::protobuf::uint32 value) {
  set_has_posid();
  posid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarSetPosReq.PosId)
}

// -------------------------------------------------------------------

// TAllyWarGetDeployRsp

// repeated .pb.TAllyWarDeployInfo ArrDeploy = 1;
inline int TAllyWarGetDeployRsp::arrdeploy_size() const {
  return arrdeploy_.size();
}
inline void TAllyWarGetDeployRsp::clear_arrdeploy() {
  arrdeploy_.Clear();
}
inline const ::pb::TAllyWarDeployInfo& TAllyWarGetDeployRsp::arrdeploy(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetDeployRsp.ArrDeploy)
  return arrdeploy_.Get(index);
}
inline ::pb::TAllyWarDeployInfo* TAllyWarGetDeployRsp::mutable_arrdeploy(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetDeployRsp.ArrDeploy)
  return arrdeploy_.Mutable(index);
}
inline ::pb::TAllyWarDeployInfo* TAllyWarGetDeployRsp::add_arrdeploy() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetDeployRsp.ArrDeploy)
  return arrdeploy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo >&
TAllyWarGetDeployRsp::arrdeploy() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetDeployRsp.ArrDeploy)
  return arrdeploy_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo >*
TAllyWarGetDeployRsp::mutable_arrdeploy() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetDeployRsp.ArrDeploy)
  return &arrdeploy_;
}

// repeated uint64 ArrCandi = 2;
inline int TAllyWarGetDeployRsp::arrcandi_size() const {
  return arrcandi_.size();
}
inline void TAllyWarGetDeployRsp::clear_arrcandi() {
  arrcandi_.Clear();
}
inline ::google::protobuf::uint64 TAllyWarGetDeployRsp::arrcandi(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetDeployRsp.ArrCandi)
  return arrcandi_.Get(index);
}
inline void TAllyWarGetDeployRsp::set_arrcandi(int index, ::google::protobuf::uint64 value) {
  arrcandi_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetDeployRsp.ArrCandi)
}
inline void TAllyWarGetDeployRsp::add_arrcandi(::google::protobuf::uint64 value) {
  arrcandi_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetDeployRsp.ArrCandi)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TAllyWarGetDeployRsp::arrcandi() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetDeployRsp.ArrCandi)
  return arrcandi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TAllyWarGetDeployRsp::mutable_arrcandi() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetDeployRsp.ArrCandi)
  return &arrcandi_;
}

// repeated .pb.TAllyWarUserBaseInfo ArrUserInfo = 3;
inline int TAllyWarGetDeployRsp::arruserinfo_size() const {
  return arruserinfo_.size();
}
inline void TAllyWarGetDeployRsp::clear_arruserinfo() {
  arruserinfo_.Clear();
}
inline const ::pb::TAllyWarUserBaseInfo& TAllyWarGetDeployRsp::arruserinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetDeployRsp.ArrUserInfo)
  return arruserinfo_.Get(index);
}
inline ::pb::TAllyWarUserBaseInfo* TAllyWarGetDeployRsp::mutable_arruserinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetDeployRsp.ArrUserInfo)
  return arruserinfo_.Mutable(index);
}
inline ::pb::TAllyWarUserBaseInfo* TAllyWarGetDeployRsp::add_arruserinfo() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetDeployRsp.ArrUserInfo)
  return arruserinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >&
TAllyWarGetDeployRsp::arruserinfo() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetDeployRsp.ArrUserInfo)
  return arruserinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarUserBaseInfo >*
TAllyWarGetDeployRsp::mutable_arruserinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetDeployRsp.ArrUserInfo)
  return &arruserinfo_;
}

// optional bool AutoComplete = 4;
inline bool TAllyWarGetDeployRsp::has_autocomplete() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAllyWarGetDeployRsp::set_has_autocomplete() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAllyWarGetDeployRsp::clear_has_autocomplete() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAllyWarGetDeployRsp::clear_autocomplete() {
  autocomplete_ = false;
  clear_has_autocomplete();
}
inline bool TAllyWarGetDeployRsp::autocomplete() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetDeployRsp.AutoComplete)
  return autocomplete_;
}
inline void TAllyWarGetDeployRsp::set_autocomplete(bool value) {
  set_has_autocomplete();
  autocomplete_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetDeployRsp.AutoComplete)
}

// -------------------------------------------------------------------

// TAllyWarSetDeployReq

// repeated .pb.TAllyWarDeployInfo ArrPreDeploy = 1;
inline int TAllyWarSetDeployReq::arrpredeploy_size() const {
  return arrpredeploy_.size();
}
inline void TAllyWarSetDeployReq::clear_arrpredeploy() {
  arrpredeploy_.Clear();
}
inline const ::pb::TAllyWarDeployInfo& TAllyWarSetDeployReq::arrpredeploy(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarSetDeployReq.ArrPreDeploy)
  return arrpredeploy_.Get(index);
}
inline ::pb::TAllyWarDeployInfo* TAllyWarSetDeployReq::mutable_arrpredeploy(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarSetDeployReq.ArrPreDeploy)
  return arrpredeploy_.Mutable(index);
}
inline ::pb::TAllyWarDeployInfo* TAllyWarSetDeployReq::add_arrpredeploy() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarSetDeployReq.ArrPreDeploy)
  return arrpredeploy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo >&
TAllyWarSetDeployReq::arrpredeploy() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarSetDeployReq.ArrPreDeploy)
  return arrpredeploy_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo >*
TAllyWarSetDeployReq::mutable_arrpredeploy() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarSetDeployReq.ArrPreDeploy)
  return &arrpredeploy_;
}

// repeated .pb.TAllyWarDeployInfo ArrCurDeploy = 2;
inline int TAllyWarSetDeployReq::arrcurdeploy_size() const {
  return arrcurdeploy_.size();
}
inline void TAllyWarSetDeployReq::clear_arrcurdeploy() {
  arrcurdeploy_.Clear();
}
inline const ::pb::TAllyWarDeployInfo& TAllyWarSetDeployReq::arrcurdeploy(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarSetDeployReq.ArrCurDeploy)
  return arrcurdeploy_.Get(index);
}
inline ::pb::TAllyWarDeployInfo* TAllyWarSetDeployReq::mutable_arrcurdeploy(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarSetDeployReq.ArrCurDeploy)
  return arrcurdeploy_.Mutable(index);
}
inline ::pb::TAllyWarDeployInfo* TAllyWarSetDeployReq::add_arrcurdeploy() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarSetDeployReq.ArrCurDeploy)
  return arrcurdeploy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo >&
TAllyWarSetDeployReq::arrcurdeploy() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarSetDeployReq.ArrCurDeploy)
  return arrcurdeploy_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarDeployInfo >*
TAllyWarSetDeployReq::mutable_arrcurdeploy() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarSetDeployReq.ArrCurDeploy)
  return &arrcurdeploy_;
}

// -------------------------------------------------------------------

// TAllyWarSetOptionReq

// optional bool AutoComplete = 1;
inline bool TAllyWarSetOptionReq::has_autocomplete() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarSetOptionReq::set_has_autocomplete() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarSetOptionReq::clear_has_autocomplete() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarSetOptionReq::clear_autocomplete() {
  autocomplete_ = false;
  clear_has_autocomplete();
}
inline bool TAllyWarSetOptionReq::autocomplete() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarSetOptionReq.AutoComplete)
  return autocomplete_;
}
inline void TAllyWarSetOptionReq::set_autocomplete(bool value) {
  set_has_autocomplete();
  autocomplete_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarSetOptionReq.AutoComplete)
}

// -------------------------------------------------------------------

// TAllyWarGetRecordReq

// optional uint32 MatchId = 1;
inline bool TAllyWarGetRecordReq::has_matchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarGetRecordReq::set_has_matchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarGetRecordReq::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarGetRecordReq::clear_matchid() {
  matchid_ = 0u;
  clear_has_matchid();
}
inline ::google::protobuf::uint32 TAllyWarGetRecordReq::matchid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetRecordReq.MatchId)
  return matchid_;
}
inline void TAllyWarGetRecordReq::set_matchid(::google::protobuf::uint32 value) {
  set_has_matchid();
  matchid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetRecordReq.MatchId)
}

// -------------------------------------------------------------------

// TAllyWarGetRecordRsp

// optional .pb.TAllyWarAllyBaseInfo AtkAlly = 1;
inline bool TAllyWarGetRecordRsp::has_atkally() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAllyWarGetRecordRsp::set_has_atkally() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAllyWarGetRecordRsp::clear_has_atkally() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAllyWarGetRecordRsp::clear_atkally() {
  if (atkally_ != NULL) atkally_->::pb::TAllyWarAllyBaseInfo::Clear();
  clear_has_atkally();
}
inline const ::pb::TAllyWarAllyBaseInfo& TAllyWarGetRecordRsp::atkally() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetRecordRsp.AtkAlly)
  return atkally_ != NULL ? *atkally_ : *default_instance_->atkally_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetRecordRsp::mutable_atkally() {
  set_has_atkally();
  if (atkally_ == NULL) atkally_ = new ::pb::TAllyWarAllyBaseInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetRecordRsp.AtkAlly)
  return atkally_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetRecordRsp::release_atkally() {
  clear_has_atkally();
  ::pb::TAllyWarAllyBaseInfo* temp = atkally_;
  atkally_ = NULL;
  return temp;
}
inline void TAllyWarGetRecordRsp::set_allocated_atkally(::pb::TAllyWarAllyBaseInfo* atkally) {
  delete atkally_;
  atkally_ = atkally;
  if (atkally) {
    set_has_atkally();
  } else {
    clear_has_atkally();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarGetRecordRsp.AtkAlly)
}

// optional .pb.TAllyWarAllyBaseInfo DefAlly = 2;
inline bool TAllyWarGetRecordRsp::has_defally() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAllyWarGetRecordRsp::set_has_defally() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAllyWarGetRecordRsp::clear_has_defally() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAllyWarGetRecordRsp::clear_defally() {
  if (defally_ != NULL) defally_->::pb::TAllyWarAllyBaseInfo::Clear();
  clear_has_defally();
}
inline const ::pb::TAllyWarAllyBaseInfo& TAllyWarGetRecordRsp::defally() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetRecordRsp.DefAlly)
  return defally_ != NULL ? *defally_ : *default_instance_->defally_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetRecordRsp::mutable_defally() {
  set_has_defally();
  if (defally_ == NULL) defally_ = new ::pb::TAllyWarAllyBaseInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetRecordRsp.DefAlly)
  return defally_;
}
inline ::pb::TAllyWarAllyBaseInfo* TAllyWarGetRecordRsp::release_defally() {
  clear_has_defally();
  ::pb::TAllyWarAllyBaseInfo* temp = defally_;
  defally_ = NULL;
  return temp;
}
inline void TAllyWarGetRecordRsp::set_allocated_defally(::pb::TAllyWarAllyBaseInfo* defally) {
  delete defally_;
  defally_ = defally;
  if (defally) {
    set_has_defally();
  } else {
    clear_has_defally();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAllyWarGetRecordRsp.DefAlly)
}

// optional uint32 AtkScore = 3;
inline bool TAllyWarGetRecordRsp::has_atkscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAllyWarGetRecordRsp::set_has_atkscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAllyWarGetRecordRsp::clear_has_atkscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAllyWarGetRecordRsp::clear_atkscore() {
  atkscore_ = 0u;
  clear_has_atkscore();
}
inline ::google::protobuf::uint32 TAllyWarGetRecordRsp::atkscore() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetRecordRsp.AtkScore)
  return atkscore_;
}
inline void TAllyWarGetRecordRsp::set_atkscore(::google::protobuf::uint32 value) {
  set_has_atkscore();
  atkscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetRecordRsp.AtkScore)
}

// optional uint32 DefScore = 4;
inline bool TAllyWarGetRecordRsp::has_defscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAllyWarGetRecordRsp::set_has_defscore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAllyWarGetRecordRsp::clear_has_defscore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAllyWarGetRecordRsp::clear_defscore() {
  defscore_ = 0u;
  clear_has_defscore();
}
inline ::google::protobuf::uint32 TAllyWarGetRecordRsp::defscore() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetRecordRsp.DefScore)
  return defscore_;
}
inline void TAllyWarGetRecordRsp::set_defscore(::google::protobuf::uint32 value) {
  set_has_defscore();
  defscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetRecordRsp.DefScore)
}

// optional uint64 WinAllyId = 5;
inline bool TAllyWarGetRecordRsp::has_winallyid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TAllyWarGetRecordRsp::set_has_winallyid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TAllyWarGetRecordRsp::clear_has_winallyid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TAllyWarGetRecordRsp::clear_winallyid() {
  winallyid_ = GOOGLE_ULONGLONG(0);
  clear_has_winallyid();
}
inline ::google::protobuf::uint64 TAllyWarGetRecordRsp::winallyid() const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetRecordRsp.WinAllyId)
  return winallyid_;
}
inline void TAllyWarGetRecordRsp::set_winallyid(::google::protobuf::uint64 value) {
  set_has_winallyid();
  winallyid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAllyWarGetRecordRsp.WinAllyId)
}

// repeated .pb.TUserSimpleInfo ArrAtkUser = 6;
inline int TAllyWarGetRecordRsp::arratkuser_size() const {
  return arratkuser_.size();
}
inline void TAllyWarGetRecordRsp::clear_arratkuser() {
  arratkuser_.Clear();
}
inline const ::pb::TUserSimpleInfo& TAllyWarGetRecordRsp::arratkuser(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetRecordRsp.ArrAtkUser)
  return arratkuser_.Get(index);
}
inline ::pb::TUserSimpleInfo* TAllyWarGetRecordRsp::mutable_arratkuser(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetRecordRsp.ArrAtkUser)
  return arratkuser_.Mutable(index);
}
inline ::pb::TUserSimpleInfo* TAllyWarGetRecordRsp::add_arratkuser() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetRecordRsp.ArrAtkUser)
  return arratkuser_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >&
TAllyWarGetRecordRsp::arratkuser() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetRecordRsp.ArrAtkUser)
  return arratkuser_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >*
TAllyWarGetRecordRsp::mutable_arratkuser() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetRecordRsp.ArrAtkUser)
  return &arratkuser_;
}

// repeated .pb.TUserSimpleInfo ArrDefUser = 7;
inline int TAllyWarGetRecordRsp::arrdefuser_size() const {
  return arrdefuser_.size();
}
inline void TAllyWarGetRecordRsp::clear_arrdefuser() {
  arrdefuser_.Clear();
}
inline const ::pb::TUserSimpleInfo& TAllyWarGetRecordRsp::arrdefuser(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetRecordRsp.ArrDefUser)
  return arrdefuser_.Get(index);
}
inline ::pb::TUserSimpleInfo* TAllyWarGetRecordRsp::mutable_arrdefuser(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetRecordRsp.ArrDefUser)
  return arrdefuser_.Mutable(index);
}
inline ::pb::TUserSimpleInfo* TAllyWarGetRecordRsp::add_arrdefuser() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetRecordRsp.ArrDefUser)
  return arrdefuser_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >&
TAllyWarGetRecordRsp::arrdefuser() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetRecordRsp.ArrDefUser)
  return arrdefuser_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >*
TAllyWarGetRecordRsp::mutable_arrdefuser() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetRecordRsp.ArrDefUser)
  return &arrdefuser_;
}

// repeated .pb.TAllyWarAreaRecordInfo ArrAreaRecord = 8;
inline int TAllyWarGetRecordRsp::arrarearecord_size() const {
  return arrarearecord_.size();
}
inline void TAllyWarGetRecordRsp::clear_arrarearecord() {
  arrarearecord_.Clear();
}
inline const ::pb::TAllyWarAreaRecordInfo& TAllyWarGetRecordRsp::arrarearecord(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAllyWarGetRecordRsp.ArrAreaRecord)
  return arrarearecord_.Get(index);
}
inline ::pb::TAllyWarAreaRecordInfo* TAllyWarGetRecordRsp::mutable_arrarearecord(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAllyWarGetRecordRsp.ArrAreaRecord)
  return arrarearecord_.Mutable(index);
}
inline ::pb::TAllyWarAreaRecordInfo* TAllyWarGetRecordRsp::add_arrarearecord() {
  // @@protoc_insertion_point(field_add:pb.TAllyWarGetRecordRsp.ArrAreaRecord)
  return arrarearecord_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAreaRecordInfo >&
TAllyWarGetRecordRsp::arrarearecord() const {
  // @@protoc_insertion_point(field_list:pb.TAllyWarGetRecordRsp.ArrAreaRecord)
  return arrarearecord_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAllyWarAreaRecordInfo >*
TAllyWarGetRecordRsp::mutable_arrarearecord() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAllyWarGetRecordRsp.ArrAreaRecord)
  return &arrarearecord_;
}

// -------------------------------------------------------------------

// TInnerAllyWarGetServerTeamInfoRsp

// optional uint32 ServerTeamId = 1;
inline bool TInnerAllyWarGetServerTeamInfoRsp::has_serverteamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInnerAllyWarGetServerTeamInfoRsp::set_has_serverteamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInnerAllyWarGetServerTeamInfoRsp::clear_has_serverteamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInnerAllyWarGetServerTeamInfoRsp::clear_serverteamid() {
  serverteamid_ = 0u;
  clear_has_serverteamid();
}
inline ::google::protobuf::uint32 TInnerAllyWarGetServerTeamInfoRsp::serverteamid() const {
  // @@protoc_insertion_point(field_get:pb.TInnerAllyWarGetServerTeamInfoRsp.ServerTeamId)
  return serverteamid_;
}
inline void TInnerAllyWarGetServerTeamInfoRsp::set_serverteamid(::google::protobuf::uint32 value) {
  set_has_serverteamid();
  serverteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInnerAllyWarGetServerTeamInfoRsp.ServerTeamId)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::EAllyWarStage> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EAllyWarStage>() {
  return ::pb::EAllyWarStage_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fAllyWar_2eproto__INCLUDED
