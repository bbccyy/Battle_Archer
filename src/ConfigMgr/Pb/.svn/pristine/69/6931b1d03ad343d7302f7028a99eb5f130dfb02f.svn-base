// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/FemaleMaster.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/FemaleMaster.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TFemaleMasterGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFemaleMasterGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFemaleMasterDialogInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFemaleMasterDialogInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFemaleMasterStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFemaleMasterStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFemaleMasterSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFemaleMasterSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFemaleMasterInfoNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFemaleMasterInfoNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFemaleMasterInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFemaleMasterInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFemaleMasterGiveGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFemaleMasterGiveGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFemaleMasterRecordDialogReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFemaleMasterRecordDialogReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EFemaleMasterStatusType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fFemaleMaster_2eproto() {
  protobuf_AddDesc_net_2fFemaleMaster_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/FemaleMaster.proto");
  GOOGLE_CHECK(file != NULL);
  TFemaleMasterGift_descriptor_ = file->message_type(0);
  static const int TFemaleMasterGift_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterGift, gifttid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterGift, num_),
  };
  TFemaleMasterGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFemaleMasterGift_descriptor_,
      TFemaleMasterGift::default_instance_,
      TFemaleMasterGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFemaleMasterGift));
  TFemaleMasterDialogInfo_descriptor_ = file->message_type(1);
  static const int TFemaleMasterDialogInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterDialogInfo, tasktid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterDialogInfo, dialogid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterDialogInfo, dialogcontentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterDialogInfo, isend_),
  };
  TFemaleMasterDialogInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFemaleMasterDialogInfo_descriptor_,
      TFemaleMasterDialogInfo::default_instance_,
      TFemaleMasterDialogInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterDialogInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterDialogInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFemaleMasterDialogInfo));
  TFemaleMasterStatus_descriptor_ = file->message_type(2);
  static const int TFemaleMasterStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterStatus, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterStatus, resettime_),
  };
  TFemaleMasterStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFemaleMasterStatus_descriptor_,
      TFemaleMasterStatus::default_instance_,
      TFemaleMasterStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFemaleMasterStatus));
  TFemaleMasterSingle_descriptor_ = file->message_type(3);
  static const int TFemaleMasterSingle_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterSingle, femalemastertid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterSingle, feelinglv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterSingle, feelingexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterSingle, statusarr_),
  };
  TFemaleMasterSingle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFemaleMasterSingle_descriptor_,
      TFemaleMasterSingle::default_instance_,
      TFemaleMasterSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterSingle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterSingle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFemaleMasterSingle));
  TFemaleMasterInfoNotify_descriptor_ = file->message_type(4);
  static const int TFemaleMasterInfoNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterInfoNotify, dialogtaskarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterInfoNotify, femalemasterarr_),
  };
  TFemaleMasterInfoNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFemaleMasterInfoNotify_descriptor_,
      TFemaleMasterInfoNotify::default_instance_,
      TFemaleMasterInfoNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterInfoNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterInfoNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFemaleMasterInfoNotify));
  TFemaleMasterInfoRsp_descriptor_ = file->message_type(5);
  static const int TFemaleMasterInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterInfoRsp, dialogtaskarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterInfoRsp, femalemasterarr_),
  };
  TFemaleMasterInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFemaleMasterInfoRsp_descriptor_,
      TFemaleMasterInfoRsp::default_instance_,
      TFemaleMasterInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFemaleMasterInfoRsp));
  TFemaleMasterGiveGiftReq_descriptor_ = file->message_type(6);
  static const int TFemaleMasterGiveGiftReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterGiveGiftReq, femalemastertid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterGiveGiftReq, gifttid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterGiveGiftReq, num_),
  };
  TFemaleMasterGiveGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFemaleMasterGiveGiftReq_descriptor_,
      TFemaleMasterGiveGiftReq::default_instance_,
      TFemaleMasterGiveGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterGiveGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterGiveGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFemaleMasterGiveGiftReq));
  TFemaleMasterRecordDialogReq_descriptor_ = file->message_type(7);
  static const int TFemaleMasterRecordDialogReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterRecordDialogReq, femalemastertid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterRecordDialogReq, dialoginfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterRecordDialogReq, addfeelingnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterRecordDialogReq, angrytime_),
  };
  TFemaleMasterRecordDialogReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFemaleMasterRecordDialogReq_descriptor_,
      TFemaleMasterRecordDialogReq::default_instance_,
      TFemaleMasterRecordDialogReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterRecordDialogReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFemaleMasterRecordDialogReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFemaleMasterRecordDialogReq));
  EFemaleMasterStatusType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fFemaleMaster_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFemaleMasterGift_descriptor_, &TFemaleMasterGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFemaleMasterDialogInfo_descriptor_, &TFemaleMasterDialogInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFemaleMasterStatus_descriptor_, &TFemaleMasterStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFemaleMasterSingle_descriptor_, &TFemaleMasterSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFemaleMasterInfoNotify_descriptor_, &TFemaleMasterInfoNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFemaleMasterInfoRsp_descriptor_, &TFemaleMasterInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFemaleMasterGiveGiftReq_descriptor_, &TFemaleMasterGiveGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFemaleMasterRecordDialogReq_descriptor_, &TFemaleMasterRecordDialogReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fFemaleMaster_2eproto() {
  delete TFemaleMasterGift::default_instance_;
  delete TFemaleMasterGift_reflection_;
  delete TFemaleMasterDialogInfo::default_instance_;
  delete TFemaleMasterDialogInfo_reflection_;
  delete TFemaleMasterStatus::default_instance_;
  delete TFemaleMasterStatus_reflection_;
  delete TFemaleMasterSingle::default_instance_;
  delete TFemaleMasterSingle_reflection_;
  delete TFemaleMasterInfoNotify::default_instance_;
  delete TFemaleMasterInfoNotify_reflection_;
  delete TFemaleMasterInfoRsp::default_instance_;
  delete TFemaleMasterInfoRsp_reflection_;
  delete TFemaleMasterGiveGiftReq::default_instance_;
  delete TFemaleMasterGiveGiftReq_reflection_;
  delete TFemaleMasterRecordDialogReq::default_instance_;
  delete TFemaleMasterRecordDialogReq_reflection_;
}

void protobuf_AddDesc_net_2fFemaleMaster_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026net/FemaleMaster.proto\022\002pb\"1\n\021TFemaleM"
    "asterGift\022\017\n\007GiftTid\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\""
    "d\n\027TFemaleMasterDialogInfo\022\017\n\007TaskTid\030\001 "
    "\001(\r\022\020\n\010DialogId\030\002 \001(\r\022\027\n\017DialogContentID"
    "\030\003 \001(\r\022\r\n\005IsEnd\030\004 \001(\010\"U\n\023TFemaleMasterSt"
    "atus\022+\n\006Status\030\001 \001(\0162\033.pb.EFemaleMasterS"
    "tatusType\022\021\n\tResetTime\030\002 \001(\003\"\201\001\n\023TFemale"
    "MasterSingle\022\027\n\017FemaleMasterTid\030\001 \001(\r\022\021\n"
    "\tFeelingLv\030\002 \001(\r\022\022\n\nFeelingExp\030\003 \001(\r\022*\n\t"
    "StatusArr\030\004 \003(\0132\027.pb.TFemaleMasterStatus"
    "\"\177\n\027TFemaleMasterInfoNotify\0222\n\rDialogTas"
    "kArr\030\001 \003(\0132\033.pb.TFemaleMasterDialogInfo\022"
    "0\n\017FemaleMasterArr\030\002 \003(\0132\027.pb.TFemaleMas"
    "terSingle\"|\n\024TFemaleMasterInfoRsp\0222\n\rDia"
    "logTaskArr\030\001 \003(\0132\033.pb.TFemaleMasterDialo"
    "gInfo\0220\n\017FemaleMasterArr\030\002 \003(\0132\027.pb.TFem"
    "aleMasterSingle\"Q\n\030TFemaleMasterGiveGift"
    "Req\022\027\n\017FemaleMasterTid\030\001 \001(\r\022\017\n\007GiftTid\030"
    "\002 \001(\r\022\013\n\003Num\030\003 \001(\r\"\222\001\n\034TFemaleMasterReco"
    "rdDialogReq\022\027\n\017FemaleMasterTid\030\001 \001(\005\022/\n\n"
    "DialogInfo\030\002 \001(\0132\033.pb.TFemaleMasterDialo"
    "gInfo\022\025\n\rAddFeelingNum\030\003 \001(\005\022\021\n\tAngryTim"
    "e\030\004 \001(\005*D\n\027EFemaleMasterStatusType\022\010\n\004Nu"
    "ll\020\000\022\t\n\005Fight\020\001\022\t\n\005Leave\020\002\022\t\n\005Anger\020\003", 957);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/FemaleMaster.proto", &protobuf_RegisterTypes);
  TFemaleMasterGift::default_instance_ = new TFemaleMasterGift();
  TFemaleMasterDialogInfo::default_instance_ = new TFemaleMasterDialogInfo();
  TFemaleMasterStatus::default_instance_ = new TFemaleMasterStatus();
  TFemaleMasterSingle::default_instance_ = new TFemaleMasterSingle();
  TFemaleMasterInfoNotify::default_instance_ = new TFemaleMasterInfoNotify();
  TFemaleMasterInfoRsp::default_instance_ = new TFemaleMasterInfoRsp();
  TFemaleMasterGiveGiftReq::default_instance_ = new TFemaleMasterGiveGiftReq();
  TFemaleMasterRecordDialogReq::default_instance_ = new TFemaleMasterRecordDialogReq();
  TFemaleMasterGift::default_instance_->InitAsDefaultInstance();
  TFemaleMasterDialogInfo::default_instance_->InitAsDefaultInstance();
  TFemaleMasterStatus::default_instance_->InitAsDefaultInstance();
  TFemaleMasterSingle::default_instance_->InitAsDefaultInstance();
  TFemaleMasterInfoNotify::default_instance_->InitAsDefaultInstance();
  TFemaleMasterInfoRsp::default_instance_->InitAsDefaultInstance();
  TFemaleMasterGiveGiftReq::default_instance_->InitAsDefaultInstance();
  TFemaleMasterRecordDialogReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fFemaleMaster_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fFemaleMaster_2eproto {
  StaticDescriptorInitializer_net_2fFemaleMaster_2eproto() {
    protobuf_AddDesc_net_2fFemaleMaster_2eproto();
  }
} static_descriptor_initializer_net_2fFemaleMaster_2eproto_;
const ::google::protobuf::EnumDescriptor* EFemaleMasterStatusType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EFemaleMasterStatusType_descriptor_;
}
bool EFemaleMasterStatusType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TFemaleMasterGift::kGiftTidFieldNumber;
const int TFemaleMasterGift::kNumFieldNumber;
#endif  // !_MSC_VER

TFemaleMasterGift::TFemaleMasterGift()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFemaleMasterGift)
}

void TFemaleMasterGift::InitAsDefaultInstance() {
}

TFemaleMasterGift::TFemaleMasterGift(const TFemaleMasterGift& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFemaleMasterGift)
}

void TFemaleMasterGift::SharedCtor() {
  _cached_size_ = 0;
  gifttid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFemaleMasterGift::~TFemaleMasterGift() {
  // @@protoc_insertion_point(destructor:pb.TFemaleMasterGift)
  SharedDtor();
}

void TFemaleMasterGift::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFemaleMasterGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFemaleMasterGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFemaleMasterGift_descriptor_;
}

const TFemaleMasterGift& TFemaleMasterGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFemaleMaster_2eproto();
  return *default_instance_;
}

TFemaleMasterGift* TFemaleMasterGift::default_instance_ = NULL;

TFemaleMasterGift* TFemaleMasterGift::New() const {
  return new TFemaleMasterGift;
}

void TFemaleMasterGift::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFemaleMasterGift*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(gifttid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFemaleMasterGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFemaleMasterGift)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GiftTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifttid_)));
          set_has_gifttid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFemaleMasterGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFemaleMasterGift)
  return false;
#undef DO_
}

void TFemaleMasterGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFemaleMasterGift)
  // optional uint32 GiftTid = 1;
  if (has_gifttid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gifttid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFemaleMasterGift)
}

::google::protobuf::uint8* TFemaleMasterGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFemaleMasterGift)
  // optional uint32 GiftTid = 1;
  if (has_gifttid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gifttid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFemaleMasterGift)
  return target;
}

int TFemaleMasterGift::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GiftTid = 1;
    if (has_gifttid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifttid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFemaleMasterGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFemaleMasterGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFemaleMasterGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFemaleMasterGift::MergeFrom(const TFemaleMasterGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gifttid()) {
      set_gifttid(from.gifttid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFemaleMasterGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFemaleMasterGift::CopyFrom(const TFemaleMasterGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFemaleMasterGift::IsInitialized() const {

  return true;
}

void TFemaleMasterGift::Swap(TFemaleMasterGift* other) {
  if (other != this) {
    std::swap(gifttid_, other->gifttid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFemaleMasterGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFemaleMasterGift_descriptor_;
  metadata.reflection = TFemaleMasterGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFemaleMasterDialogInfo::kTaskTidFieldNumber;
const int TFemaleMasterDialogInfo::kDialogIdFieldNumber;
const int TFemaleMasterDialogInfo::kDialogContentIDFieldNumber;
const int TFemaleMasterDialogInfo::kIsEndFieldNumber;
#endif  // !_MSC_VER

TFemaleMasterDialogInfo::TFemaleMasterDialogInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFemaleMasterDialogInfo)
}

void TFemaleMasterDialogInfo::InitAsDefaultInstance() {
}

TFemaleMasterDialogInfo::TFemaleMasterDialogInfo(const TFemaleMasterDialogInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFemaleMasterDialogInfo)
}

void TFemaleMasterDialogInfo::SharedCtor() {
  _cached_size_ = 0;
  tasktid_ = 0u;
  dialogid_ = 0u;
  dialogcontentid_ = 0u;
  isend_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFemaleMasterDialogInfo::~TFemaleMasterDialogInfo() {
  // @@protoc_insertion_point(destructor:pb.TFemaleMasterDialogInfo)
  SharedDtor();
}

void TFemaleMasterDialogInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFemaleMasterDialogInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFemaleMasterDialogInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFemaleMasterDialogInfo_descriptor_;
}

const TFemaleMasterDialogInfo& TFemaleMasterDialogInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFemaleMaster_2eproto();
  return *default_instance_;
}

TFemaleMasterDialogInfo* TFemaleMasterDialogInfo::default_instance_ = NULL;

TFemaleMasterDialogInfo* TFemaleMasterDialogInfo::New() const {
  return new TFemaleMasterDialogInfo;
}

void TFemaleMasterDialogInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFemaleMasterDialogInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tasktid_, isend_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFemaleMasterDialogInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFemaleMasterDialogInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TaskTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tasktid_)));
          set_has_tasktid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DialogId;
        break;
      }

      // optional uint32 DialogId = 2;
      case 2: {
        if (tag == 16) {
         parse_DialogId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dialogid_)));
          set_has_dialogid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_DialogContentID;
        break;
      }

      // optional uint32 DialogContentID = 3;
      case 3: {
        if (tag == 24) {
         parse_DialogContentID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dialogcontentid_)));
          set_has_dialogcontentid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_IsEnd;
        break;
      }

      // optional bool IsEnd = 4;
      case 4: {
        if (tag == 32) {
         parse_IsEnd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isend_)));
          set_has_isend();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFemaleMasterDialogInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFemaleMasterDialogInfo)
  return false;
#undef DO_
}

void TFemaleMasterDialogInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFemaleMasterDialogInfo)
  // optional uint32 TaskTid = 1;
  if (has_tasktid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tasktid(), output);
  }

  // optional uint32 DialogId = 2;
  if (has_dialogid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dialogid(), output);
  }

  // optional uint32 DialogContentID = 3;
  if (has_dialogcontentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dialogcontentid(), output);
  }

  // optional bool IsEnd = 4;
  if (has_isend()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isend(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFemaleMasterDialogInfo)
}

::google::protobuf::uint8* TFemaleMasterDialogInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFemaleMasterDialogInfo)
  // optional uint32 TaskTid = 1;
  if (has_tasktid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tasktid(), target);
  }

  // optional uint32 DialogId = 2;
  if (has_dialogid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dialogid(), target);
  }

  // optional uint32 DialogContentID = 3;
  if (has_dialogcontentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dialogcontentid(), target);
  }

  // optional bool IsEnd = 4;
  if (has_isend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isend(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFemaleMasterDialogInfo)
  return target;
}

int TFemaleMasterDialogInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TaskTid = 1;
    if (has_tasktid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tasktid());
    }

    // optional uint32 DialogId = 2;
    if (has_dialogid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dialogid());
    }

    // optional uint32 DialogContentID = 3;
    if (has_dialogcontentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dialogcontentid());
    }

    // optional bool IsEnd = 4;
    if (has_isend()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFemaleMasterDialogInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFemaleMasterDialogInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFemaleMasterDialogInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFemaleMasterDialogInfo::MergeFrom(const TFemaleMasterDialogInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tasktid()) {
      set_tasktid(from.tasktid());
    }
    if (from.has_dialogid()) {
      set_dialogid(from.dialogid());
    }
    if (from.has_dialogcontentid()) {
      set_dialogcontentid(from.dialogcontentid());
    }
    if (from.has_isend()) {
      set_isend(from.isend());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFemaleMasterDialogInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFemaleMasterDialogInfo::CopyFrom(const TFemaleMasterDialogInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFemaleMasterDialogInfo::IsInitialized() const {

  return true;
}

void TFemaleMasterDialogInfo::Swap(TFemaleMasterDialogInfo* other) {
  if (other != this) {
    std::swap(tasktid_, other->tasktid_);
    std::swap(dialogid_, other->dialogid_);
    std::swap(dialogcontentid_, other->dialogcontentid_);
    std::swap(isend_, other->isend_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFemaleMasterDialogInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFemaleMasterDialogInfo_descriptor_;
  metadata.reflection = TFemaleMasterDialogInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFemaleMasterStatus::kStatusFieldNumber;
const int TFemaleMasterStatus::kResetTimeFieldNumber;
#endif  // !_MSC_VER

TFemaleMasterStatus::TFemaleMasterStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFemaleMasterStatus)
}

void TFemaleMasterStatus::InitAsDefaultInstance() {
}

TFemaleMasterStatus::TFemaleMasterStatus(const TFemaleMasterStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFemaleMasterStatus)
}

void TFemaleMasterStatus::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  resettime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFemaleMasterStatus::~TFemaleMasterStatus() {
  // @@protoc_insertion_point(destructor:pb.TFemaleMasterStatus)
  SharedDtor();
}

void TFemaleMasterStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFemaleMasterStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFemaleMasterStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFemaleMasterStatus_descriptor_;
}

const TFemaleMasterStatus& TFemaleMasterStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFemaleMaster_2eproto();
  return *default_instance_;
}

TFemaleMasterStatus* TFemaleMasterStatus::default_instance_ = NULL;

TFemaleMasterStatus* TFemaleMasterStatus::New() const {
  return new TFemaleMasterStatus;
}

void TFemaleMasterStatus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFemaleMasterStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(resettime_, status_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFemaleMasterStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFemaleMasterStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.EFemaleMasterStatusType Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EFemaleMasterStatusType_IsValid(value)) {
            set_status(static_cast< ::pb::EFemaleMasterStatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ResetTime;
        break;
      }

      // optional int64 ResetTime = 2;
      case 2: {
        if (tag == 16) {
         parse_ResetTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &resettime_)));
          set_has_resettime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFemaleMasterStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFemaleMasterStatus)
  return false;
#undef DO_
}

void TFemaleMasterStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFemaleMasterStatus)
  // optional .pb.EFemaleMasterStatusType Status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional int64 ResetTime = 2;
  if (has_resettime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->resettime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFemaleMasterStatus)
}

::google::protobuf::uint8* TFemaleMasterStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFemaleMasterStatus)
  // optional .pb.EFemaleMasterStatusType Status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional int64 ResetTime = 2;
  if (has_resettime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->resettime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFemaleMasterStatus)
  return target;
}

int TFemaleMasterStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.EFemaleMasterStatusType Status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional int64 ResetTime = 2;
    if (has_resettime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->resettime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFemaleMasterStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFemaleMasterStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFemaleMasterStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFemaleMasterStatus::MergeFrom(const TFemaleMasterStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_resettime()) {
      set_resettime(from.resettime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFemaleMasterStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFemaleMasterStatus::CopyFrom(const TFemaleMasterStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFemaleMasterStatus::IsInitialized() const {

  return true;
}

void TFemaleMasterStatus::Swap(TFemaleMasterStatus* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(resettime_, other->resettime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFemaleMasterStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFemaleMasterStatus_descriptor_;
  metadata.reflection = TFemaleMasterStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFemaleMasterSingle::kFemaleMasterTidFieldNumber;
const int TFemaleMasterSingle::kFeelingLvFieldNumber;
const int TFemaleMasterSingle::kFeelingExpFieldNumber;
const int TFemaleMasterSingle::kStatusArrFieldNumber;
#endif  // !_MSC_VER

TFemaleMasterSingle::TFemaleMasterSingle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFemaleMasterSingle)
}

void TFemaleMasterSingle::InitAsDefaultInstance() {
}

TFemaleMasterSingle::TFemaleMasterSingle(const TFemaleMasterSingle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFemaleMasterSingle)
}

void TFemaleMasterSingle::SharedCtor() {
  _cached_size_ = 0;
  femalemastertid_ = 0u;
  feelinglv_ = 0u;
  feelingexp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFemaleMasterSingle::~TFemaleMasterSingle() {
  // @@protoc_insertion_point(destructor:pb.TFemaleMasterSingle)
  SharedDtor();
}

void TFemaleMasterSingle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFemaleMasterSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFemaleMasterSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFemaleMasterSingle_descriptor_;
}

const TFemaleMasterSingle& TFemaleMasterSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFemaleMaster_2eproto();
  return *default_instance_;
}

TFemaleMasterSingle* TFemaleMasterSingle::default_instance_ = NULL;

TFemaleMasterSingle* TFemaleMasterSingle::New() const {
  return new TFemaleMasterSingle;
}

void TFemaleMasterSingle::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFemaleMasterSingle*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(femalemastertid_, feelinglv_);
    feelingexp_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  statusarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFemaleMasterSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFemaleMasterSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FemaleMasterTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &femalemastertid_)));
          set_has_femalemastertid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FeelingLv;
        break;
      }

      // optional uint32 FeelingLv = 2;
      case 2: {
        if (tag == 16) {
         parse_FeelingLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &feelinglv_)));
          set_has_feelinglv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_FeelingExp;
        break;
      }

      // optional uint32 FeelingExp = 3;
      case 3: {
        if (tag == 24) {
         parse_FeelingExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &feelingexp_)));
          set_has_feelingexp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_StatusArr;
        break;
      }

      // repeated .pb.TFemaleMasterStatus StatusArr = 4;
      case 4: {
        if (tag == 34) {
         parse_StatusArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_statusarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_StatusArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFemaleMasterSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFemaleMasterSingle)
  return false;
#undef DO_
}

void TFemaleMasterSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFemaleMasterSingle)
  // optional uint32 FemaleMasterTid = 1;
  if (has_femalemastertid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->femalemastertid(), output);
  }

  // optional uint32 FeelingLv = 2;
  if (has_feelinglv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->feelinglv(), output);
  }

  // optional uint32 FeelingExp = 3;
  if (has_feelingexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->feelingexp(), output);
  }

  // repeated .pb.TFemaleMasterStatus StatusArr = 4;
  for (int i = 0; i < this->statusarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->statusarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFemaleMasterSingle)
}

::google::protobuf::uint8* TFemaleMasterSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFemaleMasterSingle)
  // optional uint32 FemaleMasterTid = 1;
  if (has_femalemastertid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->femalemastertid(), target);
  }

  // optional uint32 FeelingLv = 2;
  if (has_feelinglv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->feelinglv(), target);
  }

  // optional uint32 FeelingExp = 3;
  if (has_feelingexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->feelingexp(), target);
  }

  // repeated .pb.TFemaleMasterStatus StatusArr = 4;
  for (int i = 0; i < this->statusarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->statusarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFemaleMasterSingle)
  return target;
}

int TFemaleMasterSingle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FemaleMasterTid = 1;
    if (has_femalemastertid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->femalemastertid());
    }

    // optional uint32 FeelingLv = 2;
    if (has_feelinglv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->feelinglv());
    }

    // optional uint32 FeelingExp = 3;
    if (has_feelingexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->feelingexp());
    }

  }
  // repeated .pb.TFemaleMasterStatus StatusArr = 4;
  total_size += 1 * this->statusarr_size();
  for (int i = 0; i < this->statusarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->statusarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFemaleMasterSingle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFemaleMasterSingle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFemaleMasterSingle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFemaleMasterSingle::MergeFrom(const TFemaleMasterSingle& from) {
  GOOGLE_CHECK_NE(&from, this);
  statusarr_.MergeFrom(from.statusarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_femalemastertid()) {
      set_femalemastertid(from.femalemastertid());
    }
    if (from.has_feelinglv()) {
      set_feelinglv(from.feelinglv());
    }
    if (from.has_feelingexp()) {
      set_feelingexp(from.feelingexp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFemaleMasterSingle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFemaleMasterSingle::CopyFrom(const TFemaleMasterSingle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFemaleMasterSingle::IsInitialized() const {

  return true;
}

void TFemaleMasterSingle::Swap(TFemaleMasterSingle* other) {
  if (other != this) {
    std::swap(femalemastertid_, other->femalemastertid_);
    std::swap(feelinglv_, other->feelinglv_);
    std::swap(feelingexp_, other->feelingexp_);
    statusarr_.Swap(&other->statusarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFemaleMasterSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFemaleMasterSingle_descriptor_;
  metadata.reflection = TFemaleMasterSingle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFemaleMasterInfoNotify::kDialogTaskArrFieldNumber;
const int TFemaleMasterInfoNotify::kFemaleMasterArrFieldNumber;
#endif  // !_MSC_VER

TFemaleMasterInfoNotify::TFemaleMasterInfoNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFemaleMasterInfoNotify)
}

void TFemaleMasterInfoNotify::InitAsDefaultInstance() {
}

TFemaleMasterInfoNotify::TFemaleMasterInfoNotify(const TFemaleMasterInfoNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFemaleMasterInfoNotify)
}

void TFemaleMasterInfoNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFemaleMasterInfoNotify::~TFemaleMasterInfoNotify() {
  // @@protoc_insertion_point(destructor:pb.TFemaleMasterInfoNotify)
  SharedDtor();
}

void TFemaleMasterInfoNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFemaleMasterInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFemaleMasterInfoNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFemaleMasterInfoNotify_descriptor_;
}

const TFemaleMasterInfoNotify& TFemaleMasterInfoNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFemaleMaster_2eproto();
  return *default_instance_;
}

TFemaleMasterInfoNotify* TFemaleMasterInfoNotify::default_instance_ = NULL;

TFemaleMasterInfoNotify* TFemaleMasterInfoNotify::New() const {
  return new TFemaleMasterInfoNotify;
}

void TFemaleMasterInfoNotify::Clear() {
  dialogtaskarr_.Clear();
  femalemasterarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFemaleMasterInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFemaleMasterInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TFemaleMasterDialogInfo DialogTaskArr = 1;
      case 1: {
        if (tag == 10) {
         parse_DialogTaskArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dialogtaskarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DialogTaskArr;
        if (input->ExpectTag(18)) goto parse_FemaleMasterArr;
        break;
      }

      // repeated .pb.TFemaleMasterSingle FemaleMasterArr = 2;
      case 2: {
        if (tag == 18) {
         parse_FemaleMasterArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_femalemasterarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_FemaleMasterArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFemaleMasterInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFemaleMasterInfoNotify)
  return false;
#undef DO_
}

void TFemaleMasterInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFemaleMasterInfoNotify)
  // repeated .pb.TFemaleMasterDialogInfo DialogTaskArr = 1;
  for (int i = 0; i < this->dialogtaskarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dialogtaskarr(i), output);
  }

  // repeated .pb.TFemaleMasterSingle FemaleMasterArr = 2;
  for (int i = 0; i < this->femalemasterarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->femalemasterarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFemaleMasterInfoNotify)
}

::google::protobuf::uint8* TFemaleMasterInfoNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFemaleMasterInfoNotify)
  // repeated .pb.TFemaleMasterDialogInfo DialogTaskArr = 1;
  for (int i = 0; i < this->dialogtaskarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dialogtaskarr(i), target);
  }

  // repeated .pb.TFemaleMasterSingle FemaleMasterArr = 2;
  for (int i = 0; i < this->femalemasterarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->femalemasterarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFemaleMasterInfoNotify)
  return target;
}

int TFemaleMasterInfoNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TFemaleMasterDialogInfo DialogTaskArr = 1;
  total_size += 1 * this->dialogtaskarr_size();
  for (int i = 0; i < this->dialogtaskarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dialogtaskarr(i));
  }

  // repeated .pb.TFemaleMasterSingle FemaleMasterArr = 2;
  total_size += 1 * this->femalemasterarr_size();
  for (int i = 0; i < this->femalemasterarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->femalemasterarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFemaleMasterInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFemaleMasterInfoNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFemaleMasterInfoNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFemaleMasterInfoNotify::MergeFrom(const TFemaleMasterInfoNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  dialogtaskarr_.MergeFrom(from.dialogtaskarr_);
  femalemasterarr_.MergeFrom(from.femalemasterarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFemaleMasterInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFemaleMasterInfoNotify::CopyFrom(const TFemaleMasterInfoNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFemaleMasterInfoNotify::IsInitialized() const {

  return true;
}

void TFemaleMasterInfoNotify::Swap(TFemaleMasterInfoNotify* other) {
  if (other != this) {
    dialogtaskarr_.Swap(&other->dialogtaskarr_);
    femalemasterarr_.Swap(&other->femalemasterarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFemaleMasterInfoNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFemaleMasterInfoNotify_descriptor_;
  metadata.reflection = TFemaleMasterInfoNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFemaleMasterInfoRsp::kDialogTaskArrFieldNumber;
const int TFemaleMasterInfoRsp::kFemaleMasterArrFieldNumber;
#endif  // !_MSC_VER

TFemaleMasterInfoRsp::TFemaleMasterInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFemaleMasterInfoRsp)
}

void TFemaleMasterInfoRsp::InitAsDefaultInstance() {
}

TFemaleMasterInfoRsp::TFemaleMasterInfoRsp(const TFemaleMasterInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFemaleMasterInfoRsp)
}

void TFemaleMasterInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFemaleMasterInfoRsp::~TFemaleMasterInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TFemaleMasterInfoRsp)
  SharedDtor();
}

void TFemaleMasterInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFemaleMasterInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFemaleMasterInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFemaleMasterInfoRsp_descriptor_;
}

const TFemaleMasterInfoRsp& TFemaleMasterInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFemaleMaster_2eproto();
  return *default_instance_;
}

TFemaleMasterInfoRsp* TFemaleMasterInfoRsp::default_instance_ = NULL;

TFemaleMasterInfoRsp* TFemaleMasterInfoRsp::New() const {
  return new TFemaleMasterInfoRsp;
}

void TFemaleMasterInfoRsp::Clear() {
  dialogtaskarr_.Clear();
  femalemasterarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFemaleMasterInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFemaleMasterInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TFemaleMasterDialogInfo DialogTaskArr = 1;
      case 1: {
        if (tag == 10) {
         parse_DialogTaskArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dialogtaskarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DialogTaskArr;
        if (input->ExpectTag(18)) goto parse_FemaleMasterArr;
        break;
      }

      // repeated .pb.TFemaleMasterSingle FemaleMasterArr = 2;
      case 2: {
        if (tag == 18) {
         parse_FemaleMasterArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_femalemasterarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_FemaleMasterArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFemaleMasterInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFemaleMasterInfoRsp)
  return false;
#undef DO_
}

void TFemaleMasterInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFemaleMasterInfoRsp)
  // repeated .pb.TFemaleMasterDialogInfo DialogTaskArr = 1;
  for (int i = 0; i < this->dialogtaskarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dialogtaskarr(i), output);
  }

  // repeated .pb.TFemaleMasterSingle FemaleMasterArr = 2;
  for (int i = 0; i < this->femalemasterarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->femalemasterarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFemaleMasterInfoRsp)
}

::google::protobuf::uint8* TFemaleMasterInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFemaleMasterInfoRsp)
  // repeated .pb.TFemaleMasterDialogInfo DialogTaskArr = 1;
  for (int i = 0; i < this->dialogtaskarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dialogtaskarr(i), target);
  }

  // repeated .pb.TFemaleMasterSingle FemaleMasterArr = 2;
  for (int i = 0; i < this->femalemasterarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->femalemasterarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFemaleMasterInfoRsp)
  return target;
}

int TFemaleMasterInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TFemaleMasterDialogInfo DialogTaskArr = 1;
  total_size += 1 * this->dialogtaskarr_size();
  for (int i = 0; i < this->dialogtaskarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dialogtaskarr(i));
  }

  // repeated .pb.TFemaleMasterSingle FemaleMasterArr = 2;
  total_size += 1 * this->femalemasterarr_size();
  for (int i = 0; i < this->femalemasterarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->femalemasterarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFemaleMasterInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFemaleMasterInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFemaleMasterInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFemaleMasterInfoRsp::MergeFrom(const TFemaleMasterInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  dialogtaskarr_.MergeFrom(from.dialogtaskarr_);
  femalemasterarr_.MergeFrom(from.femalemasterarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFemaleMasterInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFemaleMasterInfoRsp::CopyFrom(const TFemaleMasterInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFemaleMasterInfoRsp::IsInitialized() const {

  return true;
}

void TFemaleMasterInfoRsp::Swap(TFemaleMasterInfoRsp* other) {
  if (other != this) {
    dialogtaskarr_.Swap(&other->dialogtaskarr_);
    femalemasterarr_.Swap(&other->femalemasterarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFemaleMasterInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFemaleMasterInfoRsp_descriptor_;
  metadata.reflection = TFemaleMasterInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFemaleMasterGiveGiftReq::kFemaleMasterTidFieldNumber;
const int TFemaleMasterGiveGiftReq::kGiftTidFieldNumber;
const int TFemaleMasterGiveGiftReq::kNumFieldNumber;
#endif  // !_MSC_VER

TFemaleMasterGiveGiftReq::TFemaleMasterGiveGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFemaleMasterGiveGiftReq)
}

void TFemaleMasterGiveGiftReq::InitAsDefaultInstance() {
}

TFemaleMasterGiveGiftReq::TFemaleMasterGiveGiftReq(const TFemaleMasterGiveGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFemaleMasterGiveGiftReq)
}

void TFemaleMasterGiveGiftReq::SharedCtor() {
  _cached_size_ = 0;
  femalemastertid_ = 0u;
  gifttid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFemaleMasterGiveGiftReq::~TFemaleMasterGiveGiftReq() {
  // @@protoc_insertion_point(destructor:pb.TFemaleMasterGiveGiftReq)
  SharedDtor();
}

void TFemaleMasterGiveGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFemaleMasterGiveGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFemaleMasterGiveGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFemaleMasterGiveGiftReq_descriptor_;
}

const TFemaleMasterGiveGiftReq& TFemaleMasterGiveGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFemaleMaster_2eproto();
  return *default_instance_;
}

TFemaleMasterGiveGiftReq* TFemaleMasterGiveGiftReq::default_instance_ = NULL;

TFemaleMasterGiveGiftReq* TFemaleMasterGiveGiftReq::New() const {
  return new TFemaleMasterGiveGiftReq;
}

void TFemaleMasterGiveGiftReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFemaleMasterGiveGiftReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(femalemastertid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFemaleMasterGiveGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFemaleMasterGiveGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FemaleMasterTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &femalemastertid_)));
          set_has_femalemastertid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_GiftTid;
        break;
      }

      // optional uint32 GiftTid = 2;
      case 2: {
        if (tag == 16) {
         parse_GiftTid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifttid_)));
          set_has_gifttid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 3;
      case 3: {
        if (tag == 24) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFemaleMasterGiveGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFemaleMasterGiveGiftReq)
  return false;
#undef DO_
}

void TFemaleMasterGiveGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFemaleMasterGiveGiftReq)
  // optional uint32 FemaleMasterTid = 1;
  if (has_femalemastertid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->femalemastertid(), output);
  }

  // optional uint32 GiftTid = 2;
  if (has_gifttid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gifttid(), output);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFemaleMasterGiveGiftReq)
}

::google::protobuf::uint8* TFemaleMasterGiveGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFemaleMasterGiveGiftReq)
  // optional uint32 FemaleMasterTid = 1;
  if (has_femalemastertid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->femalemastertid(), target);
  }

  // optional uint32 GiftTid = 2;
  if (has_gifttid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gifttid(), target);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFemaleMasterGiveGiftReq)
  return target;
}

int TFemaleMasterGiveGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FemaleMasterTid = 1;
    if (has_femalemastertid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->femalemastertid());
    }

    // optional uint32 GiftTid = 2;
    if (has_gifttid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifttid());
    }

    // optional uint32 Num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFemaleMasterGiveGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFemaleMasterGiveGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFemaleMasterGiveGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFemaleMasterGiveGiftReq::MergeFrom(const TFemaleMasterGiveGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_femalemastertid()) {
      set_femalemastertid(from.femalemastertid());
    }
    if (from.has_gifttid()) {
      set_gifttid(from.gifttid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFemaleMasterGiveGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFemaleMasterGiveGiftReq::CopyFrom(const TFemaleMasterGiveGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFemaleMasterGiveGiftReq::IsInitialized() const {

  return true;
}

void TFemaleMasterGiveGiftReq::Swap(TFemaleMasterGiveGiftReq* other) {
  if (other != this) {
    std::swap(femalemastertid_, other->femalemastertid_);
    std::swap(gifttid_, other->gifttid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFemaleMasterGiveGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFemaleMasterGiveGiftReq_descriptor_;
  metadata.reflection = TFemaleMasterGiveGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFemaleMasterRecordDialogReq::kFemaleMasterTidFieldNumber;
const int TFemaleMasterRecordDialogReq::kDialogInfoFieldNumber;
const int TFemaleMasterRecordDialogReq::kAddFeelingNumFieldNumber;
const int TFemaleMasterRecordDialogReq::kAngryTimeFieldNumber;
#endif  // !_MSC_VER

TFemaleMasterRecordDialogReq::TFemaleMasterRecordDialogReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFemaleMasterRecordDialogReq)
}

void TFemaleMasterRecordDialogReq::InitAsDefaultInstance() {
  dialoginfo_ = const_cast< ::pb::TFemaleMasterDialogInfo*>(&::pb::TFemaleMasterDialogInfo::default_instance());
}

TFemaleMasterRecordDialogReq::TFemaleMasterRecordDialogReq(const TFemaleMasterRecordDialogReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFemaleMasterRecordDialogReq)
}

void TFemaleMasterRecordDialogReq::SharedCtor() {
  _cached_size_ = 0;
  femalemastertid_ = 0;
  dialoginfo_ = NULL;
  addfeelingnum_ = 0;
  angrytime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFemaleMasterRecordDialogReq::~TFemaleMasterRecordDialogReq() {
  // @@protoc_insertion_point(destructor:pb.TFemaleMasterRecordDialogReq)
  SharedDtor();
}

void TFemaleMasterRecordDialogReq::SharedDtor() {
  if (this != default_instance_) {
    delete dialoginfo_;
  }
}

void TFemaleMasterRecordDialogReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFemaleMasterRecordDialogReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFemaleMasterRecordDialogReq_descriptor_;
}

const TFemaleMasterRecordDialogReq& TFemaleMasterRecordDialogReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fFemaleMaster_2eproto();
  return *default_instance_;
}

TFemaleMasterRecordDialogReq* TFemaleMasterRecordDialogReq::default_instance_ = NULL;

TFemaleMasterRecordDialogReq* TFemaleMasterRecordDialogReq::New() const {
  return new TFemaleMasterRecordDialogReq;
}

void TFemaleMasterRecordDialogReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TFemaleMasterRecordDialogReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(femalemastertid_, angrytime_);
    if (has_dialoginfo()) {
      if (dialoginfo_ != NULL) dialoginfo_->::pb::TFemaleMasterDialogInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFemaleMasterRecordDialogReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFemaleMasterRecordDialogReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 FemaleMasterTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &femalemastertid_)));
          set_has_femalemastertid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DialogInfo;
        break;
      }

      // optional .pb.TFemaleMasterDialogInfo DialogInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_DialogInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dialoginfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AddFeelingNum;
        break;
      }

      // optional int32 AddFeelingNum = 3;
      case 3: {
        if (tag == 24) {
         parse_AddFeelingNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &addfeelingnum_)));
          set_has_addfeelingnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_AngryTime;
        break;
      }

      // optional int32 AngryTime = 4;
      case 4: {
        if (tag == 32) {
         parse_AngryTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &angrytime_)));
          set_has_angrytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFemaleMasterRecordDialogReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFemaleMasterRecordDialogReq)
  return false;
#undef DO_
}

void TFemaleMasterRecordDialogReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFemaleMasterRecordDialogReq)
  // optional int32 FemaleMasterTid = 1;
  if (has_femalemastertid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->femalemastertid(), output);
  }

  // optional .pb.TFemaleMasterDialogInfo DialogInfo = 2;
  if (has_dialoginfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dialoginfo(), output);
  }

  // optional int32 AddFeelingNum = 3;
  if (has_addfeelingnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->addfeelingnum(), output);
  }

  // optional int32 AngryTime = 4;
  if (has_angrytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->angrytime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFemaleMasterRecordDialogReq)
}

::google::protobuf::uint8* TFemaleMasterRecordDialogReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFemaleMasterRecordDialogReq)
  // optional int32 FemaleMasterTid = 1;
  if (has_femalemastertid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->femalemastertid(), target);
  }

  // optional .pb.TFemaleMasterDialogInfo DialogInfo = 2;
  if (has_dialoginfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->dialoginfo(), target);
  }

  // optional int32 AddFeelingNum = 3;
  if (has_addfeelingnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->addfeelingnum(), target);
  }

  // optional int32 AngryTime = 4;
  if (has_angrytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->angrytime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFemaleMasterRecordDialogReq)
  return target;
}

int TFemaleMasterRecordDialogReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 FemaleMasterTid = 1;
    if (has_femalemastertid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->femalemastertid());
    }

    // optional .pb.TFemaleMasterDialogInfo DialogInfo = 2;
    if (has_dialoginfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dialoginfo());
    }

    // optional int32 AddFeelingNum = 3;
    if (has_addfeelingnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->addfeelingnum());
    }

    // optional int32 AngryTime = 4;
    if (has_angrytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->angrytime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFemaleMasterRecordDialogReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFemaleMasterRecordDialogReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFemaleMasterRecordDialogReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFemaleMasterRecordDialogReq::MergeFrom(const TFemaleMasterRecordDialogReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_femalemastertid()) {
      set_femalemastertid(from.femalemastertid());
    }
    if (from.has_dialoginfo()) {
      mutable_dialoginfo()->::pb::TFemaleMasterDialogInfo::MergeFrom(from.dialoginfo());
    }
    if (from.has_addfeelingnum()) {
      set_addfeelingnum(from.addfeelingnum());
    }
    if (from.has_angrytime()) {
      set_angrytime(from.angrytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFemaleMasterRecordDialogReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFemaleMasterRecordDialogReq::CopyFrom(const TFemaleMasterRecordDialogReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFemaleMasterRecordDialogReq::IsInitialized() const {

  return true;
}

void TFemaleMasterRecordDialogReq::Swap(TFemaleMasterRecordDialogReq* other) {
  if (other != this) {
    std::swap(femalemastertid_, other->femalemastertid_);
    std::swap(dialoginfo_, other->dialoginfo_);
    std::swap(addfeelingnum_, other->addfeelingnum_);
    std::swap(angrytime_, other->angrytime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFemaleMasterRecordDialogReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFemaleMasterRecordDialogReq_descriptor_;
  metadata.reflection = TFemaleMasterRecordDialogReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
