// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActLinkSoulPub.proto

#ifndef PROTOBUF_net_2fActLinkSoulPub_2eproto__INCLUDED
#define PROTOBUF_net_2fActLinkSoulPub_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
void protobuf_AssignDesc_net_2fActLinkSoulPub_2eproto();
void protobuf_ShutdownFile_net_2fActLinkSoulPub_2eproto();

class TActLinkSoulPubHeroInfo;
class TActLinkSoulPubGetInfoRsp;
class TActLinkSoulPubDoRecuritReq;
class TActLinkSoulPubDoRecuritRsp;
class TActLinkSoulPubDoRecruitReward;
class TActLinkSoulPubReceiveRewardReq;
class TActLinkSoulPubBuyRMBGoodInfo;
class TActLinkSoulPubGetRMBGoodInfoRsp;
class TActLinkSoulPubChangeRecruitPoolReq;
class TActLinkSoulPubBuyRMBGoodNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActLinkSoulPubHeroInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLinkSoulPub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLinkSoulPubHeroInfo : public ::google::protobuf::Message {
 public:
  TActLinkSoulPubHeroInfo();
  virtual ~TActLinkSoulPubHeroInfo();

  TActLinkSoulPubHeroInfo(const TActLinkSoulPubHeroInfo& from);

  inline TActLinkSoulPubHeroInfo& operator=(const TActLinkSoulPubHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLinkSoulPubHeroInfo& default_instance();

  void Swap(TActLinkSoulPubHeroInfo* other);

  // implements Message ----------------------------------------------

  TActLinkSoulPubHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLinkSoulPubHeroInfo& from);
  void MergeFrom(const TActLinkSoulPubHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RecId = 1;
  inline bool has_recid() const;
  inline void clear_recid();
  static const int kRecIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubHeroInfo</name>
  	<Function>
  		<name>recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recid</name>
  		<replaceName>RecId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recid() const;
  inline void set_recid(::google::protobuf::uint32 value);

  // optional uint32 RecNum = 2;
  inline bool has_recnum() const;
  inline void clear_recnum();
  static const int kRecNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubHeroInfo</name>
  	<Function>
  		<name>recnum</name>
  		<replaceName>RecNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recnum</name>
  		<replaceName>RecNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recnum</name>
  		<replaceName>RecNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recnum() const;
  inline void set_recnum(::google::protobuf::uint32 value);

  // repeated uint32 RewardIdArr = 3;
  inline int rewardidarr_size() const;
  inline void clear_rewardidarr();
  static const int kRewardIdArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubHeroInfo</name>
  	<Function>
  		<name>rewardidarr</name>
  		<replaceName>RewardIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardidarr</name>
  		<replaceName>RewardIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardidarr</name>
  		<replaceName>RewardIdArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardidarr</name>
  		<replaceName>RewardIdArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardidarr_size</name>
  		<replaceName>RewardIdArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rewardidarr(int index) const;
  inline void set_rewardidarr(int index, ::google::protobuf::uint32 value);
  inline void add_rewardidarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rewardidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rewardidarr();

  // optional uint32 NeedNum = 4;
  inline bool has_neednum() const;
  inline void clear_neednum();
  static const int kNeedNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubHeroInfo</name>
  	<Function>
  		<name>neednum</name>
  		<replaceName>NeedNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_neednum</name>
  		<replaceName>NeedNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_neednum</name>
  		<replaceName>NeedNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 neednum() const;
  inline void set_neednum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActLinkSoulPubHeroInfo)
 private:
  inline void set_has_recid();
  inline void clear_has_recid();
  inline void set_has_recnum();
  inline void clear_has_recnum();
  inline void set_has_neednum();
  inline void clear_has_neednum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recid_;
  ::google::protobuf::uint32 recnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rewardidarr_;
  ::google::protobuf::uint32 neednum_;
  friend void  protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_AssignDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLinkSoulPub_2eproto();

  void InitAsDefaultInstance();
  static TActLinkSoulPubHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLinkSoulPubGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLinkSoulPub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLinkSoulPubGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActLinkSoulPubGetInfoRsp();
  virtual ~TActLinkSoulPubGetInfoRsp();

  TActLinkSoulPubGetInfoRsp(const TActLinkSoulPubGetInfoRsp& from);

  inline TActLinkSoulPubGetInfoRsp& operator=(const TActLinkSoulPubGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLinkSoulPubGetInfoRsp& default_instance();

  void Swap(TActLinkSoulPubGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActLinkSoulPubGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLinkSoulPubGetInfoRsp& from);
  void MergeFrom(const TActLinkSoulPubGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActLinkSoulPubHeroInfo HeroRecInfoArr = 1;
  inline int herorecinfoarr_size() const;
  inline void clear_herorecinfoarr();
  static const int kHeroRecInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubGetInfoRsp</name>
  	<Function>
  		<name>herorecinfoarr</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_herorecinfoarr</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_herorecinfoarr</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_herorecinfoarr</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>herorecinfoarr_size</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActLinkSoulPubHeroInfo& herorecinfoarr(int index) const;
  inline ::pb::TActLinkSoulPubHeroInfo* mutable_herorecinfoarr(int index);
  inline ::pb::TActLinkSoulPubHeroInfo* add_herorecinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubHeroInfo >&
      herorecinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubHeroInfo >*
      mutable_herorecinfoarr();

  // optional uint64 FreeRecRewardTime = 2;
  inline bool has_freerecrewardtime() const;
  inline void clear_freerecrewardtime();
  static const int kFreeRecRewardTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubGetInfoRsp</name>
  	<Function>
  		<name>freerecrewardtime</name>
  		<replaceName>FreeRecRewardTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_freerecrewardtime</name>
  		<replaceName>FreeRecRewardTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_freerecrewardtime</name>
  		<replaceName>FreeRecRewardTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 freerecrewardtime() const;
  inline void set_freerecrewardtime(::google::protobuf::uint64 value);

  // optional uint32 Poolpos = 3;
  inline bool has_poolpos() const;
  inline void clear_poolpos();
  static const int kPoolposFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubGetInfoRsp</name>
  	<Function>
  		<name>poolpos</name>
  		<replaceName>Poolpos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_poolpos</name>
  		<replaceName>Poolpos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_poolpos</name>
  		<replaceName>Poolpos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 poolpos() const;
  inline void set_poolpos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActLinkSoulPubGetInfoRsp)
 private:
  inline void set_has_freerecrewardtime();
  inline void clear_has_freerecrewardtime();
  inline void set_has_poolpos();
  inline void clear_has_poolpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubHeroInfo > herorecinfoarr_;
  ::google::protobuf::uint64 freerecrewardtime_;
  ::google::protobuf::uint32 poolpos_;
  friend void  protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_AssignDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLinkSoulPub_2eproto();

  void InitAsDefaultInstance();
  static TActLinkSoulPubGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLinkSoulPubDoRecuritReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLinkSoulPub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLinkSoulPubDoRecuritReq : public ::google::protobuf::Message {
 public:
  TActLinkSoulPubDoRecuritReq();
  virtual ~TActLinkSoulPubDoRecuritReq();

  TActLinkSoulPubDoRecuritReq(const TActLinkSoulPubDoRecuritReq& from);

  inline TActLinkSoulPubDoRecuritReq& operator=(const TActLinkSoulPubDoRecuritReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLinkSoulPubDoRecuritReq& default_instance();

  void Swap(TActLinkSoulPubDoRecuritReq* other);

  // implements Message ----------------------------------------------

  TActLinkSoulPubDoRecuritReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLinkSoulPubDoRecuritReq& from);
  void MergeFrom(const TActLinkSoulPubDoRecuritReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 HeroId = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubDoRecuritReq</name>
  	<Function>
  		<name>heroid</name>
  		<replaceName>HeroId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_heroid</name>
  		<replaceName>HeroId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroid</name>
  		<replaceName>HeroId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // optional uint32 RecNum = 2;
  inline bool has_recnum() const;
  inline void clear_recnum();
  static const int kRecNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubDoRecuritReq</name>
  	<Function>
  		<name>recnum</name>
  		<replaceName>RecNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recnum</name>
  		<replaceName>RecNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recnum</name>
  		<replaceName>RecNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recnum() const;
  inline void set_recnum(::google::protobuf::uint32 value);

  // optional bool IsFreeRecurit = 3;
  inline bool has_isfreerecurit() const;
  inline void clear_isfreerecurit();
  static const int kIsFreeRecuritFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubDoRecuritReq</name>
  	<Function>
  		<name>isfreerecurit</name>
  		<replaceName>IsFreeRecurit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_isfreerecurit</name>
  		<replaceName>IsFreeRecurit</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_isfreerecurit</name>
  		<replaceName>IsFreeRecurit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool isfreerecurit() const;
  inline void set_isfreerecurit(bool value);

  // @@protoc_insertion_point(class_scope:pb.TActLinkSoulPubDoRecuritReq)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_recnum();
  inline void clear_has_recnum();
  inline void set_has_isfreerecurit();
  inline void clear_has_isfreerecurit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 recnum_;
  bool isfreerecurit_;
  friend void  protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_AssignDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLinkSoulPub_2eproto();

  void InitAsDefaultInstance();
  static TActLinkSoulPubDoRecuritReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLinkSoulPubDoRecuritRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLinkSoulPub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLinkSoulPubDoRecuritRsp : public ::google::protobuf::Message {
 public:
  TActLinkSoulPubDoRecuritRsp();
  virtual ~TActLinkSoulPubDoRecuritRsp();

  TActLinkSoulPubDoRecuritRsp(const TActLinkSoulPubDoRecuritRsp& from);

  inline TActLinkSoulPubDoRecuritRsp& operator=(const TActLinkSoulPubDoRecuritRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLinkSoulPubDoRecuritRsp& default_instance();

  void Swap(TActLinkSoulPubDoRecuritRsp* other);

  // implements Message ----------------------------------------------

  TActLinkSoulPubDoRecuritRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLinkSoulPubDoRecuritRsp& from);
  void MergeFrom(const TActLinkSoulPubDoRecuritRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActLinkSoulPubDoRecruitReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubDoRecuritRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActLinkSoulPubDoRecruitReward& rewardarray(int index) const;
  inline ::pb::TActLinkSoulPubDoRecruitReward* mutable_rewardarray(int index);
  inline ::pb::TActLinkSoulPubDoRecruitReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubDoRecruitReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubDoRecruitReward >*
      mutable_rewardarray();

  // optional uint32 ArtifactLeftNum = 2;
  inline bool has_artifactleftnum() const;
  inline void clear_artifactleftnum();
  static const int kArtifactLeftNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubDoRecuritRsp</name>
  	<Function>
  		<name>artifactleftnum</name>
  		<replaceName>ArtifactLeftNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_artifactleftnum</name>
  		<replaceName>ArtifactLeftNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_artifactleftnum</name>
  		<replaceName>ArtifactLeftNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 artifactleftnum() const;
  inline void set_artifactleftnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActLinkSoulPubDoRecuritRsp)
 private:
  inline void set_has_artifactleftnum();
  inline void clear_has_artifactleftnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubDoRecruitReward > rewardarray_;
  ::google::protobuf::uint32 artifactleftnum_;
  friend void  protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_AssignDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLinkSoulPub_2eproto();

  void InitAsDefaultInstance();
  static TActLinkSoulPubDoRecuritRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLinkSoulPubDoRecruitReward</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLinkSoulPub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLinkSoulPubDoRecruitReward : public ::google::protobuf::Message {
 public:
  TActLinkSoulPubDoRecruitReward();
  virtual ~TActLinkSoulPubDoRecruitReward();

  TActLinkSoulPubDoRecruitReward(const TActLinkSoulPubDoRecruitReward& from);

  inline TActLinkSoulPubDoRecruitReward& operator=(const TActLinkSoulPubDoRecruitReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLinkSoulPubDoRecruitReward& default_instance();

  void Swap(TActLinkSoulPubDoRecruitReward* other);

  // implements Message ----------------------------------------------

  TActLinkSoulPubDoRecruitReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLinkSoulPubDoRecruitReward& from);
  void MergeFrom(const TActLinkSoulPubDoRecruitReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TCommonReward Reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubDoRecruitReward</name>
  	<Function>
  		<name>reward</name>
  		<replaceName>Reward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_reward</name>
  		<replaceName>Reward</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_reward</name>
  		<replaceName>Reward</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_reward</name>
  		<replaceName>Reward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& reward() const;
  inline ::pb::TCommonReward* mutable_reward();
  inline ::pb::TCommonReward* release_reward();
  inline void set_allocated_reward(::pb::TCommonReward* reward);

  // optional uint32 CritRatio = 2;
  inline bool has_critratio() const;
  inline void clear_critratio();
  static const int kCritRatioFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubDoRecruitReward</name>
  	<Function>
  		<name>critratio</name>
  		<replaceName>CritRatio</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_critratio</name>
  		<replaceName>CritRatio</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_critratio</name>
  		<replaceName>CritRatio</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 critratio() const;
  inline void set_critratio(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActLinkSoulPubDoRecruitReward)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_critratio();
  inline void clear_has_critratio();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TCommonReward* reward_;
  ::google::protobuf::uint32 critratio_;
  friend void  protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_AssignDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLinkSoulPub_2eproto();

  void InitAsDefaultInstance();
  static TActLinkSoulPubDoRecruitReward* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLinkSoulPubReceiveRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLinkSoulPub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLinkSoulPubReceiveRewardReq : public ::google::protobuf::Message {
 public:
  TActLinkSoulPubReceiveRewardReq();
  virtual ~TActLinkSoulPubReceiveRewardReq();

  TActLinkSoulPubReceiveRewardReq(const TActLinkSoulPubReceiveRewardReq& from);

  inline TActLinkSoulPubReceiveRewardReq& operator=(const TActLinkSoulPubReceiveRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLinkSoulPubReceiveRewardReq& default_instance();

  void Swap(TActLinkSoulPubReceiveRewardReq* other);

  // implements Message ----------------------------------------------

  TActLinkSoulPubReceiveRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLinkSoulPubReceiveRewardReq& from);
  void MergeFrom(const TActLinkSoulPubReceiveRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 HeroId = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubReceiveRewardReq</name>
  	<Function>
  		<name>heroid</name>
  		<replaceName>HeroId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_heroid</name>
  		<replaceName>HeroId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroid</name>
  		<replaceName>HeroId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // optional uint32 PosId = 2;
  inline bool has_posid() const;
  inline void clear_posid();
  static const int kPosIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubReceiveRewardReq</name>
  	<Function>
  		<name>posid</name>
  		<replaceName>PosId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_posid</name>
  		<replaceName>PosId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_posid</name>
  		<replaceName>PosId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 posid() const;
  inline void set_posid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActLinkSoulPubReceiveRewardReq)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_posid();
  inline void clear_has_posid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 posid_;
  friend void  protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_AssignDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLinkSoulPub_2eproto();

  void InitAsDefaultInstance();
  static TActLinkSoulPubReceiveRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLinkSoulPubBuyRMBGoodInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLinkSoulPub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLinkSoulPubBuyRMBGoodInfo : public ::google::protobuf::Message {
 public:
  TActLinkSoulPubBuyRMBGoodInfo();
  virtual ~TActLinkSoulPubBuyRMBGoodInfo();

  TActLinkSoulPubBuyRMBGoodInfo(const TActLinkSoulPubBuyRMBGoodInfo& from);

  inline TActLinkSoulPubBuyRMBGoodInfo& operator=(const TActLinkSoulPubBuyRMBGoodInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLinkSoulPubBuyRMBGoodInfo& default_instance();

  void Swap(TActLinkSoulPubBuyRMBGoodInfo* other);

  // implements Message ----------------------------------------------

  TActLinkSoulPubBuyRMBGoodInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLinkSoulPubBuyRMBGoodInfo& from);
  void MergeFrom(const TActLinkSoulPubBuyRMBGoodInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 GoodsId = 1;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubBuyRMBGoodInfo</name>
  	<Function>
  		<name>goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodsid</name>
  		<replaceName>GoodsId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);

  // optional uint32 BoughtNum = 2;
  inline bool has_boughtnum() const;
  inline void clear_boughtnum();
  static const int kBoughtNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubBuyRMBGoodInfo</name>
  	<Function>
  		<name>boughtnum</name>
  		<replaceName>BoughtNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boughtnum</name>
  		<replaceName>BoughtNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boughtnum</name>
  		<replaceName>BoughtNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 boughtnum() const;
  inline void set_boughtnum(::google::protobuf::uint32 value);

  // optional uint64 BoughtTime = 3;
  inline bool has_boughttime() const;
  inline void clear_boughttime();
  static const int kBoughtTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubBuyRMBGoodInfo</name>
  	<Function>
  		<name>boughttime</name>
  		<replaceName>BoughtTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boughttime</name>
  		<replaceName>BoughtTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boughttime</name>
  		<replaceName>BoughtTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 boughttime() const;
  inline void set_boughttime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActLinkSoulPubBuyRMBGoodInfo)
 private:
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_boughtnum();
  inline void clear_has_boughtnum();
  inline void set_has_boughttime();
  inline void clear_has_boughttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 boughtnum_;
  ::google::protobuf::uint64 boughttime_;
  friend void  protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_AssignDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLinkSoulPub_2eproto();

  void InitAsDefaultInstance();
  static TActLinkSoulPubBuyRMBGoodInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLinkSoulPubGetRMBGoodInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLinkSoulPub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLinkSoulPubGetRMBGoodInfoRsp : public ::google::protobuf::Message {
 public:
  TActLinkSoulPubGetRMBGoodInfoRsp();
  virtual ~TActLinkSoulPubGetRMBGoodInfoRsp();

  TActLinkSoulPubGetRMBGoodInfoRsp(const TActLinkSoulPubGetRMBGoodInfoRsp& from);

  inline TActLinkSoulPubGetRMBGoodInfoRsp& operator=(const TActLinkSoulPubGetRMBGoodInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLinkSoulPubGetRMBGoodInfoRsp& default_instance();

  void Swap(TActLinkSoulPubGetRMBGoodInfoRsp* other);

  // implements Message ----------------------------------------------

  TActLinkSoulPubGetRMBGoodInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLinkSoulPubGetRMBGoodInfoRsp& from);
  void MergeFrom(const TActLinkSoulPubGetRMBGoodInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActLinkSoulPubBuyRMBGoodInfo GoodsBuyArr = 1;
  inline int goodsbuyarr_size() const;
  inline void clear_goodsbuyarr();
  static const int kGoodsBuyArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubGetRMBGoodInfoRsp</name>
  	<Function>
  		<name>goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>goodsbuyarr_size</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActLinkSoulPubBuyRMBGoodInfo& goodsbuyarr(int index) const;
  inline ::pb::TActLinkSoulPubBuyRMBGoodInfo* mutable_goodsbuyarr(int index);
  inline ::pb::TActLinkSoulPubBuyRMBGoodInfo* add_goodsbuyarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubBuyRMBGoodInfo >&
      goodsbuyarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubBuyRMBGoodInfo >*
      mutable_goodsbuyarr();

  // @@protoc_insertion_point(class_scope:pb.TActLinkSoulPubGetRMBGoodInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubBuyRMBGoodInfo > goodsbuyarr_;
  friend void  protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_AssignDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLinkSoulPub_2eproto();

  void InitAsDefaultInstance();
  static TActLinkSoulPubGetRMBGoodInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLinkSoulPubChangeRecruitPoolReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLinkSoulPub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLinkSoulPubChangeRecruitPoolReq : public ::google::protobuf::Message {
 public:
  TActLinkSoulPubChangeRecruitPoolReq();
  virtual ~TActLinkSoulPubChangeRecruitPoolReq();

  TActLinkSoulPubChangeRecruitPoolReq(const TActLinkSoulPubChangeRecruitPoolReq& from);

  inline TActLinkSoulPubChangeRecruitPoolReq& operator=(const TActLinkSoulPubChangeRecruitPoolReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLinkSoulPubChangeRecruitPoolReq& default_instance();

  void Swap(TActLinkSoulPubChangeRecruitPoolReq* other);

  // implements Message ----------------------------------------------

  TActLinkSoulPubChangeRecruitPoolReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLinkSoulPubChangeRecruitPoolReq& from);
  void MergeFrom(const TActLinkSoulPubChangeRecruitPoolReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 PoolPos = 1;
  inline bool has_poolpos() const;
  inline void clear_poolpos();
  static const int kPoolPosFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubChangeRecruitPoolReq</name>
  	<Function>
  		<name>poolpos</name>
  		<replaceName>PoolPos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_poolpos</name>
  		<replaceName>PoolPos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_poolpos</name>
  		<replaceName>PoolPos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 poolpos() const;
  inline void set_poolpos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActLinkSoulPubChangeRecruitPoolReq)
 private:
  inline void set_has_poolpos();
  inline void clear_has_poolpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 poolpos_;
  friend void  protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_AssignDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLinkSoulPub_2eproto();

  void InitAsDefaultInstance();
  static TActLinkSoulPubChangeRecruitPoolReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLinkSoulPubBuyRMBGoodNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLinkSoulPub.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLinkSoulPubBuyRMBGoodNotify : public ::google::protobuf::Message {
 public:
  TActLinkSoulPubBuyRMBGoodNotify();
  virtual ~TActLinkSoulPubBuyRMBGoodNotify();

  TActLinkSoulPubBuyRMBGoodNotify(const TActLinkSoulPubBuyRMBGoodNotify& from);

  inline TActLinkSoulPubBuyRMBGoodNotify& operator=(const TActLinkSoulPubBuyRMBGoodNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLinkSoulPubBuyRMBGoodNotify& default_instance();

  void Swap(TActLinkSoulPubBuyRMBGoodNotify* other);

  // implements Message ----------------------------------------------

  TActLinkSoulPubBuyRMBGoodNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLinkSoulPubBuyRMBGoodNotify& from);
  void MergeFrom(const TActLinkSoulPubBuyRMBGoodNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActLinkSoulPubBuyRMBGoodInfo GoodsBuyArr = 1;
  inline int goodsbuyarr_size() const;
  inline void clear_goodsbuyarr();
  static const int kGoodsBuyArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubBuyRMBGoodNotify</name>
  	<Function>
  		<name>goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodsbuyarr</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>goodsbuyarr_size</name>
  		<replaceName>GoodsBuyArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActLinkSoulPubBuyRMBGoodInfo& goodsbuyarr(int index) const;
  inline ::pb::TActLinkSoulPubBuyRMBGoodInfo* mutable_goodsbuyarr(int index);
  inline ::pb::TActLinkSoulPubBuyRMBGoodInfo* add_goodsbuyarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubBuyRMBGoodInfo >&
      goodsbuyarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubBuyRMBGoodInfo >*
      mutable_goodsbuyarr();

  // repeated .pb.TActLinkSoulPubHeroInfo HeroRecInfoArr = 2;
  inline int herorecinfoarr_size() const;
  inline void clear_herorecinfoarr();
  static const int kHeroRecInfoArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubBuyRMBGoodNotify</name>
  	<Function>
  		<name>herorecinfoarr</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_herorecinfoarr</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_herorecinfoarr</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_herorecinfoarr</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>herorecinfoarr_size</name>
  		<replaceName>HeroRecInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActLinkSoulPubHeroInfo& herorecinfoarr(int index) const;
  inline ::pb::TActLinkSoulPubHeroInfo* mutable_herorecinfoarr(int index);
  inline ::pb::TActLinkSoulPubHeroInfo* add_herorecinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubHeroInfo >&
      herorecinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubHeroInfo >*
      mutable_herorecinfoarr();

  // optional uint32 PoolPos = 3;
  inline bool has_poolpos() const;
  inline void clear_poolpos();
  static const int kPoolPosFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActLinkSoulPubBuyRMBGoodNotify</name>
  	<Function>
  		<name>poolpos</name>
  		<replaceName>PoolPos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_poolpos</name>
  		<replaceName>PoolPos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_poolpos</name>
  		<replaceName>PoolPos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 poolpos() const;
  inline void set_poolpos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActLinkSoulPubBuyRMBGoodNotify)
 private:
  inline void set_has_poolpos();
  inline void clear_has_poolpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubBuyRMBGoodInfo > goodsbuyarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubHeroInfo > herorecinfoarr_;
  ::google::protobuf::uint32 poolpos_;
  friend void  protobuf_AddDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_AssignDesc_net_2fActLinkSoulPub_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLinkSoulPub_2eproto();

  void InitAsDefaultInstance();
  static TActLinkSoulPubBuyRMBGoodNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TActLinkSoulPubHeroInfo

// optional uint32 RecId = 1;
inline bool TActLinkSoulPubHeroInfo::has_recid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActLinkSoulPubHeroInfo::set_has_recid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActLinkSoulPubHeroInfo::clear_has_recid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActLinkSoulPubHeroInfo::clear_recid() {
  recid_ = 0u;
  clear_has_recid();
}
inline ::google::protobuf::uint32 TActLinkSoulPubHeroInfo::recid() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubHeroInfo.RecId)
  return recid_;
}
inline void TActLinkSoulPubHeroInfo::set_recid(::google::protobuf::uint32 value) {
  set_has_recid();
  recid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubHeroInfo.RecId)
}

// optional uint32 RecNum = 2;
inline bool TActLinkSoulPubHeroInfo::has_recnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActLinkSoulPubHeroInfo::set_has_recnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActLinkSoulPubHeroInfo::clear_has_recnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActLinkSoulPubHeroInfo::clear_recnum() {
  recnum_ = 0u;
  clear_has_recnum();
}
inline ::google::protobuf::uint32 TActLinkSoulPubHeroInfo::recnum() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubHeroInfo.RecNum)
  return recnum_;
}
inline void TActLinkSoulPubHeroInfo::set_recnum(::google::protobuf::uint32 value) {
  set_has_recnum();
  recnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubHeroInfo.RecNum)
}

// repeated uint32 RewardIdArr = 3;
inline int TActLinkSoulPubHeroInfo::rewardidarr_size() const {
  return rewardidarr_.size();
}
inline void TActLinkSoulPubHeroInfo::clear_rewardidarr() {
  rewardidarr_.Clear();
}
inline ::google::protobuf::uint32 TActLinkSoulPubHeroInfo::rewardidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubHeroInfo.RewardIdArr)
  return rewardidarr_.Get(index);
}
inline void TActLinkSoulPubHeroInfo::set_rewardidarr(int index, ::google::protobuf::uint32 value) {
  rewardidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubHeroInfo.RewardIdArr)
}
inline void TActLinkSoulPubHeroInfo::add_rewardidarr(::google::protobuf::uint32 value) {
  rewardidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActLinkSoulPubHeroInfo.RewardIdArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TActLinkSoulPubHeroInfo::rewardidarr() const {
  // @@protoc_insertion_point(field_list:pb.TActLinkSoulPubHeroInfo.RewardIdArr)
  return rewardidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TActLinkSoulPubHeroInfo::mutable_rewardidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActLinkSoulPubHeroInfo.RewardIdArr)
  return &rewardidarr_;
}

// optional uint32 NeedNum = 4;
inline bool TActLinkSoulPubHeroInfo::has_neednum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TActLinkSoulPubHeroInfo::set_has_neednum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TActLinkSoulPubHeroInfo::clear_has_neednum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TActLinkSoulPubHeroInfo::clear_neednum() {
  neednum_ = 0u;
  clear_has_neednum();
}
inline ::google::protobuf::uint32 TActLinkSoulPubHeroInfo::neednum() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubHeroInfo.NeedNum)
  return neednum_;
}
inline void TActLinkSoulPubHeroInfo::set_neednum(::google::protobuf::uint32 value) {
  set_has_neednum();
  neednum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubHeroInfo.NeedNum)
}

// -------------------------------------------------------------------

// TActLinkSoulPubGetInfoRsp

// repeated .pb.TActLinkSoulPubHeroInfo HeroRecInfoArr = 1;
inline int TActLinkSoulPubGetInfoRsp::herorecinfoarr_size() const {
  return herorecinfoarr_.size();
}
inline void TActLinkSoulPubGetInfoRsp::clear_herorecinfoarr() {
  herorecinfoarr_.Clear();
}
inline const ::pb::TActLinkSoulPubHeroInfo& TActLinkSoulPubGetInfoRsp::herorecinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubGetInfoRsp.HeroRecInfoArr)
  return herorecinfoarr_.Get(index);
}
inline ::pb::TActLinkSoulPubHeroInfo* TActLinkSoulPubGetInfoRsp::mutable_herorecinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActLinkSoulPubGetInfoRsp.HeroRecInfoArr)
  return herorecinfoarr_.Mutable(index);
}
inline ::pb::TActLinkSoulPubHeroInfo* TActLinkSoulPubGetInfoRsp::add_herorecinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TActLinkSoulPubGetInfoRsp.HeroRecInfoArr)
  return herorecinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubHeroInfo >&
TActLinkSoulPubGetInfoRsp::herorecinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TActLinkSoulPubGetInfoRsp.HeroRecInfoArr)
  return herorecinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubHeroInfo >*
TActLinkSoulPubGetInfoRsp::mutable_herorecinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActLinkSoulPubGetInfoRsp.HeroRecInfoArr)
  return &herorecinfoarr_;
}

// optional uint64 FreeRecRewardTime = 2;
inline bool TActLinkSoulPubGetInfoRsp::has_freerecrewardtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActLinkSoulPubGetInfoRsp::set_has_freerecrewardtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActLinkSoulPubGetInfoRsp::clear_has_freerecrewardtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActLinkSoulPubGetInfoRsp::clear_freerecrewardtime() {
  freerecrewardtime_ = GOOGLE_ULONGLONG(0);
  clear_has_freerecrewardtime();
}
inline ::google::protobuf::uint64 TActLinkSoulPubGetInfoRsp::freerecrewardtime() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubGetInfoRsp.FreeRecRewardTime)
  return freerecrewardtime_;
}
inline void TActLinkSoulPubGetInfoRsp::set_freerecrewardtime(::google::protobuf::uint64 value) {
  set_has_freerecrewardtime();
  freerecrewardtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubGetInfoRsp.FreeRecRewardTime)
}

// optional uint32 Poolpos = 3;
inline bool TActLinkSoulPubGetInfoRsp::has_poolpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActLinkSoulPubGetInfoRsp::set_has_poolpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActLinkSoulPubGetInfoRsp::clear_has_poolpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActLinkSoulPubGetInfoRsp::clear_poolpos() {
  poolpos_ = 0u;
  clear_has_poolpos();
}
inline ::google::protobuf::uint32 TActLinkSoulPubGetInfoRsp::poolpos() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubGetInfoRsp.Poolpos)
  return poolpos_;
}
inline void TActLinkSoulPubGetInfoRsp::set_poolpos(::google::protobuf::uint32 value) {
  set_has_poolpos();
  poolpos_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubGetInfoRsp.Poolpos)
}

// -------------------------------------------------------------------

// TActLinkSoulPubDoRecuritReq

// optional uint32 HeroId = 1;
inline bool TActLinkSoulPubDoRecuritReq::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActLinkSoulPubDoRecuritReq::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActLinkSoulPubDoRecuritReq::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActLinkSoulPubDoRecuritReq::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 TActLinkSoulPubDoRecuritReq::heroid() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubDoRecuritReq.HeroId)
  return heroid_;
}
inline void TActLinkSoulPubDoRecuritReq::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubDoRecuritReq.HeroId)
}

// optional uint32 RecNum = 2;
inline bool TActLinkSoulPubDoRecuritReq::has_recnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActLinkSoulPubDoRecuritReq::set_has_recnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActLinkSoulPubDoRecuritReq::clear_has_recnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActLinkSoulPubDoRecuritReq::clear_recnum() {
  recnum_ = 0u;
  clear_has_recnum();
}
inline ::google::protobuf::uint32 TActLinkSoulPubDoRecuritReq::recnum() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubDoRecuritReq.RecNum)
  return recnum_;
}
inline void TActLinkSoulPubDoRecuritReq::set_recnum(::google::protobuf::uint32 value) {
  set_has_recnum();
  recnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubDoRecuritReq.RecNum)
}

// optional bool IsFreeRecurit = 3;
inline bool TActLinkSoulPubDoRecuritReq::has_isfreerecurit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActLinkSoulPubDoRecuritReq::set_has_isfreerecurit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActLinkSoulPubDoRecuritReq::clear_has_isfreerecurit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActLinkSoulPubDoRecuritReq::clear_isfreerecurit() {
  isfreerecurit_ = false;
  clear_has_isfreerecurit();
}
inline bool TActLinkSoulPubDoRecuritReq::isfreerecurit() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubDoRecuritReq.IsFreeRecurit)
  return isfreerecurit_;
}
inline void TActLinkSoulPubDoRecuritReq::set_isfreerecurit(bool value) {
  set_has_isfreerecurit();
  isfreerecurit_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubDoRecuritReq.IsFreeRecurit)
}

// -------------------------------------------------------------------

// TActLinkSoulPubDoRecuritRsp

// repeated .pb.TActLinkSoulPubDoRecruitReward RewardArray = 1;
inline int TActLinkSoulPubDoRecuritRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TActLinkSoulPubDoRecuritRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TActLinkSoulPubDoRecruitReward& TActLinkSoulPubDoRecuritRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubDoRecuritRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TActLinkSoulPubDoRecruitReward* TActLinkSoulPubDoRecuritRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActLinkSoulPubDoRecuritRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TActLinkSoulPubDoRecruitReward* TActLinkSoulPubDoRecuritRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TActLinkSoulPubDoRecuritRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubDoRecruitReward >&
TActLinkSoulPubDoRecuritRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TActLinkSoulPubDoRecuritRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubDoRecruitReward >*
TActLinkSoulPubDoRecuritRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActLinkSoulPubDoRecuritRsp.RewardArray)
  return &rewardarray_;
}

// optional uint32 ArtifactLeftNum = 2;
inline bool TActLinkSoulPubDoRecuritRsp::has_artifactleftnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActLinkSoulPubDoRecuritRsp::set_has_artifactleftnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActLinkSoulPubDoRecuritRsp::clear_has_artifactleftnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActLinkSoulPubDoRecuritRsp::clear_artifactleftnum() {
  artifactleftnum_ = 0u;
  clear_has_artifactleftnum();
}
inline ::google::protobuf::uint32 TActLinkSoulPubDoRecuritRsp::artifactleftnum() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubDoRecuritRsp.ArtifactLeftNum)
  return artifactleftnum_;
}
inline void TActLinkSoulPubDoRecuritRsp::set_artifactleftnum(::google::protobuf::uint32 value) {
  set_has_artifactleftnum();
  artifactleftnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubDoRecuritRsp.ArtifactLeftNum)
}

// -------------------------------------------------------------------

// TActLinkSoulPubDoRecruitReward

// optional .pb.TCommonReward Reward = 1;
inline bool TActLinkSoulPubDoRecruitReward::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActLinkSoulPubDoRecruitReward::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActLinkSoulPubDoRecruitReward::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActLinkSoulPubDoRecruitReward::clear_reward() {
  if (reward_ != NULL) reward_->::pb::TCommonReward::Clear();
  clear_has_reward();
}
inline const ::pb::TCommonReward& TActLinkSoulPubDoRecruitReward::reward() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubDoRecruitReward.Reward)
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::pb::TCommonReward* TActLinkSoulPubDoRecruitReward::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::pb::TCommonReward;
  // @@protoc_insertion_point(field_mutable:pb.TActLinkSoulPubDoRecruitReward.Reward)
  return reward_;
}
inline ::pb::TCommonReward* TActLinkSoulPubDoRecruitReward::release_reward() {
  clear_has_reward();
  ::pb::TCommonReward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void TActLinkSoulPubDoRecruitReward::set_allocated_reward(::pb::TCommonReward* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TActLinkSoulPubDoRecruitReward.Reward)
}

// optional uint32 CritRatio = 2;
inline bool TActLinkSoulPubDoRecruitReward::has_critratio() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActLinkSoulPubDoRecruitReward::set_has_critratio() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActLinkSoulPubDoRecruitReward::clear_has_critratio() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActLinkSoulPubDoRecruitReward::clear_critratio() {
  critratio_ = 0u;
  clear_has_critratio();
}
inline ::google::protobuf::uint32 TActLinkSoulPubDoRecruitReward::critratio() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubDoRecruitReward.CritRatio)
  return critratio_;
}
inline void TActLinkSoulPubDoRecruitReward::set_critratio(::google::protobuf::uint32 value) {
  set_has_critratio();
  critratio_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubDoRecruitReward.CritRatio)
}

// -------------------------------------------------------------------

// TActLinkSoulPubReceiveRewardReq

// optional uint32 HeroId = 1;
inline bool TActLinkSoulPubReceiveRewardReq::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActLinkSoulPubReceiveRewardReq::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActLinkSoulPubReceiveRewardReq::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActLinkSoulPubReceiveRewardReq::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 TActLinkSoulPubReceiveRewardReq::heroid() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubReceiveRewardReq.HeroId)
  return heroid_;
}
inline void TActLinkSoulPubReceiveRewardReq::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubReceiveRewardReq.HeroId)
}

// optional uint32 PosId = 2;
inline bool TActLinkSoulPubReceiveRewardReq::has_posid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActLinkSoulPubReceiveRewardReq::set_has_posid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActLinkSoulPubReceiveRewardReq::clear_has_posid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActLinkSoulPubReceiveRewardReq::clear_posid() {
  posid_ = 0u;
  clear_has_posid();
}
inline ::google::protobuf::uint32 TActLinkSoulPubReceiveRewardReq::posid() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubReceiveRewardReq.PosId)
  return posid_;
}
inline void TActLinkSoulPubReceiveRewardReq::set_posid(::google::protobuf::uint32 value) {
  set_has_posid();
  posid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubReceiveRewardReq.PosId)
}

// -------------------------------------------------------------------

// TActLinkSoulPubBuyRMBGoodInfo

// optional uint32 GoodsId = 1;
inline bool TActLinkSoulPubBuyRMBGoodInfo::has_goodsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActLinkSoulPubBuyRMBGoodInfo::set_has_goodsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActLinkSoulPubBuyRMBGoodInfo::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActLinkSoulPubBuyRMBGoodInfo::clear_goodsid() {
  goodsid_ = 0u;
  clear_has_goodsid();
}
inline ::google::protobuf::uint32 TActLinkSoulPubBuyRMBGoodInfo::goodsid() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubBuyRMBGoodInfo.GoodsId)
  return goodsid_;
}
inline void TActLinkSoulPubBuyRMBGoodInfo::set_goodsid(::google::protobuf::uint32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubBuyRMBGoodInfo.GoodsId)
}

// optional uint32 BoughtNum = 2;
inline bool TActLinkSoulPubBuyRMBGoodInfo::has_boughtnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActLinkSoulPubBuyRMBGoodInfo::set_has_boughtnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActLinkSoulPubBuyRMBGoodInfo::clear_has_boughtnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActLinkSoulPubBuyRMBGoodInfo::clear_boughtnum() {
  boughtnum_ = 0u;
  clear_has_boughtnum();
}
inline ::google::protobuf::uint32 TActLinkSoulPubBuyRMBGoodInfo::boughtnum() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubBuyRMBGoodInfo.BoughtNum)
  return boughtnum_;
}
inline void TActLinkSoulPubBuyRMBGoodInfo::set_boughtnum(::google::protobuf::uint32 value) {
  set_has_boughtnum();
  boughtnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubBuyRMBGoodInfo.BoughtNum)
}

// optional uint64 BoughtTime = 3;
inline bool TActLinkSoulPubBuyRMBGoodInfo::has_boughttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActLinkSoulPubBuyRMBGoodInfo::set_has_boughttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActLinkSoulPubBuyRMBGoodInfo::clear_has_boughttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActLinkSoulPubBuyRMBGoodInfo::clear_boughttime() {
  boughttime_ = GOOGLE_ULONGLONG(0);
  clear_has_boughttime();
}
inline ::google::protobuf::uint64 TActLinkSoulPubBuyRMBGoodInfo::boughttime() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubBuyRMBGoodInfo.BoughtTime)
  return boughttime_;
}
inline void TActLinkSoulPubBuyRMBGoodInfo::set_boughttime(::google::protobuf::uint64 value) {
  set_has_boughttime();
  boughttime_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubBuyRMBGoodInfo.BoughtTime)
}

// -------------------------------------------------------------------

// TActLinkSoulPubGetRMBGoodInfoRsp

// repeated .pb.TActLinkSoulPubBuyRMBGoodInfo GoodsBuyArr = 1;
inline int TActLinkSoulPubGetRMBGoodInfoRsp::goodsbuyarr_size() const {
  return goodsbuyarr_.size();
}
inline void TActLinkSoulPubGetRMBGoodInfoRsp::clear_goodsbuyarr() {
  goodsbuyarr_.Clear();
}
inline const ::pb::TActLinkSoulPubBuyRMBGoodInfo& TActLinkSoulPubGetRMBGoodInfoRsp::goodsbuyarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubGetRMBGoodInfoRsp.GoodsBuyArr)
  return goodsbuyarr_.Get(index);
}
inline ::pb::TActLinkSoulPubBuyRMBGoodInfo* TActLinkSoulPubGetRMBGoodInfoRsp::mutable_goodsbuyarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActLinkSoulPubGetRMBGoodInfoRsp.GoodsBuyArr)
  return goodsbuyarr_.Mutable(index);
}
inline ::pb::TActLinkSoulPubBuyRMBGoodInfo* TActLinkSoulPubGetRMBGoodInfoRsp::add_goodsbuyarr() {
  // @@protoc_insertion_point(field_add:pb.TActLinkSoulPubGetRMBGoodInfoRsp.GoodsBuyArr)
  return goodsbuyarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubBuyRMBGoodInfo >&
TActLinkSoulPubGetRMBGoodInfoRsp::goodsbuyarr() const {
  // @@protoc_insertion_point(field_list:pb.TActLinkSoulPubGetRMBGoodInfoRsp.GoodsBuyArr)
  return goodsbuyarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubBuyRMBGoodInfo >*
TActLinkSoulPubGetRMBGoodInfoRsp::mutable_goodsbuyarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActLinkSoulPubGetRMBGoodInfoRsp.GoodsBuyArr)
  return &goodsbuyarr_;
}

// -------------------------------------------------------------------

// TActLinkSoulPubChangeRecruitPoolReq

// optional uint32 PoolPos = 1;
inline bool TActLinkSoulPubChangeRecruitPoolReq::has_poolpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActLinkSoulPubChangeRecruitPoolReq::set_has_poolpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActLinkSoulPubChangeRecruitPoolReq::clear_has_poolpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActLinkSoulPubChangeRecruitPoolReq::clear_poolpos() {
  poolpos_ = 0u;
  clear_has_poolpos();
}
inline ::google::protobuf::uint32 TActLinkSoulPubChangeRecruitPoolReq::poolpos() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubChangeRecruitPoolReq.PoolPos)
  return poolpos_;
}
inline void TActLinkSoulPubChangeRecruitPoolReq::set_poolpos(::google::protobuf::uint32 value) {
  set_has_poolpos();
  poolpos_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubChangeRecruitPoolReq.PoolPos)
}

// -------------------------------------------------------------------

// TActLinkSoulPubBuyRMBGoodNotify

// repeated .pb.TActLinkSoulPubBuyRMBGoodInfo GoodsBuyArr = 1;
inline int TActLinkSoulPubBuyRMBGoodNotify::goodsbuyarr_size() const {
  return goodsbuyarr_.size();
}
inline void TActLinkSoulPubBuyRMBGoodNotify::clear_goodsbuyarr() {
  goodsbuyarr_.Clear();
}
inline const ::pb::TActLinkSoulPubBuyRMBGoodInfo& TActLinkSoulPubBuyRMBGoodNotify::goodsbuyarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubBuyRMBGoodNotify.GoodsBuyArr)
  return goodsbuyarr_.Get(index);
}
inline ::pb::TActLinkSoulPubBuyRMBGoodInfo* TActLinkSoulPubBuyRMBGoodNotify::mutable_goodsbuyarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActLinkSoulPubBuyRMBGoodNotify.GoodsBuyArr)
  return goodsbuyarr_.Mutable(index);
}
inline ::pb::TActLinkSoulPubBuyRMBGoodInfo* TActLinkSoulPubBuyRMBGoodNotify::add_goodsbuyarr() {
  // @@protoc_insertion_point(field_add:pb.TActLinkSoulPubBuyRMBGoodNotify.GoodsBuyArr)
  return goodsbuyarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubBuyRMBGoodInfo >&
TActLinkSoulPubBuyRMBGoodNotify::goodsbuyarr() const {
  // @@protoc_insertion_point(field_list:pb.TActLinkSoulPubBuyRMBGoodNotify.GoodsBuyArr)
  return goodsbuyarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubBuyRMBGoodInfo >*
TActLinkSoulPubBuyRMBGoodNotify::mutable_goodsbuyarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActLinkSoulPubBuyRMBGoodNotify.GoodsBuyArr)
  return &goodsbuyarr_;
}

// repeated .pb.TActLinkSoulPubHeroInfo HeroRecInfoArr = 2;
inline int TActLinkSoulPubBuyRMBGoodNotify::herorecinfoarr_size() const {
  return herorecinfoarr_.size();
}
inline void TActLinkSoulPubBuyRMBGoodNotify::clear_herorecinfoarr() {
  herorecinfoarr_.Clear();
}
inline const ::pb::TActLinkSoulPubHeroInfo& TActLinkSoulPubBuyRMBGoodNotify::herorecinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubBuyRMBGoodNotify.HeroRecInfoArr)
  return herorecinfoarr_.Get(index);
}
inline ::pb::TActLinkSoulPubHeroInfo* TActLinkSoulPubBuyRMBGoodNotify::mutable_herorecinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActLinkSoulPubBuyRMBGoodNotify.HeroRecInfoArr)
  return herorecinfoarr_.Mutable(index);
}
inline ::pb::TActLinkSoulPubHeroInfo* TActLinkSoulPubBuyRMBGoodNotify::add_herorecinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TActLinkSoulPubBuyRMBGoodNotify.HeroRecInfoArr)
  return herorecinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubHeroInfo >&
TActLinkSoulPubBuyRMBGoodNotify::herorecinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TActLinkSoulPubBuyRMBGoodNotify.HeroRecInfoArr)
  return herorecinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActLinkSoulPubHeroInfo >*
TActLinkSoulPubBuyRMBGoodNotify::mutable_herorecinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActLinkSoulPubBuyRMBGoodNotify.HeroRecInfoArr)
  return &herorecinfoarr_;
}

// optional uint32 PoolPos = 3;
inline bool TActLinkSoulPubBuyRMBGoodNotify::has_poolpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActLinkSoulPubBuyRMBGoodNotify::set_has_poolpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActLinkSoulPubBuyRMBGoodNotify::clear_has_poolpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActLinkSoulPubBuyRMBGoodNotify::clear_poolpos() {
  poolpos_ = 0u;
  clear_has_poolpos();
}
inline ::google::protobuf::uint32 TActLinkSoulPubBuyRMBGoodNotify::poolpos() const {
  // @@protoc_insertion_point(field_get:pb.TActLinkSoulPubBuyRMBGoodNotify.PoolPos)
  return poolpos_;
}
inline void TActLinkSoulPubBuyRMBGoodNotify::set_poolpos(::google::protobuf::uint32 value) {
  set_has_poolpos();
  poolpos_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLinkSoulPubBuyRMBGoodNotify.PoolPos)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActLinkSoulPub_2eproto__INCLUDED
