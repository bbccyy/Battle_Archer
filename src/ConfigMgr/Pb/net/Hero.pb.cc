// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Hero.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/Hero.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* THeroAdvanceItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroAdvanceItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroEquipItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroEquipItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineEquipItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineEquipItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroCombination_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroCombination_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroSimpleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroSimpleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroFashionExclEquipInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroFashionExclEquipInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPlugInInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPlugInInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroGetHeroDataArrayReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroGetHeroDataArrayReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroGetHeroDataArrayRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroGetHeroDataArrayRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroUpdateHeroDataNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroUpdateHeroDataNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroLevelUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroLevelUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroStarActivateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroStarActivateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroStarUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroStarUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroEquipAdvanceItemReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroEquipAdvanceItemReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroAdvanceReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroAdvanceReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroRecruitHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroRecruitHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroCombinationUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroCombinationUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroCombinationActiveReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroCombinationActiveReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroSkillUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroSkillUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroResetSkillReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroResetSkillReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroSetMultiEquipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroSetMultiEquipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroSetMultiSoulReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroSetMultiSoulReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroSetWarRidingReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroSetWarRidingReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroSetMultiExclEquipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroSetMultiExclEquipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroSetMultiExclEquipRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroSetMultiExclEquipRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroSetMultiSilkBagReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroSetMultiSilkBagReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroSetDivineEquipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroSetDivineEquipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroUpgradeToGoldReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroUpgradeToGoldReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroUniversalFragConvertReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroUniversalFragConvertReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroGoldBreakReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroGoldBreakReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroWhiteGoldBreakReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroWhiteGoldBreakReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroGoldHeroLinkReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroGoldHeroLinkReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroUpgradeToWhiteGoldReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroUpgradeToWhiteGoldReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroGetPropReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroGetPropReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroGetPropResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroGetPropResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOtherUserHeroInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOtherUserHeroInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSetPlugInHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSetPlugInHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPlugLevelUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPlugLevelUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TResetPlugReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TResetPlugReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TResetPlugRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TResetPlugRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroUpgradeGodLv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroUpgradeGodLv_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroChainSoulReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroChainSoulReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroChainSoulLvUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroChainSoulLvUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroUpgradeToPurpleGoldLvUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroUpgradeToPurpleGoldLvUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroUpgradeToPurpleGoldAdvUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroUpgradeToPurpleGoldAdvUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TForceSoulEquipInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TForceSoulEquipInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroSetMultiForceSoulReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroSetMultiForceSoulReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroAwakeRealBodyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroAwakeRealBodyReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EPlugOpenType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fHero_2eproto() {
  protobuf_AddDesc_net_2fHero_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/Hero.proto");
  GOOGLE_CHECK(file != NULL);
  THeroAdvanceItem_descriptor_ = file->message_type(0);
  static const int THeroAdvanceItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroAdvanceItem, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroAdvanceItem, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroAdvanceItem, arrchilditem_),
  };
  THeroAdvanceItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroAdvanceItem_descriptor_,
      THeroAdvanceItem::default_instance_,
      THeroAdvanceItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroAdvanceItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroAdvanceItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroAdvanceItem));
  THeroEquipItem_descriptor_ = file->message_type(1);
  static const int THeroEquipItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroEquipItem, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroEquipItem, item_),
  };
  THeroEquipItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroEquipItem_descriptor_,
      THeroEquipItem::default_instance_,
      THeroEquipItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroEquipItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroEquipItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroEquipItem));
  TDivineEquipItem_descriptor_ = file->message_type(2);
  static const int TDivineEquipItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineEquipItem, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineEquipItem, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineEquipItem, lv_),
  };
  TDivineEquipItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineEquipItem_descriptor_,
      TDivineEquipItem::default_instance_,
      TDivineEquipItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineEquipItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineEquipItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineEquipItem));
  THeroCombination_descriptor_ = file->message_type(3);
  static const int THeroCombination_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroCombination, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroCombination, level_),
  };
  THeroCombination_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroCombination_descriptor_,
      THeroCombination::default_instance_,
      THeroCombination_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroCombination, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroCombination, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroCombination));
  THeroSkill_descriptor_ = file->message_type(4);
  static const int THeroSkill_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSkill, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSkill, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSkill, idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSkill, arrsubskill_),
  };
  THeroSkill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroSkill_descriptor_,
      THeroSkill::default_instance_,
      THeroSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSkill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSkill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroSkill));
  THeroSimpleInfo_descriptor_ = file->message_type(5);
  static const int THeroSimpleInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSimpleInfo, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSimpleInfo, htid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSimpleInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSimpleInfo, advance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSimpleInfo, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSimpleInfo, pluginfoarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSimpleInfo, pluggerhid_),
  };
  THeroSimpleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroSimpleInfo_descriptor_,
      THeroSimpleInfo::default_instance_,
      THeroSimpleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSimpleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSimpleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroSimpleInfo));
  THeroFashionExclEquipInfo_descriptor_ = file->message_type(6);
  static const int THeroFashionExclEquipInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFashionExclEquipInfo, fashionmodelid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFashionExclEquipInfo, itemid_),
  };
  THeroFashionExclEquipInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroFashionExclEquipInfo_descriptor_,
      THeroFashionExclEquipInfo::default_instance_,
      THeroFashionExclEquipInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFashionExclEquipInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFashionExclEquipInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroFashionExclEquipInfo));
  TPlugInInfo_descriptor_ = file->message_type(7);
  static const int TPlugInInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPlugInInfo, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPlugInInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPlugInInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPlugInInfo, htid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPlugInInfo, starlv_),
  };
  TPlugInInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPlugInInfo_descriptor_,
      TPlugInInfo::default_instance_,
      TPlugInInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPlugInInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPlugInInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPlugInInfo));
  THeroInfo_descriptor_ = file->message_type(8);
  static const int THeroInfo_offsets_[36] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, htid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, advance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, advanceitemarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, starhole_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, combinationarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, skillarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, equipitemarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, soulitemarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, surplusskillpointnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, exclequipitemidarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, fashionexclequiparr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, goldlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, goldbreaklv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, linkedhid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, expiretime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, silkbagitemarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, whitegoldlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, whitegoldbreaklv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, pluginfoarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, pluggerhid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, heropercentage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, godlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, warridingtid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, chainsoulhid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, chainsoullv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, purplegoldbiglv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, purplegoldsmalllv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, purplegoldsoulcost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, divineequipitemarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, forcesoularr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, realbodylv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, forcesoulstarnum_),
  };
  THeroInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroInfo_descriptor_,
      THeroInfo::default_instance_,
      THeroInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroInfo));
  THeroGetHeroDataArrayReq_descriptor_ = file->message_type(9);
  static const int THeroGetHeroDataArrayReq_offsets_[1] = {
  };
  THeroGetHeroDataArrayReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroGetHeroDataArrayReq_descriptor_,
      THeroGetHeroDataArrayReq::default_instance_,
      THeroGetHeroDataArrayReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetHeroDataArrayReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetHeroDataArrayReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroGetHeroDataArrayReq));
  THeroGetHeroDataArrayRsp_descriptor_ = file->message_type(10);
  static const int THeroGetHeroDataArrayRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetHeroDataArrayRsp, herodataarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetHeroDataArrayRsp, histroyheroarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetHeroDataArrayRsp, updatetime_),
  };
  THeroGetHeroDataArrayRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroGetHeroDataArrayRsp_descriptor_,
      THeroGetHeroDataArrayRsp::default_instance_,
      THeroGetHeroDataArrayRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetHeroDataArrayRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetHeroDataArrayRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroGetHeroDataArrayRsp));
  THeroUpdateHeroDataNotify_descriptor_ = file->message_type(11);
  static const int THeroUpdateHeroDataNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpdateHeroDataNotify, herodataarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpdateHeroDataNotify, histroyheroarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpdateHeroDataNotify, updatetime_),
  };
  THeroUpdateHeroDataNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroUpdateHeroDataNotify_descriptor_,
      THeroUpdateHeroDataNotify::default_instance_,
      THeroUpdateHeroDataNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpdateHeroDataNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpdateHeroDataNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroUpdateHeroDataNotify));
  THeroLevelUpReq_descriptor_ = file->message_type(12);
  static const int THeroLevelUpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroLevelUpReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroLevelUpReq, levelupitemarray_),
  };
  THeroLevelUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroLevelUpReq_descriptor_,
      THeroLevelUpReq::default_instance_,
      THeroLevelUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroLevelUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroLevelUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroLevelUpReq));
  THeroStarActivateReq_descriptor_ = file->message_type(13);
  static const int THeroStarActivateReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroStarActivateReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroStarActivateReq, targetholeindex_),
  };
  THeroStarActivateReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroStarActivateReq_descriptor_,
      THeroStarActivateReq::default_instance_,
      THeroStarActivateReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroStarActivateReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroStarActivateReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroStarActivateReq));
  THeroStarUpReq_descriptor_ = file->message_type(14);
  static const int THeroStarUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroStarUpReq, hid_),
  };
  THeroStarUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroStarUpReq_descriptor_,
      THeroStarUpReq::default_instance_,
      THeroStarUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroStarUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroStarUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroStarUpReq));
  THeroEquipAdvanceItemReq_descriptor_ = file->message_type(15);
  static const int THeroEquipAdvanceItemReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroEquipAdvanceItemReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroEquipAdvanceItemReq, advanceitemarray_),
  };
  THeroEquipAdvanceItemReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroEquipAdvanceItemReq_descriptor_,
      THeroEquipAdvanceItemReq::default_instance_,
      THeroEquipAdvanceItemReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroEquipAdvanceItemReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroEquipAdvanceItemReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroEquipAdvanceItemReq));
  THeroAdvanceReq_descriptor_ = file->message_type(16);
  static const int THeroAdvanceReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroAdvanceReq, hid_),
  };
  THeroAdvanceReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroAdvanceReq_descriptor_,
      THeroAdvanceReq::default_instance_,
      THeroAdvanceReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroAdvanceReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroAdvanceReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroAdvanceReq));
  THeroRecruitHeroReq_descriptor_ = file->message_type(17);
  static const int THeroRecruitHeroReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroRecruitHeroReq, tid_),
  };
  THeroRecruitHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroRecruitHeroReq_descriptor_,
      THeroRecruitHeroReq::default_instance_,
      THeroRecruitHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroRecruitHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroRecruitHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroRecruitHeroReq));
  THeroCombinationUpReq_descriptor_ = file->message_type(18);
  static const int THeroCombinationUpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroCombinationUpReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroCombinationUpReq, tid_),
  };
  THeroCombinationUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroCombinationUpReq_descriptor_,
      THeroCombinationUpReq::default_instance_,
      THeroCombinationUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroCombinationUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroCombinationUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroCombinationUpReq));
  THeroCombinationActiveReq_descriptor_ = file->message_type(19);
  static const int THeroCombinationActiveReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroCombinationActiveReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroCombinationActiveReq, tid_),
  };
  THeroCombinationActiveReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroCombinationActiveReq_descriptor_,
      THeroCombinationActiveReq::default_instance_,
      THeroCombinationActiveReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroCombinationActiveReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroCombinationActiveReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroCombinationActiveReq));
  THeroSkillUpReq_descriptor_ = file->message_type(20);
  static const int THeroSkillUpReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSkillUpReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSkillUpReq, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSkillUpReq, upnum_),
  };
  THeroSkillUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroSkillUpReq_descriptor_,
      THeroSkillUpReq::default_instance_,
      THeroSkillUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSkillUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSkillUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroSkillUpReq));
  THeroResetSkillReq_descriptor_ = file->message_type(21);
  static const int THeroResetSkillReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroResetSkillReq, hid_),
  };
  THeroResetSkillReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroResetSkillReq_descriptor_,
      THeroResetSkillReq::default_instance_,
      THeroResetSkillReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroResetSkillReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroResetSkillReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroResetSkillReq));
  THeroSetMultiEquipReq_descriptor_ = file->message_type(22);
  static const int THeroSetMultiEquipReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiEquipReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiEquipReq, equipitems_),
  };
  THeroSetMultiEquipReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroSetMultiEquipReq_descriptor_,
      THeroSetMultiEquipReq::default_instance_,
      THeroSetMultiEquipReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiEquipReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiEquipReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroSetMultiEquipReq));
  THeroSetMultiSoulReq_descriptor_ = file->message_type(23);
  static const int THeroSetMultiSoulReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiSoulReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiSoulReq, soulitems_),
  };
  THeroSetMultiSoulReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroSetMultiSoulReq_descriptor_,
      THeroSetMultiSoulReq::default_instance_,
      THeroSetMultiSoulReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiSoulReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiSoulReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroSetMultiSoulReq));
  THeroSetWarRidingReq_descriptor_ = file->message_type(24);
  static const int THeroSetWarRidingReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetWarRidingReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetWarRidingReq, warridingtid_),
  };
  THeroSetWarRidingReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroSetWarRidingReq_descriptor_,
      THeroSetWarRidingReq::default_instance_,
      THeroSetWarRidingReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetWarRidingReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetWarRidingReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroSetWarRidingReq));
  THeroSetMultiExclEquipReq_descriptor_ = file->message_type(25);
  static const int THeroSetMultiExclEquipReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiExclEquipReq, hid_),
  };
  THeroSetMultiExclEquipReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroSetMultiExclEquipReq_descriptor_,
      THeroSetMultiExclEquipReq::default_instance_,
      THeroSetMultiExclEquipReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiExclEquipReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiExclEquipReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroSetMultiExclEquipReq));
  THeroSetMultiExclEquipRsp_descriptor_ = file->message_type(26);
  static const int THeroSetMultiExclEquipRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiExclEquipRsp, itemid_),
  };
  THeroSetMultiExclEquipRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroSetMultiExclEquipRsp_descriptor_,
      THeroSetMultiExclEquipRsp::default_instance_,
      THeroSetMultiExclEquipRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiExclEquipRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiExclEquipRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroSetMultiExclEquipRsp));
  THeroSetMultiSilkBagReq_descriptor_ = file->message_type(27);
  static const int THeroSetMultiSilkBagReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiSilkBagReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiSilkBagReq, silkbagitems_),
  };
  THeroSetMultiSilkBagReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroSetMultiSilkBagReq_descriptor_,
      THeroSetMultiSilkBagReq::default_instance_,
      THeroSetMultiSilkBagReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiSilkBagReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiSilkBagReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroSetMultiSilkBagReq));
  THeroSetDivineEquipReq_descriptor_ = file->message_type(28);
  static const int THeroSetDivineEquipReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetDivineEquipReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetDivineEquipReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetDivineEquipReq, itemid_),
  };
  THeroSetDivineEquipReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroSetDivineEquipReq_descriptor_,
      THeroSetDivineEquipReq::default_instance_,
      THeroSetDivineEquipReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetDivineEquipReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetDivineEquipReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroSetDivineEquipReq));
  THeroUpgradeToGoldReq_descriptor_ = file->message_type(29);
  static const int THeroUpgradeToGoldReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToGoldReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToGoldReq, cositemarray_),
  };
  THeroUpgradeToGoldReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroUpgradeToGoldReq_descriptor_,
      THeroUpgradeToGoldReq::default_instance_,
      THeroUpgradeToGoldReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToGoldReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToGoldReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroUpgradeToGoldReq));
  THeroUniversalFragConvertReq_descriptor_ = file->message_type(30);
  static const int THeroUniversalFragConvertReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUniversalFragConvertReq, itemtid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUniversalFragConvertReq, htid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUniversalFragConvertReq, num_),
  };
  THeroUniversalFragConvertReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroUniversalFragConvertReq_descriptor_,
      THeroUniversalFragConvertReq::default_instance_,
      THeroUniversalFragConvertReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUniversalFragConvertReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUniversalFragConvertReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroUniversalFragConvertReq));
  THeroGoldBreakReq_descriptor_ = file->message_type(31);
  static const int THeroGoldBreakReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGoldBreakReq, hid_),
  };
  THeroGoldBreakReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroGoldBreakReq_descriptor_,
      THeroGoldBreakReq::default_instance_,
      THeroGoldBreakReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGoldBreakReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGoldBreakReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroGoldBreakReq));
  THeroWhiteGoldBreakReq_descriptor_ = file->message_type(32);
  static const int THeroWhiteGoldBreakReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroWhiteGoldBreakReq, hid_),
  };
  THeroWhiteGoldBreakReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroWhiteGoldBreakReq_descriptor_,
      THeroWhiteGoldBreakReq::default_instance_,
      THeroWhiteGoldBreakReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroWhiteGoldBreakReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroWhiteGoldBreakReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroWhiteGoldBreakReq));
  THeroGoldHeroLinkReq_descriptor_ = file->message_type(33);
  static const int THeroGoldHeroLinkReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGoldHeroLinkReq, hid1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGoldHeroLinkReq, hid2_),
  };
  THeroGoldHeroLinkReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroGoldHeroLinkReq_descriptor_,
      THeroGoldHeroLinkReq::default_instance_,
      THeroGoldHeroLinkReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGoldHeroLinkReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGoldHeroLinkReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroGoldHeroLinkReq));
  THeroUpgradeToWhiteGoldReq_descriptor_ = file->message_type(34);
  static const int THeroUpgradeToWhiteGoldReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToWhiteGoldReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToWhiteGoldReq, cositemarray_),
  };
  THeroUpgradeToWhiteGoldReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroUpgradeToWhiteGoldReq_descriptor_,
      THeroUpgradeToWhiteGoldReq::default_instance_,
      THeroUpgradeToWhiteGoldReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToWhiteGoldReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToWhiteGoldReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroUpgradeToWhiteGoldReq));
  THeroGetPropReq_descriptor_ = file->message_type(35);
  static const int THeroGetPropReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetPropReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetPropReq, htid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetPropReq, uid_),
  };
  THeroGetPropReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroGetPropReq_descriptor_,
      THeroGetPropReq::default_instance_,
      THeroGetPropReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetPropReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetPropReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroGetPropReq));
  THeroGetPropResp_descriptor_ = file->message_type(36);
  static const int THeroGetPropResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetPropResp, propinfo_),
  };
  THeroGetPropResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroGetPropResp_descriptor_,
      THeroGetPropResp::default_instance_,
      THeroGetPropResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetPropResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroGetPropResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroGetPropResp));
  TOtherUserHeroInfo_descriptor_ = file->message_type(37);
  static const int TOtherUserHeroInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOtherUserHeroInfo, heroinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOtherUserHeroInfo, attrarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOtherUserHeroInfo, opentype_),
  };
  TOtherUserHeroInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOtherUserHeroInfo_descriptor_,
      TOtherUserHeroInfo::default_instance_,
      TOtherUserHeroInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOtherUserHeroInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOtherUserHeroInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOtherUserHeroInfo));
  TSetPlugInHeroReq_descriptor_ = file->message_type(38);
  static const int TSetPlugInHeroReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSetPlugInHeroReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSetPlugInHeroReq, pluginhid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSetPlugInHeroReq, pos_),
  };
  TSetPlugInHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSetPlugInHeroReq_descriptor_,
      TSetPlugInHeroReq::default_instance_,
      TSetPlugInHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSetPlugInHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSetPlugInHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSetPlugInHeroReq));
  TPlugLevelUpReq_descriptor_ = file->message_type(39);
  static const int TPlugLevelUpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPlugLevelUpReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPlugLevelUpReq, hid_),
  };
  TPlugLevelUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPlugLevelUpReq_descriptor_,
      TPlugLevelUpReq::default_instance_,
      TPlugLevelUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPlugLevelUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPlugLevelUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPlugLevelUpReq));
  TResetPlugReq_descriptor_ = file->message_type(40);
  static const int TResetPlugReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TResetPlugReq, hid_),
  };
  TResetPlugReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TResetPlugReq_descriptor_,
      TResetPlugReq::default_instance_,
      TResetPlugReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TResetPlugReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TResetPlugReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TResetPlugReq));
  TResetPlugRsp_descriptor_ = file->message_type(41);
  static const int TResetPlugRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TResetPlugRsp, rewardarray_),
  };
  TResetPlugRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TResetPlugRsp_descriptor_,
      TResetPlugRsp::default_instance_,
      TResetPlugRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TResetPlugRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TResetPlugRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TResetPlugRsp));
  THeroUpgradeGodLv_descriptor_ = file->message_type(42);
  static const int THeroUpgradeGodLv_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeGodLv, hid_),
  };
  THeroUpgradeGodLv_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroUpgradeGodLv_descriptor_,
      THeroUpgradeGodLv::default_instance_,
      THeroUpgradeGodLv_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeGodLv, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeGodLv, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroUpgradeGodLv));
  THeroChainSoulReq_descriptor_ = file->message_type(43);
  static const int THeroChainSoulReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroChainSoulReq, hid1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroChainSoulReq, hid2_),
  };
  THeroChainSoulReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroChainSoulReq_descriptor_,
      THeroChainSoulReq::default_instance_,
      THeroChainSoulReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroChainSoulReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroChainSoulReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroChainSoulReq));
  THeroChainSoulLvUpReq_descriptor_ = file->message_type(44);
  static const int THeroChainSoulLvUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroChainSoulLvUpReq, hid_),
  };
  THeroChainSoulLvUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroChainSoulLvUpReq_descriptor_,
      THeroChainSoulLvUpReq::default_instance_,
      THeroChainSoulLvUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroChainSoulLvUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroChainSoulLvUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroChainSoulLvUpReq));
  THeroUpgradeToPurpleGoldLvUpReq_descriptor_ = file->message_type(45);
  static const int THeroUpgradeToPurpleGoldLvUpReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToPurpleGoldLvUpReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToPurpleGoldLvUpReq, lvid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToPurpleGoldLvUpReq, cositemarray_),
  };
  THeroUpgradeToPurpleGoldLvUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroUpgradeToPurpleGoldLvUpReq_descriptor_,
      THeroUpgradeToPurpleGoldLvUpReq::default_instance_,
      THeroUpgradeToPurpleGoldLvUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToPurpleGoldLvUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToPurpleGoldLvUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroUpgradeToPurpleGoldLvUpReq));
  THeroUpgradeToPurpleGoldAdvUpReq_descriptor_ = file->message_type(46);
  static const int THeroUpgradeToPurpleGoldAdvUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToPurpleGoldAdvUpReq, hid_),
  };
  THeroUpgradeToPurpleGoldAdvUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroUpgradeToPurpleGoldAdvUpReq_descriptor_,
      THeroUpgradeToPurpleGoldAdvUpReq::default_instance_,
      THeroUpgradeToPurpleGoldAdvUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToPurpleGoldAdvUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroUpgradeToPurpleGoldAdvUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroUpgradeToPurpleGoldAdvUpReq));
  TForceSoulEquipInfo_descriptor_ = file->message_type(47);
  static const int TForceSoulEquipInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TForceSoulEquipInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TForceSoulEquipInfo, itemid_),
  };
  TForceSoulEquipInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TForceSoulEquipInfo_descriptor_,
      TForceSoulEquipInfo::default_instance_,
      TForceSoulEquipInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TForceSoulEquipInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TForceSoulEquipInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TForceSoulEquipInfo));
  THeroSetMultiForceSoulReq_descriptor_ = file->message_type(48);
  static const int THeroSetMultiForceSoulReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiForceSoulReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiForceSoulReq, equipitems_),
  };
  THeroSetMultiForceSoulReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroSetMultiForceSoulReq_descriptor_,
      THeroSetMultiForceSoulReq::default_instance_,
      THeroSetMultiForceSoulReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiForceSoulReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroSetMultiForceSoulReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroSetMultiForceSoulReq));
  THeroAwakeRealBodyReq_descriptor_ = file->message_type(49);
  static const int THeroAwakeRealBodyReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroAwakeRealBodyReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroAwakeRealBodyReq, cositemarray_),
  };
  THeroAwakeRealBodyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroAwakeRealBodyReq_descriptor_,
      THeroAwakeRealBodyReq::default_instance_,
      THeroAwakeRealBodyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroAwakeRealBodyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroAwakeRealBodyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroAwakeRealBodyReq));
  EPlugOpenType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fHero_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroAdvanceItem_descriptor_, &THeroAdvanceItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroEquipItem_descriptor_, &THeroEquipItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineEquipItem_descriptor_, &TDivineEquipItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroCombination_descriptor_, &THeroCombination::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroSkill_descriptor_, &THeroSkill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroSimpleInfo_descriptor_, &THeroSimpleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroFashionExclEquipInfo_descriptor_, &THeroFashionExclEquipInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPlugInInfo_descriptor_, &TPlugInInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroInfo_descriptor_, &THeroInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroGetHeroDataArrayReq_descriptor_, &THeroGetHeroDataArrayReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroGetHeroDataArrayRsp_descriptor_, &THeroGetHeroDataArrayRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroUpdateHeroDataNotify_descriptor_, &THeroUpdateHeroDataNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroLevelUpReq_descriptor_, &THeroLevelUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroStarActivateReq_descriptor_, &THeroStarActivateReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroStarUpReq_descriptor_, &THeroStarUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroEquipAdvanceItemReq_descriptor_, &THeroEquipAdvanceItemReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroAdvanceReq_descriptor_, &THeroAdvanceReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroRecruitHeroReq_descriptor_, &THeroRecruitHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroCombinationUpReq_descriptor_, &THeroCombinationUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroCombinationActiveReq_descriptor_, &THeroCombinationActiveReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroSkillUpReq_descriptor_, &THeroSkillUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroResetSkillReq_descriptor_, &THeroResetSkillReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroSetMultiEquipReq_descriptor_, &THeroSetMultiEquipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroSetMultiSoulReq_descriptor_, &THeroSetMultiSoulReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroSetWarRidingReq_descriptor_, &THeroSetWarRidingReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroSetMultiExclEquipReq_descriptor_, &THeroSetMultiExclEquipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroSetMultiExclEquipRsp_descriptor_, &THeroSetMultiExclEquipRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroSetMultiSilkBagReq_descriptor_, &THeroSetMultiSilkBagReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroSetDivineEquipReq_descriptor_, &THeroSetDivineEquipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroUpgradeToGoldReq_descriptor_, &THeroUpgradeToGoldReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroUniversalFragConvertReq_descriptor_, &THeroUniversalFragConvertReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroGoldBreakReq_descriptor_, &THeroGoldBreakReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroWhiteGoldBreakReq_descriptor_, &THeroWhiteGoldBreakReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroGoldHeroLinkReq_descriptor_, &THeroGoldHeroLinkReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroUpgradeToWhiteGoldReq_descriptor_, &THeroUpgradeToWhiteGoldReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroGetPropReq_descriptor_, &THeroGetPropReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroGetPropResp_descriptor_, &THeroGetPropResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOtherUserHeroInfo_descriptor_, &TOtherUserHeroInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSetPlugInHeroReq_descriptor_, &TSetPlugInHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPlugLevelUpReq_descriptor_, &TPlugLevelUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TResetPlugReq_descriptor_, &TResetPlugReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TResetPlugRsp_descriptor_, &TResetPlugRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroUpgradeGodLv_descriptor_, &THeroUpgradeGodLv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroChainSoulReq_descriptor_, &THeroChainSoulReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroChainSoulLvUpReq_descriptor_, &THeroChainSoulLvUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroUpgradeToPurpleGoldLvUpReq_descriptor_, &THeroUpgradeToPurpleGoldLvUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroUpgradeToPurpleGoldAdvUpReq_descriptor_, &THeroUpgradeToPurpleGoldAdvUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TForceSoulEquipInfo_descriptor_, &TForceSoulEquipInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroSetMultiForceSoulReq_descriptor_, &THeroSetMultiForceSoulReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroAwakeRealBodyReq_descriptor_, &THeroAwakeRealBodyReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fHero_2eproto() {
  delete THeroAdvanceItem::default_instance_;
  delete THeroAdvanceItem_reflection_;
  delete THeroEquipItem::default_instance_;
  delete THeroEquipItem_reflection_;
  delete TDivineEquipItem::default_instance_;
  delete TDivineEquipItem_reflection_;
  delete THeroCombination::default_instance_;
  delete THeroCombination_reflection_;
  delete THeroSkill::default_instance_;
  delete THeroSkill_reflection_;
  delete THeroSimpleInfo::default_instance_;
  delete THeroSimpleInfo_reflection_;
  delete THeroFashionExclEquipInfo::default_instance_;
  delete THeroFashionExclEquipInfo_reflection_;
  delete TPlugInInfo::default_instance_;
  delete TPlugInInfo_reflection_;
  delete THeroInfo::default_instance_;
  delete THeroInfo_reflection_;
  delete THeroGetHeroDataArrayReq::default_instance_;
  delete THeroGetHeroDataArrayReq_reflection_;
  delete THeroGetHeroDataArrayRsp::default_instance_;
  delete THeroGetHeroDataArrayRsp_reflection_;
  delete THeroUpdateHeroDataNotify::default_instance_;
  delete THeroUpdateHeroDataNotify_reflection_;
  delete THeroLevelUpReq::default_instance_;
  delete THeroLevelUpReq_reflection_;
  delete THeroStarActivateReq::default_instance_;
  delete THeroStarActivateReq_reflection_;
  delete THeroStarUpReq::default_instance_;
  delete THeroStarUpReq_reflection_;
  delete THeroEquipAdvanceItemReq::default_instance_;
  delete THeroEquipAdvanceItemReq_reflection_;
  delete THeroAdvanceReq::default_instance_;
  delete THeroAdvanceReq_reflection_;
  delete THeroRecruitHeroReq::default_instance_;
  delete THeroRecruitHeroReq_reflection_;
  delete THeroCombinationUpReq::default_instance_;
  delete THeroCombinationUpReq_reflection_;
  delete THeroCombinationActiveReq::default_instance_;
  delete THeroCombinationActiveReq_reflection_;
  delete THeroSkillUpReq::default_instance_;
  delete THeroSkillUpReq_reflection_;
  delete THeroResetSkillReq::default_instance_;
  delete THeroResetSkillReq_reflection_;
  delete THeroSetMultiEquipReq::default_instance_;
  delete THeroSetMultiEquipReq_reflection_;
  delete THeroSetMultiSoulReq::default_instance_;
  delete THeroSetMultiSoulReq_reflection_;
  delete THeroSetWarRidingReq::default_instance_;
  delete THeroSetWarRidingReq_reflection_;
  delete THeroSetMultiExclEquipReq::default_instance_;
  delete THeroSetMultiExclEquipReq_reflection_;
  delete THeroSetMultiExclEquipRsp::default_instance_;
  delete THeroSetMultiExclEquipRsp_reflection_;
  delete THeroSetMultiSilkBagReq::default_instance_;
  delete THeroSetMultiSilkBagReq_reflection_;
  delete THeroSetDivineEquipReq::default_instance_;
  delete THeroSetDivineEquipReq_reflection_;
  delete THeroUpgradeToGoldReq::default_instance_;
  delete THeroUpgradeToGoldReq_reflection_;
  delete THeroUniversalFragConvertReq::default_instance_;
  delete THeroUniversalFragConvertReq_reflection_;
  delete THeroGoldBreakReq::default_instance_;
  delete THeroGoldBreakReq_reflection_;
  delete THeroWhiteGoldBreakReq::default_instance_;
  delete THeroWhiteGoldBreakReq_reflection_;
  delete THeroGoldHeroLinkReq::default_instance_;
  delete THeroGoldHeroLinkReq_reflection_;
  delete THeroUpgradeToWhiteGoldReq::default_instance_;
  delete THeroUpgradeToWhiteGoldReq_reflection_;
  delete THeroGetPropReq::default_instance_;
  delete THeroGetPropReq_reflection_;
  delete THeroGetPropResp::default_instance_;
  delete THeroGetPropResp_reflection_;
  delete TOtherUserHeroInfo::default_instance_;
  delete TOtherUserHeroInfo_reflection_;
  delete TSetPlugInHeroReq::default_instance_;
  delete TSetPlugInHeroReq_reflection_;
  delete TPlugLevelUpReq::default_instance_;
  delete TPlugLevelUpReq_reflection_;
  delete TResetPlugReq::default_instance_;
  delete TResetPlugReq_reflection_;
  delete TResetPlugRsp::default_instance_;
  delete TResetPlugRsp_reflection_;
  delete THeroUpgradeGodLv::default_instance_;
  delete THeroUpgradeGodLv_reflection_;
  delete THeroChainSoulReq::default_instance_;
  delete THeroChainSoulReq_reflection_;
  delete THeroChainSoulLvUpReq::default_instance_;
  delete THeroChainSoulLvUpReq_reflection_;
  delete THeroUpgradeToPurpleGoldLvUpReq::default_instance_;
  delete THeroUpgradeToPurpleGoldLvUpReq_reflection_;
  delete THeroUpgradeToPurpleGoldAdvUpReq::default_instance_;
  delete THeroUpgradeToPurpleGoldAdvUpReq_reflection_;
  delete TForceSoulEquipInfo::default_instance_;
  delete TForceSoulEquipInfo_reflection_;
  delete THeroSetMultiForceSoulReq::default_instance_;
  delete THeroSetMultiForceSoulReq_reflection_;
  delete THeroAwakeRealBodyReq::default_instance_;
  delete THeroAwakeRealBodyReq_reflection_;
}

void protobuf_AddDesc_net_2fHero_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommon_2eproto();
  ::pb::protobuf_AddDesc_net_2fBattle_2eproto();
  ::pb::protobuf_AddDesc_module_2fAttributer_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016net/Hero.proto\022\002pb\032\020net/Common.proto\032\020"
    "net/Battle.proto\032\027module/Attributer.prot"
    "o\032\026net/CommonReward.proto\"e\n\020THeroAdvanc"
    "eItem\022\013\n\003Pos\030\001 \001(\r\022\035\n\004Item\030\002 \001(\0132\017.pb.TS"
    "impleItem\022%\n\014ArrChildItem\030\003 \003(\0132\017.pb.TSi"
    "mpleItem\"<\n\016THeroEquipItem\022\013\n\003Pos\030\001 \001(\r\022"
    "\035\n\004Item\030\002 \001(\0132\017.pb.TSimpleItem\"J\n\020TDivin"
    "eEquipItem\022\013\n\003Pos\030\001 \001(\r\022\035\n\004Item\030\002 \001(\0132\017."
    "pb.TSimpleItem\022\n\n\002lv\030\003 \001(\r\".\n\020THeroCombi"
    "nation\022\013\n\003Tid\030\001 \001(\r\022\r\n\005Level\030\002 \001(\r\"J\n\nTH"
    "eroSkill\022\013\n\003Tid\030\001 \001(\r\022\r\n\005Level\030\002 \001(\r\022\013\n\003"
    "Idx\030\003 \001(\r\022\023\n\013ArrSubSkill\030\004 \003(\r\"\224\001\n\017THero"
    "SimpleInfo\022\013\n\003Hid\030\001 \001(\r\022\014\n\004Htid\030\002 \001(\r\022\r\n"
    "\005Level\030\003 \001(\r\022\017\n\007Advance\030\004 \001(\r\022\014\n\004Star\030\005 "
    "\001(\r\022$\n\013PlugInfoArr\030\027 \003(\0132\017.pb.TPlugInInf"
    "o\022\022\n\nPluggerHid\030\030 \001(\r\"C\n\031THeroFashionExc"
    "lEquipInfo\022\026\n\016FashionModelId\030\001 \001(\r\022\016\n\006It"
    "emId\030\002 \001(\r\"T\n\013TPlugInInfo\022\013\n\003Hid\030\001 \001(\r\022\r"
    "\n\005Level\030\002 \001(\r\022\013\n\003Pos\030\003 \001(\r\022\014\n\004Htid\030\004 \001(\r"
    "\022\016\n\006StarLv\030\005 \001(\r\"\343\007\n\tTHeroInfo\022\013\n\003Hid\030\001 "
    "\001(\r\022\014\n\004Htid\030\002 \001(\r\022\r\n\005Level\030\003 \001(\r\022\013\n\003Exp\030"
    "\004 \001(\r\022\017\n\007Advance\030\005 \001(\r\022.\n\020AdvanceItemArr"
    "ay\030\006 \003(\0132\024.pb.THeroAdvanceItem\022\014\n\004Star\030\007"
    " \001(\r\022\020\n\010StarHole\030\010 \001(\r\022.\n\020CombinationArr"
    "ay\030\t \003(\0132\024.pb.THeroCombination\022\"\n\nSkillA"
    "rray\030\n \003(\0132\016.pb.THeroSkill\022(\n\014EquipItemA"
    "rr\030\013 \003(\0132\022.pb.THeroEquipItem\022\'\n\013SoulItem"
    "Arr\030\014 \003(\0132\022.pb.THeroEquipItem\022\034\n\024Surplus"
    "SkillPointNum\030\r \001(\r\022\032\n\022ExclEquipItemIdAr"
    "r\030\016 \003(\r\022:\n\023FashionExclEquipArr\030\017 \003(\0132\035.p"
    "b.THeroFashionExclEquipInfo\022\016\n\006GoldLv\030\020 "
    "\001(\r\022\023\n\013GoldBreakLv\030\021 \001(\r\022\021\n\tLinkedHid\030\022 "
    "\001(\r\022\022\n\nExpireTime\030\023 \001(\004\022*\n\016SilkBagItemAr"
    "r\030\024 \003(\0132\022.pb.THeroEquipItem\022\023\n\013WhiteGold"
    "Lv\030\025 \001(\r\022\030\n\020WhiteGoldBreakLv\030\026 \001(\r\022$\n\013Pl"
    "ugInfoArr\030\027 \003(\0132\017.pb.TPlugInInfo\022\022\n\nPlug"
    "gerHid\030\030 \001(\r\022\026\n\016HeroPercentage\030\031 \001(\004\022\r\n\005"
    "GodLv\030\032 \001(\r\022\024\n\014WarRidingTid\030\033 \001(\r\022\024\n\014Cha"
    "inSoulHid\030\034 \001(\r\022\023\n\013ChainSoulLv\030\035 \001(\r\022\027\n\017"
    "PurpleGoldBigLv\030\036 \001(\r\022\031\n\021PurpleGoldSmall"
    "Lv\030\037 \003(\r\022\032\n\022PurpleGoldSoulCost\030  \001(\r\0220\n\022"
    "DivineEquipItemArr\030! \003(\0132\024.pb.TDivineEqu"
    "ipItem\022(\n\014ForceSoulArr\030\" \003(\0132\022.pb.THeroE"
    "quipItem\022\022\n\nRealBodyLv\030# \001(\r\022\030\n\020ForceSou"
    "lStarNum\030$ \001(\r\"\032\n\030THeroGetHeroDataArrayR"
    "eq\"n\n\030THeroGetHeroDataArrayRsp\022$\n\rHeroDa"
    "taArray\030\001 \003(\0132\r.pb.THeroInfo\022\030\n\020HistroyH"
    "eroArray\030\002 \003(\r\022\022\n\nUpdateTime\030\003 \001(\004\"o\n\031TH"
    "eroUpdateHeroDataNotify\022$\n\rHeroDataArray"
    "\030\001 \003(\0132\r.pb.THeroInfo\022\030\n\020HistroyHeroArra"
    "y\030\002 \003(\r\022\022\n\nUpdateTime\030\003 \001(\004\"I\n\017THeroLeve"
    "lUpReq\022\013\n\003Hid\030\001 \001(\r\022)\n\020LevelUpItemArray\030"
    "\002 \003(\0132\017.pb.TSimpleItem\"<\n\024THeroStarActiv"
    "ateReq\022\013\n\003Hid\030\001 \001(\r\022\027\n\017TargetHoleIndex\030\002"
    " \001(\r\"\035\n\016THeroStarUpReq\022\013\n\003Hid\030\001 \001(\r\"W\n\030T"
    "HeroEquipAdvanceItemReq\022\013\n\003Hid\030\001 \001(\r\022.\n\020"
    "AdvanceItemArray\030\002 \003(\0132\024.pb.THeroAdvance"
    "Item\"\036\n\017THeroAdvanceReq\022\013\n\003Hid\030\001 \001(\r\"\"\n\023"
    "THeroRecruitHeroReq\022\013\n\003Tid\030\001 \001(\r\"1\n\025THer"
    "oCombinationUpReq\022\013\n\003Hid\030\001 \001(\r\022\013\n\003Tid\030\002 "
    "\001(\r\"5\n\031THeroCombinationActiveReq\022\013\n\003Hid\030"
    "\001 \001(\r\022\013\n\003Tid\030\002 \001(\r\":\n\017THeroSkillUpReq\022\013\n"
    "\003Hid\030\001 \001(\r\022\013\n\003Tid\030\002 \001(\r\022\r\n\005UpNum\030\003 \001(\r\"!"
    "\n\022THeroResetSkillReq\022\013\n\003Hid\030\001 \001(\r\"L\n\025THe"
    "roSetMultiEquipReq\022\013\n\003Hid\030\001 \001(\r\022&\n\nEquip"
    "Items\030\002 \003(\0132\022.pb.THeroEquipItem\"J\n\024THero"
    "SetMultiSoulReq\022\013\n\003Hid\030\001 \001(\r\022%\n\tSoulItem"
    "s\030\002 \003(\0132\022.pb.THeroEquipItem\"9\n\024THeroSetW"
    "arRidingReq\022\013\n\003Hid\030\001 \001(\r\022\024\n\014WarRidingTid"
    "\030\002 \001(\r\"(\n\031THeroSetMultiExclEquipReq\022\013\n\003H"
    "id\030\001 \001(\r\"+\n\031THeroSetMultiExclEquipRsp\022\016\n"
    "\006ItemId\030\001 \001(\r\"P\n\027THeroSetMultiSilkBagReq"
    "\022\013\n\003Hid\030\001 \001(\r\022(\n\014SilkBagItems\030\002 \003(\0132\022.pb"
    ".THeroEquipItem\"B\n\026THeroSetDivineEquipRe"
    "q\022\013\n\003Pos\030\001 \001(\r\022\013\n\003Hid\030\002 \001(\r\022\016\n\006ItemId\030\003 "
    "\001(\r\"K\n\025THeroUpgradeToGoldReq\022\013\n\003Hid\030\001 \001("
    "\r\022%\n\014CosItemArray\030\002 \003(\0132\017.pb.TSimpleItem"
    "\"J\n\034THeroUniversalFragConvertReq\022\017\n\007Item"
    "Tid\030\001 \001(\r\022\014\n\004Htid\030\002 \001(\r\022\013\n\003Num\030\003 \001(\r\" \n\021"
    "THeroGoldBreakReq\022\013\n\003Hid\030\001 \001(\r\"%\n\026THeroW"
    "hiteGoldBreakReq\022\013\n\003Hid\030\001 \001(\r\"2\n\024THeroGo"
    "ldHeroLinkReq\022\014\n\004Hid1\030\001 \001(\r\022\014\n\004Hid2\030\002 \001("
    "\r\"P\n\032THeroUpgradeToWhiteGoldReq\022\013\n\003Hid\030\001"
    " \001(\r\022%\n\014CosItemArray\030\002 \003(\0132\017.pb.TSimpleI"
    "tem\"9\n\017THeroGetPropReq\022\013\n\003Hid\030\001 \001(\r\022\014\n\004H"
    "tid\030\002 \001(\r\022\013\n\003Uid\030\003 \001(\004\"3\n\020THeroGetPropRe"
    "sp\022\037\n\010PropInfo\030\001 \001(\0132\r.pb.TUnitInfo\"{\n\022T"
    "OtherUserHeroInfo\022\037\n\010HeroInfo\030\001 \001(\0132\r.pb"
    ".THeroInfo\022\037\n\007AttrArr\030\002 \003(\0132\016.pb.TAttrib"
    "ute\022#\n\010OpenType\030\006 \001(\0162\021.pb.EPlugOpenType"
    "\"@\n\021TSetPlugInHeroReq\022\013\n\003Hid\030\001 \001(\r\022\021\n\tPl"
    "ugInHid\030\002 \001(\r\022\013\n\003Pos\030\003 \001(\r\"+\n\017TPlugLevel"
    "UpReq\022\013\n\003Pos\030\001 \001(\r\022\013\n\003Hid\030\002 \001(\r\"\034\n\rTRese"
    "tPlugReq\022\013\n\003Hid\030\001 \001(\r\"7\n\rTResetPlugRsp\022&"
    "\n\013RewardArray\030\001 \003(\0132\021.pb.TCommonReward\" "
    "\n\021THeroUpgradeGodLv\022\013\n\003Hid\030\001 \001(\r\"/\n\021THer"
    "oChainSoulReq\022\014\n\004Hid1\030\001 \001(\r\022\014\n\004Hid2\030\002 \001("
    "\r\"$\n\025THeroChainSoulLvUpReq\022\013\n\003Hid\030\001 \001(\r\""
    "c\n\037THeroUpgradeToPurpleGoldLvUpReq\022\013\n\003Hi"
    "d\030\001 \001(\r\022\014\n\004LvId\030\002 \001(\r\022%\n\014CosItemArray\030\003 "
    "\003(\0132\017.pb.TSimpleItem\"/\n THeroUpgradeToPu"
    "rpleGoldAdvUpReq\022\013\n\003Hid\030\001 \001(\r\"2\n\023TForceS"
    "oulEquipInfo\022\013\n\003Pos\030\001 \001(\r\022\016\n\006ItemId\030\002 \001("
    "\005\"U\n\031THeroSetMultiForceSoulReq\022\013\n\003Hid\030\001 "
    "\001(\r\022+\n\nEquipItems\030\002 \003(\0132\027.pb.TForceSoulE"
    "quipInfo\"K\n\025THeroAwakeRealBodyReq\022\013\n\003Hid"
    "\030\001 \001(\r\022%\n\014CosItemArray\030\002 \003(\0132\017.pb.TSimpl"
    "eItem*&\n\rEPlugOpenType\022\013\n\007NOTOPEN\020\000\022\010\n\004O"
    "PEN\020\001", 4325);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/Hero.proto", &protobuf_RegisterTypes);
  THeroAdvanceItem::default_instance_ = new THeroAdvanceItem();
  THeroEquipItem::default_instance_ = new THeroEquipItem();
  TDivineEquipItem::default_instance_ = new TDivineEquipItem();
  THeroCombination::default_instance_ = new THeroCombination();
  THeroSkill::default_instance_ = new THeroSkill();
  THeroSimpleInfo::default_instance_ = new THeroSimpleInfo();
  THeroFashionExclEquipInfo::default_instance_ = new THeroFashionExclEquipInfo();
  TPlugInInfo::default_instance_ = new TPlugInInfo();
  THeroInfo::default_instance_ = new THeroInfo();
  THeroGetHeroDataArrayReq::default_instance_ = new THeroGetHeroDataArrayReq();
  THeroGetHeroDataArrayRsp::default_instance_ = new THeroGetHeroDataArrayRsp();
  THeroUpdateHeroDataNotify::default_instance_ = new THeroUpdateHeroDataNotify();
  THeroLevelUpReq::default_instance_ = new THeroLevelUpReq();
  THeroStarActivateReq::default_instance_ = new THeroStarActivateReq();
  THeroStarUpReq::default_instance_ = new THeroStarUpReq();
  THeroEquipAdvanceItemReq::default_instance_ = new THeroEquipAdvanceItemReq();
  THeroAdvanceReq::default_instance_ = new THeroAdvanceReq();
  THeroRecruitHeroReq::default_instance_ = new THeroRecruitHeroReq();
  THeroCombinationUpReq::default_instance_ = new THeroCombinationUpReq();
  THeroCombinationActiveReq::default_instance_ = new THeroCombinationActiveReq();
  THeroSkillUpReq::default_instance_ = new THeroSkillUpReq();
  THeroResetSkillReq::default_instance_ = new THeroResetSkillReq();
  THeroSetMultiEquipReq::default_instance_ = new THeroSetMultiEquipReq();
  THeroSetMultiSoulReq::default_instance_ = new THeroSetMultiSoulReq();
  THeroSetWarRidingReq::default_instance_ = new THeroSetWarRidingReq();
  THeroSetMultiExclEquipReq::default_instance_ = new THeroSetMultiExclEquipReq();
  THeroSetMultiExclEquipRsp::default_instance_ = new THeroSetMultiExclEquipRsp();
  THeroSetMultiSilkBagReq::default_instance_ = new THeroSetMultiSilkBagReq();
  THeroSetDivineEquipReq::default_instance_ = new THeroSetDivineEquipReq();
  THeroUpgradeToGoldReq::default_instance_ = new THeroUpgradeToGoldReq();
  THeroUniversalFragConvertReq::default_instance_ = new THeroUniversalFragConvertReq();
  THeroGoldBreakReq::default_instance_ = new THeroGoldBreakReq();
  THeroWhiteGoldBreakReq::default_instance_ = new THeroWhiteGoldBreakReq();
  THeroGoldHeroLinkReq::default_instance_ = new THeroGoldHeroLinkReq();
  THeroUpgradeToWhiteGoldReq::default_instance_ = new THeroUpgradeToWhiteGoldReq();
  THeroGetPropReq::default_instance_ = new THeroGetPropReq();
  THeroGetPropResp::default_instance_ = new THeroGetPropResp();
  TOtherUserHeroInfo::default_instance_ = new TOtherUserHeroInfo();
  TSetPlugInHeroReq::default_instance_ = new TSetPlugInHeroReq();
  TPlugLevelUpReq::default_instance_ = new TPlugLevelUpReq();
  TResetPlugReq::default_instance_ = new TResetPlugReq();
  TResetPlugRsp::default_instance_ = new TResetPlugRsp();
  THeroUpgradeGodLv::default_instance_ = new THeroUpgradeGodLv();
  THeroChainSoulReq::default_instance_ = new THeroChainSoulReq();
  THeroChainSoulLvUpReq::default_instance_ = new THeroChainSoulLvUpReq();
  THeroUpgradeToPurpleGoldLvUpReq::default_instance_ = new THeroUpgradeToPurpleGoldLvUpReq();
  THeroUpgradeToPurpleGoldAdvUpReq::default_instance_ = new THeroUpgradeToPurpleGoldAdvUpReq();
  TForceSoulEquipInfo::default_instance_ = new TForceSoulEquipInfo();
  THeroSetMultiForceSoulReq::default_instance_ = new THeroSetMultiForceSoulReq();
  THeroAwakeRealBodyReq::default_instance_ = new THeroAwakeRealBodyReq();
  THeroAdvanceItem::default_instance_->InitAsDefaultInstance();
  THeroEquipItem::default_instance_->InitAsDefaultInstance();
  TDivineEquipItem::default_instance_->InitAsDefaultInstance();
  THeroCombination::default_instance_->InitAsDefaultInstance();
  THeroSkill::default_instance_->InitAsDefaultInstance();
  THeroSimpleInfo::default_instance_->InitAsDefaultInstance();
  THeroFashionExclEquipInfo::default_instance_->InitAsDefaultInstance();
  TPlugInInfo::default_instance_->InitAsDefaultInstance();
  THeroInfo::default_instance_->InitAsDefaultInstance();
  THeroGetHeroDataArrayReq::default_instance_->InitAsDefaultInstance();
  THeroGetHeroDataArrayRsp::default_instance_->InitAsDefaultInstance();
  THeroUpdateHeroDataNotify::default_instance_->InitAsDefaultInstance();
  THeroLevelUpReq::default_instance_->InitAsDefaultInstance();
  THeroStarActivateReq::default_instance_->InitAsDefaultInstance();
  THeroStarUpReq::default_instance_->InitAsDefaultInstance();
  THeroEquipAdvanceItemReq::default_instance_->InitAsDefaultInstance();
  THeroAdvanceReq::default_instance_->InitAsDefaultInstance();
  THeroRecruitHeroReq::default_instance_->InitAsDefaultInstance();
  THeroCombinationUpReq::default_instance_->InitAsDefaultInstance();
  THeroCombinationActiveReq::default_instance_->InitAsDefaultInstance();
  THeroSkillUpReq::default_instance_->InitAsDefaultInstance();
  THeroResetSkillReq::default_instance_->InitAsDefaultInstance();
  THeroSetMultiEquipReq::default_instance_->InitAsDefaultInstance();
  THeroSetMultiSoulReq::default_instance_->InitAsDefaultInstance();
  THeroSetWarRidingReq::default_instance_->InitAsDefaultInstance();
  THeroSetMultiExclEquipReq::default_instance_->InitAsDefaultInstance();
  THeroSetMultiExclEquipRsp::default_instance_->InitAsDefaultInstance();
  THeroSetMultiSilkBagReq::default_instance_->InitAsDefaultInstance();
  THeroSetDivineEquipReq::default_instance_->InitAsDefaultInstance();
  THeroUpgradeToGoldReq::default_instance_->InitAsDefaultInstance();
  THeroUniversalFragConvertReq::default_instance_->InitAsDefaultInstance();
  THeroGoldBreakReq::default_instance_->InitAsDefaultInstance();
  THeroWhiteGoldBreakReq::default_instance_->InitAsDefaultInstance();
  THeroGoldHeroLinkReq::default_instance_->InitAsDefaultInstance();
  THeroUpgradeToWhiteGoldReq::default_instance_->InitAsDefaultInstance();
  THeroGetPropReq::default_instance_->InitAsDefaultInstance();
  THeroGetPropResp::default_instance_->InitAsDefaultInstance();
  TOtherUserHeroInfo::default_instance_->InitAsDefaultInstance();
  TSetPlugInHeroReq::default_instance_->InitAsDefaultInstance();
  TPlugLevelUpReq::default_instance_->InitAsDefaultInstance();
  TResetPlugReq::default_instance_->InitAsDefaultInstance();
  TResetPlugRsp::default_instance_->InitAsDefaultInstance();
  THeroUpgradeGodLv::default_instance_->InitAsDefaultInstance();
  THeroChainSoulReq::default_instance_->InitAsDefaultInstance();
  THeroChainSoulLvUpReq::default_instance_->InitAsDefaultInstance();
  THeroUpgradeToPurpleGoldLvUpReq::default_instance_->InitAsDefaultInstance();
  THeroUpgradeToPurpleGoldAdvUpReq::default_instance_->InitAsDefaultInstance();
  TForceSoulEquipInfo::default_instance_->InitAsDefaultInstance();
  THeroSetMultiForceSoulReq::default_instance_->InitAsDefaultInstance();
  THeroAwakeRealBodyReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fHero_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fHero_2eproto {
  StaticDescriptorInitializer_net_2fHero_2eproto() {
    protobuf_AddDesc_net_2fHero_2eproto();
  }
} static_descriptor_initializer_net_2fHero_2eproto_;
const ::google::protobuf::EnumDescriptor* EPlugOpenType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EPlugOpenType_descriptor_;
}
bool EPlugOpenType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int THeroAdvanceItem::kPosFieldNumber;
const int THeroAdvanceItem::kItemFieldNumber;
const int THeroAdvanceItem::kArrChildItemFieldNumber;
#endif  // !_MSC_VER

THeroAdvanceItem::THeroAdvanceItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroAdvanceItem)
}

void THeroAdvanceItem::InitAsDefaultInstance() {
  item_ = const_cast< ::pb::TSimpleItem*>(&::pb::TSimpleItem::default_instance());
}

THeroAdvanceItem::THeroAdvanceItem(const THeroAdvanceItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroAdvanceItem)
}

void THeroAdvanceItem::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroAdvanceItem::~THeroAdvanceItem() {
  // @@protoc_insertion_point(destructor:pb.THeroAdvanceItem)
  SharedDtor();
}

void THeroAdvanceItem::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void THeroAdvanceItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroAdvanceItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroAdvanceItem_descriptor_;
}

const THeroAdvanceItem& THeroAdvanceItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroAdvanceItem* THeroAdvanceItem::default_instance_ = NULL;

THeroAdvanceItem* THeroAdvanceItem::New() const {
  return new THeroAdvanceItem;
}

void THeroAdvanceItem::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    pos_ = 0u;
    if (has_item()) {
      if (item_ != NULL) item_->::pb::TSimpleItem::Clear();
    }
  }
  arrchilditem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroAdvanceItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroAdvanceItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Item;
        break;
      }

      // optional .pb.TSimpleItem Item = 2;
      case 2: {
        if (tag == 18) {
         parse_Item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrChildItem;
        break;
      }

      // repeated .pb.TSimpleItem ArrChildItem = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrChildItem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrchilditem()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrChildItem;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroAdvanceItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroAdvanceItem)
  return false;
#undef DO_
}

void THeroAdvanceItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroAdvanceItem)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional .pb.TSimpleItem Item = 2;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item(), output);
  }

  // repeated .pb.TSimpleItem ArrChildItem = 3;
  for (int i = 0; i < this->arrchilditem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrchilditem(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroAdvanceItem)
}

::google::protobuf::uint8* THeroAdvanceItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroAdvanceItem)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional .pb.TSimpleItem Item = 2;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item(), target);
  }

  // repeated .pb.TSimpleItem ArrChildItem = 3;
  for (int i = 0; i < this->arrchilditem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrchilditem(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroAdvanceItem)
  return target;
}

int THeroAdvanceItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional .pb.TSimpleItem Item = 2;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }

  }
  // repeated .pb.TSimpleItem ArrChildItem = 3;
  total_size += 1 * this->arrchilditem_size();
  for (int i = 0; i < this->arrchilditem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrchilditem(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroAdvanceItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroAdvanceItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroAdvanceItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroAdvanceItem::MergeFrom(const THeroAdvanceItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrchilditem_.MergeFrom(from.arrchilditem_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_item()) {
      mutable_item()->::pb::TSimpleItem::MergeFrom(from.item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroAdvanceItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroAdvanceItem::CopyFrom(const THeroAdvanceItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroAdvanceItem::IsInitialized() const {

  return true;
}

void THeroAdvanceItem::Swap(THeroAdvanceItem* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(item_, other->item_);
    arrchilditem_.Swap(&other->arrchilditem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroAdvanceItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroAdvanceItem_descriptor_;
  metadata.reflection = THeroAdvanceItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroEquipItem::kPosFieldNumber;
const int THeroEquipItem::kItemFieldNumber;
#endif  // !_MSC_VER

THeroEquipItem::THeroEquipItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroEquipItem)
}

void THeroEquipItem::InitAsDefaultInstance() {
  item_ = const_cast< ::pb::TSimpleItem*>(&::pb::TSimpleItem::default_instance());
}

THeroEquipItem::THeroEquipItem(const THeroEquipItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroEquipItem)
}

void THeroEquipItem::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroEquipItem::~THeroEquipItem() {
  // @@protoc_insertion_point(destructor:pb.THeroEquipItem)
  SharedDtor();
}

void THeroEquipItem::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void THeroEquipItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroEquipItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroEquipItem_descriptor_;
}

const THeroEquipItem& THeroEquipItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroEquipItem* THeroEquipItem::default_instance_ = NULL;

THeroEquipItem* THeroEquipItem::New() const {
  return new THeroEquipItem;
}

void THeroEquipItem::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    pos_ = 0u;
    if (has_item()) {
      if (item_ != NULL) item_->::pb::TSimpleItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroEquipItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroEquipItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Item;
        break;
      }

      // optional .pb.TSimpleItem Item = 2;
      case 2: {
        if (tag == 18) {
         parse_Item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroEquipItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroEquipItem)
  return false;
#undef DO_
}

void THeroEquipItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroEquipItem)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional .pb.TSimpleItem Item = 2;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroEquipItem)
}

::google::protobuf::uint8* THeroEquipItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroEquipItem)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional .pb.TSimpleItem Item = 2;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroEquipItem)
  return target;
}

int THeroEquipItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional .pb.TSimpleItem Item = 2;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroEquipItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroEquipItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroEquipItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroEquipItem::MergeFrom(const THeroEquipItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_item()) {
      mutable_item()->::pb::TSimpleItem::MergeFrom(from.item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroEquipItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroEquipItem::CopyFrom(const THeroEquipItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroEquipItem::IsInitialized() const {

  return true;
}

void THeroEquipItem::Swap(THeroEquipItem* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(item_, other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroEquipItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroEquipItem_descriptor_;
  metadata.reflection = THeroEquipItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineEquipItem::kPosFieldNumber;
const int TDivineEquipItem::kItemFieldNumber;
const int TDivineEquipItem::kLvFieldNumber;
#endif  // !_MSC_VER

TDivineEquipItem::TDivineEquipItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineEquipItem)
}

void TDivineEquipItem::InitAsDefaultInstance() {
  item_ = const_cast< ::pb::TSimpleItem*>(&::pb::TSimpleItem::default_instance());
}

TDivineEquipItem::TDivineEquipItem(const TDivineEquipItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineEquipItem)
}

void TDivineEquipItem::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  item_ = NULL;
  lv_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineEquipItem::~TDivineEquipItem() {
  // @@protoc_insertion_point(destructor:pb.TDivineEquipItem)
  SharedDtor();
}

void TDivineEquipItem::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void TDivineEquipItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineEquipItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineEquipItem_descriptor_;
}

const TDivineEquipItem& TDivineEquipItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

TDivineEquipItem* TDivineEquipItem::default_instance_ = NULL;

TDivineEquipItem* TDivineEquipItem::New() const {
  return new TDivineEquipItem;
}

void TDivineEquipItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDivineEquipItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(pos_, lv_);
    if (has_item()) {
      if (item_ != NULL) item_->::pb::TSimpleItem::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineEquipItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineEquipItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Item;
        break;
      }

      // optional .pb.TSimpleItem Item = 2;
      case 2: {
        if (tag == 18) {
         parse_Item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_lv;
        break;
      }

      // optional uint32 lv = 3;
      case 3: {
        if (tag == 24) {
         parse_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lv_)));
          set_has_lv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineEquipItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineEquipItem)
  return false;
#undef DO_
}

void TDivineEquipItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineEquipItem)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional .pb.TSimpleItem Item = 2;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item(), output);
  }

  // optional uint32 lv = 3;
  if (has_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->lv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineEquipItem)
}

::google::protobuf::uint8* TDivineEquipItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineEquipItem)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional .pb.TSimpleItem Item = 2;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item(), target);
  }

  // optional uint32 lv = 3;
  if (has_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->lv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineEquipItem)
  return target;
}

int TDivineEquipItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional .pb.TSimpleItem Item = 2;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }

    // optional uint32 lv = 3;
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineEquipItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineEquipItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineEquipItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineEquipItem::MergeFrom(const TDivineEquipItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_item()) {
      mutable_item()->::pb::TSimpleItem::MergeFrom(from.item());
    }
    if (from.has_lv()) {
      set_lv(from.lv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineEquipItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineEquipItem::CopyFrom(const TDivineEquipItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineEquipItem::IsInitialized() const {

  return true;
}

void TDivineEquipItem::Swap(TDivineEquipItem* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(item_, other->item_);
    std::swap(lv_, other->lv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineEquipItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineEquipItem_descriptor_;
  metadata.reflection = TDivineEquipItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroCombination::kTidFieldNumber;
const int THeroCombination::kLevelFieldNumber;
#endif  // !_MSC_VER

THeroCombination::THeroCombination()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroCombination)
}

void THeroCombination::InitAsDefaultInstance() {
}

THeroCombination::THeroCombination(const THeroCombination& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroCombination)
}

void THeroCombination::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroCombination::~THeroCombination() {
  // @@protoc_insertion_point(destructor:pb.THeroCombination)
  SharedDtor();
}

void THeroCombination::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroCombination::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroCombination::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroCombination_descriptor_;
}

const THeroCombination& THeroCombination::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroCombination* THeroCombination::default_instance_ = NULL;

THeroCombination* THeroCombination::New() const {
  return new THeroCombination;
}

void THeroCombination::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroCombination*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tid_, level_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroCombination::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroCombination)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 2;
      case 2: {
        if (tag == 16) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroCombination)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroCombination)
  return false;
#undef DO_
}

void THeroCombination::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroCombination)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 Level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroCombination)
}

::google::protobuf::uint8* THeroCombination::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroCombination)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 Level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroCombination)
  return target;
}

int THeroCombination::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 Level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroCombination::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroCombination* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroCombination*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroCombination::MergeFrom(const THeroCombination& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroCombination::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroCombination::CopyFrom(const THeroCombination& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroCombination::IsInitialized() const {

  return true;
}

void THeroCombination::Swap(THeroCombination* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroCombination::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroCombination_descriptor_;
  metadata.reflection = THeroCombination_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroSkill::kTidFieldNumber;
const int THeroSkill::kLevelFieldNumber;
const int THeroSkill::kIdxFieldNumber;
const int THeroSkill::kArrSubSkillFieldNumber;
#endif  // !_MSC_VER

THeroSkill::THeroSkill()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroSkill)
}

void THeroSkill::InitAsDefaultInstance() {
}

THeroSkill::THeroSkill(const THeroSkill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroSkill)
}

void THeroSkill::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  level_ = 0u;
  idx_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroSkill::~THeroSkill() {
  // @@protoc_insertion_point(destructor:pb.THeroSkill)
  SharedDtor();
}

void THeroSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroSkill_descriptor_;
}

const THeroSkill& THeroSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroSkill* THeroSkill::default_instance_ = NULL;

THeroSkill* THeroSkill::New() const {
  return new THeroSkill;
}

void THeroSkill::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroSkill*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(tid_, level_);
    idx_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrsubskill_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroSkill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 2;
      case 2: {
        if (tag == 16) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Idx;
        break;
      }

      // optional uint32 Idx = 3;
      case 3: {
        if (tag == 24) {
         parse_Idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));
          set_has_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ArrSubSkill;
        break;
      }

      // repeated uint32 ArrSubSkill = 4;
      case 4: {
        if (tag == 32) {
         parse_ArrSubSkill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_arrsubskill())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrsubskill())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ArrSubSkill;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroSkill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroSkill)
  return false;
#undef DO_
}

void THeroSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroSkill)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 Level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // optional uint32 Idx = 3;
  if (has_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->idx(), output);
  }

  // repeated uint32 ArrSubSkill = 4;
  for (int i = 0; i < this->arrsubskill_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->arrsubskill(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroSkill)
}

::google::protobuf::uint8* THeroSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroSkill)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 Level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // optional uint32 Idx = 3;
  if (has_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->idx(), target);
  }

  // repeated uint32 ArrSubSkill = 4;
  for (int i = 0; i < this->arrsubskill_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->arrsubskill(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroSkill)
  return target;
}

int THeroSkill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 Level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 Idx = 3;
    if (has_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->idx());
    }

  }
  // repeated uint32 ArrSubSkill = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrsubskill_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrsubskill(i));
    }
    total_size += 1 * this->arrsubskill_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroSkill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroSkill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroSkill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroSkill::MergeFrom(const THeroSkill& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrsubskill_.MergeFrom(from.arrsubskill_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_idx()) {
      set_idx(from.idx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroSkill::CopyFrom(const THeroSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroSkill::IsInitialized() const {

  return true;
}

void THeroSkill::Swap(THeroSkill* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(level_, other->level_);
    std::swap(idx_, other->idx_);
    arrsubskill_.Swap(&other->arrsubskill_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroSkill_descriptor_;
  metadata.reflection = THeroSkill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroSimpleInfo::kHidFieldNumber;
const int THeroSimpleInfo::kHtidFieldNumber;
const int THeroSimpleInfo::kLevelFieldNumber;
const int THeroSimpleInfo::kAdvanceFieldNumber;
const int THeroSimpleInfo::kStarFieldNumber;
const int THeroSimpleInfo::kPlugInfoArrFieldNumber;
const int THeroSimpleInfo::kPluggerHidFieldNumber;
#endif  // !_MSC_VER

THeroSimpleInfo::THeroSimpleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroSimpleInfo)
}

void THeroSimpleInfo::InitAsDefaultInstance() {
}

THeroSimpleInfo::THeroSimpleInfo(const THeroSimpleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroSimpleInfo)
}

void THeroSimpleInfo::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  htid_ = 0u;
  level_ = 0u;
  advance_ = 0u;
  star_ = 0u;
  pluggerhid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroSimpleInfo::~THeroSimpleInfo() {
  // @@protoc_insertion_point(destructor:pb.THeroSimpleInfo)
  SharedDtor();
}

void THeroSimpleInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroSimpleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroSimpleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroSimpleInfo_descriptor_;
}

const THeroSimpleInfo& THeroSimpleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroSimpleInfo* THeroSimpleInfo::default_instance_ = NULL;

THeroSimpleInfo* THeroSimpleInfo::New() const {
  return new THeroSimpleInfo;
}

void THeroSimpleInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroSimpleInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 95) {
    ZR_(hid_, advance_);
    ZR_(star_, pluggerhid_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  pluginfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroSimpleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroSimpleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Htid;
        break;
      }

      // optional uint32 Htid = 2;
      case 2: {
        if (tag == 16) {
         parse_Htid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &htid_)));
          set_has_htid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 3;
      case 3: {
        if (tag == 24) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Advance;
        break;
      }

      // optional uint32 Advance = 4;
      case 4: {
        if (tag == 32) {
         parse_Advance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &advance_)));
          set_has_advance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Star;
        break;
      }

      // optional uint32 Star = 5;
      case 5: {
        if (tag == 40) {
         parse_Star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_PlugInfoArr;
        break;
      }

      // repeated .pb.TPlugInInfo PlugInfoArr = 23;
      case 23: {
        if (tag == 186) {
         parse_PlugInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pluginfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_PlugInfoArr;
        if (input->ExpectTag(192)) goto parse_PluggerHid;
        break;
      }

      // optional uint32 PluggerHid = 24;
      case 24: {
        if (tag == 192) {
         parse_PluggerHid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pluggerhid_)));
          set_has_pluggerhid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroSimpleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroSimpleInfo)
  return false;
#undef DO_
}

void THeroSimpleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroSimpleInfo)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 Htid = 2;
  if (has_htid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->htid(), output);
  }

  // optional uint32 Level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // optional uint32 Advance = 4;
  if (has_advance()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->advance(), output);
  }

  // optional uint32 Star = 5;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->star(), output);
  }

  // repeated .pb.TPlugInInfo PlugInfoArr = 23;
  for (int i = 0; i < this->pluginfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->pluginfoarr(i), output);
  }

  // optional uint32 PluggerHid = 24;
  if (has_pluggerhid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->pluggerhid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroSimpleInfo)
}

::google::protobuf::uint8* THeroSimpleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroSimpleInfo)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 Htid = 2;
  if (has_htid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->htid(), target);
  }

  // optional uint32 Level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // optional uint32 Advance = 4;
  if (has_advance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->advance(), target);
  }

  // optional uint32 Star = 5;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->star(), target);
  }

  // repeated .pb.TPlugInInfo PlugInfoArr = 23;
  for (int i = 0; i < this->pluginfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->pluginfoarr(i), target);
  }

  // optional uint32 PluggerHid = 24;
  if (has_pluggerhid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->pluggerhid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroSimpleInfo)
  return target;
}

int THeroSimpleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 Htid = 2;
    if (has_htid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->htid());
    }

    // optional uint32 Level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 Advance = 4;
    if (has_advance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->advance());
    }

    // optional uint32 Star = 5;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star());
    }

    // optional uint32 PluggerHid = 24;
    if (has_pluggerhid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pluggerhid());
    }

  }
  // repeated .pb.TPlugInInfo PlugInfoArr = 23;
  total_size += 2 * this->pluginfoarr_size();
  for (int i = 0; i < this->pluginfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pluginfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroSimpleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroSimpleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroSimpleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroSimpleInfo::MergeFrom(const THeroSimpleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  pluginfoarr_.MergeFrom(from.pluginfoarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_htid()) {
      set_htid(from.htid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_advance()) {
      set_advance(from.advance());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
    if (from.has_pluggerhid()) {
      set_pluggerhid(from.pluggerhid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroSimpleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroSimpleInfo::CopyFrom(const THeroSimpleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroSimpleInfo::IsInitialized() const {

  return true;
}

void THeroSimpleInfo::Swap(THeroSimpleInfo* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(htid_, other->htid_);
    std::swap(level_, other->level_);
    std::swap(advance_, other->advance_);
    std::swap(star_, other->star_);
    pluginfoarr_.Swap(&other->pluginfoarr_);
    std::swap(pluggerhid_, other->pluggerhid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroSimpleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroSimpleInfo_descriptor_;
  metadata.reflection = THeroSimpleInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroFashionExclEquipInfo::kFashionModelIdFieldNumber;
const int THeroFashionExclEquipInfo::kItemIdFieldNumber;
#endif  // !_MSC_VER

THeroFashionExclEquipInfo::THeroFashionExclEquipInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroFashionExclEquipInfo)
}

void THeroFashionExclEquipInfo::InitAsDefaultInstance() {
}

THeroFashionExclEquipInfo::THeroFashionExclEquipInfo(const THeroFashionExclEquipInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroFashionExclEquipInfo)
}

void THeroFashionExclEquipInfo::SharedCtor() {
  _cached_size_ = 0;
  fashionmodelid_ = 0u;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroFashionExclEquipInfo::~THeroFashionExclEquipInfo() {
  // @@protoc_insertion_point(destructor:pb.THeroFashionExclEquipInfo)
  SharedDtor();
}

void THeroFashionExclEquipInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroFashionExclEquipInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroFashionExclEquipInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroFashionExclEquipInfo_descriptor_;
}

const THeroFashionExclEquipInfo& THeroFashionExclEquipInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroFashionExclEquipInfo* THeroFashionExclEquipInfo::default_instance_ = NULL;

THeroFashionExclEquipInfo* THeroFashionExclEquipInfo::New() const {
  return new THeroFashionExclEquipInfo;
}

void THeroFashionExclEquipInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroFashionExclEquipInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(fashionmodelid_, itemid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroFashionExclEquipInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroFashionExclEquipInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FashionModelId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fashionmodelid_)));
          set_has_fashionmodelid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemId;
        break;
      }

      // optional uint32 ItemId = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroFashionExclEquipInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroFashionExclEquipInfo)
  return false;
#undef DO_
}

void THeroFashionExclEquipInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroFashionExclEquipInfo)
  // optional uint32 FashionModelId = 1;
  if (has_fashionmodelid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fashionmodelid(), output);
  }

  // optional uint32 ItemId = 2;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroFashionExclEquipInfo)
}

::google::protobuf::uint8* THeroFashionExclEquipInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroFashionExclEquipInfo)
  // optional uint32 FashionModelId = 1;
  if (has_fashionmodelid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fashionmodelid(), target);
  }

  // optional uint32 ItemId = 2;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroFashionExclEquipInfo)
  return target;
}

int THeroFashionExclEquipInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FashionModelId = 1;
    if (has_fashionmodelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fashionmodelid());
    }

    // optional uint32 ItemId = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroFashionExclEquipInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroFashionExclEquipInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroFashionExclEquipInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroFashionExclEquipInfo::MergeFrom(const THeroFashionExclEquipInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashionmodelid()) {
      set_fashionmodelid(from.fashionmodelid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroFashionExclEquipInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroFashionExclEquipInfo::CopyFrom(const THeroFashionExclEquipInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroFashionExclEquipInfo::IsInitialized() const {

  return true;
}

void THeroFashionExclEquipInfo::Swap(THeroFashionExclEquipInfo* other) {
  if (other != this) {
    std::swap(fashionmodelid_, other->fashionmodelid_);
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroFashionExclEquipInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroFashionExclEquipInfo_descriptor_;
  metadata.reflection = THeroFashionExclEquipInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPlugInInfo::kHidFieldNumber;
const int TPlugInInfo::kLevelFieldNumber;
const int TPlugInInfo::kPosFieldNumber;
const int TPlugInInfo::kHtidFieldNumber;
const int TPlugInInfo::kStarLvFieldNumber;
#endif  // !_MSC_VER

TPlugInInfo::TPlugInInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPlugInInfo)
}

void TPlugInInfo::InitAsDefaultInstance() {
}

TPlugInInfo::TPlugInInfo(const TPlugInInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPlugInInfo)
}

void TPlugInInfo::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  level_ = 0u;
  pos_ = 0u;
  htid_ = 0u;
  starlv_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPlugInInfo::~TPlugInInfo() {
  // @@protoc_insertion_point(destructor:pb.TPlugInInfo)
  SharedDtor();
}

void TPlugInInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPlugInInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPlugInInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPlugInInfo_descriptor_;
}

const TPlugInInfo& TPlugInInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

TPlugInInfo* TPlugInInfo::default_instance_ = NULL;

TPlugInInfo* TPlugInInfo::New() const {
  return new TPlugInInfo;
}

void TPlugInInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPlugInInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(hid_, starlv_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPlugInInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPlugInInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 2;
      case 2: {
        if (tag == 16) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Pos;
        break;
      }

      // optional uint32 Pos = 3;
      case 3: {
        if (tag == 24) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Htid;
        break;
      }

      // optional uint32 Htid = 4;
      case 4: {
        if (tag == 32) {
         parse_Htid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &htid_)));
          set_has_htid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_StarLv;
        break;
      }

      // optional uint32 StarLv = 5;
      case 5: {
        if (tag == 40) {
         parse_StarLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starlv_)));
          set_has_starlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPlugInInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPlugInInfo)
  return false;
#undef DO_
}

void TPlugInInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPlugInInfo)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 Level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // optional uint32 Pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pos(), output);
  }

  // optional uint32 Htid = 4;
  if (has_htid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->htid(), output);
  }

  // optional uint32 StarLv = 5;
  if (has_starlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->starlv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPlugInInfo)
}

::google::protobuf::uint8* TPlugInInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPlugInInfo)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 Level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // optional uint32 Pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pos(), target);
  }

  // optional uint32 Htid = 4;
  if (has_htid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->htid(), target);
  }

  // optional uint32 StarLv = 5;
  if (has_starlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->starlv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPlugInInfo)
  return target;
}

int TPlugInInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 Level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 Pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 Htid = 4;
    if (has_htid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->htid());
    }

    // optional uint32 StarLv = 5;
    if (has_starlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starlv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPlugInInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPlugInInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPlugInInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPlugInInfo::MergeFrom(const TPlugInInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_htid()) {
      set_htid(from.htid());
    }
    if (from.has_starlv()) {
      set_starlv(from.starlv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPlugInInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPlugInInfo::CopyFrom(const TPlugInInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPlugInInfo::IsInitialized() const {

  return true;
}

void TPlugInInfo::Swap(TPlugInInfo* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(level_, other->level_);
    std::swap(pos_, other->pos_);
    std::swap(htid_, other->htid_);
    std::swap(starlv_, other->starlv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPlugInInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPlugInInfo_descriptor_;
  metadata.reflection = TPlugInInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroInfo::kHidFieldNumber;
const int THeroInfo::kHtidFieldNumber;
const int THeroInfo::kLevelFieldNumber;
const int THeroInfo::kExpFieldNumber;
const int THeroInfo::kAdvanceFieldNumber;
const int THeroInfo::kAdvanceItemArrayFieldNumber;
const int THeroInfo::kStarFieldNumber;
const int THeroInfo::kStarHoleFieldNumber;
const int THeroInfo::kCombinationArrayFieldNumber;
const int THeroInfo::kSkillArrayFieldNumber;
const int THeroInfo::kEquipItemArrFieldNumber;
const int THeroInfo::kSoulItemArrFieldNumber;
const int THeroInfo::kSurplusSkillPointNumFieldNumber;
const int THeroInfo::kExclEquipItemIdArrFieldNumber;
const int THeroInfo::kFashionExclEquipArrFieldNumber;
const int THeroInfo::kGoldLvFieldNumber;
const int THeroInfo::kGoldBreakLvFieldNumber;
const int THeroInfo::kLinkedHidFieldNumber;
const int THeroInfo::kExpireTimeFieldNumber;
const int THeroInfo::kSilkBagItemArrFieldNumber;
const int THeroInfo::kWhiteGoldLvFieldNumber;
const int THeroInfo::kWhiteGoldBreakLvFieldNumber;
const int THeroInfo::kPlugInfoArrFieldNumber;
const int THeroInfo::kPluggerHidFieldNumber;
const int THeroInfo::kHeroPercentageFieldNumber;
const int THeroInfo::kGodLvFieldNumber;
const int THeroInfo::kWarRidingTidFieldNumber;
const int THeroInfo::kChainSoulHidFieldNumber;
const int THeroInfo::kChainSoulLvFieldNumber;
const int THeroInfo::kPurpleGoldBigLvFieldNumber;
const int THeroInfo::kPurpleGoldSmallLvFieldNumber;
const int THeroInfo::kPurpleGoldSoulCostFieldNumber;
const int THeroInfo::kDivineEquipItemArrFieldNumber;
const int THeroInfo::kForceSoulArrFieldNumber;
const int THeroInfo::kRealBodyLvFieldNumber;
const int THeroInfo::kForceSoulStarNumFieldNumber;
#endif  // !_MSC_VER

THeroInfo::THeroInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroInfo)
}

void THeroInfo::InitAsDefaultInstance() {
}

THeroInfo::THeroInfo(const THeroInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroInfo)
}

void THeroInfo::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  htid_ = 0u;
  level_ = 0u;
  exp_ = 0u;
  advance_ = 0u;
  star_ = 0u;
  starhole_ = 0u;
  surplusskillpointnum_ = 0u;
  goldlv_ = 0u;
  goldbreaklv_ = 0u;
  linkedhid_ = 0u;
  expiretime_ = GOOGLE_ULONGLONG(0);
  whitegoldlv_ = 0u;
  whitegoldbreaklv_ = 0u;
  pluggerhid_ = 0u;
  heropercentage_ = GOOGLE_ULONGLONG(0);
  godlv_ = 0u;
  warridingtid_ = 0u;
  chainsoulhid_ = 0u;
  chainsoullv_ = 0u;
  purplegoldbiglv_ = 0u;
  purplegoldsoulcost_ = 0u;
  realbodylv_ = 0u;
  forcesoulstarnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroInfo::~THeroInfo() {
  // @@protoc_insertion_point(destructor:pb.THeroInfo)
  SharedDtor();
}

void THeroInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroInfo_descriptor_;
}

const THeroInfo& THeroInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroInfo* THeroInfo::default_instance_ = NULL;

THeroInfo* THeroInfo::New() const {
  return new THeroInfo;
}

void THeroInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 223) {
    ZR_(hid_, exp_);
    ZR_(advance_, star_);
    starhole_ = 0u;
  }
  if (_has_bits_[8 / 32] & 36864) {
    surplusskillpointnum_ = 0u;
    goldlv_ = 0u;
  }
  if (_has_bits_[16 / 32] & 11993088) {
    ZR_(goldbreaklv_, whitegoldlv_);
    ZR_(whitegoldbreaklv_, pluggerhid_);
  }
  if (_has_bits_[24 / 32] & 3204448256) {
    ZR_(heropercentage_, chainsoullv_);
    ZR_(purplegoldbiglv_, purplegoldsoulcost_);
  }
  ZR_(realbodylv_, forcesoulstarnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  advanceitemarray_.Clear();
  combinationarray_.Clear();
  skillarray_.Clear();
  equipitemarr_.Clear();
  soulitemarr_.Clear();
  exclequipitemidarr_.Clear();
  fashionexclequiparr_.Clear();
  silkbagitemarr_.Clear();
  pluginfoarr_.Clear();
  purplegoldsmalllv_.Clear();
  divineequipitemarr_.Clear();
  forcesoularr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Htid;
        break;
      }

      // optional uint32 Htid = 2;
      case 2: {
        if (tag == 16) {
         parse_Htid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &htid_)));
          set_has_htid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 3;
      case 3: {
        if (tag == 24) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Exp;
        break;
      }

      // optional uint32 Exp = 4;
      case 4: {
        if (tag == 32) {
         parse_Exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Advance;
        break;
      }

      // optional uint32 Advance = 5;
      case 5: {
        if (tag == 40) {
         parse_Advance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &advance_)));
          set_has_advance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_AdvanceItemArray;
        break;
      }

      // repeated .pb.THeroAdvanceItem AdvanceItemArray = 6;
      case 6: {
        if (tag == 50) {
         parse_AdvanceItemArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_advanceitemarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_AdvanceItemArray;
        if (input->ExpectTag(56)) goto parse_Star;
        break;
      }

      // optional uint32 Star = 7;
      case 7: {
        if (tag == 56) {
         parse_Star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_StarHole;
        break;
      }

      // optional uint32 StarHole = 8;
      case 8: {
        if (tag == 64) {
         parse_StarHole:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starhole_)));
          set_has_starhole();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_CombinationArray;
        break;
      }

      // repeated .pb.THeroCombination CombinationArray = 9;
      case 9: {
        if (tag == 74) {
         parse_CombinationArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_combinationarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_CombinationArray;
        if (input->ExpectTag(82)) goto parse_SkillArray;
        break;
      }

      // repeated .pb.THeroSkill SkillArray = 10;
      case 10: {
        if (tag == 82) {
         parse_SkillArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skillarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_SkillArray;
        if (input->ExpectTag(90)) goto parse_EquipItemArr;
        break;
      }

      // repeated .pb.THeroEquipItem EquipItemArr = 11;
      case 11: {
        if (tag == 90) {
         parse_EquipItemArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipitemarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_EquipItemArr;
        if (input->ExpectTag(98)) goto parse_SoulItemArr;
        break;
      }

      // repeated .pb.THeroEquipItem SoulItemArr = 12;
      case 12: {
        if (tag == 98) {
         parse_SoulItemArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_soulitemarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_SoulItemArr;
        if (input->ExpectTag(104)) goto parse_SurplusSkillPointNum;
        break;
      }

      // optional uint32 SurplusSkillPointNum = 13;
      case 13: {
        if (tag == 104) {
         parse_SurplusSkillPointNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &surplusskillpointnum_)));
          set_has_surplusskillpointnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_ExclEquipItemIdArr;
        break;
      }

      // repeated uint32 ExclEquipItemIdArr = 14;
      case 14: {
        if (tag == 112) {
         parse_ExclEquipItemIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 112, input, this->mutable_exclequipitemidarr())));
        } else if (tag == 114) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_exclequipitemidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_ExclEquipItemIdArr;
        if (input->ExpectTag(122)) goto parse_FashionExclEquipArr;
        break;
      }

      // repeated .pb.THeroFashionExclEquipInfo FashionExclEquipArr = 15;
      case 15: {
        if (tag == 122) {
         parse_FashionExclEquipArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fashionexclequiparr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_FashionExclEquipArr;
        if (input->ExpectTag(128)) goto parse_GoldLv;
        break;
      }

      // optional uint32 GoldLv = 16;
      case 16: {
        if (tag == 128) {
         parse_GoldLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goldlv_)));
          set_has_goldlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_GoldBreakLv;
        break;
      }

      // optional uint32 GoldBreakLv = 17;
      case 17: {
        if (tag == 136) {
         parse_GoldBreakLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goldbreaklv_)));
          set_has_goldbreaklv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_LinkedHid;
        break;
      }

      // optional uint32 LinkedHid = 18;
      case 18: {
        if (tag == 144) {
         parse_LinkedHid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &linkedhid_)));
          set_has_linkedhid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_ExpireTime;
        break;
      }

      // optional uint64 ExpireTime = 19;
      case 19: {
        if (tag == 152) {
         parse_ExpireTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expiretime_)));
          set_has_expiretime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_SilkBagItemArr;
        break;
      }

      // repeated .pb.THeroEquipItem SilkBagItemArr = 20;
      case 20: {
        if (tag == 162) {
         parse_SilkBagItemArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_silkbagitemarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_SilkBagItemArr;
        if (input->ExpectTag(168)) goto parse_WhiteGoldLv;
        break;
      }

      // optional uint32 WhiteGoldLv = 21;
      case 21: {
        if (tag == 168) {
         parse_WhiteGoldLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &whitegoldlv_)));
          set_has_whitegoldlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_WhiteGoldBreakLv;
        break;
      }

      // optional uint32 WhiteGoldBreakLv = 22;
      case 22: {
        if (tag == 176) {
         parse_WhiteGoldBreakLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &whitegoldbreaklv_)));
          set_has_whitegoldbreaklv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_PlugInfoArr;
        break;
      }

      // repeated .pb.TPlugInInfo PlugInfoArr = 23;
      case 23: {
        if (tag == 186) {
         parse_PlugInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pluginfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_PlugInfoArr;
        if (input->ExpectTag(192)) goto parse_PluggerHid;
        break;
      }

      // optional uint32 PluggerHid = 24;
      case 24: {
        if (tag == 192) {
         parse_PluggerHid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pluggerhid_)));
          set_has_pluggerhid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_HeroPercentage;
        break;
      }

      // optional uint64 HeroPercentage = 25;
      case 25: {
        if (tag == 200) {
         parse_HeroPercentage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &heropercentage_)));
          set_has_heropercentage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_GodLv;
        break;
      }

      // optional uint32 GodLv = 26;
      case 26: {
        if (tag == 208) {
         parse_GodLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &godlv_)));
          set_has_godlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_WarRidingTid;
        break;
      }

      // optional uint32 WarRidingTid = 27;
      case 27: {
        if (tag == 216) {
         parse_WarRidingTid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &warridingtid_)));
          set_has_warridingtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_ChainSoulHid;
        break;
      }

      // optional uint32 ChainSoulHid = 28;
      case 28: {
        if (tag == 224) {
         parse_ChainSoulHid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chainsoulhid_)));
          set_has_chainsoulhid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_ChainSoulLv;
        break;
      }

      // optional uint32 ChainSoulLv = 29;
      case 29: {
        if (tag == 232) {
         parse_ChainSoulLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chainsoullv_)));
          set_has_chainsoullv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_PurpleGoldBigLv;
        break;
      }

      // optional uint32 PurpleGoldBigLv = 30;
      case 30: {
        if (tag == 240) {
         parse_PurpleGoldBigLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &purplegoldbiglv_)));
          set_has_purplegoldbiglv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_PurpleGoldSmallLv;
        break;
      }

      // repeated uint32 PurpleGoldSmallLv = 31;
      case 31: {
        if (tag == 248) {
         parse_PurpleGoldSmallLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 248, input, this->mutable_purplegoldsmalllv())));
        } else if (tag == 250) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_purplegoldsmalllv())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_PurpleGoldSmallLv;
        if (input->ExpectTag(256)) goto parse_PurpleGoldSoulCost;
        break;
      }

      // optional uint32 PurpleGoldSoulCost = 32;
      case 32: {
        if (tag == 256) {
         parse_PurpleGoldSoulCost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &purplegoldsoulcost_)));
          set_has_purplegoldsoulcost();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(266)) goto parse_DivineEquipItemArr;
        break;
      }

      // repeated .pb.TDivineEquipItem DivineEquipItemArr = 33;
      case 33: {
        if (tag == 266) {
         parse_DivineEquipItemArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_divineequipitemarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(266)) goto parse_DivineEquipItemArr;
        if (input->ExpectTag(274)) goto parse_ForceSoulArr;
        break;
      }

      // repeated .pb.THeroEquipItem ForceSoulArr = 34;
      case 34: {
        if (tag == 274) {
         parse_ForceSoulArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_forcesoularr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(274)) goto parse_ForceSoulArr;
        if (input->ExpectTag(280)) goto parse_RealBodyLv;
        break;
      }

      // optional uint32 RealBodyLv = 35;
      case 35: {
        if (tag == 280) {
         parse_RealBodyLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &realbodylv_)));
          set_has_realbodylv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_ForceSoulStarNum;
        break;
      }

      // optional uint32 ForceSoulStarNum = 36;
      case 36: {
        if (tag == 288) {
         parse_ForceSoulStarNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &forcesoulstarnum_)));
          set_has_forcesoulstarnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroInfo)
  return false;
#undef DO_
}

void THeroInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroInfo)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 Htid = 2;
  if (has_htid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->htid(), output);
  }

  // optional uint32 Level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // optional uint32 Exp = 4;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->exp(), output);
  }

  // optional uint32 Advance = 5;
  if (has_advance()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->advance(), output);
  }

  // repeated .pb.THeroAdvanceItem AdvanceItemArray = 6;
  for (int i = 0; i < this->advanceitemarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->advanceitemarray(i), output);
  }

  // optional uint32 Star = 7;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->star(), output);
  }

  // optional uint32 StarHole = 8;
  if (has_starhole()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->starhole(), output);
  }

  // repeated .pb.THeroCombination CombinationArray = 9;
  for (int i = 0; i < this->combinationarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->combinationarray(i), output);
  }

  // repeated .pb.THeroSkill SkillArray = 10;
  for (int i = 0; i < this->skillarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->skillarray(i), output);
  }

  // repeated .pb.THeroEquipItem EquipItemArr = 11;
  for (int i = 0; i < this->equipitemarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->equipitemarr(i), output);
  }

  // repeated .pb.THeroEquipItem SoulItemArr = 12;
  for (int i = 0; i < this->soulitemarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->soulitemarr(i), output);
  }

  // optional uint32 SurplusSkillPointNum = 13;
  if (has_surplusskillpointnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->surplusskillpointnum(), output);
  }

  // repeated uint32 ExclEquipItemIdArr = 14;
  for (int i = 0; i < this->exclequipitemidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      14, this->exclequipitemidarr(i), output);
  }

  // repeated .pb.THeroFashionExclEquipInfo FashionExclEquipArr = 15;
  for (int i = 0; i < this->fashionexclequiparr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->fashionexclequiparr(i), output);
  }

  // optional uint32 GoldLv = 16;
  if (has_goldlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->goldlv(), output);
  }

  // optional uint32 GoldBreakLv = 17;
  if (has_goldbreaklv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->goldbreaklv(), output);
  }

  // optional uint32 LinkedHid = 18;
  if (has_linkedhid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->linkedhid(), output);
  }

  // optional uint64 ExpireTime = 19;
  if (has_expiretime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(19, this->expiretime(), output);
  }

  // repeated .pb.THeroEquipItem SilkBagItemArr = 20;
  for (int i = 0; i < this->silkbagitemarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->silkbagitemarr(i), output);
  }

  // optional uint32 WhiteGoldLv = 21;
  if (has_whitegoldlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->whitegoldlv(), output);
  }

  // optional uint32 WhiteGoldBreakLv = 22;
  if (has_whitegoldbreaklv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->whitegoldbreaklv(), output);
  }

  // repeated .pb.TPlugInInfo PlugInfoArr = 23;
  for (int i = 0; i < this->pluginfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->pluginfoarr(i), output);
  }

  // optional uint32 PluggerHid = 24;
  if (has_pluggerhid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->pluggerhid(), output);
  }

  // optional uint64 HeroPercentage = 25;
  if (has_heropercentage()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(25, this->heropercentage(), output);
  }

  // optional uint32 GodLv = 26;
  if (has_godlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->godlv(), output);
  }

  // optional uint32 WarRidingTid = 27;
  if (has_warridingtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->warridingtid(), output);
  }

  // optional uint32 ChainSoulHid = 28;
  if (has_chainsoulhid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->chainsoulhid(), output);
  }

  // optional uint32 ChainSoulLv = 29;
  if (has_chainsoullv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->chainsoullv(), output);
  }

  // optional uint32 PurpleGoldBigLv = 30;
  if (has_purplegoldbiglv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->purplegoldbiglv(), output);
  }

  // repeated uint32 PurpleGoldSmallLv = 31;
  for (int i = 0; i < this->purplegoldsmalllv_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      31, this->purplegoldsmalllv(i), output);
  }

  // optional uint32 PurpleGoldSoulCost = 32;
  if (has_purplegoldsoulcost()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(32, this->purplegoldsoulcost(), output);
  }

  // repeated .pb.TDivineEquipItem DivineEquipItemArr = 33;
  for (int i = 0; i < this->divineequipitemarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->divineequipitemarr(i), output);
  }

  // repeated .pb.THeroEquipItem ForceSoulArr = 34;
  for (int i = 0; i < this->forcesoularr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->forcesoularr(i), output);
  }

  // optional uint32 RealBodyLv = 35;
  if (has_realbodylv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(35, this->realbodylv(), output);
  }

  // optional uint32 ForceSoulStarNum = 36;
  if (has_forcesoulstarnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->forcesoulstarnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroInfo)
}

::google::protobuf::uint8* THeroInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroInfo)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 Htid = 2;
  if (has_htid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->htid(), target);
  }

  // optional uint32 Level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // optional uint32 Exp = 4;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->exp(), target);
  }

  // optional uint32 Advance = 5;
  if (has_advance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->advance(), target);
  }

  // repeated .pb.THeroAdvanceItem AdvanceItemArray = 6;
  for (int i = 0; i < this->advanceitemarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->advanceitemarray(i), target);
  }

  // optional uint32 Star = 7;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->star(), target);
  }

  // optional uint32 StarHole = 8;
  if (has_starhole()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->starhole(), target);
  }

  // repeated .pb.THeroCombination CombinationArray = 9;
  for (int i = 0; i < this->combinationarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->combinationarray(i), target);
  }

  // repeated .pb.THeroSkill SkillArray = 10;
  for (int i = 0; i < this->skillarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->skillarray(i), target);
  }

  // repeated .pb.THeroEquipItem EquipItemArr = 11;
  for (int i = 0; i < this->equipitemarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->equipitemarr(i), target);
  }

  // repeated .pb.THeroEquipItem SoulItemArr = 12;
  for (int i = 0; i < this->soulitemarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->soulitemarr(i), target);
  }

  // optional uint32 SurplusSkillPointNum = 13;
  if (has_surplusskillpointnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->surplusskillpointnum(), target);
  }

  // repeated uint32 ExclEquipItemIdArr = 14;
  for (int i = 0; i < this->exclequipitemidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(14, this->exclequipitemidarr(i), target);
  }

  // repeated .pb.THeroFashionExclEquipInfo FashionExclEquipArr = 15;
  for (int i = 0; i < this->fashionexclequiparr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->fashionexclequiparr(i), target);
  }

  // optional uint32 GoldLv = 16;
  if (has_goldlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->goldlv(), target);
  }

  // optional uint32 GoldBreakLv = 17;
  if (has_goldbreaklv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->goldbreaklv(), target);
  }

  // optional uint32 LinkedHid = 18;
  if (has_linkedhid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->linkedhid(), target);
  }

  // optional uint64 ExpireTime = 19;
  if (has_expiretime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(19, this->expiretime(), target);
  }

  // repeated .pb.THeroEquipItem SilkBagItemArr = 20;
  for (int i = 0; i < this->silkbagitemarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->silkbagitemarr(i), target);
  }

  // optional uint32 WhiteGoldLv = 21;
  if (has_whitegoldlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->whitegoldlv(), target);
  }

  // optional uint32 WhiteGoldBreakLv = 22;
  if (has_whitegoldbreaklv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->whitegoldbreaklv(), target);
  }

  // repeated .pb.TPlugInInfo PlugInfoArr = 23;
  for (int i = 0; i < this->pluginfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->pluginfoarr(i), target);
  }

  // optional uint32 PluggerHid = 24;
  if (has_pluggerhid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->pluggerhid(), target);
  }

  // optional uint64 HeroPercentage = 25;
  if (has_heropercentage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(25, this->heropercentage(), target);
  }

  // optional uint32 GodLv = 26;
  if (has_godlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->godlv(), target);
  }

  // optional uint32 WarRidingTid = 27;
  if (has_warridingtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->warridingtid(), target);
  }

  // optional uint32 ChainSoulHid = 28;
  if (has_chainsoulhid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->chainsoulhid(), target);
  }

  // optional uint32 ChainSoulLv = 29;
  if (has_chainsoullv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->chainsoullv(), target);
  }

  // optional uint32 PurpleGoldBigLv = 30;
  if (has_purplegoldbiglv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->purplegoldbiglv(), target);
  }

  // repeated uint32 PurpleGoldSmallLv = 31;
  for (int i = 0; i < this->purplegoldsmalllv_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(31, this->purplegoldsmalllv(i), target);
  }

  // optional uint32 PurpleGoldSoulCost = 32;
  if (has_purplegoldsoulcost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(32, this->purplegoldsoulcost(), target);
  }

  // repeated .pb.TDivineEquipItem DivineEquipItemArr = 33;
  for (int i = 0; i < this->divineequipitemarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        33, this->divineequipitemarr(i), target);
  }

  // repeated .pb.THeroEquipItem ForceSoulArr = 34;
  for (int i = 0; i < this->forcesoularr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        34, this->forcesoularr(i), target);
  }

  // optional uint32 RealBodyLv = 35;
  if (has_realbodylv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(35, this->realbodylv(), target);
  }

  // optional uint32 ForceSoulStarNum = 36;
  if (has_forcesoulstarnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->forcesoulstarnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroInfo)
  return target;
}

int THeroInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 Htid = 2;
    if (has_htid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->htid());
    }

    // optional uint32 Level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 Exp = 4;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exp());
    }

    // optional uint32 Advance = 5;
    if (has_advance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->advance());
    }

    // optional uint32 Star = 7;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star());
    }

    // optional uint32 StarHole = 8;
    if (has_starhole()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starhole());
    }

  }
  if (_has_bits_[12 / 32] & (0xffu << (12 % 32))) {
    // optional uint32 SurplusSkillPointNum = 13;
    if (has_surplusskillpointnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->surplusskillpointnum());
    }

    // optional uint32 GoldLv = 16;
    if (has_goldlv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goldlv());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional uint32 GoldBreakLv = 17;
    if (has_goldbreaklv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goldbreaklv());
    }

    // optional uint32 LinkedHid = 18;
    if (has_linkedhid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->linkedhid());
    }

    // optional uint64 ExpireTime = 19;
    if (has_expiretime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->expiretime());
    }

    // optional uint32 WhiteGoldLv = 21;
    if (has_whitegoldlv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->whitegoldlv());
    }

    // optional uint32 WhiteGoldBreakLv = 22;
    if (has_whitegoldbreaklv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->whitegoldbreaklv());
    }

    // optional uint32 PluggerHid = 24;
    if (has_pluggerhid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pluggerhid());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional uint64 HeroPercentage = 25;
    if (has_heropercentage()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->heropercentage());
    }

    // optional uint32 GodLv = 26;
    if (has_godlv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->godlv());
    }

    // optional uint32 WarRidingTid = 27;
    if (has_warridingtid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->warridingtid());
    }

    // optional uint32 ChainSoulHid = 28;
    if (has_chainsoulhid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chainsoulhid());
    }

    // optional uint32 ChainSoulLv = 29;
    if (has_chainsoullv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chainsoullv());
    }

    // optional uint32 PurpleGoldBigLv = 30;
    if (has_purplegoldbiglv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->purplegoldbiglv());
    }

    // optional uint32 PurpleGoldSoulCost = 32;
    if (has_purplegoldsoulcost()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->purplegoldsoulcost());
    }

  }
  if (_has_bits_[34 / 32] & (0xffu << (34 % 32))) {
    // optional uint32 RealBodyLv = 35;
    if (has_realbodylv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->realbodylv());
    }

    // optional uint32 ForceSoulStarNum = 36;
    if (has_forcesoulstarnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->forcesoulstarnum());
    }

  }
  // repeated .pb.THeroAdvanceItem AdvanceItemArray = 6;
  total_size += 1 * this->advanceitemarray_size();
  for (int i = 0; i < this->advanceitemarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->advanceitemarray(i));
  }

  // repeated .pb.THeroCombination CombinationArray = 9;
  total_size += 1 * this->combinationarray_size();
  for (int i = 0; i < this->combinationarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->combinationarray(i));
  }

  // repeated .pb.THeroSkill SkillArray = 10;
  total_size += 1 * this->skillarray_size();
  for (int i = 0; i < this->skillarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skillarray(i));
  }

  // repeated .pb.THeroEquipItem EquipItemArr = 11;
  total_size += 1 * this->equipitemarr_size();
  for (int i = 0; i < this->equipitemarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipitemarr(i));
  }

  // repeated .pb.THeroEquipItem SoulItemArr = 12;
  total_size += 1 * this->soulitemarr_size();
  for (int i = 0; i < this->soulitemarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->soulitemarr(i));
  }

  // repeated uint32 ExclEquipItemIdArr = 14;
  {
    int data_size = 0;
    for (int i = 0; i < this->exclequipitemidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->exclequipitemidarr(i));
    }
    total_size += 1 * this->exclequipitemidarr_size() + data_size;
  }

  // repeated .pb.THeroFashionExclEquipInfo FashionExclEquipArr = 15;
  total_size += 1 * this->fashionexclequiparr_size();
  for (int i = 0; i < this->fashionexclequiparr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fashionexclequiparr(i));
  }

  // repeated .pb.THeroEquipItem SilkBagItemArr = 20;
  total_size += 2 * this->silkbagitemarr_size();
  for (int i = 0; i < this->silkbagitemarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->silkbagitemarr(i));
  }

  // repeated .pb.TPlugInInfo PlugInfoArr = 23;
  total_size += 2 * this->pluginfoarr_size();
  for (int i = 0; i < this->pluginfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pluginfoarr(i));
  }

  // repeated uint32 PurpleGoldSmallLv = 31;
  {
    int data_size = 0;
    for (int i = 0; i < this->purplegoldsmalllv_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->purplegoldsmalllv(i));
    }
    total_size += 2 * this->purplegoldsmalllv_size() + data_size;
  }

  // repeated .pb.TDivineEquipItem DivineEquipItemArr = 33;
  total_size += 2 * this->divineequipitemarr_size();
  for (int i = 0; i < this->divineequipitemarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->divineequipitemarr(i));
  }

  // repeated .pb.THeroEquipItem ForceSoulArr = 34;
  total_size += 2 * this->forcesoularr_size();
  for (int i = 0; i < this->forcesoularr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->forcesoularr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroInfo::MergeFrom(const THeroInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  advanceitemarray_.MergeFrom(from.advanceitemarray_);
  combinationarray_.MergeFrom(from.combinationarray_);
  skillarray_.MergeFrom(from.skillarray_);
  equipitemarr_.MergeFrom(from.equipitemarr_);
  soulitemarr_.MergeFrom(from.soulitemarr_);
  exclequipitemidarr_.MergeFrom(from.exclequipitemidarr_);
  fashionexclequiparr_.MergeFrom(from.fashionexclequiparr_);
  silkbagitemarr_.MergeFrom(from.silkbagitemarr_);
  pluginfoarr_.MergeFrom(from.pluginfoarr_);
  purplegoldsmalllv_.MergeFrom(from.purplegoldsmalllv_);
  divineequipitemarr_.MergeFrom(from.divineequipitemarr_);
  forcesoularr_.MergeFrom(from.forcesoularr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_htid()) {
      set_htid(from.htid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_advance()) {
      set_advance(from.advance());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
    if (from.has_starhole()) {
      set_starhole(from.starhole());
    }
  }
  if (from._has_bits_[12 / 32] & (0xffu << (12 % 32))) {
    if (from.has_surplusskillpointnum()) {
      set_surplusskillpointnum(from.surplusskillpointnum());
    }
    if (from.has_goldlv()) {
      set_goldlv(from.goldlv());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_goldbreaklv()) {
      set_goldbreaklv(from.goldbreaklv());
    }
    if (from.has_linkedhid()) {
      set_linkedhid(from.linkedhid());
    }
    if (from.has_expiretime()) {
      set_expiretime(from.expiretime());
    }
    if (from.has_whitegoldlv()) {
      set_whitegoldlv(from.whitegoldlv());
    }
    if (from.has_whitegoldbreaklv()) {
      set_whitegoldbreaklv(from.whitegoldbreaklv());
    }
    if (from.has_pluggerhid()) {
      set_pluggerhid(from.pluggerhid());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_heropercentage()) {
      set_heropercentage(from.heropercentage());
    }
    if (from.has_godlv()) {
      set_godlv(from.godlv());
    }
    if (from.has_warridingtid()) {
      set_warridingtid(from.warridingtid());
    }
    if (from.has_chainsoulhid()) {
      set_chainsoulhid(from.chainsoulhid());
    }
    if (from.has_chainsoullv()) {
      set_chainsoullv(from.chainsoullv());
    }
    if (from.has_purplegoldbiglv()) {
      set_purplegoldbiglv(from.purplegoldbiglv());
    }
    if (from.has_purplegoldsoulcost()) {
      set_purplegoldsoulcost(from.purplegoldsoulcost());
    }
  }
  if (from._has_bits_[34 / 32] & (0xffu << (34 % 32))) {
    if (from.has_realbodylv()) {
      set_realbodylv(from.realbodylv());
    }
    if (from.has_forcesoulstarnum()) {
      set_forcesoulstarnum(from.forcesoulstarnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroInfo::CopyFrom(const THeroInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroInfo::IsInitialized() const {

  return true;
}

void THeroInfo::Swap(THeroInfo* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(htid_, other->htid_);
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(advance_, other->advance_);
    advanceitemarray_.Swap(&other->advanceitemarray_);
    std::swap(star_, other->star_);
    std::swap(starhole_, other->starhole_);
    combinationarray_.Swap(&other->combinationarray_);
    skillarray_.Swap(&other->skillarray_);
    equipitemarr_.Swap(&other->equipitemarr_);
    soulitemarr_.Swap(&other->soulitemarr_);
    std::swap(surplusskillpointnum_, other->surplusskillpointnum_);
    exclequipitemidarr_.Swap(&other->exclequipitemidarr_);
    fashionexclequiparr_.Swap(&other->fashionexclequiparr_);
    std::swap(goldlv_, other->goldlv_);
    std::swap(goldbreaklv_, other->goldbreaklv_);
    std::swap(linkedhid_, other->linkedhid_);
    std::swap(expiretime_, other->expiretime_);
    silkbagitemarr_.Swap(&other->silkbagitemarr_);
    std::swap(whitegoldlv_, other->whitegoldlv_);
    std::swap(whitegoldbreaklv_, other->whitegoldbreaklv_);
    pluginfoarr_.Swap(&other->pluginfoarr_);
    std::swap(pluggerhid_, other->pluggerhid_);
    std::swap(heropercentage_, other->heropercentage_);
    std::swap(godlv_, other->godlv_);
    std::swap(warridingtid_, other->warridingtid_);
    std::swap(chainsoulhid_, other->chainsoulhid_);
    std::swap(chainsoullv_, other->chainsoullv_);
    std::swap(purplegoldbiglv_, other->purplegoldbiglv_);
    purplegoldsmalllv_.Swap(&other->purplegoldsmalllv_);
    std::swap(purplegoldsoulcost_, other->purplegoldsoulcost_);
    divineequipitemarr_.Swap(&other->divineequipitemarr_);
    forcesoularr_.Swap(&other->forcesoularr_);
    std::swap(realbodylv_, other->realbodylv_);
    std::swap(forcesoulstarnum_, other->forcesoulstarnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroInfo_descriptor_;
  metadata.reflection = THeroInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

THeroGetHeroDataArrayReq::THeroGetHeroDataArrayReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroGetHeroDataArrayReq)
}

void THeroGetHeroDataArrayReq::InitAsDefaultInstance() {
}

THeroGetHeroDataArrayReq::THeroGetHeroDataArrayReq(const THeroGetHeroDataArrayReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroGetHeroDataArrayReq)
}

void THeroGetHeroDataArrayReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroGetHeroDataArrayReq::~THeroGetHeroDataArrayReq() {
  // @@protoc_insertion_point(destructor:pb.THeroGetHeroDataArrayReq)
  SharedDtor();
}

void THeroGetHeroDataArrayReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroGetHeroDataArrayReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroGetHeroDataArrayReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroGetHeroDataArrayReq_descriptor_;
}

const THeroGetHeroDataArrayReq& THeroGetHeroDataArrayReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroGetHeroDataArrayReq* THeroGetHeroDataArrayReq::default_instance_ = NULL;

THeroGetHeroDataArrayReq* THeroGetHeroDataArrayReq::New() const {
  return new THeroGetHeroDataArrayReq;
}

void THeroGetHeroDataArrayReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroGetHeroDataArrayReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroGetHeroDataArrayReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroGetHeroDataArrayReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroGetHeroDataArrayReq)
  return false;
#undef DO_
}

void THeroGetHeroDataArrayReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroGetHeroDataArrayReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroGetHeroDataArrayReq)
}

::google::protobuf::uint8* THeroGetHeroDataArrayReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroGetHeroDataArrayReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroGetHeroDataArrayReq)
  return target;
}

int THeroGetHeroDataArrayReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroGetHeroDataArrayReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroGetHeroDataArrayReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroGetHeroDataArrayReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroGetHeroDataArrayReq::MergeFrom(const THeroGetHeroDataArrayReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroGetHeroDataArrayReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroGetHeroDataArrayReq::CopyFrom(const THeroGetHeroDataArrayReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroGetHeroDataArrayReq::IsInitialized() const {

  return true;
}

void THeroGetHeroDataArrayReq::Swap(THeroGetHeroDataArrayReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroGetHeroDataArrayReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroGetHeroDataArrayReq_descriptor_;
  metadata.reflection = THeroGetHeroDataArrayReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroGetHeroDataArrayRsp::kHeroDataArrayFieldNumber;
const int THeroGetHeroDataArrayRsp::kHistroyHeroArrayFieldNumber;
const int THeroGetHeroDataArrayRsp::kUpdateTimeFieldNumber;
#endif  // !_MSC_VER

THeroGetHeroDataArrayRsp::THeroGetHeroDataArrayRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroGetHeroDataArrayRsp)
}

void THeroGetHeroDataArrayRsp::InitAsDefaultInstance() {
}

THeroGetHeroDataArrayRsp::THeroGetHeroDataArrayRsp(const THeroGetHeroDataArrayRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroGetHeroDataArrayRsp)
}

void THeroGetHeroDataArrayRsp::SharedCtor() {
  _cached_size_ = 0;
  updatetime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroGetHeroDataArrayRsp::~THeroGetHeroDataArrayRsp() {
  // @@protoc_insertion_point(destructor:pb.THeroGetHeroDataArrayRsp)
  SharedDtor();
}

void THeroGetHeroDataArrayRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroGetHeroDataArrayRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroGetHeroDataArrayRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroGetHeroDataArrayRsp_descriptor_;
}

const THeroGetHeroDataArrayRsp& THeroGetHeroDataArrayRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroGetHeroDataArrayRsp* THeroGetHeroDataArrayRsp::default_instance_ = NULL;

THeroGetHeroDataArrayRsp* THeroGetHeroDataArrayRsp::New() const {
  return new THeroGetHeroDataArrayRsp;
}

void THeroGetHeroDataArrayRsp::Clear() {
  updatetime_ = GOOGLE_ULONGLONG(0);
  herodataarray_.Clear();
  histroyheroarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroGetHeroDataArrayRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroGetHeroDataArrayRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.THeroInfo HeroDataArray = 1;
      case 1: {
        if (tag == 10) {
         parse_HeroDataArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_herodataarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_HeroDataArray;
        if (input->ExpectTag(16)) goto parse_HistroyHeroArray;
        break;
      }

      // repeated uint32 HistroyHeroArray = 2;
      case 2: {
        if (tag == 16) {
         parse_HistroyHeroArray:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_histroyheroarray())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_histroyheroarray())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_HistroyHeroArray;
        if (input->ExpectTag(24)) goto parse_UpdateTime;
        break;
      }

      // optional uint64 UpdateTime = 3;
      case 3: {
        if (tag == 24) {
         parse_UpdateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updatetime_)));
          set_has_updatetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroGetHeroDataArrayRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroGetHeroDataArrayRsp)
  return false;
#undef DO_
}

void THeroGetHeroDataArrayRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroGetHeroDataArrayRsp)
  // repeated .pb.THeroInfo HeroDataArray = 1;
  for (int i = 0; i < this->herodataarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->herodataarray(i), output);
  }

  // repeated uint32 HistroyHeroArray = 2;
  for (int i = 0; i < this->histroyheroarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->histroyheroarray(i), output);
  }

  // optional uint64 UpdateTime = 3;
  if (has_updatetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->updatetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroGetHeroDataArrayRsp)
}

::google::protobuf::uint8* THeroGetHeroDataArrayRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroGetHeroDataArrayRsp)
  // repeated .pb.THeroInfo HeroDataArray = 1;
  for (int i = 0; i < this->herodataarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->herodataarray(i), target);
  }

  // repeated uint32 HistroyHeroArray = 2;
  for (int i = 0; i < this->histroyheroarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->histroyheroarray(i), target);
  }

  // optional uint64 UpdateTime = 3;
  if (has_updatetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->updatetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroGetHeroDataArrayRsp)
  return target;
}

int THeroGetHeroDataArrayRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional uint64 UpdateTime = 3;
    if (has_updatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->updatetime());
    }

  }
  // repeated .pb.THeroInfo HeroDataArray = 1;
  total_size += 1 * this->herodataarray_size();
  for (int i = 0; i < this->herodataarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->herodataarray(i));
  }

  // repeated uint32 HistroyHeroArray = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->histroyheroarray_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->histroyheroarray(i));
    }
    total_size += 1 * this->histroyheroarray_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroGetHeroDataArrayRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroGetHeroDataArrayRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroGetHeroDataArrayRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroGetHeroDataArrayRsp::MergeFrom(const THeroGetHeroDataArrayRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  herodataarray_.MergeFrom(from.herodataarray_);
  histroyheroarray_.MergeFrom(from.histroyheroarray_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_updatetime()) {
      set_updatetime(from.updatetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroGetHeroDataArrayRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroGetHeroDataArrayRsp::CopyFrom(const THeroGetHeroDataArrayRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroGetHeroDataArrayRsp::IsInitialized() const {

  return true;
}

void THeroGetHeroDataArrayRsp::Swap(THeroGetHeroDataArrayRsp* other) {
  if (other != this) {
    herodataarray_.Swap(&other->herodataarray_);
    histroyheroarray_.Swap(&other->histroyheroarray_);
    std::swap(updatetime_, other->updatetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroGetHeroDataArrayRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroGetHeroDataArrayRsp_descriptor_;
  metadata.reflection = THeroGetHeroDataArrayRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroUpdateHeroDataNotify::kHeroDataArrayFieldNumber;
const int THeroUpdateHeroDataNotify::kHistroyHeroArrayFieldNumber;
const int THeroUpdateHeroDataNotify::kUpdateTimeFieldNumber;
#endif  // !_MSC_VER

THeroUpdateHeroDataNotify::THeroUpdateHeroDataNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroUpdateHeroDataNotify)
}

void THeroUpdateHeroDataNotify::InitAsDefaultInstance() {
}

THeroUpdateHeroDataNotify::THeroUpdateHeroDataNotify(const THeroUpdateHeroDataNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroUpdateHeroDataNotify)
}

void THeroUpdateHeroDataNotify::SharedCtor() {
  _cached_size_ = 0;
  updatetime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroUpdateHeroDataNotify::~THeroUpdateHeroDataNotify() {
  // @@protoc_insertion_point(destructor:pb.THeroUpdateHeroDataNotify)
  SharedDtor();
}

void THeroUpdateHeroDataNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroUpdateHeroDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroUpdateHeroDataNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroUpdateHeroDataNotify_descriptor_;
}

const THeroUpdateHeroDataNotify& THeroUpdateHeroDataNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroUpdateHeroDataNotify* THeroUpdateHeroDataNotify::default_instance_ = NULL;

THeroUpdateHeroDataNotify* THeroUpdateHeroDataNotify::New() const {
  return new THeroUpdateHeroDataNotify;
}

void THeroUpdateHeroDataNotify::Clear() {
  updatetime_ = GOOGLE_ULONGLONG(0);
  herodataarray_.Clear();
  histroyheroarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroUpdateHeroDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroUpdateHeroDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.THeroInfo HeroDataArray = 1;
      case 1: {
        if (tag == 10) {
         parse_HeroDataArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_herodataarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_HeroDataArray;
        if (input->ExpectTag(16)) goto parse_HistroyHeroArray;
        break;
      }

      // repeated uint32 HistroyHeroArray = 2;
      case 2: {
        if (tag == 16) {
         parse_HistroyHeroArray:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_histroyheroarray())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_histroyheroarray())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_HistroyHeroArray;
        if (input->ExpectTag(24)) goto parse_UpdateTime;
        break;
      }

      // optional uint64 UpdateTime = 3;
      case 3: {
        if (tag == 24) {
         parse_UpdateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updatetime_)));
          set_has_updatetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroUpdateHeroDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroUpdateHeroDataNotify)
  return false;
#undef DO_
}

void THeroUpdateHeroDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroUpdateHeroDataNotify)
  // repeated .pb.THeroInfo HeroDataArray = 1;
  for (int i = 0; i < this->herodataarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->herodataarray(i), output);
  }

  // repeated uint32 HistroyHeroArray = 2;
  for (int i = 0; i < this->histroyheroarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->histroyheroarray(i), output);
  }

  // optional uint64 UpdateTime = 3;
  if (has_updatetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->updatetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroUpdateHeroDataNotify)
}

::google::protobuf::uint8* THeroUpdateHeroDataNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroUpdateHeroDataNotify)
  // repeated .pb.THeroInfo HeroDataArray = 1;
  for (int i = 0; i < this->herodataarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->herodataarray(i), target);
  }

  // repeated uint32 HistroyHeroArray = 2;
  for (int i = 0; i < this->histroyheroarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->histroyheroarray(i), target);
  }

  // optional uint64 UpdateTime = 3;
  if (has_updatetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->updatetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroUpdateHeroDataNotify)
  return target;
}

int THeroUpdateHeroDataNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional uint64 UpdateTime = 3;
    if (has_updatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->updatetime());
    }

  }
  // repeated .pb.THeroInfo HeroDataArray = 1;
  total_size += 1 * this->herodataarray_size();
  for (int i = 0; i < this->herodataarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->herodataarray(i));
  }

  // repeated uint32 HistroyHeroArray = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->histroyheroarray_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->histroyheroarray(i));
    }
    total_size += 1 * this->histroyheroarray_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroUpdateHeroDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroUpdateHeroDataNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroUpdateHeroDataNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroUpdateHeroDataNotify::MergeFrom(const THeroUpdateHeroDataNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  herodataarray_.MergeFrom(from.herodataarray_);
  histroyheroarray_.MergeFrom(from.histroyheroarray_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_updatetime()) {
      set_updatetime(from.updatetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroUpdateHeroDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroUpdateHeroDataNotify::CopyFrom(const THeroUpdateHeroDataNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroUpdateHeroDataNotify::IsInitialized() const {

  return true;
}

void THeroUpdateHeroDataNotify::Swap(THeroUpdateHeroDataNotify* other) {
  if (other != this) {
    herodataarray_.Swap(&other->herodataarray_);
    histroyheroarray_.Swap(&other->histroyheroarray_);
    std::swap(updatetime_, other->updatetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroUpdateHeroDataNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroUpdateHeroDataNotify_descriptor_;
  metadata.reflection = THeroUpdateHeroDataNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroLevelUpReq::kHidFieldNumber;
const int THeroLevelUpReq::kLevelUpItemArrayFieldNumber;
#endif  // !_MSC_VER

THeroLevelUpReq::THeroLevelUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroLevelUpReq)
}

void THeroLevelUpReq::InitAsDefaultInstance() {
}

THeroLevelUpReq::THeroLevelUpReq(const THeroLevelUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroLevelUpReq)
}

void THeroLevelUpReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroLevelUpReq::~THeroLevelUpReq() {
  // @@protoc_insertion_point(destructor:pb.THeroLevelUpReq)
  SharedDtor();
}

void THeroLevelUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroLevelUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroLevelUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroLevelUpReq_descriptor_;
}

const THeroLevelUpReq& THeroLevelUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroLevelUpReq* THeroLevelUpReq::default_instance_ = NULL;

THeroLevelUpReq* THeroLevelUpReq::New() const {
  return new THeroLevelUpReq;
}

void THeroLevelUpReq::Clear() {
  hid_ = 0u;
  levelupitemarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroLevelUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroLevelUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_LevelUpItemArray;
        break;
      }

      // repeated .pb.TSimpleItem LevelUpItemArray = 2;
      case 2: {
        if (tag == 18) {
         parse_LevelUpItemArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_levelupitemarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_LevelUpItemArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroLevelUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroLevelUpReq)
  return false;
#undef DO_
}

void THeroLevelUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroLevelUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // repeated .pb.TSimpleItem LevelUpItemArray = 2;
  for (int i = 0; i < this->levelupitemarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->levelupitemarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroLevelUpReq)
}

::google::protobuf::uint8* THeroLevelUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroLevelUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // repeated .pb.TSimpleItem LevelUpItemArray = 2;
  for (int i = 0; i < this->levelupitemarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->levelupitemarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroLevelUpReq)
  return target;
}

int THeroLevelUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  // repeated .pb.TSimpleItem LevelUpItemArray = 2;
  total_size += 1 * this->levelupitemarray_size();
  for (int i = 0; i < this->levelupitemarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->levelupitemarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroLevelUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroLevelUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroLevelUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroLevelUpReq::MergeFrom(const THeroLevelUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  levelupitemarray_.MergeFrom(from.levelupitemarray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroLevelUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroLevelUpReq::CopyFrom(const THeroLevelUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroLevelUpReq::IsInitialized() const {

  return true;
}

void THeroLevelUpReq::Swap(THeroLevelUpReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    levelupitemarray_.Swap(&other->levelupitemarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroLevelUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroLevelUpReq_descriptor_;
  metadata.reflection = THeroLevelUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroStarActivateReq::kHidFieldNumber;
const int THeroStarActivateReq::kTargetHoleIndexFieldNumber;
#endif  // !_MSC_VER

THeroStarActivateReq::THeroStarActivateReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroStarActivateReq)
}

void THeroStarActivateReq::InitAsDefaultInstance() {
}

THeroStarActivateReq::THeroStarActivateReq(const THeroStarActivateReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroStarActivateReq)
}

void THeroStarActivateReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  targetholeindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroStarActivateReq::~THeroStarActivateReq() {
  // @@protoc_insertion_point(destructor:pb.THeroStarActivateReq)
  SharedDtor();
}

void THeroStarActivateReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroStarActivateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroStarActivateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroStarActivateReq_descriptor_;
}

const THeroStarActivateReq& THeroStarActivateReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroStarActivateReq* THeroStarActivateReq::default_instance_ = NULL;

THeroStarActivateReq* THeroStarActivateReq::New() const {
  return new THeroStarActivateReq;
}

void THeroStarActivateReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroStarActivateReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, targetholeindex_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroStarActivateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroStarActivateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TargetHoleIndex;
        break;
      }

      // optional uint32 TargetHoleIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_TargetHoleIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetholeindex_)));
          set_has_targetholeindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroStarActivateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroStarActivateReq)
  return false;
#undef DO_
}

void THeroStarActivateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroStarActivateReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 TargetHoleIndex = 2;
  if (has_targetholeindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->targetholeindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroStarActivateReq)
}

::google::protobuf::uint8* THeroStarActivateReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroStarActivateReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 TargetHoleIndex = 2;
  if (has_targetholeindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->targetholeindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroStarActivateReq)
  return target;
}

int THeroStarActivateReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 TargetHoleIndex = 2;
    if (has_targetholeindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targetholeindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroStarActivateReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroStarActivateReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroStarActivateReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroStarActivateReq::MergeFrom(const THeroStarActivateReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_targetholeindex()) {
      set_targetholeindex(from.targetholeindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroStarActivateReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroStarActivateReq::CopyFrom(const THeroStarActivateReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroStarActivateReq::IsInitialized() const {

  return true;
}

void THeroStarActivateReq::Swap(THeroStarActivateReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(targetholeindex_, other->targetholeindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroStarActivateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroStarActivateReq_descriptor_;
  metadata.reflection = THeroStarActivateReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroStarUpReq::kHidFieldNumber;
#endif  // !_MSC_VER

THeroStarUpReq::THeroStarUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroStarUpReq)
}

void THeroStarUpReq::InitAsDefaultInstance() {
}

THeroStarUpReq::THeroStarUpReq(const THeroStarUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroStarUpReq)
}

void THeroStarUpReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroStarUpReq::~THeroStarUpReq() {
  // @@protoc_insertion_point(destructor:pb.THeroStarUpReq)
  SharedDtor();
}

void THeroStarUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroStarUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroStarUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroStarUpReq_descriptor_;
}

const THeroStarUpReq& THeroStarUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroStarUpReq* THeroStarUpReq::default_instance_ = NULL;

THeroStarUpReq* THeroStarUpReq::New() const {
  return new THeroStarUpReq;
}

void THeroStarUpReq::Clear() {
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroStarUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroStarUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroStarUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroStarUpReq)
  return false;
#undef DO_
}

void THeroStarUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroStarUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroStarUpReq)
}

::google::protobuf::uint8* THeroStarUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroStarUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroStarUpReq)
  return target;
}

int THeroStarUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroStarUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroStarUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroStarUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroStarUpReq::MergeFrom(const THeroStarUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroStarUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroStarUpReq::CopyFrom(const THeroStarUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroStarUpReq::IsInitialized() const {

  return true;
}

void THeroStarUpReq::Swap(THeroStarUpReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroStarUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroStarUpReq_descriptor_;
  metadata.reflection = THeroStarUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroEquipAdvanceItemReq::kHidFieldNumber;
const int THeroEquipAdvanceItemReq::kAdvanceItemArrayFieldNumber;
#endif  // !_MSC_VER

THeroEquipAdvanceItemReq::THeroEquipAdvanceItemReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroEquipAdvanceItemReq)
}

void THeroEquipAdvanceItemReq::InitAsDefaultInstance() {
}

THeroEquipAdvanceItemReq::THeroEquipAdvanceItemReq(const THeroEquipAdvanceItemReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroEquipAdvanceItemReq)
}

void THeroEquipAdvanceItemReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroEquipAdvanceItemReq::~THeroEquipAdvanceItemReq() {
  // @@protoc_insertion_point(destructor:pb.THeroEquipAdvanceItemReq)
  SharedDtor();
}

void THeroEquipAdvanceItemReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroEquipAdvanceItemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroEquipAdvanceItemReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroEquipAdvanceItemReq_descriptor_;
}

const THeroEquipAdvanceItemReq& THeroEquipAdvanceItemReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroEquipAdvanceItemReq* THeroEquipAdvanceItemReq::default_instance_ = NULL;

THeroEquipAdvanceItemReq* THeroEquipAdvanceItemReq::New() const {
  return new THeroEquipAdvanceItemReq;
}

void THeroEquipAdvanceItemReq::Clear() {
  hid_ = 0u;
  advanceitemarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroEquipAdvanceItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroEquipAdvanceItemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_AdvanceItemArray;
        break;
      }

      // repeated .pb.THeroAdvanceItem AdvanceItemArray = 2;
      case 2: {
        if (tag == 18) {
         parse_AdvanceItemArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_advanceitemarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_AdvanceItemArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroEquipAdvanceItemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroEquipAdvanceItemReq)
  return false;
#undef DO_
}

void THeroEquipAdvanceItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroEquipAdvanceItemReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // repeated .pb.THeroAdvanceItem AdvanceItemArray = 2;
  for (int i = 0; i < this->advanceitemarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->advanceitemarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroEquipAdvanceItemReq)
}

::google::protobuf::uint8* THeroEquipAdvanceItemReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroEquipAdvanceItemReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // repeated .pb.THeroAdvanceItem AdvanceItemArray = 2;
  for (int i = 0; i < this->advanceitemarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->advanceitemarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroEquipAdvanceItemReq)
  return target;
}

int THeroEquipAdvanceItemReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  // repeated .pb.THeroAdvanceItem AdvanceItemArray = 2;
  total_size += 1 * this->advanceitemarray_size();
  for (int i = 0; i < this->advanceitemarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->advanceitemarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroEquipAdvanceItemReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroEquipAdvanceItemReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroEquipAdvanceItemReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroEquipAdvanceItemReq::MergeFrom(const THeroEquipAdvanceItemReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  advanceitemarray_.MergeFrom(from.advanceitemarray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroEquipAdvanceItemReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroEquipAdvanceItemReq::CopyFrom(const THeroEquipAdvanceItemReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroEquipAdvanceItemReq::IsInitialized() const {

  return true;
}

void THeroEquipAdvanceItemReq::Swap(THeroEquipAdvanceItemReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    advanceitemarray_.Swap(&other->advanceitemarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroEquipAdvanceItemReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroEquipAdvanceItemReq_descriptor_;
  metadata.reflection = THeroEquipAdvanceItemReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroAdvanceReq::kHidFieldNumber;
#endif  // !_MSC_VER

THeroAdvanceReq::THeroAdvanceReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroAdvanceReq)
}

void THeroAdvanceReq::InitAsDefaultInstance() {
}

THeroAdvanceReq::THeroAdvanceReq(const THeroAdvanceReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroAdvanceReq)
}

void THeroAdvanceReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroAdvanceReq::~THeroAdvanceReq() {
  // @@protoc_insertion_point(destructor:pb.THeroAdvanceReq)
  SharedDtor();
}

void THeroAdvanceReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroAdvanceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroAdvanceReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroAdvanceReq_descriptor_;
}

const THeroAdvanceReq& THeroAdvanceReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroAdvanceReq* THeroAdvanceReq::default_instance_ = NULL;

THeroAdvanceReq* THeroAdvanceReq::New() const {
  return new THeroAdvanceReq;
}

void THeroAdvanceReq::Clear() {
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroAdvanceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroAdvanceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroAdvanceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroAdvanceReq)
  return false;
#undef DO_
}

void THeroAdvanceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroAdvanceReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroAdvanceReq)
}

::google::protobuf::uint8* THeroAdvanceReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroAdvanceReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroAdvanceReq)
  return target;
}

int THeroAdvanceReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroAdvanceReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroAdvanceReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroAdvanceReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroAdvanceReq::MergeFrom(const THeroAdvanceReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroAdvanceReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroAdvanceReq::CopyFrom(const THeroAdvanceReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroAdvanceReq::IsInitialized() const {

  return true;
}

void THeroAdvanceReq::Swap(THeroAdvanceReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroAdvanceReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroAdvanceReq_descriptor_;
  metadata.reflection = THeroAdvanceReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroRecruitHeroReq::kTidFieldNumber;
#endif  // !_MSC_VER

THeroRecruitHeroReq::THeroRecruitHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroRecruitHeroReq)
}

void THeroRecruitHeroReq::InitAsDefaultInstance() {
}

THeroRecruitHeroReq::THeroRecruitHeroReq(const THeroRecruitHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroRecruitHeroReq)
}

void THeroRecruitHeroReq::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroRecruitHeroReq::~THeroRecruitHeroReq() {
  // @@protoc_insertion_point(destructor:pb.THeroRecruitHeroReq)
  SharedDtor();
}

void THeroRecruitHeroReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroRecruitHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroRecruitHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroRecruitHeroReq_descriptor_;
}

const THeroRecruitHeroReq& THeroRecruitHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroRecruitHeroReq* THeroRecruitHeroReq::default_instance_ = NULL;

THeroRecruitHeroReq* THeroRecruitHeroReq::New() const {
  return new THeroRecruitHeroReq;
}

void THeroRecruitHeroReq::Clear() {
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroRecruitHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroRecruitHeroReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroRecruitHeroReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroRecruitHeroReq)
  return false;
#undef DO_
}

void THeroRecruitHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroRecruitHeroReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroRecruitHeroReq)
}

::google::protobuf::uint8* THeroRecruitHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroRecruitHeroReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroRecruitHeroReq)
  return target;
}

int THeroRecruitHeroReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroRecruitHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroRecruitHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroRecruitHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroRecruitHeroReq::MergeFrom(const THeroRecruitHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroRecruitHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroRecruitHeroReq::CopyFrom(const THeroRecruitHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroRecruitHeroReq::IsInitialized() const {

  return true;
}

void THeroRecruitHeroReq::Swap(THeroRecruitHeroReq* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroRecruitHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroRecruitHeroReq_descriptor_;
  metadata.reflection = THeroRecruitHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroCombinationUpReq::kHidFieldNumber;
const int THeroCombinationUpReq::kTidFieldNumber;
#endif  // !_MSC_VER

THeroCombinationUpReq::THeroCombinationUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroCombinationUpReq)
}

void THeroCombinationUpReq::InitAsDefaultInstance() {
}

THeroCombinationUpReq::THeroCombinationUpReq(const THeroCombinationUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroCombinationUpReq)
}

void THeroCombinationUpReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroCombinationUpReq::~THeroCombinationUpReq() {
  // @@protoc_insertion_point(destructor:pb.THeroCombinationUpReq)
  SharedDtor();
}

void THeroCombinationUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroCombinationUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroCombinationUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroCombinationUpReq_descriptor_;
}

const THeroCombinationUpReq& THeroCombinationUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroCombinationUpReq* THeroCombinationUpReq::default_instance_ = NULL;

THeroCombinationUpReq* THeroCombinationUpReq::New() const {
  return new THeroCombinationUpReq;
}

void THeroCombinationUpReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroCombinationUpReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, tid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroCombinationUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroCombinationUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Tid;
        break;
      }

      // optional uint32 Tid = 2;
      case 2: {
        if (tag == 16) {
         parse_Tid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroCombinationUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroCombinationUpReq)
  return false;
#undef DO_
}

void THeroCombinationUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroCombinationUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 Tid = 2;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroCombinationUpReq)
}

::google::protobuf::uint8* THeroCombinationUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroCombinationUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 Tid = 2;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroCombinationUpReq)
  return target;
}

int THeroCombinationUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 Tid = 2;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroCombinationUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroCombinationUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroCombinationUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroCombinationUpReq::MergeFrom(const THeroCombinationUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_tid()) {
      set_tid(from.tid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroCombinationUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroCombinationUpReq::CopyFrom(const THeroCombinationUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroCombinationUpReq::IsInitialized() const {

  return true;
}

void THeroCombinationUpReq::Swap(THeroCombinationUpReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(tid_, other->tid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroCombinationUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroCombinationUpReq_descriptor_;
  metadata.reflection = THeroCombinationUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroCombinationActiveReq::kHidFieldNumber;
const int THeroCombinationActiveReq::kTidFieldNumber;
#endif  // !_MSC_VER

THeroCombinationActiveReq::THeroCombinationActiveReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroCombinationActiveReq)
}

void THeroCombinationActiveReq::InitAsDefaultInstance() {
}

THeroCombinationActiveReq::THeroCombinationActiveReq(const THeroCombinationActiveReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroCombinationActiveReq)
}

void THeroCombinationActiveReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroCombinationActiveReq::~THeroCombinationActiveReq() {
  // @@protoc_insertion_point(destructor:pb.THeroCombinationActiveReq)
  SharedDtor();
}

void THeroCombinationActiveReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroCombinationActiveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroCombinationActiveReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroCombinationActiveReq_descriptor_;
}

const THeroCombinationActiveReq& THeroCombinationActiveReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroCombinationActiveReq* THeroCombinationActiveReq::default_instance_ = NULL;

THeroCombinationActiveReq* THeroCombinationActiveReq::New() const {
  return new THeroCombinationActiveReq;
}

void THeroCombinationActiveReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroCombinationActiveReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, tid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroCombinationActiveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroCombinationActiveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Tid;
        break;
      }

      // optional uint32 Tid = 2;
      case 2: {
        if (tag == 16) {
         parse_Tid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroCombinationActiveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroCombinationActiveReq)
  return false;
#undef DO_
}

void THeroCombinationActiveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroCombinationActiveReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 Tid = 2;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroCombinationActiveReq)
}

::google::protobuf::uint8* THeroCombinationActiveReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroCombinationActiveReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 Tid = 2;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroCombinationActiveReq)
  return target;
}

int THeroCombinationActiveReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 Tid = 2;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroCombinationActiveReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroCombinationActiveReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroCombinationActiveReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroCombinationActiveReq::MergeFrom(const THeroCombinationActiveReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_tid()) {
      set_tid(from.tid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroCombinationActiveReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroCombinationActiveReq::CopyFrom(const THeroCombinationActiveReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroCombinationActiveReq::IsInitialized() const {

  return true;
}

void THeroCombinationActiveReq::Swap(THeroCombinationActiveReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(tid_, other->tid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroCombinationActiveReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroCombinationActiveReq_descriptor_;
  metadata.reflection = THeroCombinationActiveReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroSkillUpReq::kHidFieldNumber;
const int THeroSkillUpReq::kTidFieldNumber;
const int THeroSkillUpReq::kUpNumFieldNumber;
#endif  // !_MSC_VER

THeroSkillUpReq::THeroSkillUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroSkillUpReq)
}

void THeroSkillUpReq::InitAsDefaultInstance() {
}

THeroSkillUpReq::THeroSkillUpReq(const THeroSkillUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroSkillUpReq)
}

void THeroSkillUpReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  tid_ = 0u;
  upnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroSkillUpReq::~THeroSkillUpReq() {
  // @@protoc_insertion_point(destructor:pb.THeroSkillUpReq)
  SharedDtor();
}

void THeroSkillUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroSkillUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroSkillUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroSkillUpReq_descriptor_;
}

const THeroSkillUpReq& THeroSkillUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroSkillUpReq* THeroSkillUpReq::default_instance_ = NULL;

THeroSkillUpReq* THeroSkillUpReq::New() const {
  return new THeroSkillUpReq;
}

void THeroSkillUpReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroSkillUpReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, upnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroSkillUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroSkillUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Tid;
        break;
      }

      // optional uint32 Tid = 2;
      case 2: {
        if (tag == 16) {
         parse_Tid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_UpNum;
        break;
      }

      // optional uint32 UpNum = 3;
      case 3: {
        if (tag == 24) {
         parse_UpNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &upnum_)));
          set_has_upnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroSkillUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroSkillUpReq)
  return false;
#undef DO_
}

void THeroSkillUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroSkillUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 Tid = 2;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tid(), output);
  }

  // optional uint32 UpNum = 3;
  if (has_upnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->upnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroSkillUpReq)
}

::google::protobuf::uint8* THeroSkillUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroSkillUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 Tid = 2;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tid(), target);
  }

  // optional uint32 UpNum = 3;
  if (has_upnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->upnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroSkillUpReq)
  return target;
}

int THeroSkillUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 Tid = 2;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 UpNum = 3;
    if (has_upnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->upnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroSkillUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroSkillUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroSkillUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroSkillUpReq::MergeFrom(const THeroSkillUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_upnum()) {
      set_upnum(from.upnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroSkillUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroSkillUpReq::CopyFrom(const THeroSkillUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroSkillUpReq::IsInitialized() const {

  return true;
}

void THeroSkillUpReq::Swap(THeroSkillUpReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(tid_, other->tid_);
    std::swap(upnum_, other->upnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroSkillUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroSkillUpReq_descriptor_;
  metadata.reflection = THeroSkillUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroResetSkillReq::kHidFieldNumber;
#endif  // !_MSC_VER

THeroResetSkillReq::THeroResetSkillReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroResetSkillReq)
}

void THeroResetSkillReq::InitAsDefaultInstance() {
}

THeroResetSkillReq::THeroResetSkillReq(const THeroResetSkillReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroResetSkillReq)
}

void THeroResetSkillReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroResetSkillReq::~THeroResetSkillReq() {
  // @@protoc_insertion_point(destructor:pb.THeroResetSkillReq)
  SharedDtor();
}

void THeroResetSkillReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroResetSkillReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroResetSkillReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroResetSkillReq_descriptor_;
}

const THeroResetSkillReq& THeroResetSkillReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroResetSkillReq* THeroResetSkillReq::default_instance_ = NULL;

THeroResetSkillReq* THeroResetSkillReq::New() const {
  return new THeroResetSkillReq;
}

void THeroResetSkillReq::Clear() {
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroResetSkillReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroResetSkillReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroResetSkillReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroResetSkillReq)
  return false;
#undef DO_
}

void THeroResetSkillReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroResetSkillReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroResetSkillReq)
}

::google::protobuf::uint8* THeroResetSkillReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroResetSkillReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroResetSkillReq)
  return target;
}

int THeroResetSkillReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroResetSkillReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroResetSkillReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroResetSkillReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroResetSkillReq::MergeFrom(const THeroResetSkillReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroResetSkillReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroResetSkillReq::CopyFrom(const THeroResetSkillReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroResetSkillReq::IsInitialized() const {

  return true;
}

void THeroResetSkillReq::Swap(THeroResetSkillReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroResetSkillReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroResetSkillReq_descriptor_;
  metadata.reflection = THeroResetSkillReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroSetMultiEquipReq::kHidFieldNumber;
const int THeroSetMultiEquipReq::kEquipItemsFieldNumber;
#endif  // !_MSC_VER

THeroSetMultiEquipReq::THeroSetMultiEquipReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroSetMultiEquipReq)
}

void THeroSetMultiEquipReq::InitAsDefaultInstance() {
}

THeroSetMultiEquipReq::THeroSetMultiEquipReq(const THeroSetMultiEquipReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroSetMultiEquipReq)
}

void THeroSetMultiEquipReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroSetMultiEquipReq::~THeroSetMultiEquipReq() {
  // @@protoc_insertion_point(destructor:pb.THeroSetMultiEquipReq)
  SharedDtor();
}

void THeroSetMultiEquipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroSetMultiEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroSetMultiEquipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroSetMultiEquipReq_descriptor_;
}

const THeroSetMultiEquipReq& THeroSetMultiEquipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroSetMultiEquipReq* THeroSetMultiEquipReq::default_instance_ = NULL;

THeroSetMultiEquipReq* THeroSetMultiEquipReq::New() const {
  return new THeroSetMultiEquipReq;
}

void THeroSetMultiEquipReq::Clear() {
  hid_ = 0u;
  equipitems_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroSetMultiEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroSetMultiEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_EquipItems;
        break;
      }

      // repeated .pb.THeroEquipItem EquipItems = 2;
      case 2: {
        if (tag == 18) {
         parse_EquipItems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipitems()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_EquipItems;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroSetMultiEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroSetMultiEquipReq)
  return false;
#undef DO_
}

void THeroSetMultiEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroSetMultiEquipReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // repeated .pb.THeroEquipItem EquipItems = 2;
  for (int i = 0; i < this->equipitems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equipitems(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroSetMultiEquipReq)
}

::google::protobuf::uint8* THeroSetMultiEquipReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroSetMultiEquipReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // repeated .pb.THeroEquipItem EquipItems = 2;
  for (int i = 0; i < this->equipitems_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equipitems(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroSetMultiEquipReq)
  return target;
}

int THeroSetMultiEquipReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  // repeated .pb.THeroEquipItem EquipItems = 2;
  total_size += 1 * this->equipitems_size();
  for (int i = 0; i < this->equipitems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipitems(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroSetMultiEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroSetMultiEquipReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroSetMultiEquipReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroSetMultiEquipReq::MergeFrom(const THeroSetMultiEquipReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  equipitems_.MergeFrom(from.equipitems_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroSetMultiEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroSetMultiEquipReq::CopyFrom(const THeroSetMultiEquipReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroSetMultiEquipReq::IsInitialized() const {

  return true;
}

void THeroSetMultiEquipReq::Swap(THeroSetMultiEquipReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    equipitems_.Swap(&other->equipitems_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroSetMultiEquipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroSetMultiEquipReq_descriptor_;
  metadata.reflection = THeroSetMultiEquipReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroSetMultiSoulReq::kHidFieldNumber;
const int THeroSetMultiSoulReq::kSoulItemsFieldNumber;
#endif  // !_MSC_VER

THeroSetMultiSoulReq::THeroSetMultiSoulReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroSetMultiSoulReq)
}

void THeroSetMultiSoulReq::InitAsDefaultInstance() {
}

THeroSetMultiSoulReq::THeroSetMultiSoulReq(const THeroSetMultiSoulReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroSetMultiSoulReq)
}

void THeroSetMultiSoulReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroSetMultiSoulReq::~THeroSetMultiSoulReq() {
  // @@protoc_insertion_point(destructor:pb.THeroSetMultiSoulReq)
  SharedDtor();
}

void THeroSetMultiSoulReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroSetMultiSoulReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroSetMultiSoulReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroSetMultiSoulReq_descriptor_;
}

const THeroSetMultiSoulReq& THeroSetMultiSoulReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroSetMultiSoulReq* THeroSetMultiSoulReq::default_instance_ = NULL;

THeroSetMultiSoulReq* THeroSetMultiSoulReq::New() const {
  return new THeroSetMultiSoulReq;
}

void THeroSetMultiSoulReq::Clear() {
  hid_ = 0u;
  soulitems_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroSetMultiSoulReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroSetMultiSoulReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SoulItems;
        break;
      }

      // repeated .pb.THeroEquipItem SoulItems = 2;
      case 2: {
        if (tag == 18) {
         parse_SoulItems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_soulitems()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SoulItems;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroSetMultiSoulReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroSetMultiSoulReq)
  return false;
#undef DO_
}

void THeroSetMultiSoulReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroSetMultiSoulReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // repeated .pb.THeroEquipItem SoulItems = 2;
  for (int i = 0; i < this->soulitems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->soulitems(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroSetMultiSoulReq)
}

::google::protobuf::uint8* THeroSetMultiSoulReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroSetMultiSoulReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // repeated .pb.THeroEquipItem SoulItems = 2;
  for (int i = 0; i < this->soulitems_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->soulitems(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroSetMultiSoulReq)
  return target;
}

int THeroSetMultiSoulReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  // repeated .pb.THeroEquipItem SoulItems = 2;
  total_size += 1 * this->soulitems_size();
  for (int i = 0; i < this->soulitems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->soulitems(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroSetMultiSoulReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroSetMultiSoulReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroSetMultiSoulReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroSetMultiSoulReq::MergeFrom(const THeroSetMultiSoulReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  soulitems_.MergeFrom(from.soulitems_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroSetMultiSoulReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroSetMultiSoulReq::CopyFrom(const THeroSetMultiSoulReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroSetMultiSoulReq::IsInitialized() const {

  return true;
}

void THeroSetMultiSoulReq::Swap(THeroSetMultiSoulReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    soulitems_.Swap(&other->soulitems_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroSetMultiSoulReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroSetMultiSoulReq_descriptor_;
  metadata.reflection = THeroSetMultiSoulReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroSetWarRidingReq::kHidFieldNumber;
const int THeroSetWarRidingReq::kWarRidingTidFieldNumber;
#endif  // !_MSC_VER

THeroSetWarRidingReq::THeroSetWarRidingReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroSetWarRidingReq)
}

void THeroSetWarRidingReq::InitAsDefaultInstance() {
}

THeroSetWarRidingReq::THeroSetWarRidingReq(const THeroSetWarRidingReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroSetWarRidingReq)
}

void THeroSetWarRidingReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  warridingtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroSetWarRidingReq::~THeroSetWarRidingReq() {
  // @@protoc_insertion_point(destructor:pb.THeroSetWarRidingReq)
  SharedDtor();
}

void THeroSetWarRidingReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroSetWarRidingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroSetWarRidingReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroSetWarRidingReq_descriptor_;
}

const THeroSetWarRidingReq& THeroSetWarRidingReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroSetWarRidingReq* THeroSetWarRidingReq::default_instance_ = NULL;

THeroSetWarRidingReq* THeroSetWarRidingReq::New() const {
  return new THeroSetWarRidingReq;
}

void THeroSetWarRidingReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroSetWarRidingReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, warridingtid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroSetWarRidingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroSetWarRidingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_WarRidingTid;
        break;
      }

      // optional uint32 WarRidingTid = 2;
      case 2: {
        if (tag == 16) {
         parse_WarRidingTid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &warridingtid_)));
          set_has_warridingtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroSetWarRidingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroSetWarRidingReq)
  return false;
#undef DO_
}

void THeroSetWarRidingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroSetWarRidingReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 WarRidingTid = 2;
  if (has_warridingtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->warridingtid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroSetWarRidingReq)
}

::google::protobuf::uint8* THeroSetWarRidingReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroSetWarRidingReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 WarRidingTid = 2;
  if (has_warridingtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->warridingtid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroSetWarRidingReq)
  return target;
}

int THeroSetWarRidingReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 WarRidingTid = 2;
    if (has_warridingtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->warridingtid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroSetWarRidingReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroSetWarRidingReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroSetWarRidingReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroSetWarRidingReq::MergeFrom(const THeroSetWarRidingReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_warridingtid()) {
      set_warridingtid(from.warridingtid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroSetWarRidingReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroSetWarRidingReq::CopyFrom(const THeroSetWarRidingReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroSetWarRidingReq::IsInitialized() const {

  return true;
}

void THeroSetWarRidingReq::Swap(THeroSetWarRidingReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(warridingtid_, other->warridingtid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroSetWarRidingReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroSetWarRidingReq_descriptor_;
  metadata.reflection = THeroSetWarRidingReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroSetMultiExclEquipReq::kHidFieldNumber;
#endif  // !_MSC_VER

THeroSetMultiExclEquipReq::THeroSetMultiExclEquipReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroSetMultiExclEquipReq)
}

void THeroSetMultiExclEquipReq::InitAsDefaultInstance() {
}

THeroSetMultiExclEquipReq::THeroSetMultiExclEquipReq(const THeroSetMultiExclEquipReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroSetMultiExclEquipReq)
}

void THeroSetMultiExclEquipReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroSetMultiExclEquipReq::~THeroSetMultiExclEquipReq() {
  // @@protoc_insertion_point(destructor:pb.THeroSetMultiExclEquipReq)
  SharedDtor();
}

void THeroSetMultiExclEquipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroSetMultiExclEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroSetMultiExclEquipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroSetMultiExclEquipReq_descriptor_;
}

const THeroSetMultiExclEquipReq& THeroSetMultiExclEquipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroSetMultiExclEquipReq* THeroSetMultiExclEquipReq::default_instance_ = NULL;

THeroSetMultiExclEquipReq* THeroSetMultiExclEquipReq::New() const {
  return new THeroSetMultiExclEquipReq;
}

void THeroSetMultiExclEquipReq::Clear() {
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroSetMultiExclEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroSetMultiExclEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroSetMultiExclEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroSetMultiExclEquipReq)
  return false;
#undef DO_
}

void THeroSetMultiExclEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroSetMultiExclEquipReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroSetMultiExclEquipReq)
}

::google::protobuf::uint8* THeroSetMultiExclEquipReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroSetMultiExclEquipReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroSetMultiExclEquipReq)
  return target;
}

int THeroSetMultiExclEquipReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroSetMultiExclEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroSetMultiExclEquipReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroSetMultiExclEquipReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroSetMultiExclEquipReq::MergeFrom(const THeroSetMultiExclEquipReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroSetMultiExclEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroSetMultiExclEquipReq::CopyFrom(const THeroSetMultiExclEquipReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroSetMultiExclEquipReq::IsInitialized() const {

  return true;
}

void THeroSetMultiExclEquipReq::Swap(THeroSetMultiExclEquipReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroSetMultiExclEquipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroSetMultiExclEquipReq_descriptor_;
  metadata.reflection = THeroSetMultiExclEquipReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroSetMultiExclEquipRsp::kItemIdFieldNumber;
#endif  // !_MSC_VER

THeroSetMultiExclEquipRsp::THeroSetMultiExclEquipRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroSetMultiExclEquipRsp)
}

void THeroSetMultiExclEquipRsp::InitAsDefaultInstance() {
}

THeroSetMultiExclEquipRsp::THeroSetMultiExclEquipRsp(const THeroSetMultiExclEquipRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroSetMultiExclEquipRsp)
}

void THeroSetMultiExclEquipRsp::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroSetMultiExclEquipRsp::~THeroSetMultiExclEquipRsp() {
  // @@protoc_insertion_point(destructor:pb.THeroSetMultiExclEquipRsp)
  SharedDtor();
}

void THeroSetMultiExclEquipRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroSetMultiExclEquipRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroSetMultiExclEquipRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroSetMultiExclEquipRsp_descriptor_;
}

const THeroSetMultiExclEquipRsp& THeroSetMultiExclEquipRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroSetMultiExclEquipRsp* THeroSetMultiExclEquipRsp::default_instance_ = NULL;

THeroSetMultiExclEquipRsp* THeroSetMultiExclEquipRsp::New() const {
  return new THeroSetMultiExclEquipRsp;
}

void THeroSetMultiExclEquipRsp::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroSetMultiExclEquipRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroSetMultiExclEquipRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroSetMultiExclEquipRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroSetMultiExclEquipRsp)
  return false;
#undef DO_
}

void THeroSetMultiExclEquipRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroSetMultiExclEquipRsp)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroSetMultiExclEquipRsp)
}

::google::protobuf::uint8* THeroSetMultiExclEquipRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroSetMultiExclEquipRsp)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroSetMultiExclEquipRsp)
  return target;
}

int THeroSetMultiExclEquipRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroSetMultiExclEquipRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroSetMultiExclEquipRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroSetMultiExclEquipRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroSetMultiExclEquipRsp::MergeFrom(const THeroSetMultiExclEquipRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroSetMultiExclEquipRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroSetMultiExclEquipRsp::CopyFrom(const THeroSetMultiExclEquipRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroSetMultiExclEquipRsp::IsInitialized() const {

  return true;
}

void THeroSetMultiExclEquipRsp::Swap(THeroSetMultiExclEquipRsp* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroSetMultiExclEquipRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroSetMultiExclEquipRsp_descriptor_;
  metadata.reflection = THeroSetMultiExclEquipRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroSetMultiSilkBagReq::kHidFieldNumber;
const int THeroSetMultiSilkBagReq::kSilkBagItemsFieldNumber;
#endif  // !_MSC_VER

THeroSetMultiSilkBagReq::THeroSetMultiSilkBagReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroSetMultiSilkBagReq)
}

void THeroSetMultiSilkBagReq::InitAsDefaultInstance() {
}

THeroSetMultiSilkBagReq::THeroSetMultiSilkBagReq(const THeroSetMultiSilkBagReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroSetMultiSilkBagReq)
}

void THeroSetMultiSilkBagReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroSetMultiSilkBagReq::~THeroSetMultiSilkBagReq() {
  // @@protoc_insertion_point(destructor:pb.THeroSetMultiSilkBagReq)
  SharedDtor();
}

void THeroSetMultiSilkBagReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroSetMultiSilkBagReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroSetMultiSilkBagReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroSetMultiSilkBagReq_descriptor_;
}

const THeroSetMultiSilkBagReq& THeroSetMultiSilkBagReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroSetMultiSilkBagReq* THeroSetMultiSilkBagReq::default_instance_ = NULL;

THeroSetMultiSilkBagReq* THeroSetMultiSilkBagReq::New() const {
  return new THeroSetMultiSilkBagReq;
}

void THeroSetMultiSilkBagReq::Clear() {
  hid_ = 0u;
  silkbagitems_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroSetMultiSilkBagReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroSetMultiSilkBagReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SilkBagItems;
        break;
      }

      // repeated .pb.THeroEquipItem SilkBagItems = 2;
      case 2: {
        if (tag == 18) {
         parse_SilkBagItems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_silkbagitems()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SilkBagItems;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroSetMultiSilkBagReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroSetMultiSilkBagReq)
  return false;
#undef DO_
}

void THeroSetMultiSilkBagReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroSetMultiSilkBagReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // repeated .pb.THeroEquipItem SilkBagItems = 2;
  for (int i = 0; i < this->silkbagitems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->silkbagitems(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroSetMultiSilkBagReq)
}

::google::protobuf::uint8* THeroSetMultiSilkBagReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroSetMultiSilkBagReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // repeated .pb.THeroEquipItem SilkBagItems = 2;
  for (int i = 0; i < this->silkbagitems_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->silkbagitems(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroSetMultiSilkBagReq)
  return target;
}

int THeroSetMultiSilkBagReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  // repeated .pb.THeroEquipItem SilkBagItems = 2;
  total_size += 1 * this->silkbagitems_size();
  for (int i = 0; i < this->silkbagitems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->silkbagitems(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroSetMultiSilkBagReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroSetMultiSilkBagReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroSetMultiSilkBagReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroSetMultiSilkBagReq::MergeFrom(const THeroSetMultiSilkBagReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  silkbagitems_.MergeFrom(from.silkbagitems_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroSetMultiSilkBagReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroSetMultiSilkBagReq::CopyFrom(const THeroSetMultiSilkBagReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroSetMultiSilkBagReq::IsInitialized() const {

  return true;
}

void THeroSetMultiSilkBagReq::Swap(THeroSetMultiSilkBagReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    silkbagitems_.Swap(&other->silkbagitems_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroSetMultiSilkBagReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroSetMultiSilkBagReq_descriptor_;
  metadata.reflection = THeroSetMultiSilkBagReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroSetDivineEquipReq::kPosFieldNumber;
const int THeroSetDivineEquipReq::kHidFieldNumber;
const int THeroSetDivineEquipReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

THeroSetDivineEquipReq::THeroSetDivineEquipReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroSetDivineEquipReq)
}

void THeroSetDivineEquipReq::InitAsDefaultInstance() {
}

THeroSetDivineEquipReq::THeroSetDivineEquipReq(const THeroSetDivineEquipReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroSetDivineEquipReq)
}

void THeroSetDivineEquipReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  hid_ = 0u;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroSetDivineEquipReq::~THeroSetDivineEquipReq() {
  // @@protoc_insertion_point(destructor:pb.THeroSetDivineEquipReq)
  SharedDtor();
}

void THeroSetDivineEquipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroSetDivineEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroSetDivineEquipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroSetDivineEquipReq_descriptor_;
}

const THeroSetDivineEquipReq& THeroSetDivineEquipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroSetDivineEquipReq* THeroSetDivineEquipReq::default_instance_ = NULL;

THeroSetDivineEquipReq* THeroSetDivineEquipReq::New() const {
  return new THeroSetDivineEquipReq;
}

void THeroSetDivineEquipReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroSetDivineEquipReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(pos_, itemid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroSetDivineEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroSetDivineEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Hid;
        break;
      }

      // optional uint32 Hid = 2;
      case 2: {
        if (tag == 16) {
         parse_Hid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ItemId;
        break;
      }

      // optional uint32 ItemId = 3;
      case 3: {
        if (tag == 24) {
         parse_ItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroSetDivineEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroSetDivineEquipReq)
  return false;
#undef DO_
}

void THeroSetDivineEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroSetDivineEquipReq)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hid(), output);
  }

  // optional uint32 ItemId = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroSetDivineEquipReq)
}

::google::protobuf::uint8* THeroSetDivineEquipReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroSetDivineEquipReq)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hid(), target);
  }

  // optional uint32 ItemId = 3;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroSetDivineEquipReq)
  return target;
}

int THeroSetDivineEquipReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 Hid = 2;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 ItemId = 3;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroSetDivineEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroSetDivineEquipReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroSetDivineEquipReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroSetDivineEquipReq::MergeFrom(const THeroSetDivineEquipReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroSetDivineEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroSetDivineEquipReq::CopyFrom(const THeroSetDivineEquipReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroSetDivineEquipReq::IsInitialized() const {

  return true;
}

void THeroSetDivineEquipReq::Swap(THeroSetDivineEquipReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(hid_, other->hid_);
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroSetDivineEquipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroSetDivineEquipReq_descriptor_;
  metadata.reflection = THeroSetDivineEquipReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroUpgradeToGoldReq::kHidFieldNumber;
const int THeroUpgradeToGoldReq::kCosItemArrayFieldNumber;
#endif  // !_MSC_VER

THeroUpgradeToGoldReq::THeroUpgradeToGoldReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroUpgradeToGoldReq)
}

void THeroUpgradeToGoldReq::InitAsDefaultInstance() {
}

THeroUpgradeToGoldReq::THeroUpgradeToGoldReq(const THeroUpgradeToGoldReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroUpgradeToGoldReq)
}

void THeroUpgradeToGoldReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroUpgradeToGoldReq::~THeroUpgradeToGoldReq() {
  // @@protoc_insertion_point(destructor:pb.THeroUpgradeToGoldReq)
  SharedDtor();
}

void THeroUpgradeToGoldReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroUpgradeToGoldReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroUpgradeToGoldReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroUpgradeToGoldReq_descriptor_;
}

const THeroUpgradeToGoldReq& THeroUpgradeToGoldReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroUpgradeToGoldReq* THeroUpgradeToGoldReq::default_instance_ = NULL;

THeroUpgradeToGoldReq* THeroUpgradeToGoldReq::New() const {
  return new THeroUpgradeToGoldReq;
}

void THeroUpgradeToGoldReq::Clear() {
  hid_ = 0u;
  cositemarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroUpgradeToGoldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroUpgradeToGoldReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CosItemArray;
        break;
      }

      // repeated .pb.TSimpleItem CosItemArray = 2;
      case 2: {
        if (tag == 18) {
         parse_CosItemArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cositemarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CosItemArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroUpgradeToGoldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroUpgradeToGoldReq)
  return false;
#undef DO_
}

void THeroUpgradeToGoldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroUpgradeToGoldReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // repeated .pb.TSimpleItem CosItemArray = 2;
  for (int i = 0; i < this->cositemarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cositemarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroUpgradeToGoldReq)
}

::google::protobuf::uint8* THeroUpgradeToGoldReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroUpgradeToGoldReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // repeated .pb.TSimpleItem CosItemArray = 2;
  for (int i = 0; i < this->cositemarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cositemarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroUpgradeToGoldReq)
  return target;
}

int THeroUpgradeToGoldReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  // repeated .pb.TSimpleItem CosItemArray = 2;
  total_size += 1 * this->cositemarray_size();
  for (int i = 0; i < this->cositemarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cositemarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroUpgradeToGoldReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroUpgradeToGoldReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroUpgradeToGoldReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroUpgradeToGoldReq::MergeFrom(const THeroUpgradeToGoldReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  cositemarray_.MergeFrom(from.cositemarray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroUpgradeToGoldReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroUpgradeToGoldReq::CopyFrom(const THeroUpgradeToGoldReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroUpgradeToGoldReq::IsInitialized() const {

  return true;
}

void THeroUpgradeToGoldReq::Swap(THeroUpgradeToGoldReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    cositemarray_.Swap(&other->cositemarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroUpgradeToGoldReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroUpgradeToGoldReq_descriptor_;
  metadata.reflection = THeroUpgradeToGoldReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroUniversalFragConvertReq::kItemTidFieldNumber;
const int THeroUniversalFragConvertReq::kHtidFieldNumber;
const int THeroUniversalFragConvertReq::kNumFieldNumber;
#endif  // !_MSC_VER

THeroUniversalFragConvertReq::THeroUniversalFragConvertReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroUniversalFragConvertReq)
}

void THeroUniversalFragConvertReq::InitAsDefaultInstance() {
}

THeroUniversalFragConvertReq::THeroUniversalFragConvertReq(const THeroUniversalFragConvertReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroUniversalFragConvertReq)
}

void THeroUniversalFragConvertReq::SharedCtor() {
  _cached_size_ = 0;
  itemtid_ = 0u;
  htid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroUniversalFragConvertReq::~THeroUniversalFragConvertReq() {
  // @@protoc_insertion_point(destructor:pb.THeroUniversalFragConvertReq)
  SharedDtor();
}

void THeroUniversalFragConvertReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroUniversalFragConvertReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroUniversalFragConvertReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroUniversalFragConvertReq_descriptor_;
}

const THeroUniversalFragConvertReq& THeroUniversalFragConvertReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroUniversalFragConvertReq* THeroUniversalFragConvertReq::default_instance_ = NULL;

THeroUniversalFragConvertReq* THeroUniversalFragConvertReq::New() const {
  return new THeroUniversalFragConvertReq;
}

void THeroUniversalFragConvertReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroUniversalFragConvertReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemtid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroUniversalFragConvertReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroUniversalFragConvertReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemtid_)));
          set_has_itemtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Htid;
        break;
      }

      // optional uint32 Htid = 2;
      case 2: {
        if (tag == 16) {
         parse_Htid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &htid_)));
          set_has_htid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 3;
      case 3: {
        if (tag == 24) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroUniversalFragConvertReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroUniversalFragConvertReq)
  return false;
#undef DO_
}

void THeroUniversalFragConvertReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroUniversalFragConvertReq)
  // optional uint32 ItemTid = 1;
  if (has_itemtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemtid(), output);
  }

  // optional uint32 Htid = 2;
  if (has_htid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->htid(), output);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroUniversalFragConvertReq)
}

::google::protobuf::uint8* THeroUniversalFragConvertReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroUniversalFragConvertReq)
  // optional uint32 ItemTid = 1;
  if (has_itemtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemtid(), target);
  }

  // optional uint32 Htid = 2;
  if (has_htid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->htid(), target);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroUniversalFragConvertReq)
  return target;
}

int THeroUniversalFragConvertReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemTid = 1;
    if (has_itemtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemtid());
    }

    // optional uint32 Htid = 2;
    if (has_htid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->htid());
    }

    // optional uint32 Num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroUniversalFragConvertReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroUniversalFragConvertReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroUniversalFragConvertReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroUniversalFragConvertReq::MergeFrom(const THeroUniversalFragConvertReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemtid()) {
      set_itemtid(from.itemtid());
    }
    if (from.has_htid()) {
      set_htid(from.htid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroUniversalFragConvertReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroUniversalFragConvertReq::CopyFrom(const THeroUniversalFragConvertReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroUniversalFragConvertReq::IsInitialized() const {

  return true;
}

void THeroUniversalFragConvertReq::Swap(THeroUniversalFragConvertReq* other) {
  if (other != this) {
    std::swap(itemtid_, other->itemtid_);
    std::swap(htid_, other->htid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroUniversalFragConvertReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroUniversalFragConvertReq_descriptor_;
  metadata.reflection = THeroUniversalFragConvertReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroGoldBreakReq::kHidFieldNumber;
#endif  // !_MSC_VER

THeroGoldBreakReq::THeroGoldBreakReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroGoldBreakReq)
}

void THeroGoldBreakReq::InitAsDefaultInstance() {
}

THeroGoldBreakReq::THeroGoldBreakReq(const THeroGoldBreakReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroGoldBreakReq)
}

void THeroGoldBreakReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroGoldBreakReq::~THeroGoldBreakReq() {
  // @@protoc_insertion_point(destructor:pb.THeroGoldBreakReq)
  SharedDtor();
}

void THeroGoldBreakReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroGoldBreakReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroGoldBreakReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroGoldBreakReq_descriptor_;
}

const THeroGoldBreakReq& THeroGoldBreakReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroGoldBreakReq* THeroGoldBreakReq::default_instance_ = NULL;

THeroGoldBreakReq* THeroGoldBreakReq::New() const {
  return new THeroGoldBreakReq;
}

void THeroGoldBreakReq::Clear() {
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroGoldBreakReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroGoldBreakReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroGoldBreakReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroGoldBreakReq)
  return false;
#undef DO_
}

void THeroGoldBreakReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroGoldBreakReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroGoldBreakReq)
}

::google::protobuf::uint8* THeroGoldBreakReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroGoldBreakReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroGoldBreakReq)
  return target;
}

int THeroGoldBreakReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroGoldBreakReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroGoldBreakReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroGoldBreakReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroGoldBreakReq::MergeFrom(const THeroGoldBreakReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroGoldBreakReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroGoldBreakReq::CopyFrom(const THeroGoldBreakReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroGoldBreakReq::IsInitialized() const {

  return true;
}

void THeroGoldBreakReq::Swap(THeroGoldBreakReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroGoldBreakReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroGoldBreakReq_descriptor_;
  metadata.reflection = THeroGoldBreakReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroWhiteGoldBreakReq::kHidFieldNumber;
#endif  // !_MSC_VER

THeroWhiteGoldBreakReq::THeroWhiteGoldBreakReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroWhiteGoldBreakReq)
}

void THeroWhiteGoldBreakReq::InitAsDefaultInstance() {
}

THeroWhiteGoldBreakReq::THeroWhiteGoldBreakReq(const THeroWhiteGoldBreakReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroWhiteGoldBreakReq)
}

void THeroWhiteGoldBreakReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroWhiteGoldBreakReq::~THeroWhiteGoldBreakReq() {
  // @@protoc_insertion_point(destructor:pb.THeroWhiteGoldBreakReq)
  SharedDtor();
}

void THeroWhiteGoldBreakReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroWhiteGoldBreakReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroWhiteGoldBreakReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroWhiteGoldBreakReq_descriptor_;
}

const THeroWhiteGoldBreakReq& THeroWhiteGoldBreakReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroWhiteGoldBreakReq* THeroWhiteGoldBreakReq::default_instance_ = NULL;

THeroWhiteGoldBreakReq* THeroWhiteGoldBreakReq::New() const {
  return new THeroWhiteGoldBreakReq;
}

void THeroWhiteGoldBreakReq::Clear() {
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroWhiteGoldBreakReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroWhiteGoldBreakReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroWhiteGoldBreakReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroWhiteGoldBreakReq)
  return false;
#undef DO_
}

void THeroWhiteGoldBreakReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroWhiteGoldBreakReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroWhiteGoldBreakReq)
}

::google::protobuf::uint8* THeroWhiteGoldBreakReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroWhiteGoldBreakReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroWhiteGoldBreakReq)
  return target;
}

int THeroWhiteGoldBreakReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroWhiteGoldBreakReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroWhiteGoldBreakReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroWhiteGoldBreakReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroWhiteGoldBreakReq::MergeFrom(const THeroWhiteGoldBreakReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroWhiteGoldBreakReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroWhiteGoldBreakReq::CopyFrom(const THeroWhiteGoldBreakReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroWhiteGoldBreakReq::IsInitialized() const {

  return true;
}

void THeroWhiteGoldBreakReq::Swap(THeroWhiteGoldBreakReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroWhiteGoldBreakReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroWhiteGoldBreakReq_descriptor_;
  metadata.reflection = THeroWhiteGoldBreakReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroGoldHeroLinkReq::kHid1FieldNumber;
const int THeroGoldHeroLinkReq::kHid2FieldNumber;
#endif  // !_MSC_VER

THeroGoldHeroLinkReq::THeroGoldHeroLinkReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroGoldHeroLinkReq)
}

void THeroGoldHeroLinkReq::InitAsDefaultInstance() {
}

THeroGoldHeroLinkReq::THeroGoldHeroLinkReq(const THeroGoldHeroLinkReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroGoldHeroLinkReq)
}

void THeroGoldHeroLinkReq::SharedCtor() {
  _cached_size_ = 0;
  hid1_ = 0u;
  hid2_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroGoldHeroLinkReq::~THeroGoldHeroLinkReq() {
  // @@protoc_insertion_point(destructor:pb.THeroGoldHeroLinkReq)
  SharedDtor();
}

void THeroGoldHeroLinkReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroGoldHeroLinkReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroGoldHeroLinkReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroGoldHeroLinkReq_descriptor_;
}

const THeroGoldHeroLinkReq& THeroGoldHeroLinkReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroGoldHeroLinkReq* THeroGoldHeroLinkReq::default_instance_ = NULL;

THeroGoldHeroLinkReq* THeroGoldHeroLinkReq::New() const {
  return new THeroGoldHeroLinkReq;
}

void THeroGoldHeroLinkReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroGoldHeroLinkReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid1_, hid2_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroGoldHeroLinkReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroGoldHeroLinkReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid1_)));
          set_has_hid1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Hid2;
        break;
      }

      // optional uint32 Hid2 = 2;
      case 2: {
        if (tag == 16) {
         parse_Hid2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid2_)));
          set_has_hid2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroGoldHeroLinkReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroGoldHeroLinkReq)
  return false;
#undef DO_
}

void THeroGoldHeroLinkReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroGoldHeroLinkReq)
  // optional uint32 Hid1 = 1;
  if (has_hid1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid1(), output);
  }

  // optional uint32 Hid2 = 2;
  if (has_hid2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hid2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroGoldHeroLinkReq)
}

::google::protobuf::uint8* THeroGoldHeroLinkReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroGoldHeroLinkReq)
  // optional uint32 Hid1 = 1;
  if (has_hid1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid1(), target);
  }

  // optional uint32 Hid2 = 2;
  if (has_hid2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hid2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroGoldHeroLinkReq)
  return target;
}

int THeroGoldHeroLinkReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid1 = 1;
    if (has_hid1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid1());
    }

    // optional uint32 Hid2 = 2;
    if (has_hid2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroGoldHeroLinkReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroGoldHeroLinkReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroGoldHeroLinkReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroGoldHeroLinkReq::MergeFrom(const THeroGoldHeroLinkReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid1()) {
      set_hid1(from.hid1());
    }
    if (from.has_hid2()) {
      set_hid2(from.hid2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroGoldHeroLinkReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroGoldHeroLinkReq::CopyFrom(const THeroGoldHeroLinkReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroGoldHeroLinkReq::IsInitialized() const {

  return true;
}

void THeroGoldHeroLinkReq::Swap(THeroGoldHeroLinkReq* other) {
  if (other != this) {
    std::swap(hid1_, other->hid1_);
    std::swap(hid2_, other->hid2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroGoldHeroLinkReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroGoldHeroLinkReq_descriptor_;
  metadata.reflection = THeroGoldHeroLinkReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroUpgradeToWhiteGoldReq::kHidFieldNumber;
const int THeroUpgradeToWhiteGoldReq::kCosItemArrayFieldNumber;
#endif  // !_MSC_VER

THeroUpgradeToWhiteGoldReq::THeroUpgradeToWhiteGoldReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroUpgradeToWhiteGoldReq)
}

void THeroUpgradeToWhiteGoldReq::InitAsDefaultInstance() {
}

THeroUpgradeToWhiteGoldReq::THeroUpgradeToWhiteGoldReq(const THeroUpgradeToWhiteGoldReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroUpgradeToWhiteGoldReq)
}

void THeroUpgradeToWhiteGoldReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroUpgradeToWhiteGoldReq::~THeroUpgradeToWhiteGoldReq() {
  // @@protoc_insertion_point(destructor:pb.THeroUpgradeToWhiteGoldReq)
  SharedDtor();
}

void THeroUpgradeToWhiteGoldReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroUpgradeToWhiteGoldReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroUpgradeToWhiteGoldReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroUpgradeToWhiteGoldReq_descriptor_;
}

const THeroUpgradeToWhiteGoldReq& THeroUpgradeToWhiteGoldReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroUpgradeToWhiteGoldReq* THeroUpgradeToWhiteGoldReq::default_instance_ = NULL;

THeroUpgradeToWhiteGoldReq* THeroUpgradeToWhiteGoldReq::New() const {
  return new THeroUpgradeToWhiteGoldReq;
}

void THeroUpgradeToWhiteGoldReq::Clear() {
  hid_ = 0u;
  cositemarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroUpgradeToWhiteGoldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroUpgradeToWhiteGoldReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CosItemArray;
        break;
      }

      // repeated .pb.TSimpleItem CosItemArray = 2;
      case 2: {
        if (tag == 18) {
         parse_CosItemArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cositemarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CosItemArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroUpgradeToWhiteGoldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroUpgradeToWhiteGoldReq)
  return false;
#undef DO_
}

void THeroUpgradeToWhiteGoldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroUpgradeToWhiteGoldReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // repeated .pb.TSimpleItem CosItemArray = 2;
  for (int i = 0; i < this->cositemarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cositemarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroUpgradeToWhiteGoldReq)
}

::google::protobuf::uint8* THeroUpgradeToWhiteGoldReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroUpgradeToWhiteGoldReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // repeated .pb.TSimpleItem CosItemArray = 2;
  for (int i = 0; i < this->cositemarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cositemarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroUpgradeToWhiteGoldReq)
  return target;
}

int THeroUpgradeToWhiteGoldReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  // repeated .pb.TSimpleItem CosItemArray = 2;
  total_size += 1 * this->cositemarray_size();
  for (int i = 0; i < this->cositemarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cositemarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroUpgradeToWhiteGoldReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroUpgradeToWhiteGoldReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroUpgradeToWhiteGoldReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroUpgradeToWhiteGoldReq::MergeFrom(const THeroUpgradeToWhiteGoldReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  cositemarray_.MergeFrom(from.cositemarray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroUpgradeToWhiteGoldReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroUpgradeToWhiteGoldReq::CopyFrom(const THeroUpgradeToWhiteGoldReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroUpgradeToWhiteGoldReq::IsInitialized() const {

  return true;
}

void THeroUpgradeToWhiteGoldReq::Swap(THeroUpgradeToWhiteGoldReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    cositemarray_.Swap(&other->cositemarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroUpgradeToWhiteGoldReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroUpgradeToWhiteGoldReq_descriptor_;
  metadata.reflection = THeroUpgradeToWhiteGoldReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroGetPropReq::kHidFieldNumber;
const int THeroGetPropReq::kHtidFieldNumber;
const int THeroGetPropReq::kUidFieldNumber;
#endif  // !_MSC_VER

THeroGetPropReq::THeroGetPropReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroGetPropReq)
}

void THeroGetPropReq::InitAsDefaultInstance() {
}

THeroGetPropReq::THeroGetPropReq(const THeroGetPropReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroGetPropReq)
}

void THeroGetPropReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  htid_ = 0u;
  uid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroGetPropReq::~THeroGetPropReq() {
  // @@protoc_insertion_point(destructor:pb.THeroGetPropReq)
  SharedDtor();
}

void THeroGetPropReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroGetPropReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroGetPropReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroGetPropReq_descriptor_;
}

const THeroGetPropReq& THeroGetPropReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroGetPropReq* THeroGetPropReq::default_instance_ = NULL;

THeroGetPropReq* THeroGetPropReq::New() const {
  return new THeroGetPropReq;
}

void THeroGetPropReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroGetPropReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, uid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroGetPropReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroGetPropReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Htid;
        break;
      }

      // optional uint32 Htid = 2;
      case 2: {
        if (tag == 16) {
         parse_Htid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &htid_)));
          set_has_htid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Uid;
        break;
      }

      // optional uint64 Uid = 3;
      case 3: {
        if (tag == 24) {
         parse_Uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroGetPropReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroGetPropReq)
  return false;
#undef DO_
}

void THeroGetPropReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroGetPropReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 Htid = 2;
  if (has_htid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->htid(), output);
  }

  // optional uint64 Uid = 3;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroGetPropReq)
}

::google::protobuf::uint8* THeroGetPropReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroGetPropReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 Htid = 2;
  if (has_htid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->htid(), target);
  }

  // optional uint64 Uid = 3;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->uid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroGetPropReq)
  return target;
}

int THeroGetPropReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 Htid = 2;
    if (has_htid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->htid());
    }

    // optional uint64 Uid = 3;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroGetPropReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroGetPropReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroGetPropReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroGetPropReq::MergeFrom(const THeroGetPropReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_htid()) {
      set_htid(from.htid());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroGetPropReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroGetPropReq::CopyFrom(const THeroGetPropReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroGetPropReq::IsInitialized() const {

  return true;
}

void THeroGetPropReq::Swap(THeroGetPropReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(htid_, other->htid_);
    std::swap(uid_, other->uid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroGetPropReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroGetPropReq_descriptor_;
  metadata.reflection = THeroGetPropReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroGetPropResp::kPropInfoFieldNumber;
#endif  // !_MSC_VER

THeroGetPropResp::THeroGetPropResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroGetPropResp)
}

void THeroGetPropResp::InitAsDefaultInstance() {
  propinfo_ = const_cast< ::pb::TUnitInfo*>(&::pb::TUnitInfo::default_instance());
}

THeroGetPropResp::THeroGetPropResp(const THeroGetPropResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroGetPropResp)
}

void THeroGetPropResp::SharedCtor() {
  _cached_size_ = 0;
  propinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroGetPropResp::~THeroGetPropResp() {
  // @@protoc_insertion_point(destructor:pb.THeroGetPropResp)
  SharedDtor();
}

void THeroGetPropResp::SharedDtor() {
  if (this != default_instance_) {
    delete propinfo_;
  }
}

void THeroGetPropResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroGetPropResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroGetPropResp_descriptor_;
}

const THeroGetPropResp& THeroGetPropResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroGetPropResp* THeroGetPropResp::default_instance_ = NULL;

THeroGetPropResp* THeroGetPropResp::New() const {
  return new THeroGetPropResp;
}

void THeroGetPropResp::Clear() {
  if (has_propinfo()) {
    if (propinfo_ != NULL) propinfo_->::pb::TUnitInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroGetPropResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroGetPropResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TUnitInfo PropInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_propinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroGetPropResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroGetPropResp)
  return false;
#undef DO_
}

void THeroGetPropResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroGetPropResp)
  // optional .pb.TUnitInfo PropInfo = 1;
  if (has_propinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->propinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroGetPropResp)
}

::google::protobuf::uint8* THeroGetPropResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroGetPropResp)
  // optional .pb.TUnitInfo PropInfo = 1;
  if (has_propinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->propinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroGetPropResp)
  return target;
}

int THeroGetPropResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TUnitInfo PropInfo = 1;
    if (has_propinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->propinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroGetPropResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroGetPropResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroGetPropResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroGetPropResp::MergeFrom(const THeroGetPropResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_propinfo()) {
      mutable_propinfo()->::pb::TUnitInfo::MergeFrom(from.propinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroGetPropResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroGetPropResp::CopyFrom(const THeroGetPropResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroGetPropResp::IsInitialized() const {

  if (has_propinfo()) {
    if (!this->propinfo().IsInitialized()) return false;
  }
  return true;
}

void THeroGetPropResp::Swap(THeroGetPropResp* other) {
  if (other != this) {
    std::swap(propinfo_, other->propinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroGetPropResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroGetPropResp_descriptor_;
  metadata.reflection = THeroGetPropResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOtherUserHeroInfo::kHeroInfoFieldNumber;
const int TOtherUserHeroInfo::kAttrArrFieldNumber;
const int TOtherUserHeroInfo::kOpenTypeFieldNumber;
#endif  // !_MSC_VER

TOtherUserHeroInfo::TOtherUserHeroInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOtherUserHeroInfo)
}

void TOtherUserHeroInfo::InitAsDefaultInstance() {
  heroinfo_ = const_cast< ::pb::THeroInfo*>(&::pb::THeroInfo::default_instance());
}

TOtherUserHeroInfo::TOtherUserHeroInfo(const TOtherUserHeroInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOtherUserHeroInfo)
}

void TOtherUserHeroInfo::SharedCtor() {
  _cached_size_ = 0;
  heroinfo_ = NULL;
  opentype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOtherUserHeroInfo::~TOtherUserHeroInfo() {
  // @@protoc_insertion_point(destructor:pb.TOtherUserHeroInfo)
  SharedDtor();
}

void TOtherUserHeroInfo::SharedDtor() {
  if (this != default_instance_) {
    delete heroinfo_;
  }
}

void TOtherUserHeroInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOtherUserHeroInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOtherUserHeroInfo_descriptor_;
}

const TOtherUserHeroInfo& TOtherUserHeroInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

TOtherUserHeroInfo* TOtherUserHeroInfo::default_instance_ = NULL;

TOtherUserHeroInfo* TOtherUserHeroInfo::New() const {
  return new TOtherUserHeroInfo;
}

void TOtherUserHeroInfo::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    if (has_heroinfo()) {
      if (heroinfo_ != NULL) heroinfo_->::pb::THeroInfo::Clear();
    }
    opentype_ = 0;
  }
  attrarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOtherUserHeroInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOtherUserHeroInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.THeroInfo HeroInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heroinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_AttrArr;
        break;
      }

      // repeated .pb.TAttribute AttrArr = 2;
      case 2: {
        if (tag == 18) {
         parse_AttrArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attrarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_AttrArr;
        if (input->ExpectTag(48)) goto parse_OpenType;
        break;
      }

      // optional .pb.EPlugOpenType OpenType = 6;
      case 6: {
        if (tag == 48) {
         parse_OpenType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EPlugOpenType_IsValid(value)) {
            set_opentype(static_cast< ::pb::EPlugOpenType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOtherUserHeroInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOtherUserHeroInfo)
  return false;
#undef DO_
}

void TOtherUserHeroInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOtherUserHeroInfo)
  // optional .pb.THeroInfo HeroInfo = 1;
  if (has_heroinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->heroinfo(), output);
  }

  // repeated .pb.TAttribute AttrArr = 2;
  for (int i = 0; i < this->attrarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attrarr(i), output);
  }

  // optional .pb.EPlugOpenType OpenType = 6;
  if (has_opentype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->opentype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOtherUserHeroInfo)
}

::google::protobuf::uint8* TOtherUserHeroInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOtherUserHeroInfo)
  // optional .pb.THeroInfo HeroInfo = 1;
  if (has_heroinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->heroinfo(), target);
  }

  // repeated .pb.TAttribute AttrArr = 2;
  for (int i = 0; i < this->attrarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attrarr(i), target);
  }

  // optional .pb.EPlugOpenType OpenType = 6;
  if (has_opentype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->opentype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOtherUserHeroInfo)
  return target;
}

int TOtherUserHeroInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.THeroInfo HeroInfo = 1;
    if (has_heroinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->heroinfo());
    }

    // optional .pb.EPlugOpenType OpenType = 6;
    if (has_opentype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->opentype());
    }

  }
  // repeated .pb.TAttribute AttrArr = 2;
  total_size += 1 * this->attrarr_size();
  for (int i = 0; i < this->attrarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attrarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOtherUserHeroInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOtherUserHeroInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOtherUserHeroInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOtherUserHeroInfo::MergeFrom(const TOtherUserHeroInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  attrarr_.MergeFrom(from.attrarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroinfo()) {
      mutable_heroinfo()->::pb::THeroInfo::MergeFrom(from.heroinfo());
    }
    if (from.has_opentype()) {
      set_opentype(from.opentype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOtherUserHeroInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOtherUserHeroInfo::CopyFrom(const TOtherUserHeroInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOtherUserHeroInfo::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->attrarr())) return false;
  return true;
}

void TOtherUserHeroInfo::Swap(TOtherUserHeroInfo* other) {
  if (other != this) {
    std::swap(heroinfo_, other->heroinfo_);
    attrarr_.Swap(&other->attrarr_);
    std::swap(opentype_, other->opentype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOtherUserHeroInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOtherUserHeroInfo_descriptor_;
  metadata.reflection = TOtherUserHeroInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSetPlugInHeroReq::kHidFieldNumber;
const int TSetPlugInHeroReq::kPlugInHidFieldNumber;
const int TSetPlugInHeroReq::kPosFieldNumber;
#endif  // !_MSC_VER

TSetPlugInHeroReq::TSetPlugInHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSetPlugInHeroReq)
}

void TSetPlugInHeroReq::InitAsDefaultInstance() {
}

TSetPlugInHeroReq::TSetPlugInHeroReq(const TSetPlugInHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSetPlugInHeroReq)
}

void TSetPlugInHeroReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  pluginhid_ = 0u;
  pos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSetPlugInHeroReq::~TSetPlugInHeroReq() {
  // @@protoc_insertion_point(destructor:pb.TSetPlugInHeroReq)
  SharedDtor();
}

void TSetPlugInHeroReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSetPlugInHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSetPlugInHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSetPlugInHeroReq_descriptor_;
}

const TSetPlugInHeroReq& TSetPlugInHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

TSetPlugInHeroReq* TSetPlugInHeroReq::default_instance_ = NULL;

TSetPlugInHeroReq* TSetPlugInHeroReq::New() const {
  return new TSetPlugInHeroReq;
}

void TSetPlugInHeroReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TSetPlugInHeroReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, pos_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSetPlugInHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSetPlugInHeroReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PlugInHid;
        break;
      }

      // optional uint32 PlugInHid = 2;
      case 2: {
        if (tag == 16) {
         parse_PlugInHid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pluginhid_)));
          set_has_pluginhid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Pos;
        break;
      }

      // optional uint32 Pos = 3;
      case 3: {
        if (tag == 24) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSetPlugInHeroReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSetPlugInHeroReq)
  return false;
#undef DO_
}

void TSetPlugInHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSetPlugInHeroReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 PlugInHid = 2;
  if (has_pluginhid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pluginhid(), output);
  }

  // optional uint32 Pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSetPlugInHeroReq)
}

::google::protobuf::uint8* TSetPlugInHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSetPlugInHeroReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 PlugInHid = 2;
  if (has_pluginhid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pluginhid(), target);
  }

  // optional uint32 Pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSetPlugInHeroReq)
  return target;
}

int TSetPlugInHeroReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 PlugInHid = 2;
    if (has_pluginhid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pluginhid());
    }

    // optional uint32 Pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSetPlugInHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSetPlugInHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSetPlugInHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSetPlugInHeroReq::MergeFrom(const TSetPlugInHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_pluginhid()) {
      set_pluginhid(from.pluginhid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSetPlugInHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSetPlugInHeroReq::CopyFrom(const TSetPlugInHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSetPlugInHeroReq::IsInitialized() const {

  return true;
}

void TSetPlugInHeroReq::Swap(TSetPlugInHeroReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(pluginhid_, other->pluginhid_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSetPlugInHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSetPlugInHeroReq_descriptor_;
  metadata.reflection = TSetPlugInHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPlugLevelUpReq::kPosFieldNumber;
const int TPlugLevelUpReq::kHidFieldNumber;
#endif  // !_MSC_VER

TPlugLevelUpReq::TPlugLevelUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPlugLevelUpReq)
}

void TPlugLevelUpReq::InitAsDefaultInstance() {
}

TPlugLevelUpReq::TPlugLevelUpReq(const TPlugLevelUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPlugLevelUpReq)
}

void TPlugLevelUpReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPlugLevelUpReq::~TPlugLevelUpReq() {
  // @@protoc_insertion_point(destructor:pb.TPlugLevelUpReq)
  SharedDtor();
}

void TPlugLevelUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPlugLevelUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPlugLevelUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPlugLevelUpReq_descriptor_;
}

const TPlugLevelUpReq& TPlugLevelUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

TPlugLevelUpReq* TPlugLevelUpReq::default_instance_ = NULL;

TPlugLevelUpReq* TPlugLevelUpReq::New() const {
  return new TPlugLevelUpReq;
}

void TPlugLevelUpReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPlugLevelUpReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(pos_, hid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPlugLevelUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPlugLevelUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Hid;
        break;
      }

      // optional uint32 Hid = 2;
      case 2: {
        if (tag == 16) {
         parse_Hid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPlugLevelUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPlugLevelUpReq)
  return false;
#undef DO_
}

void TPlugLevelUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPlugLevelUpReq)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPlugLevelUpReq)
}

::google::protobuf::uint8* TPlugLevelUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPlugLevelUpReq)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPlugLevelUpReq)
  return target;
}

int TPlugLevelUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 Hid = 2;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPlugLevelUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPlugLevelUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPlugLevelUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPlugLevelUpReq::MergeFrom(const TPlugLevelUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPlugLevelUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPlugLevelUpReq::CopyFrom(const TPlugLevelUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPlugLevelUpReq::IsInitialized() const {

  return true;
}

void TPlugLevelUpReq::Swap(TPlugLevelUpReq* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPlugLevelUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPlugLevelUpReq_descriptor_;
  metadata.reflection = TPlugLevelUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TResetPlugReq::kHidFieldNumber;
#endif  // !_MSC_VER

TResetPlugReq::TResetPlugReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TResetPlugReq)
}

void TResetPlugReq::InitAsDefaultInstance() {
}

TResetPlugReq::TResetPlugReq(const TResetPlugReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TResetPlugReq)
}

void TResetPlugReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TResetPlugReq::~TResetPlugReq() {
  // @@protoc_insertion_point(destructor:pb.TResetPlugReq)
  SharedDtor();
}

void TResetPlugReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TResetPlugReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TResetPlugReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TResetPlugReq_descriptor_;
}

const TResetPlugReq& TResetPlugReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

TResetPlugReq* TResetPlugReq::default_instance_ = NULL;

TResetPlugReq* TResetPlugReq::New() const {
  return new TResetPlugReq;
}

void TResetPlugReq::Clear() {
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TResetPlugReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TResetPlugReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TResetPlugReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TResetPlugReq)
  return false;
#undef DO_
}

void TResetPlugReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TResetPlugReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TResetPlugReq)
}

::google::protobuf::uint8* TResetPlugReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TResetPlugReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TResetPlugReq)
  return target;
}

int TResetPlugReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TResetPlugReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TResetPlugReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TResetPlugReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TResetPlugReq::MergeFrom(const TResetPlugReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TResetPlugReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TResetPlugReq::CopyFrom(const TResetPlugReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TResetPlugReq::IsInitialized() const {

  return true;
}

void TResetPlugReq::Swap(TResetPlugReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TResetPlugReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TResetPlugReq_descriptor_;
  metadata.reflection = TResetPlugReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TResetPlugRsp::kRewardArrayFieldNumber;
#endif  // !_MSC_VER

TResetPlugRsp::TResetPlugRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TResetPlugRsp)
}

void TResetPlugRsp::InitAsDefaultInstance() {
}

TResetPlugRsp::TResetPlugRsp(const TResetPlugRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TResetPlugRsp)
}

void TResetPlugRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TResetPlugRsp::~TResetPlugRsp() {
  // @@protoc_insertion_point(destructor:pb.TResetPlugRsp)
  SharedDtor();
}

void TResetPlugRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TResetPlugRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TResetPlugRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TResetPlugRsp_descriptor_;
}

const TResetPlugRsp& TResetPlugRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

TResetPlugRsp* TResetPlugRsp::default_instance_ = NULL;

TResetPlugRsp* TResetPlugRsp::New() const {
  return new TResetPlugRsp;
}

void TResetPlugRsp::Clear() {
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TResetPlugRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TResetPlugRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TResetPlugRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TResetPlugRsp)
  return false;
#undef DO_
}

void TResetPlugRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TResetPlugRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TResetPlugRsp)
}

::google::protobuf::uint8* TResetPlugRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TResetPlugRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TResetPlugRsp)
  return target;
}

int TResetPlugRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TResetPlugRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TResetPlugRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TResetPlugRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TResetPlugRsp::MergeFrom(const TResetPlugRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TResetPlugRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TResetPlugRsp::CopyFrom(const TResetPlugRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TResetPlugRsp::IsInitialized() const {

  return true;
}

void TResetPlugRsp::Swap(TResetPlugRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TResetPlugRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TResetPlugRsp_descriptor_;
  metadata.reflection = TResetPlugRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroUpgradeGodLv::kHidFieldNumber;
#endif  // !_MSC_VER

THeroUpgradeGodLv::THeroUpgradeGodLv()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroUpgradeGodLv)
}

void THeroUpgradeGodLv::InitAsDefaultInstance() {
}

THeroUpgradeGodLv::THeroUpgradeGodLv(const THeroUpgradeGodLv& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroUpgradeGodLv)
}

void THeroUpgradeGodLv::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroUpgradeGodLv::~THeroUpgradeGodLv() {
  // @@protoc_insertion_point(destructor:pb.THeroUpgradeGodLv)
  SharedDtor();
}

void THeroUpgradeGodLv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroUpgradeGodLv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroUpgradeGodLv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroUpgradeGodLv_descriptor_;
}

const THeroUpgradeGodLv& THeroUpgradeGodLv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroUpgradeGodLv* THeroUpgradeGodLv::default_instance_ = NULL;

THeroUpgradeGodLv* THeroUpgradeGodLv::New() const {
  return new THeroUpgradeGodLv;
}

void THeroUpgradeGodLv::Clear() {
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroUpgradeGodLv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroUpgradeGodLv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroUpgradeGodLv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroUpgradeGodLv)
  return false;
#undef DO_
}

void THeroUpgradeGodLv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroUpgradeGodLv)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroUpgradeGodLv)
}

::google::protobuf::uint8* THeroUpgradeGodLv::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroUpgradeGodLv)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroUpgradeGodLv)
  return target;
}

int THeroUpgradeGodLv::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroUpgradeGodLv::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroUpgradeGodLv* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroUpgradeGodLv*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroUpgradeGodLv::MergeFrom(const THeroUpgradeGodLv& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroUpgradeGodLv::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroUpgradeGodLv::CopyFrom(const THeroUpgradeGodLv& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroUpgradeGodLv::IsInitialized() const {

  return true;
}

void THeroUpgradeGodLv::Swap(THeroUpgradeGodLv* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroUpgradeGodLv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroUpgradeGodLv_descriptor_;
  metadata.reflection = THeroUpgradeGodLv_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroChainSoulReq::kHid1FieldNumber;
const int THeroChainSoulReq::kHid2FieldNumber;
#endif  // !_MSC_VER

THeroChainSoulReq::THeroChainSoulReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroChainSoulReq)
}

void THeroChainSoulReq::InitAsDefaultInstance() {
}

THeroChainSoulReq::THeroChainSoulReq(const THeroChainSoulReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroChainSoulReq)
}

void THeroChainSoulReq::SharedCtor() {
  _cached_size_ = 0;
  hid1_ = 0u;
  hid2_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroChainSoulReq::~THeroChainSoulReq() {
  // @@protoc_insertion_point(destructor:pb.THeroChainSoulReq)
  SharedDtor();
}

void THeroChainSoulReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroChainSoulReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroChainSoulReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroChainSoulReq_descriptor_;
}

const THeroChainSoulReq& THeroChainSoulReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroChainSoulReq* THeroChainSoulReq::default_instance_ = NULL;

THeroChainSoulReq* THeroChainSoulReq::New() const {
  return new THeroChainSoulReq;
}

void THeroChainSoulReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroChainSoulReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid1_, hid2_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroChainSoulReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroChainSoulReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid1_)));
          set_has_hid1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Hid2;
        break;
      }

      // optional uint32 Hid2 = 2;
      case 2: {
        if (tag == 16) {
         parse_Hid2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid2_)));
          set_has_hid2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroChainSoulReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroChainSoulReq)
  return false;
#undef DO_
}

void THeroChainSoulReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroChainSoulReq)
  // optional uint32 Hid1 = 1;
  if (has_hid1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid1(), output);
  }

  // optional uint32 Hid2 = 2;
  if (has_hid2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hid2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroChainSoulReq)
}

::google::protobuf::uint8* THeroChainSoulReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroChainSoulReq)
  // optional uint32 Hid1 = 1;
  if (has_hid1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid1(), target);
  }

  // optional uint32 Hid2 = 2;
  if (has_hid2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hid2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroChainSoulReq)
  return target;
}

int THeroChainSoulReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid1 = 1;
    if (has_hid1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid1());
    }

    // optional uint32 Hid2 = 2;
    if (has_hid2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroChainSoulReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroChainSoulReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroChainSoulReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroChainSoulReq::MergeFrom(const THeroChainSoulReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid1()) {
      set_hid1(from.hid1());
    }
    if (from.has_hid2()) {
      set_hid2(from.hid2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroChainSoulReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroChainSoulReq::CopyFrom(const THeroChainSoulReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroChainSoulReq::IsInitialized() const {

  return true;
}

void THeroChainSoulReq::Swap(THeroChainSoulReq* other) {
  if (other != this) {
    std::swap(hid1_, other->hid1_);
    std::swap(hid2_, other->hid2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroChainSoulReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroChainSoulReq_descriptor_;
  metadata.reflection = THeroChainSoulReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroChainSoulLvUpReq::kHidFieldNumber;
#endif  // !_MSC_VER

THeroChainSoulLvUpReq::THeroChainSoulLvUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroChainSoulLvUpReq)
}

void THeroChainSoulLvUpReq::InitAsDefaultInstance() {
}

THeroChainSoulLvUpReq::THeroChainSoulLvUpReq(const THeroChainSoulLvUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroChainSoulLvUpReq)
}

void THeroChainSoulLvUpReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroChainSoulLvUpReq::~THeroChainSoulLvUpReq() {
  // @@protoc_insertion_point(destructor:pb.THeroChainSoulLvUpReq)
  SharedDtor();
}

void THeroChainSoulLvUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroChainSoulLvUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroChainSoulLvUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroChainSoulLvUpReq_descriptor_;
}

const THeroChainSoulLvUpReq& THeroChainSoulLvUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroChainSoulLvUpReq* THeroChainSoulLvUpReq::default_instance_ = NULL;

THeroChainSoulLvUpReq* THeroChainSoulLvUpReq::New() const {
  return new THeroChainSoulLvUpReq;
}

void THeroChainSoulLvUpReq::Clear() {
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroChainSoulLvUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroChainSoulLvUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroChainSoulLvUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroChainSoulLvUpReq)
  return false;
#undef DO_
}

void THeroChainSoulLvUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroChainSoulLvUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroChainSoulLvUpReq)
}

::google::protobuf::uint8* THeroChainSoulLvUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroChainSoulLvUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroChainSoulLvUpReq)
  return target;
}

int THeroChainSoulLvUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroChainSoulLvUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroChainSoulLvUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroChainSoulLvUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroChainSoulLvUpReq::MergeFrom(const THeroChainSoulLvUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroChainSoulLvUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroChainSoulLvUpReq::CopyFrom(const THeroChainSoulLvUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroChainSoulLvUpReq::IsInitialized() const {

  return true;
}

void THeroChainSoulLvUpReq::Swap(THeroChainSoulLvUpReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroChainSoulLvUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroChainSoulLvUpReq_descriptor_;
  metadata.reflection = THeroChainSoulLvUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroUpgradeToPurpleGoldLvUpReq::kHidFieldNumber;
const int THeroUpgradeToPurpleGoldLvUpReq::kLvIdFieldNumber;
const int THeroUpgradeToPurpleGoldLvUpReq::kCosItemArrayFieldNumber;
#endif  // !_MSC_VER

THeroUpgradeToPurpleGoldLvUpReq::THeroUpgradeToPurpleGoldLvUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroUpgradeToPurpleGoldLvUpReq)
}

void THeroUpgradeToPurpleGoldLvUpReq::InitAsDefaultInstance() {
}

THeroUpgradeToPurpleGoldLvUpReq::THeroUpgradeToPurpleGoldLvUpReq(const THeroUpgradeToPurpleGoldLvUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroUpgradeToPurpleGoldLvUpReq)
}

void THeroUpgradeToPurpleGoldLvUpReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  lvid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroUpgradeToPurpleGoldLvUpReq::~THeroUpgradeToPurpleGoldLvUpReq() {
  // @@protoc_insertion_point(destructor:pb.THeroUpgradeToPurpleGoldLvUpReq)
  SharedDtor();
}

void THeroUpgradeToPurpleGoldLvUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroUpgradeToPurpleGoldLvUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroUpgradeToPurpleGoldLvUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroUpgradeToPurpleGoldLvUpReq_descriptor_;
}

const THeroUpgradeToPurpleGoldLvUpReq& THeroUpgradeToPurpleGoldLvUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroUpgradeToPurpleGoldLvUpReq* THeroUpgradeToPurpleGoldLvUpReq::default_instance_ = NULL;

THeroUpgradeToPurpleGoldLvUpReq* THeroUpgradeToPurpleGoldLvUpReq::New() const {
  return new THeroUpgradeToPurpleGoldLvUpReq;
}

void THeroUpgradeToPurpleGoldLvUpReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroUpgradeToPurpleGoldLvUpReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, lvid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  cositemarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroUpgradeToPurpleGoldLvUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroUpgradeToPurpleGoldLvUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_LvId;
        break;
      }

      // optional uint32 LvId = 2;
      case 2: {
        if (tag == 16) {
         parse_LvId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lvid_)));
          set_has_lvid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_CosItemArray;
        break;
      }

      // repeated .pb.TSimpleItem CosItemArray = 3;
      case 3: {
        if (tag == 26) {
         parse_CosItemArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cositemarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_CosItemArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroUpgradeToPurpleGoldLvUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroUpgradeToPurpleGoldLvUpReq)
  return false;
#undef DO_
}

void THeroUpgradeToPurpleGoldLvUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroUpgradeToPurpleGoldLvUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 LvId = 2;
  if (has_lvid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lvid(), output);
  }

  // repeated .pb.TSimpleItem CosItemArray = 3;
  for (int i = 0; i < this->cositemarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cositemarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroUpgradeToPurpleGoldLvUpReq)
}

::google::protobuf::uint8* THeroUpgradeToPurpleGoldLvUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroUpgradeToPurpleGoldLvUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 LvId = 2;
  if (has_lvid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lvid(), target);
  }

  // repeated .pb.TSimpleItem CosItemArray = 3;
  for (int i = 0; i < this->cositemarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cositemarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroUpgradeToPurpleGoldLvUpReq)
  return target;
}

int THeroUpgradeToPurpleGoldLvUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 LvId = 2;
    if (has_lvid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lvid());
    }

  }
  // repeated .pb.TSimpleItem CosItemArray = 3;
  total_size += 1 * this->cositemarray_size();
  for (int i = 0; i < this->cositemarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cositemarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroUpgradeToPurpleGoldLvUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroUpgradeToPurpleGoldLvUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroUpgradeToPurpleGoldLvUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroUpgradeToPurpleGoldLvUpReq::MergeFrom(const THeroUpgradeToPurpleGoldLvUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  cositemarray_.MergeFrom(from.cositemarray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_lvid()) {
      set_lvid(from.lvid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroUpgradeToPurpleGoldLvUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroUpgradeToPurpleGoldLvUpReq::CopyFrom(const THeroUpgradeToPurpleGoldLvUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroUpgradeToPurpleGoldLvUpReq::IsInitialized() const {

  return true;
}

void THeroUpgradeToPurpleGoldLvUpReq::Swap(THeroUpgradeToPurpleGoldLvUpReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(lvid_, other->lvid_);
    cositemarray_.Swap(&other->cositemarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroUpgradeToPurpleGoldLvUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroUpgradeToPurpleGoldLvUpReq_descriptor_;
  metadata.reflection = THeroUpgradeToPurpleGoldLvUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroUpgradeToPurpleGoldAdvUpReq::kHidFieldNumber;
#endif  // !_MSC_VER

THeroUpgradeToPurpleGoldAdvUpReq::THeroUpgradeToPurpleGoldAdvUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroUpgradeToPurpleGoldAdvUpReq)
}

void THeroUpgradeToPurpleGoldAdvUpReq::InitAsDefaultInstance() {
}

THeroUpgradeToPurpleGoldAdvUpReq::THeroUpgradeToPurpleGoldAdvUpReq(const THeroUpgradeToPurpleGoldAdvUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroUpgradeToPurpleGoldAdvUpReq)
}

void THeroUpgradeToPurpleGoldAdvUpReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroUpgradeToPurpleGoldAdvUpReq::~THeroUpgradeToPurpleGoldAdvUpReq() {
  // @@protoc_insertion_point(destructor:pb.THeroUpgradeToPurpleGoldAdvUpReq)
  SharedDtor();
}

void THeroUpgradeToPurpleGoldAdvUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroUpgradeToPurpleGoldAdvUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroUpgradeToPurpleGoldAdvUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroUpgradeToPurpleGoldAdvUpReq_descriptor_;
}

const THeroUpgradeToPurpleGoldAdvUpReq& THeroUpgradeToPurpleGoldAdvUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroUpgradeToPurpleGoldAdvUpReq* THeroUpgradeToPurpleGoldAdvUpReq::default_instance_ = NULL;

THeroUpgradeToPurpleGoldAdvUpReq* THeroUpgradeToPurpleGoldAdvUpReq::New() const {
  return new THeroUpgradeToPurpleGoldAdvUpReq;
}

void THeroUpgradeToPurpleGoldAdvUpReq::Clear() {
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroUpgradeToPurpleGoldAdvUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroUpgradeToPurpleGoldAdvUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroUpgradeToPurpleGoldAdvUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroUpgradeToPurpleGoldAdvUpReq)
  return false;
#undef DO_
}

void THeroUpgradeToPurpleGoldAdvUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroUpgradeToPurpleGoldAdvUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroUpgradeToPurpleGoldAdvUpReq)
}

::google::protobuf::uint8* THeroUpgradeToPurpleGoldAdvUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroUpgradeToPurpleGoldAdvUpReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroUpgradeToPurpleGoldAdvUpReq)
  return target;
}

int THeroUpgradeToPurpleGoldAdvUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroUpgradeToPurpleGoldAdvUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroUpgradeToPurpleGoldAdvUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroUpgradeToPurpleGoldAdvUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroUpgradeToPurpleGoldAdvUpReq::MergeFrom(const THeroUpgradeToPurpleGoldAdvUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroUpgradeToPurpleGoldAdvUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroUpgradeToPurpleGoldAdvUpReq::CopyFrom(const THeroUpgradeToPurpleGoldAdvUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroUpgradeToPurpleGoldAdvUpReq::IsInitialized() const {

  return true;
}

void THeroUpgradeToPurpleGoldAdvUpReq::Swap(THeroUpgradeToPurpleGoldAdvUpReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroUpgradeToPurpleGoldAdvUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroUpgradeToPurpleGoldAdvUpReq_descriptor_;
  metadata.reflection = THeroUpgradeToPurpleGoldAdvUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TForceSoulEquipInfo::kPosFieldNumber;
const int TForceSoulEquipInfo::kItemIdFieldNumber;
#endif  // !_MSC_VER

TForceSoulEquipInfo::TForceSoulEquipInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TForceSoulEquipInfo)
}

void TForceSoulEquipInfo::InitAsDefaultInstance() {
}

TForceSoulEquipInfo::TForceSoulEquipInfo(const TForceSoulEquipInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TForceSoulEquipInfo)
}

void TForceSoulEquipInfo::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  itemid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TForceSoulEquipInfo::~TForceSoulEquipInfo() {
  // @@protoc_insertion_point(destructor:pb.TForceSoulEquipInfo)
  SharedDtor();
}

void TForceSoulEquipInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TForceSoulEquipInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TForceSoulEquipInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TForceSoulEquipInfo_descriptor_;
}

const TForceSoulEquipInfo& TForceSoulEquipInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

TForceSoulEquipInfo* TForceSoulEquipInfo::default_instance_ = NULL;

TForceSoulEquipInfo* TForceSoulEquipInfo::New() const {
  return new TForceSoulEquipInfo;
}

void TForceSoulEquipInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TForceSoulEquipInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(pos_, itemid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TForceSoulEquipInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TForceSoulEquipInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemId;
        break;
      }

      // optional int32 ItemId = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TForceSoulEquipInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TForceSoulEquipInfo)
  return false;
#undef DO_
}

void TForceSoulEquipInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TForceSoulEquipInfo)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional int32 ItemId = 2;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TForceSoulEquipInfo)
}

::google::protobuf::uint8* TForceSoulEquipInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TForceSoulEquipInfo)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional int32 ItemId = 2;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TForceSoulEquipInfo)
  return target;
}

int TForceSoulEquipInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional int32 ItemId = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TForceSoulEquipInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TForceSoulEquipInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TForceSoulEquipInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TForceSoulEquipInfo::MergeFrom(const TForceSoulEquipInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TForceSoulEquipInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TForceSoulEquipInfo::CopyFrom(const TForceSoulEquipInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TForceSoulEquipInfo::IsInitialized() const {

  return true;
}

void TForceSoulEquipInfo::Swap(TForceSoulEquipInfo* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TForceSoulEquipInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TForceSoulEquipInfo_descriptor_;
  metadata.reflection = TForceSoulEquipInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroSetMultiForceSoulReq::kHidFieldNumber;
const int THeroSetMultiForceSoulReq::kEquipItemsFieldNumber;
#endif  // !_MSC_VER

THeroSetMultiForceSoulReq::THeroSetMultiForceSoulReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroSetMultiForceSoulReq)
}

void THeroSetMultiForceSoulReq::InitAsDefaultInstance() {
}

THeroSetMultiForceSoulReq::THeroSetMultiForceSoulReq(const THeroSetMultiForceSoulReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroSetMultiForceSoulReq)
}

void THeroSetMultiForceSoulReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroSetMultiForceSoulReq::~THeroSetMultiForceSoulReq() {
  // @@protoc_insertion_point(destructor:pb.THeroSetMultiForceSoulReq)
  SharedDtor();
}

void THeroSetMultiForceSoulReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroSetMultiForceSoulReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroSetMultiForceSoulReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroSetMultiForceSoulReq_descriptor_;
}

const THeroSetMultiForceSoulReq& THeroSetMultiForceSoulReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroSetMultiForceSoulReq* THeroSetMultiForceSoulReq::default_instance_ = NULL;

THeroSetMultiForceSoulReq* THeroSetMultiForceSoulReq::New() const {
  return new THeroSetMultiForceSoulReq;
}

void THeroSetMultiForceSoulReq::Clear() {
  hid_ = 0u;
  equipitems_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroSetMultiForceSoulReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroSetMultiForceSoulReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_EquipItems;
        break;
      }

      // repeated .pb.TForceSoulEquipInfo EquipItems = 2;
      case 2: {
        if (tag == 18) {
         parse_EquipItems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipitems()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_EquipItems;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroSetMultiForceSoulReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroSetMultiForceSoulReq)
  return false;
#undef DO_
}

void THeroSetMultiForceSoulReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroSetMultiForceSoulReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // repeated .pb.TForceSoulEquipInfo EquipItems = 2;
  for (int i = 0; i < this->equipitems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->equipitems(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroSetMultiForceSoulReq)
}

::google::protobuf::uint8* THeroSetMultiForceSoulReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroSetMultiForceSoulReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // repeated .pb.TForceSoulEquipInfo EquipItems = 2;
  for (int i = 0; i < this->equipitems_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->equipitems(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroSetMultiForceSoulReq)
  return target;
}

int THeroSetMultiForceSoulReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  // repeated .pb.TForceSoulEquipInfo EquipItems = 2;
  total_size += 1 * this->equipitems_size();
  for (int i = 0; i < this->equipitems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipitems(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroSetMultiForceSoulReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroSetMultiForceSoulReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroSetMultiForceSoulReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroSetMultiForceSoulReq::MergeFrom(const THeroSetMultiForceSoulReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  equipitems_.MergeFrom(from.equipitems_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroSetMultiForceSoulReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroSetMultiForceSoulReq::CopyFrom(const THeroSetMultiForceSoulReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroSetMultiForceSoulReq::IsInitialized() const {

  return true;
}

void THeroSetMultiForceSoulReq::Swap(THeroSetMultiForceSoulReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    equipitems_.Swap(&other->equipitems_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroSetMultiForceSoulReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroSetMultiForceSoulReq_descriptor_;
  metadata.reflection = THeroSetMultiForceSoulReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroAwakeRealBodyReq::kHidFieldNumber;
const int THeroAwakeRealBodyReq::kCosItemArrayFieldNumber;
#endif  // !_MSC_VER

THeroAwakeRealBodyReq::THeroAwakeRealBodyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroAwakeRealBodyReq)
}

void THeroAwakeRealBodyReq::InitAsDefaultInstance() {
}

THeroAwakeRealBodyReq::THeroAwakeRealBodyReq(const THeroAwakeRealBodyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroAwakeRealBodyReq)
}

void THeroAwakeRealBodyReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroAwakeRealBodyReq::~THeroAwakeRealBodyReq() {
  // @@protoc_insertion_point(destructor:pb.THeroAwakeRealBodyReq)
  SharedDtor();
}

void THeroAwakeRealBodyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroAwakeRealBodyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroAwakeRealBodyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroAwakeRealBodyReq_descriptor_;
}

const THeroAwakeRealBodyReq& THeroAwakeRealBodyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHero_2eproto();
  return *default_instance_;
}

THeroAwakeRealBodyReq* THeroAwakeRealBodyReq::default_instance_ = NULL;

THeroAwakeRealBodyReq* THeroAwakeRealBodyReq::New() const {
  return new THeroAwakeRealBodyReq;
}

void THeroAwakeRealBodyReq::Clear() {
  hid_ = 0u;
  cositemarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroAwakeRealBodyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroAwakeRealBodyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CosItemArray;
        break;
      }

      // repeated .pb.TSimpleItem CosItemArray = 2;
      case 2: {
        if (tag == 18) {
         parse_CosItemArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cositemarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CosItemArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroAwakeRealBodyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroAwakeRealBodyReq)
  return false;
#undef DO_
}

void THeroAwakeRealBodyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroAwakeRealBodyReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // repeated .pb.TSimpleItem CosItemArray = 2;
  for (int i = 0; i < this->cositemarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cositemarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroAwakeRealBodyReq)
}

::google::protobuf::uint8* THeroAwakeRealBodyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroAwakeRealBodyReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // repeated .pb.TSimpleItem CosItemArray = 2;
  for (int i = 0; i < this->cositemarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cositemarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroAwakeRealBodyReq)
  return target;
}

int THeroAwakeRealBodyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  // repeated .pb.TSimpleItem CosItemArray = 2;
  total_size += 1 * this->cositemarray_size();
  for (int i = 0; i < this->cositemarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cositemarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroAwakeRealBodyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroAwakeRealBodyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroAwakeRealBodyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroAwakeRealBodyReq::MergeFrom(const THeroAwakeRealBodyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  cositemarray_.MergeFrom(from.cositemarray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroAwakeRealBodyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroAwakeRealBodyReq::CopyFrom(const THeroAwakeRealBodyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroAwakeRealBodyReq::IsInitialized() const {

  return true;
}

void THeroAwakeRealBodyReq::Swap(THeroAwakeRealBodyReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    cositemarray_.Swap(&other->cositemarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroAwakeRealBodyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroAwakeRealBodyReq_descriptor_;
  metadata.reflection = THeroAwakeRealBodyReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
