// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/AttributerBattleDefine.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/AttributerBattleDefine.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TDInheritInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDInheritInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TReqGetTDBattleArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TReqGetTDBattleArgs_reflection_ = NULL;
const ::google::protobuf::Descriptor* TRspGetTDBattleArgs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TRspGetTDBattleArgs_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fAttributerBattleDefine_2eproto() {
  protobuf_AddDesc_net_2fAttributerBattleDefine_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/AttributerBattleDefine.proto");
  GOOGLE_CHECK(file != NULL);
  TDInheritInfo_descriptor_ = file->message_type(0);
  static const int TDInheritInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInheritInfo, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInheritInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInheritInfo, curhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInheritInfo, currage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInheritInfo, curabsolutehp_),
  };
  TDInheritInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDInheritInfo_descriptor_,
      TDInheritInfo::default_instance_,
      TDInheritInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInheritInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDInheritInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDInheritInfo));
  TReqGetTDBattleArgs_descriptor_ = file->message_type(1);
  static const int TReqGetTDBattleArgs_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TReqGetTDBattleArgs, squidinheritinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TReqGetTDBattleArgs, tdbattleinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TReqGetTDBattleArgs, firstattack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TReqGetTDBattleArgs, enableinherit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TReqGetTDBattleArgs, skillcounter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TReqGetTDBattleArgs, unitinfoarr_),
  };
  TReqGetTDBattleArgs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TReqGetTDBattleArgs_descriptor_,
      TReqGetTDBattleArgs::default_instance_,
      TReqGetTDBattleArgs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TReqGetTDBattleArgs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TReqGetTDBattleArgs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TReqGetTDBattleArgs));
  TRspGetTDBattleArgs_descriptor_ = file->message_type(2);
  static const int TRspGetTDBattleArgs_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TRspGetTDBattleArgs, battleargs_),
  };
  TRspGetTDBattleArgs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TRspGetTDBattleArgs_descriptor_,
      TRspGetTDBattleArgs::default_instance_,
      TRspGetTDBattleArgs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TRspGetTDBattleArgs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TRspGetTDBattleArgs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TRspGetTDBattleArgs));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fAttributerBattleDefine_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDInheritInfo_descriptor_, &TDInheritInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TReqGetTDBattleArgs_descriptor_, &TReqGetTDBattleArgs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TRspGetTDBattleArgs_descriptor_, &TRspGetTDBattleArgs::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fAttributerBattleDefine_2eproto() {
  delete TDInheritInfo::default_instance_;
  delete TDInheritInfo_reflection_;
  delete TReqGetTDBattleArgs::default_instance_;
  delete TReqGetTDBattleArgs_reflection_;
  delete TRspGetTDBattleArgs::default_instance_;
  delete TRspGetTDBattleArgs_reflection_;
}

void protobuf_AddDesc_net_2fAttributerBattleDefine_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fBattleBase_2eproto();
  ::pb::protobuf_AddDesc_net_2fBattle_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n net/AttributerBattleDefine.proto\022\002pb\032\024"
    "net/BattleBase.proto\032\020net/Battle.proto\"`"
    "\n\rTDInheritInfo\022\013\n\003Hid\030\001 \002(\r\022\013\n\003Pos\030\002 \002("
    "\r\022\r\n\005CurHp\030\003 \002(\004\022\017\n\007CurRage\030\004 \002(\r\022\025\n\rCur"
    "AbsoluteHp\030\005 \002(\004\"\325\001\n\023TReqGetTDBattleArgs"
    "\022+\n\020SquidInheritInfo\030\001 \003(\0132\021.pb.TDInheri"
    "tInfo\022\026\n\016TDBattleInfoId\030\002 \001(\r\022\023\n\013FirstAt"
    "tack\030\003 \001(\010\022\025\n\rEnableInherit\030\004 \001(\010\022)\n\014Ski"
    "llCounter\030\005 \001(\0132\023.pb.TSkillCountInfo\022\"\n\013"
    "UnitInfoArr\030\006 \003(\0132\r.pb.TUnitInfo\":\n\023TRsp"
    "GetTDBattleArgs\022#\n\nBattleArgs\030\001 \001(\0132\017.pb"
    ".TBattleArgs", 452);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/AttributerBattleDefine.proto", &protobuf_RegisterTypes);
  TDInheritInfo::default_instance_ = new TDInheritInfo();
  TReqGetTDBattleArgs::default_instance_ = new TReqGetTDBattleArgs();
  TRspGetTDBattleArgs::default_instance_ = new TRspGetTDBattleArgs();
  TDInheritInfo::default_instance_->InitAsDefaultInstance();
  TReqGetTDBattleArgs::default_instance_->InitAsDefaultInstance();
  TRspGetTDBattleArgs::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fAttributerBattleDefine_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fAttributerBattleDefine_2eproto {
  StaticDescriptorInitializer_net_2fAttributerBattleDefine_2eproto() {
    protobuf_AddDesc_net_2fAttributerBattleDefine_2eproto();
  }
} static_descriptor_initializer_net_2fAttributerBattleDefine_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TDInheritInfo::kHidFieldNumber;
const int TDInheritInfo::kPosFieldNumber;
const int TDInheritInfo::kCurHpFieldNumber;
const int TDInheritInfo::kCurRageFieldNumber;
const int TDInheritInfo::kCurAbsoluteHpFieldNumber;
#endif  // !_MSC_VER

TDInheritInfo::TDInheritInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDInheritInfo)
}

void TDInheritInfo::InitAsDefaultInstance() {
}

TDInheritInfo::TDInheritInfo(const TDInheritInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDInheritInfo)
}

void TDInheritInfo::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  pos_ = 0u;
  curhp_ = GOOGLE_ULONGLONG(0);
  currage_ = 0u;
  curabsolutehp_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDInheritInfo::~TDInheritInfo() {
  // @@protoc_insertion_point(destructor:pb.TDInheritInfo)
  SharedDtor();
}

void TDInheritInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDInheritInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDInheritInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDInheritInfo_descriptor_;
}

const TDInheritInfo& TDInheritInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAttributerBattleDefine_2eproto();
  return *default_instance_;
}

TDInheritInfo* TDInheritInfo::default_instance_ = NULL;

TDInheritInfo* TDInheritInfo::New() const {
  return new TDInheritInfo;
}

void TDInheritInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDInheritInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(hid_, currage_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDInheritInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDInheritInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Pos;
        break;
      }

      // required uint32 Pos = 2;
      case 2: {
        if (tag == 16) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CurHp;
        break;
      }

      // required uint64 CurHp = 3;
      case 3: {
        if (tag == 24) {
         parse_CurHp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &curhp_)));
          set_has_curhp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CurRage;
        break;
      }

      // required uint32 CurRage = 4;
      case 4: {
        if (tag == 32) {
         parse_CurRage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currage_)));
          set_has_currage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_CurAbsoluteHp;
        break;
      }

      // required uint64 CurAbsoluteHp = 5;
      case 5: {
        if (tag == 40) {
         parse_CurAbsoluteHp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &curabsolutehp_)));
          set_has_curabsolutehp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDInheritInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDInheritInfo)
  return false;
#undef DO_
}

void TDInheritInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDInheritInfo)
  // required uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // required uint32 Pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pos(), output);
  }

  // required uint64 CurHp = 3;
  if (has_curhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->curhp(), output);
  }

  // required uint32 CurRage = 4;
  if (has_currage()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->currage(), output);
  }

  // required uint64 CurAbsoluteHp = 5;
  if (has_curabsolutehp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->curabsolutehp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDInheritInfo)
}

::google::protobuf::uint8* TDInheritInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDInheritInfo)
  // required uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // required uint32 Pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pos(), target);
  }

  // required uint64 CurHp = 3;
  if (has_curhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->curhp(), target);
  }

  // required uint32 CurRage = 4;
  if (has_currage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->currage(), target);
  }

  // required uint64 CurAbsoluteHp = 5;
  if (has_curabsolutehp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->curabsolutehp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDInheritInfo)
  return target;
}

int TDInheritInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // required uint32 Pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // required uint64 CurHp = 3;
    if (has_curhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->curhp());
    }

    // required uint32 CurRage = 4;
    if (has_currage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currage());
    }

    // required uint64 CurAbsoluteHp = 5;
    if (has_curabsolutehp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->curabsolutehp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDInheritInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDInheritInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDInheritInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDInheritInfo::MergeFrom(const TDInheritInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_curhp()) {
      set_curhp(from.curhp());
    }
    if (from.has_currage()) {
      set_currage(from.currage());
    }
    if (from.has_curabsolutehp()) {
      set_curabsolutehp(from.curabsolutehp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDInheritInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDInheritInfo::CopyFrom(const TDInheritInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDInheritInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void TDInheritInfo::Swap(TDInheritInfo* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(pos_, other->pos_);
    std::swap(curhp_, other->curhp_);
    std::swap(currage_, other->currage_);
    std::swap(curabsolutehp_, other->curabsolutehp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDInheritInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDInheritInfo_descriptor_;
  metadata.reflection = TDInheritInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TReqGetTDBattleArgs::kSquidInheritInfoFieldNumber;
const int TReqGetTDBattleArgs::kTDBattleInfoIdFieldNumber;
const int TReqGetTDBattleArgs::kFirstAttackFieldNumber;
const int TReqGetTDBattleArgs::kEnableInheritFieldNumber;
const int TReqGetTDBattleArgs::kSkillCounterFieldNumber;
const int TReqGetTDBattleArgs::kUnitInfoArrFieldNumber;
#endif  // !_MSC_VER

TReqGetTDBattleArgs::TReqGetTDBattleArgs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TReqGetTDBattleArgs)
}

void TReqGetTDBattleArgs::InitAsDefaultInstance() {
  skillcounter_ = const_cast< ::pb::TSkillCountInfo*>(&::pb::TSkillCountInfo::default_instance());
}

TReqGetTDBattleArgs::TReqGetTDBattleArgs(const TReqGetTDBattleArgs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TReqGetTDBattleArgs)
}

void TReqGetTDBattleArgs::SharedCtor() {
  _cached_size_ = 0;
  tdbattleinfoid_ = 0u;
  firstattack_ = false;
  enableinherit_ = false;
  skillcounter_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TReqGetTDBattleArgs::~TReqGetTDBattleArgs() {
  // @@protoc_insertion_point(destructor:pb.TReqGetTDBattleArgs)
  SharedDtor();
}

void TReqGetTDBattleArgs::SharedDtor() {
  if (this != default_instance_) {
    delete skillcounter_;
  }
}

void TReqGetTDBattleArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TReqGetTDBattleArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TReqGetTDBattleArgs_descriptor_;
}

const TReqGetTDBattleArgs& TReqGetTDBattleArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAttributerBattleDefine_2eproto();
  return *default_instance_;
}

TReqGetTDBattleArgs* TReqGetTDBattleArgs::default_instance_ = NULL;

TReqGetTDBattleArgs* TReqGetTDBattleArgs::New() const {
  return new TReqGetTDBattleArgs;
}

void TReqGetTDBattleArgs::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TReqGetTDBattleArgs*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 30) {
    ZR_(tdbattleinfoid_, enableinherit_);
    if (has_skillcounter()) {
      if (skillcounter_ != NULL) skillcounter_->::pb::TSkillCountInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  squidinheritinfo_.Clear();
  unitinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TReqGetTDBattleArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TReqGetTDBattleArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TDInheritInfo SquidInheritInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_SquidInheritInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_squidinheritinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_SquidInheritInfo;
        if (input->ExpectTag(16)) goto parse_TDBattleInfoId;
        break;
      }

      // optional uint32 TDBattleInfoId = 2;
      case 2: {
        if (tag == 16) {
         parse_TDBattleInfoId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tdbattleinfoid_)));
          set_has_tdbattleinfoid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_FirstAttack;
        break;
      }

      // optional bool FirstAttack = 3;
      case 3: {
        if (tag == 24) {
         parse_FirstAttack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &firstattack_)));
          set_has_firstattack();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_EnableInherit;
        break;
      }

      // optional bool EnableInherit = 4;
      case 4: {
        if (tag == 32) {
         parse_EnableInherit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enableinherit_)));
          set_has_enableinherit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_SkillCounter;
        break;
      }

      // optional .pb.TSkillCountInfo SkillCounter = 5;
      case 5: {
        if (tag == 42) {
         parse_SkillCounter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skillcounter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_UnitInfoArr;
        break;
      }

      // repeated .pb.TUnitInfo UnitInfoArr = 6;
      case 6: {
        if (tag == 50) {
         parse_UnitInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_unitinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_UnitInfoArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TReqGetTDBattleArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TReqGetTDBattleArgs)
  return false;
#undef DO_
}

void TReqGetTDBattleArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TReqGetTDBattleArgs)
  // repeated .pb.TDInheritInfo SquidInheritInfo = 1;
  for (int i = 0; i < this->squidinheritinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->squidinheritinfo(i), output);
  }

  // optional uint32 TDBattleInfoId = 2;
  if (has_tdbattleinfoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tdbattleinfoid(), output);
  }

  // optional bool FirstAttack = 3;
  if (has_firstattack()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->firstattack(), output);
  }

  // optional bool EnableInherit = 4;
  if (has_enableinherit()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enableinherit(), output);
  }

  // optional .pb.TSkillCountInfo SkillCounter = 5;
  if (has_skillcounter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->skillcounter(), output);
  }

  // repeated .pb.TUnitInfo UnitInfoArr = 6;
  for (int i = 0; i < this->unitinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->unitinfoarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TReqGetTDBattleArgs)
}

::google::protobuf::uint8* TReqGetTDBattleArgs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TReqGetTDBattleArgs)
  // repeated .pb.TDInheritInfo SquidInheritInfo = 1;
  for (int i = 0; i < this->squidinheritinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->squidinheritinfo(i), target);
  }

  // optional uint32 TDBattleInfoId = 2;
  if (has_tdbattleinfoid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tdbattleinfoid(), target);
  }

  // optional bool FirstAttack = 3;
  if (has_firstattack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->firstattack(), target);
  }

  // optional bool EnableInherit = 4;
  if (has_enableinherit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enableinherit(), target);
  }

  // optional .pb.TSkillCountInfo SkillCounter = 5;
  if (has_skillcounter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->skillcounter(), target);
  }

  // repeated .pb.TUnitInfo UnitInfoArr = 6;
  for (int i = 0; i < this->unitinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->unitinfoarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TReqGetTDBattleArgs)
  return target;
}

int TReqGetTDBattleArgs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 TDBattleInfoId = 2;
    if (has_tdbattleinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tdbattleinfoid());
    }

    // optional bool FirstAttack = 3;
    if (has_firstattack()) {
      total_size += 1 + 1;
    }

    // optional bool EnableInherit = 4;
    if (has_enableinherit()) {
      total_size += 1 + 1;
    }

    // optional .pb.TSkillCountInfo SkillCounter = 5;
    if (has_skillcounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skillcounter());
    }

  }
  // repeated .pb.TDInheritInfo SquidInheritInfo = 1;
  total_size += 1 * this->squidinheritinfo_size();
  for (int i = 0; i < this->squidinheritinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->squidinheritinfo(i));
  }

  // repeated .pb.TUnitInfo UnitInfoArr = 6;
  total_size += 1 * this->unitinfoarr_size();
  for (int i = 0; i < this->unitinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->unitinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TReqGetTDBattleArgs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TReqGetTDBattleArgs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TReqGetTDBattleArgs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TReqGetTDBattleArgs::MergeFrom(const TReqGetTDBattleArgs& from) {
  GOOGLE_CHECK_NE(&from, this);
  squidinheritinfo_.MergeFrom(from.squidinheritinfo_);
  unitinfoarr_.MergeFrom(from.unitinfoarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_tdbattleinfoid()) {
      set_tdbattleinfoid(from.tdbattleinfoid());
    }
    if (from.has_firstattack()) {
      set_firstattack(from.firstattack());
    }
    if (from.has_enableinherit()) {
      set_enableinherit(from.enableinherit());
    }
    if (from.has_skillcounter()) {
      mutable_skillcounter()->::pb::TSkillCountInfo::MergeFrom(from.skillcounter());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TReqGetTDBattleArgs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TReqGetTDBattleArgs::CopyFrom(const TReqGetTDBattleArgs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TReqGetTDBattleArgs::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->squidinheritinfo())) return false;
  if (has_skillcounter()) {
    if (!this->skillcounter().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->unitinfoarr())) return false;
  return true;
}

void TReqGetTDBattleArgs::Swap(TReqGetTDBattleArgs* other) {
  if (other != this) {
    squidinheritinfo_.Swap(&other->squidinheritinfo_);
    std::swap(tdbattleinfoid_, other->tdbattleinfoid_);
    std::swap(firstattack_, other->firstattack_);
    std::swap(enableinherit_, other->enableinherit_);
    std::swap(skillcounter_, other->skillcounter_);
    unitinfoarr_.Swap(&other->unitinfoarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TReqGetTDBattleArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TReqGetTDBattleArgs_descriptor_;
  metadata.reflection = TReqGetTDBattleArgs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TRspGetTDBattleArgs::kBattleArgsFieldNumber;
#endif  // !_MSC_VER

TRspGetTDBattleArgs::TRspGetTDBattleArgs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TRspGetTDBattleArgs)
}

void TRspGetTDBattleArgs::InitAsDefaultInstance() {
  battleargs_ = const_cast< ::pb::TBattleArgs*>(&::pb::TBattleArgs::default_instance());
}

TRspGetTDBattleArgs::TRspGetTDBattleArgs(const TRspGetTDBattleArgs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TRspGetTDBattleArgs)
}

void TRspGetTDBattleArgs::SharedCtor() {
  _cached_size_ = 0;
  battleargs_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TRspGetTDBattleArgs::~TRspGetTDBattleArgs() {
  // @@protoc_insertion_point(destructor:pb.TRspGetTDBattleArgs)
  SharedDtor();
}

void TRspGetTDBattleArgs::SharedDtor() {
  if (this != default_instance_) {
    delete battleargs_;
  }
}

void TRspGetTDBattleArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TRspGetTDBattleArgs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TRspGetTDBattleArgs_descriptor_;
}

const TRspGetTDBattleArgs& TRspGetTDBattleArgs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fAttributerBattleDefine_2eproto();
  return *default_instance_;
}

TRspGetTDBattleArgs* TRspGetTDBattleArgs::default_instance_ = NULL;

TRspGetTDBattleArgs* TRspGetTDBattleArgs::New() const {
  return new TRspGetTDBattleArgs;
}

void TRspGetTDBattleArgs::Clear() {
  if (has_battleargs()) {
    if (battleargs_ != NULL) battleargs_->::pb::TBattleArgs::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TRspGetTDBattleArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TRspGetTDBattleArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TBattleArgs BattleArgs = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleargs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TRspGetTDBattleArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TRspGetTDBattleArgs)
  return false;
#undef DO_
}

void TRspGetTDBattleArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TRspGetTDBattleArgs)
  // optional .pb.TBattleArgs BattleArgs = 1;
  if (has_battleargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->battleargs(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TRspGetTDBattleArgs)
}

::google::protobuf::uint8* TRspGetTDBattleArgs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TRspGetTDBattleArgs)
  // optional .pb.TBattleArgs BattleArgs = 1;
  if (has_battleargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->battleargs(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TRspGetTDBattleArgs)
  return target;
}

int TRspGetTDBattleArgs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TBattleArgs BattleArgs = 1;
    if (has_battleargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleargs());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TRspGetTDBattleArgs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TRspGetTDBattleArgs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TRspGetTDBattleArgs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TRspGetTDBattleArgs::MergeFrom(const TRspGetTDBattleArgs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_battleargs()) {
      mutable_battleargs()->::pb::TBattleArgs::MergeFrom(from.battleargs());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TRspGetTDBattleArgs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TRspGetTDBattleArgs::CopyFrom(const TRspGetTDBattleArgs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TRspGetTDBattleArgs::IsInitialized() const {

  if (has_battleargs()) {
    if (!this->battleargs().IsInitialized()) return false;
  }
  return true;
}

void TRspGetTDBattleArgs::Swap(TRspGetTDBattleArgs* other) {
  if (other != this) {
    std::swap(battleargs_, other->battleargs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TRspGetTDBattleArgs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TRspGetTDBattleArgs_descriptor_;
  metadata.reflection = TRspGetTDBattleArgs_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
