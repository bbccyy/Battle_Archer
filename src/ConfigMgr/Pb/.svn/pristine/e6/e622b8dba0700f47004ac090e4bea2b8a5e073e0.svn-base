// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/FameHall.proto

#ifndef PROTOBUF_net_2fFameHall_2eproto__INCLUDED
#define PROTOBUF_net_2fFameHall_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/User.pb.h"
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fFameHall_2eproto();
void protobuf_AssignDesc_net_2fFameHall_2eproto();
void protobuf_ShutdownFile_net_2fFameHall_2eproto();

class TPowerTopInfo;
class TLevelTopInfo;
class TFameHallGetPowerTopInfoRsp;
class TFameHallGetLevelTopInfoRsp;
class TFameHallLikeReq;
class TFameHallLikeRsp;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TPowerTopInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FameHall.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TPowerTopInfo : public ::google::protobuf::Message {
 public:
  TPowerTopInfo();
  virtual ~TPowerTopInfo();

  TPowerTopInfo(const TPowerTopInfo& from);

  inline TPowerTopInfo& operator=(const TPowerTopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TPowerTopInfo& default_instance();

  void Swap(TPowerTopInfo* other);

  // implements Message ----------------------------------------------

  TPowerTopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TPowerTopInfo& from);
  void MergeFrom(const TPowerTopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUserFightForceRankItem UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TPowerTopInfo</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserFightForceRankItem& userinfo() const;
  inline ::pb::TUserFightForceRankItem* mutable_userinfo();
  inline ::pb::TUserFightForceRankItem* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserFightForceRankItem* userinfo);

  // optional uint32 Rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TPowerTopInfo</name>
  	<Function>
  		<name>rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 LikeTotal = 3;
  inline bool has_liketotal() const;
  inline void clear_liketotal();
  static const int kLikeTotalFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TPowerTopInfo</name>
  	<Function>
  		<name>liketotal</name>
  		<replaceName>LikeTotal</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_liketotal</name>
  		<replaceName>LikeTotal</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_liketotal</name>
  		<replaceName>LikeTotal</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 liketotal() const;
  inline void set_liketotal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TPowerTopInfo)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_liketotal();
  inline void clear_has_liketotal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUserFightForceRankItem* userinfo_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 liketotal_;
  friend void  protobuf_AddDesc_net_2fFameHall_2eproto();
  friend void protobuf_AssignDesc_net_2fFameHall_2eproto();
  friend void protobuf_ShutdownFile_net_2fFameHall_2eproto();

  void InitAsDefaultInstance();
  static TPowerTopInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevelTopInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FameHall.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevelTopInfo : public ::google::protobuf::Message {
 public:
  TLevelTopInfo();
  virtual ~TLevelTopInfo();

  TLevelTopInfo(const TLevelTopInfo& from);

  inline TLevelTopInfo& operator=(const TLevelTopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevelTopInfo& default_instance();

  void Swap(TLevelTopInfo* other);

  // implements Message ----------------------------------------------

  TLevelTopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevelTopInfo& from);
  void MergeFrom(const TLevelTopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUserLevelRankItem UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevelTopInfo</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserLevelRankItem& userinfo() const;
  inline ::pb::TUserLevelRankItem* mutable_userinfo();
  inline ::pb::TUserLevelRankItem* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserLevelRankItem* userinfo);

  // optional uint32 Rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevelTopInfo</name>
  	<Function>
  		<name>rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 LikeTotal = 3;
  inline bool has_liketotal() const;
  inline void clear_liketotal();
  static const int kLikeTotalFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevelTopInfo</name>
  	<Function>
  		<name>liketotal</name>
  		<replaceName>LikeTotal</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_liketotal</name>
  		<replaceName>LikeTotal</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_liketotal</name>
  		<replaceName>LikeTotal</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 liketotal() const;
  inline void set_liketotal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TLevelTopInfo)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_liketotal();
  inline void clear_has_liketotal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUserLevelRankItem* userinfo_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 liketotal_;
  friend void  protobuf_AddDesc_net_2fFameHall_2eproto();
  friend void protobuf_AssignDesc_net_2fFameHall_2eproto();
  friend void protobuf_ShutdownFile_net_2fFameHall_2eproto();

  void InitAsDefaultInstance();
  static TLevelTopInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFameHallGetPowerTopInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FameHall.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFameHallGetPowerTopInfoRsp : public ::google::protobuf::Message {
 public:
  TFameHallGetPowerTopInfoRsp();
  virtual ~TFameHallGetPowerTopInfoRsp();

  TFameHallGetPowerTopInfoRsp(const TFameHallGetPowerTopInfoRsp& from);

  inline TFameHallGetPowerTopInfoRsp& operator=(const TFameHallGetPowerTopInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFameHallGetPowerTopInfoRsp& default_instance();

  void Swap(TFameHallGetPowerTopInfoRsp* other);

  // implements Message ----------------------------------------------

  TFameHallGetPowerTopInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFameHallGetPowerTopInfoRsp& from);
  void MergeFrom(const TFameHallGetPowerTopInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TPowerTopInfo ArrPowerTopInfo = 1;
  inline int arrpowertopinfo_size() const;
  inline void clear_arrpowertopinfo();
  static const int kArrPowerTopInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFameHallGetPowerTopInfoRsp</name>
  	<Function>
  		<name>arrpowertopinfo</name>
  		<replaceName>ArrPowerTopInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrpowertopinfo</name>
  		<replaceName>ArrPowerTopInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrpowertopinfo</name>
  		<replaceName>ArrPowerTopInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrpowertopinfo</name>
  		<replaceName>ArrPowerTopInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrpowertopinfo_size</name>
  		<replaceName>ArrPowerTopInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TPowerTopInfo& arrpowertopinfo(int index) const;
  inline ::pb::TPowerTopInfo* mutable_arrpowertopinfo(int index);
  inline ::pb::TPowerTopInfo* add_arrpowertopinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TPowerTopInfo >&
      arrpowertopinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TPowerTopInfo >*
      mutable_arrpowertopinfo();

  // optional uint32 LikeNum = 2;
  inline bool has_likenum() const;
  inline void clear_likenum();
  static const int kLikeNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFameHallGetPowerTopInfoRsp</name>
  	<Function>
  		<name>likenum</name>
  		<replaceName>LikeNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_likenum</name>
  		<replaceName>LikeNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_likenum</name>
  		<replaceName>LikeNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 likenum() const;
  inline void set_likenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TFameHallGetPowerTopInfoRsp)
 private:
  inline void set_has_likenum();
  inline void clear_has_likenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TPowerTopInfo > arrpowertopinfo_;
  ::google::protobuf::uint32 likenum_;
  friend void  protobuf_AddDesc_net_2fFameHall_2eproto();
  friend void protobuf_AssignDesc_net_2fFameHall_2eproto();
  friend void protobuf_ShutdownFile_net_2fFameHall_2eproto();

  void InitAsDefaultInstance();
  static TFameHallGetPowerTopInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFameHallGetLevelTopInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FameHall.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFameHallGetLevelTopInfoRsp : public ::google::protobuf::Message {
 public:
  TFameHallGetLevelTopInfoRsp();
  virtual ~TFameHallGetLevelTopInfoRsp();

  TFameHallGetLevelTopInfoRsp(const TFameHallGetLevelTopInfoRsp& from);

  inline TFameHallGetLevelTopInfoRsp& operator=(const TFameHallGetLevelTopInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFameHallGetLevelTopInfoRsp& default_instance();

  void Swap(TFameHallGetLevelTopInfoRsp* other);

  // implements Message ----------------------------------------------

  TFameHallGetLevelTopInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFameHallGetLevelTopInfoRsp& from);
  void MergeFrom(const TFameHallGetLevelTopInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TLevelTopInfo ArrLevelTopInfo = 1;
  inline int arrleveltopinfo_size() const;
  inline void clear_arrleveltopinfo();
  static const int kArrLevelTopInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFameHallGetLevelTopInfoRsp</name>
  	<Function>
  		<name>arrleveltopinfo</name>
  		<replaceName>ArrLevelTopInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrleveltopinfo</name>
  		<replaceName>ArrLevelTopInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrleveltopinfo</name>
  		<replaceName>ArrLevelTopInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrleveltopinfo</name>
  		<replaceName>ArrLevelTopInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrleveltopinfo_size</name>
  		<replaceName>ArrLevelTopInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TLevelTopInfo& arrleveltopinfo(int index) const;
  inline ::pb::TLevelTopInfo* mutable_arrleveltopinfo(int index);
  inline ::pb::TLevelTopInfo* add_arrleveltopinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TLevelTopInfo >&
      arrleveltopinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TLevelTopInfo >*
      mutable_arrleveltopinfo();

  // optional uint32 LikeNum = 2;
  inline bool has_likenum() const;
  inline void clear_likenum();
  static const int kLikeNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFameHallGetLevelTopInfoRsp</name>
  	<Function>
  		<name>likenum</name>
  		<replaceName>LikeNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_likenum</name>
  		<replaceName>LikeNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_likenum</name>
  		<replaceName>LikeNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 likenum() const;
  inline void set_likenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TFameHallGetLevelTopInfoRsp)
 private:
  inline void set_has_likenum();
  inline void clear_has_likenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TLevelTopInfo > arrleveltopinfo_;
  ::google::protobuf::uint32 likenum_;
  friend void  protobuf_AddDesc_net_2fFameHall_2eproto();
  friend void protobuf_AssignDesc_net_2fFameHall_2eproto();
  friend void protobuf_ShutdownFile_net_2fFameHall_2eproto();

  void InitAsDefaultInstance();
  static TFameHallGetLevelTopInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFameHallLikeReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FameHall.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFameHallLikeReq : public ::google::protobuf::Message {
 public:
  TFameHallLikeReq();
  virtual ~TFameHallLikeReq();

  TFameHallLikeReq(const TFameHallLikeReq& from);

  inline TFameHallLikeReq& operator=(const TFameHallLikeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFameHallLikeReq& default_instance();

  void Swap(TFameHallLikeReq* other);

  // implements Message ----------------------------------------------

  TFameHallLikeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFameHallLikeReq& from);
  void MergeFrom(const TFameHallLikeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFameHallLikeReq</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint32 Rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFameHallLikeReq</name>
  	<Function>
  		<name>rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 Type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFameHallLikeReq</name>
  	<Function>
  		<name>type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TFameHallLikeReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_net_2fFameHall_2eproto();
  friend void protobuf_AssignDesc_net_2fFameHall_2eproto();
  friend void protobuf_ShutdownFile_net_2fFameHall_2eproto();

  void InitAsDefaultInstance();
  static TFameHallLikeReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFameHallLikeRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FameHall.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFameHallLikeRsp : public ::google::protobuf::Message {
 public:
  TFameHallLikeRsp();
  virtual ~TFameHallLikeRsp();

  TFameHallLikeRsp(const TFameHallLikeRsp& from);

  inline TFameHallLikeRsp& operator=(const TFameHallLikeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFameHallLikeRsp& default_instance();

  void Swap(TFameHallLikeRsp* other);

  // implements Message ----------------------------------------------

  TFameHallLikeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFameHallLikeRsp& from);
  void MergeFrom(const TFameHallLikeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrRewardInfo = 1;
  inline int arrrewardinfo_size() const;
  inline void clear_arrrewardinfo();
  static const int kArrRewardInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFameHallLikeRsp</name>
  	<Function>
  		<name>arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrewardinfo_size</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrrewardinfo(int index) const;
  inline ::pb::TCommonReward* mutable_arrrewardinfo(int index);
  inline ::pb::TCommonReward* add_arrrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrrewardinfo();

  // @@protoc_insertion_point(class_scope:pb.TFameHallLikeRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrrewardinfo_;
  friend void  protobuf_AddDesc_net_2fFameHall_2eproto();
  friend void protobuf_AssignDesc_net_2fFameHall_2eproto();
  friend void protobuf_ShutdownFile_net_2fFameHall_2eproto();

  void InitAsDefaultInstance();
  static TFameHallLikeRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TPowerTopInfo

// optional .pb.TUserFightForceRankItem UserInfo = 1;
inline bool TPowerTopInfo::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TPowerTopInfo::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TPowerTopInfo::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TPowerTopInfo::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserFightForceRankItem::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserFightForceRankItem& TPowerTopInfo::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TPowerTopInfo.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserFightForceRankItem* TPowerTopInfo::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserFightForceRankItem;
  // @@protoc_insertion_point(field_mutable:pb.TPowerTopInfo.UserInfo)
  return userinfo_;
}
inline ::pb::TUserFightForceRankItem* TPowerTopInfo::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserFightForceRankItem* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TPowerTopInfo::set_allocated_userinfo(::pb::TUserFightForceRankItem* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TPowerTopInfo.UserInfo)
}

// optional uint32 Rank = 2;
inline bool TPowerTopInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TPowerTopInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TPowerTopInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TPowerTopInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 TPowerTopInfo::rank() const {
  // @@protoc_insertion_point(field_get:pb.TPowerTopInfo.Rank)
  return rank_;
}
inline void TPowerTopInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:pb.TPowerTopInfo.Rank)
}

// optional uint32 LikeTotal = 3;
inline bool TPowerTopInfo::has_liketotal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TPowerTopInfo::set_has_liketotal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TPowerTopInfo::clear_has_liketotal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TPowerTopInfo::clear_liketotal() {
  liketotal_ = 0u;
  clear_has_liketotal();
}
inline ::google::protobuf::uint32 TPowerTopInfo::liketotal() const {
  // @@protoc_insertion_point(field_get:pb.TPowerTopInfo.LikeTotal)
  return liketotal_;
}
inline void TPowerTopInfo::set_liketotal(::google::protobuf::uint32 value) {
  set_has_liketotal();
  liketotal_ = value;
  // @@protoc_insertion_point(field_set:pb.TPowerTopInfo.LikeTotal)
}

// -------------------------------------------------------------------

// TLevelTopInfo

// optional .pb.TUserLevelRankItem UserInfo = 1;
inline bool TLevelTopInfo::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevelTopInfo::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevelTopInfo::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevelTopInfo::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserLevelRankItem::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserLevelRankItem& TLevelTopInfo::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TLevelTopInfo.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserLevelRankItem* TLevelTopInfo::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserLevelRankItem;
  // @@protoc_insertion_point(field_mutable:pb.TLevelTopInfo.UserInfo)
  return userinfo_;
}
inline ::pb::TUserLevelRankItem* TLevelTopInfo::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserLevelRankItem* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TLevelTopInfo::set_allocated_userinfo(::pb::TUserLevelRankItem* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TLevelTopInfo.UserInfo)
}

// optional uint32 Rank = 2;
inline bool TLevelTopInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevelTopInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevelTopInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevelTopInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 TLevelTopInfo::rank() const {
  // @@protoc_insertion_point(field_get:pb.TLevelTopInfo.Rank)
  return rank_;
}
inline void TLevelTopInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevelTopInfo.Rank)
}

// optional uint32 LikeTotal = 3;
inline bool TLevelTopInfo::has_liketotal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevelTopInfo::set_has_liketotal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevelTopInfo::clear_has_liketotal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevelTopInfo::clear_liketotal() {
  liketotal_ = 0u;
  clear_has_liketotal();
}
inline ::google::protobuf::uint32 TLevelTopInfo::liketotal() const {
  // @@protoc_insertion_point(field_get:pb.TLevelTopInfo.LikeTotal)
  return liketotal_;
}
inline void TLevelTopInfo::set_liketotal(::google::protobuf::uint32 value) {
  set_has_liketotal();
  liketotal_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevelTopInfo.LikeTotal)
}

// -------------------------------------------------------------------

// TFameHallGetPowerTopInfoRsp

// repeated .pb.TPowerTopInfo ArrPowerTopInfo = 1;
inline int TFameHallGetPowerTopInfoRsp::arrpowertopinfo_size() const {
  return arrpowertopinfo_.size();
}
inline void TFameHallGetPowerTopInfoRsp::clear_arrpowertopinfo() {
  arrpowertopinfo_.Clear();
}
inline const ::pb::TPowerTopInfo& TFameHallGetPowerTopInfoRsp::arrpowertopinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFameHallGetPowerTopInfoRsp.ArrPowerTopInfo)
  return arrpowertopinfo_.Get(index);
}
inline ::pb::TPowerTopInfo* TFameHallGetPowerTopInfoRsp::mutable_arrpowertopinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFameHallGetPowerTopInfoRsp.ArrPowerTopInfo)
  return arrpowertopinfo_.Mutable(index);
}
inline ::pb::TPowerTopInfo* TFameHallGetPowerTopInfoRsp::add_arrpowertopinfo() {
  // @@protoc_insertion_point(field_add:pb.TFameHallGetPowerTopInfoRsp.ArrPowerTopInfo)
  return arrpowertopinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TPowerTopInfo >&
TFameHallGetPowerTopInfoRsp::arrpowertopinfo() const {
  // @@protoc_insertion_point(field_list:pb.TFameHallGetPowerTopInfoRsp.ArrPowerTopInfo)
  return arrpowertopinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TPowerTopInfo >*
TFameHallGetPowerTopInfoRsp::mutable_arrpowertopinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFameHallGetPowerTopInfoRsp.ArrPowerTopInfo)
  return &arrpowertopinfo_;
}

// optional uint32 LikeNum = 2;
inline bool TFameHallGetPowerTopInfoRsp::has_likenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFameHallGetPowerTopInfoRsp::set_has_likenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFameHallGetPowerTopInfoRsp::clear_has_likenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFameHallGetPowerTopInfoRsp::clear_likenum() {
  likenum_ = 0u;
  clear_has_likenum();
}
inline ::google::protobuf::uint32 TFameHallGetPowerTopInfoRsp::likenum() const {
  // @@protoc_insertion_point(field_get:pb.TFameHallGetPowerTopInfoRsp.LikeNum)
  return likenum_;
}
inline void TFameHallGetPowerTopInfoRsp::set_likenum(::google::protobuf::uint32 value) {
  set_has_likenum();
  likenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TFameHallGetPowerTopInfoRsp.LikeNum)
}

// -------------------------------------------------------------------

// TFameHallGetLevelTopInfoRsp

// repeated .pb.TLevelTopInfo ArrLevelTopInfo = 1;
inline int TFameHallGetLevelTopInfoRsp::arrleveltopinfo_size() const {
  return arrleveltopinfo_.size();
}
inline void TFameHallGetLevelTopInfoRsp::clear_arrleveltopinfo() {
  arrleveltopinfo_.Clear();
}
inline const ::pb::TLevelTopInfo& TFameHallGetLevelTopInfoRsp::arrleveltopinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFameHallGetLevelTopInfoRsp.ArrLevelTopInfo)
  return arrleveltopinfo_.Get(index);
}
inline ::pb::TLevelTopInfo* TFameHallGetLevelTopInfoRsp::mutable_arrleveltopinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFameHallGetLevelTopInfoRsp.ArrLevelTopInfo)
  return arrleveltopinfo_.Mutable(index);
}
inline ::pb::TLevelTopInfo* TFameHallGetLevelTopInfoRsp::add_arrleveltopinfo() {
  // @@protoc_insertion_point(field_add:pb.TFameHallGetLevelTopInfoRsp.ArrLevelTopInfo)
  return arrleveltopinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TLevelTopInfo >&
TFameHallGetLevelTopInfoRsp::arrleveltopinfo() const {
  // @@protoc_insertion_point(field_list:pb.TFameHallGetLevelTopInfoRsp.ArrLevelTopInfo)
  return arrleveltopinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TLevelTopInfo >*
TFameHallGetLevelTopInfoRsp::mutable_arrleveltopinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFameHallGetLevelTopInfoRsp.ArrLevelTopInfo)
  return &arrleveltopinfo_;
}

// optional uint32 LikeNum = 2;
inline bool TFameHallGetLevelTopInfoRsp::has_likenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFameHallGetLevelTopInfoRsp::set_has_likenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFameHallGetLevelTopInfoRsp::clear_has_likenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFameHallGetLevelTopInfoRsp::clear_likenum() {
  likenum_ = 0u;
  clear_has_likenum();
}
inline ::google::protobuf::uint32 TFameHallGetLevelTopInfoRsp::likenum() const {
  // @@protoc_insertion_point(field_get:pb.TFameHallGetLevelTopInfoRsp.LikeNum)
  return likenum_;
}
inline void TFameHallGetLevelTopInfoRsp::set_likenum(::google::protobuf::uint32 value) {
  set_has_likenum();
  likenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TFameHallGetLevelTopInfoRsp.LikeNum)
}

// -------------------------------------------------------------------

// TFameHallLikeReq

// optional uint64 Uid = 1;
inline bool TFameHallLikeReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFameHallLikeReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFameHallLikeReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFameHallLikeReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TFameHallLikeReq::uid() const {
  // @@protoc_insertion_point(field_get:pb.TFameHallLikeReq.Uid)
  return uid_;
}
inline void TFameHallLikeReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFameHallLikeReq.Uid)
}

// optional uint32 Rank = 2;
inline bool TFameHallLikeReq::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFameHallLikeReq::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFameHallLikeReq::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFameHallLikeReq::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 TFameHallLikeReq::rank() const {
  // @@protoc_insertion_point(field_get:pb.TFameHallLikeReq.Rank)
  return rank_;
}
inline void TFameHallLikeReq::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:pb.TFameHallLikeReq.Rank)
}

// optional uint32 Type = 3;
inline bool TFameHallLikeReq::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFameHallLikeReq::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFameHallLikeReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFameHallLikeReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 TFameHallLikeReq::type() const {
  // @@protoc_insertion_point(field_get:pb.TFameHallLikeReq.Type)
  return type_;
}
inline void TFameHallLikeReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:pb.TFameHallLikeReq.Type)
}

// -------------------------------------------------------------------

// TFameHallLikeRsp

// repeated .pb.TCommonReward ArrRewardInfo = 1;
inline int TFameHallLikeRsp::arrrewardinfo_size() const {
  return arrrewardinfo_.size();
}
inline void TFameHallLikeRsp::clear_arrrewardinfo() {
  arrrewardinfo_.Clear();
}
inline const ::pb::TCommonReward& TFameHallLikeRsp::arrrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFameHallLikeRsp.ArrRewardInfo)
  return arrrewardinfo_.Get(index);
}
inline ::pb::TCommonReward* TFameHallLikeRsp::mutable_arrrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFameHallLikeRsp.ArrRewardInfo)
  return arrrewardinfo_.Mutable(index);
}
inline ::pb::TCommonReward* TFameHallLikeRsp::add_arrrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TFameHallLikeRsp.ArrRewardInfo)
  return arrrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TFameHallLikeRsp::arrrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TFameHallLikeRsp.ArrRewardInfo)
  return arrrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TFameHallLikeRsp::mutable_arrrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFameHallLikeRsp.ArrRewardInfo)
  return &arrrewardinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fFameHall_2eproto__INCLUDED
