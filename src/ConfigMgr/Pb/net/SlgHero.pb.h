// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/SlgHero.proto

#ifndef PROTOBUF_net_2fSlgHero_2eproto__INCLUDED
#define PROTOBUF_net_2fSlgHero_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/Battle.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fSlgHero_2eproto();
void protobuf_AssignDesc_net_2fSlgHero_2eproto();
void protobuf_ShutdownFile_net_2fSlgHero_2eproto();

class TSlgHeroInfo;
class TSlgHeroSyncReq;
class TSlgHeroDelReq;
class TSlgHeroGetAllHeroResp;
class TSlgHeroUpdateDataNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TSlgHeroInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgHeroInfo : public ::google::protobuf::Message {
 public:
  TSlgHeroInfo();
  virtual ~TSlgHeroInfo();

  TSlgHeroInfo(const TSlgHeroInfo& from);

  inline TSlgHeroInfo& operator=(const TSlgHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgHeroInfo& default_instance();

  void Swap(TSlgHeroInfo* other);

  // implements Message ----------------------------------------------

  TSlgHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgHeroInfo& from);
  void MergeFrom(const TSlgHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgHeroInfo</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint64 HurtEndTime = 2;
  inline bool has_hurtendtime() const;
  inline void clear_hurtendtime();
  static const int kHurtEndTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSlgHeroInfo</name>
  	<Function>
  		<name>hurtendtime</name>
  		<replaceName>HurtEndTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hurtendtime</name>
  		<replaceName>HurtEndTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hurtendtime</name>
  		<replaceName>HurtEndTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 hurtendtime() const;
  inline void set_hurtendtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TSlgHeroInfo)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_hurtendtime();
  inline void clear_has_hurtendtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 hurtendtime_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fSlgHero_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgHero_2eproto();

  void InitAsDefaultInstance();
  static TSlgHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgHeroSyncReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgHeroSyncReq : public ::google::protobuf::Message {
 public:
  TSlgHeroSyncReq();
  virtual ~TSlgHeroSyncReq();

  TSlgHeroSyncReq(const TSlgHeroSyncReq& from);

  inline TSlgHeroSyncReq& operator=(const TSlgHeroSyncReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgHeroSyncReq& default_instance();

  void Swap(TSlgHeroSyncReq* other);

  // implements Message ----------------------------------------------

  TSlgHeroSyncReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgHeroSyncReq& from);
  void MergeFrom(const TSlgHeroSyncReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUnitInfo propInfo = 1;
  inline bool has_propinfo() const;
  inline void clear_propinfo();
  static const int kPropInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgHeroSyncReq</name>
  	<Function>
  		<name>propinfo</name>
  		<replaceName>propInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_propinfo</name>
  		<replaceName>propInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_propinfo</name>
  		<replaceName>propInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_propinfo</name>
  		<replaceName>propInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUnitInfo& propinfo() const;
  inline ::pb::TUnitInfo* mutable_propinfo();
  inline ::pb::TUnitInfo* release_propinfo();
  inline void set_allocated_propinfo(::pb::TUnitInfo* propinfo);

  // @@protoc_insertion_point(class_scope:pb.TSlgHeroSyncReq)
 private:
  inline void set_has_propinfo();
  inline void clear_has_propinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUnitInfo* propinfo_;
  friend void  protobuf_AddDesc_net_2fSlgHero_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgHero_2eproto();

  void InitAsDefaultInstance();
  static TSlgHeroSyncReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgHeroDelReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgHeroDelReq : public ::google::protobuf::Message {
 public:
  TSlgHeroDelReq();
  virtual ~TSlgHeroDelReq();

  TSlgHeroDelReq(const TSlgHeroDelReq& from);

  inline TSlgHeroDelReq& operator=(const TSlgHeroDelReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgHeroDelReq& default_instance();

  void Swap(TSlgHeroDelReq* other);

  // implements Message ----------------------------------------------

  TSlgHeroDelReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgHeroDelReq& from);
  void MergeFrom(const TSlgHeroDelReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgHeroDelReq</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TSlgHeroDelReq)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  friend void  protobuf_AddDesc_net_2fSlgHero_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgHero_2eproto();

  void InitAsDefaultInstance();
  static TSlgHeroDelReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgHeroGetAllHeroResp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgHeroGetAllHeroResp : public ::google::protobuf::Message {
 public:
  TSlgHeroGetAllHeroResp();
  virtual ~TSlgHeroGetAllHeroResp();

  TSlgHeroGetAllHeroResp(const TSlgHeroGetAllHeroResp& from);

  inline TSlgHeroGetAllHeroResp& operator=(const TSlgHeroGetAllHeroResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgHeroGetAllHeroResp& default_instance();

  void Swap(TSlgHeroGetAllHeroResp* other);

  // implements Message ----------------------------------------------

  TSlgHeroGetAllHeroResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgHeroGetAllHeroResp& from);
  void MergeFrom(const TSlgHeroGetAllHeroResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSlgHeroInfo HeroArr = 1;
  inline int heroarr_size() const;
  inline void clear_heroarr();
  static const int kHeroArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgHeroGetAllHeroResp</name>
  	<Function>
  		<name>heroarr</name>
  		<replaceName>HeroArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_heroarr</name>
  		<replaceName>HeroArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_heroarr</name>
  		<replaceName>HeroArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroarr</name>
  		<replaceName>HeroArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>heroarr_size</name>
  		<replaceName>HeroArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgHeroInfo& heroarr(int index) const;
  inline ::pb::TSlgHeroInfo* mutable_heroarr(int index);
  inline ::pb::TSlgHeroInfo* add_heroarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgHeroInfo >&
      heroarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgHeroInfo >*
      mutable_heroarr();

  // @@protoc_insertion_point(class_scope:pb.TSlgHeroGetAllHeroResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgHeroInfo > heroarr_;
  friend void  protobuf_AddDesc_net_2fSlgHero_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgHero_2eproto();

  void InitAsDefaultInstance();
  static TSlgHeroGetAllHeroResp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgHeroUpdateDataNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgHero.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgHeroUpdateDataNotify : public ::google::protobuf::Message {
 public:
  TSlgHeroUpdateDataNotify();
  virtual ~TSlgHeroUpdateDataNotify();

  TSlgHeroUpdateDataNotify(const TSlgHeroUpdateDataNotify& from);

  inline TSlgHeroUpdateDataNotify& operator=(const TSlgHeroUpdateDataNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgHeroUpdateDataNotify& default_instance();

  void Swap(TSlgHeroUpdateDataNotify* other);

  // implements Message ----------------------------------------------

  TSlgHeroUpdateDataNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgHeroUpdateDataNotify& from);
  void MergeFrom(const TSlgHeroUpdateDataNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSlgHeroInfo HeroArr = 1;
  inline int heroarr_size() const;
  inline void clear_heroarr();
  static const int kHeroArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgHeroUpdateDataNotify</name>
  	<Function>
  		<name>heroarr</name>
  		<replaceName>HeroArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_heroarr</name>
  		<replaceName>HeroArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_heroarr</name>
  		<replaceName>HeroArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroarr</name>
  		<replaceName>HeroArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>heroarr_size</name>
  		<replaceName>HeroArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgHeroInfo& heroarr(int index) const;
  inline ::pb::TSlgHeroInfo* mutable_heroarr(int index);
  inline ::pb::TSlgHeroInfo* add_heroarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgHeroInfo >&
      heroarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgHeroInfo >*
      mutable_heroarr();

  // @@protoc_insertion_point(class_scope:pb.TSlgHeroUpdateDataNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgHeroInfo > heroarr_;
  friend void  protobuf_AddDesc_net_2fSlgHero_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgHero_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgHero_2eproto();

  void InitAsDefaultInstance();
  static TSlgHeroUpdateDataNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TSlgHeroInfo

// optional uint32 Hid = 1;
inline bool TSlgHeroInfo::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgHeroInfo::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgHeroInfo::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgHeroInfo::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TSlgHeroInfo::hid() const {
  // @@protoc_insertion_point(field_get:pb.TSlgHeroInfo.Hid)
  return hid_;
}
inline void TSlgHeroInfo::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgHeroInfo.Hid)
}

// optional uint64 HurtEndTime = 2;
inline bool TSlgHeroInfo::has_hurtendtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSlgHeroInfo::set_has_hurtendtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSlgHeroInfo::clear_has_hurtendtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSlgHeroInfo::clear_hurtendtime() {
  hurtendtime_ = GOOGLE_ULONGLONG(0);
  clear_has_hurtendtime();
}
inline ::google::protobuf::uint64 TSlgHeroInfo::hurtendtime() const {
  // @@protoc_insertion_point(field_get:pb.TSlgHeroInfo.HurtEndTime)
  return hurtendtime_;
}
inline void TSlgHeroInfo::set_hurtendtime(::google::protobuf::uint64 value) {
  set_has_hurtendtime();
  hurtendtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgHeroInfo.HurtEndTime)
}

// -------------------------------------------------------------------

// TSlgHeroSyncReq

// optional .pb.TUnitInfo propInfo = 1;
inline bool TSlgHeroSyncReq::has_propinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgHeroSyncReq::set_has_propinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgHeroSyncReq::clear_has_propinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgHeroSyncReq::clear_propinfo() {
  if (propinfo_ != NULL) propinfo_->::pb::TUnitInfo::Clear();
  clear_has_propinfo();
}
inline const ::pb::TUnitInfo& TSlgHeroSyncReq::propinfo() const {
  // @@protoc_insertion_point(field_get:pb.TSlgHeroSyncReq.propInfo)
  return propinfo_ != NULL ? *propinfo_ : *default_instance_->propinfo_;
}
inline ::pb::TUnitInfo* TSlgHeroSyncReq::mutable_propinfo() {
  set_has_propinfo();
  if (propinfo_ == NULL) propinfo_ = new ::pb::TUnitInfo;
  // @@protoc_insertion_point(field_mutable:pb.TSlgHeroSyncReq.propInfo)
  return propinfo_;
}
inline ::pb::TUnitInfo* TSlgHeroSyncReq::release_propinfo() {
  clear_has_propinfo();
  ::pb::TUnitInfo* temp = propinfo_;
  propinfo_ = NULL;
  return temp;
}
inline void TSlgHeroSyncReq::set_allocated_propinfo(::pb::TUnitInfo* propinfo) {
  delete propinfo_;
  propinfo_ = propinfo;
  if (propinfo) {
    set_has_propinfo();
  } else {
    clear_has_propinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TSlgHeroSyncReq.propInfo)
}

// -------------------------------------------------------------------

// TSlgHeroDelReq

// optional uint32 hid = 1;
inline bool TSlgHeroDelReq::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgHeroDelReq::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgHeroDelReq::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgHeroDelReq::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TSlgHeroDelReq::hid() const {
  // @@protoc_insertion_point(field_get:pb.TSlgHeroDelReq.hid)
  return hid_;
}
inline void TSlgHeroDelReq::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgHeroDelReq.hid)
}

// -------------------------------------------------------------------

// TSlgHeroGetAllHeroResp

// repeated .pb.TSlgHeroInfo HeroArr = 1;
inline int TSlgHeroGetAllHeroResp::heroarr_size() const {
  return heroarr_.size();
}
inline void TSlgHeroGetAllHeroResp::clear_heroarr() {
  heroarr_.Clear();
}
inline const ::pb::TSlgHeroInfo& TSlgHeroGetAllHeroResp::heroarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgHeroGetAllHeroResp.HeroArr)
  return heroarr_.Get(index);
}
inline ::pb::TSlgHeroInfo* TSlgHeroGetAllHeroResp::mutable_heroarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgHeroGetAllHeroResp.HeroArr)
  return heroarr_.Mutable(index);
}
inline ::pb::TSlgHeroInfo* TSlgHeroGetAllHeroResp::add_heroarr() {
  // @@protoc_insertion_point(field_add:pb.TSlgHeroGetAllHeroResp.HeroArr)
  return heroarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgHeroInfo >&
TSlgHeroGetAllHeroResp::heroarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgHeroGetAllHeroResp.HeroArr)
  return heroarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgHeroInfo >*
TSlgHeroGetAllHeroResp::mutable_heroarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgHeroGetAllHeroResp.HeroArr)
  return &heroarr_;
}

// -------------------------------------------------------------------

// TSlgHeroUpdateDataNotify

// repeated .pb.TSlgHeroInfo HeroArr = 1;
inline int TSlgHeroUpdateDataNotify::heroarr_size() const {
  return heroarr_.size();
}
inline void TSlgHeroUpdateDataNotify::clear_heroarr() {
  heroarr_.Clear();
}
inline const ::pb::TSlgHeroInfo& TSlgHeroUpdateDataNotify::heroarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgHeroUpdateDataNotify.HeroArr)
  return heroarr_.Get(index);
}
inline ::pb::TSlgHeroInfo* TSlgHeroUpdateDataNotify::mutable_heroarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgHeroUpdateDataNotify.HeroArr)
  return heroarr_.Mutable(index);
}
inline ::pb::TSlgHeroInfo* TSlgHeroUpdateDataNotify::add_heroarr() {
  // @@protoc_insertion_point(field_add:pb.TSlgHeroUpdateDataNotify.HeroArr)
  return heroarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgHeroInfo >&
TSlgHeroUpdateDataNotify::heroarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgHeroUpdateDataNotify.HeroArr)
  return heroarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgHeroInfo >*
TSlgHeroUpdateDataNotify::mutable_heroarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgHeroUpdateDataNotify.HeroArr)
  return &heroarr_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fSlgHero_2eproto__INCLUDED
