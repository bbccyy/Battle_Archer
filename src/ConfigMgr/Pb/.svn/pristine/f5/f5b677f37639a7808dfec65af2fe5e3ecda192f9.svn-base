// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ExclusiveEquipmentRecruit.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ExclusiveEquipmentRecruit.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitCastCampInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TExclusiveEquipmentRecruitCastCampInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitCastInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TExclusiveEquipmentRecruitCastInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitCastReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TExclusiveEquipmentRecruitCastReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitCastRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TExclusiveEquipmentRecruitCastRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitBuyGoldGoodsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TExclusiveEquipmentRecruitBuyGoldGoodsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitBuyGoldGoodsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TExclusiveEquipmentRecruitBuyGoldGoodsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitGoodsInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TExclusiveEquipmentRecruitGoodsInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitRmbGoodsChangeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TExclusiveEquipmentRecruitRmbGoodsChangeNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fExclusiveEquipmentRecruit_2eproto() {
  protobuf_AddDesc_net_2fExclusiveEquipmentRecruit_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ExclusiveEquipmentRecruit.proto");
  GOOGLE_CHECK(file != NULL);
  TExclusiveEquipmentRecruitCastCampInfo_descriptor_ = file->message_type(0);
  static const int TExclusiveEquipmentRecruitCastCampInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastCampInfo, campid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastCampInfo, castnum_),
  };
  TExclusiveEquipmentRecruitCastCampInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TExclusiveEquipmentRecruitCastCampInfo_descriptor_,
      TExclusiveEquipmentRecruitCastCampInfo::default_instance_,
      TExclusiveEquipmentRecruitCastCampInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastCampInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastCampInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TExclusiveEquipmentRecruitCastCampInfo));
  TExclusiveEquipmentRecruitCastInfoRsp_descriptor_ = file->message_type(1);
  static const int TExclusiveEquipmentRecruitCastInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastInfoRsp, castinfoarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastInfoRsp, goldgoodsinfoarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastInfoRsp, rmbgoodsinfoarray_),
  };
  TExclusiveEquipmentRecruitCastInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TExclusiveEquipmentRecruitCastInfoRsp_descriptor_,
      TExclusiveEquipmentRecruitCastInfoRsp::default_instance_,
      TExclusiveEquipmentRecruitCastInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TExclusiveEquipmentRecruitCastInfoRsp));
  TExclusiveEquipmentRecruitCastReq_descriptor_ = file->message_type(2);
  static const int TExclusiveEquipmentRecruitCastReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastReq, campid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastReq, castnum_),
  };
  TExclusiveEquipmentRecruitCastReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TExclusiveEquipmentRecruitCastReq_descriptor_,
      TExclusiveEquipmentRecruitCastReq::default_instance_,
      TExclusiveEquipmentRecruitCastReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TExclusiveEquipmentRecruitCastReq));
  TExclusiveEquipmentRecruitCastRsp_descriptor_ = file->message_type(3);
  static const int TExclusiveEquipmentRecruitCastRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastRsp, rewardarray_),
  };
  TExclusiveEquipmentRecruitCastRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TExclusiveEquipmentRecruitCastRsp_descriptor_,
      TExclusiveEquipmentRecruitCastRsp::default_instance_,
      TExclusiveEquipmentRecruitCastRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitCastRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TExclusiveEquipmentRecruitCastRsp));
  TExclusiveEquipmentRecruitBuyGoldGoodsReq_descriptor_ = file->message_type(4);
  static const int TExclusiveEquipmentRecruitBuyGoldGoodsReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitBuyGoldGoodsReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitBuyGoldGoodsReq, num_),
  };
  TExclusiveEquipmentRecruitBuyGoldGoodsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TExclusiveEquipmentRecruitBuyGoldGoodsReq_descriptor_,
      TExclusiveEquipmentRecruitBuyGoldGoodsReq::default_instance_,
      TExclusiveEquipmentRecruitBuyGoldGoodsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitBuyGoldGoodsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitBuyGoldGoodsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TExclusiveEquipmentRecruitBuyGoldGoodsReq));
  TExclusiveEquipmentRecruitBuyGoldGoodsRsp_descriptor_ = file->message_type(5);
  static const int TExclusiveEquipmentRecruitBuyGoldGoodsRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitBuyGoldGoodsRsp, rewardarray_),
  };
  TExclusiveEquipmentRecruitBuyGoldGoodsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TExclusiveEquipmentRecruitBuyGoldGoodsRsp_descriptor_,
      TExclusiveEquipmentRecruitBuyGoldGoodsRsp::default_instance_,
      TExclusiveEquipmentRecruitBuyGoldGoodsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitBuyGoldGoodsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitBuyGoldGoodsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TExclusiveEquipmentRecruitBuyGoldGoodsRsp));
  TExclusiveEquipmentRecruitGoodsInfo_descriptor_ = file->message_type(6);
  static const int TExclusiveEquipmentRecruitGoodsInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitGoodsInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitGoodsInfo, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitGoodsInfo, buytime_),
  };
  TExclusiveEquipmentRecruitGoodsInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TExclusiveEquipmentRecruitGoodsInfo_descriptor_,
      TExclusiveEquipmentRecruitGoodsInfo::default_instance_,
      TExclusiveEquipmentRecruitGoodsInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitGoodsInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitGoodsInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TExclusiveEquipmentRecruitGoodsInfo));
  TExclusiveEquipmentRecruitRmbGoodsChangeNotify_descriptor_ = file->message_type(7);
  static const int TExclusiveEquipmentRecruitRmbGoodsChangeNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitRmbGoodsChangeNotify, rmbgoodsinfoarray_),
  };
  TExclusiveEquipmentRecruitRmbGoodsChangeNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TExclusiveEquipmentRecruitRmbGoodsChangeNotify_descriptor_,
      TExclusiveEquipmentRecruitRmbGoodsChangeNotify::default_instance_,
      TExclusiveEquipmentRecruitRmbGoodsChangeNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitRmbGoodsChangeNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TExclusiveEquipmentRecruitRmbGoodsChangeNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TExclusiveEquipmentRecruitRmbGoodsChangeNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fExclusiveEquipmentRecruit_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TExclusiveEquipmentRecruitCastCampInfo_descriptor_, &TExclusiveEquipmentRecruitCastCampInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TExclusiveEquipmentRecruitCastInfoRsp_descriptor_, &TExclusiveEquipmentRecruitCastInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TExclusiveEquipmentRecruitCastReq_descriptor_, &TExclusiveEquipmentRecruitCastReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TExclusiveEquipmentRecruitCastRsp_descriptor_, &TExclusiveEquipmentRecruitCastRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TExclusiveEquipmentRecruitBuyGoldGoodsReq_descriptor_, &TExclusiveEquipmentRecruitBuyGoldGoodsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TExclusiveEquipmentRecruitBuyGoldGoodsRsp_descriptor_, &TExclusiveEquipmentRecruitBuyGoldGoodsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TExclusiveEquipmentRecruitGoodsInfo_descriptor_, &TExclusiveEquipmentRecruitGoodsInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TExclusiveEquipmentRecruitRmbGoodsChangeNotify_descriptor_, &TExclusiveEquipmentRecruitRmbGoodsChangeNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fExclusiveEquipmentRecruit_2eproto() {
  delete TExclusiveEquipmentRecruitCastCampInfo::default_instance_;
  delete TExclusiveEquipmentRecruitCastCampInfo_reflection_;
  delete TExclusiveEquipmentRecruitCastInfoRsp::default_instance_;
  delete TExclusiveEquipmentRecruitCastInfoRsp_reflection_;
  delete TExclusiveEquipmentRecruitCastReq::default_instance_;
  delete TExclusiveEquipmentRecruitCastReq_reflection_;
  delete TExclusiveEquipmentRecruitCastRsp::default_instance_;
  delete TExclusiveEquipmentRecruitCastRsp_reflection_;
  delete TExclusiveEquipmentRecruitBuyGoldGoodsReq::default_instance_;
  delete TExclusiveEquipmentRecruitBuyGoldGoodsReq_reflection_;
  delete TExclusiveEquipmentRecruitBuyGoldGoodsRsp::default_instance_;
  delete TExclusiveEquipmentRecruitBuyGoldGoodsRsp_reflection_;
  delete TExclusiveEquipmentRecruitGoodsInfo::default_instance_;
  delete TExclusiveEquipmentRecruitGoodsInfo_reflection_;
  delete TExclusiveEquipmentRecruitRmbGoodsChangeNotify::default_instance_;
  delete TExclusiveEquipmentRecruitRmbGoodsChangeNotify_reflection_;
}

void protobuf_AddDesc_net_2fExclusiveEquipmentRecruit_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n#net/ExclusiveEquipmentRecruit.proto\022\002p"
    "b\032\026net/CommonReward.proto\"I\n&TExclusiveE"
    "quipmentRecruitCastCampInfo\022\016\n\006CampId\030\001 "
    "\001(\r\022\017\n\007CastNum\030\002 \001(\r\"\363\001\n%TExclusiveEquip"
    "mentRecruitCastInfoRsp\022A\n\rCastInfoArray\030"
    "\001 \003(\0132*.pb.TExclusiveEquipmentRecruitCas"
    "tCampInfo\022C\n\022GoldGoodsInfoArray\030\002 \003(\0132\'."
    "pb.TExclusiveEquipmentRecruitGoodsInfo\022B"
    "\n\021RmbGoodsInfoArray\030\003 \003(\0132\'.pb.TExclusiv"
    "eEquipmentRecruitGoodsInfo\"D\n!TExclusive"
    "EquipmentRecruitCastReq\022\016\n\006CampId\030\001 \001(\r\022"
    "\017\n\007CastNum\030\002 \001(\r\"K\n!TExclusiveEquipmentR"
    "ecruitCastRsp\022&\n\013RewardArray\030\001 \003(\0132\021.pb."
    "TCommonReward\"D\n)TExclusiveEquipmentRecr"
    "uitBuyGoldGoodsReq\022\n\n\002Id\030\001 \001(\r\022\013\n\003Num\030\002 "
    "\001(\r\"S\n)TExclusiveEquipmentRecruitBuyGold"
    "GoodsRsp\022&\n\013RewardArray\030\001 \003(\0132\021.pb.TComm"
    "onReward\"O\n#TExclusiveEquipmentRecruitGo"
    "odsInfo\022\n\n\002Id\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\022\017\n\007BuyT"
    "ime\030\003 \001(\004\"t\n.TExclusiveEquipmentRecruitR"
    "mbGoodsChangeNotify\022B\n\021RmbGoodsInfoArray"
    "\030\001 \003(\0132\'.pb.TExclusiveEquipmentRecruitGo"
    "odsInfo", 887);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ExclusiveEquipmentRecruit.proto", &protobuf_RegisterTypes);
  TExclusiveEquipmentRecruitCastCampInfo::default_instance_ = new TExclusiveEquipmentRecruitCastCampInfo();
  TExclusiveEquipmentRecruitCastInfoRsp::default_instance_ = new TExclusiveEquipmentRecruitCastInfoRsp();
  TExclusiveEquipmentRecruitCastReq::default_instance_ = new TExclusiveEquipmentRecruitCastReq();
  TExclusiveEquipmentRecruitCastRsp::default_instance_ = new TExclusiveEquipmentRecruitCastRsp();
  TExclusiveEquipmentRecruitBuyGoldGoodsReq::default_instance_ = new TExclusiveEquipmentRecruitBuyGoldGoodsReq();
  TExclusiveEquipmentRecruitBuyGoldGoodsRsp::default_instance_ = new TExclusiveEquipmentRecruitBuyGoldGoodsRsp();
  TExclusiveEquipmentRecruitGoodsInfo::default_instance_ = new TExclusiveEquipmentRecruitGoodsInfo();
  TExclusiveEquipmentRecruitRmbGoodsChangeNotify::default_instance_ = new TExclusiveEquipmentRecruitRmbGoodsChangeNotify();
  TExclusiveEquipmentRecruitCastCampInfo::default_instance_->InitAsDefaultInstance();
  TExclusiveEquipmentRecruitCastInfoRsp::default_instance_->InitAsDefaultInstance();
  TExclusiveEquipmentRecruitCastReq::default_instance_->InitAsDefaultInstance();
  TExclusiveEquipmentRecruitCastRsp::default_instance_->InitAsDefaultInstance();
  TExclusiveEquipmentRecruitBuyGoldGoodsReq::default_instance_->InitAsDefaultInstance();
  TExclusiveEquipmentRecruitBuyGoldGoodsRsp::default_instance_->InitAsDefaultInstance();
  TExclusiveEquipmentRecruitGoodsInfo::default_instance_->InitAsDefaultInstance();
  TExclusiveEquipmentRecruitRmbGoodsChangeNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fExclusiveEquipmentRecruit_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fExclusiveEquipmentRecruit_2eproto {
  StaticDescriptorInitializer_net_2fExclusiveEquipmentRecruit_2eproto() {
    protobuf_AddDesc_net_2fExclusiveEquipmentRecruit_2eproto();
  }
} static_descriptor_initializer_net_2fExclusiveEquipmentRecruit_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TExclusiveEquipmentRecruitCastCampInfo::kCampIdFieldNumber;
const int TExclusiveEquipmentRecruitCastCampInfo::kCastNumFieldNumber;
#endif  // !_MSC_VER

TExclusiveEquipmentRecruitCastCampInfo::TExclusiveEquipmentRecruitCastCampInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TExclusiveEquipmentRecruitCastCampInfo)
}

void TExclusiveEquipmentRecruitCastCampInfo::InitAsDefaultInstance() {
}

TExclusiveEquipmentRecruitCastCampInfo::TExclusiveEquipmentRecruitCastCampInfo(const TExclusiveEquipmentRecruitCastCampInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TExclusiveEquipmentRecruitCastCampInfo)
}

void TExclusiveEquipmentRecruitCastCampInfo::SharedCtor() {
  _cached_size_ = 0;
  campid_ = 0u;
  castnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TExclusiveEquipmentRecruitCastCampInfo::~TExclusiveEquipmentRecruitCastCampInfo() {
  // @@protoc_insertion_point(destructor:pb.TExclusiveEquipmentRecruitCastCampInfo)
  SharedDtor();
}

void TExclusiveEquipmentRecruitCastCampInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TExclusiveEquipmentRecruitCastCampInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitCastCampInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TExclusiveEquipmentRecruitCastCampInfo_descriptor_;
}

const TExclusiveEquipmentRecruitCastCampInfo& TExclusiveEquipmentRecruitCastCampInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fExclusiveEquipmentRecruit_2eproto();
  return *default_instance_;
}

TExclusiveEquipmentRecruitCastCampInfo* TExclusiveEquipmentRecruitCastCampInfo::default_instance_ = NULL;

TExclusiveEquipmentRecruitCastCampInfo* TExclusiveEquipmentRecruitCastCampInfo::New() const {
  return new TExclusiveEquipmentRecruitCastCampInfo;
}

void TExclusiveEquipmentRecruitCastCampInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TExclusiveEquipmentRecruitCastCampInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(campid_, castnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TExclusiveEquipmentRecruitCastCampInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TExclusiveEquipmentRecruitCastCampInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CampId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
          set_has_campid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CastNum;
        break;
      }

      // optional uint32 CastNum = 2;
      case 2: {
        if (tag == 16) {
         parse_CastNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &castnum_)));
          set_has_castnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TExclusiveEquipmentRecruitCastCampInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TExclusiveEquipmentRecruitCastCampInfo)
  return false;
#undef DO_
}

void TExclusiveEquipmentRecruitCastCampInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TExclusiveEquipmentRecruitCastCampInfo)
  // optional uint32 CampId = 1;
  if (has_campid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->campid(), output);
  }

  // optional uint32 CastNum = 2;
  if (has_castnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->castnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TExclusiveEquipmentRecruitCastCampInfo)
}

::google::protobuf::uint8* TExclusiveEquipmentRecruitCastCampInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TExclusiveEquipmentRecruitCastCampInfo)
  // optional uint32 CampId = 1;
  if (has_campid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->campid(), target);
  }

  // optional uint32 CastNum = 2;
  if (has_castnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->castnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TExclusiveEquipmentRecruitCastCampInfo)
  return target;
}

int TExclusiveEquipmentRecruitCastCampInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 CampId = 1;
    if (has_campid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->campid());
    }

    // optional uint32 CastNum = 2;
    if (has_castnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->castnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TExclusiveEquipmentRecruitCastCampInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TExclusiveEquipmentRecruitCastCampInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TExclusiveEquipmentRecruitCastCampInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TExclusiveEquipmentRecruitCastCampInfo::MergeFrom(const TExclusiveEquipmentRecruitCastCampInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_campid()) {
      set_campid(from.campid());
    }
    if (from.has_castnum()) {
      set_castnum(from.castnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TExclusiveEquipmentRecruitCastCampInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TExclusiveEquipmentRecruitCastCampInfo::CopyFrom(const TExclusiveEquipmentRecruitCastCampInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TExclusiveEquipmentRecruitCastCampInfo::IsInitialized() const {

  return true;
}

void TExclusiveEquipmentRecruitCastCampInfo::Swap(TExclusiveEquipmentRecruitCastCampInfo* other) {
  if (other != this) {
    std::swap(campid_, other->campid_);
    std::swap(castnum_, other->castnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TExclusiveEquipmentRecruitCastCampInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TExclusiveEquipmentRecruitCastCampInfo_descriptor_;
  metadata.reflection = TExclusiveEquipmentRecruitCastCampInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TExclusiveEquipmentRecruitCastInfoRsp::kCastInfoArrayFieldNumber;
const int TExclusiveEquipmentRecruitCastInfoRsp::kGoldGoodsInfoArrayFieldNumber;
const int TExclusiveEquipmentRecruitCastInfoRsp::kRmbGoodsInfoArrayFieldNumber;
#endif  // !_MSC_VER

TExclusiveEquipmentRecruitCastInfoRsp::TExclusiveEquipmentRecruitCastInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TExclusiveEquipmentRecruitCastInfoRsp)
}

void TExclusiveEquipmentRecruitCastInfoRsp::InitAsDefaultInstance() {
}

TExclusiveEquipmentRecruitCastInfoRsp::TExclusiveEquipmentRecruitCastInfoRsp(const TExclusiveEquipmentRecruitCastInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TExclusiveEquipmentRecruitCastInfoRsp)
}

void TExclusiveEquipmentRecruitCastInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TExclusiveEquipmentRecruitCastInfoRsp::~TExclusiveEquipmentRecruitCastInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TExclusiveEquipmentRecruitCastInfoRsp)
  SharedDtor();
}

void TExclusiveEquipmentRecruitCastInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TExclusiveEquipmentRecruitCastInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitCastInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TExclusiveEquipmentRecruitCastInfoRsp_descriptor_;
}

const TExclusiveEquipmentRecruitCastInfoRsp& TExclusiveEquipmentRecruitCastInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fExclusiveEquipmentRecruit_2eproto();
  return *default_instance_;
}

TExclusiveEquipmentRecruitCastInfoRsp* TExclusiveEquipmentRecruitCastInfoRsp::default_instance_ = NULL;

TExclusiveEquipmentRecruitCastInfoRsp* TExclusiveEquipmentRecruitCastInfoRsp::New() const {
  return new TExclusiveEquipmentRecruitCastInfoRsp;
}

void TExclusiveEquipmentRecruitCastInfoRsp::Clear() {
  castinfoarray_.Clear();
  goldgoodsinfoarray_.Clear();
  rmbgoodsinfoarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TExclusiveEquipmentRecruitCastInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TExclusiveEquipmentRecruitCastInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TExclusiveEquipmentRecruitCastCampInfo CastInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_CastInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_castinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_CastInfoArray;
        if (input->ExpectTag(18)) goto parse_GoldGoodsInfoArray;
        break;
      }

      // repeated .pb.TExclusiveEquipmentRecruitGoodsInfo GoldGoodsInfoArray = 2;
      case 2: {
        if (tag == 18) {
         parse_GoldGoodsInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goldgoodsinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_GoldGoodsInfoArray;
        if (input->ExpectTag(26)) goto parse_RmbGoodsInfoArray;
        break;
      }

      // repeated .pb.TExclusiveEquipmentRecruitGoodsInfo RmbGoodsInfoArray = 3;
      case 3: {
        if (tag == 26) {
         parse_RmbGoodsInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rmbgoodsinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RmbGoodsInfoArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TExclusiveEquipmentRecruitCastInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TExclusiveEquipmentRecruitCastInfoRsp)
  return false;
#undef DO_
}

void TExclusiveEquipmentRecruitCastInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TExclusiveEquipmentRecruitCastInfoRsp)
  // repeated .pb.TExclusiveEquipmentRecruitCastCampInfo CastInfoArray = 1;
  for (int i = 0; i < this->castinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->castinfoarray(i), output);
  }

  // repeated .pb.TExclusiveEquipmentRecruitGoodsInfo GoldGoodsInfoArray = 2;
  for (int i = 0; i < this->goldgoodsinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->goldgoodsinfoarray(i), output);
  }

  // repeated .pb.TExclusiveEquipmentRecruitGoodsInfo RmbGoodsInfoArray = 3;
  for (int i = 0; i < this->rmbgoodsinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rmbgoodsinfoarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TExclusiveEquipmentRecruitCastInfoRsp)
}

::google::protobuf::uint8* TExclusiveEquipmentRecruitCastInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TExclusiveEquipmentRecruitCastInfoRsp)
  // repeated .pb.TExclusiveEquipmentRecruitCastCampInfo CastInfoArray = 1;
  for (int i = 0; i < this->castinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->castinfoarray(i), target);
  }

  // repeated .pb.TExclusiveEquipmentRecruitGoodsInfo GoldGoodsInfoArray = 2;
  for (int i = 0; i < this->goldgoodsinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->goldgoodsinfoarray(i), target);
  }

  // repeated .pb.TExclusiveEquipmentRecruitGoodsInfo RmbGoodsInfoArray = 3;
  for (int i = 0; i < this->rmbgoodsinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rmbgoodsinfoarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TExclusiveEquipmentRecruitCastInfoRsp)
  return target;
}

int TExclusiveEquipmentRecruitCastInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TExclusiveEquipmentRecruitCastCampInfo CastInfoArray = 1;
  total_size += 1 * this->castinfoarray_size();
  for (int i = 0; i < this->castinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->castinfoarray(i));
  }

  // repeated .pb.TExclusiveEquipmentRecruitGoodsInfo GoldGoodsInfoArray = 2;
  total_size += 1 * this->goldgoodsinfoarray_size();
  for (int i = 0; i < this->goldgoodsinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goldgoodsinfoarray(i));
  }

  // repeated .pb.TExclusiveEquipmentRecruitGoodsInfo RmbGoodsInfoArray = 3;
  total_size += 1 * this->rmbgoodsinfoarray_size();
  for (int i = 0; i < this->rmbgoodsinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rmbgoodsinfoarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TExclusiveEquipmentRecruitCastInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TExclusiveEquipmentRecruitCastInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TExclusiveEquipmentRecruitCastInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TExclusiveEquipmentRecruitCastInfoRsp::MergeFrom(const TExclusiveEquipmentRecruitCastInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  castinfoarray_.MergeFrom(from.castinfoarray_);
  goldgoodsinfoarray_.MergeFrom(from.goldgoodsinfoarray_);
  rmbgoodsinfoarray_.MergeFrom(from.rmbgoodsinfoarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TExclusiveEquipmentRecruitCastInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TExclusiveEquipmentRecruitCastInfoRsp::CopyFrom(const TExclusiveEquipmentRecruitCastInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TExclusiveEquipmentRecruitCastInfoRsp::IsInitialized() const {

  return true;
}

void TExclusiveEquipmentRecruitCastInfoRsp::Swap(TExclusiveEquipmentRecruitCastInfoRsp* other) {
  if (other != this) {
    castinfoarray_.Swap(&other->castinfoarray_);
    goldgoodsinfoarray_.Swap(&other->goldgoodsinfoarray_);
    rmbgoodsinfoarray_.Swap(&other->rmbgoodsinfoarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TExclusiveEquipmentRecruitCastInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TExclusiveEquipmentRecruitCastInfoRsp_descriptor_;
  metadata.reflection = TExclusiveEquipmentRecruitCastInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TExclusiveEquipmentRecruitCastReq::kCampIdFieldNumber;
const int TExclusiveEquipmentRecruitCastReq::kCastNumFieldNumber;
#endif  // !_MSC_VER

TExclusiveEquipmentRecruitCastReq::TExclusiveEquipmentRecruitCastReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TExclusiveEquipmentRecruitCastReq)
}

void TExclusiveEquipmentRecruitCastReq::InitAsDefaultInstance() {
}

TExclusiveEquipmentRecruitCastReq::TExclusiveEquipmentRecruitCastReq(const TExclusiveEquipmentRecruitCastReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TExclusiveEquipmentRecruitCastReq)
}

void TExclusiveEquipmentRecruitCastReq::SharedCtor() {
  _cached_size_ = 0;
  campid_ = 0u;
  castnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TExclusiveEquipmentRecruitCastReq::~TExclusiveEquipmentRecruitCastReq() {
  // @@protoc_insertion_point(destructor:pb.TExclusiveEquipmentRecruitCastReq)
  SharedDtor();
}

void TExclusiveEquipmentRecruitCastReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TExclusiveEquipmentRecruitCastReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitCastReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TExclusiveEquipmentRecruitCastReq_descriptor_;
}

const TExclusiveEquipmentRecruitCastReq& TExclusiveEquipmentRecruitCastReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fExclusiveEquipmentRecruit_2eproto();
  return *default_instance_;
}

TExclusiveEquipmentRecruitCastReq* TExclusiveEquipmentRecruitCastReq::default_instance_ = NULL;

TExclusiveEquipmentRecruitCastReq* TExclusiveEquipmentRecruitCastReq::New() const {
  return new TExclusiveEquipmentRecruitCastReq;
}

void TExclusiveEquipmentRecruitCastReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TExclusiveEquipmentRecruitCastReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(campid_, castnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TExclusiveEquipmentRecruitCastReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TExclusiveEquipmentRecruitCastReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CampId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
          set_has_campid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CastNum;
        break;
      }

      // optional uint32 CastNum = 2;
      case 2: {
        if (tag == 16) {
         parse_CastNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &castnum_)));
          set_has_castnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TExclusiveEquipmentRecruitCastReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TExclusiveEquipmentRecruitCastReq)
  return false;
#undef DO_
}

void TExclusiveEquipmentRecruitCastReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TExclusiveEquipmentRecruitCastReq)
  // optional uint32 CampId = 1;
  if (has_campid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->campid(), output);
  }

  // optional uint32 CastNum = 2;
  if (has_castnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->castnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TExclusiveEquipmentRecruitCastReq)
}

::google::protobuf::uint8* TExclusiveEquipmentRecruitCastReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TExclusiveEquipmentRecruitCastReq)
  // optional uint32 CampId = 1;
  if (has_campid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->campid(), target);
  }

  // optional uint32 CastNum = 2;
  if (has_castnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->castnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TExclusiveEquipmentRecruitCastReq)
  return target;
}

int TExclusiveEquipmentRecruitCastReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 CampId = 1;
    if (has_campid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->campid());
    }

    // optional uint32 CastNum = 2;
    if (has_castnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->castnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TExclusiveEquipmentRecruitCastReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TExclusiveEquipmentRecruitCastReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TExclusiveEquipmentRecruitCastReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TExclusiveEquipmentRecruitCastReq::MergeFrom(const TExclusiveEquipmentRecruitCastReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_campid()) {
      set_campid(from.campid());
    }
    if (from.has_castnum()) {
      set_castnum(from.castnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TExclusiveEquipmentRecruitCastReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TExclusiveEquipmentRecruitCastReq::CopyFrom(const TExclusiveEquipmentRecruitCastReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TExclusiveEquipmentRecruitCastReq::IsInitialized() const {

  return true;
}

void TExclusiveEquipmentRecruitCastReq::Swap(TExclusiveEquipmentRecruitCastReq* other) {
  if (other != this) {
    std::swap(campid_, other->campid_);
    std::swap(castnum_, other->castnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TExclusiveEquipmentRecruitCastReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TExclusiveEquipmentRecruitCastReq_descriptor_;
  metadata.reflection = TExclusiveEquipmentRecruitCastReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TExclusiveEquipmentRecruitCastRsp::kRewardArrayFieldNumber;
#endif  // !_MSC_VER

TExclusiveEquipmentRecruitCastRsp::TExclusiveEquipmentRecruitCastRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TExclusiveEquipmentRecruitCastRsp)
}

void TExclusiveEquipmentRecruitCastRsp::InitAsDefaultInstance() {
}

TExclusiveEquipmentRecruitCastRsp::TExclusiveEquipmentRecruitCastRsp(const TExclusiveEquipmentRecruitCastRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TExclusiveEquipmentRecruitCastRsp)
}

void TExclusiveEquipmentRecruitCastRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TExclusiveEquipmentRecruitCastRsp::~TExclusiveEquipmentRecruitCastRsp() {
  // @@protoc_insertion_point(destructor:pb.TExclusiveEquipmentRecruitCastRsp)
  SharedDtor();
}

void TExclusiveEquipmentRecruitCastRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TExclusiveEquipmentRecruitCastRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitCastRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TExclusiveEquipmentRecruitCastRsp_descriptor_;
}

const TExclusiveEquipmentRecruitCastRsp& TExclusiveEquipmentRecruitCastRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fExclusiveEquipmentRecruit_2eproto();
  return *default_instance_;
}

TExclusiveEquipmentRecruitCastRsp* TExclusiveEquipmentRecruitCastRsp::default_instance_ = NULL;

TExclusiveEquipmentRecruitCastRsp* TExclusiveEquipmentRecruitCastRsp::New() const {
  return new TExclusiveEquipmentRecruitCastRsp;
}

void TExclusiveEquipmentRecruitCastRsp::Clear() {
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TExclusiveEquipmentRecruitCastRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TExclusiveEquipmentRecruitCastRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TExclusiveEquipmentRecruitCastRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TExclusiveEquipmentRecruitCastRsp)
  return false;
#undef DO_
}

void TExclusiveEquipmentRecruitCastRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TExclusiveEquipmentRecruitCastRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TExclusiveEquipmentRecruitCastRsp)
}

::google::protobuf::uint8* TExclusiveEquipmentRecruitCastRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TExclusiveEquipmentRecruitCastRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TExclusiveEquipmentRecruitCastRsp)
  return target;
}

int TExclusiveEquipmentRecruitCastRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TExclusiveEquipmentRecruitCastRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TExclusiveEquipmentRecruitCastRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TExclusiveEquipmentRecruitCastRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TExclusiveEquipmentRecruitCastRsp::MergeFrom(const TExclusiveEquipmentRecruitCastRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TExclusiveEquipmentRecruitCastRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TExclusiveEquipmentRecruitCastRsp::CopyFrom(const TExclusiveEquipmentRecruitCastRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TExclusiveEquipmentRecruitCastRsp::IsInitialized() const {

  return true;
}

void TExclusiveEquipmentRecruitCastRsp::Swap(TExclusiveEquipmentRecruitCastRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TExclusiveEquipmentRecruitCastRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TExclusiveEquipmentRecruitCastRsp_descriptor_;
  metadata.reflection = TExclusiveEquipmentRecruitCastRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TExclusiveEquipmentRecruitBuyGoldGoodsReq::kIdFieldNumber;
const int TExclusiveEquipmentRecruitBuyGoldGoodsReq::kNumFieldNumber;
#endif  // !_MSC_VER

TExclusiveEquipmentRecruitBuyGoldGoodsReq::TExclusiveEquipmentRecruitBuyGoldGoodsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TExclusiveEquipmentRecruitBuyGoldGoodsReq)
}

void TExclusiveEquipmentRecruitBuyGoldGoodsReq::InitAsDefaultInstance() {
}

TExclusiveEquipmentRecruitBuyGoldGoodsReq::TExclusiveEquipmentRecruitBuyGoldGoodsReq(const TExclusiveEquipmentRecruitBuyGoldGoodsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TExclusiveEquipmentRecruitBuyGoldGoodsReq)
}

void TExclusiveEquipmentRecruitBuyGoldGoodsReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TExclusiveEquipmentRecruitBuyGoldGoodsReq::~TExclusiveEquipmentRecruitBuyGoldGoodsReq() {
  // @@protoc_insertion_point(destructor:pb.TExclusiveEquipmentRecruitBuyGoldGoodsReq)
  SharedDtor();
}

void TExclusiveEquipmentRecruitBuyGoldGoodsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TExclusiveEquipmentRecruitBuyGoldGoodsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitBuyGoldGoodsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TExclusiveEquipmentRecruitBuyGoldGoodsReq_descriptor_;
}

const TExclusiveEquipmentRecruitBuyGoldGoodsReq& TExclusiveEquipmentRecruitBuyGoldGoodsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fExclusiveEquipmentRecruit_2eproto();
  return *default_instance_;
}

TExclusiveEquipmentRecruitBuyGoldGoodsReq* TExclusiveEquipmentRecruitBuyGoldGoodsReq::default_instance_ = NULL;

TExclusiveEquipmentRecruitBuyGoldGoodsReq* TExclusiveEquipmentRecruitBuyGoldGoodsReq::New() const {
  return new TExclusiveEquipmentRecruitBuyGoldGoodsReq;
}

void TExclusiveEquipmentRecruitBuyGoldGoodsReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TExclusiveEquipmentRecruitBuyGoldGoodsReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TExclusiveEquipmentRecruitBuyGoldGoodsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TExclusiveEquipmentRecruitBuyGoldGoodsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TExclusiveEquipmentRecruitBuyGoldGoodsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TExclusiveEquipmentRecruitBuyGoldGoodsReq)
  return false;
#undef DO_
}

void TExclusiveEquipmentRecruitBuyGoldGoodsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TExclusiveEquipmentRecruitBuyGoldGoodsReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TExclusiveEquipmentRecruitBuyGoldGoodsReq)
}

::google::protobuf::uint8* TExclusiveEquipmentRecruitBuyGoldGoodsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TExclusiveEquipmentRecruitBuyGoldGoodsReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TExclusiveEquipmentRecruitBuyGoldGoodsReq)
  return target;
}

int TExclusiveEquipmentRecruitBuyGoldGoodsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TExclusiveEquipmentRecruitBuyGoldGoodsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TExclusiveEquipmentRecruitBuyGoldGoodsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TExclusiveEquipmentRecruitBuyGoldGoodsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TExclusiveEquipmentRecruitBuyGoldGoodsReq::MergeFrom(const TExclusiveEquipmentRecruitBuyGoldGoodsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TExclusiveEquipmentRecruitBuyGoldGoodsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TExclusiveEquipmentRecruitBuyGoldGoodsReq::CopyFrom(const TExclusiveEquipmentRecruitBuyGoldGoodsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TExclusiveEquipmentRecruitBuyGoldGoodsReq::IsInitialized() const {

  return true;
}

void TExclusiveEquipmentRecruitBuyGoldGoodsReq::Swap(TExclusiveEquipmentRecruitBuyGoldGoodsReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TExclusiveEquipmentRecruitBuyGoldGoodsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TExclusiveEquipmentRecruitBuyGoldGoodsReq_descriptor_;
  metadata.reflection = TExclusiveEquipmentRecruitBuyGoldGoodsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TExclusiveEquipmentRecruitBuyGoldGoodsRsp::kRewardArrayFieldNumber;
#endif  // !_MSC_VER

TExclusiveEquipmentRecruitBuyGoldGoodsRsp::TExclusiveEquipmentRecruitBuyGoldGoodsRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TExclusiveEquipmentRecruitBuyGoldGoodsRsp)
}

void TExclusiveEquipmentRecruitBuyGoldGoodsRsp::InitAsDefaultInstance() {
}

TExclusiveEquipmentRecruitBuyGoldGoodsRsp::TExclusiveEquipmentRecruitBuyGoldGoodsRsp(const TExclusiveEquipmentRecruitBuyGoldGoodsRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TExclusiveEquipmentRecruitBuyGoldGoodsRsp)
}

void TExclusiveEquipmentRecruitBuyGoldGoodsRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TExclusiveEquipmentRecruitBuyGoldGoodsRsp::~TExclusiveEquipmentRecruitBuyGoldGoodsRsp() {
  // @@protoc_insertion_point(destructor:pb.TExclusiveEquipmentRecruitBuyGoldGoodsRsp)
  SharedDtor();
}

void TExclusiveEquipmentRecruitBuyGoldGoodsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TExclusiveEquipmentRecruitBuyGoldGoodsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitBuyGoldGoodsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TExclusiveEquipmentRecruitBuyGoldGoodsRsp_descriptor_;
}

const TExclusiveEquipmentRecruitBuyGoldGoodsRsp& TExclusiveEquipmentRecruitBuyGoldGoodsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fExclusiveEquipmentRecruit_2eproto();
  return *default_instance_;
}

TExclusiveEquipmentRecruitBuyGoldGoodsRsp* TExclusiveEquipmentRecruitBuyGoldGoodsRsp::default_instance_ = NULL;

TExclusiveEquipmentRecruitBuyGoldGoodsRsp* TExclusiveEquipmentRecruitBuyGoldGoodsRsp::New() const {
  return new TExclusiveEquipmentRecruitBuyGoldGoodsRsp;
}

void TExclusiveEquipmentRecruitBuyGoldGoodsRsp::Clear() {
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TExclusiveEquipmentRecruitBuyGoldGoodsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TExclusiveEquipmentRecruitBuyGoldGoodsRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TExclusiveEquipmentRecruitBuyGoldGoodsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TExclusiveEquipmentRecruitBuyGoldGoodsRsp)
  return false;
#undef DO_
}

void TExclusiveEquipmentRecruitBuyGoldGoodsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TExclusiveEquipmentRecruitBuyGoldGoodsRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TExclusiveEquipmentRecruitBuyGoldGoodsRsp)
}

::google::protobuf::uint8* TExclusiveEquipmentRecruitBuyGoldGoodsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TExclusiveEquipmentRecruitBuyGoldGoodsRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TExclusiveEquipmentRecruitBuyGoldGoodsRsp)
  return target;
}

int TExclusiveEquipmentRecruitBuyGoldGoodsRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TExclusiveEquipmentRecruitBuyGoldGoodsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TExclusiveEquipmentRecruitBuyGoldGoodsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TExclusiveEquipmentRecruitBuyGoldGoodsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TExclusiveEquipmentRecruitBuyGoldGoodsRsp::MergeFrom(const TExclusiveEquipmentRecruitBuyGoldGoodsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TExclusiveEquipmentRecruitBuyGoldGoodsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TExclusiveEquipmentRecruitBuyGoldGoodsRsp::CopyFrom(const TExclusiveEquipmentRecruitBuyGoldGoodsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TExclusiveEquipmentRecruitBuyGoldGoodsRsp::IsInitialized() const {

  return true;
}

void TExclusiveEquipmentRecruitBuyGoldGoodsRsp::Swap(TExclusiveEquipmentRecruitBuyGoldGoodsRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TExclusiveEquipmentRecruitBuyGoldGoodsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TExclusiveEquipmentRecruitBuyGoldGoodsRsp_descriptor_;
  metadata.reflection = TExclusiveEquipmentRecruitBuyGoldGoodsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TExclusiveEquipmentRecruitGoodsInfo::kIdFieldNumber;
const int TExclusiveEquipmentRecruitGoodsInfo::kNumFieldNumber;
const int TExclusiveEquipmentRecruitGoodsInfo::kBuyTimeFieldNumber;
#endif  // !_MSC_VER

TExclusiveEquipmentRecruitGoodsInfo::TExclusiveEquipmentRecruitGoodsInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TExclusiveEquipmentRecruitGoodsInfo)
}

void TExclusiveEquipmentRecruitGoodsInfo::InitAsDefaultInstance() {
}

TExclusiveEquipmentRecruitGoodsInfo::TExclusiveEquipmentRecruitGoodsInfo(const TExclusiveEquipmentRecruitGoodsInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TExclusiveEquipmentRecruitGoodsInfo)
}

void TExclusiveEquipmentRecruitGoodsInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  buytime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TExclusiveEquipmentRecruitGoodsInfo::~TExclusiveEquipmentRecruitGoodsInfo() {
  // @@protoc_insertion_point(destructor:pb.TExclusiveEquipmentRecruitGoodsInfo)
  SharedDtor();
}

void TExclusiveEquipmentRecruitGoodsInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TExclusiveEquipmentRecruitGoodsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitGoodsInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TExclusiveEquipmentRecruitGoodsInfo_descriptor_;
}

const TExclusiveEquipmentRecruitGoodsInfo& TExclusiveEquipmentRecruitGoodsInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fExclusiveEquipmentRecruit_2eproto();
  return *default_instance_;
}

TExclusiveEquipmentRecruitGoodsInfo* TExclusiveEquipmentRecruitGoodsInfo::default_instance_ = NULL;

TExclusiveEquipmentRecruitGoodsInfo* TExclusiveEquipmentRecruitGoodsInfo::New() const {
  return new TExclusiveEquipmentRecruitGoodsInfo;
}

void TExclusiveEquipmentRecruitGoodsInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TExclusiveEquipmentRecruitGoodsInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, buytime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TExclusiveEquipmentRecruitGoodsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TExclusiveEquipmentRecruitGoodsInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BuyTime;
        break;
      }

      // optional uint64 BuyTime = 3;
      case 3: {
        if (tag == 24) {
         parse_BuyTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &buytime_)));
          set_has_buytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TExclusiveEquipmentRecruitGoodsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TExclusiveEquipmentRecruitGoodsInfo)
  return false;
#undef DO_
}

void TExclusiveEquipmentRecruitGoodsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TExclusiveEquipmentRecruitGoodsInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  // optional uint64 BuyTime = 3;
  if (has_buytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->buytime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TExclusiveEquipmentRecruitGoodsInfo)
}

::google::protobuf::uint8* TExclusiveEquipmentRecruitGoodsInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TExclusiveEquipmentRecruitGoodsInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  // optional uint64 BuyTime = 3;
  if (has_buytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->buytime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TExclusiveEquipmentRecruitGoodsInfo)
  return target;
}

int TExclusiveEquipmentRecruitGoodsInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint64 BuyTime = 3;
    if (has_buytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->buytime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TExclusiveEquipmentRecruitGoodsInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TExclusiveEquipmentRecruitGoodsInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TExclusiveEquipmentRecruitGoodsInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TExclusiveEquipmentRecruitGoodsInfo::MergeFrom(const TExclusiveEquipmentRecruitGoodsInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_buytime()) {
      set_buytime(from.buytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TExclusiveEquipmentRecruitGoodsInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TExclusiveEquipmentRecruitGoodsInfo::CopyFrom(const TExclusiveEquipmentRecruitGoodsInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TExclusiveEquipmentRecruitGoodsInfo::IsInitialized() const {

  return true;
}

void TExclusiveEquipmentRecruitGoodsInfo::Swap(TExclusiveEquipmentRecruitGoodsInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(buytime_, other->buytime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TExclusiveEquipmentRecruitGoodsInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TExclusiveEquipmentRecruitGoodsInfo_descriptor_;
  metadata.reflection = TExclusiveEquipmentRecruitGoodsInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TExclusiveEquipmentRecruitRmbGoodsChangeNotify::kRmbGoodsInfoArrayFieldNumber;
#endif  // !_MSC_VER

TExclusiveEquipmentRecruitRmbGoodsChangeNotify::TExclusiveEquipmentRecruitRmbGoodsChangeNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TExclusiveEquipmentRecruitRmbGoodsChangeNotify)
}

void TExclusiveEquipmentRecruitRmbGoodsChangeNotify::InitAsDefaultInstance() {
}

TExclusiveEquipmentRecruitRmbGoodsChangeNotify::TExclusiveEquipmentRecruitRmbGoodsChangeNotify(const TExclusiveEquipmentRecruitRmbGoodsChangeNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TExclusiveEquipmentRecruitRmbGoodsChangeNotify)
}

void TExclusiveEquipmentRecruitRmbGoodsChangeNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TExclusiveEquipmentRecruitRmbGoodsChangeNotify::~TExclusiveEquipmentRecruitRmbGoodsChangeNotify() {
  // @@protoc_insertion_point(destructor:pb.TExclusiveEquipmentRecruitRmbGoodsChangeNotify)
  SharedDtor();
}

void TExclusiveEquipmentRecruitRmbGoodsChangeNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TExclusiveEquipmentRecruitRmbGoodsChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TExclusiveEquipmentRecruitRmbGoodsChangeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TExclusiveEquipmentRecruitRmbGoodsChangeNotify_descriptor_;
}

const TExclusiveEquipmentRecruitRmbGoodsChangeNotify& TExclusiveEquipmentRecruitRmbGoodsChangeNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fExclusiveEquipmentRecruit_2eproto();
  return *default_instance_;
}

TExclusiveEquipmentRecruitRmbGoodsChangeNotify* TExclusiveEquipmentRecruitRmbGoodsChangeNotify::default_instance_ = NULL;

TExclusiveEquipmentRecruitRmbGoodsChangeNotify* TExclusiveEquipmentRecruitRmbGoodsChangeNotify::New() const {
  return new TExclusiveEquipmentRecruitRmbGoodsChangeNotify;
}

void TExclusiveEquipmentRecruitRmbGoodsChangeNotify::Clear() {
  rmbgoodsinfoarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TExclusiveEquipmentRecruitRmbGoodsChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TExclusiveEquipmentRecruitRmbGoodsChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TExclusiveEquipmentRecruitGoodsInfo RmbGoodsInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RmbGoodsInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rmbgoodsinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RmbGoodsInfoArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TExclusiveEquipmentRecruitRmbGoodsChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TExclusiveEquipmentRecruitRmbGoodsChangeNotify)
  return false;
#undef DO_
}

void TExclusiveEquipmentRecruitRmbGoodsChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TExclusiveEquipmentRecruitRmbGoodsChangeNotify)
  // repeated .pb.TExclusiveEquipmentRecruitGoodsInfo RmbGoodsInfoArray = 1;
  for (int i = 0; i < this->rmbgoodsinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rmbgoodsinfoarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TExclusiveEquipmentRecruitRmbGoodsChangeNotify)
}

::google::protobuf::uint8* TExclusiveEquipmentRecruitRmbGoodsChangeNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TExclusiveEquipmentRecruitRmbGoodsChangeNotify)
  // repeated .pb.TExclusiveEquipmentRecruitGoodsInfo RmbGoodsInfoArray = 1;
  for (int i = 0; i < this->rmbgoodsinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rmbgoodsinfoarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TExclusiveEquipmentRecruitRmbGoodsChangeNotify)
  return target;
}

int TExclusiveEquipmentRecruitRmbGoodsChangeNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TExclusiveEquipmentRecruitGoodsInfo RmbGoodsInfoArray = 1;
  total_size += 1 * this->rmbgoodsinfoarray_size();
  for (int i = 0; i < this->rmbgoodsinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rmbgoodsinfoarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TExclusiveEquipmentRecruitRmbGoodsChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TExclusiveEquipmentRecruitRmbGoodsChangeNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TExclusiveEquipmentRecruitRmbGoodsChangeNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TExclusiveEquipmentRecruitRmbGoodsChangeNotify::MergeFrom(const TExclusiveEquipmentRecruitRmbGoodsChangeNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  rmbgoodsinfoarray_.MergeFrom(from.rmbgoodsinfoarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TExclusiveEquipmentRecruitRmbGoodsChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TExclusiveEquipmentRecruitRmbGoodsChangeNotify::CopyFrom(const TExclusiveEquipmentRecruitRmbGoodsChangeNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TExclusiveEquipmentRecruitRmbGoodsChangeNotify::IsInitialized() const {

  return true;
}

void TExclusiveEquipmentRecruitRmbGoodsChangeNotify::Swap(TExclusiveEquipmentRecruitRmbGoodsChangeNotify* other) {
  if (other != this) {
    rmbgoodsinfoarray_.Swap(&other->rmbgoodsinfoarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TExclusiveEquipmentRecruitRmbGoodsChangeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TExclusiveEquipmentRecruitRmbGoodsChangeNotify_descriptor_;
  metadata.reflection = TExclusiveEquipmentRecruitRmbGoodsChangeNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
