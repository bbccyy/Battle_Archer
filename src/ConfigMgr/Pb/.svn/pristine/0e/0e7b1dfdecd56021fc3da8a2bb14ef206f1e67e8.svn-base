// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/HeroFavorite.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/HeroFavorite.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* THeroFavoriteSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroFavoriteSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroFavoriteGetFavoriteInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroFavoriteGetFavoriteInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroFavoriteGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroFavoriteGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroFavoriteGiveGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroFavoriteGiveGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroFavoritePush_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroFavoritePush_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroFavoriteTouchReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroFavoriteTouchReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroFavoriteTouchRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroFavoriteTouchRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroFavoriteDialogChooseReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroFavoriteDialogChooseReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroFavoriteGetAppearSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroFavoriteGetAppearSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* THeroFavoriteGetAppearHidRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  THeroFavoriteGetAppearHidRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fHeroFavorite_2eproto() {
  protobuf_AddDesc_net_2fHeroFavorite_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/HeroFavorite.proto");
  GOOGLE_CHECK(file != NULL);
  THeroFavoriteSingle_descriptor_ = file->message_type(0);
  static const int THeroFavoriteSingle_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteSingle, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteSingle, favoritelv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteSingle, favoriteexp_),
  };
  THeroFavoriteSingle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroFavoriteSingle_descriptor_,
      THeroFavoriteSingle::default_instance_,
      THeroFavoriteSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteSingle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteSingle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroFavoriteSingle));
  THeroFavoriteGetFavoriteInfoRsp_descriptor_ = file->message_type(1);
  static const int THeroFavoriteGetFavoriteInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGetFavoriteInfoRsp, herofavoritearr_),
  };
  THeroFavoriteGetFavoriteInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroFavoriteGetFavoriteInfoRsp_descriptor_,
      THeroFavoriteGetFavoriteInfoRsp::default_instance_,
      THeroFavoriteGetFavoriteInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGetFavoriteInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGetFavoriteInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroFavoriteGetFavoriteInfoRsp));
  THeroFavoriteGift_descriptor_ = file->message_type(2);
  static const int THeroFavoriteGift_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGift, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGift, num_),
  };
  THeroFavoriteGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroFavoriteGift_descriptor_,
      THeroFavoriteGift::default_instance_,
      THeroFavoriteGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroFavoriteGift));
  THeroFavoriteGiveGiftReq_descriptor_ = file->message_type(3);
  static const int THeroFavoriteGiveGiftReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGiveGiftReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGiveGiftReq, giftarr_),
  };
  THeroFavoriteGiveGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroFavoriteGiveGiftReq_descriptor_,
      THeroFavoriteGiveGiftReq::default_instance_,
      THeroFavoriteGiveGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGiveGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGiveGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroFavoriteGiveGiftReq));
  THeroFavoritePush_descriptor_ = file->message_type(4);
  static const int THeroFavoritePush_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoritePush, herofavoritearr_),
  };
  THeroFavoritePush_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroFavoritePush_descriptor_,
      THeroFavoritePush::default_instance_,
      THeroFavoritePush_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoritePush, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoritePush, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroFavoritePush));
  THeroFavoriteTouchReq_descriptor_ = file->message_type(5);
  static const int THeroFavoriteTouchReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteTouchReq, hid_),
  };
  THeroFavoriteTouchReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroFavoriteTouchReq_descriptor_,
      THeroFavoriteTouchReq::default_instance_,
      THeroFavoriteTouchReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteTouchReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteTouchReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroFavoriteTouchReq));
  THeroFavoriteTouchRsp_descriptor_ = file->message_type(6);
  static const int THeroFavoriteTouchRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteTouchRsp, eventid_),
  };
  THeroFavoriteTouchRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroFavoriteTouchRsp_descriptor_,
      THeroFavoriteTouchRsp::default_instance_,
      THeroFavoriteTouchRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteTouchRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteTouchRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroFavoriteTouchRsp));
  THeroFavoriteDialogChooseReq_descriptor_ = file->message_type(7);
  static const int THeroFavoriteDialogChooseReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteDialogChooseReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteDialogChooseReq, dialogid_),
  };
  THeroFavoriteDialogChooseReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroFavoriteDialogChooseReq_descriptor_,
      THeroFavoriteDialogChooseReq::default_instance_,
      THeroFavoriteDialogChooseReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteDialogChooseReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteDialogChooseReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroFavoriteDialogChooseReq));
  THeroFavoriteGetAppearSingle_descriptor_ = file->message_type(8);
  static const int THeroFavoriteGetAppearSingle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGetAppearSingle, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGetAppearSingle, eventid_),
  };
  THeroFavoriteGetAppearSingle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroFavoriteGetAppearSingle_descriptor_,
      THeroFavoriteGetAppearSingle::default_instance_,
      THeroFavoriteGetAppearSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGetAppearSingle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGetAppearSingle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroFavoriteGetAppearSingle));
  THeroFavoriteGetAppearHidRsp_descriptor_ = file->message_type(9);
  static const int THeroFavoriteGetAppearHidRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGetAppearHidRsp, appeararr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGetAppearHidRsp, refreshtime_),
  };
  THeroFavoriteGetAppearHidRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      THeroFavoriteGetAppearHidRsp_descriptor_,
      THeroFavoriteGetAppearHidRsp::default_instance_,
      THeroFavoriteGetAppearHidRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGetAppearHidRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(THeroFavoriteGetAppearHidRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(THeroFavoriteGetAppearHidRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fHeroFavorite_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroFavoriteSingle_descriptor_, &THeroFavoriteSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroFavoriteGetFavoriteInfoRsp_descriptor_, &THeroFavoriteGetFavoriteInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroFavoriteGift_descriptor_, &THeroFavoriteGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroFavoriteGiveGiftReq_descriptor_, &THeroFavoriteGiveGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroFavoritePush_descriptor_, &THeroFavoritePush::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroFavoriteTouchReq_descriptor_, &THeroFavoriteTouchReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroFavoriteTouchRsp_descriptor_, &THeroFavoriteTouchRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroFavoriteDialogChooseReq_descriptor_, &THeroFavoriteDialogChooseReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroFavoriteGetAppearSingle_descriptor_, &THeroFavoriteGetAppearSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    THeroFavoriteGetAppearHidRsp_descriptor_, &THeroFavoriteGetAppearHidRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fHeroFavorite_2eproto() {
  delete THeroFavoriteSingle::default_instance_;
  delete THeroFavoriteSingle_reflection_;
  delete THeroFavoriteGetFavoriteInfoRsp::default_instance_;
  delete THeroFavoriteGetFavoriteInfoRsp_reflection_;
  delete THeroFavoriteGift::default_instance_;
  delete THeroFavoriteGift_reflection_;
  delete THeroFavoriteGiveGiftReq::default_instance_;
  delete THeroFavoriteGiveGiftReq_reflection_;
  delete THeroFavoritePush::default_instance_;
  delete THeroFavoritePush_reflection_;
  delete THeroFavoriteTouchReq::default_instance_;
  delete THeroFavoriteTouchReq_reflection_;
  delete THeroFavoriteTouchRsp::default_instance_;
  delete THeroFavoriteTouchRsp_reflection_;
  delete THeroFavoriteDialogChooseReq::default_instance_;
  delete THeroFavoriteDialogChooseReq_reflection_;
  delete THeroFavoriteGetAppearSingle::default_instance_;
  delete THeroFavoriteGetAppearSingle_reflection_;
  delete THeroFavoriteGetAppearHidRsp::default_instance_;
  delete THeroFavoriteGetAppearHidRsp_reflection_;
}

void protobuf_AddDesc_net_2fHeroFavorite_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026net/HeroFavorite.proto\022\002pb\"K\n\023THeroFav"
    "oriteSingle\022\013\n\003Hid\030\001 \001(\r\022\022\n\nFavoriteLv\030\002"
    " \001(\r\022\023\n\013FavoriteExp\030\003 \001(\r\"S\n\037THeroFavori"
    "teGetFavoriteInfoRsp\0220\n\017HeroFavoriteArr\030"
    "\001 \003(\0132\027.pb.THeroFavoriteSingle\"-\n\021THeroF"
    "avoriteGift\022\013\n\003Tid\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\"O\n"
    "\030THeroFavoriteGiveGiftReq\022\013\n\003Hid\030\001 \001(\r\022&"
    "\n\007GiftArr\030\002 \003(\0132\025.pb.THeroFavoriteGift\"E"
    "\n\021THeroFavoritePush\0220\n\017HeroFavoriteArr\030\001"
    " \003(\0132\027.pb.THeroFavoriteSingle\"$\n\025THeroFa"
    "voriteTouchReq\022\013\n\003Hid\030\001 \001(\r\"(\n\025THeroFavo"
    "riteTouchRsp\022\017\n\007EventId\030\001 \001(\r\"=\n\034THeroFa"
    "voriteDialogChooseReq\022\013\n\003Hid\030\001 \001(\r\022\020\n\010Di"
    "alogId\030\002 \001(\r\"<\n\034THeroFavoriteGetAppearSi"
    "ngle\022\013\n\003Hid\030\001 \001(\r\022\017\n\007EventId\030\002 \001(\r\"h\n\034TH"
    "eroFavoriteGetAppearHidRsp\0223\n\tAppearArr\030"
    "\001 \003(\0132 .pb.THeroFavoriteGetAppearSingle\022"
    "\023\n\013RefreshTime\030\002 \001(\004", 700);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/HeroFavorite.proto", &protobuf_RegisterTypes);
  THeroFavoriteSingle::default_instance_ = new THeroFavoriteSingle();
  THeroFavoriteGetFavoriteInfoRsp::default_instance_ = new THeroFavoriteGetFavoriteInfoRsp();
  THeroFavoriteGift::default_instance_ = new THeroFavoriteGift();
  THeroFavoriteGiveGiftReq::default_instance_ = new THeroFavoriteGiveGiftReq();
  THeroFavoritePush::default_instance_ = new THeroFavoritePush();
  THeroFavoriteTouchReq::default_instance_ = new THeroFavoriteTouchReq();
  THeroFavoriteTouchRsp::default_instance_ = new THeroFavoriteTouchRsp();
  THeroFavoriteDialogChooseReq::default_instance_ = new THeroFavoriteDialogChooseReq();
  THeroFavoriteGetAppearSingle::default_instance_ = new THeroFavoriteGetAppearSingle();
  THeroFavoriteGetAppearHidRsp::default_instance_ = new THeroFavoriteGetAppearHidRsp();
  THeroFavoriteSingle::default_instance_->InitAsDefaultInstance();
  THeroFavoriteGetFavoriteInfoRsp::default_instance_->InitAsDefaultInstance();
  THeroFavoriteGift::default_instance_->InitAsDefaultInstance();
  THeroFavoriteGiveGiftReq::default_instance_->InitAsDefaultInstance();
  THeroFavoritePush::default_instance_->InitAsDefaultInstance();
  THeroFavoriteTouchReq::default_instance_->InitAsDefaultInstance();
  THeroFavoriteTouchRsp::default_instance_->InitAsDefaultInstance();
  THeroFavoriteDialogChooseReq::default_instance_->InitAsDefaultInstance();
  THeroFavoriteGetAppearSingle::default_instance_->InitAsDefaultInstance();
  THeroFavoriteGetAppearHidRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fHeroFavorite_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fHeroFavorite_2eproto {
  StaticDescriptorInitializer_net_2fHeroFavorite_2eproto() {
    protobuf_AddDesc_net_2fHeroFavorite_2eproto();
  }
} static_descriptor_initializer_net_2fHeroFavorite_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int THeroFavoriteSingle::kHidFieldNumber;
const int THeroFavoriteSingle::kFavoriteLvFieldNumber;
const int THeroFavoriteSingle::kFavoriteExpFieldNumber;
#endif  // !_MSC_VER

THeroFavoriteSingle::THeroFavoriteSingle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroFavoriteSingle)
}

void THeroFavoriteSingle::InitAsDefaultInstance() {
}

THeroFavoriteSingle::THeroFavoriteSingle(const THeroFavoriteSingle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroFavoriteSingle)
}

void THeroFavoriteSingle::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  favoritelv_ = 0u;
  favoriteexp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroFavoriteSingle::~THeroFavoriteSingle() {
  // @@protoc_insertion_point(destructor:pb.THeroFavoriteSingle)
  SharedDtor();
}

void THeroFavoriteSingle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroFavoriteSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroFavoriteSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroFavoriteSingle_descriptor_;
}

const THeroFavoriteSingle& THeroFavoriteSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHeroFavorite_2eproto();
  return *default_instance_;
}

THeroFavoriteSingle* THeroFavoriteSingle::default_instance_ = NULL;

THeroFavoriteSingle* THeroFavoriteSingle::New() const {
  return new THeroFavoriteSingle;
}

void THeroFavoriteSingle::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroFavoriteSingle*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, favoriteexp_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroFavoriteSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroFavoriteSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FavoriteLv;
        break;
      }

      // optional uint32 FavoriteLv = 2;
      case 2: {
        if (tag == 16) {
         parse_FavoriteLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &favoritelv_)));
          set_has_favoritelv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_FavoriteExp;
        break;
      }

      // optional uint32 FavoriteExp = 3;
      case 3: {
        if (tag == 24) {
         parse_FavoriteExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &favoriteexp_)));
          set_has_favoriteexp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroFavoriteSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroFavoriteSingle)
  return false;
#undef DO_
}

void THeroFavoriteSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroFavoriteSingle)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 FavoriteLv = 2;
  if (has_favoritelv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->favoritelv(), output);
  }

  // optional uint32 FavoriteExp = 3;
  if (has_favoriteexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->favoriteexp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroFavoriteSingle)
}

::google::protobuf::uint8* THeroFavoriteSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroFavoriteSingle)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 FavoriteLv = 2;
  if (has_favoritelv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->favoritelv(), target);
  }

  // optional uint32 FavoriteExp = 3;
  if (has_favoriteexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->favoriteexp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroFavoriteSingle)
  return target;
}

int THeroFavoriteSingle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 FavoriteLv = 2;
    if (has_favoritelv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->favoritelv());
    }

    // optional uint32 FavoriteExp = 3;
    if (has_favoriteexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->favoriteexp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroFavoriteSingle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroFavoriteSingle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroFavoriteSingle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroFavoriteSingle::MergeFrom(const THeroFavoriteSingle& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_favoritelv()) {
      set_favoritelv(from.favoritelv());
    }
    if (from.has_favoriteexp()) {
      set_favoriteexp(from.favoriteexp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroFavoriteSingle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroFavoriteSingle::CopyFrom(const THeroFavoriteSingle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroFavoriteSingle::IsInitialized() const {

  return true;
}

void THeroFavoriteSingle::Swap(THeroFavoriteSingle* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(favoritelv_, other->favoritelv_);
    std::swap(favoriteexp_, other->favoriteexp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroFavoriteSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroFavoriteSingle_descriptor_;
  metadata.reflection = THeroFavoriteSingle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroFavoriteGetFavoriteInfoRsp::kHeroFavoriteArrFieldNumber;
#endif  // !_MSC_VER

THeroFavoriteGetFavoriteInfoRsp::THeroFavoriteGetFavoriteInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroFavoriteGetFavoriteInfoRsp)
}

void THeroFavoriteGetFavoriteInfoRsp::InitAsDefaultInstance() {
}

THeroFavoriteGetFavoriteInfoRsp::THeroFavoriteGetFavoriteInfoRsp(const THeroFavoriteGetFavoriteInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroFavoriteGetFavoriteInfoRsp)
}

void THeroFavoriteGetFavoriteInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroFavoriteGetFavoriteInfoRsp::~THeroFavoriteGetFavoriteInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.THeroFavoriteGetFavoriteInfoRsp)
  SharedDtor();
}

void THeroFavoriteGetFavoriteInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroFavoriteGetFavoriteInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroFavoriteGetFavoriteInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroFavoriteGetFavoriteInfoRsp_descriptor_;
}

const THeroFavoriteGetFavoriteInfoRsp& THeroFavoriteGetFavoriteInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHeroFavorite_2eproto();
  return *default_instance_;
}

THeroFavoriteGetFavoriteInfoRsp* THeroFavoriteGetFavoriteInfoRsp::default_instance_ = NULL;

THeroFavoriteGetFavoriteInfoRsp* THeroFavoriteGetFavoriteInfoRsp::New() const {
  return new THeroFavoriteGetFavoriteInfoRsp;
}

void THeroFavoriteGetFavoriteInfoRsp::Clear() {
  herofavoritearr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroFavoriteGetFavoriteInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroFavoriteGetFavoriteInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.THeroFavoriteSingle HeroFavoriteArr = 1;
      case 1: {
        if (tag == 10) {
         parse_HeroFavoriteArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_herofavoritearr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_HeroFavoriteArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroFavoriteGetFavoriteInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroFavoriteGetFavoriteInfoRsp)
  return false;
#undef DO_
}

void THeroFavoriteGetFavoriteInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroFavoriteGetFavoriteInfoRsp)
  // repeated .pb.THeroFavoriteSingle HeroFavoriteArr = 1;
  for (int i = 0; i < this->herofavoritearr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->herofavoritearr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroFavoriteGetFavoriteInfoRsp)
}

::google::protobuf::uint8* THeroFavoriteGetFavoriteInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroFavoriteGetFavoriteInfoRsp)
  // repeated .pb.THeroFavoriteSingle HeroFavoriteArr = 1;
  for (int i = 0; i < this->herofavoritearr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->herofavoritearr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroFavoriteGetFavoriteInfoRsp)
  return target;
}

int THeroFavoriteGetFavoriteInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.THeroFavoriteSingle HeroFavoriteArr = 1;
  total_size += 1 * this->herofavoritearr_size();
  for (int i = 0; i < this->herofavoritearr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->herofavoritearr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroFavoriteGetFavoriteInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroFavoriteGetFavoriteInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroFavoriteGetFavoriteInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroFavoriteGetFavoriteInfoRsp::MergeFrom(const THeroFavoriteGetFavoriteInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  herofavoritearr_.MergeFrom(from.herofavoritearr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroFavoriteGetFavoriteInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroFavoriteGetFavoriteInfoRsp::CopyFrom(const THeroFavoriteGetFavoriteInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroFavoriteGetFavoriteInfoRsp::IsInitialized() const {

  return true;
}

void THeroFavoriteGetFavoriteInfoRsp::Swap(THeroFavoriteGetFavoriteInfoRsp* other) {
  if (other != this) {
    herofavoritearr_.Swap(&other->herofavoritearr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroFavoriteGetFavoriteInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroFavoriteGetFavoriteInfoRsp_descriptor_;
  metadata.reflection = THeroFavoriteGetFavoriteInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroFavoriteGift::kTidFieldNumber;
const int THeroFavoriteGift::kNumFieldNumber;
#endif  // !_MSC_VER

THeroFavoriteGift::THeroFavoriteGift()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroFavoriteGift)
}

void THeroFavoriteGift::InitAsDefaultInstance() {
}

THeroFavoriteGift::THeroFavoriteGift(const THeroFavoriteGift& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroFavoriteGift)
}

void THeroFavoriteGift::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroFavoriteGift::~THeroFavoriteGift() {
  // @@protoc_insertion_point(destructor:pb.THeroFavoriteGift)
  SharedDtor();
}

void THeroFavoriteGift::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroFavoriteGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroFavoriteGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroFavoriteGift_descriptor_;
}

const THeroFavoriteGift& THeroFavoriteGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHeroFavorite_2eproto();
  return *default_instance_;
}

THeroFavoriteGift* THeroFavoriteGift::default_instance_ = NULL;

THeroFavoriteGift* THeroFavoriteGift::New() const {
  return new THeroFavoriteGift;
}

void THeroFavoriteGift::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroFavoriteGift*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroFavoriteGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroFavoriteGift)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroFavoriteGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroFavoriteGift)
  return false;
#undef DO_
}

void THeroFavoriteGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroFavoriteGift)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroFavoriteGift)
}

::google::protobuf::uint8* THeroFavoriteGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroFavoriteGift)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroFavoriteGift)
  return target;
}

int THeroFavoriteGift::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroFavoriteGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroFavoriteGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroFavoriteGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroFavoriteGift::MergeFrom(const THeroFavoriteGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroFavoriteGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroFavoriteGift::CopyFrom(const THeroFavoriteGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroFavoriteGift::IsInitialized() const {

  return true;
}

void THeroFavoriteGift::Swap(THeroFavoriteGift* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroFavoriteGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroFavoriteGift_descriptor_;
  metadata.reflection = THeroFavoriteGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroFavoriteGiveGiftReq::kHidFieldNumber;
const int THeroFavoriteGiveGiftReq::kGiftArrFieldNumber;
#endif  // !_MSC_VER

THeroFavoriteGiveGiftReq::THeroFavoriteGiveGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroFavoriteGiveGiftReq)
}

void THeroFavoriteGiveGiftReq::InitAsDefaultInstance() {
}

THeroFavoriteGiveGiftReq::THeroFavoriteGiveGiftReq(const THeroFavoriteGiveGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroFavoriteGiveGiftReq)
}

void THeroFavoriteGiveGiftReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroFavoriteGiveGiftReq::~THeroFavoriteGiveGiftReq() {
  // @@protoc_insertion_point(destructor:pb.THeroFavoriteGiveGiftReq)
  SharedDtor();
}

void THeroFavoriteGiveGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroFavoriteGiveGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroFavoriteGiveGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroFavoriteGiveGiftReq_descriptor_;
}

const THeroFavoriteGiveGiftReq& THeroFavoriteGiveGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHeroFavorite_2eproto();
  return *default_instance_;
}

THeroFavoriteGiveGiftReq* THeroFavoriteGiveGiftReq::default_instance_ = NULL;

THeroFavoriteGiveGiftReq* THeroFavoriteGiveGiftReq::New() const {
  return new THeroFavoriteGiveGiftReq;
}

void THeroFavoriteGiveGiftReq::Clear() {
  hid_ = 0u;
  giftarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroFavoriteGiveGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroFavoriteGiveGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_GiftArr;
        break;
      }

      // repeated .pb.THeroFavoriteGift GiftArr = 2;
      case 2: {
        if (tag == 18) {
         parse_GiftArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_giftarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_GiftArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroFavoriteGiveGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroFavoriteGiveGiftReq)
  return false;
#undef DO_
}

void THeroFavoriteGiveGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroFavoriteGiveGiftReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // repeated .pb.THeroFavoriteGift GiftArr = 2;
  for (int i = 0; i < this->giftarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->giftarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroFavoriteGiveGiftReq)
}

::google::protobuf::uint8* THeroFavoriteGiveGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroFavoriteGiveGiftReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // repeated .pb.THeroFavoriteGift GiftArr = 2;
  for (int i = 0; i < this->giftarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->giftarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroFavoriteGiveGiftReq)
  return target;
}

int THeroFavoriteGiveGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  // repeated .pb.THeroFavoriteGift GiftArr = 2;
  total_size += 1 * this->giftarr_size();
  for (int i = 0; i < this->giftarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->giftarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroFavoriteGiveGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroFavoriteGiveGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroFavoriteGiveGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroFavoriteGiveGiftReq::MergeFrom(const THeroFavoriteGiveGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  giftarr_.MergeFrom(from.giftarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroFavoriteGiveGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroFavoriteGiveGiftReq::CopyFrom(const THeroFavoriteGiveGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroFavoriteGiveGiftReq::IsInitialized() const {

  return true;
}

void THeroFavoriteGiveGiftReq::Swap(THeroFavoriteGiveGiftReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    giftarr_.Swap(&other->giftarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroFavoriteGiveGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroFavoriteGiveGiftReq_descriptor_;
  metadata.reflection = THeroFavoriteGiveGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroFavoritePush::kHeroFavoriteArrFieldNumber;
#endif  // !_MSC_VER

THeroFavoritePush::THeroFavoritePush()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroFavoritePush)
}

void THeroFavoritePush::InitAsDefaultInstance() {
}

THeroFavoritePush::THeroFavoritePush(const THeroFavoritePush& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroFavoritePush)
}

void THeroFavoritePush::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroFavoritePush::~THeroFavoritePush() {
  // @@protoc_insertion_point(destructor:pb.THeroFavoritePush)
  SharedDtor();
}

void THeroFavoritePush::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroFavoritePush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroFavoritePush::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroFavoritePush_descriptor_;
}

const THeroFavoritePush& THeroFavoritePush::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHeroFavorite_2eproto();
  return *default_instance_;
}

THeroFavoritePush* THeroFavoritePush::default_instance_ = NULL;

THeroFavoritePush* THeroFavoritePush::New() const {
  return new THeroFavoritePush;
}

void THeroFavoritePush::Clear() {
  herofavoritearr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroFavoritePush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroFavoritePush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.THeroFavoriteSingle HeroFavoriteArr = 1;
      case 1: {
        if (tag == 10) {
         parse_HeroFavoriteArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_herofavoritearr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_HeroFavoriteArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroFavoritePush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroFavoritePush)
  return false;
#undef DO_
}

void THeroFavoritePush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroFavoritePush)
  // repeated .pb.THeroFavoriteSingle HeroFavoriteArr = 1;
  for (int i = 0; i < this->herofavoritearr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->herofavoritearr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroFavoritePush)
}

::google::protobuf::uint8* THeroFavoritePush::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroFavoritePush)
  // repeated .pb.THeroFavoriteSingle HeroFavoriteArr = 1;
  for (int i = 0; i < this->herofavoritearr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->herofavoritearr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroFavoritePush)
  return target;
}

int THeroFavoritePush::ByteSize() const {
  int total_size = 0;

  // repeated .pb.THeroFavoriteSingle HeroFavoriteArr = 1;
  total_size += 1 * this->herofavoritearr_size();
  for (int i = 0; i < this->herofavoritearr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->herofavoritearr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroFavoritePush::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroFavoritePush* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroFavoritePush*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroFavoritePush::MergeFrom(const THeroFavoritePush& from) {
  GOOGLE_CHECK_NE(&from, this);
  herofavoritearr_.MergeFrom(from.herofavoritearr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroFavoritePush::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroFavoritePush::CopyFrom(const THeroFavoritePush& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroFavoritePush::IsInitialized() const {

  return true;
}

void THeroFavoritePush::Swap(THeroFavoritePush* other) {
  if (other != this) {
    herofavoritearr_.Swap(&other->herofavoritearr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroFavoritePush::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroFavoritePush_descriptor_;
  metadata.reflection = THeroFavoritePush_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroFavoriteTouchReq::kHidFieldNumber;
#endif  // !_MSC_VER

THeroFavoriteTouchReq::THeroFavoriteTouchReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroFavoriteTouchReq)
}

void THeroFavoriteTouchReq::InitAsDefaultInstance() {
}

THeroFavoriteTouchReq::THeroFavoriteTouchReq(const THeroFavoriteTouchReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroFavoriteTouchReq)
}

void THeroFavoriteTouchReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroFavoriteTouchReq::~THeroFavoriteTouchReq() {
  // @@protoc_insertion_point(destructor:pb.THeroFavoriteTouchReq)
  SharedDtor();
}

void THeroFavoriteTouchReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroFavoriteTouchReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroFavoriteTouchReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroFavoriteTouchReq_descriptor_;
}

const THeroFavoriteTouchReq& THeroFavoriteTouchReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHeroFavorite_2eproto();
  return *default_instance_;
}

THeroFavoriteTouchReq* THeroFavoriteTouchReq::default_instance_ = NULL;

THeroFavoriteTouchReq* THeroFavoriteTouchReq::New() const {
  return new THeroFavoriteTouchReq;
}

void THeroFavoriteTouchReq::Clear() {
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroFavoriteTouchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroFavoriteTouchReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroFavoriteTouchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroFavoriteTouchReq)
  return false;
#undef DO_
}

void THeroFavoriteTouchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroFavoriteTouchReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroFavoriteTouchReq)
}

::google::protobuf::uint8* THeroFavoriteTouchReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroFavoriteTouchReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroFavoriteTouchReq)
  return target;
}

int THeroFavoriteTouchReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroFavoriteTouchReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroFavoriteTouchReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroFavoriteTouchReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroFavoriteTouchReq::MergeFrom(const THeroFavoriteTouchReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroFavoriteTouchReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroFavoriteTouchReq::CopyFrom(const THeroFavoriteTouchReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroFavoriteTouchReq::IsInitialized() const {

  return true;
}

void THeroFavoriteTouchReq::Swap(THeroFavoriteTouchReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroFavoriteTouchReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroFavoriteTouchReq_descriptor_;
  metadata.reflection = THeroFavoriteTouchReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroFavoriteTouchRsp::kEventIdFieldNumber;
#endif  // !_MSC_VER

THeroFavoriteTouchRsp::THeroFavoriteTouchRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroFavoriteTouchRsp)
}

void THeroFavoriteTouchRsp::InitAsDefaultInstance() {
}

THeroFavoriteTouchRsp::THeroFavoriteTouchRsp(const THeroFavoriteTouchRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroFavoriteTouchRsp)
}

void THeroFavoriteTouchRsp::SharedCtor() {
  _cached_size_ = 0;
  eventid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroFavoriteTouchRsp::~THeroFavoriteTouchRsp() {
  // @@protoc_insertion_point(destructor:pb.THeroFavoriteTouchRsp)
  SharedDtor();
}

void THeroFavoriteTouchRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroFavoriteTouchRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroFavoriteTouchRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroFavoriteTouchRsp_descriptor_;
}

const THeroFavoriteTouchRsp& THeroFavoriteTouchRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHeroFavorite_2eproto();
  return *default_instance_;
}

THeroFavoriteTouchRsp* THeroFavoriteTouchRsp::default_instance_ = NULL;

THeroFavoriteTouchRsp* THeroFavoriteTouchRsp::New() const {
  return new THeroFavoriteTouchRsp;
}

void THeroFavoriteTouchRsp::Clear() {
  eventid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroFavoriteTouchRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroFavoriteTouchRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EventId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eventid_)));
          set_has_eventid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroFavoriteTouchRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroFavoriteTouchRsp)
  return false;
#undef DO_
}

void THeroFavoriteTouchRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroFavoriteTouchRsp)
  // optional uint32 EventId = 1;
  if (has_eventid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eventid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroFavoriteTouchRsp)
}

::google::protobuf::uint8* THeroFavoriteTouchRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroFavoriteTouchRsp)
  // optional uint32 EventId = 1;
  if (has_eventid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eventid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroFavoriteTouchRsp)
  return target;
}

int THeroFavoriteTouchRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 EventId = 1;
    if (has_eventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eventid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroFavoriteTouchRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroFavoriteTouchRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroFavoriteTouchRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroFavoriteTouchRsp::MergeFrom(const THeroFavoriteTouchRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eventid()) {
      set_eventid(from.eventid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroFavoriteTouchRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroFavoriteTouchRsp::CopyFrom(const THeroFavoriteTouchRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroFavoriteTouchRsp::IsInitialized() const {

  return true;
}

void THeroFavoriteTouchRsp::Swap(THeroFavoriteTouchRsp* other) {
  if (other != this) {
    std::swap(eventid_, other->eventid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroFavoriteTouchRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroFavoriteTouchRsp_descriptor_;
  metadata.reflection = THeroFavoriteTouchRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroFavoriteDialogChooseReq::kHidFieldNumber;
const int THeroFavoriteDialogChooseReq::kDialogIdFieldNumber;
#endif  // !_MSC_VER

THeroFavoriteDialogChooseReq::THeroFavoriteDialogChooseReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroFavoriteDialogChooseReq)
}

void THeroFavoriteDialogChooseReq::InitAsDefaultInstance() {
}

THeroFavoriteDialogChooseReq::THeroFavoriteDialogChooseReq(const THeroFavoriteDialogChooseReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroFavoriteDialogChooseReq)
}

void THeroFavoriteDialogChooseReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  dialogid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroFavoriteDialogChooseReq::~THeroFavoriteDialogChooseReq() {
  // @@protoc_insertion_point(destructor:pb.THeroFavoriteDialogChooseReq)
  SharedDtor();
}

void THeroFavoriteDialogChooseReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroFavoriteDialogChooseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroFavoriteDialogChooseReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroFavoriteDialogChooseReq_descriptor_;
}

const THeroFavoriteDialogChooseReq& THeroFavoriteDialogChooseReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHeroFavorite_2eproto();
  return *default_instance_;
}

THeroFavoriteDialogChooseReq* THeroFavoriteDialogChooseReq::default_instance_ = NULL;

THeroFavoriteDialogChooseReq* THeroFavoriteDialogChooseReq::New() const {
  return new THeroFavoriteDialogChooseReq;
}

void THeroFavoriteDialogChooseReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroFavoriteDialogChooseReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, dialogid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroFavoriteDialogChooseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroFavoriteDialogChooseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DialogId;
        break;
      }

      // optional uint32 DialogId = 2;
      case 2: {
        if (tag == 16) {
         parse_DialogId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dialogid_)));
          set_has_dialogid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroFavoriteDialogChooseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroFavoriteDialogChooseReq)
  return false;
#undef DO_
}

void THeroFavoriteDialogChooseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroFavoriteDialogChooseReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 DialogId = 2;
  if (has_dialogid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dialogid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroFavoriteDialogChooseReq)
}

::google::protobuf::uint8* THeroFavoriteDialogChooseReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroFavoriteDialogChooseReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 DialogId = 2;
  if (has_dialogid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dialogid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroFavoriteDialogChooseReq)
  return target;
}

int THeroFavoriteDialogChooseReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 DialogId = 2;
    if (has_dialogid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dialogid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroFavoriteDialogChooseReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroFavoriteDialogChooseReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroFavoriteDialogChooseReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroFavoriteDialogChooseReq::MergeFrom(const THeroFavoriteDialogChooseReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_dialogid()) {
      set_dialogid(from.dialogid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroFavoriteDialogChooseReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroFavoriteDialogChooseReq::CopyFrom(const THeroFavoriteDialogChooseReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroFavoriteDialogChooseReq::IsInitialized() const {

  return true;
}

void THeroFavoriteDialogChooseReq::Swap(THeroFavoriteDialogChooseReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(dialogid_, other->dialogid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroFavoriteDialogChooseReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroFavoriteDialogChooseReq_descriptor_;
  metadata.reflection = THeroFavoriteDialogChooseReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroFavoriteGetAppearSingle::kHidFieldNumber;
const int THeroFavoriteGetAppearSingle::kEventIdFieldNumber;
#endif  // !_MSC_VER

THeroFavoriteGetAppearSingle::THeroFavoriteGetAppearSingle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroFavoriteGetAppearSingle)
}

void THeroFavoriteGetAppearSingle::InitAsDefaultInstance() {
}

THeroFavoriteGetAppearSingle::THeroFavoriteGetAppearSingle(const THeroFavoriteGetAppearSingle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroFavoriteGetAppearSingle)
}

void THeroFavoriteGetAppearSingle::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  eventid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroFavoriteGetAppearSingle::~THeroFavoriteGetAppearSingle() {
  // @@protoc_insertion_point(destructor:pb.THeroFavoriteGetAppearSingle)
  SharedDtor();
}

void THeroFavoriteGetAppearSingle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroFavoriteGetAppearSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroFavoriteGetAppearSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroFavoriteGetAppearSingle_descriptor_;
}

const THeroFavoriteGetAppearSingle& THeroFavoriteGetAppearSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHeroFavorite_2eproto();
  return *default_instance_;
}

THeroFavoriteGetAppearSingle* THeroFavoriteGetAppearSingle::default_instance_ = NULL;

THeroFavoriteGetAppearSingle* THeroFavoriteGetAppearSingle::New() const {
  return new THeroFavoriteGetAppearSingle;
}

void THeroFavoriteGetAppearSingle::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<THeroFavoriteGetAppearSingle*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, eventid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroFavoriteGetAppearSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroFavoriteGetAppearSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_EventId;
        break;
      }

      // optional uint32 EventId = 2;
      case 2: {
        if (tag == 16) {
         parse_EventId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eventid_)));
          set_has_eventid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroFavoriteGetAppearSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroFavoriteGetAppearSingle)
  return false;
#undef DO_
}

void THeroFavoriteGetAppearSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroFavoriteGetAppearSingle)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 EventId = 2;
  if (has_eventid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eventid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroFavoriteGetAppearSingle)
}

::google::protobuf::uint8* THeroFavoriteGetAppearSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroFavoriteGetAppearSingle)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 EventId = 2;
  if (has_eventid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eventid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroFavoriteGetAppearSingle)
  return target;
}

int THeroFavoriteGetAppearSingle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 EventId = 2;
    if (has_eventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eventid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroFavoriteGetAppearSingle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroFavoriteGetAppearSingle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroFavoriteGetAppearSingle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroFavoriteGetAppearSingle::MergeFrom(const THeroFavoriteGetAppearSingle& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_eventid()) {
      set_eventid(from.eventid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroFavoriteGetAppearSingle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroFavoriteGetAppearSingle::CopyFrom(const THeroFavoriteGetAppearSingle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroFavoriteGetAppearSingle::IsInitialized() const {

  return true;
}

void THeroFavoriteGetAppearSingle::Swap(THeroFavoriteGetAppearSingle* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(eventid_, other->eventid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroFavoriteGetAppearSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroFavoriteGetAppearSingle_descriptor_;
  metadata.reflection = THeroFavoriteGetAppearSingle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int THeroFavoriteGetAppearHidRsp::kAppearArrFieldNumber;
const int THeroFavoriteGetAppearHidRsp::kRefreshTimeFieldNumber;
#endif  // !_MSC_VER

THeroFavoriteGetAppearHidRsp::THeroFavoriteGetAppearHidRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.THeroFavoriteGetAppearHidRsp)
}

void THeroFavoriteGetAppearHidRsp::InitAsDefaultInstance() {
}

THeroFavoriteGetAppearHidRsp::THeroFavoriteGetAppearHidRsp(const THeroFavoriteGetAppearHidRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.THeroFavoriteGetAppearHidRsp)
}

void THeroFavoriteGetAppearHidRsp::SharedCtor() {
  _cached_size_ = 0;
  refreshtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

THeroFavoriteGetAppearHidRsp::~THeroFavoriteGetAppearHidRsp() {
  // @@protoc_insertion_point(destructor:pb.THeroFavoriteGetAppearHidRsp)
  SharedDtor();
}

void THeroFavoriteGetAppearHidRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void THeroFavoriteGetAppearHidRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* THeroFavoriteGetAppearHidRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return THeroFavoriteGetAppearHidRsp_descriptor_;
}

const THeroFavoriteGetAppearHidRsp& THeroFavoriteGetAppearHidRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fHeroFavorite_2eproto();
  return *default_instance_;
}

THeroFavoriteGetAppearHidRsp* THeroFavoriteGetAppearHidRsp::default_instance_ = NULL;

THeroFavoriteGetAppearHidRsp* THeroFavoriteGetAppearHidRsp::New() const {
  return new THeroFavoriteGetAppearHidRsp;
}

void THeroFavoriteGetAppearHidRsp::Clear() {
  refreshtime_ = GOOGLE_ULONGLONG(0);
  appeararr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool THeroFavoriteGetAppearHidRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.THeroFavoriteGetAppearHidRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.THeroFavoriteGetAppearSingle AppearArr = 1;
      case 1: {
        if (tag == 10) {
         parse_AppearArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_appeararr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_AppearArr;
        if (input->ExpectTag(16)) goto parse_RefreshTime;
        break;
      }

      // optional uint64 RefreshTime = 2;
      case 2: {
        if (tag == 16) {
         parse_RefreshTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &refreshtime_)));
          set_has_refreshtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.THeroFavoriteGetAppearHidRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.THeroFavoriteGetAppearHidRsp)
  return false;
#undef DO_
}

void THeroFavoriteGetAppearHidRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.THeroFavoriteGetAppearHidRsp)
  // repeated .pb.THeroFavoriteGetAppearSingle AppearArr = 1;
  for (int i = 0; i < this->appeararr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->appeararr(i), output);
  }

  // optional uint64 RefreshTime = 2;
  if (has_refreshtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->refreshtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.THeroFavoriteGetAppearHidRsp)
}

::google::protobuf::uint8* THeroFavoriteGetAppearHidRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.THeroFavoriteGetAppearHidRsp)
  // repeated .pb.THeroFavoriteGetAppearSingle AppearArr = 1;
  for (int i = 0; i < this->appeararr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->appeararr(i), target);
  }

  // optional uint64 RefreshTime = 2;
  if (has_refreshtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->refreshtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.THeroFavoriteGetAppearHidRsp)
  return target;
}

int THeroFavoriteGetAppearHidRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint64 RefreshTime = 2;
    if (has_refreshtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->refreshtime());
    }

  }
  // repeated .pb.THeroFavoriteGetAppearSingle AppearArr = 1;
  total_size += 1 * this->appeararr_size();
  for (int i = 0; i < this->appeararr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->appeararr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void THeroFavoriteGetAppearHidRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const THeroFavoriteGetAppearHidRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const THeroFavoriteGetAppearHidRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void THeroFavoriteGetAppearHidRsp::MergeFrom(const THeroFavoriteGetAppearHidRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  appeararr_.MergeFrom(from.appeararr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_refreshtime()) {
      set_refreshtime(from.refreshtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void THeroFavoriteGetAppearHidRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void THeroFavoriteGetAppearHidRsp::CopyFrom(const THeroFavoriteGetAppearHidRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THeroFavoriteGetAppearHidRsp::IsInitialized() const {

  return true;
}

void THeroFavoriteGetAppearHidRsp::Swap(THeroFavoriteGetAppearHidRsp* other) {
  if (other != this) {
    appeararr_.Swap(&other->appeararr_);
    std::swap(refreshtime_, other->refreshtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata THeroFavoriteGetAppearHidRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = THeroFavoriteGetAppearHidRsp_descriptor_;
  metadata.reflection = THeroFavoriteGetAppearHidRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
