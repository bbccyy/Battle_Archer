// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActLimitHeroGift.proto

#ifndef PROTOBUF_net_2fActLimitHeroGift_2eproto__INCLUDED
#define PROTOBUF_net_2fActLimitHeroGift_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
void protobuf_AssignDesc_net_2fActLimitHeroGift_2eproto();
void protobuf_ShutdownFile_net_2fActLimitHeroGift_2eproto();

class TActLimitHeroGiftTryOutReq;
class TActLimitHeroGiftExchangeReq;
class TActLimitHeroGiftGetInfoRsp;
class TActLimitHeroGiftBoughtGiftInfo;
class TActLimitHeroGiftExchangedHeroInfo;
class TActLimitHeroGiftRmbGoodsNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActLimitHeroGiftTryOutReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLimitHeroGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLimitHeroGiftTryOutReq : public ::google::protobuf::Message {
 public:
  TActLimitHeroGiftTryOutReq();
  virtual ~TActLimitHeroGiftTryOutReq();

  TActLimitHeroGiftTryOutReq(const TActLimitHeroGiftTryOutReq& from);

  inline TActLimitHeroGiftTryOutReq& operator=(const TActLimitHeroGiftTryOutReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLimitHeroGiftTryOutReq& default_instance();

  void Swap(TActLimitHeroGiftTryOutReq* other);

  // implements Message ----------------------------------------------

  TActLimitHeroGiftTryOutReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLimitHeroGiftTryOutReq& from);
  void MergeFrom(const TActLimitHeroGiftTryOutReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ExchangeId = 1;
  inline bool has_exchangeid() const;
  inline void clear_exchangeid();
  static const int kExchangeIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLimitHeroGiftTryOutReq</name>
  	<Function>
  		<name>exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 exchangeid() const;
  inline void set_exchangeid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActLimitHeroGiftTryOutReq)
 private:
  inline void set_has_exchangeid();
  inline void clear_has_exchangeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 exchangeid_;
  friend void  protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  friend void protobuf_AssignDesc_net_2fActLimitHeroGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLimitHeroGift_2eproto();

  void InitAsDefaultInstance();
  static TActLimitHeroGiftTryOutReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLimitHeroGiftExchangeReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLimitHeroGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLimitHeroGiftExchangeReq : public ::google::protobuf::Message {
 public:
  TActLimitHeroGiftExchangeReq();
  virtual ~TActLimitHeroGiftExchangeReq();

  TActLimitHeroGiftExchangeReq(const TActLimitHeroGiftExchangeReq& from);

  inline TActLimitHeroGiftExchangeReq& operator=(const TActLimitHeroGiftExchangeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLimitHeroGiftExchangeReq& default_instance();

  void Swap(TActLimitHeroGiftExchangeReq* other);

  // implements Message ----------------------------------------------

  TActLimitHeroGiftExchangeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLimitHeroGiftExchangeReq& from);
  void MergeFrom(const TActLimitHeroGiftExchangeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ExchangeId = 1;
  inline bool has_exchangeid() const;
  inline void clear_exchangeid();
  static const int kExchangeIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLimitHeroGiftExchangeReq</name>
  	<Function>
  		<name>exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 exchangeid() const;
  inline void set_exchangeid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActLimitHeroGiftExchangeReq)
 private:
  inline void set_has_exchangeid();
  inline void clear_has_exchangeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 exchangeid_;
  friend void  protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  friend void protobuf_AssignDesc_net_2fActLimitHeroGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLimitHeroGift_2eproto();

  void InitAsDefaultInstance();
  static TActLimitHeroGiftExchangeReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLimitHeroGiftGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLimitHeroGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLimitHeroGiftGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActLimitHeroGiftGetInfoRsp();
  virtual ~TActLimitHeroGiftGetInfoRsp();

  TActLimitHeroGiftGetInfoRsp(const TActLimitHeroGiftGetInfoRsp& from);

  inline TActLimitHeroGiftGetInfoRsp& operator=(const TActLimitHeroGiftGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLimitHeroGiftGetInfoRsp& default_instance();

  void Swap(TActLimitHeroGiftGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActLimitHeroGiftGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLimitHeroGiftGetInfoRsp& from);
  void MergeFrom(const TActLimitHeroGiftGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActLimitHeroGiftBoughtGiftInfo BoughtGiftInfoArr = 1;
  inline int boughtgiftinfoarr_size() const;
  inline void clear_boughtgiftinfoarr();
  static const int kBoughtGiftInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLimitHeroGiftGetInfoRsp</name>
  	<Function>
  		<name>boughtgiftinfoarr</name>
  		<replaceName>BoughtGiftInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_boughtgiftinfoarr</name>
  		<replaceName>BoughtGiftInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_boughtgiftinfoarr</name>
  		<replaceName>BoughtGiftInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boughtgiftinfoarr</name>
  		<replaceName>BoughtGiftInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>boughtgiftinfoarr_size</name>
  		<replaceName>BoughtGiftInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActLimitHeroGiftBoughtGiftInfo& boughtgiftinfoarr(int index) const;
  inline ::pb::TActLimitHeroGiftBoughtGiftInfo* mutable_boughtgiftinfoarr(int index);
  inline ::pb::TActLimitHeroGiftBoughtGiftInfo* add_boughtgiftinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftBoughtGiftInfo >&
      boughtgiftinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftBoughtGiftInfo >*
      mutable_boughtgiftinfoarr();

  // repeated .pb.TActLimitHeroGiftExchangedHeroInfo HeroInfoArr = 2;
  inline int heroinfoarr_size() const;
  inline void clear_heroinfoarr();
  static const int kHeroInfoArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActLimitHeroGiftGetInfoRsp</name>
  	<Function>
  		<name>heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_heroinfoarr</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>heroinfoarr_size</name>
  		<replaceName>HeroInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActLimitHeroGiftExchangedHeroInfo& heroinfoarr(int index) const;
  inline ::pb::TActLimitHeroGiftExchangedHeroInfo* mutable_heroinfoarr(int index);
  inline ::pb::TActLimitHeroGiftExchangedHeroInfo* add_heroinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftExchangedHeroInfo >&
      heroinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftExchangedHeroInfo >*
      mutable_heroinfoarr();

  // @@protoc_insertion_point(class_scope:pb.TActLimitHeroGiftGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftBoughtGiftInfo > boughtgiftinfoarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftExchangedHeroInfo > heroinfoarr_;
  friend void  protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  friend void protobuf_AssignDesc_net_2fActLimitHeroGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLimitHeroGift_2eproto();

  void InitAsDefaultInstance();
  static TActLimitHeroGiftGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLimitHeroGiftBoughtGiftInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLimitHeroGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLimitHeroGiftBoughtGiftInfo : public ::google::protobuf::Message {
 public:
  TActLimitHeroGiftBoughtGiftInfo();
  virtual ~TActLimitHeroGiftBoughtGiftInfo();

  TActLimitHeroGiftBoughtGiftInfo(const TActLimitHeroGiftBoughtGiftInfo& from);

  inline TActLimitHeroGiftBoughtGiftInfo& operator=(const TActLimitHeroGiftBoughtGiftInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLimitHeroGiftBoughtGiftInfo& default_instance();

  void Swap(TActLimitHeroGiftBoughtGiftInfo* other);

  // implements Message ----------------------------------------------

  TActLimitHeroGiftBoughtGiftInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLimitHeroGiftBoughtGiftInfo& from);
  void MergeFrom(const TActLimitHeroGiftBoughtGiftInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 GiftId = 1;
  inline bool has_giftid() const;
  inline void clear_giftid();
  static const int kGiftIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLimitHeroGiftBoughtGiftInfo</name>
  	<Function>
  		<name>giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 giftid() const;
  inline void set_giftid(::google::protobuf::uint32 value);

  // optional uint32 BoughtNum = 2;
  inline bool has_boughtnum() const;
  inline void clear_boughtnum();
  static const int kBoughtNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActLimitHeroGiftBoughtGiftInfo</name>
  	<Function>
  		<name>boughtnum</name>
  		<replaceName>BoughtNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boughtnum</name>
  		<replaceName>BoughtNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boughtnum</name>
  		<replaceName>BoughtNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 boughtnum() const;
  inline void set_boughtnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActLimitHeroGiftBoughtGiftInfo)
 private:
  inline void set_has_giftid();
  inline void clear_has_giftid();
  inline void set_has_boughtnum();
  inline void clear_has_boughtnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 giftid_;
  ::google::protobuf::uint32 boughtnum_;
  friend void  protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  friend void protobuf_AssignDesc_net_2fActLimitHeroGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLimitHeroGift_2eproto();

  void InitAsDefaultInstance();
  static TActLimitHeroGiftBoughtGiftInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLimitHeroGiftExchangedHeroInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLimitHeroGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLimitHeroGiftExchangedHeroInfo : public ::google::protobuf::Message {
 public:
  TActLimitHeroGiftExchangedHeroInfo();
  virtual ~TActLimitHeroGiftExchangedHeroInfo();

  TActLimitHeroGiftExchangedHeroInfo(const TActLimitHeroGiftExchangedHeroInfo& from);

  inline TActLimitHeroGiftExchangedHeroInfo& operator=(const TActLimitHeroGiftExchangedHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLimitHeroGiftExchangedHeroInfo& default_instance();

  void Swap(TActLimitHeroGiftExchangedHeroInfo* other);

  // implements Message ----------------------------------------------

  TActLimitHeroGiftExchangedHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLimitHeroGiftExchangedHeroInfo& from);
  void MergeFrom(const TActLimitHeroGiftExchangedHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ExchangeId = 1;
  inline bool has_exchangeid() const;
  inline void clear_exchangeid();
  static const int kExchangeIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLimitHeroGiftExchangedHeroInfo</name>
  	<Function>
  		<name>exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 exchangeid() const;
  inline void set_exchangeid(::google::protobuf::uint32 value);

  // optional uint64 TryOutStartTime = 2;
  inline bool has_tryoutstarttime() const;
  inline void clear_tryoutstarttime();
  static const int kTryOutStartTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActLimitHeroGiftExchangedHeroInfo</name>
  	<Function>
  		<name>tryoutstarttime</name>
  		<replaceName>TryOutStartTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tryoutstarttime</name>
  		<replaceName>TryOutStartTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tryoutstarttime</name>
  		<replaceName>TryOutStartTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 tryoutstarttime() const;
  inline void set_tryoutstarttime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActLimitHeroGiftExchangedHeroInfo)
 private:
  inline void set_has_exchangeid();
  inline void clear_has_exchangeid();
  inline void set_has_tryoutstarttime();
  inline void clear_has_tryoutstarttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 tryoutstarttime_;
  ::google::protobuf::uint32 exchangeid_;
  friend void  protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  friend void protobuf_AssignDesc_net_2fActLimitHeroGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLimitHeroGift_2eproto();

  void InitAsDefaultInstance();
  static TActLimitHeroGiftExchangedHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActLimitHeroGiftRmbGoodsNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActLimitHeroGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActLimitHeroGiftRmbGoodsNotify : public ::google::protobuf::Message {
 public:
  TActLimitHeroGiftRmbGoodsNotify();
  virtual ~TActLimitHeroGiftRmbGoodsNotify();

  TActLimitHeroGiftRmbGoodsNotify(const TActLimitHeroGiftRmbGoodsNotify& from);

  inline TActLimitHeroGiftRmbGoodsNotify& operator=(const TActLimitHeroGiftRmbGoodsNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActLimitHeroGiftRmbGoodsNotify& default_instance();

  void Swap(TActLimitHeroGiftRmbGoodsNotify* other);

  // implements Message ----------------------------------------------

  TActLimitHeroGiftRmbGoodsNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActLimitHeroGiftRmbGoodsNotify& from);
  void MergeFrom(const TActLimitHeroGiftRmbGoodsNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActLimitHeroGiftBoughtGiftInfo BoughtGiftInfoArr = 1;
  inline int boughtgiftinfoarr_size() const;
  inline void clear_boughtgiftinfoarr();
  static const int kBoughtGiftInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActLimitHeroGiftRmbGoodsNotify</name>
  	<Function>
  		<name>boughtgiftinfoarr</name>
  		<replaceName>BoughtGiftInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_boughtgiftinfoarr</name>
  		<replaceName>BoughtGiftInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_boughtgiftinfoarr</name>
  		<replaceName>BoughtGiftInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boughtgiftinfoarr</name>
  		<replaceName>BoughtGiftInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>boughtgiftinfoarr_size</name>
  		<replaceName>BoughtGiftInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActLimitHeroGiftBoughtGiftInfo& boughtgiftinfoarr(int index) const;
  inline ::pb::TActLimitHeroGiftBoughtGiftInfo* mutable_boughtgiftinfoarr(int index);
  inline ::pb::TActLimitHeroGiftBoughtGiftInfo* add_boughtgiftinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftBoughtGiftInfo >&
      boughtgiftinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftBoughtGiftInfo >*
      mutable_boughtgiftinfoarr();

  // @@protoc_insertion_point(class_scope:pb.TActLimitHeroGiftRmbGoodsNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftBoughtGiftInfo > boughtgiftinfoarr_;
  friend void  protobuf_AddDesc_net_2fActLimitHeroGift_2eproto();
  friend void protobuf_AssignDesc_net_2fActLimitHeroGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fActLimitHeroGift_2eproto();

  void InitAsDefaultInstance();
  static TActLimitHeroGiftRmbGoodsNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TActLimitHeroGiftTryOutReq

// optional uint32 ExchangeId = 1;
inline bool TActLimitHeroGiftTryOutReq::has_exchangeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActLimitHeroGiftTryOutReq::set_has_exchangeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActLimitHeroGiftTryOutReq::clear_has_exchangeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActLimitHeroGiftTryOutReq::clear_exchangeid() {
  exchangeid_ = 0u;
  clear_has_exchangeid();
}
inline ::google::protobuf::uint32 TActLimitHeroGiftTryOutReq::exchangeid() const {
  // @@protoc_insertion_point(field_get:pb.TActLimitHeroGiftTryOutReq.ExchangeId)
  return exchangeid_;
}
inline void TActLimitHeroGiftTryOutReq::set_exchangeid(::google::protobuf::uint32 value) {
  set_has_exchangeid();
  exchangeid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLimitHeroGiftTryOutReq.ExchangeId)
}

// -------------------------------------------------------------------

// TActLimitHeroGiftExchangeReq

// optional uint32 ExchangeId = 1;
inline bool TActLimitHeroGiftExchangeReq::has_exchangeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActLimitHeroGiftExchangeReq::set_has_exchangeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActLimitHeroGiftExchangeReq::clear_has_exchangeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActLimitHeroGiftExchangeReq::clear_exchangeid() {
  exchangeid_ = 0u;
  clear_has_exchangeid();
}
inline ::google::protobuf::uint32 TActLimitHeroGiftExchangeReq::exchangeid() const {
  // @@protoc_insertion_point(field_get:pb.TActLimitHeroGiftExchangeReq.ExchangeId)
  return exchangeid_;
}
inline void TActLimitHeroGiftExchangeReq::set_exchangeid(::google::protobuf::uint32 value) {
  set_has_exchangeid();
  exchangeid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLimitHeroGiftExchangeReq.ExchangeId)
}

// -------------------------------------------------------------------

// TActLimitHeroGiftGetInfoRsp

// repeated .pb.TActLimitHeroGiftBoughtGiftInfo BoughtGiftInfoArr = 1;
inline int TActLimitHeroGiftGetInfoRsp::boughtgiftinfoarr_size() const {
  return boughtgiftinfoarr_.size();
}
inline void TActLimitHeroGiftGetInfoRsp::clear_boughtgiftinfoarr() {
  boughtgiftinfoarr_.Clear();
}
inline const ::pb::TActLimitHeroGiftBoughtGiftInfo& TActLimitHeroGiftGetInfoRsp::boughtgiftinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActLimitHeroGiftGetInfoRsp.BoughtGiftInfoArr)
  return boughtgiftinfoarr_.Get(index);
}
inline ::pb::TActLimitHeroGiftBoughtGiftInfo* TActLimitHeroGiftGetInfoRsp::mutable_boughtgiftinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActLimitHeroGiftGetInfoRsp.BoughtGiftInfoArr)
  return boughtgiftinfoarr_.Mutable(index);
}
inline ::pb::TActLimitHeroGiftBoughtGiftInfo* TActLimitHeroGiftGetInfoRsp::add_boughtgiftinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TActLimitHeroGiftGetInfoRsp.BoughtGiftInfoArr)
  return boughtgiftinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftBoughtGiftInfo >&
TActLimitHeroGiftGetInfoRsp::boughtgiftinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TActLimitHeroGiftGetInfoRsp.BoughtGiftInfoArr)
  return boughtgiftinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftBoughtGiftInfo >*
TActLimitHeroGiftGetInfoRsp::mutable_boughtgiftinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActLimitHeroGiftGetInfoRsp.BoughtGiftInfoArr)
  return &boughtgiftinfoarr_;
}

// repeated .pb.TActLimitHeroGiftExchangedHeroInfo HeroInfoArr = 2;
inline int TActLimitHeroGiftGetInfoRsp::heroinfoarr_size() const {
  return heroinfoarr_.size();
}
inline void TActLimitHeroGiftGetInfoRsp::clear_heroinfoarr() {
  heroinfoarr_.Clear();
}
inline const ::pb::TActLimitHeroGiftExchangedHeroInfo& TActLimitHeroGiftGetInfoRsp::heroinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActLimitHeroGiftGetInfoRsp.HeroInfoArr)
  return heroinfoarr_.Get(index);
}
inline ::pb::TActLimitHeroGiftExchangedHeroInfo* TActLimitHeroGiftGetInfoRsp::mutable_heroinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActLimitHeroGiftGetInfoRsp.HeroInfoArr)
  return heroinfoarr_.Mutable(index);
}
inline ::pb::TActLimitHeroGiftExchangedHeroInfo* TActLimitHeroGiftGetInfoRsp::add_heroinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TActLimitHeroGiftGetInfoRsp.HeroInfoArr)
  return heroinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftExchangedHeroInfo >&
TActLimitHeroGiftGetInfoRsp::heroinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TActLimitHeroGiftGetInfoRsp.HeroInfoArr)
  return heroinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftExchangedHeroInfo >*
TActLimitHeroGiftGetInfoRsp::mutable_heroinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActLimitHeroGiftGetInfoRsp.HeroInfoArr)
  return &heroinfoarr_;
}

// -------------------------------------------------------------------

// TActLimitHeroGiftBoughtGiftInfo

// optional uint32 GiftId = 1;
inline bool TActLimitHeroGiftBoughtGiftInfo::has_giftid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActLimitHeroGiftBoughtGiftInfo::set_has_giftid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActLimitHeroGiftBoughtGiftInfo::clear_has_giftid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActLimitHeroGiftBoughtGiftInfo::clear_giftid() {
  giftid_ = 0u;
  clear_has_giftid();
}
inline ::google::protobuf::uint32 TActLimitHeroGiftBoughtGiftInfo::giftid() const {
  // @@protoc_insertion_point(field_get:pb.TActLimitHeroGiftBoughtGiftInfo.GiftId)
  return giftid_;
}
inline void TActLimitHeroGiftBoughtGiftInfo::set_giftid(::google::protobuf::uint32 value) {
  set_has_giftid();
  giftid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLimitHeroGiftBoughtGiftInfo.GiftId)
}

// optional uint32 BoughtNum = 2;
inline bool TActLimitHeroGiftBoughtGiftInfo::has_boughtnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActLimitHeroGiftBoughtGiftInfo::set_has_boughtnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActLimitHeroGiftBoughtGiftInfo::clear_has_boughtnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActLimitHeroGiftBoughtGiftInfo::clear_boughtnum() {
  boughtnum_ = 0u;
  clear_has_boughtnum();
}
inline ::google::protobuf::uint32 TActLimitHeroGiftBoughtGiftInfo::boughtnum() const {
  // @@protoc_insertion_point(field_get:pb.TActLimitHeroGiftBoughtGiftInfo.BoughtNum)
  return boughtnum_;
}
inline void TActLimitHeroGiftBoughtGiftInfo::set_boughtnum(::google::protobuf::uint32 value) {
  set_has_boughtnum();
  boughtnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLimitHeroGiftBoughtGiftInfo.BoughtNum)
}

// -------------------------------------------------------------------

// TActLimitHeroGiftExchangedHeroInfo

// optional uint32 ExchangeId = 1;
inline bool TActLimitHeroGiftExchangedHeroInfo::has_exchangeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActLimitHeroGiftExchangedHeroInfo::set_has_exchangeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActLimitHeroGiftExchangedHeroInfo::clear_has_exchangeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActLimitHeroGiftExchangedHeroInfo::clear_exchangeid() {
  exchangeid_ = 0u;
  clear_has_exchangeid();
}
inline ::google::protobuf::uint32 TActLimitHeroGiftExchangedHeroInfo::exchangeid() const {
  // @@protoc_insertion_point(field_get:pb.TActLimitHeroGiftExchangedHeroInfo.ExchangeId)
  return exchangeid_;
}
inline void TActLimitHeroGiftExchangedHeroInfo::set_exchangeid(::google::protobuf::uint32 value) {
  set_has_exchangeid();
  exchangeid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLimitHeroGiftExchangedHeroInfo.ExchangeId)
}

// optional uint64 TryOutStartTime = 2;
inline bool TActLimitHeroGiftExchangedHeroInfo::has_tryoutstarttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActLimitHeroGiftExchangedHeroInfo::set_has_tryoutstarttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActLimitHeroGiftExchangedHeroInfo::clear_has_tryoutstarttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActLimitHeroGiftExchangedHeroInfo::clear_tryoutstarttime() {
  tryoutstarttime_ = GOOGLE_ULONGLONG(0);
  clear_has_tryoutstarttime();
}
inline ::google::protobuf::uint64 TActLimitHeroGiftExchangedHeroInfo::tryoutstarttime() const {
  // @@protoc_insertion_point(field_get:pb.TActLimitHeroGiftExchangedHeroInfo.TryOutStartTime)
  return tryoutstarttime_;
}
inline void TActLimitHeroGiftExchangedHeroInfo::set_tryoutstarttime(::google::protobuf::uint64 value) {
  set_has_tryoutstarttime();
  tryoutstarttime_ = value;
  // @@protoc_insertion_point(field_set:pb.TActLimitHeroGiftExchangedHeroInfo.TryOutStartTime)
}

// -------------------------------------------------------------------

// TActLimitHeroGiftRmbGoodsNotify

// repeated .pb.TActLimitHeroGiftBoughtGiftInfo BoughtGiftInfoArr = 1;
inline int TActLimitHeroGiftRmbGoodsNotify::boughtgiftinfoarr_size() const {
  return boughtgiftinfoarr_.size();
}
inline void TActLimitHeroGiftRmbGoodsNotify::clear_boughtgiftinfoarr() {
  boughtgiftinfoarr_.Clear();
}
inline const ::pb::TActLimitHeroGiftBoughtGiftInfo& TActLimitHeroGiftRmbGoodsNotify::boughtgiftinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActLimitHeroGiftRmbGoodsNotify.BoughtGiftInfoArr)
  return boughtgiftinfoarr_.Get(index);
}
inline ::pb::TActLimitHeroGiftBoughtGiftInfo* TActLimitHeroGiftRmbGoodsNotify::mutable_boughtgiftinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActLimitHeroGiftRmbGoodsNotify.BoughtGiftInfoArr)
  return boughtgiftinfoarr_.Mutable(index);
}
inline ::pb::TActLimitHeroGiftBoughtGiftInfo* TActLimitHeroGiftRmbGoodsNotify::add_boughtgiftinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TActLimitHeroGiftRmbGoodsNotify.BoughtGiftInfoArr)
  return boughtgiftinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftBoughtGiftInfo >&
TActLimitHeroGiftRmbGoodsNotify::boughtgiftinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TActLimitHeroGiftRmbGoodsNotify.BoughtGiftInfoArr)
  return boughtgiftinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActLimitHeroGiftBoughtGiftInfo >*
TActLimitHeroGiftRmbGoodsNotify::mutable_boughtgiftinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActLimitHeroGiftRmbGoodsNotify.BoughtGiftInfoArr)
  return &boughtgiftinfoarr_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActLimitHeroGift_2eproto__INCLUDED
