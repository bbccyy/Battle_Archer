// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActivityConf.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActivityConf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActivityBaseInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActivityBaseInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActivityConfigFileInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActivityConfigFileInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActivityConfInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActivityConfInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TGetAllActivityNamesRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TGetAllActivityNamesRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActivityConfOutputValueInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActivityConfOutputValueInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActivityConfValueInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActivityConfValueInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCheckActivityReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCheckActivityReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCheckActivityRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCheckActivityRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDeployActivityConfReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDeployActivityConfReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDeployActivityConfRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDeployActivityConfRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActivityConfGetActivityConfReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActivityConfGetActivityConfReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActivityConfGetActivityConfRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActivityConfGetActivityConfRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActivityConfUpdateNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActivityConfUpdateNotify_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TActivityConfErrCode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TActivityConfStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActivityConf_2eproto() {
  protobuf_AddDesc_net_2fActivityConf_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActivityConf.proto");
  GOOGLE_CHECK(file != NULL);
  TActivityBaseInfo_descriptor_ = file->message_type(0);
  static const int TActivityBaseInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityBaseInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityBaseInfo, namecn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityBaseInfo, conffilenamearr_),
  };
  TActivityBaseInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActivityBaseInfo_descriptor_,
      TActivityBaseInfo::default_instance_,
      TActivityBaseInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityBaseInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityBaseInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActivityBaseInfo));
  TActivityConfigFileInfo_descriptor_ = file->message_type(1);
  static const int TActivityConfigFileInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfigFileInfo, conffilename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfigFileInfo, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfigFileInfo, contentmd5_),
  };
  TActivityConfigFileInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActivityConfigFileInfo_descriptor_,
      TActivityConfigFileInfo::default_instance_,
      TActivityConfigFileInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfigFileInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfigFileInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActivityConfigFileInfo));
  TActivityConfInfo_descriptor_ = file->message_type(2);
  static const int TActivityConfInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfInfo, starttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfInfo, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfInfo, needopentime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfInfo, fileinfoarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfInfo, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfInfo, activitystatus_),
  };
  TActivityConfInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActivityConfInfo_descriptor_,
      TActivityConfInfo::default_instance_,
      TActivityConfInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActivityConfInfo));
  TGetAllActivityNamesRsp_descriptor_ = file->message_type(3);
  static const int TGetAllActivityNamesRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TGetAllActivityNamesRsp, activitybaseinfoarr_),
  };
  TGetAllActivityNamesRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TGetAllActivityNamesRsp_descriptor_,
      TGetAllActivityNamesRsp::default_instance_,
      TGetAllActivityNamesRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TGetAllActivityNamesRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TGetAllActivityNamesRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TGetAllActivityNamesRsp));
  TActivityConfOutputValueInfo_descriptor_ = file->message_type(4);
  static const int TActivityConfOutputValueInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfOutputValueInfo, arroutputvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfOutputValueInfo, probability_),
  };
  TActivityConfOutputValueInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActivityConfOutputValueInfo_descriptor_,
      TActivityConfOutputValueInfo::default_instance_,
      TActivityConfOutputValueInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfOutputValueInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfOutputValueInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActivityConfOutputValueInfo));
  TActivityConfValueInfo_descriptor_ = file->message_type(5);
  static const int TActivityConfValueInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfValueInfo, rulename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfValueInfo, arrinputvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfValueInfo, arroutputvalueinfo_),
  };
  TActivityConfValueInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActivityConfValueInfo_descriptor_,
      TActivityConfValueInfo::default_instance_,
      TActivityConfValueInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfValueInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfValueInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActivityConfValueInfo));
  TCheckActivityReq_descriptor_ = file->message_type(6);
  static const int TCheckActivityReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCheckActivityReq, activityconfinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCheckActivityReq, replace_),
  };
  TCheckActivityReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCheckActivityReq_descriptor_,
      TCheckActivityReq::default_instance_,
      TCheckActivityReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCheckActivityReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCheckActivityReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCheckActivityReq));
  TCheckActivityRsp_descriptor_ = file->message_type(7);
  static const int TCheckActivityRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCheckActivityRsp, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCheckActivityRsp, valueerrcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCheckActivityRsp, arrvalueinfo_),
  };
  TCheckActivityRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCheckActivityRsp_descriptor_,
      TCheckActivityRsp::default_instance_,
      TCheckActivityRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCheckActivityRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCheckActivityRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCheckActivityRsp));
  TDeployActivityConfReq_descriptor_ = file->message_type(8);
  static const int TDeployActivityConfReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDeployActivityConfReq, maxversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDeployActivityConfReq, forcerefresh_),
  };
  TDeployActivityConfReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDeployActivityConfReq_descriptor_,
      TDeployActivityConfReq::default_instance_,
      TDeployActivityConfReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDeployActivityConfReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDeployActivityConfReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDeployActivityConfReq));
  TDeployActivityConfRsp_descriptor_ = file->message_type(9);
  static const int TDeployActivityConfRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDeployActivityConfRsp, err_),
  };
  TDeployActivityConfRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDeployActivityConfRsp_descriptor_,
      TDeployActivityConfRsp::default_instance_,
      TDeployActivityConfRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDeployActivityConfRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDeployActivityConfRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDeployActivityConfRsp));
  TActivityConfGetActivityConfReq_descriptor_ = file->message_type(10);
  static const int TActivityConfGetActivityConfReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfGetActivityConfReq, maxversion_),
  };
  TActivityConfGetActivityConfReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActivityConfGetActivityConfReq_descriptor_,
      TActivityConfGetActivityConfReq::default_instance_,
      TActivityConfGetActivityConfReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfGetActivityConfReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfGetActivityConfReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActivityConfGetActivityConfReq));
  TActivityConfGetActivityConfRsp_descriptor_ = file->message_type(11);
  static const int TActivityConfGetActivityConfRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfGetActivityConfRsp, maxversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfGetActivityConfRsp, arrconfinfo_),
  };
  TActivityConfGetActivityConfRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActivityConfGetActivityConfRsp_descriptor_,
      TActivityConfGetActivityConfRsp::default_instance_,
      TActivityConfGetActivityConfRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfGetActivityConfRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfGetActivityConfRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActivityConfGetActivityConfRsp));
  TActivityConfUpdateNotify_descriptor_ = file->message_type(12);
  static const int TActivityConfUpdateNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfUpdateNotify, maxversion_),
  };
  TActivityConfUpdateNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActivityConfUpdateNotify_descriptor_,
      TActivityConfUpdateNotify::default_instance_,
      TActivityConfUpdateNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfUpdateNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityConfUpdateNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActivityConfUpdateNotify));
  TActivityConfErrCode_descriptor_ = file->enum_type(0);
  TActivityConfStatus_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActivityConf_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActivityBaseInfo_descriptor_, &TActivityBaseInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActivityConfigFileInfo_descriptor_, &TActivityConfigFileInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActivityConfInfo_descriptor_, &TActivityConfInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TGetAllActivityNamesRsp_descriptor_, &TGetAllActivityNamesRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActivityConfOutputValueInfo_descriptor_, &TActivityConfOutputValueInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActivityConfValueInfo_descriptor_, &TActivityConfValueInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCheckActivityReq_descriptor_, &TCheckActivityReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCheckActivityRsp_descriptor_, &TCheckActivityRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDeployActivityConfReq_descriptor_, &TDeployActivityConfReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDeployActivityConfRsp_descriptor_, &TDeployActivityConfRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActivityConfGetActivityConfReq_descriptor_, &TActivityConfGetActivityConfReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActivityConfGetActivityConfRsp_descriptor_, &TActivityConfGetActivityConfRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActivityConfUpdateNotify_descriptor_, &TActivityConfUpdateNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActivityConf_2eproto() {
  delete TActivityBaseInfo::default_instance_;
  delete TActivityBaseInfo_reflection_;
  delete TActivityConfigFileInfo::default_instance_;
  delete TActivityConfigFileInfo_reflection_;
  delete TActivityConfInfo::default_instance_;
  delete TActivityConfInfo_reflection_;
  delete TGetAllActivityNamesRsp::default_instance_;
  delete TGetAllActivityNamesRsp_reflection_;
  delete TActivityConfOutputValueInfo::default_instance_;
  delete TActivityConfOutputValueInfo_reflection_;
  delete TActivityConfValueInfo::default_instance_;
  delete TActivityConfValueInfo_reflection_;
  delete TCheckActivityReq::default_instance_;
  delete TCheckActivityReq_reflection_;
  delete TCheckActivityRsp::default_instance_;
  delete TCheckActivityRsp_reflection_;
  delete TDeployActivityConfReq::default_instance_;
  delete TDeployActivityConfReq_reflection_;
  delete TDeployActivityConfRsp::default_instance_;
  delete TDeployActivityConfRsp_reflection_;
  delete TActivityConfGetActivityConfReq::default_instance_;
  delete TActivityConfGetActivityConfReq_reflection_;
  delete TActivityConfGetActivityConfRsp::default_instance_;
  delete TActivityConfGetActivityConfRsp_reflection_;
  delete TActivityConfUpdateNotify::default_instance_;
  delete TActivityConfUpdateNotify_reflection_;
}

void protobuf_AddDesc_net_2fActivityConf_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026net/ActivityConf.proto\022\002pb\032\026net/Common"
    "Reward.proto\"J\n\021TActivityBaseInfo\022\014\n\004Nam"
    "e\030\001 \001(\t\022\016\n\006NameCN\030\002 \001(\t\022\027\n\017ConfFileNameA"
    "rr\030\003 \003(\t\"T\n\027TActivityConfigFileInfo\022\024\n\014C"
    "onfFileName\030\001 \001(\t\022\017\n\007Content\030\002 \001(\t\022\022\n\nCo"
    "ntentMd5\030\003 \001(\t\"\333\001\n\021TActivityConfInfo\022\n\n\002"
    "Id\030\001 \001(\004\022\014\n\004Name\030\002 \001(\t\022\021\n\tStartTime\030\003 \001("
    "\004\022\017\n\007EndTime\030\004 \001(\004\022\024\n\014NeedOpenTime\030\005 \001(\004"
    "\0220\n\013FileInfoArr\030\006 \003(\0132\033.pb.TActivityConf"
    "igFileInfo\022\017\n\007Version\030\007 \001(\r\022/\n\016ActivityS"
    "tatus\030\010 \001(\0162\027.pb.TActivityConfStatus\"M\n\027"
    "TGetAllActivityNamesRsp\0222\n\023ActivityBaseI"
    "nfoArr\030\001 \003(\0132\025.pb.TActivityBaseInfo\"^\n\034T"
    "ActivityConfOutputValueInfo\022)\n\016ArrOutput"
    "Value\030\001 \003(\0132\021.pb.TCommonReward\022\023\n\013Probab"
    "ility\030\002 \001(\001\"\222\001\n\026TActivityConfValueInfo\022\020"
    "\n\010RuleName\030\001 \001(\t\022(\n\rArrInputValue\030\002 \003(\0132"
    "\021.pb.TCommonReward\022<\n\022ArrOutputValueInfo"
    "\030\003 \003(\0132 .pb.TActivityConfOutputValueInfo"
    "\"U\n\021TCheckActivityReq\022/\n\020ActivityConfInf"
    "o\030\001 \001(\0132\025.pb.TActivityConfInfo\022\017\n\007Replac"
    "e\030\002 \001(\010\"\202\001\n\021TCheckActivityRsp\022\013\n\003Err\030\001 \001"
    "(\t\022.\n\014ValueErrCode\030\002 \001(\0162\030.pb.TActivityC"
    "onfErrCode\0220\n\014ArrValueInfo\030\003 \003(\0132\032.pb.TA"
    "ctivityConfValueInfo\"B\n\026TDeployActivityC"
    "onfReq\022\022\n\nMaxVersion\030\001 \001(\r\022\024\n\014ForceRefre"
    "sh\030\002 \001(\010\"%\n\026TDeployActivityConfRsp\022\013\n\003Er"
    "r\030\001 \001(\t\"5\n\037TActivityConfGetActivityConfR"
    "eq\022\022\n\nMaxVersion\030\001 \001(\r\"a\n\037TActivityConfG"
    "etActivityConfRsp\022\022\n\nMaxVersion\030\001 \001(\r\022*\n"
    "\013ArrConfInfo\030\002 \003(\0132\025.pb.TActivityConfInf"
    "o\"/\n\031TActivityConfUpdateNotify\022\022\n\nMaxVer"
    "sion\030\001 \001(\r*v\n\024TActivityConfErrCode\022\023\n\017AC"
    "TIVITY_ERR_OK\020\000\022&\n!ACTIVITY_ERR_NOT_FOUN"
    "D_VALUE_INFO\020\350\007\022!\n\024ACTIVITY_ERR_UNKNOWN\020"
    "\377\377\377\377\377\377\377\377\377\001*R\n\023TActivityConfStatus\022\021\n\rACT"
    "IVITY_OPEN\020\000\022\022\n\016ACTIVITY_CLOSE\020\001\022\024\n\020ACTI"
    "VITY_DELETED\020\002", 1494);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActivityConf.proto", &protobuf_RegisterTypes);
  TActivityBaseInfo::default_instance_ = new TActivityBaseInfo();
  TActivityConfigFileInfo::default_instance_ = new TActivityConfigFileInfo();
  TActivityConfInfo::default_instance_ = new TActivityConfInfo();
  TGetAllActivityNamesRsp::default_instance_ = new TGetAllActivityNamesRsp();
  TActivityConfOutputValueInfo::default_instance_ = new TActivityConfOutputValueInfo();
  TActivityConfValueInfo::default_instance_ = new TActivityConfValueInfo();
  TCheckActivityReq::default_instance_ = new TCheckActivityReq();
  TCheckActivityRsp::default_instance_ = new TCheckActivityRsp();
  TDeployActivityConfReq::default_instance_ = new TDeployActivityConfReq();
  TDeployActivityConfRsp::default_instance_ = new TDeployActivityConfRsp();
  TActivityConfGetActivityConfReq::default_instance_ = new TActivityConfGetActivityConfReq();
  TActivityConfGetActivityConfRsp::default_instance_ = new TActivityConfGetActivityConfRsp();
  TActivityConfUpdateNotify::default_instance_ = new TActivityConfUpdateNotify();
  TActivityBaseInfo::default_instance_->InitAsDefaultInstance();
  TActivityConfigFileInfo::default_instance_->InitAsDefaultInstance();
  TActivityConfInfo::default_instance_->InitAsDefaultInstance();
  TGetAllActivityNamesRsp::default_instance_->InitAsDefaultInstance();
  TActivityConfOutputValueInfo::default_instance_->InitAsDefaultInstance();
  TActivityConfValueInfo::default_instance_->InitAsDefaultInstance();
  TCheckActivityReq::default_instance_->InitAsDefaultInstance();
  TCheckActivityRsp::default_instance_->InitAsDefaultInstance();
  TDeployActivityConfReq::default_instance_->InitAsDefaultInstance();
  TDeployActivityConfRsp::default_instance_->InitAsDefaultInstance();
  TActivityConfGetActivityConfReq::default_instance_->InitAsDefaultInstance();
  TActivityConfGetActivityConfRsp::default_instance_->InitAsDefaultInstance();
  TActivityConfUpdateNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActivityConf_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActivityConf_2eproto {
  StaticDescriptorInitializer_net_2fActivityConf_2eproto() {
    protobuf_AddDesc_net_2fActivityConf_2eproto();
  }
} static_descriptor_initializer_net_2fActivityConf_2eproto_;
const ::google::protobuf::EnumDescriptor* TActivityConfErrCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActivityConfErrCode_descriptor_;
}
bool TActivityConfErrCode_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1000:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TActivityConfStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActivityConfStatus_descriptor_;
}
bool TActivityConfStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TActivityBaseInfo::kNameFieldNumber;
const int TActivityBaseInfo::kNameCNFieldNumber;
const int TActivityBaseInfo::kConfFileNameArrFieldNumber;
#endif  // !_MSC_VER

TActivityBaseInfo::TActivityBaseInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActivityBaseInfo)
}

void TActivityBaseInfo::InitAsDefaultInstance() {
}

TActivityBaseInfo::TActivityBaseInfo(const TActivityBaseInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActivityBaseInfo)
}

void TActivityBaseInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namecn_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActivityBaseInfo::~TActivityBaseInfo() {
  // @@protoc_insertion_point(destructor:pb.TActivityBaseInfo)
  SharedDtor();
}

void TActivityBaseInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (namecn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete namecn_;
  }
  if (this != default_instance_) {
  }
}

void TActivityBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActivityBaseInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActivityBaseInfo_descriptor_;
}

const TActivityBaseInfo& TActivityBaseInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActivityConf_2eproto();
  return *default_instance_;
}

TActivityBaseInfo* TActivityBaseInfo::default_instance_ = NULL;

TActivityBaseInfo* TActivityBaseInfo::New() const {
  return new TActivityBaseInfo;
}

void TActivityBaseInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_namecn()) {
      if (namecn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        namecn_->clear();
      }
    }
  }
  conffilenamearr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActivityBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActivityBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_NameCN;
        break;
      }

      // optional string NameCN = 2;
      case 2: {
        if (tag == 18) {
         parse_NameCN:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_namecn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->namecn().data(), this->namecn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "namecn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ConfFileNameArr;
        break;
      }

      // repeated string ConfFileNameArr = 3;
      case 3: {
        if (tag == 26) {
         parse_ConfFileNameArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_conffilenamearr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->conffilenamearr(this->conffilenamearr_size() - 1).data(),
            this->conffilenamearr(this->conffilenamearr_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "conffilenamearr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ConfFileNameArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActivityBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActivityBaseInfo)
  return false;
#undef DO_
}

void TActivityBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActivityBaseInfo)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string NameCN = 2;
  if (has_namecn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->namecn().data(), this->namecn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "namecn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->namecn(), output);
  }

  // repeated string ConfFileNameArr = 3;
  for (int i = 0; i < this->conffilenamearr_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->conffilenamearr(i).data(), this->conffilenamearr(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "conffilenamearr");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->conffilenamearr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActivityBaseInfo)
}

::google::protobuf::uint8* TActivityBaseInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActivityBaseInfo)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string NameCN = 2;
  if (has_namecn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->namecn().data(), this->namecn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "namecn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->namecn(), target);
  }

  // repeated string ConfFileNameArr = 3;
  for (int i = 0; i < this->conffilenamearr_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->conffilenamearr(i).data(), this->conffilenamearr(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "conffilenamearr");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->conffilenamearr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActivityBaseInfo)
  return target;
}

int TActivityBaseInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string NameCN = 2;
    if (has_namecn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->namecn());
    }

  }
  // repeated string ConfFileNameArr = 3;
  total_size += 1 * this->conffilenamearr_size();
  for (int i = 0; i < this->conffilenamearr_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->conffilenamearr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActivityBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActivityBaseInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActivityBaseInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActivityBaseInfo::MergeFrom(const TActivityBaseInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  conffilenamearr_.MergeFrom(from.conffilenamearr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_namecn()) {
      set_namecn(from.namecn());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActivityBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActivityBaseInfo::CopyFrom(const TActivityBaseInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActivityBaseInfo::IsInitialized() const {

  return true;
}

void TActivityBaseInfo::Swap(TActivityBaseInfo* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(namecn_, other->namecn_);
    conffilenamearr_.Swap(&other->conffilenamearr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActivityBaseInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActivityBaseInfo_descriptor_;
  metadata.reflection = TActivityBaseInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActivityConfigFileInfo::kConfFileNameFieldNumber;
const int TActivityConfigFileInfo::kContentFieldNumber;
const int TActivityConfigFileInfo::kContentMd5FieldNumber;
#endif  // !_MSC_VER

TActivityConfigFileInfo::TActivityConfigFileInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActivityConfigFileInfo)
}

void TActivityConfigFileInfo::InitAsDefaultInstance() {
}

TActivityConfigFileInfo::TActivityConfigFileInfo(const TActivityConfigFileInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActivityConfigFileInfo)
}

void TActivityConfigFileInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  conffilename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contentmd5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActivityConfigFileInfo::~TActivityConfigFileInfo() {
  // @@protoc_insertion_point(destructor:pb.TActivityConfigFileInfo)
  SharedDtor();
}

void TActivityConfigFileInfo::SharedDtor() {
  if (conffilename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete conffilename_;
  }
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (contentmd5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete contentmd5_;
  }
  if (this != default_instance_) {
  }
}

void TActivityConfigFileInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActivityConfigFileInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActivityConfigFileInfo_descriptor_;
}

const TActivityConfigFileInfo& TActivityConfigFileInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActivityConf_2eproto();
  return *default_instance_;
}

TActivityConfigFileInfo* TActivityConfigFileInfo::default_instance_ = NULL;

TActivityConfigFileInfo* TActivityConfigFileInfo::New() const {
  return new TActivityConfigFileInfo;
}

void TActivityConfigFileInfo::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_conffilename()) {
      if (conffilename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        conffilename_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
    if (has_contentmd5()) {
      if (contentmd5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        contentmd5_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActivityConfigFileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActivityConfigFileInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ConfFileName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_conffilename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->conffilename().data(), this->conffilename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "conffilename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Content;
        break;
      }

      // optional string Content = 2;
      case 2: {
        if (tag == 18) {
         parse_Content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ContentMd5;
        break;
      }

      // optional string ContentMd5 = 3;
      case 3: {
        if (tag == 26) {
         parse_ContentMd5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contentmd5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->contentmd5().data(), this->contentmd5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "contentmd5");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActivityConfigFileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActivityConfigFileInfo)
  return false;
#undef DO_
}

void TActivityConfigFileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActivityConfigFileInfo)
  // optional string ConfFileName = 1;
  if (has_conffilename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->conffilename().data(), this->conffilename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "conffilename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->conffilename(), output);
  }

  // optional string Content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  // optional string ContentMd5 = 3;
  if (has_contentmd5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->contentmd5().data(), this->contentmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "contentmd5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->contentmd5(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActivityConfigFileInfo)
}

::google::protobuf::uint8* TActivityConfigFileInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActivityConfigFileInfo)
  // optional string ConfFileName = 1;
  if (has_conffilename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->conffilename().data(), this->conffilename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "conffilename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->conffilename(), target);
  }

  // optional string Content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  // optional string ContentMd5 = 3;
  if (has_contentmd5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->contentmd5().data(), this->contentmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "contentmd5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->contentmd5(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActivityConfigFileInfo)
  return target;
}

int TActivityConfigFileInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ConfFileName = 1;
    if (has_conffilename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->conffilename());
    }

    // optional string Content = 2;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional string ContentMd5 = 3;
    if (has_contentmd5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->contentmd5());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActivityConfigFileInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActivityConfigFileInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActivityConfigFileInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActivityConfigFileInfo::MergeFrom(const TActivityConfigFileInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_conffilename()) {
      set_conffilename(from.conffilename());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_contentmd5()) {
      set_contentmd5(from.contentmd5());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActivityConfigFileInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActivityConfigFileInfo::CopyFrom(const TActivityConfigFileInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActivityConfigFileInfo::IsInitialized() const {

  return true;
}

void TActivityConfigFileInfo::Swap(TActivityConfigFileInfo* other) {
  if (other != this) {
    std::swap(conffilename_, other->conffilename_);
    std::swap(content_, other->content_);
    std::swap(contentmd5_, other->contentmd5_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActivityConfigFileInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActivityConfigFileInfo_descriptor_;
  metadata.reflection = TActivityConfigFileInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActivityConfInfo::kIdFieldNumber;
const int TActivityConfInfo::kNameFieldNumber;
const int TActivityConfInfo::kStartTimeFieldNumber;
const int TActivityConfInfo::kEndTimeFieldNumber;
const int TActivityConfInfo::kNeedOpenTimeFieldNumber;
const int TActivityConfInfo::kFileInfoArrFieldNumber;
const int TActivityConfInfo::kVersionFieldNumber;
const int TActivityConfInfo::kActivityStatusFieldNumber;
#endif  // !_MSC_VER

TActivityConfInfo::TActivityConfInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActivityConfInfo)
}

void TActivityConfInfo::InitAsDefaultInstance() {
}

TActivityConfInfo::TActivityConfInfo(const TActivityConfInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActivityConfInfo)
}

void TActivityConfInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  starttime_ = GOOGLE_ULONGLONG(0);
  endtime_ = GOOGLE_ULONGLONG(0);
  needopentime_ = GOOGLE_ULONGLONG(0);
  version_ = 0u;
  activitystatus_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActivityConfInfo::~TActivityConfInfo() {
  // @@protoc_insertion_point(destructor:pb.TActivityConfInfo)
  SharedDtor();
}

void TActivityConfInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void TActivityConfInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActivityConfInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActivityConfInfo_descriptor_;
}

const TActivityConfInfo& TActivityConfInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActivityConf_2eproto();
  return *default_instance_;
}

TActivityConfInfo* TActivityConfInfo::default_instance_ = NULL;

TActivityConfInfo* TActivityConfInfo::New() const {
  return new TActivityConfInfo;
}

void TActivityConfInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActivityConfInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 223) {
    ZR_(starttime_, needopentime_);
    ZR_(version_, activitystatus_);
    id_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  fileinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActivityConfInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActivityConfInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_StartTime;
        break;
      }

      // optional uint64 StartTime = 3;
      case 3: {
        if (tag == 24) {
         parse_StartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_EndTime;
        break;
      }

      // optional uint64 EndTime = 4;
      case 4: {
        if (tag == 32) {
         parse_EndTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_NeedOpenTime;
        break;
      }

      // optional uint64 NeedOpenTime = 5;
      case 5: {
        if (tag == 40) {
         parse_NeedOpenTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &needopentime_)));
          set_has_needopentime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_FileInfoArr;
        break;
      }

      // repeated .pb.TActivityConfigFileInfo FileInfoArr = 6;
      case 6: {
        if (tag == 50) {
         parse_FileInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fileinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_FileInfoArr;
        if (input->ExpectTag(56)) goto parse_Version;
        break;
      }

      // optional uint32 Version = 7;
      case 7: {
        if (tag == 56) {
         parse_Version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ActivityStatus;
        break;
      }

      // optional .pb.TActivityConfStatus ActivityStatus = 8;
      case 8: {
        if (tag == 64) {
         parse_ActivityStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::TActivityConfStatus_IsValid(value)) {
            set_activitystatus(static_cast< ::pb::TActivityConfStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActivityConfInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActivityConfInfo)
  return false;
#undef DO_
}

void TActivityConfInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActivityConfInfo)
  // optional uint64 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional string Name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint64 StartTime = 3;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->starttime(), output);
  }

  // optional uint64 EndTime = 4;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->endtime(), output);
  }

  // optional uint64 NeedOpenTime = 5;
  if (has_needopentime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->needopentime(), output);
  }

  // repeated .pb.TActivityConfigFileInfo FileInfoArr = 6;
  for (int i = 0; i < this->fileinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->fileinfoarr(i), output);
  }

  // optional uint32 Version = 7;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->version(), output);
  }

  // optional .pb.TActivityConfStatus ActivityStatus = 8;
  if (has_activitystatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->activitystatus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActivityConfInfo)
}

::google::protobuf::uint8* TActivityConfInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActivityConfInfo)
  // optional uint64 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional string Name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint64 StartTime = 3;
  if (has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->starttime(), target);
  }

  // optional uint64 EndTime = 4;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->endtime(), target);
  }

  // optional uint64 NeedOpenTime = 5;
  if (has_needopentime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->needopentime(), target);
  }

  // repeated .pb.TActivityConfigFileInfo FileInfoArr = 6;
  for (int i = 0; i < this->fileinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->fileinfoarr(i), target);
  }

  // optional uint32 Version = 7;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->version(), target);
  }

  // optional .pb.TActivityConfStatus ActivityStatus = 8;
  if (has_activitystatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->activitystatus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActivityConfInfo)
  return target;
}

int TActivityConfInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional string Name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 StartTime = 3;
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->starttime());
    }

    // optional uint64 EndTime = 4;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->endtime());
    }

    // optional uint64 NeedOpenTime = 5;
    if (has_needopentime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->needopentime());
    }

    // optional uint32 Version = 7;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional .pb.TActivityConfStatus ActivityStatus = 8;
    if (has_activitystatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->activitystatus());
    }

  }
  // repeated .pb.TActivityConfigFileInfo FileInfoArr = 6;
  total_size += 1 * this->fileinfoarr_size();
  for (int i = 0; i < this->fileinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fileinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActivityConfInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActivityConfInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActivityConfInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActivityConfInfo::MergeFrom(const TActivityConfInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  fileinfoarr_.MergeFrom(from.fileinfoarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
    if (from.has_needopentime()) {
      set_needopentime(from.needopentime());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_activitystatus()) {
      set_activitystatus(from.activitystatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActivityConfInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActivityConfInfo::CopyFrom(const TActivityConfInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActivityConfInfo::IsInitialized() const {

  return true;
}

void TActivityConfInfo::Swap(TActivityConfInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(starttime_, other->starttime_);
    std::swap(endtime_, other->endtime_);
    std::swap(needopentime_, other->needopentime_);
    fileinfoarr_.Swap(&other->fileinfoarr_);
    std::swap(version_, other->version_);
    std::swap(activitystatus_, other->activitystatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActivityConfInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActivityConfInfo_descriptor_;
  metadata.reflection = TActivityConfInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TGetAllActivityNamesRsp::kActivityBaseInfoArrFieldNumber;
#endif  // !_MSC_VER

TGetAllActivityNamesRsp::TGetAllActivityNamesRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TGetAllActivityNamesRsp)
}

void TGetAllActivityNamesRsp::InitAsDefaultInstance() {
}

TGetAllActivityNamesRsp::TGetAllActivityNamesRsp(const TGetAllActivityNamesRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TGetAllActivityNamesRsp)
}

void TGetAllActivityNamesRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TGetAllActivityNamesRsp::~TGetAllActivityNamesRsp() {
  // @@protoc_insertion_point(destructor:pb.TGetAllActivityNamesRsp)
  SharedDtor();
}

void TGetAllActivityNamesRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TGetAllActivityNamesRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TGetAllActivityNamesRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TGetAllActivityNamesRsp_descriptor_;
}

const TGetAllActivityNamesRsp& TGetAllActivityNamesRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActivityConf_2eproto();
  return *default_instance_;
}

TGetAllActivityNamesRsp* TGetAllActivityNamesRsp::default_instance_ = NULL;

TGetAllActivityNamesRsp* TGetAllActivityNamesRsp::New() const {
  return new TGetAllActivityNamesRsp;
}

void TGetAllActivityNamesRsp::Clear() {
  activitybaseinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TGetAllActivityNamesRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TGetAllActivityNamesRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActivityBaseInfo ActivityBaseInfoArr = 1;
      case 1: {
        if (tag == 10) {
         parse_ActivityBaseInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activitybaseinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ActivityBaseInfoArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TGetAllActivityNamesRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TGetAllActivityNamesRsp)
  return false;
#undef DO_
}

void TGetAllActivityNamesRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TGetAllActivityNamesRsp)
  // repeated .pb.TActivityBaseInfo ActivityBaseInfoArr = 1;
  for (int i = 0; i < this->activitybaseinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activitybaseinfoarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TGetAllActivityNamesRsp)
}

::google::protobuf::uint8* TGetAllActivityNamesRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TGetAllActivityNamesRsp)
  // repeated .pb.TActivityBaseInfo ActivityBaseInfoArr = 1;
  for (int i = 0; i < this->activitybaseinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->activitybaseinfoarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TGetAllActivityNamesRsp)
  return target;
}

int TGetAllActivityNamesRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActivityBaseInfo ActivityBaseInfoArr = 1;
  total_size += 1 * this->activitybaseinfoarr_size();
  for (int i = 0; i < this->activitybaseinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activitybaseinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TGetAllActivityNamesRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TGetAllActivityNamesRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TGetAllActivityNamesRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TGetAllActivityNamesRsp::MergeFrom(const TGetAllActivityNamesRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  activitybaseinfoarr_.MergeFrom(from.activitybaseinfoarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TGetAllActivityNamesRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TGetAllActivityNamesRsp::CopyFrom(const TGetAllActivityNamesRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TGetAllActivityNamesRsp::IsInitialized() const {

  return true;
}

void TGetAllActivityNamesRsp::Swap(TGetAllActivityNamesRsp* other) {
  if (other != this) {
    activitybaseinfoarr_.Swap(&other->activitybaseinfoarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TGetAllActivityNamesRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TGetAllActivityNamesRsp_descriptor_;
  metadata.reflection = TGetAllActivityNamesRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActivityConfOutputValueInfo::kArrOutputValueFieldNumber;
const int TActivityConfOutputValueInfo::kProbabilityFieldNumber;
#endif  // !_MSC_VER

TActivityConfOutputValueInfo::TActivityConfOutputValueInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActivityConfOutputValueInfo)
}

void TActivityConfOutputValueInfo::InitAsDefaultInstance() {
}

TActivityConfOutputValueInfo::TActivityConfOutputValueInfo(const TActivityConfOutputValueInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActivityConfOutputValueInfo)
}

void TActivityConfOutputValueInfo::SharedCtor() {
  _cached_size_ = 0;
  probability_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActivityConfOutputValueInfo::~TActivityConfOutputValueInfo() {
  // @@protoc_insertion_point(destructor:pb.TActivityConfOutputValueInfo)
  SharedDtor();
}

void TActivityConfOutputValueInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActivityConfOutputValueInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActivityConfOutputValueInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActivityConfOutputValueInfo_descriptor_;
}

const TActivityConfOutputValueInfo& TActivityConfOutputValueInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActivityConf_2eproto();
  return *default_instance_;
}

TActivityConfOutputValueInfo* TActivityConfOutputValueInfo::default_instance_ = NULL;

TActivityConfOutputValueInfo* TActivityConfOutputValueInfo::New() const {
  return new TActivityConfOutputValueInfo;
}

void TActivityConfOutputValueInfo::Clear() {
  probability_ = 0;
  arroutputvalue_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActivityConfOutputValueInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActivityConfOutputValueInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrOutputValue = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrOutputValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arroutputvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrOutputValue;
        if (input->ExpectTag(17)) goto parse_Probability;
        break;
      }

      // optional double Probability = 2;
      case 2: {
        if (tag == 17) {
         parse_Probability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &probability_)));
          set_has_probability();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActivityConfOutputValueInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActivityConfOutputValueInfo)
  return false;
#undef DO_
}

void TActivityConfOutputValueInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActivityConfOutputValueInfo)
  // repeated .pb.TCommonReward ArrOutputValue = 1;
  for (int i = 0; i < this->arroutputvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arroutputvalue(i), output);
  }

  // optional double Probability = 2;
  if (has_probability()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->probability(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActivityConfOutputValueInfo)
}

::google::protobuf::uint8* TActivityConfOutputValueInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActivityConfOutputValueInfo)
  // repeated .pb.TCommonReward ArrOutputValue = 1;
  for (int i = 0; i < this->arroutputvalue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arroutputvalue(i), target);
  }

  // optional double Probability = 2;
  if (has_probability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->probability(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActivityConfOutputValueInfo)
  return target;
}

int TActivityConfOutputValueInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional double Probability = 2;
    if (has_probability()) {
      total_size += 1 + 8;
    }

  }
  // repeated .pb.TCommonReward ArrOutputValue = 1;
  total_size += 1 * this->arroutputvalue_size();
  for (int i = 0; i < this->arroutputvalue_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arroutputvalue(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActivityConfOutputValueInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActivityConfOutputValueInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActivityConfOutputValueInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActivityConfOutputValueInfo::MergeFrom(const TActivityConfOutputValueInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  arroutputvalue_.MergeFrom(from.arroutputvalue_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_probability()) {
      set_probability(from.probability());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActivityConfOutputValueInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActivityConfOutputValueInfo::CopyFrom(const TActivityConfOutputValueInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActivityConfOutputValueInfo::IsInitialized() const {

  return true;
}

void TActivityConfOutputValueInfo::Swap(TActivityConfOutputValueInfo* other) {
  if (other != this) {
    arroutputvalue_.Swap(&other->arroutputvalue_);
    std::swap(probability_, other->probability_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActivityConfOutputValueInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActivityConfOutputValueInfo_descriptor_;
  metadata.reflection = TActivityConfOutputValueInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActivityConfValueInfo::kRuleNameFieldNumber;
const int TActivityConfValueInfo::kArrInputValueFieldNumber;
const int TActivityConfValueInfo::kArrOutputValueInfoFieldNumber;
#endif  // !_MSC_VER

TActivityConfValueInfo::TActivityConfValueInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActivityConfValueInfo)
}

void TActivityConfValueInfo::InitAsDefaultInstance() {
}

TActivityConfValueInfo::TActivityConfValueInfo(const TActivityConfValueInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActivityConfValueInfo)
}

void TActivityConfValueInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rulename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActivityConfValueInfo::~TActivityConfValueInfo() {
  // @@protoc_insertion_point(destructor:pb.TActivityConfValueInfo)
  SharedDtor();
}

void TActivityConfValueInfo::SharedDtor() {
  if (rulename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rulename_;
  }
  if (this != default_instance_) {
  }
}

void TActivityConfValueInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActivityConfValueInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActivityConfValueInfo_descriptor_;
}

const TActivityConfValueInfo& TActivityConfValueInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActivityConf_2eproto();
  return *default_instance_;
}

TActivityConfValueInfo* TActivityConfValueInfo::default_instance_ = NULL;

TActivityConfValueInfo* TActivityConfValueInfo::New() const {
  return new TActivityConfValueInfo;
}

void TActivityConfValueInfo::Clear() {
  if (has_rulename()) {
    if (rulename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      rulename_->clear();
    }
  }
  arrinputvalue_.Clear();
  arroutputvalueinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActivityConfValueInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActivityConfValueInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RuleName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rulename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rulename().data(), this->rulename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "rulename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrInputValue;
        break;
      }

      // repeated .pb.TCommonReward ArrInputValue = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrInputValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrinputvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrInputValue;
        if (input->ExpectTag(26)) goto parse_ArrOutputValueInfo;
        break;
      }

      // repeated .pb.TActivityConfOutputValueInfo ArrOutputValueInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrOutputValueInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arroutputvalueinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrOutputValueInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActivityConfValueInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActivityConfValueInfo)
  return false;
#undef DO_
}

void TActivityConfValueInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActivityConfValueInfo)
  // optional string RuleName = 1;
  if (has_rulename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rulename().data(), this->rulename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rulename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->rulename(), output);
  }

  // repeated .pb.TCommonReward ArrInputValue = 2;
  for (int i = 0; i < this->arrinputvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrinputvalue(i), output);
  }

  // repeated .pb.TActivityConfOutputValueInfo ArrOutputValueInfo = 3;
  for (int i = 0; i < this->arroutputvalueinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arroutputvalueinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActivityConfValueInfo)
}

::google::protobuf::uint8* TActivityConfValueInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActivityConfValueInfo)
  // optional string RuleName = 1;
  if (has_rulename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rulename().data(), this->rulename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rulename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rulename(), target);
  }

  // repeated .pb.TCommonReward ArrInputValue = 2;
  for (int i = 0; i < this->arrinputvalue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrinputvalue(i), target);
  }

  // repeated .pb.TActivityConfOutputValueInfo ArrOutputValueInfo = 3;
  for (int i = 0; i < this->arroutputvalueinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arroutputvalueinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActivityConfValueInfo)
  return target;
}

int TActivityConfValueInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RuleName = 1;
    if (has_rulename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rulename());
    }

  }
  // repeated .pb.TCommonReward ArrInputValue = 2;
  total_size += 1 * this->arrinputvalue_size();
  for (int i = 0; i < this->arrinputvalue_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrinputvalue(i));
  }

  // repeated .pb.TActivityConfOutputValueInfo ArrOutputValueInfo = 3;
  total_size += 1 * this->arroutputvalueinfo_size();
  for (int i = 0; i < this->arroutputvalueinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arroutputvalueinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActivityConfValueInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActivityConfValueInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActivityConfValueInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActivityConfValueInfo::MergeFrom(const TActivityConfValueInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrinputvalue_.MergeFrom(from.arrinputvalue_);
  arroutputvalueinfo_.MergeFrom(from.arroutputvalueinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rulename()) {
      set_rulename(from.rulename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActivityConfValueInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActivityConfValueInfo::CopyFrom(const TActivityConfValueInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActivityConfValueInfo::IsInitialized() const {

  return true;
}

void TActivityConfValueInfo::Swap(TActivityConfValueInfo* other) {
  if (other != this) {
    std::swap(rulename_, other->rulename_);
    arrinputvalue_.Swap(&other->arrinputvalue_);
    arroutputvalueinfo_.Swap(&other->arroutputvalueinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActivityConfValueInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActivityConfValueInfo_descriptor_;
  metadata.reflection = TActivityConfValueInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCheckActivityReq::kActivityConfInfoFieldNumber;
const int TCheckActivityReq::kReplaceFieldNumber;
#endif  // !_MSC_VER

TCheckActivityReq::TCheckActivityReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCheckActivityReq)
}

void TCheckActivityReq::InitAsDefaultInstance() {
  activityconfinfo_ = const_cast< ::pb::TActivityConfInfo*>(&::pb::TActivityConfInfo::default_instance());
}

TCheckActivityReq::TCheckActivityReq(const TCheckActivityReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCheckActivityReq)
}

void TCheckActivityReq::SharedCtor() {
  _cached_size_ = 0;
  activityconfinfo_ = NULL;
  replace_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCheckActivityReq::~TCheckActivityReq() {
  // @@protoc_insertion_point(destructor:pb.TCheckActivityReq)
  SharedDtor();
}

void TCheckActivityReq::SharedDtor() {
  if (this != default_instance_) {
    delete activityconfinfo_;
  }
}

void TCheckActivityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCheckActivityReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCheckActivityReq_descriptor_;
}

const TCheckActivityReq& TCheckActivityReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActivityConf_2eproto();
  return *default_instance_;
}

TCheckActivityReq* TCheckActivityReq::default_instance_ = NULL;

TCheckActivityReq* TCheckActivityReq::New() const {
  return new TCheckActivityReq;
}

void TCheckActivityReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_activityconfinfo()) {
      if (activityconfinfo_ != NULL) activityconfinfo_->::pb::TActivityConfInfo::Clear();
    }
    replace_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCheckActivityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCheckActivityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TActivityConfInfo ActivityConfInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activityconfinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Replace;
        break;
      }

      // optional bool Replace = 2;
      case 2: {
        if (tag == 16) {
         parse_Replace:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &replace_)));
          set_has_replace();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCheckActivityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCheckActivityReq)
  return false;
#undef DO_
}

void TCheckActivityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCheckActivityReq)
  // optional .pb.TActivityConfInfo ActivityConfInfo = 1;
  if (has_activityconfinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activityconfinfo(), output);
  }

  // optional bool Replace = 2;
  if (has_replace()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->replace(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCheckActivityReq)
}

::google::protobuf::uint8* TCheckActivityReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCheckActivityReq)
  // optional .pb.TActivityConfInfo ActivityConfInfo = 1;
  if (has_activityconfinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->activityconfinfo(), target);
  }

  // optional bool Replace = 2;
  if (has_replace()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->replace(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCheckActivityReq)
  return target;
}

int TCheckActivityReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TActivityConfInfo ActivityConfInfo = 1;
    if (has_activityconfinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activityconfinfo());
    }

    // optional bool Replace = 2;
    if (has_replace()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCheckActivityReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCheckActivityReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCheckActivityReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCheckActivityReq::MergeFrom(const TCheckActivityReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activityconfinfo()) {
      mutable_activityconfinfo()->::pb::TActivityConfInfo::MergeFrom(from.activityconfinfo());
    }
    if (from.has_replace()) {
      set_replace(from.replace());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCheckActivityReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCheckActivityReq::CopyFrom(const TCheckActivityReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCheckActivityReq::IsInitialized() const {

  return true;
}

void TCheckActivityReq::Swap(TCheckActivityReq* other) {
  if (other != this) {
    std::swap(activityconfinfo_, other->activityconfinfo_);
    std::swap(replace_, other->replace_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCheckActivityReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCheckActivityReq_descriptor_;
  metadata.reflection = TCheckActivityReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCheckActivityRsp::kErrFieldNumber;
const int TCheckActivityRsp::kValueErrCodeFieldNumber;
const int TCheckActivityRsp::kArrValueInfoFieldNumber;
#endif  // !_MSC_VER

TCheckActivityRsp::TCheckActivityRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCheckActivityRsp)
}

void TCheckActivityRsp::InitAsDefaultInstance() {
}

TCheckActivityRsp::TCheckActivityRsp(const TCheckActivityRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCheckActivityRsp)
}

void TCheckActivityRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  err_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valueerrcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCheckActivityRsp::~TCheckActivityRsp() {
  // @@protoc_insertion_point(destructor:pb.TCheckActivityRsp)
  SharedDtor();
}

void TCheckActivityRsp::SharedDtor() {
  if (err_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete err_;
  }
  if (this != default_instance_) {
  }
}

void TCheckActivityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCheckActivityRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCheckActivityRsp_descriptor_;
}

const TCheckActivityRsp& TCheckActivityRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActivityConf_2eproto();
  return *default_instance_;
}

TCheckActivityRsp* TCheckActivityRsp::default_instance_ = NULL;

TCheckActivityRsp* TCheckActivityRsp::New() const {
  return new TCheckActivityRsp;
}

void TCheckActivityRsp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_err()) {
      if (err_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        err_->clear();
      }
    }
    valueerrcode_ = 0;
  }
  arrvalueinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCheckActivityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCheckActivityRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Err = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ValueErrCode;
        break;
      }

      // optional .pb.TActivityConfErrCode ValueErrCode = 2;
      case 2: {
        if (tag == 16) {
         parse_ValueErrCode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::TActivityConfErrCode_IsValid(value)) {
            set_valueerrcode(static_cast< ::pb::TActivityConfErrCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrValueInfo;
        break;
      }

      // repeated .pb.TActivityConfValueInfo ArrValueInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrValueInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrvalueinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrValueInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCheckActivityRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCheckActivityRsp)
  return false;
#undef DO_
}

void TCheckActivityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCheckActivityRsp)
  // optional string Err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->err(), output);
  }

  // optional .pb.TActivityConfErrCode ValueErrCode = 2;
  if (has_valueerrcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->valueerrcode(), output);
  }

  // repeated .pb.TActivityConfValueInfo ArrValueInfo = 3;
  for (int i = 0; i < this->arrvalueinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrvalueinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCheckActivityRsp)
}

::google::protobuf::uint8* TCheckActivityRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCheckActivityRsp)
  // optional string Err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->err(), target);
  }

  // optional .pb.TActivityConfErrCode ValueErrCode = 2;
  if (has_valueerrcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->valueerrcode(), target);
  }

  // repeated .pb.TActivityConfValueInfo ArrValueInfo = 3;
  for (int i = 0; i < this->arrvalueinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrvalueinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCheckActivityRsp)
  return target;
}

int TCheckActivityRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional .pb.TActivityConfErrCode ValueErrCode = 2;
    if (has_valueerrcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->valueerrcode());
    }

  }
  // repeated .pb.TActivityConfValueInfo ArrValueInfo = 3;
  total_size += 1 * this->arrvalueinfo_size();
  for (int i = 0; i < this->arrvalueinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrvalueinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCheckActivityRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCheckActivityRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCheckActivityRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCheckActivityRsp::MergeFrom(const TCheckActivityRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrvalueinfo_.MergeFrom(from.arrvalueinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
    if (from.has_valueerrcode()) {
      set_valueerrcode(from.valueerrcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCheckActivityRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCheckActivityRsp::CopyFrom(const TCheckActivityRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCheckActivityRsp::IsInitialized() const {

  return true;
}

void TCheckActivityRsp::Swap(TCheckActivityRsp* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(valueerrcode_, other->valueerrcode_);
    arrvalueinfo_.Swap(&other->arrvalueinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCheckActivityRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCheckActivityRsp_descriptor_;
  metadata.reflection = TCheckActivityRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDeployActivityConfReq::kMaxVersionFieldNumber;
const int TDeployActivityConfReq::kForceRefreshFieldNumber;
#endif  // !_MSC_VER

TDeployActivityConfReq::TDeployActivityConfReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDeployActivityConfReq)
}

void TDeployActivityConfReq::InitAsDefaultInstance() {
}

TDeployActivityConfReq::TDeployActivityConfReq(const TDeployActivityConfReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDeployActivityConfReq)
}

void TDeployActivityConfReq::SharedCtor() {
  _cached_size_ = 0;
  maxversion_ = 0u;
  forcerefresh_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDeployActivityConfReq::~TDeployActivityConfReq() {
  // @@protoc_insertion_point(destructor:pb.TDeployActivityConfReq)
  SharedDtor();
}

void TDeployActivityConfReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDeployActivityConfReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDeployActivityConfReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDeployActivityConfReq_descriptor_;
}

const TDeployActivityConfReq& TDeployActivityConfReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActivityConf_2eproto();
  return *default_instance_;
}

TDeployActivityConfReq* TDeployActivityConfReq::default_instance_ = NULL;

TDeployActivityConfReq* TDeployActivityConfReq::New() const {
  return new TDeployActivityConfReq;
}

void TDeployActivityConfReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDeployActivityConfReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(maxversion_, forcerefresh_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDeployActivityConfReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDeployActivityConfReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MaxVersion = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxversion_)));
          set_has_maxversion();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ForceRefresh;
        break;
      }

      // optional bool ForceRefresh = 2;
      case 2: {
        if (tag == 16) {
         parse_ForceRefresh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forcerefresh_)));
          set_has_forcerefresh();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDeployActivityConfReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDeployActivityConfReq)
  return false;
#undef DO_
}

void TDeployActivityConfReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDeployActivityConfReq)
  // optional uint32 MaxVersion = 1;
  if (has_maxversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->maxversion(), output);
  }

  // optional bool ForceRefresh = 2;
  if (has_forcerefresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->forcerefresh(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDeployActivityConfReq)
}

::google::protobuf::uint8* TDeployActivityConfReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDeployActivityConfReq)
  // optional uint32 MaxVersion = 1;
  if (has_maxversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->maxversion(), target);
  }

  // optional bool ForceRefresh = 2;
  if (has_forcerefresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->forcerefresh(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDeployActivityConfReq)
  return target;
}

int TDeployActivityConfReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MaxVersion = 1;
    if (has_maxversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxversion());
    }

    // optional bool ForceRefresh = 2;
    if (has_forcerefresh()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDeployActivityConfReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDeployActivityConfReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDeployActivityConfReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDeployActivityConfReq::MergeFrom(const TDeployActivityConfReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maxversion()) {
      set_maxversion(from.maxversion());
    }
    if (from.has_forcerefresh()) {
      set_forcerefresh(from.forcerefresh());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDeployActivityConfReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDeployActivityConfReq::CopyFrom(const TDeployActivityConfReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDeployActivityConfReq::IsInitialized() const {

  return true;
}

void TDeployActivityConfReq::Swap(TDeployActivityConfReq* other) {
  if (other != this) {
    std::swap(maxversion_, other->maxversion_);
    std::swap(forcerefresh_, other->forcerefresh_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDeployActivityConfReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDeployActivityConfReq_descriptor_;
  metadata.reflection = TDeployActivityConfReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDeployActivityConfRsp::kErrFieldNumber;
#endif  // !_MSC_VER

TDeployActivityConfRsp::TDeployActivityConfRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDeployActivityConfRsp)
}

void TDeployActivityConfRsp::InitAsDefaultInstance() {
}

TDeployActivityConfRsp::TDeployActivityConfRsp(const TDeployActivityConfRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDeployActivityConfRsp)
}

void TDeployActivityConfRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  err_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDeployActivityConfRsp::~TDeployActivityConfRsp() {
  // @@protoc_insertion_point(destructor:pb.TDeployActivityConfRsp)
  SharedDtor();
}

void TDeployActivityConfRsp::SharedDtor() {
  if (err_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete err_;
  }
  if (this != default_instance_) {
  }
}

void TDeployActivityConfRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDeployActivityConfRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDeployActivityConfRsp_descriptor_;
}

const TDeployActivityConfRsp& TDeployActivityConfRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActivityConf_2eproto();
  return *default_instance_;
}

TDeployActivityConfRsp* TDeployActivityConfRsp::default_instance_ = NULL;

TDeployActivityConfRsp* TDeployActivityConfRsp::New() const {
  return new TDeployActivityConfRsp;
}

void TDeployActivityConfRsp::Clear() {
  if (has_err()) {
    if (err_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      err_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDeployActivityConfRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDeployActivityConfRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Err = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDeployActivityConfRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDeployActivityConfRsp)
  return false;
#undef DO_
}

void TDeployActivityConfRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDeployActivityConfRsp)
  // optional string Err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->err(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDeployActivityConfRsp)
}

::google::protobuf::uint8* TDeployActivityConfRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDeployActivityConfRsp)
  // optional string Err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->err(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDeployActivityConfRsp)
  return target;
}

int TDeployActivityConfRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDeployActivityConfRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDeployActivityConfRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDeployActivityConfRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDeployActivityConfRsp::MergeFrom(const TDeployActivityConfRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDeployActivityConfRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDeployActivityConfRsp::CopyFrom(const TDeployActivityConfRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDeployActivityConfRsp::IsInitialized() const {

  return true;
}

void TDeployActivityConfRsp::Swap(TDeployActivityConfRsp* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDeployActivityConfRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDeployActivityConfRsp_descriptor_;
  metadata.reflection = TDeployActivityConfRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActivityConfGetActivityConfReq::kMaxVersionFieldNumber;
#endif  // !_MSC_VER

TActivityConfGetActivityConfReq::TActivityConfGetActivityConfReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActivityConfGetActivityConfReq)
}

void TActivityConfGetActivityConfReq::InitAsDefaultInstance() {
}

TActivityConfGetActivityConfReq::TActivityConfGetActivityConfReq(const TActivityConfGetActivityConfReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActivityConfGetActivityConfReq)
}

void TActivityConfGetActivityConfReq::SharedCtor() {
  _cached_size_ = 0;
  maxversion_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActivityConfGetActivityConfReq::~TActivityConfGetActivityConfReq() {
  // @@protoc_insertion_point(destructor:pb.TActivityConfGetActivityConfReq)
  SharedDtor();
}

void TActivityConfGetActivityConfReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActivityConfGetActivityConfReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActivityConfGetActivityConfReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActivityConfGetActivityConfReq_descriptor_;
}

const TActivityConfGetActivityConfReq& TActivityConfGetActivityConfReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActivityConf_2eproto();
  return *default_instance_;
}

TActivityConfGetActivityConfReq* TActivityConfGetActivityConfReq::default_instance_ = NULL;

TActivityConfGetActivityConfReq* TActivityConfGetActivityConfReq::New() const {
  return new TActivityConfGetActivityConfReq;
}

void TActivityConfGetActivityConfReq::Clear() {
  maxversion_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActivityConfGetActivityConfReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActivityConfGetActivityConfReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MaxVersion = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxversion_)));
          set_has_maxversion();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActivityConfGetActivityConfReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActivityConfGetActivityConfReq)
  return false;
#undef DO_
}

void TActivityConfGetActivityConfReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActivityConfGetActivityConfReq)
  // optional uint32 MaxVersion = 1;
  if (has_maxversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->maxversion(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActivityConfGetActivityConfReq)
}

::google::protobuf::uint8* TActivityConfGetActivityConfReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActivityConfGetActivityConfReq)
  // optional uint32 MaxVersion = 1;
  if (has_maxversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->maxversion(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActivityConfGetActivityConfReq)
  return target;
}

int TActivityConfGetActivityConfReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MaxVersion = 1;
    if (has_maxversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxversion());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActivityConfGetActivityConfReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActivityConfGetActivityConfReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActivityConfGetActivityConfReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActivityConfGetActivityConfReq::MergeFrom(const TActivityConfGetActivityConfReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maxversion()) {
      set_maxversion(from.maxversion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActivityConfGetActivityConfReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActivityConfGetActivityConfReq::CopyFrom(const TActivityConfGetActivityConfReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActivityConfGetActivityConfReq::IsInitialized() const {

  return true;
}

void TActivityConfGetActivityConfReq::Swap(TActivityConfGetActivityConfReq* other) {
  if (other != this) {
    std::swap(maxversion_, other->maxversion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActivityConfGetActivityConfReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActivityConfGetActivityConfReq_descriptor_;
  metadata.reflection = TActivityConfGetActivityConfReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActivityConfGetActivityConfRsp::kMaxVersionFieldNumber;
const int TActivityConfGetActivityConfRsp::kArrConfInfoFieldNumber;
#endif  // !_MSC_VER

TActivityConfGetActivityConfRsp::TActivityConfGetActivityConfRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActivityConfGetActivityConfRsp)
}

void TActivityConfGetActivityConfRsp::InitAsDefaultInstance() {
}

TActivityConfGetActivityConfRsp::TActivityConfGetActivityConfRsp(const TActivityConfGetActivityConfRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActivityConfGetActivityConfRsp)
}

void TActivityConfGetActivityConfRsp::SharedCtor() {
  _cached_size_ = 0;
  maxversion_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActivityConfGetActivityConfRsp::~TActivityConfGetActivityConfRsp() {
  // @@protoc_insertion_point(destructor:pb.TActivityConfGetActivityConfRsp)
  SharedDtor();
}

void TActivityConfGetActivityConfRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActivityConfGetActivityConfRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActivityConfGetActivityConfRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActivityConfGetActivityConfRsp_descriptor_;
}

const TActivityConfGetActivityConfRsp& TActivityConfGetActivityConfRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActivityConf_2eproto();
  return *default_instance_;
}

TActivityConfGetActivityConfRsp* TActivityConfGetActivityConfRsp::default_instance_ = NULL;

TActivityConfGetActivityConfRsp* TActivityConfGetActivityConfRsp::New() const {
  return new TActivityConfGetActivityConfRsp;
}

void TActivityConfGetActivityConfRsp::Clear() {
  maxversion_ = 0u;
  arrconfinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActivityConfGetActivityConfRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActivityConfGetActivityConfRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MaxVersion = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxversion_)));
          set_has_maxversion();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrConfInfo;
        break;
      }

      // repeated .pb.TActivityConfInfo ArrConfInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrConfInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrconfinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrConfInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActivityConfGetActivityConfRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActivityConfGetActivityConfRsp)
  return false;
#undef DO_
}

void TActivityConfGetActivityConfRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActivityConfGetActivityConfRsp)
  // optional uint32 MaxVersion = 1;
  if (has_maxversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->maxversion(), output);
  }

  // repeated .pb.TActivityConfInfo ArrConfInfo = 2;
  for (int i = 0; i < this->arrconfinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrconfinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActivityConfGetActivityConfRsp)
}

::google::protobuf::uint8* TActivityConfGetActivityConfRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActivityConfGetActivityConfRsp)
  // optional uint32 MaxVersion = 1;
  if (has_maxversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->maxversion(), target);
  }

  // repeated .pb.TActivityConfInfo ArrConfInfo = 2;
  for (int i = 0; i < this->arrconfinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrconfinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActivityConfGetActivityConfRsp)
  return target;
}

int TActivityConfGetActivityConfRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MaxVersion = 1;
    if (has_maxversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxversion());
    }

  }
  // repeated .pb.TActivityConfInfo ArrConfInfo = 2;
  total_size += 1 * this->arrconfinfo_size();
  for (int i = 0; i < this->arrconfinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrconfinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActivityConfGetActivityConfRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActivityConfGetActivityConfRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActivityConfGetActivityConfRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActivityConfGetActivityConfRsp::MergeFrom(const TActivityConfGetActivityConfRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrconfinfo_.MergeFrom(from.arrconfinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maxversion()) {
      set_maxversion(from.maxversion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActivityConfGetActivityConfRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActivityConfGetActivityConfRsp::CopyFrom(const TActivityConfGetActivityConfRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActivityConfGetActivityConfRsp::IsInitialized() const {

  return true;
}

void TActivityConfGetActivityConfRsp::Swap(TActivityConfGetActivityConfRsp* other) {
  if (other != this) {
    std::swap(maxversion_, other->maxversion_);
    arrconfinfo_.Swap(&other->arrconfinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActivityConfGetActivityConfRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActivityConfGetActivityConfRsp_descriptor_;
  metadata.reflection = TActivityConfGetActivityConfRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActivityConfUpdateNotify::kMaxVersionFieldNumber;
#endif  // !_MSC_VER

TActivityConfUpdateNotify::TActivityConfUpdateNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActivityConfUpdateNotify)
}

void TActivityConfUpdateNotify::InitAsDefaultInstance() {
}

TActivityConfUpdateNotify::TActivityConfUpdateNotify(const TActivityConfUpdateNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActivityConfUpdateNotify)
}

void TActivityConfUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
  maxversion_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActivityConfUpdateNotify::~TActivityConfUpdateNotify() {
  // @@protoc_insertion_point(destructor:pb.TActivityConfUpdateNotify)
  SharedDtor();
}

void TActivityConfUpdateNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActivityConfUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActivityConfUpdateNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActivityConfUpdateNotify_descriptor_;
}

const TActivityConfUpdateNotify& TActivityConfUpdateNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActivityConf_2eproto();
  return *default_instance_;
}

TActivityConfUpdateNotify* TActivityConfUpdateNotify::default_instance_ = NULL;

TActivityConfUpdateNotify* TActivityConfUpdateNotify::New() const {
  return new TActivityConfUpdateNotify;
}

void TActivityConfUpdateNotify::Clear() {
  maxversion_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActivityConfUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActivityConfUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MaxVersion = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxversion_)));
          set_has_maxversion();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActivityConfUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActivityConfUpdateNotify)
  return false;
#undef DO_
}

void TActivityConfUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActivityConfUpdateNotify)
  // optional uint32 MaxVersion = 1;
  if (has_maxversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->maxversion(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActivityConfUpdateNotify)
}

::google::protobuf::uint8* TActivityConfUpdateNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActivityConfUpdateNotify)
  // optional uint32 MaxVersion = 1;
  if (has_maxversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->maxversion(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActivityConfUpdateNotify)
  return target;
}

int TActivityConfUpdateNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MaxVersion = 1;
    if (has_maxversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxversion());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActivityConfUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActivityConfUpdateNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActivityConfUpdateNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActivityConfUpdateNotify::MergeFrom(const TActivityConfUpdateNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maxversion()) {
      set_maxversion(from.maxversion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActivityConfUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActivityConfUpdateNotify::CopyFrom(const TActivityConfUpdateNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActivityConfUpdateNotify::IsInitialized() const {

  return true;
}

void TActivityConfUpdateNotify::Swap(TActivityConfUpdateNotify* other) {
  if (other != this) {
    std::swap(maxversion_, other->maxversion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActivityConfUpdateNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActivityConfUpdateNotify_descriptor_;
  metadata.reflection = TActivityConfUpdateNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
