// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/SlgResource.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/SlgResource.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TSlgResourceProduceSpeed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgResourceProduceSpeed_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgResourceBuildingRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgResourceBuildingRecord_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgResourceGetSlgResourceInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgResourceGetSlgResourceInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgResourceCollectReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgResourceCollectReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgResourceCollectRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgResourceCollectRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgResourceNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgResourceNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fSlgResource_2eproto() {
  protobuf_AddDesc_net_2fSlgResource_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/SlgResource.proto");
  GOOGLE_CHECK(file != NULL);
  TSlgResourceProduceSpeed_descriptor_ = file->message_type(0);
  static const int TSlgResourceProduceSpeed_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceProduceSpeed, producespeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceProduceSpeed, starttime_),
  };
  TSlgResourceProduceSpeed_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgResourceProduceSpeed_descriptor_,
      TSlgResourceProduceSpeed::default_instance_,
      TSlgResourceProduceSpeed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceProduceSpeed, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceProduceSpeed, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgResourceProduceSpeed));
  TSlgResourceBuildingRecord_descriptor_ = file->message_type(1);
  static const int TSlgResourceBuildingRecord_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceBuildingRecord, foundationtid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceBuildingRecord, producestartttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceBuildingRecord, producespeedarr_),
  };
  TSlgResourceBuildingRecord_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgResourceBuildingRecord_descriptor_,
      TSlgResourceBuildingRecord::default_instance_,
      TSlgResourceBuildingRecord_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceBuildingRecord, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceBuildingRecord, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgResourceBuildingRecord));
  TSlgResourceGetSlgResourceInfoRsp_descriptor_ = file->message_type(2);
  static const int TSlgResourceGetSlgResourceInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceGetSlgResourceInfoRsp, recordarr_),
  };
  TSlgResourceGetSlgResourceInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgResourceGetSlgResourceInfoRsp_descriptor_,
      TSlgResourceGetSlgResourceInfoRsp::default_instance_,
      TSlgResourceGetSlgResourceInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceGetSlgResourceInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceGetSlgResourceInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgResourceGetSlgResourceInfoRsp));
  TSlgResourceCollectReq_descriptor_ = file->message_type(3);
  static const int TSlgResourceCollectReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceCollectReq, buildingtid_),
  };
  TSlgResourceCollectReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgResourceCollectReq_descriptor_,
      TSlgResourceCollectReq::default_instance_,
      TSlgResourceCollectReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceCollectReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceCollectReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgResourceCollectReq));
  TSlgResourceCollectRsp_descriptor_ = file->message_type(4);
  static const int TSlgResourceCollectRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceCollectRsp, recordarr_),
  };
  TSlgResourceCollectRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgResourceCollectRsp_descriptor_,
      TSlgResourceCollectRsp::default_instance_,
      TSlgResourceCollectRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceCollectRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceCollectRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgResourceCollectRsp));
  TSlgResourceNotify_descriptor_ = file->message_type(5);
  static const int TSlgResourceNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceNotify, recordarr_),
  };
  TSlgResourceNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgResourceNotify_descriptor_,
      TSlgResourceNotify::default_instance_,
      TSlgResourceNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgResourceNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgResourceNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fSlgResource_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgResourceProduceSpeed_descriptor_, &TSlgResourceProduceSpeed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgResourceBuildingRecord_descriptor_, &TSlgResourceBuildingRecord::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgResourceGetSlgResourceInfoRsp_descriptor_, &TSlgResourceGetSlgResourceInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgResourceCollectReq_descriptor_, &TSlgResourceCollectReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgResourceCollectRsp_descriptor_, &TSlgResourceCollectRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgResourceNotify_descriptor_, &TSlgResourceNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fSlgResource_2eproto() {
  delete TSlgResourceProduceSpeed::default_instance_;
  delete TSlgResourceProduceSpeed_reflection_;
  delete TSlgResourceBuildingRecord::default_instance_;
  delete TSlgResourceBuildingRecord_reflection_;
  delete TSlgResourceGetSlgResourceInfoRsp::default_instance_;
  delete TSlgResourceGetSlgResourceInfoRsp_reflection_;
  delete TSlgResourceCollectReq::default_instance_;
  delete TSlgResourceCollectReq_reflection_;
  delete TSlgResourceCollectRsp::default_instance_;
  delete TSlgResourceCollectRsp_reflection_;
  delete TSlgResourceNotify::default_instance_;
  delete TSlgResourceNotify_reflection_;
}

void protobuf_AddDesc_net_2fSlgResource_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025net/SlgResource.proto\022\002pb\"C\n\030TSlgResou"
    "rceProduceSpeed\022\024\n\014ProduceSpeed\030\001 \001(\r\022\021\n"
    "\tStartTime\030\002 \001(\003\"\205\001\n\032TSlgResourceBuildin"
    "gRecord\022\025\n\rFoundationTid\030\001 \001(\r\022\031\n\021Produc"
    "eStarttTime\030\002 \001(\003\0225\n\017ProduceSpeedArr\030\003 \003"
    "(\0132\034.pb.TSlgResourceProduceSpeed\"V\n!TSlg"
    "ResourceGetSlgResourceInfoRsp\0221\n\tRecordA"
    "rr\030\001 \003(\0132\036.pb.TSlgResourceBuildingRecord"
    "\"-\n\026TSlgResourceCollectReq\022\023\n\013BuildingTi"
    "d\030\001 \001(\r\"K\n\026TSlgResourceCollectRsp\0221\n\tRec"
    "ordArr\030\001 \003(\0132\036.pb.TSlgResourceBuildingRe"
    "cord\"G\n\022TSlgResourceNotify\0221\n\tRecordArr\030"
    "\001 \003(\0132\036.pb.TSlgResourceBuildingRecord", 517);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/SlgResource.proto", &protobuf_RegisterTypes);
  TSlgResourceProduceSpeed::default_instance_ = new TSlgResourceProduceSpeed();
  TSlgResourceBuildingRecord::default_instance_ = new TSlgResourceBuildingRecord();
  TSlgResourceGetSlgResourceInfoRsp::default_instance_ = new TSlgResourceGetSlgResourceInfoRsp();
  TSlgResourceCollectReq::default_instance_ = new TSlgResourceCollectReq();
  TSlgResourceCollectRsp::default_instance_ = new TSlgResourceCollectRsp();
  TSlgResourceNotify::default_instance_ = new TSlgResourceNotify();
  TSlgResourceProduceSpeed::default_instance_->InitAsDefaultInstance();
  TSlgResourceBuildingRecord::default_instance_->InitAsDefaultInstance();
  TSlgResourceGetSlgResourceInfoRsp::default_instance_->InitAsDefaultInstance();
  TSlgResourceCollectReq::default_instance_->InitAsDefaultInstance();
  TSlgResourceCollectRsp::default_instance_->InitAsDefaultInstance();
  TSlgResourceNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fSlgResource_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fSlgResource_2eproto {
  StaticDescriptorInitializer_net_2fSlgResource_2eproto() {
    protobuf_AddDesc_net_2fSlgResource_2eproto();
  }
} static_descriptor_initializer_net_2fSlgResource_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TSlgResourceProduceSpeed::kProduceSpeedFieldNumber;
const int TSlgResourceProduceSpeed::kStartTimeFieldNumber;
#endif  // !_MSC_VER

TSlgResourceProduceSpeed::TSlgResourceProduceSpeed()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgResourceProduceSpeed)
}

void TSlgResourceProduceSpeed::InitAsDefaultInstance() {
}

TSlgResourceProduceSpeed::TSlgResourceProduceSpeed(const TSlgResourceProduceSpeed& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgResourceProduceSpeed)
}

void TSlgResourceProduceSpeed::SharedCtor() {
  _cached_size_ = 0;
  producespeed_ = 0u;
  starttime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgResourceProduceSpeed::~TSlgResourceProduceSpeed() {
  // @@protoc_insertion_point(destructor:pb.TSlgResourceProduceSpeed)
  SharedDtor();
}

void TSlgResourceProduceSpeed::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgResourceProduceSpeed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgResourceProduceSpeed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgResourceProduceSpeed_descriptor_;
}

const TSlgResourceProduceSpeed& TSlgResourceProduceSpeed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgResource_2eproto();
  return *default_instance_;
}

TSlgResourceProduceSpeed* TSlgResourceProduceSpeed::default_instance_ = NULL;

TSlgResourceProduceSpeed* TSlgResourceProduceSpeed::New() const {
  return new TSlgResourceProduceSpeed;
}

void TSlgResourceProduceSpeed::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TSlgResourceProduceSpeed*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(starttime_, producespeed_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgResourceProduceSpeed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgResourceProduceSpeed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ProduceSpeed = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &producespeed_)));
          set_has_producespeed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StartTime;
        break;
      }

      // optional int64 StartTime = 2;
      case 2: {
        if (tag == 16) {
         parse_StartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgResourceProduceSpeed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgResourceProduceSpeed)
  return false;
#undef DO_
}

void TSlgResourceProduceSpeed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgResourceProduceSpeed)
  // optional uint32 ProduceSpeed = 1;
  if (has_producespeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->producespeed(), output);
  }

  // optional int64 StartTime = 2;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->starttime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgResourceProduceSpeed)
}

::google::protobuf::uint8* TSlgResourceProduceSpeed::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgResourceProduceSpeed)
  // optional uint32 ProduceSpeed = 1;
  if (has_producespeed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->producespeed(), target);
  }

  // optional int64 StartTime = 2;
  if (has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->starttime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgResourceProduceSpeed)
  return target;
}

int TSlgResourceProduceSpeed::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ProduceSpeed = 1;
    if (has_producespeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->producespeed());
    }

    // optional int64 StartTime = 2;
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->starttime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgResourceProduceSpeed::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgResourceProduceSpeed* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgResourceProduceSpeed*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgResourceProduceSpeed::MergeFrom(const TSlgResourceProduceSpeed& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_producespeed()) {
      set_producespeed(from.producespeed());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgResourceProduceSpeed::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgResourceProduceSpeed::CopyFrom(const TSlgResourceProduceSpeed& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgResourceProduceSpeed::IsInitialized() const {

  return true;
}

void TSlgResourceProduceSpeed::Swap(TSlgResourceProduceSpeed* other) {
  if (other != this) {
    std::swap(producespeed_, other->producespeed_);
    std::swap(starttime_, other->starttime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgResourceProduceSpeed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgResourceProduceSpeed_descriptor_;
  metadata.reflection = TSlgResourceProduceSpeed_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgResourceBuildingRecord::kFoundationTidFieldNumber;
const int TSlgResourceBuildingRecord::kProduceStarttTimeFieldNumber;
const int TSlgResourceBuildingRecord::kProduceSpeedArrFieldNumber;
#endif  // !_MSC_VER

TSlgResourceBuildingRecord::TSlgResourceBuildingRecord()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgResourceBuildingRecord)
}

void TSlgResourceBuildingRecord::InitAsDefaultInstance() {
}

TSlgResourceBuildingRecord::TSlgResourceBuildingRecord(const TSlgResourceBuildingRecord& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgResourceBuildingRecord)
}

void TSlgResourceBuildingRecord::SharedCtor() {
  _cached_size_ = 0;
  foundationtid_ = 0u;
  producestartttime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgResourceBuildingRecord::~TSlgResourceBuildingRecord() {
  // @@protoc_insertion_point(destructor:pb.TSlgResourceBuildingRecord)
  SharedDtor();
}

void TSlgResourceBuildingRecord::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgResourceBuildingRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgResourceBuildingRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgResourceBuildingRecord_descriptor_;
}

const TSlgResourceBuildingRecord& TSlgResourceBuildingRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgResource_2eproto();
  return *default_instance_;
}

TSlgResourceBuildingRecord* TSlgResourceBuildingRecord::default_instance_ = NULL;

TSlgResourceBuildingRecord* TSlgResourceBuildingRecord::New() const {
  return new TSlgResourceBuildingRecord;
}

void TSlgResourceBuildingRecord::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    foundationtid_ = 0u;
    producestartttime_ = GOOGLE_LONGLONG(0);
  }
  producespeedarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgResourceBuildingRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgResourceBuildingRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FoundationTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &foundationtid_)));
          set_has_foundationtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ProduceStarttTime;
        break;
      }

      // optional int64 ProduceStarttTime = 2;
      case 2: {
        if (tag == 16) {
         parse_ProduceStarttTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &producestartttime_)));
          set_has_producestartttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ProduceSpeedArr;
        break;
      }

      // repeated .pb.TSlgResourceProduceSpeed ProduceSpeedArr = 3;
      case 3: {
        if (tag == 26) {
         parse_ProduceSpeedArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_producespeedarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ProduceSpeedArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgResourceBuildingRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgResourceBuildingRecord)
  return false;
#undef DO_
}

void TSlgResourceBuildingRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgResourceBuildingRecord)
  // optional uint32 FoundationTid = 1;
  if (has_foundationtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->foundationtid(), output);
  }

  // optional int64 ProduceStarttTime = 2;
  if (has_producestartttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->producestartttime(), output);
  }

  // repeated .pb.TSlgResourceProduceSpeed ProduceSpeedArr = 3;
  for (int i = 0; i < this->producespeedarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->producespeedarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgResourceBuildingRecord)
}

::google::protobuf::uint8* TSlgResourceBuildingRecord::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgResourceBuildingRecord)
  // optional uint32 FoundationTid = 1;
  if (has_foundationtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->foundationtid(), target);
  }

  // optional int64 ProduceStarttTime = 2;
  if (has_producestartttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->producestartttime(), target);
  }

  // repeated .pb.TSlgResourceProduceSpeed ProduceSpeedArr = 3;
  for (int i = 0; i < this->producespeedarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->producespeedarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgResourceBuildingRecord)
  return target;
}

int TSlgResourceBuildingRecord::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FoundationTid = 1;
    if (has_foundationtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->foundationtid());
    }

    // optional int64 ProduceStarttTime = 2;
    if (has_producestartttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->producestartttime());
    }

  }
  // repeated .pb.TSlgResourceProduceSpeed ProduceSpeedArr = 3;
  total_size += 1 * this->producespeedarr_size();
  for (int i = 0; i < this->producespeedarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->producespeedarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgResourceBuildingRecord::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgResourceBuildingRecord* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgResourceBuildingRecord*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgResourceBuildingRecord::MergeFrom(const TSlgResourceBuildingRecord& from) {
  GOOGLE_CHECK_NE(&from, this);
  producespeedarr_.MergeFrom(from.producespeedarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_foundationtid()) {
      set_foundationtid(from.foundationtid());
    }
    if (from.has_producestartttime()) {
      set_producestartttime(from.producestartttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgResourceBuildingRecord::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgResourceBuildingRecord::CopyFrom(const TSlgResourceBuildingRecord& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgResourceBuildingRecord::IsInitialized() const {

  return true;
}

void TSlgResourceBuildingRecord::Swap(TSlgResourceBuildingRecord* other) {
  if (other != this) {
    std::swap(foundationtid_, other->foundationtid_);
    std::swap(producestartttime_, other->producestartttime_);
    producespeedarr_.Swap(&other->producespeedarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgResourceBuildingRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgResourceBuildingRecord_descriptor_;
  metadata.reflection = TSlgResourceBuildingRecord_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgResourceGetSlgResourceInfoRsp::kRecordArrFieldNumber;
#endif  // !_MSC_VER

TSlgResourceGetSlgResourceInfoRsp::TSlgResourceGetSlgResourceInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgResourceGetSlgResourceInfoRsp)
}

void TSlgResourceGetSlgResourceInfoRsp::InitAsDefaultInstance() {
}

TSlgResourceGetSlgResourceInfoRsp::TSlgResourceGetSlgResourceInfoRsp(const TSlgResourceGetSlgResourceInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgResourceGetSlgResourceInfoRsp)
}

void TSlgResourceGetSlgResourceInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgResourceGetSlgResourceInfoRsp::~TSlgResourceGetSlgResourceInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TSlgResourceGetSlgResourceInfoRsp)
  SharedDtor();
}

void TSlgResourceGetSlgResourceInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgResourceGetSlgResourceInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgResourceGetSlgResourceInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgResourceGetSlgResourceInfoRsp_descriptor_;
}

const TSlgResourceGetSlgResourceInfoRsp& TSlgResourceGetSlgResourceInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgResource_2eproto();
  return *default_instance_;
}

TSlgResourceGetSlgResourceInfoRsp* TSlgResourceGetSlgResourceInfoRsp::default_instance_ = NULL;

TSlgResourceGetSlgResourceInfoRsp* TSlgResourceGetSlgResourceInfoRsp::New() const {
  return new TSlgResourceGetSlgResourceInfoRsp;
}

void TSlgResourceGetSlgResourceInfoRsp::Clear() {
  recordarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgResourceGetSlgResourceInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgResourceGetSlgResourceInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RecordArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_recordarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RecordArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgResourceGetSlgResourceInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgResourceGetSlgResourceInfoRsp)
  return false;
#undef DO_
}

void TSlgResourceGetSlgResourceInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgResourceGetSlgResourceInfoRsp)
  // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
  for (int i = 0; i < this->recordarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->recordarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgResourceGetSlgResourceInfoRsp)
}

::google::protobuf::uint8* TSlgResourceGetSlgResourceInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgResourceGetSlgResourceInfoRsp)
  // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
  for (int i = 0; i < this->recordarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->recordarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgResourceGetSlgResourceInfoRsp)
  return target;
}

int TSlgResourceGetSlgResourceInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
  total_size += 1 * this->recordarr_size();
  for (int i = 0; i < this->recordarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->recordarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgResourceGetSlgResourceInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgResourceGetSlgResourceInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgResourceGetSlgResourceInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgResourceGetSlgResourceInfoRsp::MergeFrom(const TSlgResourceGetSlgResourceInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  recordarr_.MergeFrom(from.recordarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgResourceGetSlgResourceInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgResourceGetSlgResourceInfoRsp::CopyFrom(const TSlgResourceGetSlgResourceInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgResourceGetSlgResourceInfoRsp::IsInitialized() const {

  return true;
}

void TSlgResourceGetSlgResourceInfoRsp::Swap(TSlgResourceGetSlgResourceInfoRsp* other) {
  if (other != this) {
    recordarr_.Swap(&other->recordarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgResourceGetSlgResourceInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgResourceGetSlgResourceInfoRsp_descriptor_;
  metadata.reflection = TSlgResourceGetSlgResourceInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgResourceCollectReq::kBuildingTidFieldNumber;
#endif  // !_MSC_VER

TSlgResourceCollectReq::TSlgResourceCollectReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgResourceCollectReq)
}

void TSlgResourceCollectReq::InitAsDefaultInstance() {
}

TSlgResourceCollectReq::TSlgResourceCollectReq(const TSlgResourceCollectReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgResourceCollectReq)
}

void TSlgResourceCollectReq::SharedCtor() {
  _cached_size_ = 0;
  buildingtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgResourceCollectReq::~TSlgResourceCollectReq() {
  // @@protoc_insertion_point(destructor:pb.TSlgResourceCollectReq)
  SharedDtor();
}

void TSlgResourceCollectReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgResourceCollectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgResourceCollectReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgResourceCollectReq_descriptor_;
}

const TSlgResourceCollectReq& TSlgResourceCollectReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgResource_2eproto();
  return *default_instance_;
}

TSlgResourceCollectReq* TSlgResourceCollectReq::default_instance_ = NULL;

TSlgResourceCollectReq* TSlgResourceCollectReq::New() const {
  return new TSlgResourceCollectReq;
}

void TSlgResourceCollectReq::Clear() {
  buildingtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgResourceCollectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgResourceCollectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BuildingTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buildingtid_)));
          set_has_buildingtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgResourceCollectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgResourceCollectReq)
  return false;
#undef DO_
}

void TSlgResourceCollectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgResourceCollectReq)
  // optional uint32 BuildingTid = 1;
  if (has_buildingtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->buildingtid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgResourceCollectReq)
}

::google::protobuf::uint8* TSlgResourceCollectReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgResourceCollectReq)
  // optional uint32 BuildingTid = 1;
  if (has_buildingtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->buildingtid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgResourceCollectReq)
  return target;
}

int TSlgResourceCollectReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BuildingTid = 1;
    if (has_buildingtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buildingtid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgResourceCollectReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgResourceCollectReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgResourceCollectReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgResourceCollectReq::MergeFrom(const TSlgResourceCollectReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buildingtid()) {
      set_buildingtid(from.buildingtid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgResourceCollectReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgResourceCollectReq::CopyFrom(const TSlgResourceCollectReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgResourceCollectReq::IsInitialized() const {

  return true;
}

void TSlgResourceCollectReq::Swap(TSlgResourceCollectReq* other) {
  if (other != this) {
    std::swap(buildingtid_, other->buildingtid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgResourceCollectReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgResourceCollectReq_descriptor_;
  metadata.reflection = TSlgResourceCollectReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgResourceCollectRsp::kRecordArrFieldNumber;
#endif  // !_MSC_VER

TSlgResourceCollectRsp::TSlgResourceCollectRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgResourceCollectRsp)
}

void TSlgResourceCollectRsp::InitAsDefaultInstance() {
}

TSlgResourceCollectRsp::TSlgResourceCollectRsp(const TSlgResourceCollectRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgResourceCollectRsp)
}

void TSlgResourceCollectRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgResourceCollectRsp::~TSlgResourceCollectRsp() {
  // @@protoc_insertion_point(destructor:pb.TSlgResourceCollectRsp)
  SharedDtor();
}

void TSlgResourceCollectRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgResourceCollectRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgResourceCollectRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgResourceCollectRsp_descriptor_;
}

const TSlgResourceCollectRsp& TSlgResourceCollectRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgResource_2eproto();
  return *default_instance_;
}

TSlgResourceCollectRsp* TSlgResourceCollectRsp::default_instance_ = NULL;

TSlgResourceCollectRsp* TSlgResourceCollectRsp::New() const {
  return new TSlgResourceCollectRsp;
}

void TSlgResourceCollectRsp::Clear() {
  recordarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgResourceCollectRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgResourceCollectRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RecordArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_recordarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RecordArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgResourceCollectRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgResourceCollectRsp)
  return false;
#undef DO_
}

void TSlgResourceCollectRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgResourceCollectRsp)
  // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
  for (int i = 0; i < this->recordarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->recordarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgResourceCollectRsp)
}

::google::protobuf::uint8* TSlgResourceCollectRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgResourceCollectRsp)
  // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
  for (int i = 0; i < this->recordarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->recordarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgResourceCollectRsp)
  return target;
}

int TSlgResourceCollectRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
  total_size += 1 * this->recordarr_size();
  for (int i = 0; i < this->recordarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->recordarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgResourceCollectRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgResourceCollectRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgResourceCollectRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgResourceCollectRsp::MergeFrom(const TSlgResourceCollectRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  recordarr_.MergeFrom(from.recordarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgResourceCollectRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgResourceCollectRsp::CopyFrom(const TSlgResourceCollectRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgResourceCollectRsp::IsInitialized() const {

  return true;
}

void TSlgResourceCollectRsp::Swap(TSlgResourceCollectRsp* other) {
  if (other != this) {
    recordarr_.Swap(&other->recordarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgResourceCollectRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgResourceCollectRsp_descriptor_;
  metadata.reflection = TSlgResourceCollectRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgResourceNotify::kRecordArrFieldNumber;
#endif  // !_MSC_VER

TSlgResourceNotify::TSlgResourceNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgResourceNotify)
}

void TSlgResourceNotify::InitAsDefaultInstance() {
}

TSlgResourceNotify::TSlgResourceNotify(const TSlgResourceNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgResourceNotify)
}

void TSlgResourceNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgResourceNotify::~TSlgResourceNotify() {
  // @@protoc_insertion_point(destructor:pb.TSlgResourceNotify)
  SharedDtor();
}

void TSlgResourceNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgResourceNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgResourceNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgResourceNotify_descriptor_;
}

const TSlgResourceNotify& TSlgResourceNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgResource_2eproto();
  return *default_instance_;
}

TSlgResourceNotify* TSlgResourceNotify::default_instance_ = NULL;

TSlgResourceNotify* TSlgResourceNotify::New() const {
  return new TSlgResourceNotify;
}

void TSlgResourceNotify::Clear() {
  recordarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgResourceNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgResourceNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RecordArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_recordarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RecordArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgResourceNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgResourceNotify)
  return false;
#undef DO_
}

void TSlgResourceNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgResourceNotify)
  // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
  for (int i = 0; i < this->recordarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->recordarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgResourceNotify)
}

::google::protobuf::uint8* TSlgResourceNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgResourceNotify)
  // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
  for (int i = 0; i < this->recordarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->recordarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgResourceNotify)
  return target;
}

int TSlgResourceNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
  total_size += 1 * this->recordarr_size();
  for (int i = 0; i < this->recordarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->recordarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgResourceNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgResourceNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgResourceNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgResourceNotify::MergeFrom(const TSlgResourceNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  recordarr_.MergeFrom(from.recordarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgResourceNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgResourceNotify::CopyFrom(const TSlgResourceNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgResourceNotify::IsInitialized() const {

  return true;
}

void TSlgResourceNotify::Swap(TSlgResourceNotify* other) {
  if (other != this) {
    recordarr_.Swap(&other->recordarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgResourceNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgResourceNotify_descriptor_;
  metadata.reflection = TSlgResourceNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
