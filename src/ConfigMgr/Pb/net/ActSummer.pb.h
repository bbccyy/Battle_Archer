// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActSummer.proto

#ifndef PROTOBUF_net_2fActSummer_2eproto__INCLUDED
#define PROTOBUF_net_2fActSummer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
#include "net/OpenActivity.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActSummer_2eproto();
void protobuf_AssignDesc_net_2fActSummer_2eproto();
void protobuf_ShutdownFile_net_2fActSummer_2eproto();

class TActSummerBuyInfo;
class TActSummerGetInfoRsp;
class TActSummerBuyGoodsReq;
class TActSummerBuyGoodsRsp;
class TActSummerGetTaskRewardReq;
class TActSummerGetTaskRewardRsp;
class TActSummerExchangeReq;
class TActSummerExchangeRsp;
class TActSummerRmbGoodsChangeNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActSummerBuyInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActSummer.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActSummerBuyInfo : public ::google::protobuf::Message {
 public:
  TActSummerBuyInfo();
  virtual ~TActSummerBuyInfo();

  TActSummerBuyInfo(const TActSummerBuyInfo& from);

  inline TActSummerBuyInfo& operator=(const TActSummerBuyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActSummerBuyInfo& default_instance();

  void Swap(TActSummerBuyInfo* other);

  // implements Message ----------------------------------------------

  TActSummerBuyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActSummerBuyInfo& from);
  void MergeFrom(const TActSummerBuyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActSummerBuyInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActSummerBuyInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint64 BuyTime = 3;
  inline bool has_buytime() const;
  inline void clear_buytime();
  static const int kBuyTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActSummerBuyInfo</name>
  	<Function>
  		<name>buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 buytime() const;
  inline void set_buytime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActSummerBuyInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_buytime();
  inline void clear_has_buytime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint64 buytime_;
  friend void  protobuf_AddDesc_net_2fActSummer_2eproto();
  friend void protobuf_AssignDesc_net_2fActSummer_2eproto();
  friend void protobuf_ShutdownFile_net_2fActSummer_2eproto();

  void InitAsDefaultInstance();
  static TActSummerBuyInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActSummerGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActSummer.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActSummerGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActSummerGetInfoRsp();
  virtual ~TActSummerGetInfoRsp();

  TActSummerGetInfoRsp(const TActSummerGetInfoRsp& from);

  inline TActSummerGetInfoRsp& operator=(const TActSummerGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActSummerGetInfoRsp& default_instance();

  void Swap(TActSummerGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActSummerGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActSummerGetInfoRsp& from);
  void MergeFrom(const TActSummerGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActSummerBuyInfo ArrRmbGoodsBuyInfo = 1;
  inline int arrrmbgoodsbuyinfo_size() const;
  inline void clear_arrrmbgoodsbuyinfo();
  static const int kArrRmbGoodsBuyInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActSummerGetInfoRsp</name>
  	<Function>
  		<name>arrrmbgoodsbuyinfo</name>
  		<replaceName>ArrRmbGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrmbgoodsbuyinfo</name>
  		<replaceName>ArrRmbGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrmbgoodsbuyinfo</name>
  		<replaceName>ArrRmbGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrmbgoodsbuyinfo</name>
  		<replaceName>ArrRmbGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrmbgoodsbuyinfo_size</name>
  		<replaceName>ArrRmbGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActSummerBuyInfo& arrrmbgoodsbuyinfo(int index) const;
  inline ::pb::TActSummerBuyInfo* mutable_arrrmbgoodsbuyinfo(int index);
  inline ::pb::TActSummerBuyInfo* add_arrrmbgoodsbuyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >&
      arrrmbgoodsbuyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >*
      mutable_arrrmbgoodsbuyinfo();

  // repeated .pb.TActSummerBuyInfo ArrGoodsBuyInfo = 2;
  inline int arrgoodsbuyinfo_size() const;
  inline void clear_arrgoodsbuyinfo();
  static const int kArrGoodsBuyInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActSummerGetInfoRsp</name>
  	<Function>
  		<name>arrgoodsbuyinfo</name>
  		<replaceName>ArrGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrgoodsbuyinfo</name>
  		<replaceName>ArrGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrgoodsbuyinfo</name>
  		<replaceName>ArrGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrgoodsbuyinfo</name>
  		<replaceName>ArrGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrgoodsbuyinfo_size</name>
  		<replaceName>ArrGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActSummerBuyInfo& arrgoodsbuyinfo(int index) const;
  inline ::pb::TActSummerBuyInfo* mutable_arrgoodsbuyinfo(int index);
  inline ::pb::TActSummerBuyInfo* add_arrgoodsbuyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >&
      arrgoodsbuyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >*
      mutable_arrgoodsbuyinfo();

  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 3;
  inline int arrtaskrewardinfo_size() const;
  inline void clear_arrtaskrewardinfo();
  static const int kArrTaskRewardInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActSummerGetInfoRsp</name>
  	<Function>
  		<name>arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrtaskrewardinfo_size</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrtaskrewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrtaskrewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrtaskrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrtaskrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrtaskrewardinfo();

  // repeated .pb.TActSummerBuyInfo ArrExchangedInfo = 4;
  inline int arrexchangedinfo_size() const;
  inline void clear_arrexchangedinfo();
  static const int kArrExchangedInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActSummerGetInfoRsp</name>
  	<Function>
  		<name>arrexchangedinfo</name>
  		<replaceName>ArrExchangedInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrexchangedinfo</name>
  		<replaceName>ArrExchangedInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrexchangedinfo</name>
  		<replaceName>ArrExchangedInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrexchangedinfo</name>
  		<replaceName>ArrExchangedInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrexchangedinfo_size</name>
  		<replaceName>ArrExchangedInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActSummerBuyInfo& arrexchangedinfo(int index) const;
  inline ::pb::TActSummerBuyInfo* mutable_arrexchangedinfo(int index);
  inline ::pb::TActSummerBuyInfo* add_arrexchangedinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >&
      arrexchangedinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >*
      mutable_arrexchangedinfo();

  // @@protoc_insertion_point(class_scope:pb.TActSummerGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo > arrrmbgoodsbuyinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo > arrgoodsbuyinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrtaskrewardinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo > arrexchangedinfo_;
  friend void  protobuf_AddDesc_net_2fActSummer_2eproto();
  friend void protobuf_AssignDesc_net_2fActSummer_2eproto();
  friend void protobuf_ShutdownFile_net_2fActSummer_2eproto();

  void InitAsDefaultInstance();
  static TActSummerGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActSummerBuyGoodsReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActSummer.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActSummerBuyGoodsReq : public ::google::protobuf::Message {
 public:
  TActSummerBuyGoodsReq();
  virtual ~TActSummerBuyGoodsReq();

  TActSummerBuyGoodsReq(const TActSummerBuyGoodsReq& from);

  inline TActSummerBuyGoodsReq& operator=(const TActSummerBuyGoodsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActSummerBuyGoodsReq& default_instance();

  void Swap(TActSummerBuyGoodsReq* other);

  // implements Message ----------------------------------------------

  TActSummerBuyGoodsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActSummerBuyGoodsReq& from);
  void MergeFrom(const TActSummerBuyGoodsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 GoodId = 1;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActSummerBuyGoodsReq</name>
  	<Function>
  		<name>goodid</name>
  		<replaceName>GoodId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_goodid</name>
  		<replaceName>GoodId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodid</name>
  		<replaceName>GoodId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 goodid() const;
  inline void set_goodid(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActSummerBuyGoodsReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActSummerBuyGoodsReq)
 private:
  inline void set_has_goodid();
  inline void clear_has_goodid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 goodid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fActSummer_2eproto();
  friend void protobuf_AssignDesc_net_2fActSummer_2eproto();
  friend void protobuf_ShutdownFile_net_2fActSummer_2eproto();

  void InitAsDefaultInstance();
  static TActSummerBuyGoodsReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActSummerBuyGoodsRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActSummer.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActSummerBuyGoodsRsp : public ::google::protobuf::Message {
 public:
  TActSummerBuyGoodsRsp();
  virtual ~TActSummerBuyGoodsRsp();

  TActSummerBuyGoodsRsp(const TActSummerBuyGoodsRsp& from);

  inline TActSummerBuyGoodsRsp& operator=(const TActSummerBuyGoodsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActSummerBuyGoodsRsp& default_instance();

  void Swap(TActSummerBuyGoodsRsp* other);

  // implements Message ----------------------------------------------

  TActSummerBuyGoodsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActSummerBuyGoodsRsp& from);
  void MergeFrom(const TActSummerBuyGoodsRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActSummerBuyGoodsRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TActSummerBuyGoodsRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fActSummer_2eproto();
  friend void protobuf_AssignDesc_net_2fActSummer_2eproto();
  friend void protobuf_ShutdownFile_net_2fActSummer_2eproto();

  void InitAsDefaultInstance();
  static TActSummerBuyGoodsRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActSummerGetTaskRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActSummer.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActSummerGetTaskRewardReq : public ::google::protobuf::Message {
 public:
  TActSummerGetTaskRewardReq();
  virtual ~TActSummerGetTaskRewardReq();

  TActSummerGetTaskRewardReq(const TActSummerGetTaskRewardReq& from);

  inline TActSummerGetTaskRewardReq& operator=(const TActSummerGetTaskRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActSummerGetTaskRewardReq& default_instance();

  void Swap(TActSummerGetTaskRewardReq* other);

  // implements Message ----------------------------------------------

  TActSummerGetTaskRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActSummerGetTaskRewardReq& from);
  void MergeFrom(const TActSummerGetTaskRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ContentId = 1;
  inline bool has_contentid() const;
  inline void clear_contentid();
  static const int kContentIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActSummerGetTaskRewardReq</name>
  	<Function>
  		<name>contentid</name>
  		<replaceName>ContentId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_contentid</name>
  		<replaceName>ContentId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_contentid</name>
  		<replaceName>ContentId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 contentid() const;
  inline void set_contentid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActSummerGetTaskRewardReq)
 private:
  inline void set_has_contentid();
  inline void clear_has_contentid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 contentid_;
  friend void  protobuf_AddDesc_net_2fActSummer_2eproto();
  friend void protobuf_AssignDesc_net_2fActSummer_2eproto();
  friend void protobuf_ShutdownFile_net_2fActSummer_2eproto();

  void InitAsDefaultInstance();
  static TActSummerGetTaskRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActSummerGetTaskRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActSummer.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActSummerGetTaskRewardRsp : public ::google::protobuf::Message {
 public:
  TActSummerGetTaskRewardRsp();
  virtual ~TActSummerGetTaskRewardRsp();

  TActSummerGetTaskRewardRsp(const TActSummerGetTaskRewardRsp& from);

  inline TActSummerGetTaskRewardRsp& operator=(const TActSummerGetTaskRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActSummerGetTaskRewardRsp& default_instance();

  void Swap(TActSummerGetTaskRewardRsp* other);

  // implements Message ----------------------------------------------

  TActSummerGetTaskRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActSummerGetTaskRewardRsp& from);
  void MergeFrom(const TActSummerGetTaskRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActSummerGetTaskRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TActSummerGetTaskRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fActSummer_2eproto();
  friend void protobuf_AssignDesc_net_2fActSummer_2eproto();
  friend void protobuf_ShutdownFile_net_2fActSummer_2eproto();

  void InitAsDefaultInstance();
  static TActSummerGetTaskRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActSummerExchangeReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActSummer.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActSummerExchangeReq : public ::google::protobuf::Message {
 public:
  TActSummerExchangeReq();
  virtual ~TActSummerExchangeReq();

  TActSummerExchangeReq(const TActSummerExchangeReq& from);

  inline TActSummerExchangeReq& operator=(const TActSummerExchangeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActSummerExchangeReq& default_instance();

  void Swap(TActSummerExchangeReq* other);

  // implements Message ----------------------------------------------

  TActSummerExchangeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActSummerExchangeReq& from);
  void MergeFrom(const TActSummerExchangeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ExchangeId = 1;
  inline bool has_exchangeid() const;
  inline void clear_exchangeid();
  static const int kExchangeIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActSummerExchangeReq</name>
  	<Function>
  		<name>exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_exchangeid</name>
  		<replaceName>ExchangeId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 exchangeid() const;
  inline void set_exchangeid(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActSummerExchangeReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActSummerExchangeReq)
 private:
  inline void set_has_exchangeid();
  inline void clear_has_exchangeid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 exchangeid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fActSummer_2eproto();
  friend void protobuf_AssignDesc_net_2fActSummer_2eproto();
  friend void protobuf_ShutdownFile_net_2fActSummer_2eproto();

  void InitAsDefaultInstance();
  static TActSummerExchangeReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActSummerExchangeRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActSummer.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActSummerExchangeRsp : public ::google::protobuf::Message {
 public:
  TActSummerExchangeRsp();
  virtual ~TActSummerExchangeRsp();

  TActSummerExchangeRsp(const TActSummerExchangeRsp& from);

  inline TActSummerExchangeRsp& operator=(const TActSummerExchangeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActSummerExchangeRsp& default_instance();

  void Swap(TActSummerExchangeRsp* other);

  // implements Message ----------------------------------------------

  TActSummerExchangeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActSummerExchangeRsp& from);
  void MergeFrom(const TActSummerExchangeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActSummerExchangeRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TActSummerExchangeRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fActSummer_2eproto();
  friend void protobuf_AssignDesc_net_2fActSummer_2eproto();
  friend void protobuf_ShutdownFile_net_2fActSummer_2eproto();

  void InitAsDefaultInstance();
  static TActSummerExchangeRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActSummerRmbGoodsChangeNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActSummer.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActSummerRmbGoodsChangeNotify : public ::google::protobuf::Message {
 public:
  TActSummerRmbGoodsChangeNotify();
  virtual ~TActSummerRmbGoodsChangeNotify();

  TActSummerRmbGoodsChangeNotify(const TActSummerRmbGoodsChangeNotify& from);

  inline TActSummerRmbGoodsChangeNotify& operator=(const TActSummerRmbGoodsChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActSummerRmbGoodsChangeNotify& default_instance();

  void Swap(TActSummerRmbGoodsChangeNotify* other);

  // implements Message ----------------------------------------------

  TActSummerRmbGoodsChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActSummerRmbGoodsChangeNotify& from);
  void MergeFrom(const TActSummerRmbGoodsChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActSummerBuyInfo ArrRmbGoodsBuyInfo = 1;
  inline int arrrmbgoodsbuyinfo_size() const;
  inline void clear_arrrmbgoodsbuyinfo();
  static const int kArrRmbGoodsBuyInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActSummerRmbGoodsChangeNotify</name>
  	<Function>
  		<name>arrrmbgoodsbuyinfo</name>
  		<replaceName>ArrRmbGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrmbgoodsbuyinfo</name>
  		<replaceName>ArrRmbGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrmbgoodsbuyinfo</name>
  		<replaceName>ArrRmbGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrmbgoodsbuyinfo</name>
  		<replaceName>ArrRmbGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrmbgoodsbuyinfo_size</name>
  		<replaceName>ArrRmbGoodsBuyInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActSummerBuyInfo& arrrmbgoodsbuyinfo(int index) const;
  inline ::pb::TActSummerBuyInfo* mutable_arrrmbgoodsbuyinfo(int index);
  inline ::pb::TActSummerBuyInfo* add_arrrmbgoodsbuyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >&
      arrrmbgoodsbuyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >*
      mutable_arrrmbgoodsbuyinfo();

  // @@protoc_insertion_point(class_scope:pb.TActSummerRmbGoodsChangeNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo > arrrmbgoodsbuyinfo_;
  friend void  protobuf_AddDesc_net_2fActSummer_2eproto();
  friend void protobuf_AssignDesc_net_2fActSummer_2eproto();
  friend void protobuf_ShutdownFile_net_2fActSummer_2eproto();

  void InitAsDefaultInstance();
  static TActSummerRmbGoodsChangeNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TActSummerBuyInfo

// optional uint32 Id = 1;
inline bool TActSummerBuyInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActSummerBuyInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActSummerBuyInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActSummerBuyInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActSummerBuyInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TActSummerBuyInfo.Id)
  return id_;
}
inline void TActSummerBuyInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActSummerBuyInfo.Id)
}

// optional uint32 Num = 2;
inline bool TActSummerBuyInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActSummerBuyInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActSummerBuyInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActSummerBuyInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActSummerBuyInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TActSummerBuyInfo.Num)
  return num_;
}
inline void TActSummerBuyInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActSummerBuyInfo.Num)
}

// optional uint64 BuyTime = 3;
inline bool TActSummerBuyInfo::has_buytime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActSummerBuyInfo::set_has_buytime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActSummerBuyInfo::clear_has_buytime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActSummerBuyInfo::clear_buytime() {
  buytime_ = GOOGLE_ULONGLONG(0);
  clear_has_buytime();
}
inline ::google::protobuf::uint64 TActSummerBuyInfo::buytime() const {
  // @@protoc_insertion_point(field_get:pb.TActSummerBuyInfo.BuyTime)
  return buytime_;
}
inline void TActSummerBuyInfo::set_buytime(::google::protobuf::uint64 value) {
  set_has_buytime();
  buytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TActSummerBuyInfo.BuyTime)
}

// -------------------------------------------------------------------

// TActSummerGetInfoRsp

// repeated .pb.TActSummerBuyInfo ArrRmbGoodsBuyInfo = 1;
inline int TActSummerGetInfoRsp::arrrmbgoodsbuyinfo_size() const {
  return arrrmbgoodsbuyinfo_.size();
}
inline void TActSummerGetInfoRsp::clear_arrrmbgoodsbuyinfo() {
  arrrmbgoodsbuyinfo_.Clear();
}
inline const ::pb::TActSummerBuyInfo& TActSummerGetInfoRsp::arrrmbgoodsbuyinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActSummerGetInfoRsp.ArrRmbGoodsBuyInfo)
  return arrrmbgoodsbuyinfo_.Get(index);
}
inline ::pb::TActSummerBuyInfo* TActSummerGetInfoRsp::mutable_arrrmbgoodsbuyinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActSummerGetInfoRsp.ArrRmbGoodsBuyInfo)
  return arrrmbgoodsbuyinfo_.Mutable(index);
}
inline ::pb::TActSummerBuyInfo* TActSummerGetInfoRsp::add_arrrmbgoodsbuyinfo() {
  // @@protoc_insertion_point(field_add:pb.TActSummerGetInfoRsp.ArrRmbGoodsBuyInfo)
  return arrrmbgoodsbuyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >&
TActSummerGetInfoRsp::arrrmbgoodsbuyinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActSummerGetInfoRsp.ArrRmbGoodsBuyInfo)
  return arrrmbgoodsbuyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >*
TActSummerGetInfoRsp::mutable_arrrmbgoodsbuyinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActSummerGetInfoRsp.ArrRmbGoodsBuyInfo)
  return &arrrmbgoodsbuyinfo_;
}

// repeated .pb.TActSummerBuyInfo ArrGoodsBuyInfo = 2;
inline int TActSummerGetInfoRsp::arrgoodsbuyinfo_size() const {
  return arrgoodsbuyinfo_.size();
}
inline void TActSummerGetInfoRsp::clear_arrgoodsbuyinfo() {
  arrgoodsbuyinfo_.Clear();
}
inline const ::pb::TActSummerBuyInfo& TActSummerGetInfoRsp::arrgoodsbuyinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActSummerGetInfoRsp.ArrGoodsBuyInfo)
  return arrgoodsbuyinfo_.Get(index);
}
inline ::pb::TActSummerBuyInfo* TActSummerGetInfoRsp::mutable_arrgoodsbuyinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActSummerGetInfoRsp.ArrGoodsBuyInfo)
  return arrgoodsbuyinfo_.Mutable(index);
}
inline ::pb::TActSummerBuyInfo* TActSummerGetInfoRsp::add_arrgoodsbuyinfo() {
  // @@protoc_insertion_point(field_add:pb.TActSummerGetInfoRsp.ArrGoodsBuyInfo)
  return arrgoodsbuyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >&
TActSummerGetInfoRsp::arrgoodsbuyinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActSummerGetInfoRsp.ArrGoodsBuyInfo)
  return arrgoodsbuyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >*
TActSummerGetInfoRsp::mutable_arrgoodsbuyinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActSummerGetInfoRsp.ArrGoodsBuyInfo)
  return &arrgoodsbuyinfo_;
}

// repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 3;
inline int TActSummerGetInfoRsp::arrtaskrewardinfo_size() const {
  return arrtaskrewardinfo_.size();
}
inline void TActSummerGetInfoRsp::clear_arrtaskrewardinfo() {
  arrtaskrewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TActSummerGetInfoRsp::arrtaskrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActSummerGetInfoRsp.ArrTaskRewardInfo)
  return arrtaskrewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TActSummerGetInfoRsp::mutable_arrtaskrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActSummerGetInfoRsp.ArrTaskRewardInfo)
  return arrtaskrewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TActSummerGetInfoRsp::add_arrtaskrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TActSummerGetInfoRsp.ArrTaskRewardInfo)
  return arrtaskrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TActSummerGetInfoRsp::arrtaskrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActSummerGetInfoRsp.ArrTaskRewardInfo)
  return arrtaskrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TActSummerGetInfoRsp::mutable_arrtaskrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActSummerGetInfoRsp.ArrTaskRewardInfo)
  return &arrtaskrewardinfo_;
}

// repeated .pb.TActSummerBuyInfo ArrExchangedInfo = 4;
inline int TActSummerGetInfoRsp::arrexchangedinfo_size() const {
  return arrexchangedinfo_.size();
}
inline void TActSummerGetInfoRsp::clear_arrexchangedinfo() {
  arrexchangedinfo_.Clear();
}
inline const ::pb::TActSummerBuyInfo& TActSummerGetInfoRsp::arrexchangedinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActSummerGetInfoRsp.ArrExchangedInfo)
  return arrexchangedinfo_.Get(index);
}
inline ::pb::TActSummerBuyInfo* TActSummerGetInfoRsp::mutable_arrexchangedinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActSummerGetInfoRsp.ArrExchangedInfo)
  return arrexchangedinfo_.Mutable(index);
}
inline ::pb::TActSummerBuyInfo* TActSummerGetInfoRsp::add_arrexchangedinfo() {
  // @@protoc_insertion_point(field_add:pb.TActSummerGetInfoRsp.ArrExchangedInfo)
  return arrexchangedinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >&
TActSummerGetInfoRsp::arrexchangedinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActSummerGetInfoRsp.ArrExchangedInfo)
  return arrexchangedinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >*
TActSummerGetInfoRsp::mutable_arrexchangedinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActSummerGetInfoRsp.ArrExchangedInfo)
  return &arrexchangedinfo_;
}

// -------------------------------------------------------------------

// TActSummerBuyGoodsReq

// optional uint32 GoodId = 1;
inline bool TActSummerBuyGoodsReq::has_goodid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActSummerBuyGoodsReq::set_has_goodid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActSummerBuyGoodsReq::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActSummerBuyGoodsReq::clear_goodid() {
  goodid_ = 0u;
  clear_has_goodid();
}
inline ::google::protobuf::uint32 TActSummerBuyGoodsReq::goodid() const {
  // @@protoc_insertion_point(field_get:pb.TActSummerBuyGoodsReq.GoodId)
  return goodid_;
}
inline void TActSummerBuyGoodsReq::set_goodid(::google::protobuf::uint32 value) {
  set_has_goodid();
  goodid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActSummerBuyGoodsReq.GoodId)
}

// optional uint32 Num = 2;
inline bool TActSummerBuyGoodsReq::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActSummerBuyGoodsReq::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActSummerBuyGoodsReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActSummerBuyGoodsReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActSummerBuyGoodsReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TActSummerBuyGoodsReq.Num)
  return num_;
}
inline void TActSummerBuyGoodsReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActSummerBuyGoodsReq.Num)
}

// -------------------------------------------------------------------

// TActSummerBuyGoodsRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TActSummerBuyGoodsRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TActSummerBuyGoodsRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TActSummerBuyGoodsRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActSummerBuyGoodsRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TActSummerBuyGoodsRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActSummerBuyGoodsRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TActSummerBuyGoodsRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TActSummerBuyGoodsRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TActSummerBuyGoodsRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TActSummerBuyGoodsRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TActSummerBuyGoodsRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActSummerBuyGoodsRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TActSummerGetTaskRewardReq

// optional uint32 ContentId = 1;
inline bool TActSummerGetTaskRewardReq::has_contentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActSummerGetTaskRewardReq::set_has_contentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActSummerGetTaskRewardReq::clear_has_contentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActSummerGetTaskRewardReq::clear_contentid() {
  contentid_ = 0u;
  clear_has_contentid();
}
inline ::google::protobuf::uint32 TActSummerGetTaskRewardReq::contentid() const {
  // @@protoc_insertion_point(field_get:pb.TActSummerGetTaskRewardReq.ContentId)
  return contentid_;
}
inline void TActSummerGetTaskRewardReq::set_contentid(::google::protobuf::uint32 value) {
  set_has_contentid();
  contentid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActSummerGetTaskRewardReq.ContentId)
}

// -------------------------------------------------------------------

// TActSummerGetTaskRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TActSummerGetTaskRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TActSummerGetTaskRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TActSummerGetTaskRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActSummerGetTaskRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TActSummerGetTaskRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActSummerGetTaskRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TActSummerGetTaskRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TActSummerGetTaskRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TActSummerGetTaskRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TActSummerGetTaskRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TActSummerGetTaskRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActSummerGetTaskRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TActSummerExchangeReq

// optional uint32 ExchangeId = 1;
inline bool TActSummerExchangeReq::has_exchangeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActSummerExchangeReq::set_has_exchangeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActSummerExchangeReq::clear_has_exchangeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActSummerExchangeReq::clear_exchangeid() {
  exchangeid_ = 0u;
  clear_has_exchangeid();
}
inline ::google::protobuf::uint32 TActSummerExchangeReq::exchangeid() const {
  // @@protoc_insertion_point(field_get:pb.TActSummerExchangeReq.ExchangeId)
  return exchangeid_;
}
inline void TActSummerExchangeReq::set_exchangeid(::google::protobuf::uint32 value) {
  set_has_exchangeid();
  exchangeid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActSummerExchangeReq.ExchangeId)
}

// optional uint32 Num = 2;
inline bool TActSummerExchangeReq::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActSummerExchangeReq::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActSummerExchangeReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActSummerExchangeReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActSummerExchangeReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TActSummerExchangeReq.Num)
  return num_;
}
inline void TActSummerExchangeReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActSummerExchangeReq.Num)
}

// -------------------------------------------------------------------

// TActSummerExchangeRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TActSummerExchangeRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TActSummerExchangeRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TActSummerExchangeRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActSummerExchangeRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TActSummerExchangeRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActSummerExchangeRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TActSummerExchangeRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TActSummerExchangeRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TActSummerExchangeRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TActSummerExchangeRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TActSummerExchangeRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActSummerExchangeRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TActSummerRmbGoodsChangeNotify

// repeated .pb.TActSummerBuyInfo ArrRmbGoodsBuyInfo = 1;
inline int TActSummerRmbGoodsChangeNotify::arrrmbgoodsbuyinfo_size() const {
  return arrrmbgoodsbuyinfo_.size();
}
inline void TActSummerRmbGoodsChangeNotify::clear_arrrmbgoodsbuyinfo() {
  arrrmbgoodsbuyinfo_.Clear();
}
inline const ::pb::TActSummerBuyInfo& TActSummerRmbGoodsChangeNotify::arrrmbgoodsbuyinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActSummerRmbGoodsChangeNotify.ArrRmbGoodsBuyInfo)
  return arrrmbgoodsbuyinfo_.Get(index);
}
inline ::pb::TActSummerBuyInfo* TActSummerRmbGoodsChangeNotify::mutable_arrrmbgoodsbuyinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActSummerRmbGoodsChangeNotify.ArrRmbGoodsBuyInfo)
  return arrrmbgoodsbuyinfo_.Mutable(index);
}
inline ::pb::TActSummerBuyInfo* TActSummerRmbGoodsChangeNotify::add_arrrmbgoodsbuyinfo() {
  // @@protoc_insertion_point(field_add:pb.TActSummerRmbGoodsChangeNotify.ArrRmbGoodsBuyInfo)
  return arrrmbgoodsbuyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >&
TActSummerRmbGoodsChangeNotify::arrrmbgoodsbuyinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActSummerRmbGoodsChangeNotify.ArrRmbGoodsBuyInfo)
  return arrrmbgoodsbuyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActSummerBuyInfo >*
TActSummerRmbGoodsChangeNotify::mutable_arrrmbgoodsbuyinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActSummerRmbGoodsChangeNotify.ArrRmbGoodsBuyInfo)
  return &arrrmbgoodsbuyinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActSummer_2eproto__INCLUDED
