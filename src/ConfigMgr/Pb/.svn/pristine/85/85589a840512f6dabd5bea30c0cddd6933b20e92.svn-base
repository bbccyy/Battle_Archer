// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Guidance.proto

#ifndef PROTOBUF_net_2fGuidance_2eproto__INCLUDED
#define PROTOBUF_net_2fGuidance_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fGuidance_2eproto();
void protobuf_AssignDesc_net_2fGuidance_2eproto();
void protobuf_ShutdownFile_net_2fGuidance_2eproto();

class TGuidanceInfoRsp;
class TGuidanceStartReq;
class TGuidanceEndReq;
class TGuidanceFinishParagraphReq;
class TGuidanceFinishParagraphRsp;
class TGuidanceSignSwitchReq;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TGuidanceInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Guidance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TGuidanceInfoRsp : public ::google::protobuf::Message {
 public:
  TGuidanceInfoRsp();
  virtual ~TGuidanceInfoRsp();

  TGuidanceInfoRsp(const TGuidanceInfoRsp& from);

  inline TGuidanceInfoRsp& operator=(const TGuidanceInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TGuidanceInfoRsp& default_instance();

  void Swap(TGuidanceInfoRsp* other);

  // implements Message ----------------------------------------------

  TGuidanceInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TGuidanceInfoRsp& from);
  void MergeFrom(const TGuidanceInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 StartArr = 1;
  inline int startarr_size() const;
  inline void clear_startarr();
  static const int kStartArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TGuidanceInfoRsp</name>
  	<Function>
  		<name>startarr</name>
  		<replaceName>StartArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_startarr</name>
  		<replaceName>StartArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_startarr</name>
  		<replaceName>StartArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_startarr</name>
  		<replaceName>StartArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>startarr_size</name>
  		<replaceName>StartArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 startarr(int index) const;
  inline void set_startarr(int index, ::google::protobuf::uint32 value);
  inline void add_startarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      startarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_startarr();

  // repeated uint32 EndArr = 2;
  inline int endarr_size() const;
  inline void clear_endarr();
  static const int kEndArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TGuidanceInfoRsp</name>
  	<Function>
  		<name>endarr</name>
  		<replaceName>EndArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_endarr</name>
  		<replaceName>EndArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_endarr</name>
  		<replaceName>EndArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_endarr</name>
  		<replaceName>EndArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>endarr_size</name>
  		<replaceName>EndArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 endarr(int index) const;
  inline void set_endarr(int index, ::google::protobuf::uint32 value);
  inline void add_endarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      endarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_endarr();

  // repeated uint32 SwitchIdArr = 3;
  inline int switchidarr_size() const;
  inline void clear_switchidarr();
  static const int kSwitchIdArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TGuidanceInfoRsp</name>
  	<Function>
  		<name>switchidarr</name>
  		<replaceName>SwitchIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_switchidarr</name>
  		<replaceName>SwitchIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_switchidarr</name>
  		<replaceName>SwitchIdArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_switchidarr</name>
  		<replaceName>SwitchIdArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>switchidarr_size</name>
  		<replaceName>SwitchIdArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 switchidarr(int index) const;
  inline void set_switchidarr(int index, ::google::protobuf::uint32 value);
  inline void add_switchidarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      switchidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_switchidarr();

  // @@protoc_insertion_point(class_scope:pb.TGuidanceInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > startarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > endarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > switchidarr_;
  friend void  protobuf_AddDesc_net_2fGuidance_2eproto();
  friend void protobuf_AssignDesc_net_2fGuidance_2eproto();
  friend void protobuf_ShutdownFile_net_2fGuidance_2eproto();

  void InitAsDefaultInstance();
  static TGuidanceInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TGuidanceStartReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Guidance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TGuidanceStartReq : public ::google::protobuf::Message {
 public:
  TGuidanceStartReq();
  virtual ~TGuidanceStartReq();

  TGuidanceStartReq(const TGuidanceStartReq& from);

  inline TGuidanceStartReq& operator=(const TGuidanceStartReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TGuidanceStartReq& default_instance();

  void Swap(TGuidanceStartReq* other);

  // implements Message ----------------------------------------------

  TGuidanceStartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TGuidanceStartReq& from);
  void MergeFrom(const TGuidanceStartReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TGuidanceStartReq</name>
  	<Function>
  		<name>key</name>
  		<replaceName>Key</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_key</name>
  		<replaceName>Key</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_key</name>
  		<replaceName>Key</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TGuidanceStartReq)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 key_;
  friend void  protobuf_AddDesc_net_2fGuidance_2eproto();
  friend void protobuf_AssignDesc_net_2fGuidance_2eproto();
  friend void protobuf_ShutdownFile_net_2fGuidance_2eproto();

  void InitAsDefaultInstance();
  static TGuidanceStartReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TGuidanceEndReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Guidance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TGuidanceEndReq : public ::google::protobuf::Message {
 public:
  TGuidanceEndReq();
  virtual ~TGuidanceEndReq();

  TGuidanceEndReq(const TGuidanceEndReq& from);

  inline TGuidanceEndReq& operator=(const TGuidanceEndReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TGuidanceEndReq& default_instance();

  void Swap(TGuidanceEndReq* other);

  // implements Message ----------------------------------------------

  TGuidanceEndReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TGuidanceEndReq& from);
  void MergeFrom(const TGuidanceEndReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TGuidanceEndReq</name>
  	<Function>
  		<name>key</name>
  		<replaceName>Key</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_key</name>
  		<replaceName>Key</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_key</name>
  		<replaceName>Key</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TGuidanceEndReq)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 key_;
  friend void  protobuf_AddDesc_net_2fGuidance_2eproto();
  friend void protobuf_AssignDesc_net_2fGuidance_2eproto();
  friend void protobuf_ShutdownFile_net_2fGuidance_2eproto();

  void InitAsDefaultInstance();
  static TGuidanceEndReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TGuidanceFinishParagraphReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Guidance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TGuidanceFinishParagraphReq : public ::google::protobuf::Message {
 public:
  TGuidanceFinishParagraphReq();
  virtual ~TGuidanceFinishParagraphReq();

  TGuidanceFinishParagraphReq(const TGuidanceFinishParagraphReq& from);

  inline TGuidanceFinishParagraphReq& operator=(const TGuidanceFinishParagraphReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TGuidanceFinishParagraphReq& default_instance();

  void Swap(TGuidanceFinishParagraphReq* other);

  // implements Message ----------------------------------------------

  TGuidanceFinishParagraphReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TGuidanceFinishParagraphReq& from);
  void MergeFrom(const TGuidanceFinishParagraphReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 GuideTid = 1;
  inline bool has_guidetid() const;
  inline void clear_guidetid();
  static const int kGuideTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TGuidanceFinishParagraphReq</name>
  	<Function>
  		<name>guidetid</name>
  		<replaceName>GuideTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_guidetid</name>
  		<replaceName>GuideTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_guidetid</name>
  		<replaceName>GuideTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 guidetid() const;
  inline void set_guidetid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TGuidanceFinishParagraphReq)
 private:
  inline void set_has_guidetid();
  inline void clear_has_guidetid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 guidetid_;
  friend void  protobuf_AddDesc_net_2fGuidance_2eproto();
  friend void protobuf_AssignDesc_net_2fGuidance_2eproto();
  friend void protobuf_ShutdownFile_net_2fGuidance_2eproto();

  void InitAsDefaultInstance();
  static TGuidanceFinishParagraphReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TGuidanceFinishParagraphRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Guidance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TGuidanceFinishParagraphRsp : public ::google::protobuf::Message {
 public:
  TGuidanceFinishParagraphRsp();
  virtual ~TGuidanceFinishParagraphRsp();

  TGuidanceFinishParagraphRsp(const TGuidanceFinishParagraphRsp& from);

  inline TGuidanceFinishParagraphRsp& operator=(const TGuidanceFinishParagraphRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TGuidanceFinishParagraphRsp& default_instance();

  void Swap(TGuidanceFinishParagraphRsp* other);

  // implements Message ----------------------------------------------

  TGuidanceFinishParagraphRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TGuidanceFinishParagraphRsp& from);
  void MergeFrom(const TGuidanceFinishParagraphRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 EndArr = 2;
  inline int endarr_size() const;
  inline void clear_endarr();
  static const int kEndArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TGuidanceFinishParagraphRsp</name>
  	<Function>
  		<name>endarr</name>
  		<replaceName>EndArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_endarr</name>
  		<replaceName>EndArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_endarr</name>
  		<replaceName>EndArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_endarr</name>
  		<replaceName>EndArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>endarr_size</name>
  		<replaceName>EndArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 endarr(int index) const;
  inline void set_endarr(int index, ::google::protobuf::uint32 value);
  inline void add_endarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      endarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_endarr();

  // @@protoc_insertion_point(class_scope:pb.TGuidanceFinishParagraphRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > endarr_;
  friend void  protobuf_AddDesc_net_2fGuidance_2eproto();
  friend void protobuf_AssignDesc_net_2fGuidance_2eproto();
  friend void protobuf_ShutdownFile_net_2fGuidance_2eproto();

  void InitAsDefaultInstance();
  static TGuidanceFinishParagraphRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TGuidanceSignSwitchReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Guidance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TGuidanceSignSwitchReq : public ::google::protobuf::Message {
 public:
  TGuidanceSignSwitchReq();
  virtual ~TGuidanceSignSwitchReq();

  TGuidanceSignSwitchReq(const TGuidanceSignSwitchReq& from);

  inline TGuidanceSignSwitchReq& operator=(const TGuidanceSignSwitchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TGuidanceSignSwitchReq& default_instance();

  void Swap(TGuidanceSignSwitchReq* other);

  // implements Message ----------------------------------------------

  TGuidanceSignSwitchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TGuidanceSignSwitchReq& from);
  void MergeFrom(const TGuidanceSignSwitchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 SwitchId = 1;
  inline bool has_switchid() const;
  inline void clear_switchid();
  static const int kSwitchIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TGuidanceSignSwitchReq</name>
  	<Function>
  		<name>switchid</name>
  		<replaceName>SwitchId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_switchid</name>
  		<replaceName>SwitchId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_switchid</name>
  		<replaceName>SwitchId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 switchid() const;
  inline void set_switchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TGuidanceSignSwitchReq)
 private:
  inline void set_has_switchid();
  inline void clear_has_switchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 switchid_;
  friend void  protobuf_AddDesc_net_2fGuidance_2eproto();
  friend void protobuf_AssignDesc_net_2fGuidance_2eproto();
  friend void protobuf_ShutdownFile_net_2fGuidance_2eproto();

  void InitAsDefaultInstance();
  static TGuidanceSignSwitchReq* default_instance_;
};
// ===================================================================


// ===================================================================

// TGuidanceInfoRsp

// repeated uint32 StartArr = 1;
inline int TGuidanceInfoRsp::startarr_size() const {
  return startarr_.size();
}
inline void TGuidanceInfoRsp::clear_startarr() {
  startarr_.Clear();
}
inline ::google::protobuf::uint32 TGuidanceInfoRsp::startarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TGuidanceInfoRsp.StartArr)
  return startarr_.Get(index);
}
inline void TGuidanceInfoRsp::set_startarr(int index, ::google::protobuf::uint32 value) {
  startarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TGuidanceInfoRsp.StartArr)
}
inline void TGuidanceInfoRsp::add_startarr(::google::protobuf::uint32 value) {
  startarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TGuidanceInfoRsp.StartArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TGuidanceInfoRsp::startarr() const {
  // @@protoc_insertion_point(field_list:pb.TGuidanceInfoRsp.StartArr)
  return startarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TGuidanceInfoRsp::mutable_startarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TGuidanceInfoRsp.StartArr)
  return &startarr_;
}

// repeated uint32 EndArr = 2;
inline int TGuidanceInfoRsp::endarr_size() const {
  return endarr_.size();
}
inline void TGuidanceInfoRsp::clear_endarr() {
  endarr_.Clear();
}
inline ::google::protobuf::uint32 TGuidanceInfoRsp::endarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TGuidanceInfoRsp.EndArr)
  return endarr_.Get(index);
}
inline void TGuidanceInfoRsp::set_endarr(int index, ::google::protobuf::uint32 value) {
  endarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TGuidanceInfoRsp.EndArr)
}
inline void TGuidanceInfoRsp::add_endarr(::google::protobuf::uint32 value) {
  endarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TGuidanceInfoRsp.EndArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TGuidanceInfoRsp::endarr() const {
  // @@protoc_insertion_point(field_list:pb.TGuidanceInfoRsp.EndArr)
  return endarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TGuidanceInfoRsp::mutable_endarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TGuidanceInfoRsp.EndArr)
  return &endarr_;
}

// repeated uint32 SwitchIdArr = 3;
inline int TGuidanceInfoRsp::switchidarr_size() const {
  return switchidarr_.size();
}
inline void TGuidanceInfoRsp::clear_switchidarr() {
  switchidarr_.Clear();
}
inline ::google::protobuf::uint32 TGuidanceInfoRsp::switchidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TGuidanceInfoRsp.SwitchIdArr)
  return switchidarr_.Get(index);
}
inline void TGuidanceInfoRsp::set_switchidarr(int index, ::google::protobuf::uint32 value) {
  switchidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TGuidanceInfoRsp.SwitchIdArr)
}
inline void TGuidanceInfoRsp::add_switchidarr(::google::protobuf::uint32 value) {
  switchidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TGuidanceInfoRsp.SwitchIdArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TGuidanceInfoRsp::switchidarr() const {
  // @@protoc_insertion_point(field_list:pb.TGuidanceInfoRsp.SwitchIdArr)
  return switchidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TGuidanceInfoRsp::mutable_switchidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TGuidanceInfoRsp.SwitchIdArr)
  return &switchidarr_;
}

// -------------------------------------------------------------------

// TGuidanceStartReq

// optional uint32 Key = 1;
inline bool TGuidanceStartReq::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TGuidanceStartReq::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TGuidanceStartReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TGuidanceStartReq::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 TGuidanceStartReq::key() const {
  // @@protoc_insertion_point(field_get:pb.TGuidanceStartReq.Key)
  return key_;
}
inline void TGuidanceStartReq::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuidanceStartReq.Key)
}

// -------------------------------------------------------------------

// TGuidanceEndReq

// optional uint32 Key = 1;
inline bool TGuidanceEndReq::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TGuidanceEndReq::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TGuidanceEndReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TGuidanceEndReq::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 TGuidanceEndReq::key() const {
  // @@protoc_insertion_point(field_get:pb.TGuidanceEndReq.Key)
  return key_;
}
inline void TGuidanceEndReq::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuidanceEndReq.Key)
}

// -------------------------------------------------------------------

// TGuidanceFinishParagraphReq

// optional uint32 GuideTid = 1;
inline bool TGuidanceFinishParagraphReq::has_guidetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TGuidanceFinishParagraphReq::set_has_guidetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TGuidanceFinishParagraphReq::clear_has_guidetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TGuidanceFinishParagraphReq::clear_guidetid() {
  guidetid_ = 0u;
  clear_has_guidetid();
}
inline ::google::protobuf::uint32 TGuidanceFinishParagraphReq::guidetid() const {
  // @@protoc_insertion_point(field_get:pb.TGuidanceFinishParagraphReq.GuideTid)
  return guidetid_;
}
inline void TGuidanceFinishParagraphReq::set_guidetid(::google::protobuf::uint32 value) {
  set_has_guidetid();
  guidetid_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuidanceFinishParagraphReq.GuideTid)
}

// -------------------------------------------------------------------

// TGuidanceFinishParagraphRsp

// repeated uint32 EndArr = 2;
inline int TGuidanceFinishParagraphRsp::endarr_size() const {
  return endarr_.size();
}
inline void TGuidanceFinishParagraphRsp::clear_endarr() {
  endarr_.Clear();
}
inline ::google::protobuf::uint32 TGuidanceFinishParagraphRsp::endarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TGuidanceFinishParagraphRsp.EndArr)
  return endarr_.Get(index);
}
inline void TGuidanceFinishParagraphRsp::set_endarr(int index, ::google::protobuf::uint32 value) {
  endarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TGuidanceFinishParagraphRsp.EndArr)
}
inline void TGuidanceFinishParagraphRsp::add_endarr(::google::protobuf::uint32 value) {
  endarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TGuidanceFinishParagraphRsp.EndArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TGuidanceFinishParagraphRsp::endarr() const {
  // @@protoc_insertion_point(field_list:pb.TGuidanceFinishParagraphRsp.EndArr)
  return endarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TGuidanceFinishParagraphRsp::mutable_endarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TGuidanceFinishParagraphRsp.EndArr)
  return &endarr_;
}

// -------------------------------------------------------------------

// TGuidanceSignSwitchReq

// optional uint32 SwitchId = 1;
inline bool TGuidanceSignSwitchReq::has_switchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TGuidanceSignSwitchReq::set_has_switchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TGuidanceSignSwitchReq::clear_has_switchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TGuidanceSignSwitchReq::clear_switchid() {
  switchid_ = 0u;
  clear_has_switchid();
}
inline ::google::protobuf::uint32 TGuidanceSignSwitchReq::switchid() const {
  // @@protoc_insertion_point(field_get:pb.TGuidanceSignSwitchReq.SwitchId)
  return switchid_;
}
inline void TGuidanceSignSwitchReq::set_switchid(::google::protobuf::uint32 value) {
  set_has_switchid();
  switchid_ = value;
  // @@protoc_insertion_point(field_set:pb.TGuidanceSignSwitchReq.SwitchId)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fGuidance_2eproto__INCLUDED
