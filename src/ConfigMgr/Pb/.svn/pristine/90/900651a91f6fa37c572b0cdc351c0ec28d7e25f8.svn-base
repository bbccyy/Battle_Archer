// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActBeaconFireHero.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActBeaconFireHero.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActBeaconFireHeroGiftInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActBeaconFireHeroGiftInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActBeaconFireHeroTaskInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActBeaconFireHeroTaskInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActBeaconFireHeroGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetArrScoreRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActBeaconFireHeroGetArrScoreRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetArrScoreRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActBeaconFireHeroGetArrScoreRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActBeaconFireHeroRankInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActBeaconFireHeroRankInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetStageRankReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActBeaconFireHeroGetStageRankReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetStageRankRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActBeaconFireHeroGetStageRankRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetLastStageRankReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActBeaconFireHeroGetLastStageRankReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetLastStageRankRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActBeaconFireHeroGetLastStageRankRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActBeaconFireHeroNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActBeaconFireHeroNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto() {
  protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActBeaconFireHero.proto");
  GOOGLE_CHECK(file != NULL);
  TActBeaconFireHeroGiftInfo_descriptor_ = file->message_type(0);
  static const int TActBeaconFireHeroGiftInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGiftInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGiftInfo, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGiftInfo, buytime_),
  };
  TActBeaconFireHeroGiftInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActBeaconFireHeroGiftInfo_descriptor_,
      TActBeaconFireHeroGiftInfo::default_instance_,
      TActBeaconFireHeroGiftInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGiftInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGiftInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActBeaconFireHeroGiftInfo));
  TActBeaconFireHeroTaskInfo_descriptor_ = file->message_type(1);
  static const int TActBeaconFireHeroTaskInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroTaskInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroTaskInfo, num_),
  };
  TActBeaconFireHeroTaskInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActBeaconFireHeroTaskInfo_descriptor_,
      TActBeaconFireHeroTaskInfo::default_instance_,
      TActBeaconFireHeroTaskInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroTaskInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroTaskInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActBeaconFireHeroTaskInfo));
  TActBeaconFireHeroGetInfoRsp_descriptor_ = file->message_type(2);
  static const int TActBeaconFireHeroGetInfoRsp_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetInfoRsp, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetInfoRsp, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetInfoRsp, arrgiftinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetInfoRsp, arrtaskinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetInfoRsp, arrscorerewardinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetInfoRsp, stagerankarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetInfoRsp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetInfoRsp, maxstagerankarr_),
  };
  TActBeaconFireHeroGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActBeaconFireHeroGetInfoRsp_descriptor_,
      TActBeaconFireHeroGetInfoRsp::default_instance_,
      TActBeaconFireHeroGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActBeaconFireHeroGetInfoRsp));
  TActBeaconFireHeroGetArrScoreRewardReq_descriptor_ = file->message_type(3);
  static const int TActBeaconFireHeroGetArrScoreRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetArrScoreRewardReq, arrid_),
  };
  TActBeaconFireHeroGetArrScoreRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActBeaconFireHeroGetArrScoreRewardReq_descriptor_,
      TActBeaconFireHeroGetArrScoreRewardReq::default_instance_,
      TActBeaconFireHeroGetArrScoreRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetArrScoreRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetArrScoreRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActBeaconFireHeroGetArrScoreRewardReq));
  TActBeaconFireHeroGetArrScoreRewardRsp_descriptor_ = file->message_type(4);
  static const int TActBeaconFireHeroGetArrScoreRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetArrScoreRewardRsp, arrreward_),
  };
  TActBeaconFireHeroGetArrScoreRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActBeaconFireHeroGetArrScoreRewardRsp_descriptor_,
      TActBeaconFireHeroGetArrScoreRewardRsp::default_instance_,
      TActBeaconFireHeroGetArrScoreRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetArrScoreRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetArrScoreRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActBeaconFireHeroGetArrScoreRewardRsp));
  TActBeaconFireHeroRankInfo_descriptor_ = file->message_type(5);
  static const int TActBeaconFireHeroRankInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroRankInfo, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroRankInfo, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroRankInfo, score_),
  };
  TActBeaconFireHeroRankInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActBeaconFireHeroRankInfo_descriptor_,
      TActBeaconFireHeroRankInfo::default_instance_,
      TActBeaconFireHeroRankInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroRankInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroRankInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActBeaconFireHeroRankInfo));
  TActBeaconFireHeroGetStageRankReq_descriptor_ = file->message_type(6);
  static const int TActBeaconFireHeroGetStageRankReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetStageRankReq, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetStageRankReq, limit_),
  };
  TActBeaconFireHeroGetStageRankReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActBeaconFireHeroGetStageRankReq_descriptor_,
      TActBeaconFireHeroGetStageRankReq::default_instance_,
      TActBeaconFireHeroGetStageRankReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetStageRankReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetStageRankReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActBeaconFireHeroGetStageRankReq));
  TActBeaconFireHeroGetStageRankRsp_descriptor_ = file->message_type(7);
  static const int TActBeaconFireHeroGetStageRankRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetStageRankRsp, arrrankinfo_),
  };
  TActBeaconFireHeroGetStageRankRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActBeaconFireHeroGetStageRankRsp_descriptor_,
      TActBeaconFireHeroGetStageRankRsp::default_instance_,
      TActBeaconFireHeroGetStageRankRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetStageRankRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetStageRankRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActBeaconFireHeroGetStageRankRsp));
  TActBeaconFireHeroGetLastStageRankReq_descriptor_ = file->message_type(8);
  static const int TActBeaconFireHeroGetLastStageRankReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetLastStageRankReq, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetLastStageRankReq, limit_),
  };
  TActBeaconFireHeroGetLastStageRankReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActBeaconFireHeroGetLastStageRankReq_descriptor_,
      TActBeaconFireHeroGetLastStageRankReq::default_instance_,
      TActBeaconFireHeroGetLastStageRankReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetLastStageRankReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetLastStageRankReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActBeaconFireHeroGetLastStageRankReq));
  TActBeaconFireHeroGetLastStageRankRsp_descriptor_ = file->message_type(9);
  static const int TActBeaconFireHeroGetLastStageRankRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetLastStageRankRsp, myrank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetLastStageRankRsp, arrrankinfo_),
  };
  TActBeaconFireHeroGetLastStageRankRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActBeaconFireHeroGetLastStageRankRsp_descriptor_,
      TActBeaconFireHeroGetLastStageRankRsp::default_instance_,
      TActBeaconFireHeroGetLastStageRankRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetLastStageRankRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroGetLastStageRankRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActBeaconFireHeroGetLastStageRankRsp));
  TActBeaconFireHeroNotify_descriptor_ = file->message_type(10);
  static const int TActBeaconFireHeroNotify_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroNotify, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroNotify, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroNotify, arrgiftinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroNotify, arrtaskinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroNotify, stagerank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroNotify, maxstagerank_),
  };
  TActBeaconFireHeroNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActBeaconFireHeroNotify_descriptor_,
      TActBeaconFireHeroNotify::default_instance_,
      TActBeaconFireHeroNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActBeaconFireHeroNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActBeaconFireHeroNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActBeaconFireHero_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActBeaconFireHeroGiftInfo_descriptor_, &TActBeaconFireHeroGiftInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActBeaconFireHeroTaskInfo_descriptor_, &TActBeaconFireHeroTaskInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActBeaconFireHeroGetInfoRsp_descriptor_, &TActBeaconFireHeroGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActBeaconFireHeroGetArrScoreRewardReq_descriptor_, &TActBeaconFireHeroGetArrScoreRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActBeaconFireHeroGetArrScoreRewardRsp_descriptor_, &TActBeaconFireHeroGetArrScoreRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActBeaconFireHeroRankInfo_descriptor_, &TActBeaconFireHeroRankInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActBeaconFireHeroGetStageRankReq_descriptor_, &TActBeaconFireHeroGetStageRankReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActBeaconFireHeroGetStageRankRsp_descriptor_, &TActBeaconFireHeroGetStageRankRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActBeaconFireHeroGetLastStageRankReq_descriptor_, &TActBeaconFireHeroGetLastStageRankReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActBeaconFireHeroGetLastStageRankRsp_descriptor_, &TActBeaconFireHeroGetLastStageRankRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActBeaconFireHeroNotify_descriptor_, &TActBeaconFireHeroNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto() {
  delete TActBeaconFireHeroGiftInfo::default_instance_;
  delete TActBeaconFireHeroGiftInfo_reflection_;
  delete TActBeaconFireHeroTaskInfo::default_instance_;
  delete TActBeaconFireHeroTaskInfo_reflection_;
  delete TActBeaconFireHeroGetInfoRsp::default_instance_;
  delete TActBeaconFireHeroGetInfoRsp_reflection_;
  delete TActBeaconFireHeroGetArrScoreRewardReq::default_instance_;
  delete TActBeaconFireHeroGetArrScoreRewardReq_reflection_;
  delete TActBeaconFireHeroGetArrScoreRewardRsp::default_instance_;
  delete TActBeaconFireHeroGetArrScoreRewardRsp_reflection_;
  delete TActBeaconFireHeroRankInfo::default_instance_;
  delete TActBeaconFireHeroRankInfo_reflection_;
  delete TActBeaconFireHeroGetStageRankReq::default_instance_;
  delete TActBeaconFireHeroGetStageRankReq_reflection_;
  delete TActBeaconFireHeroGetStageRankRsp::default_instance_;
  delete TActBeaconFireHeroGetStageRankRsp_reflection_;
  delete TActBeaconFireHeroGetLastStageRankReq::default_instance_;
  delete TActBeaconFireHeroGetLastStageRankReq_reflection_;
  delete TActBeaconFireHeroGetLastStageRankRsp::default_instance_;
  delete TActBeaconFireHeroGetLastStageRankRsp_reflection_;
  delete TActBeaconFireHeroNotify::default_instance_;
  delete TActBeaconFireHeroNotify_reflection_;
}

void protobuf_AddDesc_net_2fActBeaconFireHero_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::pb::protobuf_AddDesc_net_2fOpenActivity_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033net/ActBeaconFireHero.proto\022\002pb\032\016net/U"
    "ser.proto\032\026net/CommonReward.proto\032\026net/O"
    "penActivity.proto\"F\n\032TActBeaconFireHeroG"
    "iftInfo\022\n\n\002Id\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\022\017\n\007BuyT"
    "ime\030\003 \001(\004\"5\n\032TActBeaconFireHeroTaskInfo\022"
    "\n\n\002Id\030\001 \001(\r\022\013\n\003Num\030\002 \001(\004\"\230\002\n\034TActBeaconF"
    "ireHeroGetInfoRsp\022\n\n\002Id\030\001 \001(\r\022\r\n\005Score\030\002"
    " \001(\004\0223\n\013ArrGiftInfo\030\003 \003(\0132\036.pb.TActBeaco"
    "nFireHeroGiftInfo\0223\n\013ArrTaskInfo\030\004 \003(\0132\036"
    ".pb.TActBeaconFireHeroTaskInfo\0223\n\022ArrSco"
    "reRewardInfo\030\005 \003(\0132\027.pb.TActivityRewardI"
    "nfo\022\024\n\014StageRankArr\030\006 \003(\005\022\017\n\007GroupId\030\007 \001"
    "(\r\022\027\n\017MaxStageRankArr\030\010 \003(\005\"7\n&TActBeaco"
    "nFireHeroGetArrScoreRewardReq\022\r\n\005ArrId\030\001"
    " \003(\r\"N\n&TActBeaconFireHeroGetArrScoreRew"
    "ardRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb.TCommonRe"
    "ward\"`\n\032TActBeaconFireHeroRankInfo\022%\n\010Us"
    "erInfo\030\001 \001(\0132\023.pb.TUserSimpleInfo\022\014\n\004Ran"
    "k\030\002 \001(\r\022\r\n\005Score\030\003 \001(\004\"B\n!TActBeaconFire"
    "HeroGetStageRankReq\022\016\n\006Offset\030\001 \001(\r\022\r\n\005L"
    "imit\030\002 \001(\r\"X\n!TActBeaconFireHeroGetStage"
    "RankRsp\0223\n\013ArrRankInfo\030\001 \003(\0132\036.pb.TActBe"
    "aconFireHeroRankInfo\"F\n%TActBeaconFireHe"
    "roGetLastStageRankReq\022\016\n\006Offset\030\001 \001(\r\022\r\n"
    "\005Limit\030\002 \001(\r\"l\n%TActBeaconFireHeroGetLas"
    "tStageRankRsp\022\016\n\006MyRank\030\001 \001(\r\0223\n\013ArrRank"
    "Info\030\002 \003(\0132\036.pb.TActBeaconFireHeroRankIn"
    "fo\"\310\001\n\030TActBeaconFireHeroNotify\022\n\n\002Id\030\001 "
    "\001(\r\022\r\n\005Score\030\002 \001(\004\0223\n\013ArrGiftInfo\030\003 \003(\0132"
    "\036.pb.TActBeaconFireHeroGiftInfo\0223\n\013ArrTa"
    "skInfo\030\004 \003(\0132\036.pb.TActBeaconFireHeroTask"
    "Info\022\021\n\tStageRank\030\005 \001(\r\022\024\n\014MaxStageRank\030"
    "\006 \001(\r", 1285);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActBeaconFireHero.proto", &protobuf_RegisterTypes);
  TActBeaconFireHeroGiftInfo::default_instance_ = new TActBeaconFireHeroGiftInfo();
  TActBeaconFireHeroTaskInfo::default_instance_ = new TActBeaconFireHeroTaskInfo();
  TActBeaconFireHeroGetInfoRsp::default_instance_ = new TActBeaconFireHeroGetInfoRsp();
  TActBeaconFireHeroGetArrScoreRewardReq::default_instance_ = new TActBeaconFireHeroGetArrScoreRewardReq();
  TActBeaconFireHeroGetArrScoreRewardRsp::default_instance_ = new TActBeaconFireHeroGetArrScoreRewardRsp();
  TActBeaconFireHeroRankInfo::default_instance_ = new TActBeaconFireHeroRankInfo();
  TActBeaconFireHeroGetStageRankReq::default_instance_ = new TActBeaconFireHeroGetStageRankReq();
  TActBeaconFireHeroGetStageRankRsp::default_instance_ = new TActBeaconFireHeroGetStageRankRsp();
  TActBeaconFireHeroGetLastStageRankReq::default_instance_ = new TActBeaconFireHeroGetLastStageRankReq();
  TActBeaconFireHeroGetLastStageRankRsp::default_instance_ = new TActBeaconFireHeroGetLastStageRankRsp();
  TActBeaconFireHeroNotify::default_instance_ = new TActBeaconFireHeroNotify();
  TActBeaconFireHeroGiftInfo::default_instance_->InitAsDefaultInstance();
  TActBeaconFireHeroTaskInfo::default_instance_->InitAsDefaultInstance();
  TActBeaconFireHeroGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TActBeaconFireHeroGetArrScoreRewardReq::default_instance_->InitAsDefaultInstance();
  TActBeaconFireHeroGetArrScoreRewardRsp::default_instance_->InitAsDefaultInstance();
  TActBeaconFireHeroRankInfo::default_instance_->InitAsDefaultInstance();
  TActBeaconFireHeroGetStageRankReq::default_instance_->InitAsDefaultInstance();
  TActBeaconFireHeroGetStageRankRsp::default_instance_->InitAsDefaultInstance();
  TActBeaconFireHeroGetLastStageRankReq::default_instance_->InitAsDefaultInstance();
  TActBeaconFireHeroGetLastStageRankRsp::default_instance_->InitAsDefaultInstance();
  TActBeaconFireHeroNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActBeaconFireHero_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActBeaconFireHero_2eproto {
  StaticDescriptorInitializer_net_2fActBeaconFireHero_2eproto() {
    protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  }
} static_descriptor_initializer_net_2fActBeaconFireHero_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActBeaconFireHeroGiftInfo::kIdFieldNumber;
const int TActBeaconFireHeroGiftInfo::kNumFieldNumber;
const int TActBeaconFireHeroGiftInfo::kBuyTimeFieldNumber;
#endif  // !_MSC_VER

TActBeaconFireHeroGiftInfo::TActBeaconFireHeroGiftInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActBeaconFireHeroGiftInfo)
}

void TActBeaconFireHeroGiftInfo::InitAsDefaultInstance() {
}

TActBeaconFireHeroGiftInfo::TActBeaconFireHeroGiftInfo(const TActBeaconFireHeroGiftInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActBeaconFireHeroGiftInfo)
}

void TActBeaconFireHeroGiftInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  buytime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActBeaconFireHeroGiftInfo::~TActBeaconFireHeroGiftInfo() {
  // @@protoc_insertion_point(destructor:pb.TActBeaconFireHeroGiftInfo)
  SharedDtor();
}

void TActBeaconFireHeroGiftInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActBeaconFireHeroGiftInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActBeaconFireHeroGiftInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActBeaconFireHeroGiftInfo_descriptor_;
}

const TActBeaconFireHeroGiftInfo& TActBeaconFireHeroGiftInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  return *default_instance_;
}

TActBeaconFireHeroGiftInfo* TActBeaconFireHeroGiftInfo::default_instance_ = NULL;

TActBeaconFireHeroGiftInfo* TActBeaconFireHeroGiftInfo::New() const {
  return new TActBeaconFireHeroGiftInfo;
}

void TActBeaconFireHeroGiftInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActBeaconFireHeroGiftInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, buytime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActBeaconFireHeroGiftInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActBeaconFireHeroGiftInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BuyTime;
        break;
      }

      // optional uint64 BuyTime = 3;
      case 3: {
        if (tag == 24) {
         parse_BuyTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &buytime_)));
          set_has_buytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActBeaconFireHeroGiftInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActBeaconFireHeroGiftInfo)
  return false;
#undef DO_
}

void TActBeaconFireHeroGiftInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActBeaconFireHeroGiftInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  // optional uint64 BuyTime = 3;
  if (has_buytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->buytime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActBeaconFireHeroGiftInfo)
}

::google::protobuf::uint8* TActBeaconFireHeroGiftInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActBeaconFireHeroGiftInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  // optional uint64 BuyTime = 3;
  if (has_buytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->buytime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActBeaconFireHeroGiftInfo)
  return target;
}

int TActBeaconFireHeroGiftInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint64 BuyTime = 3;
    if (has_buytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->buytime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActBeaconFireHeroGiftInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActBeaconFireHeroGiftInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActBeaconFireHeroGiftInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActBeaconFireHeroGiftInfo::MergeFrom(const TActBeaconFireHeroGiftInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_buytime()) {
      set_buytime(from.buytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActBeaconFireHeroGiftInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActBeaconFireHeroGiftInfo::CopyFrom(const TActBeaconFireHeroGiftInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActBeaconFireHeroGiftInfo::IsInitialized() const {

  return true;
}

void TActBeaconFireHeroGiftInfo::Swap(TActBeaconFireHeroGiftInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(buytime_, other->buytime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActBeaconFireHeroGiftInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActBeaconFireHeroGiftInfo_descriptor_;
  metadata.reflection = TActBeaconFireHeroGiftInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActBeaconFireHeroTaskInfo::kIdFieldNumber;
const int TActBeaconFireHeroTaskInfo::kNumFieldNumber;
#endif  // !_MSC_VER

TActBeaconFireHeroTaskInfo::TActBeaconFireHeroTaskInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActBeaconFireHeroTaskInfo)
}

void TActBeaconFireHeroTaskInfo::InitAsDefaultInstance() {
}

TActBeaconFireHeroTaskInfo::TActBeaconFireHeroTaskInfo(const TActBeaconFireHeroTaskInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActBeaconFireHeroTaskInfo)
}

void TActBeaconFireHeroTaskInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActBeaconFireHeroTaskInfo::~TActBeaconFireHeroTaskInfo() {
  // @@protoc_insertion_point(destructor:pb.TActBeaconFireHeroTaskInfo)
  SharedDtor();
}

void TActBeaconFireHeroTaskInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActBeaconFireHeroTaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActBeaconFireHeroTaskInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActBeaconFireHeroTaskInfo_descriptor_;
}

const TActBeaconFireHeroTaskInfo& TActBeaconFireHeroTaskInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  return *default_instance_;
}

TActBeaconFireHeroTaskInfo* TActBeaconFireHeroTaskInfo::default_instance_ = NULL;

TActBeaconFireHeroTaskInfo* TActBeaconFireHeroTaskInfo::New() const {
  return new TActBeaconFireHeroTaskInfo;
}

void TActBeaconFireHeroTaskInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActBeaconFireHeroTaskInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(num_, id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActBeaconFireHeroTaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActBeaconFireHeroTaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint64 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActBeaconFireHeroTaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActBeaconFireHeroTaskInfo)
  return false;
#undef DO_
}

void TActBeaconFireHeroTaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActBeaconFireHeroTaskInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActBeaconFireHeroTaskInfo)
}

::google::protobuf::uint8* TActBeaconFireHeroTaskInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActBeaconFireHeroTaskInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActBeaconFireHeroTaskInfo)
  return target;
}

int TActBeaconFireHeroTaskInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActBeaconFireHeroTaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActBeaconFireHeroTaskInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActBeaconFireHeroTaskInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActBeaconFireHeroTaskInfo::MergeFrom(const TActBeaconFireHeroTaskInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActBeaconFireHeroTaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActBeaconFireHeroTaskInfo::CopyFrom(const TActBeaconFireHeroTaskInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActBeaconFireHeroTaskInfo::IsInitialized() const {

  return true;
}

void TActBeaconFireHeroTaskInfo::Swap(TActBeaconFireHeroTaskInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActBeaconFireHeroTaskInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActBeaconFireHeroTaskInfo_descriptor_;
  metadata.reflection = TActBeaconFireHeroTaskInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActBeaconFireHeroGetInfoRsp::kIdFieldNumber;
const int TActBeaconFireHeroGetInfoRsp::kScoreFieldNumber;
const int TActBeaconFireHeroGetInfoRsp::kArrGiftInfoFieldNumber;
const int TActBeaconFireHeroGetInfoRsp::kArrTaskInfoFieldNumber;
const int TActBeaconFireHeroGetInfoRsp::kArrScoreRewardInfoFieldNumber;
const int TActBeaconFireHeroGetInfoRsp::kStageRankArrFieldNumber;
const int TActBeaconFireHeroGetInfoRsp::kGroupIdFieldNumber;
const int TActBeaconFireHeroGetInfoRsp::kMaxStageRankArrFieldNumber;
#endif  // !_MSC_VER

TActBeaconFireHeroGetInfoRsp::TActBeaconFireHeroGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActBeaconFireHeroGetInfoRsp)
}

void TActBeaconFireHeroGetInfoRsp::InitAsDefaultInstance() {
}

TActBeaconFireHeroGetInfoRsp::TActBeaconFireHeroGetInfoRsp(const TActBeaconFireHeroGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActBeaconFireHeroGetInfoRsp)
}

void TActBeaconFireHeroGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  score_ = GOOGLE_ULONGLONG(0);
  groupid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActBeaconFireHeroGetInfoRsp::~TActBeaconFireHeroGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActBeaconFireHeroGetInfoRsp)
  SharedDtor();
}

void TActBeaconFireHeroGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActBeaconFireHeroGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActBeaconFireHeroGetInfoRsp_descriptor_;
}

const TActBeaconFireHeroGetInfoRsp& TActBeaconFireHeroGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  return *default_instance_;
}

TActBeaconFireHeroGetInfoRsp* TActBeaconFireHeroGetInfoRsp::default_instance_ = NULL;

TActBeaconFireHeroGetInfoRsp* TActBeaconFireHeroGetInfoRsp::New() const {
  return new TActBeaconFireHeroGetInfoRsp;
}

void TActBeaconFireHeroGetInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActBeaconFireHeroGetInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 67) {
    ZR_(id_, groupid_);
    score_ = GOOGLE_ULONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrgiftinfo_.Clear();
  arrtaskinfo_.Clear();
  arrscorerewardinfo_.Clear();
  stagerankarr_.Clear();
  maxstagerankarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActBeaconFireHeroGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActBeaconFireHeroGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Score;
        break;
      }

      // optional uint64 Score = 2;
      case 2: {
        if (tag == 16) {
         parse_Score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrGiftInfo;
        break;
      }

      // repeated .pb.TActBeaconFireHeroGiftInfo ArrGiftInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrGiftInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrgiftinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrGiftInfo;
        if (input->ExpectTag(34)) goto parse_ArrTaskInfo;
        break;
      }

      // repeated .pb.TActBeaconFireHeroTaskInfo ArrTaskInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_ArrTaskInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtaskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrTaskInfo;
        if (input->ExpectTag(42)) goto parse_ArrScoreRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrScoreRewardInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_ArrScoreRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrscorerewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ArrScoreRewardInfo;
        if (input->ExpectTag(48)) goto parse_StageRankArr;
        break;
      }

      // repeated int32 StageRankArr = 6;
      case 6: {
        if (tag == 48) {
         parse_StageRankArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_stagerankarr())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_stagerankarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_StageRankArr;
        if (input->ExpectTag(56)) goto parse_GroupId;
        break;
      }

      // optional uint32 GroupId = 7;
      case 7: {
        if (tag == 56) {
         parse_GroupId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));
          set_has_groupid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_MaxStageRankArr;
        break;
      }

      // repeated int32 MaxStageRankArr = 8;
      case 8: {
        if (tag == 64) {
         parse_MaxStageRankArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64, input, this->mutable_maxstagerankarr())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_maxstagerankarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_MaxStageRankArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActBeaconFireHeroGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActBeaconFireHeroGetInfoRsp)
  return false;
#undef DO_
}

void TActBeaconFireHeroGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActBeaconFireHeroGetInfoRsp)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 Score = 2;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->score(), output);
  }

  // repeated .pb.TActBeaconFireHeroGiftInfo ArrGiftInfo = 3;
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrgiftinfo(i), output);
  }

  // repeated .pb.TActBeaconFireHeroTaskInfo ArrTaskInfo = 4;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->arrtaskinfo(i), output);
  }

  // repeated .pb.TActivityRewardInfo ArrScoreRewardInfo = 5;
  for (int i = 0; i < this->arrscorerewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->arrscorerewardinfo(i), output);
  }

  // repeated int32 StageRankArr = 6;
  for (int i = 0; i < this->stagerankarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->stagerankarr(i), output);
  }

  // optional uint32 GroupId = 7;
  if (has_groupid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->groupid(), output);
  }

  // repeated int32 MaxStageRankArr = 8;
  for (int i = 0; i < this->maxstagerankarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->maxstagerankarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActBeaconFireHeroGetInfoRsp)
}

::google::protobuf::uint8* TActBeaconFireHeroGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActBeaconFireHeroGetInfoRsp)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 Score = 2;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->score(), target);
  }

  // repeated .pb.TActBeaconFireHeroGiftInfo ArrGiftInfo = 3;
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrgiftinfo(i), target);
  }

  // repeated .pb.TActBeaconFireHeroTaskInfo ArrTaskInfo = 4;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->arrtaskinfo(i), target);
  }

  // repeated .pb.TActivityRewardInfo ArrScoreRewardInfo = 5;
  for (int i = 0; i < this->arrscorerewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->arrscorerewardinfo(i), target);
  }

  // repeated int32 StageRankArr = 6;
  for (int i = 0; i < this->stagerankarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->stagerankarr(i), target);
  }

  // optional uint32 GroupId = 7;
  if (has_groupid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->groupid(), target);
  }

  // repeated int32 MaxStageRankArr = 8;
  for (int i = 0; i < this->maxstagerankarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(8, this->maxstagerankarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActBeaconFireHeroGetInfoRsp)
  return target;
}

int TActBeaconFireHeroGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 Score = 2;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->score());
    }

    // optional uint32 GroupId = 7;
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->groupid());
    }

  }
  // repeated .pb.TActBeaconFireHeroGiftInfo ArrGiftInfo = 3;
  total_size += 1 * this->arrgiftinfo_size();
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrgiftinfo(i));
  }

  // repeated .pb.TActBeaconFireHeroTaskInfo ArrTaskInfo = 4;
  total_size += 1 * this->arrtaskinfo_size();
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtaskinfo(i));
  }

  // repeated .pb.TActivityRewardInfo ArrScoreRewardInfo = 5;
  total_size += 1 * this->arrscorerewardinfo_size();
  for (int i = 0; i < this->arrscorerewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrscorerewardinfo(i));
  }

  // repeated int32 StageRankArr = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->stagerankarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->stagerankarr(i));
    }
    total_size += 1 * this->stagerankarr_size() + data_size;
  }

  // repeated int32 MaxStageRankArr = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->maxstagerankarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->maxstagerankarr(i));
    }
    total_size += 1 * this->maxstagerankarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActBeaconFireHeroGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActBeaconFireHeroGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActBeaconFireHeroGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActBeaconFireHeroGetInfoRsp::MergeFrom(const TActBeaconFireHeroGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrgiftinfo_.MergeFrom(from.arrgiftinfo_);
  arrtaskinfo_.MergeFrom(from.arrtaskinfo_);
  arrscorerewardinfo_.MergeFrom(from.arrscorerewardinfo_);
  stagerankarr_.MergeFrom(from.stagerankarr_);
  maxstagerankarr_.MergeFrom(from.maxstagerankarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_groupid()) {
      set_groupid(from.groupid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActBeaconFireHeroGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActBeaconFireHeroGetInfoRsp::CopyFrom(const TActBeaconFireHeroGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActBeaconFireHeroGetInfoRsp::IsInitialized() const {

  return true;
}

void TActBeaconFireHeroGetInfoRsp::Swap(TActBeaconFireHeroGetInfoRsp* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(score_, other->score_);
    arrgiftinfo_.Swap(&other->arrgiftinfo_);
    arrtaskinfo_.Swap(&other->arrtaskinfo_);
    arrscorerewardinfo_.Swap(&other->arrscorerewardinfo_);
    stagerankarr_.Swap(&other->stagerankarr_);
    std::swap(groupid_, other->groupid_);
    maxstagerankarr_.Swap(&other->maxstagerankarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActBeaconFireHeroGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActBeaconFireHeroGetInfoRsp_descriptor_;
  metadata.reflection = TActBeaconFireHeroGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActBeaconFireHeroGetArrScoreRewardReq::kArrIdFieldNumber;
#endif  // !_MSC_VER

TActBeaconFireHeroGetArrScoreRewardReq::TActBeaconFireHeroGetArrScoreRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActBeaconFireHeroGetArrScoreRewardReq)
}

void TActBeaconFireHeroGetArrScoreRewardReq::InitAsDefaultInstance() {
}

TActBeaconFireHeroGetArrScoreRewardReq::TActBeaconFireHeroGetArrScoreRewardReq(const TActBeaconFireHeroGetArrScoreRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActBeaconFireHeroGetArrScoreRewardReq)
}

void TActBeaconFireHeroGetArrScoreRewardReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActBeaconFireHeroGetArrScoreRewardReq::~TActBeaconFireHeroGetArrScoreRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TActBeaconFireHeroGetArrScoreRewardReq)
  SharedDtor();
}

void TActBeaconFireHeroGetArrScoreRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActBeaconFireHeroGetArrScoreRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetArrScoreRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActBeaconFireHeroGetArrScoreRewardReq_descriptor_;
}

const TActBeaconFireHeroGetArrScoreRewardReq& TActBeaconFireHeroGetArrScoreRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  return *default_instance_;
}

TActBeaconFireHeroGetArrScoreRewardReq* TActBeaconFireHeroGetArrScoreRewardReq::default_instance_ = NULL;

TActBeaconFireHeroGetArrScoreRewardReq* TActBeaconFireHeroGetArrScoreRewardReq::New() const {
  return new TActBeaconFireHeroGetArrScoreRewardReq;
}

void TActBeaconFireHeroGetArrScoreRewardReq::Clear() {
  arrid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActBeaconFireHeroGetArrScoreRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActBeaconFireHeroGetArrScoreRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ArrId = 1;
      case 1: {
        if (tag == 8) {
         parse_ArrId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_arrid())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ArrId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActBeaconFireHeroGetArrScoreRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActBeaconFireHeroGetArrScoreRewardReq)
  return false;
#undef DO_
}

void TActBeaconFireHeroGetArrScoreRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActBeaconFireHeroGetArrScoreRewardReq)
  // repeated uint32 ArrId = 1;
  for (int i = 0; i < this->arrid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->arrid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActBeaconFireHeroGetArrScoreRewardReq)
}

::google::protobuf::uint8* TActBeaconFireHeroGetArrScoreRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActBeaconFireHeroGetArrScoreRewardReq)
  // repeated uint32 ArrId = 1;
  for (int i = 0; i < this->arrid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->arrid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActBeaconFireHeroGetArrScoreRewardReq)
  return target;
}

int TActBeaconFireHeroGetArrScoreRewardReq::ByteSize() const {
  int total_size = 0;

  // repeated uint32 ArrId = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrid(i));
    }
    total_size += 1 * this->arrid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActBeaconFireHeroGetArrScoreRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActBeaconFireHeroGetArrScoreRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActBeaconFireHeroGetArrScoreRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActBeaconFireHeroGetArrScoreRewardReq::MergeFrom(const TActBeaconFireHeroGetArrScoreRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrid_.MergeFrom(from.arrid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActBeaconFireHeroGetArrScoreRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActBeaconFireHeroGetArrScoreRewardReq::CopyFrom(const TActBeaconFireHeroGetArrScoreRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActBeaconFireHeroGetArrScoreRewardReq::IsInitialized() const {

  return true;
}

void TActBeaconFireHeroGetArrScoreRewardReq::Swap(TActBeaconFireHeroGetArrScoreRewardReq* other) {
  if (other != this) {
    arrid_.Swap(&other->arrid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActBeaconFireHeroGetArrScoreRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActBeaconFireHeroGetArrScoreRewardReq_descriptor_;
  metadata.reflection = TActBeaconFireHeroGetArrScoreRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActBeaconFireHeroGetArrScoreRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TActBeaconFireHeroGetArrScoreRewardRsp::TActBeaconFireHeroGetArrScoreRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActBeaconFireHeroGetArrScoreRewardRsp)
}

void TActBeaconFireHeroGetArrScoreRewardRsp::InitAsDefaultInstance() {
}

TActBeaconFireHeroGetArrScoreRewardRsp::TActBeaconFireHeroGetArrScoreRewardRsp(const TActBeaconFireHeroGetArrScoreRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActBeaconFireHeroGetArrScoreRewardRsp)
}

void TActBeaconFireHeroGetArrScoreRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActBeaconFireHeroGetArrScoreRewardRsp::~TActBeaconFireHeroGetArrScoreRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TActBeaconFireHeroGetArrScoreRewardRsp)
  SharedDtor();
}

void TActBeaconFireHeroGetArrScoreRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActBeaconFireHeroGetArrScoreRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetArrScoreRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActBeaconFireHeroGetArrScoreRewardRsp_descriptor_;
}

const TActBeaconFireHeroGetArrScoreRewardRsp& TActBeaconFireHeroGetArrScoreRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  return *default_instance_;
}

TActBeaconFireHeroGetArrScoreRewardRsp* TActBeaconFireHeroGetArrScoreRewardRsp::default_instance_ = NULL;

TActBeaconFireHeroGetArrScoreRewardRsp* TActBeaconFireHeroGetArrScoreRewardRsp::New() const {
  return new TActBeaconFireHeroGetArrScoreRewardRsp;
}

void TActBeaconFireHeroGetArrScoreRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActBeaconFireHeroGetArrScoreRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActBeaconFireHeroGetArrScoreRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActBeaconFireHeroGetArrScoreRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActBeaconFireHeroGetArrScoreRewardRsp)
  return false;
#undef DO_
}

void TActBeaconFireHeroGetArrScoreRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActBeaconFireHeroGetArrScoreRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActBeaconFireHeroGetArrScoreRewardRsp)
}

::google::protobuf::uint8* TActBeaconFireHeroGetArrScoreRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActBeaconFireHeroGetArrScoreRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActBeaconFireHeroGetArrScoreRewardRsp)
  return target;
}

int TActBeaconFireHeroGetArrScoreRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActBeaconFireHeroGetArrScoreRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActBeaconFireHeroGetArrScoreRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActBeaconFireHeroGetArrScoreRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActBeaconFireHeroGetArrScoreRewardRsp::MergeFrom(const TActBeaconFireHeroGetArrScoreRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActBeaconFireHeroGetArrScoreRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActBeaconFireHeroGetArrScoreRewardRsp::CopyFrom(const TActBeaconFireHeroGetArrScoreRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActBeaconFireHeroGetArrScoreRewardRsp::IsInitialized() const {

  return true;
}

void TActBeaconFireHeroGetArrScoreRewardRsp::Swap(TActBeaconFireHeroGetArrScoreRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActBeaconFireHeroGetArrScoreRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActBeaconFireHeroGetArrScoreRewardRsp_descriptor_;
  metadata.reflection = TActBeaconFireHeroGetArrScoreRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActBeaconFireHeroRankInfo::kUserInfoFieldNumber;
const int TActBeaconFireHeroRankInfo::kRankFieldNumber;
const int TActBeaconFireHeroRankInfo::kScoreFieldNumber;
#endif  // !_MSC_VER

TActBeaconFireHeroRankInfo::TActBeaconFireHeroRankInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActBeaconFireHeroRankInfo)
}

void TActBeaconFireHeroRankInfo::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TActBeaconFireHeroRankInfo::TActBeaconFireHeroRankInfo(const TActBeaconFireHeroRankInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActBeaconFireHeroRankInfo)
}

void TActBeaconFireHeroRankInfo::SharedCtor() {
  _cached_size_ = 0;
  userinfo_ = NULL;
  rank_ = 0u;
  score_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActBeaconFireHeroRankInfo::~TActBeaconFireHeroRankInfo() {
  // @@protoc_insertion_point(destructor:pb.TActBeaconFireHeroRankInfo)
  SharedDtor();
}

void TActBeaconFireHeroRankInfo::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void TActBeaconFireHeroRankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActBeaconFireHeroRankInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActBeaconFireHeroRankInfo_descriptor_;
}

const TActBeaconFireHeroRankInfo& TActBeaconFireHeroRankInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  return *default_instance_;
}

TActBeaconFireHeroRankInfo* TActBeaconFireHeroRankInfo::default_instance_ = NULL;

TActBeaconFireHeroRankInfo* TActBeaconFireHeroRankInfo::New() const {
  return new TActBeaconFireHeroRankInfo;
}

void TActBeaconFireHeroRankInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActBeaconFireHeroRankInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(score_, rank_);
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActBeaconFireHeroRankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActBeaconFireHeroRankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TUserSimpleInfo UserInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Rank;
        break;
      }

      // optional uint32 Rank = 2;
      case 2: {
        if (tag == 16) {
         parse_Rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Score;
        break;
      }

      // optional uint64 Score = 3;
      case 3: {
        if (tag == 24) {
         parse_Score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActBeaconFireHeroRankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActBeaconFireHeroRankInfo)
  return false;
#undef DO_
}

void TActBeaconFireHeroRankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActBeaconFireHeroRankInfo)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(), output);
  }

  // optional uint32 Rank = 2;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rank(), output);
  }

  // optional uint64 Score = 3;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->score(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActBeaconFireHeroRankInfo)
}

::google::protobuf::uint8* TActBeaconFireHeroRankInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActBeaconFireHeroRankInfo)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userinfo(), target);
  }

  // optional uint32 Rank = 2;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rank(), target);
  }

  // optional uint64 Score = 3;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->score(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActBeaconFireHeroRankInfo)
  return target;
}

int TActBeaconFireHeroRankInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TUserSimpleInfo UserInfo = 1;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }

    // optional uint32 Rank = 2;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rank());
    }

    // optional uint64 Score = 3;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->score());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActBeaconFireHeroRankInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActBeaconFireHeroRankInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActBeaconFireHeroRankInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActBeaconFireHeroRankInfo::MergeFrom(const TActBeaconFireHeroRankInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userinfo()) {
      mutable_userinfo()->::pb::TUserSimpleInfo::MergeFrom(from.userinfo());
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActBeaconFireHeroRankInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActBeaconFireHeroRankInfo::CopyFrom(const TActBeaconFireHeroRankInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActBeaconFireHeroRankInfo::IsInitialized() const {

  return true;
}

void TActBeaconFireHeroRankInfo::Swap(TActBeaconFireHeroRankInfo* other) {
  if (other != this) {
    std::swap(userinfo_, other->userinfo_);
    std::swap(rank_, other->rank_);
    std::swap(score_, other->score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActBeaconFireHeroRankInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActBeaconFireHeroRankInfo_descriptor_;
  metadata.reflection = TActBeaconFireHeroRankInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActBeaconFireHeroGetStageRankReq::kOffsetFieldNumber;
const int TActBeaconFireHeroGetStageRankReq::kLimitFieldNumber;
#endif  // !_MSC_VER

TActBeaconFireHeroGetStageRankReq::TActBeaconFireHeroGetStageRankReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActBeaconFireHeroGetStageRankReq)
}

void TActBeaconFireHeroGetStageRankReq::InitAsDefaultInstance() {
}

TActBeaconFireHeroGetStageRankReq::TActBeaconFireHeroGetStageRankReq(const TActBeaconFireHeroGetStageRankReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActBeaconFireHeroGetStageRankReq)
}

void TActBeaconFireHeroGetStageRankReq::SharedCtor() {
  _cached_size_ = 0;
  offset_ = 0u;
  limit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActBeaconFireHeroGetStageRankReq::~TActBeaconFireHeroGetStageRankReq() {
  // @@protoc_insertion_point(destructor:pb.TActBeaconFireHeroGetStageRankReq)
  SharedDtor();
}

void TActBeaconFireHeroGetStageRankReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActBeaconFireHeroGetStageRankReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetStageRankReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActBeaconFireHeroGetStageRankReq_descriptor_;
}

const TActBeaconFireHeroGetStageRankReq& TActBeaconFireHeroGetStageRankReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  return *default_instance_;
}

TActBeaconFireHeroGetStageRankReq* TActBeaconFireHeroGetStageRankReq::default_instance_ = NULL;

TActBeaconFireHeroGetStageRankReq* TActBeaconFireHeroGetStageRankReq::New() const {
  return new TActBeaconFireHeroGetStageRankReq;
}

void TActBeaconFireHeroGetStageRankReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActBeaconFireHeroGetStageRankReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(offset_, limit_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActBeaconFireHeroGetStageRankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActBeaconFireHeroGetStageRankReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Offset = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Limit;
        break;
      }

      // optional uint32 Limit = 2;
      case 2: {
        if (tag == 16) {
         parse_Limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActBeaconFireHeroGetStageRankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActBeaconFireHeroGetStageRankReq)
  return false;
#undef DO_
}

void TActBeaconFireHeroGetStageRankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActBeaconFireHeroGetStageRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->offset(), output);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActBeaconFireHeroGetStageRankReq)
}

::google::protobuf::uint8* TActBeaconFireHeroGetStageRankReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActBeaconFireHeroGetStageRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->offset(), target);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActBeaconFireHeroGetStageRankReq)
  return target;
}

int TActBeaconFireHeroGetStageRankReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Offset = 1;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 Limit = 2;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActBeaconFireHeroGetStageRankReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActBeaconFireHeroGetStageRankReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActBeaconFireHeroGetStageRankReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActBeaconFireHeroGetStageRankReq::MergeFrom(const TActBeaconFireHeroGetStageRankReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActBeaconFireHeroGetStageRankReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActBeaconFireHeroGetStageRankReq::CopyFrom(const TActBeaconFireHeroGetStageRankReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActBeaconFireHeroGetStageRankReq::IsInitialized() const {

  return true;
}

void TActBeaconFireHeroGetStageRankReq::Swap(TActBeaconFireHeroGetStageRankReq* other) {
  if (other != this) {
    std::swap(offset_, other->offset_);
    std::swap(limit_, other->limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActBeaconFireHeroGetStageRankReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActBeaconFireHeroGetStageRankReq_descriptor_;
  metadata.reflection = TActBeaconFireHeroGetStageRankReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActBeaconFireHeroGetStageRankRsp::kArrRankInfoFieldNumber;
#endif  // !_MSC_VER

TActBeaconFireHeroGetStageRankRsp::TActBeaconFireHeroGetStageRankRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActBeaconFireHeroGetStageRankRsp)
}

void TActBeaconFireHeroGetStageRankRsp::InitAsDefaultInstance() {
}

TActBeaconFireHeroGetStageRankRsp::TActBeaconFireHeroGetStageRankRsp(const TActBeaconFireHeroGetStageRankRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActBeaconFireHeroGetStageRankRsp)
}

void TActBeaconFireHeroGetStageRankRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActBeaconFireHeroGetStageRankRsp::~TActBeaconFireHeroGetStageRankRsp() {
  // @@protoc_insertion_point(destructor:pb.TActBeaconFireHeroGetStageRankRsp)
  SharedDtor();
}

void TActBeaconFireHeroGetStageRankRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActBeaconFireHeroGetStageRankRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetStageRankRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActBeaconFireHeroGetStageRankRsp_descriptor_;
}

const TActBeaconFireHeroGetStageRankRsp& TActBeaconFireHeroGetStageRankRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  return *default_instance_;
}

TActBeaconFireHeroGetStageRankRsp* TActBeaconFireHeroGetStageRankRsp::default_instance_ = NULL;

TActBeaconFireHeroGetStageRankRsp* TActBeaconFireHeroGetStageRankRsp::New() const {
  return new TActBeaconFireHeroGetStageRankRsp;
}

void TActBeaconFireHeroGetStageRankRsp::Clear() {
  arrrankinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActBeaconFireHeroGetStageRankRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActBeaconFireHeroGetStageRankRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActBeaconFireHeroRankInfo ArrRankInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrRankInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrankinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrRankInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActBeaconFireHeroGetStageRankRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActBeaconFireHeroGetStageRankRsp)
  return false;
#undef DO_
}

void TActBeaconFireHeroGetStageRankRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActBeaconFireHeroGetStageRankRsp)
  // repeated .pb.TActBeaconFireHeroRankInfo ArrRankInfo = 1;
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrrankinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActBeaconFireHeroGetStageRankRsp)
}

::google::protobuf::uint8* TActBeaconFireHeroGetStageRankRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActBeaconFireHeroGetStageRankRsp)
  // repeated .pb.TActBeaconFireHeroRankInfo ArrRankInfo = 1;
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrrankinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActBeaconFireHeroGetStageRankRsp)
  return target;
}

int TActBeaconFireHeroGetStageRankRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActBeaconFireHeroRankInfo ArrRankInfo = 1;
  total_size += 1 * this->arrrankinfo_size();
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrankinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActBeaconFireHeroGetStageRankRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActBeaconFireHeroGetStageRankRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActBeaconFireHeroGetStageRankRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActBeaconFireHeroGetStageRankRsp::MergeFrom(const TActBeaconFireHeroGetStageRankRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrankinfo_.MergeFrom(from.arrrankinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActBeaconFireHeroGetStageRankRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActBeaconFireHeroGetStageRankRsp::CopyFrom(const TActBeaconFireHeroGetStageRankRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActBeaconFireHeroGetStageRankRsp::IsInitialized() const {

  return true;
}

void TActBeaconFireHeroGetStageRankRsp::Swap(TActBeaconFireHeroGetStageRankRsp* other) {
  if (other != this) {
    arrrankinfo_.Swap(&other->arrrankinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActBeaconFireHeroGetStageRankRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActBeaconFireHeroGetStageRankRsp_descriptor_;
  metadata.reflection = TActBeaconFireHeroGetStageRankRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActBeaconFireHeroGetLastStageRankReq::kOffsetFieldNumber;
const int TActBeaconFireHeroGetLastStageRankReq::kLimitFieldNumber;
#endif  // !_MSC_VER

TActBeaconFireHeroGetLastStageRankReq::TActBeaconFireHeroGetLastStageRankReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActBeaconFireHeroGetLastStageRankReq)
}

void TActBeaconFireHeroGetLastStageRankReq::InitAsDefaultInstance() {
}

TActBeaconFireHeroGetLastStageRankReq::TActBeaconFireHeroGetLastStageRankReq(const TActBeaconFireHeroGetLastStageRankReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActBeaconFireHeroGetLastStageRankReq)
}

void TActBeaconFireHeroGetLastStageRankReq::SharedCtor() {
  _cached_size_ = 0;
  offset_ = 0u;
  limit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActBeaconFireHeroGetLastStageRankReq::~TActBeaconFireHeroGetLastStageRankReq() {
  // @@protoc_insertion_point(destructor:pb.TActBeaconFireHeroGetLastStageRankReq)
  SharedDtor();
}

void TActBeaconFireHeroGetLastStageRankReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActBeaconFireHeroGetLastStageRankReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetLastStageRankReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActBeaconFireHeroGetLastStageRankReq_descriptor_;
}

const TActBeaconFireHeroGetLastStageRankReq& TActBeaconFireHeroGetLastStageRankReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  return *default_instance_;
}

TActBeaconFireHeroGetLastStageRankReq* TActBeaconFireHeroGetLastStageRankReq::default_instance_ = NULL;

TActBeaconFireHeroGetLastStageRankReq* TActBeaconFireHeroGetLastStageRankReq::New() const {
  return new TActBeaconFireHeroGetLastStageRankReq;
}

void TActBeaconFireHeroGetLastStageRankReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActBeaconFireHeroGetLastStageRankReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(offset_, limit_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActBeaconFireHeroGetLastStageRankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActBeaconFireHeroGetLastStageRankReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Offset = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Limit;
        break;
      }

      // optional uint32 Limit = 2;
      case 2: {
        if (tag == 16) {
         parse_Limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActBeaconFireHeroGetLastStageRankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActBeaconFireHeroGetLastStageRankReq)
  return false;
#undef DO_
}

void TActBeaconFireHeroGetLastStageRankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActBeaconFireHeroGetLastStageRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->offset(), output);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActBeaconFireHeroGetLastStageRankReq)
}

::google::protobuf::uint8* TActBeaconFireHeroGetLastStageRankReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActBeaconFireHeroGetLastStageRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->offset(), target);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActBeaconFireHeroGetLastStageRankReq)
  return target;
}

int TActBeaconFireHeroGetLastStageRankReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Offset = 1;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 Limit = 2;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActBeaconFireHeroGetLastStageRankReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActBeaconFireHeroGetLastStageRankReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActBeaconFireHeroGetLastStageRankReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActBeaconFireHeroGetLastStageRankReq::MergeFrom(const TActBeaconFireHeroGetLastStageRankReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActBeaconFireHeroGetLastStageRankReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActBeaconFireHeroGetLastStageRankReq::CopyFrom(const TActBeaconFireHeroGetLastStageRankReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActBeaconFireHeroGetLastStageRankReq::IsInitialized() const {

  return true;
}

void TActBeaconFireHeroGetLastStageRankReq::Swap(TActBeaconFireHeroGetLastStageRankReq* other) {
  if (other != this) {
    std::swap(offset_, other->offset_);
    std::swap(limit_, other->limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActBeaconFireHeroGetLastStageRankReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActBeaconFireHeroGetLastStageRankReq_descriptor_;
  metadata.reflection = TActBeaconFireHeroGetLastStageRankReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActBeaconFireHeroGetLastStageRankRsp::kMyRankFieldNumber;
const int TActBeaconFireHeroGetLastStageRankRsp::kArrRankInfoFieldNumber;
#endif  // !_MSC_VER

TActBeaconFireHeroGetLastStageRankRsp::TActBeaconFireHeroGetLastStageRankRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActBeaconFireHeroGetLastStageRankRsp)
}

void TActBeaconFireHeroGetLastStageRankRsp::InitAsDefaultInstance() {
}

TActBeaconFireHeroGetLastStageRankRsp::TActBeaconFireHeroGetLastStageRankRsp(const TActBeaconFireHeroGetLastStageRankRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActBeaconFireHeroGetLastStageRankRsp)
}

void TActBeaconFireHeroGetLastStageRankRsp::SharedCtor() {
  _cached_size_ = 0;
  myrank_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActBeaconFireHeroGetLastStageRankRsp::~TActBeaconFireHeroGetLastStageRankRsp() {
  // @@protoc_insertion_point(destructor:pb.TActBeaconFireHeroGetLastStageRankRsp)
  SharedDtor();
}

void TActBeaconFireHeroGetLastStageRankRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActBeaconFireHeroGetLastStageRankRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActBeaconFireHeroGetLastStageRankRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActBeaconFireHeroGetLastStageRankRsp_descriptor_;
}

const TActBeaconFireHeroGetLastStageRankRsp& TActBeaconFireHeroGetLastStageRankRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  return *default_instance_;
}

TActBeaconFireHeroGetLastStageRankRsp* TActBeaconFireHeroGetLastStageRankRsp::default_instance_ = NULL;

TActBeaconFireHeroGetLastStageRankRsp* TActBeaconFireHeroGetLastStageRankRsp::New() const {
  return new TActBeaconFireHeroGetLastStageRankRsp;
}

void TActBeaconFireHeroGetLastStageRankRsp::Clear() {
  myrank_ = 0u;
  arrrankinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActBeaconFireHeroGetLastStageRankRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActBeaconFireHeroGetLastStageRankRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MyRank = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myrank_)));
          set_has_myrank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRankInfo;
        break;
      }

      // repeated .pb.TActBeaconFireHeroRankInfo ArrRankInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrRankInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrankinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRankInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActBeaconFireHeroGetLastStageRankRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActBeaconFireHeroGetLastStageRankRsp)
  return false;
#undef DO_
}

void TActBeaconFireHeroGetLastStageRankRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActBeaconFireHeroGetLastStageRankRsp)
  // optional uint32 MyRank = 1;
  if (has_myrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myrank(), output);
  }

  // repeated .pb.TActBeaconFireHeroRankInfo ArrRankInfo = 2;
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrrankinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActBeaconFireHeroGetLastStageRankRsp)
}

::google::protobuf::uint8* TActBeaconFireHeroGetLastStageRankRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActBeaconFireHeroGetLastStageRankRsp)
  // optional uint32 MyRank = 1;
  if (has_myrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myrank(), target);
  }

  // repeated .pb.TActBeaconFireHeroRankInfo ArrRankInfo = 2;
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrrankinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActBeaconFireHeroGetLastStageRankRsp)
  return target;
}

int TActBeaconFireHeroGetLastStageRankRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MyRank = 1;
    if (has_myrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myrank());
    }

  }
  // repeated .pb.TActBeaconFireHeroRankInfo ArrRankInfo = 2;
  total_size += 1 * this->arrrankinfo_size();
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrankinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActBeaconFireHeroGetLastStageRankRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActBeaconFireHeroGetLastStageRankRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActBeaconFireHeroGetLastStageRankRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActBeaconFireHeroGetLastStageRankRsp::MergeFrom(const TActBeaconFireHeroGetLastStageRankRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrankinfo_.MergeFrom(from.arrrankinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myrank()) {
      set_myrank(from.myrank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActBeaconFireHeroGetLastStageRankRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActBeaconFireHeroGetLastStageRankRsp::CopyFrom(const TActBeaconFireHeroGetLastStageRankRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActBeaconFireHeroGetLastStageRankRsp::IsInitialized() const {

  return true;
}

void TActBeaconFireHeroGetLastStageRankRsp::Swap(TActBeaconFireHeroGetLastStageRankRsp* other) {
  if (other != this) {
    std::swap(myrank_, other->myrank_);
    arrrankinfo_.Swap(&other->arrrankinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActBeaconFireHeroGetLastStageRankRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActBeaconFireHeroGetLastStageRankRsp_descriptor_;
  metadata.reflection = TActBeaconFireHeroGetLastStageRankRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActBeaconFireHeroNotify::kIdFieldNumber;
const int TActBeaconFireHeroNotify::kScoreFieldNumber;
const int TActBeaconFireHeroNotify::kArrGiftInfoFieldNumber;
const int TActBeaconFireHeroNotify::kArrTaskInfoFieldNumber;
const int TActBeaconFireHeroNotify::kStageRankFieldNumber;
const int TActBeaconFireHeroNotify::kMaxStageRankFieldNumber;
#endif  // !_MSC_VER

TActBeaconFireHeroNotify::TActBeaconFireHeroNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActBeaconFireHeroNotify)
}

void TActBeaconFireHeroNotify::InitAsDefaultInstance() {
}

TActBeaconFireHeroNotify::TActBeaconFireHeroNotify(const TActBeaconFireHeroNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActBeaconFireHeroNotify)
}

void TActBeaconFireHeroNotify::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  score_ = GOOGLE_ULONGLONG(0);
  stagerank_ = 0u;
  maxstagerank_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActBeaconFireHeroNotify::~TActBeaconFireHeroNotify() {
  // @@protoc_insertion_point(destructor:pb.TActBeaconFireHeroNotify)
  SharedDtor();
}

void TActBeaconFireHeroNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActBeaconFireHeroNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActBeaconFireHeroNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActBeaconFireHeroNotify_descriptor_;
}

const TActBeaconFireHeroNotify& TActBeaconFireHeroNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActBeaconFireHero_2eproto();
  return *default_instance_;
}

TActBeaconFireHeroNotify* TActBeaconFireHeroNotify::default_instance_ = NULL;

TActBeaconFireHeroNotify* TActBeaconFireHeroNotify::New() const {
  return new TActBeaconFireHeroNotify;
}

void TActBeaconFireHeroNotify::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActBeaconFireHeroNotify*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 51) {
    ZR_(id_, stagerank_);
    score_ = GOOGLE_ULONGLONG(0);
    maxstagerank_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrgiftinfo_.Clear();
  arrtaskinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActBeaconFireHeroNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActBeaconFireHeroNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Score;
        break;
      }

      // optional uint64 Score = 2;
      case 2: {
        if (tag == 16) {
         parse_Score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrGiftInfo;
        break;
      }

      // repeated .pb.TActBeaconFireHeroGiftInfo ArrGiftInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrGiftInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrgiftinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrGiftInfo;
        if (input->ExpectTag(34)) goto parse_ArrTaskInfo;
        break;
      }

      // repeated .pb.TActBeaconFireHeroTaskInfo ArrTaskInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_ArrTaskInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtaskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrTaskInfo;
        if (input->ExpectTag(40)) goto parse_StageRank;
        break;
      }

      // optional uint32 StageRank = 5;
      case 5: {
        if (tag == 40) {
         parse_StageRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stagerank_)));
          set_has_stagerank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_MaxStageRank;
        break;
      }

      // optional uint32 MaxStageRank = 6;
      case 6: {
        if (tag == 48) {
         parse_MaxStageRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxstagerank_)));
          set_has_maxstagerank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActBeaconFireHeroNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActBeaconFireHeroNotify)
  return false;
#undef DO_
}

void TActBeaconFireHeroNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActBeaconFireHeroNotify)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 Score = 2;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->score(), output);
  }

  // repeated .pb.TActBeaconFireHeroGiftInfo ArrGiftInfo = 3;
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrgiftinfo(i), output);
  }

  // repeated .pb.TActBeaconFireHeroTaskInfo ArrTaskInfo = 4;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->arrtaskinfo(i), output);
  }

  // optional uint32 StageRank = 5;
  if (has_stagerank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->stagerank(), output);
  }

  // optional uint32 MaxStageRank = 6;
  if (has_maxstagerank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->maxstagerank(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActBeaconFireHeroNotify)
}

::google::protobuf::uint8* TActBeaconFireHeroNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActBeaconFireHeroNotify)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 Score = 2;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->score(), target);
  }

  // repeated .pb.TActBeaconFireHeroGiftInfo ArrGiftInfo = 3;
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrgiftinfo(i), target);
  }

  // repeated .pb.TActBeaconFireHeroTaskInfo ArrTaskInfo = 4;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->arrtaskinfo(i), target);
  }

  // optional uint32 StageRank = 5;
  if (has_stagerank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->stagerank(), target);
  }

  // optional uint32 MaxStageRank = 6;
  if (has_maxstagerank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->maxstagerank(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActBeaconFireHeroNotify)
  return target;
}

int TActBeaconFireHeroNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 Score = 2;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->score());
    }

    // optional uint32 StageRank = 5;
    if (has_stagerank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stagerank());
    }

    // optional uint32 MaxStageRank = 6;
    if (has_maxstagerank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxstagerank());
    }

  }
  // repeated .pb.TActBeaconFireHeroGiftInfo ArrGiftInfo = 3;
  total_size += 1 * this->arrgiftinfo_size();
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrgiftinfo(i));
  }

  // repeated .pb.TActBeaconFireHeroTaskInfo ArrTaskInfo = 4;
  total_size += 1 * this->arrtaskinfo_size();
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtaskinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActBeaconFireHeroNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActBeaconFireHeroNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActBeaconFireHeroNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActBeaconFireHeroNotify::MergeFrom(const TActBeaconFireHeroNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrgiftinfo_.MergeFrom(from.arrgiftinfo_);
  arrtaskinfo_.MergeFrom(from.arrtaskinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_stagerank()) {
      set_stagerank(from.stagerank());
    }
    if (from.has_maxstagerank()) {
      set_maxstagerank(from.maxstagerank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActBeaconFireHeroNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActBeaconFireHeroNotify::CopyFrom(const TActBeaconFireHeroNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActBeaconFireHeroNotify::IsInitialized() const {

  return true;
}

void TActBeaconFireHeroNotify::Swap(TActBeaconFireHeroNotify* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(score_, other->score_);
    arrgiftinfo_.Swap(&other->arrgiftinfo_);
    arrtaskinfo_.Swap(&other->arrtaskinfo_);
    std::swap(stagerank_, other->stagerank_);
    std::swap(maxstagerank_, other->maxstagerank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActBeaconFireHeroNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActBeaconFireHeroNotify_descriptor_;
  metadata.reflection = TActBeaconFireHeroNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
