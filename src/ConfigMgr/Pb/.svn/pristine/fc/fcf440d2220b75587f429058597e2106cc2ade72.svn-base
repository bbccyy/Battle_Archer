// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/CampRank.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/CampRank.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TCampRankRankItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCampRankRankItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCampRankHeroRankItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCampRankHeroRankItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCampRankGetCampRankReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCampRankGetCampRankReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCampRankGetCampRankRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCampRankGetCampRankRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCampRankGetHeroRankReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCampRankGetHeroRankReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCampRankGetHeroRankRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCampRankGetHeroRankRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCampRankGetHeroAppearReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCampRankGetHeroAppearReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCampRankGetHeroAppearRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCampRankGetHeroAppearRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TcampRankCampRankFirst_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TcampRankCampRankFirst_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCampRankGetCampRankFirstRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCampRankGetCampRankFirstRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCampRankHeroRankInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCampRankHeroRankInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCampRankGetSelfRankInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCampRankGetSelfRankInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCampRankSelfRankInfoPush_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCampRankSelfRankInfoPush_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ECampRankType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fCampRank_2eproto() {
  protobuf_AddDesc_net_2fCampRank_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/CampRank.proto");
  GOOGLE_CHECK(file != NULL);
  TCampRankRankItem_descriptor_ = file->message_type(0);
  static const int TCampRankRankItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankRankItem, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankRankItem, fightforce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankRankItem, changetime_),
  };
  TCampRankRankItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCampRankRankItem_descriptor_,
      TCampRankRankItem::default_instance_,
      TCampRankRankItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankRankItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankRankItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCampRankRankItem));
  TCampRankHeroRankItem_descriptor_ = file->message_type(1);
  static const int TCampRankHeroRankItem_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankItem, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankItem, fightforce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankItem, changetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankItem, htid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankItem, herolv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankItem, herostarlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankItem, heroadvlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankItem, herotitle_),
  };
  TCampRankHeroRankItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCampRankHeroRankItem_descriptor_,
      TCampRankHeroRankItem::default_instance_,
      TCampRankHeroRankItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCampRankHeroRankItem));
  TCampRankGetCampRankReq_descriptor_ = file->message_type(2);
  static const int TCampRankGetCampRankReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetCampRankReq, camptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetCampRankReq, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetCampRankReq, limit_),
  };
  TCampRankGetCampRankReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCampRankGetCampRankReq_descriptor_,
      TCampRankGetCampRankReq::default_instance_,
      TCampRankGetCampRankReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetCampRankReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetCampRankReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCampRankGetCampRankReq));
  TCampRankGetCampRankRsp_descriptor_ = file->message_type(3);
  static const int TCampRankGetCampRankRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetCampRankRsp, rankarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetCampRankRsp, myrank_),
  };
  TCampRankGetCampRankRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCampRankGetCampRankRsp_descriptor_,
      TCampRankGetCampRankRsp::default_instance_,
      TCampRankGetCampRankRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetCampRankRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetCampRankRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCampRankGetCampRankRsp));
  TCampRankGetHeroRankReq_descriptor_ = file->message_type(4);
  static const int TCampRankGetHeroRankReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroRankReq, heromodelid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroRankReq, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroRankReq, limit_),
  };
  TCampRankGetHeroRankReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCampRankGetHeroRankReq_descriptor_,
      TCampRankGetHeroRankReq::default_instance_,
      TCampRankGetHeroRankReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroRankReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroRankReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCampRankGetHeroRankReq));
  TCampRankGetHeroRankRsp_descriptor_ = file->message_type(5);
  static const int TCampRankGetHeroRankRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroRankRsp, rankarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroRankRsp, myrank_),
  };
  TCampRankGetHeroRankRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCampRankGetHeroRankRsp_descriptor_,
      TCampRankGetHeroRankRsp::default_instance_,
      TCampRankGetHeroRankRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroRankRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroRankRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCampRankGetHeroRankRsp));
  TCampRankGetHeroAppearReq_descriptor_ = file->message_type(6);
  static const int TCampRankGetHeroAppearReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroAppearReq, camptype_),
  };
  TCampRankGetHeroAppearReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCampRankGetHeroAppearReq_descriptor_,
      TCampRankGetHeroAppearReq::default_instance_,
      TCampRankGetHeroAppearReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroAppearReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroAppearReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCampRankGetHeroAppearReq));
  TCampRankGetHeroAppearRsp_descriptor_ = file->message_type(7);
  static const int TCampRankGetHeroAppearRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroAppearRsp, camptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroAppearRsp, modelidarr_),
  };
  TCampRankGetHeroAppearRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCampRankGetHeroAppearRsp_descriptor_,
      TCampRankGetHeroAppearRsp::default_instance_,
      TCampRankGetHeroAppearRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroAppearRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetHeroAppearRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCampRankGetHeroAppearRsp));
  TcampRankCampRankFirst_descriptor_ = file->message_type(8);
  static const int TcampRankCampRankFirst_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TcampRankCampRankFirst, camptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TcampRankCampRankFirst, rankinfo_),
  };
  TcampRankCampRankFirst_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TcampRankCampRankFirst_descriptor_,
      TcampRankCampRankFirst::default_instance_,
      TcampRankCampRankFirst_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TcampRankCampRankFirst, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TcampRankCampRankFirst, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TcampRankCampRankFirst));
  TCampRankGetCampRankFirstRsp_descriptor_ = file->message_type(9);
  static const int TCampRankGetCampRankFirstRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetCampRankFirstRsp, rankarr_),
  };
  TCampRankGetCampRankFirstRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCampRankGetCampRankFirstRsp_descriptor_,
      TCampRankGetCampRankFirstRsp::default_instance_,
      TCampRankGetCampRankFirstRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetCampRankFirstRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetCampRankFirstRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCampRankGetCampRankFirstRsp));
  TCampRankHeroRankInfo_descriptor_ = file->message_type(10);
  static const int TCampRankHeroRankInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankInfo, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankInfo, rankidx_),
  };
  TCampRankHeroRankInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCampRankHeroRankInfo_descriptor_,
      TCampRankHeroRankInfo::default_instance_,
      TCampRankHeroRankInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankHeroRankInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCampRankHeroRankInfo));
  TCampRankGetSelfRankInfoRsp_descriptor_ = file->message_type(11);
  static const int TCampRankGetSelfRankInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetSelfRankInfoRsp, herorankarr_),
  };
  TCampRankGetSelfRankInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCampRankGetSelfRankInfoRsp_descriptor_,
      TCampRankGetSelfRankInfoRsp::default_instance_,
      TCampRankGetSelfRankInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetSelfRankInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankGetSelfRankInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCampRankGetSelfRankInfoRsp));
  TCampRankSelfRankInfoPush_descriptor_ = file->message_type(12);
  static const int TCampRankSelfRankInfoPush_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankSelfRankInfoPush, herorankarr_),
  };
  TCampRankSelfRankInfoPush_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCampRankSelfRankInfoPush_descriptor_,
      TCampRankSelfRankInfoPush::default_instance_,
      TCampRankSelfRankInfoPush_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankSelfRankInfoPush, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCampRankSelfRankInfoPush, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCampRankSelfRankInfoPush));
  ECampRankType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fCampRank_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCampRankRankItem_descriptor_, &TCampRankRankItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCampRankHeroRankItem_descriptor_, &TCampRankHeroRankItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCampRankGetCampRankReq_descriptor_, &TCampRankGetCampRankReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCampRankGetCampRankRsp_descriptor_, &TCampRankGetCampRankRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCampRankGetHeroRankReq_descriptor_, &TCampRankGetHeroRankReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCampRankGetHeroRankRsp_descriptor_, &TCampRankGetHeroRankRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCampRankGetHeroAppearReq_descriptor_, &TCampRankGetHeroAppearReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCampRankGetHeroAppearRsp_descriptor_, &TCampRankGetHeroAppearRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TcampRankCampRankFirst_descriptor_, &TcampRankCampRankFirst::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCampRankGetCampRankFirstRsp_descriptor_, &TCampRankGetCampRankFirstRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCampRankHeroRankInfo_descriptor_, &TCampRankHeroRankInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCampRankGetSelfRankInfoRsp_descriptor_, &TCampRankGetSelfRankInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCampRankSelfRankInfoPush_descriptor_, &TCampRankSelfRankInfoPush::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fCampRank_2eproto() {
  delete TCampRankRankItem::default_instance_;
  delete TCampRankRankItem_reflection_;
  delete TCampRankHeroRankItem::default_instance_;
  delete TCampRankHeroRankItem_reflection_;
  delete TCampRankGetCampRankReq::default_instance_;
  delete TCampRankGetCampRankReq_reflection_;
  delete TCampRankGetCampRankRsp::default_instance_;
  delete TCampRankGetCampRankRsp_reflection_;
  delete TCampRankGetHeroRankReq::default_instance_;
  delete TCampRankGetHeroRankReq_reflection_;
  delete TCampRankGetHeroRankRsp::default_instance_;
  delete TCampRankGetHeroRankRsp_reflection_;
  delete TCampRankGetHeroAppearReq::default_instance_;
  delete TCampRankGetHeroAppearReq_reflection_;
  delete TCampRankGetHeroAppearRsp::default_instance_;
  delete TCampRankGetHeroAppearRsp_reflection_;
  delete TcampRankCampRankFirst::default_instance_;
  delete TcampRankCampRankFirst_reflection_;
  delete TCampRankGetCampRankFirstRsp::default_instance_;
  delete TCampRankGetCampRankFirstRsp_reflection_;
  delete TCampRankHeroRankInfo::default_instance_;
  delete TCampRankHeroRankInfo_reflection_;
  delete TCampRankGetSelfRankInfoRsp::default_instance_;
  delete TCampRankGetSelfRankInfoRsp_reflection_;
  delete TCampRankSelfRankInfoPush::default_instance_;
  delete TCampRankSelfRankInfoPush_reflection_;
}

void protobuf_AddDesc_net_2fCampRank_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022net/CampRank.proto\022\002pb\032\016net/User.proto"
    "\"b\n\021TCampRankRankItem\022%\n\010UserInfo\030\001 \001(\0132"
    "\023.pb.TUserSimpleInfo\022\022\n\nFightForce\030\002 \001(\004"
    "\022\022\n\nChangeTime\030\003 \001(\004\"\276\001\n\025TCampRankHeroRa"
    "nkItem\022%\n\010UserInfo\030\001 \001(\0132\023.pb.TUserSimpl"
    "eInfo\022\022\n\nFightForce\030\002 \001(\004\022\022\n\nChangeTime\030"
    "\003 \001(\004\022\014\n\004Htid\030\004 \001(\r\022\016\n\006HeroLv\030\005 \001(\r\022\022\n\nH"
    "eroStarLv\030\006 \001(\r\022\021\n\tHeroAdvLv\030\007 \001(\r\022\021\n\tHe"
    "roTitle\030\010 \001(\r\"]\n\027TCampRankGetCampRankReq"
    "\022#\n\010CampType\030\001 \001(\0162\021.pb.ECampRankType\022\016\n"
    "\006Offset\030\002 \001(\005\022\r\n\005Limit\030\003 \001(\005\"Q\n\027TCampRan"
    "kGetCampRankRsp\022&\n\007RankArr\030\001 \003(\0132\025.pb.TC"
    "ampRankRankItem\022\016\n\006MyRank\030\002 \001(\005\"M\n\027TCamp"
    "RankGetHeroRankReq\022\023\n\013HeroModelId\030\001 \001(\005\022"
    "\016\n\006Offset\030\002 \001(\005\022\r\n\005Limit\030\003 \001(\005\"U\n\027TCampR"
    "ankGetHeroRankRsp\022*\n\007RankArr\030\001 \003(\0132\031.pb."
    "TCampRankHeroRankItem\022\016\n\006MyRank\030\002 \001(\005\"@\n"
    "\031TCampRankGetHeroAppearReq\022#\n\010CampType\030\001"
    " \001(\0162\021.pb.ECampRankType\"T\n\031TCampRankGetH"
    "eroAppearRsp\022#\n\010CampType\030\001 \001(\0162\021.pb.ECam"
    "pRankType\022\022\n\nModelIdArr\030\002 \003(\r\"f\n\026TcampRa"
    "nkCampRankFirst\022#\n\010CampType\030\001 \001(\0162\021.pb.E"
    "CampRankType\022\'\n\010RankInfo\030\002 \001(\0132\025.pb.TCam"
    "pRankRankItem\"K\n\034TCampRankGetCampRankFir"
    "stRsp\022+\n\007RankArr\030\001 \003(\0132\032.pb.TcampRankCam"
    "pRankFirst\"5\n\025TCampRankHeroRankInfo\022\013\n\003h"
    "id\030\001 \001(\r\022\017\n\007RankIdx\030\002 \001(\005\"M\n\033TCampRankGe"
    "tSelfRankInfoRsp\022.\n\013HeroRankArr\030\001 \003(\0132\031."
    "pb.TCampRankHeroRankInfo\"K\n\031TCampRankSel"
    "fRankInfoPush\022.\n\013HeroRankArr\030\001 \003(\0132\031.pb."
    "TCampRankHeroRankInfo*m\n\rECampRankType\022\021"
    "\n\rECampRank_Wei\020\001\022\021\n\rECampRank_Shu\020\002\022\020\n\014"
    "ECampRank_Wu\020\003\022\021\n\rECampRank_Qun\020\004\022\021\n\rEca"
    "mpRank_Mix\020\006", 1332);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/CampRank.proto", &protobuf_RegisterTypes);
  TCampRankRankItem::default_instance_ = new TCampRankRankItem();
  TCampRankHeroRankItem::default_instance_ = new TCampRankHeroRankItem();
  TCampRankGetCampRankReq::default_instance_ = new TCampRankGetCampRankReq();
  TCampRankGetCampRankRsp::default_instance_ = new TCampRankGetCampRankRsp();
  TCampRankGetHeroRankReq::default_instance_ = new TCampRankGetHeroRankReq();
  TCampRankGetHeroRankRsp::default_instance_ = new TCampRankGetHeroRankRsp();
  TCampRankGetHeroAppearReq::default_instance_ = new TCampRankGetHeroAppearReq();
  TCampRankGetHeroAppearRsp::default_instance_ = new TCampRankGetHeroAppearRsp();
  TcampRankCampRankFirst::default_instance_ = new TcampRankCampRankFirst();
  TCampRankGetCampRankFirstRsp::default_instance_ = new TCampRankGetCampRankFirstRsp();
  TCampRankHeroRankInfo::default_instance_ = new TCampRankHeroRankInfo();
  TCampRankGetSelfRankInfoRsp::default_instance_ = new TCampRankGetSelfRankInfoRsp();
  TCampRankSelfRankInfoPush::default_instance_ = new TCampRankSelfRankInfoPush();
  TCampRankRankItem::default_instance_->InitAsDefaultInstance();
  TCampRankHeroRankItem::default_instance_->InitAsDefaultInstance();
  TCampRankGetCampRankReq::default_instance_->InitAsDefaultInstance();
  TCampRankGetCampRankRsp::default_instance_->InitAsDefaultInstance();
  TCampRankGetHeroRankReq::default_instance_->InitAsDefaultInstance();
  TCampRankGetHeroRankRsp::default_instance_->InitAsDefaultInstance();
  TCampRankGetHeroAppearReq::default_instance_->InitAsDefaultInstance();
  TCampRankGetHeroAppearRsp::default_instance_->InitAsDefaultInstance();
  TcampRankCampRankFirst::default_instance_->InitAsDefaultInstance();
  TCampRankGetCampRankFirstRsp::default_instance_->InitAsDefaultInstance();
  TCampRankHeroRankInfo::default_instance_->InitAsDefaultInstance();
  TCampRankGetSelfRankInfoRsp::default_instance_->InitAsDefaultInstance();
  TCampRankSelfRankInfoPush::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fCampRank_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fCampRank_2eproto {
  StaticDescriptorInitializer_net_2fCampRank_2eproto() {
    protobuf_AddDesc_net_2fCampRank_2eproto();
  }
} static_descriptor_initializer_net_2fCampRank_2eproto_;
const ::google::protobuf::EnumDescriptor* ECampRankType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ECampRankType_descriptor_;
}
bool ECampRankType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TCampRankRankItem::kUserInfoFieldNumber;
const int TCampRankRankItem::kFightForceFieldNumber;
const int TCampRankRankItem::kChangeTimeFieldNumber;
#endif  // !_MSC_VER

TCampRankRankItem::TCampRankRankItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCampRankRankItem)
}

void TCampRankRankItem::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TCampRankRankItem::TCampRankRankItem(const TCampRankRankItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCampRankRankItem)
}

void TCampRankRankItem::SharedCtor() {
  _cached_size_ = 0;
  userinfo_ = NULL;
  fightforce_ = GOOGLE_ULONGLONG(0);
  changetime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCampRankRankItem::~TCampRankRankItem() {
  // @@protoc_insertion_point(destructor:pb.TCampRankRankItem)
  SharedDtor();
}

void TCampRankRankItem::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void TCampRankRankItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCampRankRankItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCampRankRankItem_descriptor_;
}

const TCampRankRankItem& TCampRankRankItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCampRank_2eproto();
  return *default_instance_;
}

TCampRankRankItem* TCampRankRankItem::default_instance_ = NULL;

TCampRankRankItem* TCampRankRankItem::New() const {
  return new TCampRankRankItem;
}

void TCampRankRankItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TCampRankRankItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(fightforce_, changetime_);
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCampRankRankItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCampRankRankItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TUserSimpleInfo UserInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FightForce;
        break;
      }

      // optional uint64 FightForce = 2;
      case 2: {
        if (tag == 16) {
         parse_FightForce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fightforce_)));
          set_has_fightforce();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ChangeTime;
        break;
      }

      // optional uint64 ChangeTime = 3;
      case 3: {
        if (tag == 24) {
         parse_ChangeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &changetime_)));
          set_has_changetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCampRankRankItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCampRankRankItem)
  return false;
#undef DO_
}

void TCampRankRankItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCampRankRankItem)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(), output);
  }

  // optional uint64 FightForce = 2;
  if (has_fightforce()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->fightforce(), output);
  }

  // optional uint64 ChangeTime = 3;
  if (has_changetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->changetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCampRankRankItem)
}

::google::protobuf::uint8* TCampRankRankItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCampRankRankItem)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userinfo(), target);
  }

  // optional uint64 FightForce = 2;
  if (has_fightforce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->fightforce(), target);
  }

  // optional uint64 ChangeTime = 3;
  if (has_changetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->changetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCampRankRankItem)
  return target;
}

int TCampRankRankItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TUserSimpleInfo UserInfo = 1;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }

    // optional uint64 FightForce = 2;
    if (has_fightforce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fightforce());
    }

    // optional uint64 ChangeTime = 3;
    if (has_changetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->changetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCampRankRankItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCampRankRankItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCampRankRankItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCampRankRankItem::MergeFrom(const TCampRankRankItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userinfo()) {
      mutable_userinfo()->::pb::TUserSimpleInfo::MergeFrom(from.userinfo());
    }
    if (from.has_fightforce()) {
      set_fightforce(from.fightforce());
    }
    if (from.has_changetime()) {
      set_changetime(from.changetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCampRankRankItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCampRankRankItem::CopyFrom(const TCampRankRankItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCampRankRankItem::IsInitialized() const {

  return true;
}

void TCampRankRankItem::Swap(TCampRankRankItem* other) {
  if (other != this) {
    std::swap(userinfo_, other->userinfo_);
    std::swap(fightforce_, other->fightforce_);
    std::swap(changetime_, other->changetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCampRankRankItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCampRankRankItem_descriptor_;
  metadata.reflection = TCampRankRankItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCampRankHeroRankItem::kUserInfoFieldNumber;
const int TCampRankHeroRankItem::kFightForceFieldNumber;
const int TCampRankHeroRankItem::kChangeTimeFieldNumber;
const int TCampRankHeroRankItem::kHtidFieldNumber;
const int TCampRankHeroRankItem::kHeroLvFieldNumber;
const int TCampRankHeroRankItem::kHeroStarLvFieldNumber;
const int TCampRankHeroRankItem::kHeroAdvLvFieldNumber;
const int TCampRankHeroRankItem::kHeroTitleFieldNumber;
#endif  // !_MSC_VER

TCampRankHeroRankItem::TCampRankHeroRankItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCampRankHeroRankItem)
}

void TCampRankHeroRankItem::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TCampRankHeroRankItem::TCampRankHeroRankItem(const TCampRankHeroRankItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCampRankHeroRankItem)
}

void TCampRankHeroRankItem::SharedCtor() {
  _cached_size_ = 0;
  userinfo_ = NULL;
  fightforce_ = GOOGLE_ULONGLONG(0);
  changetime_ = GOOGLE_ULONGLONG(0);
  htid_ = 0u;
  herolv_ = 0u;
  herostarlv_ = 0u;
  heroadvlv_ = 0u;
  herotitle_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCampRankHeroRankItem::~TCampRankHeroRankItem() {
  // @@protoc_insertion_point(destructor:pb.TCampRankHeroRankItem)
  SharedDtor();
}

void TCampRankHeroRankItem::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void TCampRankHeroRankItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCampRankHeroRankItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCampRankHeroRankItem_descriptor_;
}

const TCampRankHeroRankItem& TCampRankHeroRankItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCampRank_2eproto();
  return *default_instance_;
}

TCampRankHeroRankItem* TCampRankHeroRankItem::default_instance_ = NULL;

TCampRankHeroRankItem* TCampRankHeroRankItem::New() const {
  return new TCampRankHeroRankItem;
}

void TCampRankHeroRankItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TCampRankHeroRankItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(fightforce_, herotitle_);
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCampRankHeroRankItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCampRankHeroRankItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TUserSimpleInfo UserInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FightForce;
        break;
      }

      // optional uint64 FightForce = 2;
      case 2: {
        if (tag == 16) {
         parse_FightForce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fightforce_)));
          set_has_fightforce();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ChangeTime;
        break;
      }

      // optional uint64 ChangeTime = 3;
      case 3: {
        if (tag == 24) {
         parse_ChangeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &changetime_)));
          set_has_changetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Htid;
        break;
      }

      // optional uint32 Htid = 4;
      case 4: {
        if (tag == 32) {
         parse_Htid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &htid_)));
          set_has_htid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_HeroLv;
        break;
      }

      // optional uint32 HeroLv = 5;
      case 5: {
        if (tag == 40) {
         parse_HeroLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herolv_)));
          set_has_herolv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_HeroStarLv;
        break;
      }

      // optional uint32 HeroStarLv = 6;
      case 6: {
        if (tag == 48) {
         parse_HeroStarLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herostarlv_)));
          set_has_herostarlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_HeroAdvLv;
        break;
      }

      // optional uint32 HeroAdvLv = 7;
      case 7: {
        if (tag == 56) {
         parse_HeroAdvLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroadvlv_)));
          set_has_heroadvlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_HeroTitle;
        break;
      }

      // optional uint32 HeroTitle = 8;
      case 8: {
        if (tag == 64) {
         parse_HeroTitle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herotitle_)));
          set_has_herotitle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCampRankHeroRankItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCampRankHeroRankItem)
  return false;
#undef DO_
}

void TCampRankHeroRankItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCampRankHeroRankItem)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(), output);
  }

  // optional uint64 FightForce = 2;
  if (has_fightforce()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->fightforce(), output);
  }

  // optional uint64 ChangeTime = 3;
  if (has_changetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->changetime(), output);
  }

  // optional uint32 Htid = 4;
  if (has_htid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->htid(), output);
  }

  // optional uint32 HeroLv = 5;
  if (has_herolv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->herolv(), output);
  }

  // optional uint32 HeroStarLv = 6;
  if (has_herostarlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->herostarlv(), output);
  }

  // optional uint32 HeroAdvLv = 7;
  if (has_heroadvlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->heroadvlv(), output);
  }

  // optional uint32 HeroTitle = 8;
  if (has_herotitle()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->herotitle(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCampRankHeroRankItem)
}

::google::protobuf::uint8* TCampRankHeroRankItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCampRankHeroRankItem)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userinfo(), target);
  }

  // optional uint64 FightForce = 2;
  if (has_fightforce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->fightforce(), target);
  }

  // optional uint64 ChangeTime = 3;
  if (has_changetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->changetime(), target);
  }

  // optional uint32 Htid = 4;
  if (has_htid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->htid(), target);
  }

  // optional uint32 HeroLv = 5;
  if (has_herolv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->herolv(), target);
  }

  // optional uint32 HeroStarLv = 6;
  if (has_herostarlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->herostarlv(), target);
  }

  // optional uint32 HeroAdvLv = 7;
  if (has_heroadvlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->heroadvlv(), target);
  }

  // optional uint32 HeroTitle = 8;
  if (has_herotitle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->herotitle(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCampRankHeroRankItem)
  return target;
}

int TCampRankHeroRankItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TUserSimpleInfo UserInfo = 1;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }

    // optional uint64 FightForce = 2;
    if (has_fightforce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fightforce());
    }

    // optional uint64 ChangeTime = 3;
    if (has_changetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->changetime());
    }

    // optional uint32 Htid = 4;
    if (has_htid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->htid());
    }

    // optional uint32 HeroLv = 5;
    if (has_herolv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->herolv());
    }

    // optional uint32 HeroStarLv = 6;
    if (has_herostarlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->herostarlv());
    }

    // optional uint32 HeroAdvLv = 7;
    if (has_heroadvlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroadvlv());
    }

    // optional uint32 HeroTitle = 8;
    if (has_herotitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->herotitle());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCampRankHeroRankItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCampRankHeroRankItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCampRankHeroRankItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCampRankHeroRankItem::MergeFrom(const TCampRankHeroRankItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userinfo()) {
      mutable_userinfo()->::pb::TUserSimpleInfo::MergeFrom(from.userinfo());
    }
    if (from.has_fightforce()) {
      set_fightforce(from.fightforce());
    }
    if (from.has_changetime()) {
      set_changetime(from.changetime());
    }
    if (from.has_htid()) {
      set_htid(from.htid());
    }
    if (from.has_herolv()) {
      set_herolv(from.herolv());
    }
    if (from.has_herostarlv()) {
      set_herostarlv(from.herostarlv());
    }
    if (from.has_heroadvlv()) {
      set_heroadvlv(from.heroadvlv());
    }
    if (from.has_herotitle()) {
      set_herotitle(from.herotitle());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCampRankHeroRankItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCampRankHeroRankItem::CopyFrom(const TCampRankHeroRankItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCampRankHeroRankItem::IsInitialized() const {

  return true;
}

void TCampRankHeroRankItem::Swap(TCampRankHeroRankItem* other) {
  if (other != this) {
    std::swap(userinfo_, other->userinfo_);
    std::swap(fightforce_, other->fightforce_);
    std::swap(changetime_, other->changetime_);
    std::swap(htid_, other->htid_);
    std::swap(herolv_, other->herolv_);
    std::swap(herostarlv_, other->herostarlv_);
    std::swap(heroadvlv_, other->heroadvlv_);
    std::swap(herotitle_, other->herotitle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCampRankHeroRankItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCampRankHeroRankItem_descriptor_;
  metadata.reflection = TCampRankHeroRankItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCampRankGetCampRankReq::kCampTypeFieldNumber;
const int TCampRankGetCampRankReq::kOffsetFieldNumber;
const int TCampRankGetCampRankReq::kLimitFieldNumber;
#endif  // !_MSC_VER

TCampRankGetCampRankReq::TCampRankGetCampRankReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCampRankGetCampRankReq)
}

void TCampRankGetCampRankReq::InitAsDefaultInstance() {
}

TCampRankGetCampRankReq::TCampRankGetCampRankReq(const TCampRankGetCampRankReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCampRankGetCampRankReq)
}

void TCampRankGetCampRankReq::SharedCtor() {
  _cached_size_ = 0;
  camptype_ = 1;
  offset_ = 0;
  limit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCampRankGetCampRankReq::~TCampRankGetCampRankReq() {
  // @@protoc_insertion_point(destructor:pb.TCampRankGetCampRankReq)
  SharedDtor();
}

void TCampRankGetCampRankReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCampRankGetCampRankReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCampRankGetCampRankReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCampRankGetCampRankReq_descriptor_;
}

const TCampRankGetCampRankReq& TCampRankGetCampRankReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCampRank_2eproto();
  return *default_instance_;
}

TCampRankGetCampRankReq* TCampRankGetCampRankReq::default_instance_ = NULL;

TCampRankGetCampRankReq* TCampRankGetCampRankReq::New() const {
  return new TCampRankGetCampRankReq;
}

void TCampRankGetCampRankReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TCampRankGetCampRankReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(offset_, limit_);
    camptype_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCampRankGetCampRankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCampRankGetCampRankReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.ECampRankType CampType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ECampRankType_IsValid(value)) {
            set_camptype(static_cast< ::pb::ECampRankType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Offset;
        break;
      }

      // optional int32 Offset = 2;
      case 2: {
        if (tag == 16) {
         parse_Offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Limit;
        break;
      }

      // optional int32 Limit = 3;
      case 3: {
        if (tag == 24) {
         parse_Limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCampRankGetCampRankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCampRankGetCampRankReq)
  return false;
#undef DO_
}

void TCampRankGetCampRankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCampRankGetCampRankReq)
  // optional .pb.ECampRankType CampType = 1;
  if (has_camptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->camptype(), output);
  }

  // optional int32 Offset = 2;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->offset(), output);
  }

  // optional int32 Limit = 3;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCampRankGetCampRankReq)
}

::google::protobuf::uint8* TCampRankGetCampRankReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCampRankGetCampRankReq)
  // optional .pb.ECampRankType CampType = 1;
  if (has_camptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->camptype(), target);
  }

  // optional int32 Offset = 2;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->offset(), target);
  }

  // optional int32 Limit = 3;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCampRankGetCampRankReq)
  return target;
}

int TCampRankGetCampRankReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.ECampRankType CampType = 1;
    if (has_camptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->camptype());
    }

    // optional int32 Offset = 2;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->offset());
    }

    // optional int32 Limit = 3;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCampRankGetCampRankReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCampRankGetCampRankReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCampRankGetCampRankReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCampRankGetCampRankReq::MergeFrom(const TCampRankGetCampRankReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_camptype()) {
      set_camptype(from.camptype());
    }
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCampRankGetCampRankReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCampRankGetCampRankReq::CopyFrom(const TCampRankGetCampRankReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCampRankGetCampRankReq::IsInitialized() const {

  return true;
}

void TCampRankGetCampRankReq::Swap(TCampRankGetCampRankReq* other) {
  if (other != this) {
    std::swap(camptype_, other->camptype_);
    std::swap(offset_, other->offset_);
    std::swap(limit_, other->limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCampRankGetCampRankReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCampRankGetCampRankReq_descriptor_;
  metadata.reflection = TCampRankGetCampRankReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCampRankGetCampRankRsp::kRankArrFieldNumber;
const int TCampRankGetCampRankRsp::kMyRankFieldNumber;
#endif  // !_MSC_VER

TCampRankGetCampRankRsp::TCampRankGetCampRankRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCampRankGetCampRankRsp)
}

void TCampRankGetCampRankRsp::InitAsDefaultInstance() {
}

TCampRankGetCampRankRsp::TCampRankGetCampRankRsp(const TCampRankGetCampRankRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCampRankGetCampRankRsp)
}

void TCampRankGetCampRankRsp::SharedCtor() {
  _cached_size_ = 0;
  myrank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCampRankGetCampRankRsp::~TCampRankGetCampRankRsp() {
  // @@protoc_insertion_point(destructor:pb.TCampRankGetCampRankRsp)
  SharedDtor();
}

void TCampRankGetCampRankRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCampRankGetCampRankRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCampRankGetCampRankRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCampRankGetCampRankRsp_descriptor_;
}

const TCampRankGetCampRankRsp& TCampRankGetCampRankRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCampRank_2eproto();
  return *default_instance_;
}

TCampRankGetCampRankRsp* TCampRankGetCampRankRsp::default_instance_ = NULL;

TCampRankGetCampRankRsp* TCampRankGetCampRankRsp::New() const {
  return new TCampRankGetCampRankRsp;
}

void TCampRankGetCampRankRsp::Clear() {
  myrank_ = 0;
  rankarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCampRankGetCampRankRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCampRankGetCampRankRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCampRankRankItem RankArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RankArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rankarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RankArr;
        if (input->ExpectTag(16)) goto parse_MyRank;
        break;
      }

      // optional int32 MyRank = 2;
      case 2: {
        if (tag == 16) {
         parse_MyRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myrank_)));
          set_has_myrank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCampRankGetCampRankRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCampRankGetCampRankRsp)
  return false;
#undef DO_
}

void TCampRankGetCampRankRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCampRankGetCampRankRsp)
  // repeated .pb.TCampRankRankItem RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rankarr(i), output);
  }

  // optional int32 MyRank = 2;
  if (has_myrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->myrank(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCampRankGetCampRankRsp)
}

::google::protobuf::uint8* TCampRankGetCampRankRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCampRankGetCampRankRsp)
  // repeated .pb.TCampRankRankItem RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rankarr(i), target);
  }

  // optional int32 MyRank = 2;
  if (has_myrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->myrank(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCampRankGetCampRankRsp)
  return target;
}

int TCampRankGetCampRankRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 MyRank = 2;
    if (has_myrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->myrank());
    }

  }
  // repeated .pb.TCampRankRankItem RankArr = 1;
  total_size += 1 * this->rankarr_size();
  for (int i = 0; i < this->rankarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rankarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCampRankGetCampRankRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCampRankGetCampRankRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCampRankGetCampRankRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCampRankGetCampRankRsp::MergeFrom(const TCampRankGetCampRankRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rankarr_.MergeFrom(from.rankarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_myrank()) {
      set_myrank(from.myrank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCampRankGetCampRankRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCampRankGetCampRankRsp::CopyFrom(const TCampRankGetCampRankRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCampRankGetCampRankRsp::IsInitialized() const {

  return true;
}

void TCampRankGetCampRankRsp::Swap(TCampRankGetCampRankRsp* other) {
  if (other != this) {
    rankarr_.Swap(&other->rankarr_);
    std::swap(myrank_, other->myrank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCampRankGetCampRankRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCampRankGetCampRankRsp_descriptor_;
  metadata.reflection = TCampRankGetCampRankRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCampRankGetHeroRankReq::kHeroModelIdFieldNumber;
const int TCampRankGetHeroRankReq::kOffsetFieldNumber;
const int TCampRankGetHeroRankReq::kLimitFieldNumber;
#endif  // !_MSC_VER

TCampRankGetHeroRankReq::TCampRankGetHeroRankReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCampRankGetHeroRankReq)
}

void TCampRankGetHeroRankReq::InitAsDefaultInstance() {
}

TCampRankGetHeroRankReq::TCampRankGetHeroRankReq(const TCampRankGetHeroRankReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCampRankGetHeroRankReq)
}

void TCampRankGetHeroRankReq::SharedCtor() {
  _cached_size_ = 0;
  heromodelid_ = 0;
  offset_ = 0;
  limit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCampRankGetHeroRankReq::~TCampRankGetHeroRankReq() {
  // @@protoc_insertion_point(destructor:pb.TCampRankGetHeroRankReq)
  SharedDtor();
}

void TCampRankGetHeroRankReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCampRankGetHeroRankReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCampRankGetHeroRankReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCampRankGetHeroRankReq_descriptor_;
}

const TCampRankGetHeroRankReq& TCampRankGetHeroRankReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCampRank_2eproto();
  return *default_instance_;
}

TCampRankGetHeroRankReq* TCampRankGetHeroRankReq::default_instance_ = NULL;

TCampRankGetHeroRankReq* TCampRankGetHeroRankReq::New() const {
  return new TCampRankGetHeroRankReq;
}

void TCampRankGetHeroRankReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TCampRankGetHeroRankReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(heromodelid_, limit_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCampRankGetHeroRankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCampRankGetHeroRankReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 HeroModelId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heromodelid_)));
          set_has_heromodelid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Offset;
        break;
      }

      // optional int32 Offset = 2;
      case 2: {
        if (tag == 16) {
         parse_Offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Limit;
        break;
      }

      // optional int32 Limit = 3;
      case 3: {
        if (tag == 24) {
         parse_Limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCampRankGetHeroRankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCampRankGetHeroRankReq)
  return false;
#undef DO_
}

void TCampRankGetHeroRankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCampRankGetHeroRankReq)
  // optional int32 HeroModelId = 1;
  if (has_heromodelid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->heromodelid(), output);
  }

  // optional int32 Offset = 2;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->offset(), output);
  }

  // optional int32 Limit = 3;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCampRankGetHeroRankReq)
}

::google::protobuf::uint8* TCampRankGetHeroRankReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCampRankGetHeroRankReq)
  // optional int32 HeroModelId = 1;
  if (has_heromodelid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->heromodelid(), target);
  }

  // optional int32 Offset = 2;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->offset(), target);
  }

  // optional int32 Limit = 3;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCampRankGetHeroRankReq)
  return target;
}

int TCampRankGetHeroRankReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 HeroModelId = 1;
    if (has_heromodelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heromodelid());
    }

    // optional int32 Offset = 2;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->offset());
    }

    // optional int32 Limit = 3;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCampRankGetHeroRankReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCampRankGetHeroRankReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCampRankGetHeroRankReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCampRankGetHeroRankReq::MergeFrom(const TCampRankGetHeroRankReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heromodelid()) {
      set_heromodelid(from.heromodelid());
    }
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCampRankGetHeroRankReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCampRankGetHeroRankReq::CopyFrom(const TCampRankGetHeroRankReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCampRankGetHeroRankReq::IsInitialized() const {

  return true;
}

void TCampRankGetHeroRankReq::Swap(TCampRankGetHeroRankReq* other) {
  if (other != this) {
    std::swap(heromodelid_, other->heromodelid_);
    std::swap(offset_, other->offset_);
    std::swap(limit_, other->limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCampRankGetHeroRankReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCampRankGetHeroRankReq_descriptor_;
  metadata.reflection = TCampRankGetHeroRankReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCampRankGetHeroRankRsp::kRankArrFieldNumber;
const int TCampRankGetHeroRankRsp::kMyRankFieldNumber;
#endif  // !_MSC_VER

TCampRankGetHeroRankRsp::TCampRankGetHeroRankRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCampRankGetHeroRankRsp)
}

void TCampRankGetHeroRankRsp::InitAsDefaultInstance() {
}

TCampRankGetHeroRankRsp::TCampRankGetHeroRankRsp(const TCampRankGetHeroRankRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCampRankGetHeroRankRsp)
}

void TCampRankGetHeroRankRsp::SharedCtor() {
  _cached_size_ = 0;
  myrank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCampRankGetHeroRankRsp::~TCampRankGetHeroRankRsp() {
  // @@protoc_insertion_point(destructor:pb.TCampRankGetHeroRankRsp)
  SharedDtor();
}

void TCampRankGetHeroRankRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCampRankGetHeroRankRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCampRankGetHeroRankRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCampRankGetHeroRankRsp_descriptor_;
}

const TCampRankGetHeroRankRsp& TCampRankGetHeroRankRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCampRank_2eproto();
  return *default_instance_;
}

TCampRankGetHeroRankRsp* TCampRankGetHeroRankRsp::default_instance_ = NULL;

TCampRankGetHeroRankRsp* TCampRankGetHeroRankRsp::New() const {
  return new TCampRankGetHeroRankRsp;
}

void TCampRankGetHeroRankRsp::Clear() {
  myrank_ = 0;
  rankarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCampRankGetHeroRankRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCampRankGetHeroRankRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCampRankHeroRankItem RankArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RankArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rankarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RankArr;
        if (input->ExpectTag(16)) goto parse_MyRank;
        break;
      }

      // optional int32 MyRank = 2;
      case 2: {
        if (tag == 16) {
         parse_MyRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myrank_)));
          set_has_myrank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCampRankGetHeroRankRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCampRankGetHeroRankRsp)
  return false;
#undef DO_
}

void TCampRankGetHeroRankRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCampRankGetHeroRankRsp)
  // repeated .pb.TCampRankHeroRankItem RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rankarr(i), output);
  }

  // optional int32 MyRank = 2;
  if (has_myrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->myrank(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCampRankGetHeroRankRsp)
}

::google::protobuf::uint8* TCampRankGetHeroRankRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCampRankGetHeroRankRsp)
  // repeated .pb.TCampRankHeroRankItem RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rankarr(i), target);
  }

  // optional int32 MyRank = 2;
  if (has_myrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->myrank(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCampRankGetHeroRankRsp)
  return target;
}

int TCampRankGetHeroRankRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 MyRank = 2;
    if (has_myrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->myrank());
    }

  }
  // repeated .pb.TCampRankHeroRankItem RankArr = 1;
  total_size += 1 * this->rankarr_size();
  for (int i = 0; i < this->rankarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rankarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCampRankGetHeroRankRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCampRankGetHeroRankRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCampRankGetHeroRankRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCampRankGetHeroRankRsp::MergeFrom(const TCampRankGetHeroRankRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rankarr_.MergeFrom(from.rankarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_myrank()) {
      set_myrank(from.myrank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCampRankGetHeroRankRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCampRankGetHeroRankRsp::CopyFrom(const TCampRankGetHeroRankRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCampRankGetHeroRankRsp::IsInitialized() const {

  return true;
}

void TCampRankGetHeroRankRsp::Swap(TCampRankGetHeroRankRsp* other) {
  if (other != this) {
    rankarr_.Swap(&other->rankarr_);
    std::swap(myrank_, other->myrank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCampRankGetHeroRankRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCampRankGetHeroRankRsp_descriptor_;
  metadata.reflection = TCampRankGetHeroRankRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCampRankGetHeroAppearReq::kCampTypeFieldNumber;
#endif  // !_MSC_VER

TCampRankGetHeroAppearReq::TCampRankGetHeroAppearReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCampRankGetHeroAppearReq)
}

void TCampRankGetHeroAppearReq::InitAsDefaultInstance() {
}

TCampRankGetHeroAppearReq::TCampRankGetHeroAppearReq(const TCampRankGetHeroAppearReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCampRankGetHeroAppearReq)
}

void TCampRankGetHeroAppearReq::SharedCtor() {
  _cached_size_ = 0;
  camptype_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCampRankGetHeroAppearReq::~TCampRankGetHeroAppearReq() {
  // @@protoc_insertion_point(destructor:pb.TCampRankGetHeroAppearReq)
  SharedDtor();
}

void TCampRankGetHeroAppearReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCampRankGetHeroAppearReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCampRankGetHeroAppearReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCampRankGetHeroAppearReq_descriptor_;
}

const TCampRankGetHeroAppearReq& TCampRankGetHeroAppearReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCampRank_2eproto();
  return *default_instance_;
}

TCampRankGetHeroAppearReq* TCampRankGetHeroAppearReq::default_instance_ = NULL;

TCampRankGetHeroAppearReq* TCampRankGetHeroAppearReq::New() const {
  return new TCampRankGetHeroAppearReq;
}

void TCampRankGetHeroAppearReq::Clear() {
  camptype_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCampRankGetHeroAppearReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCampRankGetHeroAppearReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.ECampRankType CampType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ECampRankType_IsValid(value)) {
            set_camptype(static_cast< ::pb::ECampRankType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCampRankGetHeroAppearReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCampRankGetHeroAppearReq)
  return false;
#undef DO_
}

void TCampRankGetHeroAppearReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCampRankGetHeroAppearReq)
  // optional .pb.ECampRankType CampType = 1;
  if (has_camptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->camptype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCampRankGetHeroAppearReq)
}

::google::protobuf::uint8* TCampRankGetHeroAppearReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCampRankGetHeroAppearReq)
  // optional .pb.ECampRankType CampType = 1;
  if (has_camptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->camptype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCampRankGetHeroAppearReq)
  return target;
}

int TCampRankGetHeroAppearReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.ECampRankType CampType = 1;
    if (has_camptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->camptype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCampRankGetHeroAppearReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCampRankGetHeroAppearReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCampRankGetHeroAppearReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCampRankGetHeroAppearReq::MergeFrom(const TCampRankGetHeroAppearReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_camptype()) {
      set_camptype(from.camptype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCampRankGetHeroAppearReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCampRankGetHeroAppearReq::CopyFrom(const TCampRankGetHeroAppearReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCampRankGetHeroAppearReq::IsInitialized() const {

  return true;
}

void TCampRankGetHeroAppearReq::Swap(TCampRankGetHeroAppearReq* other) {
  if (other != this) {
    std::swap(camptype_, other->camptype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCampRankGetHeroAppearReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCampRankGetHeroAppearReq_descriptor_;
  metadata.reflection = TCampRankGetHeroAppearReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCampRankGetHeroAppearRsp::kCampTypeFieldNumber;
const int TCampRankGetHeroAppearRsp::kModelIdArrFieldNumber;
#endif  // !_MSC_VER

TCampRankGetHeroAppearRsp::TCampRankGetHeroAppearRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCampRankGetHeroAppearRsp)
}

void TCampRankGetHeroAppearRsp::InitAsDefaultInstance() {
}

TCampRankGetHeroAppearRsp::TCampRankGetHeroAppearRsp(const TCampRankGetHeroAppearRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCampRankGetHeroAppearRsp)
}

void TCampRankGetHeroAppearRsp::SharedCtor() {
  _cached_size_ = 0;
  camptype_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCampRankGetHeroAppearRsp::~TCampRankGetHeroAppearRsp() {
  // @@protoc_insertion_point(destructor:pb.TCampRankGetHeroAppearRsp)
  SharedDtor();
}

void TCampRankGetHeroAppearRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCampRankGetHeroAppearRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCampRankGetHeroAppearRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCampRankGetHeroAppearRsp_descriptor_;
}

const TCampRankGetHeroAppearRsp& TCampRankGetHeroAppearRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCampRank_2eproto();
  return *default_instance_;
}

TCampRankGetHeroAppearRsp* TCampRankGetHeroAppearRsp::default_instance_ = NULL;

TCampRankGetHeroAppearRsp* TCampRankGetHeroAppearRsp::New() const {
  return new TCampRankGetHeroAppearRsp;
}

void TCampRankGetHeroAppearRsp::Clear() {
  camptype_ = 1;
  modelidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCampRankGetHeroAppearRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCampRankGetHeroAppearRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.ECampRankType CampType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ECampRankType_IsValid(value)) {
            set_camptype(static_cast< ::pb::ECampRankType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ModelIdArr;
        break;
      }

      // repeated uint32 ModelIdArr = 2;
      case 2: {
        if (tag == 16) {
         parse_ModelIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_modelidarr())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_modelidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ModelIdArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCampRankGetHeroAppearRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCampRankGetHeroAppearRsp)
  return false;
#undef DO_
}

void TCampRankGetHeroAppearRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCampRankGetHeroAppearRsp)
  // optional .pb.ECampRankType CampType = 1;
  if (has_camptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->camptype(), output);
  }

  // repeated uint32 ModelIdArr = 2;
  for (int i = 0; i < this->modelidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->modelidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCampRankGetHeroAppearRsp)
}

::google::protobuf::uint8* TCampRankGetHeroAppearRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCampRankGetHeroAppearRsp)
  // optional .pb.ECampRankType CampType = 1;
  if (has_camptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->camptype(), target);
  }

  // repeated uint32 ModelIdArr = 2;
  for (int i = 0; i < this->modelidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->modelidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCampRankGetHeroAppearRsp)
  return target;
}

int TCampRankGetHeroAppearRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.ECampRankType CampType = 1;
    if (has_camptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->camptype());
    }

  }
  // repeated uint32 ModelIdArr = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->modelidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->modelidarr(i));
    }
    total_size += 1 * this->modelidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCampRankGetHeroAppearRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCampRankGetHeroAppearRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCampRankGetHeroAppearRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCampRankGetHeroAppearRsp::MergeFrom(const TCampRankGetHeroAppearRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  modelidarr_.MergeFrom(from.modelidarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_camptype()) {
      set_camptype(from.camptype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCampRankGetHeroAppearRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCampRankGetHeroAppearRsp::CopyFrom(const TCampRankGetHeroAppearRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCampRankGetHeroAppearRsp::IsInitialized() const {

  return true;
}

void TCampRankGetHeroAppearRsp::Swap(TCampRankGetHeroAppearRsp* other) {
  if (other != this) {
    std::swap(camptype_, other->camptype_);
    modelidarr_.Swap(&other->modelidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCampRankGetHeroAppearRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCampRankGetHeroAppearRsp_descriptor_;
  metadata.reflection = TCampRankGetHeroAppearRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TcampRankCampRankFirst::kCampTypeFieldNumber;
const int TcampRankCampRankFirst::kRankInfoFieldNumber;
#endif  // !_MSC_VER

TcampRankCampRankFirst::TcampRankCampRankFirst()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TcampRankCampRankFirst)
}

void TcampRankCampRankFirst::InitAsDefaultInstance() {
  rankinfo_ = const_cast< ::pb::TCampRankRankItem*>(&::pb::TCampRankRankItem::default_instance());
}

TcampRankCampRankFirst::TcampRankCampRankFirst(const TcampRankCampRankFirst& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TcampRankCampRankFirst)
}

void TcampRankCampRankFirst::SharedCtor() {
  _cached_size_ = 0;
  camptype_ = 1;
  rankinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TcampRankCampRankFirst::~TcampRankCampRankFirst() {
  // @@protoc_insertion_point(destructor:pb.TcampRankCampRankFirst)
  SharedDtor();
}

void TcampRankCampRankFirst::SharedDtor() {
  if (this != default_instance_) {
    delete rankinfo_;
  }
}

void TcampRankCampRankFirst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TcampRankCampRankFirst::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TcampRankCampRankFirst_descriptor_;
}

const TcampRankCampRankFirst& TcampRankCampRankFirst::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCampRank_2eproto();
  return *default_instance_;
}

TcampRankCampRankFirst* TcampRankCampRankFirst::default_instance_ = NULL;

TcampRankCampRankFirst* TcampRankCampRankFirst::New() const {
  return new TcampRankCampRankFirst;
}

void TcampRankCampRankFirst::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    camptype_ = 1;
    if (has_rankinfo()) {
      if (rankinfo_ != NULL) rankinfo_->::pb::TCampRankRankItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TcampRankCampRankFirst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TcampRankCampRankFirst)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.ECampRankType CampType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ECampRankType_IsValid(value)) {
            set_camptype(static_cast< ::pb::ECampRankType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RankInfo;
        break;
      }

      // optional .pb.TCampRankRankItem RankInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_RankInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rankinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TcampRankCampRankFirst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TcampRankCampRankFirst)
  return false;
#undef DO_
}

void TcampRankCampRankFirst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TcampRankCampRankFirst)
  // optional .pb.ECampRankType CampType = 1;
  if (has_camptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->camptype(), output);
  }

  // optional .pb.TCampRankRankItem RankInfo = 2;
  if (has_rankinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rankinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TcampRankCampRankFirst)
}

::google::protobuf::uint8* TcampRankCampRankFirst::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TcampRankCampRankFirst)
  // optional .pb.ECampRankType CampType = 1;
  if (has_camptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->camptype(), target);
  }

  // optional .pb.TCampRankRankItem RankInfo = 2;
  if (has_rankinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rankinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TcampRankCampRankFirst)
  return target;
}

int TcampRankCampRankFirst::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.ECampRankType CampType = 1;
    if (has_camptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->camptype());
    }

    // optional .pb.TCampRankRankItem RankInfo = 2;
    if (has_rankinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rankinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TcampRankCampRankFirst::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TcampRankCampRankFirst* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TcampRankCampRankFirst*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TcampRankCampRankFirst::MergeFrom(const TcampRankCampRankFirst& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_camptype()) {
      set_camptype(from.camptype());
    }
    if (from.has_rankinfo()) {
      mutable_rankinfo()->::pb::TCampRankRankItem::MergeFrom(from.rankinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TcampRankCampRankFirst::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TcampRankCampRankFirst::CopyFrom(const TcampRankCampRankFirst& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TcampRankCampRankFirst::IsInitialized() const {

  return true;
}

void TcampRankCampRankFirst::Swap(TcampRankCampRankFirst* other) {
  if (other != this) {
    std::swap(camptype_, other->camptype_);
    std::swap(rankinfo_, other->rankinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TcampRankCampRankFirst::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TcampRankCampRankFirst_descriptor_;
  metadata.reflection = TcampRankCampRankFirst_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCampRankGetCampRankFirstRsp::kRankArrFieldNumber;
#endif  // !_MSC_VER

TCampRankGetCampRankFirstRsp::TCampRankGetCampRankFirstRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCampRankGetCampRankFirstRsp)
}

void TCampRankGetCampRankFirstRsp::InitAsDefaultInstance() {
}

TCampRankGetCampRankFirstRsp::TCampRankGetCampRankFirstRsp(const TCampRankGetCampRankFirstRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCampRankGetCampRankFirstRsp)
}

void TCampRankGetCampRankFirstRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCampRankGetCampRankFirstRsp::~TCampRankGetCampRankFirstRsp() {
  // @@protoc_insertion_point(destructor:pb.TCampRankGetCampRankFirstRsp)
  SharedDtor();
}

void TCampRankGetCampRankFirstRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCampRankGetCampRankFirstRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCampRankGetCampRankFirstRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCampRankGetCampRankFirstRsp_descriptor_;
}

const TCampRankGetCampRankFirstRsp& TCampRankGetCampRankFirstRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCampRank_2eproto();
  return *default_instance_;
}

TCampRankGetCampRankFirstRsp* TCampRankGetCampRankFirstRsp::default_instance_ = NULL;

TCampRankGetCampRankFirstRsp* TCampRankGetCampRankFirstRsp::New() const {
  return new TCampRankGetCampRankFirstRsp;
}

void TCampRankGetCampRankFirstRsp::Clear() {
  rankarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCampRankGetCampRankFirstRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCampRankGetCampRankFirstRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TcampRankCampRankFirst RankArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RankArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rankarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RankArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCampRankGetCampRankFirstRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCampRankGetCampRankFirstRsp)
  return false;
#undef DO_
}

void TCampRankGetCampRankFirstRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCampRankGetCampRankFirstRsp)
  // repeated .pb.TcampRankCampRankFirst RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rankarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCampRankGetCampRankFirstRsp)
}

::google::protobuf::uint8* TCampRankGetCampRankFirstRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCampRankGetCampRankFirstRsp)
  // repeated .pb.TcampRankCampRankFirst RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rankarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCampRankGetCampRankFirstRsp)
  return target;
}

int TCampRankGetCampRankFirstRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TcampRankCampRankFirst RankArr = 1;
  total_size += 1 * this->rankarr_size();
  for (int i = 0; i < this->rankarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rankarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCampRankGetCampRankFirstRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCampRankGetCampRankFirstRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCampRankGetCampRankFirstRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCampRankGetCampRankFirstRsp::MergeFrom(const TCampRankGetCampRankFirstRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rankarr_.MergeFrom(from.rankarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCampRankGetCampRankFirstRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCampRankGetCampRankFirstRsp::CopyFrom(const TCampRankGetCampRankFirstRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCampRankGetCampRankFirstRsp::IsInitialized() const {

  return true;
}

void TCampRankGetCampRankFirstRsp::Swap(TCampRankGetCampRankFirstRsp* other) {
  if (other != this) {
    rankarr_.Swap(&other->rankarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCampRankGetCampRankFirstRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCampRankGetCampRankFirstRsp_descriptor_;
  metadata.reflection = TCampRankGetCampRankFirstRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCampRankHeroRankInfo::kHidFieldNumber;
const int TCampRankHeroRankInfo::kRankIdxFieldNumber;
#endif  // !_MSC_VER

TCampRankHeroRankInfo::TCampRankHeroRankInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCampRankHeroRankInfo)
}

void TCampRankHeroRankInfo::InitAsDefaultInstance() {
}

TCampRankHeroRankInfo::TCampRankHeroRankInfo(const TCampRankHeroRankInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCampRankHeroRankInfo)
}

void TCampRankHeroRankInfo::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  rankidx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCampRankHeroRankInfo::~TCampRankHeroRankInfo() {
  // @@protoc_insertion_point(destructor:pb.TCampRankHeroRankInfo)
  SharedDtor();
}

void TCampRankHeroRankInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCampRankHeroRankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCampRankHeroRankInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCampRankHeroRankInfo_descriptor_;
}

const TCampRankHeroRankInfo& TCampRankHeroRankInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCampRank_2eproto();
  return *default_instance_;
}

TCampRankHeroRankInfo* TCampRankHeroRankInfo::default_instance_ = NULL;

TCampRankHeroRankInfo* TCampRankHeroRankInfo::New() const {
  return new TCampRankHeroRankInfo;
}

void TCampRankHeroRankInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TCampRankHeroRankInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, rankidx_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCampRankHeroRankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCampRankHeroRankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RankIdx;
        break;
      }

      // optional int32 RankIdx = 2;
      case 2: {
        if (tag == 16) {
         parse_RankIdx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rankidx_)));
          set_has_rankidx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCampRankHeroRankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCampRankHeroRankInfo)
  return false;
#undef DO_
}

void TCampRankHeroRankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCampRankHeroRankInfo)
  // optional uint32 hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional int32 RankIdx = 2;
  if (has_rankidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rankidx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCampRankHeroRankInfo)
}

::google::protobuf::uint8* TCampRankHeroRankInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCampRankHeroRankInfo)
  // optional uint32 hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional int32 RankIdx = 2;
  if (has_rankidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rankidx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCampRankHeroRankInfo)
  return target;
}

int TCampRankHeroRankInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional int32 RankIdx = 2;
    if (has_rankidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rankidx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCampRankHeroRankInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCampRankHeroRankInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCampRankHeroRankInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCampRankHeroRankInfo::MergeFrom(const TCampRankHeroRankInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_rankidx()) {
      set_rankidx(from.rankidx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCampRankHeroRankInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCampRankHeroRankInfo::CopyFrom(const TCampRankHeroRankInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCampRankHeroRankInfo::IsInitialized() const {

  return true;
}

void TCampRankHeroRankInfo::Swap(TCampRankHeroRankInfo* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(rankidx_, other->rankidx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCampRankHeroRankInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCampRankHeroRankInfo_descriptor_;
  metadata.reflection = TCampRankHeroRankInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCampRankGetSelfRankInfoRsp::kHeroRankArrFieldNumber;
#endif  // !_MSC_VER

TCampRankGetSelfRankInfoRsp::TCampRankGetSelfRankInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCampRankGetSelfRankInfoRsp)
}

void TCampRankGetSelfRankInfoRsp::InitAsDefaultInstance() {
}

TCampRankGetSelfRankInfoRsp::TCampRankGetSelfRankInfoRsp(const TCampRankGetSelfRankInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCampRankGetSelfRankInfoRsp)
}

void TCampRankGetSelfRankInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCampRankGetSelfRankInfoRsp::~TCampRankGetSelfRankInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TCampRankGetSelfRankInfoRsp)
  SharedDtor();
}

void TCampRankGetSelfRankInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCampRankGetSelfRankInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCampRankGetSelfRankInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCampRankGetSelfRankInfoRsp_descriptor_;
}

const TCampRankGetSelfRankInfoRsp& TCampRankGetSelfRankInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCampRank_2eproto();
  return *default_instance_;
}

TCampRankGetSelfRankInfoRsp* TCampRankGetSelfRankInfoRsp::default_instance_ = NULL;

TCampRankGetSelfRankInfoRsp* TCampRankGetSelfRankInfoRsp::New() const {
  return new TCampRankGetSelfRankInfoRsp;
}

void TCampRankGetSelfRankInfoRsp::Clear() {
  herorankarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCampRankGetSelfRankInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCampRankGetSelfRankInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCampRankHeroRankInfo HeroRankArr = 1;
      case 1: {
        if (tag == 10) {
         parse_HeroRankArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_herorankarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_HeroRankArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCampRankGetSelfRankInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCampRankGetSelfRankInfoRsp)
  return false;
#undef DO_
}

void TCampRankGetSelfRankInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCampRankGetSelfRankInfoRsp)
  // repeated .pb.TCampRankHeroRankInfo HeroRankArr = 1;
  for (int i = 0; i < this->herorankarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->herorankarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCampRankGetSelfRankInfoRsp)
}

::google::protobuf::uint8* TCampRankGetSelfRankInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCampRankGetSelfRankInfoRsp)
  // repeated .pb.TCampRankHeroRankInfo HeroRankArr = 1;
  for (int i = 0; i < this->herorankarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->herorankarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCampRankGetSelfRankInfoRsp)
  return target;
}

int TCampRankGetSelfRankInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCampRankHeroRankInfo HeroRankArr = 1;
  total_size += 1 * this->herorankarr_size();
  for (int i = 0; i < this->herorankarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->herorankarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCampRankGetSelfRankInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCampRankGetSelfRankInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCampRankGetSelfRankInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCampRankGetSelfRankInfoRsp::MergeFrom(const TCampRankGetSelfRankInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  herorankarr_.MergeFrom(from.herorankarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCampRankGetSelfRankInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCampRankGetSelfRankInfoRsp::CopyFrom(const TCampRankGetSelfRankInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCampRankGetSelfRankInfoRsp::IsInitialized() const {

  return true;
}

void TCampRankGetSelfRankInfoRsp::Swap(TCampRankGetSelfRankInfoRsp* other) {
  if (other != this) {
    herorankarr_.Swap(&other->herorankarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCampRankGetSelfRankInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCampRankGetSelfRankInfoRsp_descriptor_;
  metadata.reflection = TCampRankGetSelfRankInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCampRankSelfRankInfoPush::kHeroRankArrFieldNumber;
#endif  // !_MSC_VER

TCampRankSelfRankInfoPush::TCampRankSelfRankInfoPush()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCampRankSelfRankInfoPush)
}

void TCampRankSelfRankInfoPush::InitAsDefaultInstance() {
}

TCampRankSelfRankInfoPush::TCampRankSelfRankInfoPush(const TCampRankSelfRankInfoPush& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCampRankSelfRankInfoPush)
}

void TCampRankSelfRankInfoPush::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCampRankSelfRankInfoPush::~TCampRankSelfRankInfoPush() {
  // @@protoc_insertion_point(destructor:pb.TCampRankSelfRankInfoPush)
  SharedDtor();
}

void TCampRankSelfRankInfoPush::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCampRankSelfRankInfoPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCampRankSelfRankInfoPush::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCampRankSelfRankInfoPush_descriptor_;
}

const TCampRankSelfRankInfoPush& TCampRankSelfRankInfoPush::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCampRank_2eproto();
  return *default_instance_;
}

TCampRankSelfRankInfoPush* TCampRankSelfRankInfoPush::default_instance_ = NULL;

TCampRankSelfRankInfoPush* TCampRankSelfRankInfoPush::New() const {
  return new TCampRankSelfRankInfoPush;
}

void TCampRankSelfRankInfoPush::Clear() {
  herorankarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCampRankSelfRankInfoPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCampRankSelfRankInfoPush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCampRankHeroRankInfo HeroRankArr = 1;
      case 1: {
        if (tag == 10) {
         parse_HeroRankArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_herorankarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_HeroRankArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCampRankSelfRankInfoPush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCampRankSelfRankInfoPush)
  return false;
#undef DO_
}

void TCampRankSelfRankInfoPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCampRankSelfRankInfoPush)
  // repeated .pb.TCampRankHeroRankInfo HeroRankArr = 1;
  for (int i = 0; i < this->herorankarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->herorankarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCampRankSelfRankInfoPush)
}

::google::protobuf::uint8* TCampRankSelfRankInfoPush::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCampRankSelfRankInfoPush)
  // repeated .pb.TCampRankHeroRankInfo HeroRankArr = 1;
  for (int i = 0; i < this->herorankarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->herorankarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCampRankSelfRankInfoPush)
  return target;
}

int TCampRankSelfRankInfoPush::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCampRankHeroRankInfo HeroRankArr = 1;
  total_size += 1 * this->herorankarr_size();
  for (int i = 0; i < this->herorankarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->herorankarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCampRankSelfRankInfoPush::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCampRankSelfRankInfoPush* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCampRankSelfRankInfoPush*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCampRankSelfRankInfoPush::MergeFrom(const TCampRankSelfRankInfoPush& from) {
  GOOGLE_CHECK_NE(&from, this);
  herorankarr_.MergeFrom(from.herorankarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCampRankSelfRankInfoPush::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCampRankSelfRankInfoPush::CopyFrom(const TCampRankSelfRankInfoPush& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCampRankSelfRankInfoPush::IsInitialized() const {

  return true;
}

void TCampRankSelfRankInfoPush::Swap(TCampRankSelfRankInfoPush* other) {
  if (other != this) {
    herorankarr_.Swap(&other->herorankarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCampRankSelfRankInfoPush::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCampRankSelfRankInfoPush_descriptor_;
  metadata.reflection = TCampRankSelfRankInfoPush_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
