// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/UnionParty.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/UnionParty.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TUnionPartyShopInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyShopInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyShopRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyShopRecord_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyLootRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyLootRecord_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyGetUserInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyGetUserInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyGetPartyInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyGetPartyInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyStartPartyRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyStartPartyRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyFreeBoxInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyFreeBoxInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyRmbBoxInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyRmbBoxInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyEnterRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyEnterRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyLootReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyLootReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyLootRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyLootRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyBoxRechargeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyBoxRechargeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyBoxRechargeRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyBoxRechargeRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUnionPartyStartNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUnionPartyStartNotify_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EUnionPartyStage_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EUnionPartyStartResult_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EUnionPartyLootResult_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EUnionPartyRechargeResult_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EUnionPartyOption_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fUnionParty_2eproto() {
  protobuf_AddDesc_net_2fUnionParty_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/UnionParty.proto");
  GOOGLE_CHECK(file != NULL);
  TUnionPartyShopInfo_descriptor_ = file->message_type(0);
  static const int TUnionPartyShopInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyShopInfo, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyShopInfo, boughtnum_),
  };
  TUnionPartyShopInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyShopInfo_descriptor_,
      TUnionPartyShopInfo::default_instance_,
      TUnionPartyShopInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyShopInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyShopInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyShopInfo));
  TUnionPartyShopRecord_descriptor_ = file->message_type(1);
  static const int TUnionPartyShopRecord_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyShopRecord, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyShopRecord, shoptime_),
  };
  TUnionPartyShopRecord_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyShopRecord_descriptor_,
      TUnionPartyShopRecord::default_instance_,
      TUnionPartyShopRecord_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyShopRecord, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyShopRecord, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyShopRecord));
  TUnionPartyLootRecord_descriptor_ = file->message_type(2);
  static const int TUnionPartyLootRecord_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootRecord, boxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootRecord, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootRecord, loottime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootRecord, arrreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootRecord, userinfo_),
  };
  TUnionPartyLootRecord_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyLootRecord_descriptor_,
      TUnionPartyLootRecord::default_instance_,
      TUnionPartyLootRecord_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootRecord, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootRecord, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyLootRecord));
  TUnionPartyGetUserInfoRsp_descriptor_ = file->message_type(3);
  static const int TUnionPartyGetUserInfoRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyGetUserInfoRsp, arrshopinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyGetUserInfoRsp, arrlootrecord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyGetUserInfoRsp, arrshoprecord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyGetUserInfoRsp, checkenterfailed_),
  };
  TUnionPartyGetUserInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyGetUserInfoRsp_descriptor_,
      TUnionPartyGetUserInfoRsp::default_instance_,
      TUnionPartyGetUserInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyGetUserInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyGetUserInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyGetUserInfoRsp));
  TUnionPartyGetPartyInfoRsp_descriptor_ = file->message_type(4);
  static const int TUnionPartyGetPartyInfoRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyGetPartyInfoRsp, partyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyGetPartyInfoRsp, partystage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyGetPartyInfoRsp, starttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyGetPartyInfoRsp, joinpartyid_),
  };
  TUnionPartyGetPartyInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyGetPartyInfoRsp_descriptor_,
      TUnionPartyGetPartyInfoRsp::default_instance_,
      TUnionPartyGetPartyInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyGetPartyInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyGetPartyInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyGetPartyInfoRsp));
  TUnionPartyStartPartyRsp_descriptor_ = file->message_type(5);
  static const int TUnionPartyStartPartyRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyStartPartyRsp, resultcode_),
  };
  TUnionPartyStartPartyRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyStartPartyRsp_descriptor_,
      TUnionPartyStartPartyRsp::default_instance_,
      TUnionPartyStartPartyRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyStartPartyRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyStartPartyRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyStartPartyRsp));
  TUnionPartyFreeBoxInfo_descriptor_ = file->message_type(6);
  static const int TUnionPartyFreeBoxInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyFreeBoxInfo, boxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyFreeBoxInfo, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyFreeBoxInfo, posid_),
  };
  TUnionPartyFreeBoxInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyFreeBoxInfo_descriptor_,
      TUnionPartyFreeBoxInfo::default_instance_,
      TUnionPartyFreeBoxInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyFreeBoxInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyFreeBoxInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyFreeBoxInfo));
  TUnionPartyRmbBoxInfo_descriptor_ = file->message_type(7);
  static const int TUnionPartyRmbBoxInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyRmbBoxInfo, boxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyRmbBoxInfo, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyRmbBoxInfo, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyRmbBoxInfo, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyRmbBoxInfo, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyRmbBoxInfo, userinfo_),
  };
  TUnionPartyRmbBoxInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyRmbBoxInfo_descriptor_,
      TUnionPartyRmbBoxInfo::default_instance_,
      TUnionPartyRmbBoxInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyRmbBoxInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyRmbBoxInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyRmbBoxInfo));
  TUnionPartyEnterRsp_descriptor_ = file->message_type(8);
  static const int TUnionPartyEnterRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyEnterRsp, stageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyEnterRsp, arrfreeboxinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyEnterRsp, arrrmbboxinfo_),
  };
  TUnionPartyEnterRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyEnterRsp_descriptor_,
      TUnionPartyEnterRsp::default_instance_,
      TUnionPartyEnterRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyEnterRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyEnterRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyEnterRsp));
  TUnionPartyLootReq_descriptor_ = file->message_type(9);
  static const int TUnionPartyLootReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootReq, boxid_),
  };
  TUnionPartyLootReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyLootReq_descriptor_,
      TUnionPartyLootReq::default_instance_,
      TUnionPartyLootReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyLootReq));
  TUnionPartyLootRsp_descriptor_ = file->message_type(10);
  static const int TUnionPartyLootRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootRsp, resultcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootRsp, arrreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootRsp, isfreebox_),
  };
  TUnionPartyLootRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyLootRsp_descriptor_,
      TUnionPartyLootRsp::default_instance_,
      TUnionPartyLootRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyLootRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyLootRsp));
  TUnionPartyBoxRechargeReq_descriptor_ = file->message_type(11);
  static const int TUnionPartyBoxRechargeReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyBoxRechargeReq, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyBoxRechargeReq, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyBoxRechargeReq, posy_),
  };
  TUnionPartyBoxRechargeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyBoxRechargeReq_descriptor_,
      TUnionPartyBoxRechargeReq::default_instance_,
      TUnionPartyBoxRechargeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyBoxRechargeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyBoxRechargeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyBoxRechargeReq));
  TUnionPartyBoxRechargeRsp_descriptor_ = file->message_type(12);
  static const int TUnionPartyBoxRechargeRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyBoxRechargeRsp, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyBoxRechargeRsp, resultcode_),
  };
  TUnionPartyBoxRechargeRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyBoxRechargeRsp_descriptor_,
      TUnionPartyBoxRechargeRsp::default_instance_,
      TUnionPartyBoxRechargeRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyBoxRechargeRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyBoxRechargeRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyBoxRechargeRsp));
  TUnionPartyNotify_descriptor_ = file->message_type(13);
  static const int TUnionPartyNotify_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyNotify, stageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyNotify, arrfreeboxinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyNotify, arrrmbboxinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyNotify, option_),
  };
  TUnionPartyNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyNotify_descriptor_,
      TUnionPartyNotify::default_instance_,
      TUnionPartyNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyNotify));
  TUnionPartyStartNotify_descriptor_ = file->message_type(14);
  static const int TUnionPartyStartNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyStartNotify, partyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyStartNotify, starttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyStartNotify, stageid_),
  };
  TUnionPartyStartNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUnionPartyStartNotify_descriptor_,
      TUnionPartyStartNotify::default_instance_,
      TUnionPartyStartNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyStartNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUnionPartyStartNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUnionPartyStartNotify));
  EUnionPartyStage_descriptor_ = file->enum_type(0);
  EUnionPartyStartResult_descriptor_ = file->enum_type(1);
  EUnionPartyLootResult_descriptor_ = file->enum_type(2);
  EUnionPartyRechargeResult_descriptor_ = file->enum_type(3);
  EUnionPartyOption_descriptor_ = file->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fUnionParty_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyShopInfo_descriptor_, &TUnionPartyShopInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyShopRecord_descriptor_, &TUnionPartyShopRecord::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyLootRecord_descriptor_, &TUnionPartyLootRecord::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyGetUserInfoRsp_descriptor_, &TUnionPartyGetUserInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyGetPartyInfoRsp_descriptor_, &TUnionPartyGetPartyInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyStartPartyRsp_descriptor_, &TUnionPartyStartPartyRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyFreeBoxInfo_descriptor_, &TUnionPartyFreeBoxInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyRmbBoxInfo_descriptor_, &TUnionPartyRmbBoxInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyEnterRsp_descriptor_, &TUnionPartyEnterRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyLootReq_descriptor_, &TUnionPartyLootReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyLootRsp_descriptor_, &TUnionPartyLootRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyBoxRechargeReq_descriptor_, &TUnionPartyBoxRechargeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyBoxRechargeRsp_descriptor_, &TUnionPartyBoxRechargeRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyNotify_descriptor_, &TUnionPartyNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUnionPartyStartNotify_descriptor_, &TUnionPartyStartNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fUnionParty_2eproto() {
  delete TUnionPartyShopInfo::default_instance_;
  delete TUnionPartyShopInfo_reflection_;
  delete TUnionPartyShopRecord::default_instance_;
  delete TUnionPartyShopRecord_reflection_;
  delete TUnionPartyLootRecord::default_instance_;
  delete TUnionPartyLootRecord_reflection_;
  delete TUnionPartyGetUserInfoRsp::default_instance_;
  delete TUnionPartyGetUserInfoRsp_reflection_;
  delete TUnionPartyGetPartyInfoRsp::default_instance_;
  delete TUnionPartyGetPartyInfoRsp_reflection_;
  delete TUnionPartyStartPartyRsp::default_instance_;
  delete TUnionPartyStartPartyRsp_reflection_;
  delete TUnionPartyFreeBoxInfo::default_instance_;
  delete TUnionPartyFreeBoxInfo_reflection_;
  delete TUnionPartyRmbBoxInfo::default_instance_;
  delete TUnionPartyRmbBoxInfo_reflection_;
  delete TUnionPartyEnterRsp::default_instance_;
  delete TUnionPartyEnterRsp_reflection_;
  delete TUnionPartyLootReq::default_instance_;
  delete TUnionPartyLootReq_reflection_;
  delete TUnionPartyLootRsp::default_instance_;
  delete TUnionPartyLootRsp_reflection_;
  delete TUnionPartyBoxRechargeReq::default_instance_;
  delete TUnionPartyBoxRechargeReq_reflection_;
  delete TUnionPartyBoxRechargeRsp::default_instance_;
  delete TUnionPartyBoxRechargeRsp_reflection_;
  delete TUnionPartyNotify::default_instance_;
  delete TUnionPartyNotify_reflection_;
  delete TUnionPartyStartNotify::default_instance_;
  delete TUnionPartyStartNotify_reflection_;
}

void protobuf_AddDesc_net_2fUnionParty_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024net/UnionParty.proto\022\002pb\032\016net/User.pro"
    "to\032\026net/CommonReward.proto\"9\n\023TUnionPart"
    "yShopInfo\022\017\n\007GoodsId\030\001 \001(\005\022\021\n\tBoughtNum\030"
    "\002 \001(\005\":\n\025TUnionPartyShopRecord\022\017\n\007GoodsI"
    "d\030\001 \001(\005\022\020\n\010ShopTime\030\002 \001(\003\"\226\001\n\025TUnionPart"
    "yLootRecord\022\r\n\005BoxId\030\001 \001(\005\022\017\n\007GoodsId\030\002 "
    "\001(\005\022\020\n\010LootTime\030\003 \001(\003\022$\n\tArrReward\030\004 \003(\013"
    "2\021.pb.TCommonReward\022%\n\010UserInfo\030\005 \001(\0132\023."
    "pb.TUserSimpleInfo\"\307\001\n\031TUnionPartyGetUse"
    "rInfoRsp\022,\n\013ArrShopInfo\030\001 \003(\0132\027.pb.TUnio"
    "nPartyShopInfo\0220\n\rArrLootRecord\030\002 \003(\0132\031."
    "pb.TUnionPartyLootRecord\0220\n\rArrShopRecor"
    "d\030\003 \003(\0132\031.pb.TUnionPartyShopRecord\022\030\n\020Ch"
    "eckEnterFailed\030\004 \001(\010\"\177\n\032TUnionPartyGetPa"
    "rtyInfoRsp\022\017\n\007PartyId\030\001 \001(\004\022(\n\nPartyStag"
    "e\030\002 \001(\0162\024.pb.EUnionPartyStage\022\021\n\tStartTi"
    "me\030\003 \001(\003\022\023\n\013JoinPartyId\030\004 \001(\004\"J\n\030TUnionP"
    "artyStartPartyRsp\022.\n\nResultCode\030\001 \001(\0162\032."
    "pb.EUnionPartyStartResult\"J\n\026TUnionParty"
    "FreeBoxInfo\022\r\n\005BoxId\030\001 \001(\005\022\022\n\nCreateTime"
    "\030\002 \001(\003\022\r\n\005PosId\030\003 \001(\005\"\216\001\n\025TUnionPartyRmb"
    "BoxInfo\022\r\n\005BoxId\030\001 \001(\005\022\022\n\nCreateTime\030\002 \001"
    "(\003\022\014\n\004PosX\030\003 \001(\005\022\014\n\004PosY\030\004 \001(\005\022\017\n\007GoodsI"
    "d\030\005 \001(\005\022%\n\010UserInfo\030\006 \001(\0132\023.pb.TUserSimp"
    "leInfo\"\242\001\n\023TUnionPartyEnterRsp\022%\n\007StageI"
    "d\030\001 \001(\0162\024.pb.EUnionPartyStage\0222\n\016ArrFree"
    "BoxInfo\030\002 \003(\0132\032.pb.TUnionPartyFreeBoxInf"
    "o\0220\n\rArrRmbBoxInfo\030\003 \003(\0132\031.pb.TUnionPart"
    "yRmbBoxInfo\"#\n\022TUnionPartyLootReq\022\r\n\005Box"
    "Id\030\001 \001(\005\"|\n\022TUnionPartyLootRsp\022-\n\nResult"
    "Code\030\001 \001(\0162\031.pb.EUnionPartyLootResult\022$\n"
    "\tArrReward\030\002 \003(\0132\021.pb.TCommonReward\022\021\n\tI"
    "sFreeBox\030\003 \001(\010\"H\n\031TUnionPartyBoxRecharge"
    "Req\022\017\n\007GoodsId\030\001 \001(\005\022\014\n\004PosX\030\003 \001(\005\022\014\n\004Po"
    "sY\030\004 \001(\005\"_\n\031TUnionPartyBoxRechargeRsp\022\017\n"
    "\007GoodsId\030\001 \001(\005\0221\n\nResultCode\030\002 \001(\0162\035.pb."
    "EUnionPartyRechargeResult\"\307\001\n\021TUnionPart"
    "yNotify\022%\n\007StageId\030\001 \001(\0162\024.pb.EUnionPart"
    "yStage\0222\n\016ArrFreeBoxInfo\030\002 \003(\0132\032.pb.TUni"
    "onPartyFreeBoxInfo\0220\n\rArrRmbBoxInfo\030\003 \003("
    "\0132\031.pb.TUnionPartyRmbBoxInfo\022%\n\006Option\030\004"
    " \001(\0162\025.pb.EUnionPartyOption\"c\n\026TUnionPar"
    "tyStartNotify\022\017\n\007PartyId\030\001 \001(\004\022\021\n\tStartT"
    "ime\030\002 \001(\003\022%\n\007StageId\030\003 \001(\0162\024.pb.EUnionPa"
    "rtyStage*N\n\020EUnionPartyStage\022\024\n\020UP_STAGE"
    "_INVALID\020\000\022\021\n\rUP_STAGE_WAIT\020\001\022\021\n\rUP_STAG"
    "E_GAME\020\002*t\n\026EUnionPartyStartResult\022\023\n\017UP"
    "_START_NORMAL\020\000\022\021\n\rUP_START_DONE\020\001\022\026\n\022UP"
    "_START_AUTHORITY\020\002\022\032\n\026UP_START_INVALIDPE"
    "RIOD\020\003*{\n\025EUnionPartyLootResult\022\022\n\016UP_LO"
    "OT_NORMAL\020\000\022\020\n\014UP_LOOT_DONE\020\001\022\023\n\017UP_LOOT"
    "_INVALID\020\002\022\023\n\017UP_LOOT_FREEMAX\020\003\022\022\n\016UP_LO"
    "OT_RMBMAX\020\004*h\n\031EUnionPartyRechargeResult"
    "\022\026\n\022BE_RECHARGE_NORMAL\020\000\022\032\n\026BE_RECHARGE_"
    "UPPERLIMIT\020\001\022\027\n\023BE_RECHARGE_NOTOPEN\020\002*k\n"
    "\021EUnionPartyOption\022\025\n\021UP_CREATE_FREEBOX\020"
    "\001\022\025\n\021UP_REMOVE_FREEBOX\020\002\022\024\n\020UP_CREATE_RM"
    "BBOX\020\003\022\022\n\016UP_CLOSE_PARTY\020\004", 2306);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/UnionParty.proto", &protobuf_RegisterTypes);
  TUnionPartyShopInfo::default_instance_ = new TUnionPartyShopInfo();
  TUnionPartyShopRecord::default_instance_ = new TUnionPartyShopRecord();
  TUnionPartyLootRecord::default_instance_ = new TUnionPartyLootRecord();
  TUnionPartyGetUserInfoRsp::default_instance_ = new TUnionPartyGetUserInfoRsp();
  TUnionPartyGetPartyInfoRsp::default_instance_ = new TUnionPartyGetPartyInfoRsp();
  TUnionPartyStartPartyRsp::default_instance_ = new TUnionPartyStartPartyRsp();
  TUnionPartyFreeBoxInfo::default_instance_ = new TUnionPartyFreeBoxInfo();
  TUnionPartyRmbBoxInfo::default_instance_ = new TUnionPartyRmbBoxInfo();
  TUnionPartyEnterRsp::default_instance_ = new TUnionPartyEnterRsp();
  TUnionPartyLootReq::default_instance_ = new TUnionPartyLootReq();
  TUnionPartyLootRsp::default_instance_ = new TUnionPartyLootRsp();
  TUnionPartyBoxRechargeReq::default_instance_ = new TUnionPartyBoxRechargeReq();
  TUnionPartyBoxRechargeRsp::default_instance_ = new TUnionPartyBoxRechargeRsp();
  TUnionPartyNotify::default_instance_ = new TUnionPartyNotify();
  TUnionPartyStartNotify::default_instance_ = new TUnionPartyStartNotify();
  TUnionPartyShopInfo::default_instance_->InitAsDefaultInstance();
  TUnionPartyShopRecord::default_instance_->InitAsDefaultInstance();
  TUnionPartyLootRecord::default_instance_->InitAsDefaultInstance();
  TUnionPartyGetUserInfoRsp::default_instance_->InitAsDefaultInstance();
  TUnionPartyGetPartyInfoRsp::default_instance_->InitAsDefaultInstance();
  TUnionPartyStartPartyRsp::default_instance_->InitAsDefaultInstance();
  TUnionPartyFreeBoxInfo::default_instance_->InitAsDefaultInstance();
  TUnionPartyRmbBoxInfo::default_instance_->InitAsDefaultInstance();
  TUnionPartyEnterRsp::default_instance_->InitAsDefaultInstance();
  TUnionPartyLootReq::default_instance_->InitAsDefaultInstance();
  TUnionPartyLootRsp::default_instance_->InitAsDefaultInstance();
  TUnionPartyBoxRechargeReq::default_instance_->InitAsDefaultInstance();
  TUnionPartyBoxRechargeRsp::default_instance_->InitAsDefaultInstance();
  TUnionPartyNotify::default_instance_->InitAsDefaultInstance();
  TUnionPartyStartNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fUnionParty_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fUnionParty_2eproto {
  StaticDescriptorInitializer_net_2fUnionParty_2eproto() {
    protobuf_AddDesc_net_2fUnionParty_2eproto();
  }
} static_descriptor_initializer_net_2fUnionParty_2eproto_;
const ::google::protobuf::EnumDescriptor* EUnionPartyStage_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EUnionPartyStage_descriptor_;
}
bool EUnionPartyStage_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EUnionPartyStartResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EUnionPartyStartResult_descriptor_;
}
bool EUnionPartyStartResult_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EUnionPartyLootResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EUnionPartyLootResult_descriptor_;
}
bool EUnionPartyLootResult_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EUnionPartyRechargeResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EUnionPartyRechargeResult_descriptor_;
}
bool EUnionPartyRechargeResult_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EUnionPartyOption_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EUnionPartyOption_descriptor_;
}
bool EUnionPartyOption_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyShopInfo::kGoodsIdFieldNumber;
const int TUnionPartyShopInfo::kBoughtNumFieldNumber;
#endif  // !_MSC_VER

TUnionPartyShopInfo::TUnionPartyShopInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyShopInfo)
}

void TUnionPartyShopInfo::InitAsDefaultInstance() {
}

TUnionPartyShopInfo::TUnionPartyShopInfo(const TUnionPartyShopInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyShopInfo)
}

void TUnionPartyShopInfo::SharedCtor() {
  _cached_size_ = 0;
  goodsid_ = 0;
  boughtnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyShopInfo::~TUnionPartyShopInfo() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyShopInfo)
  SharedDtor();
}

void TUnionPartyShopInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUnionPartyShopInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyShopInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyShopInfo_descriptor_;
}

const TUnionPartyShopInfo& TUnionPartyShopInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyShopInfo* TUnionPartyShopInfo::default_instance_ = NULL;

TUnionPartyShopInfo* TUnionPartyShopInfo::New() const {
  return new TUnionPartyShopInfo;
}

void TUnionPartyShopInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TUnionPartyShopInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(goodsid_, boughtnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyShopInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyShopInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 GoodsId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BoughtNum;
        break;
      }

      // optional int32 BoughtNum = 2;
      case 2: {
        if (tag == 16) {
         parse_BoughtNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boughtnum_)));
          set_has_boughtnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyShopInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyShopInfo)
  return false;
#undef DO_
}

void TUnionPartyShopInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyShopInfo)
  // optional int32 GoodsId = 1;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->goodsid(), output);
  }

  // optional int32 BoughtNum = 2;
  if (has_boughtnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->boughtnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyShopInfo)
}

::google::protobuf::uint8* TUnionPartyShopInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyShopInfo)
  // optional int32 GoodsId = 1;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->goodsid(), target);
  }

  // optional int32 BoughtNum = 2;
  if (has_boughtnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->boughtnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyShopInfo)
  return target;
}

int TUnionPartyShopInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 GoodsId = 1;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goodsid());
    }

    // optional int32 BoughtNum = 2;
    if (has_boughtnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boughtnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyShopInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyShopInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyShopInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyShopInfo::MergeFrom(const TUnionPartyShopInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
    if (from.has_boughtnum()) {
      set_boughtnum(from.boughtnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyShopInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyShopInfo::CopyFrom(const TUnionPartyShopInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyShopInfo::IsInitialized() const {

  return true;
}

void TUnionPartyShopInfo::Swap(TUnionPartyShopInfo* other) {
  if (other != this) {
    std::swap(goodsid_, other->goodsid_);
    std::swap(boughtnum_, other->boughtnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyShopInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyShopInfo_descriptor_;
  metadata.reflection = TUnionPartyShopInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyShopRecord::kGoodsIdFieldNumber;
const int TUnionPartyShopRecord::kShopTimeFieldNumber;
#endif  // !_MSC_VER

TUnionPartyShopRecord::TUnionPartyShopRecord()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyShopRecord)
}

void TUnionPartyShopRecord::InitAsDefaultInstance() {
}

TUnionPartyShopRecord::TUnionPartyShopRecord(const TUnionPartyShopRecord& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyShopRecord)
}

void TUnionPartyShopRecord::SharedCtor() {
  _cached_size_ = 0;
  goodsid_ = 0;
  shoptime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyShopRecord::~TUnionPartyShopRecord() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyShopRecord)
  SharedDtor();
}

void TUnionPartyShopRecord::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUnionPartyShopRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyShopRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyShopRecord_descriptor_;
}

const TUnionPartyShopRecord& TUnionPartyShopRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyShopRecord* TUnionPartyShopRecord::default_instance_ = NULL;

TUnionPartyShopRecord* TUnionPartyShopRecord::New() const {
  return new TUnionPartyShopRecord;
}

void TUnionPartyShopRecord::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TUnionPartyShopRecord*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(shoptime_, goodsid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyShopRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyShopRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 GoodsId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ShopTime;
        break;
      }

      // optional int64 ShopTime = 2;
      case 2: {
        if (tag == 16) {
         parse_ShopTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shoptime_)));
          set_has_shoptime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyShopRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyShopRecord)
  return false;
#undef DO_
}

void TUnionPartyShopRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyShopRecord)
  // optional int32 GoodsId = 1;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->goodsid(), output);
  }

  // optional int64 ShopTime = 2;
  if (has_shoptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->shoptime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyShopRecord)
}

::google::protobuf::uint8* TUnionPartyShopRecord::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyShopRecord)
  // optional int32 GoodsId = 1;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->goodsid(), target);
  }

  // optional int64 ShopTime = 2;
  if (has_shoptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->shoptime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyShopRecord)
  return target;
}

int TUnionPartyShopRecord::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 GoodsId = 1;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goodsid());
    }

    // optional int64 ShopTime = 2;
    if (has_shoptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->shoptime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyShopRecord::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyShopRecord* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyShopRecord*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyShopRecord::MergeFrom(const TUnionPartyShopRecord& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
    if (from.has_shoptime()) {
      set_shoptime(from.shoptime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyShopRecord::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyShopRecord::CopyFrom(const TUnionPartyShopRecord& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyShopRecord::IsInitialized() const {

  return true;
}

void TUnionPartyShopRecord::Swap(TUnionPartyShopRecord* other) {
  if (other != this) {
    std::swap(goodsid_, other->goodsid_);
    std::swap(shoptime_, other->shoptime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyShopRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyShopRecord_descriptor_;
  metadata.reflection = TUnionPartyShopRecord_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyLootRecord::kBoxIdFieldNumber;
const int TUnionPartyLootRecord::kGoodsIdFieldNumber;
const int TUnionPartyLootRecord::kLootTimeFieldNumber;
const int TUnionPartyLootRecord::kArrRewardFieldNumber;
const int TUnionPartyLootRecord::kUserInfoFieldNumber;
#endif  // !_MSC_VER

TUnionPartyLootRecord::TUnionPartyLootRecord()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyLootRecord)
}

void TUnionPartyLootRecord::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TUnionPartyLootRecord::TUnionPartyLootRecord(const TUnionPartyLootRecord& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyLootRecord)
}

void TUnionPartyLootRecord::SharedCtor() {
  _cached_size_ = 0;
  boxid_ = 0;
  goodsid_ = 0;
  loottime_ = GOOGLE_LONGLONG(0);
  userinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyLootRecord::~TUnionPartyLootRecord() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyLootRecord)
  SharedDtor();
}

void TUnionPartyLootRecord::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void TUnionPartyLootRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyLootRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyLootRecord_descriptor_;
}

const TUnionPartyLootRecord& TUnionPartyLootRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyLootRecord* TUnionPartyLootRecord::default_instance_ = NULL;

TUnionPartyLootRecord* TUnionPartyLootRecord::New() const {
  return new TUnionPartyLootRecord;
}

void TUnionPartyLootRecord::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TUnionPartyLootRecord*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 23) {
    ZR_(boxid_, loottime_);
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyLootRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyLootRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 BoxId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boxid_)));
          set_has_boxid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_GoodsId;
        break;
      }

      // optional int32 GoodsId = 2;
      case 2: {
        if (tag == 16) {
         parse_GoodsId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LootTime;
        break;
      }

      // optional int64 LootTime = 3;
      case 3: {
        if (tag == 24) {
         parse_LootTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &loottime_)));
          set_has_loottime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrReward;
        break;
      }

      // repeated .pb.TCommonReward ArrReward = 4;
      case 4: {
        if (tag == 34) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrReward;
        if (input->ExpectTag(42)) goto parse_UserInfo;
        break;
      }

      // optional .pb.TUserSimpleInfo UserInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_UserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyLootRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyLootRecord)
  return false;
#undef DO_
}

void TUnionPartyLootRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyLootRecord)
  // optional int32 BoxId = 1;
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->boxid(), output);
  }

  // optional int32 GoodsId = 2;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->goodsid(), output);
  }

  // optional int64 LootTime = 3;
  if (has_loottime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->loottime(), output);
  }

  // repeated .pb.TCommonReward ArrReward = 4;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->arrreward(i), output);
  }

  // optional .pb.TUserSimpleInfo UserInfo = 5;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->userinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyLootRecord)
}

::google::protobuf::uint8* TUnionPartyLootRecord::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyLootRecord)
  // optional int32 BoxId = 1;
  if (has_boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->boxid(), target);
  }

  // optional int32 GoodsId = 2;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->goodsid(), target);
  }

  // optional int64 LootTime = 3;
  if (has_loottime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->loottime(), target);
  }

  // repeated .pb.TCommonReward ArrReward = 4;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->arrreward(i), target);
  }

  // optional .pb.TUserSimpleInfo UserInfo = 5;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->userinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyLootRecord)
  return target;
}

int TUnionPartyLootRecord::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 BoxId = 1;
    if (has_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boxid());
    }

    // optional int32 GoodsId = 2;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goodsid());
    }

    // optional int64 LootTime = 3;
    if (has_loottime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->loottime());
    }

    // optional .pb.TUserSimpleInfo UserInfo = 5;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }

  }
  // repeated .pb.TCommonReward ArrReward = 4;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyLootRecord::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyLootRecord* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyLootRecord*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyLootRecord::MergeFrom(const TUnionPartyLootRecord& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boxid()) {
      set_boxid(from.boxid());
    }
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
    if (from.has_loottime()) {
      set_loottime(from.loottime());
    }
    if (from.has_userinfo()) {
      mutable_userinfo()->::pb::TUserSimpleInfo::MergeFrom(from.userinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyLootRecord::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyLootRecord::CopyFrom(const TUnionPartyLootRecord& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyLootRecord::IsInitialized() const {

  return true;
}

void TUnionPartyLootRecord::Swap(TUnionPartyLootRecord* other) {
  if (other != this) {
    std::swap(boxid_, other->boxid_);
    std::swap(goodsid_, other->goodsid_);
    std::swap(loottime_, other->loottime_);
    arrreward_.Swap(&other->arrreward_);
    std::swap(userinfo_, other->userinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyLootRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyLootRecord_descriptor_;
  metadata.reflection = TUnionPartyLootRecord_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyGetUserInfoRsp::kArrShopInfoFieldNumber;
const int TUnionPartyGetUserInfoRsp::kArrLootRecordFieldNumber;
const int TUnionPartyGetUserInfoRsp::kArrShopRecordFieldNumber;
const int TUnionPartyGetUserInfoRsp::kCheckEnterFailedFieldNumber;
#endif  // !_MSC_VER

TUnionPartyGetUserInfoRsp::TUnionPartyGetUserInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyGetUserInfoRsp)
}

void TUnionPartyGetUserInfoRsp::InitAsDefaultInstance() {
}

TUnionPartyGetUserInfoRsp::TUnionPartyGetUserInfoRsp(const TUnionPartyGetUserInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyGetUserInfoRsp)
}

void TUnionPartyGetUserInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  checkenterfailed_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyGetUserInfoRsp::~TUnionPartyGetUserInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyGetUserInfoRsp)
  SharedDtor();
}

void TUnionPartyGetUserInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUnionPartyGetUserInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyGetUserInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyGetUserInfoRsp_descriptor_;
}

const TUnionPartyGetUserInfoRsp& TUnionPartyGetUserInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyGetUserInfoRsp* TUnionPartyGetUserInfoRsp::default_instance_ = NULL;

TUnionPartyGetUserInfoRsp* TUnionPartyGetUserInfoRsp::New() const {
  return new TUnionPartyGetUserInfoRsp;
}

void TUnionPartyGetUserInfoRsp::Clear() {
  checkenterfailed_ = false;
  arrshopinfo_.Clear();
  arrlootrecord_.Clear();
  arrshoprecord_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyGetUserInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyGetUserInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TUnionPartyShopInfo ArrShopInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrShopInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrshopinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrShopInfo;
        if (input->ExpectTag(18)) goto parse_ArrLootRecord;
        break;
      }

      // repeated .pb.TUnionPartyLootRecord ArrLootRecord = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrLootRecord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrlootrecord()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrLootRecord;
        if (input->ExpectTag(26)) goto parse_ArrShopRecord;
        break;
      }

      // repeated .pb.TUnionPartyShopRecord ArrShopRecord = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrShopRecord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrshoprecord()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrShopRecord;
        if (input->ExpectTag(32)) goto parse_CheckEnterFailed;
        break;
      }

      // optional bool CheckEnterFailed = 4;
      case 4: {
        if (tag == 32) {
         parse_CheckEnterFailed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &checkenterfailed_)));
          set_has_checkenterfailed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyGetUserInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyGetUserInfoRsp)
  return false;
#undef DO_
}

void TUnionPartyGetUserInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyGetUserInfoRsp)
  // repeated .pb.TUnionPartyShopInfo ArrShopInfo = 1;
  for (int i = 0; i < this->arrshopinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrshopinfo(i), output);
  }

  // repeated .pb.TUnionPartyLootRecord ArrLootRecord = 2;
  for (int i = 0; i < this->arrlootrecord_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrlootrecord(i), output);
  }

  // repeated .pb.TUnionPartyShopRecord ArrShopRecord = 3;
  for (int i = 0; i < this->arrshoprecord_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrshoprecord(i), output);
  }

  // optional bool CheckEnterFailed = 4;
  if (has_checkenterfailed()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->checkenterfailed(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyGetUserInfoRsp)
}

::google::protobuf::uint8* TUnionPartyGetUserInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyGetUserInfoRsp)
  // repeated .pb.TUnionPartyShopInfo ArrShopInfo = 1;
  for (int i = 0; i < this->arrshopinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrshopinfo(i), target);
  }

  // repeated .pb.TUnionPartyLootRecord ArrLootRecord = 2;
  for (int i = 0; i < this->arrlootrecord_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrlootrecord(i), target);
  }

  // repeated .pb.TUnionPartyShopRecord ArrShopRecord = 3;
  for (int i = 0; i < this->arrshoprecord_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrshoprecord(i), target);
  }

  // optional bool CheckEnterFailed = 4;
  if (has_checkenterfailed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->checkenterfailed(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyGetUserInfoRsp)
  return target;
}

int TUnionPartyGetUserInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    // optional bool CheckEnterFailed = 4;
    if (has_checkenterfailed()) {
      total_size += 1 + 1;
    }

  }
  // repeated .pb.TUnionPartyShopInfo ArrShopInfo = 1;
  total_size += 1 * this->arrshopinfo_size();
  for (int i = 0; i < this->arrshopinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrshopinfo(i));
  }

  // repeated .pb.TUnionPartyLootRecord ArrLootRecord = 2;
  total_size += 1 * this->arrlootrecord_size();
  for (int i = 0; i < this->arrlootrecord_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrlootrecord(i));
  }

  // repeated .pb.TUnionPartyShopRecord ArrShopRecord = 3;
  total_size += 1 * this->arrshoprecord_size();
  for (int i = 0; i < this->arrshoprecord_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrshoprecord(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyGetUserInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyGetUserInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyGetUserInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyGetUserInfoRsp::MergeFrom(const TUnionPartyGetUserInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrshopinfo_.MergeFrom(from.arrshopinfo_);
  arrlootrecord_.MergeFrom(from.arrlootrecord_);
  arrshoprecord_.MergeFrom(from.arrshoprecord_);
  if (from._has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (from.has_checkenterfailed()) {
      set_checkenterfailed(from.checkenterfailed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyGetUserInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyGetUserInfoRsp::CopyFrom(const TUnionPartyGetUserInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyGetUserInfoRsp::IsInitialized() const {

  return true;
}

void TUnionPartyGetUserInfoRsp::Swap(TUnionPartyGetUserInfoRsp* other) {
  if (other != this) {
    arrshopinfo_.Swap(&other->arrshopinfo_);
    arrlootrecord_.Swap(&other->arrlootrecord_);
    arrshoprecord_.Swap(&other->arrshoprecord_);
    std::swap(checkenterfailed_, other->checkenterfailed_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyGetUserInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyGetUserInfoRsp_descriptor_;
  metadata.reflection = TUnionPartyGetUserInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyGetPartyInfoRsp::kPartyIdFieldNumber;
const int TUnionPartyGetPartyInfoRsp::kPartyStageFieldNumber;
const int TUnionPartyGetPartyInfoRsp::kStartTimeFieldNumber;
const int TUnionPartyGetPartyInfoRsp::kJoinPartyIdFieldNumber;
#endif  // !_MSC_VER

TUnionPartyGetPartyInfoRsp::TUnionPartyGetPartyInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyGetPartyInfoRsp)
}

void TUnionPartyGetPartyInfoRsp::InitAsDefaultInstance() {
}

TUnionPartyGetPartyInfoRsp::TUnionPartyGetPartyInfoRsp(const TUnionPartyGetPartyInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyGetPartyInfoRsp)
}

void TUnionPartyGetPartyInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  partyid_ = GOOGLE_ULONGLONG(0);
  partystage_ = 0;
  starttime_ = GOOGLE_LONGLONG(0);
  joinpartyid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyGetPartyInfoRsp::~TUnionPartyGetPartyInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyGetPartyInfoRsp)
  SharedDtor();
}

void TUnionPartyGetPartyInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUnionPartyGetPartyInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyGetPartyInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyGetPartyInfoRsp_descriptor_;
}

const TUnionPartyGetPartyInfoRsp& TUnionPartyGetPartyInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyGetPartyInfoRsp* TUnionPartyGetPartyInfoRsp::default_instance_ = NULL;

TUnionPartyGetPartyInfoRsp* TUnionPartyGetPartyInfoRsp::New() const {
  return new TUnionPartyGetPartyInfoRsp;
}

void TUnionPartyGetPartyInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TUnionPartyGetPartyInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(partyid_, partystage_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyGetPartyInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyGetPartyInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 PartyId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &partyid_)));
          set_has_partyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PartyStage;
        break;
      }

      // optional .pb.EUnionPartyStage PartyStage = 2;
      case 2: {
        if (tag == 16) {
         parse_PartyStage:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EUnionPartyStage_IsValid(value)) {
            set_partystage(static_cast< ::pb::EUnionPartyStage >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_StartTime;
        break;
      }

      // optional int64 StartTime = 3;
      case 3: {
        if (tag == 24) {
         parse_StartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_JoinPartyId;
        break;
      }

      // optional uint64 JoinPartyId = 4;
      case 4: {
        if (tag == 32) {
         parse_JoinPartyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &joinpartyid_)));
          set_has_joinpartyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyGetPartyInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyGetPartyInfoRsp)
  return false;
#undef DO_
}

void TUnionPartyGetPartyInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyGetPartyInfoRsp)
  // optional uint64 PartyId = 1;
  if (has_partyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->partyid(), output);
  }

  // optional .pb.EUnionPartyStage PartyStage = 2;
  if (has_partystage()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->partystage(), output);
  }

  // optional int64 StartTime = 3;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->starttime(), output);
  }

  // optional uint64 JoinPartyId = 4;
  if (has_joinpartyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->joinpartyid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyGetPartyInfoRsp)
}

::google::protobuf::uint8* TUnionPartyGetPartyInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyGetPartyInfoRsp)
  // optional uint64 PartyId = 1;
  if (has_partyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->partyid(), target);
  }

  // optional .pb.EUnionPartyStage PartyStage = 2;
  if (has_partystage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->partystage(), target);
  }

  // optional int64 StartTime = 3;
  if (has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->starttime(), target);
  }

  // optional uint64 JoinPartyId = 4;
  if (has_joinpartyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->joinpartyid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyGetPartyInfoRsp)
  return target;
}

int TUnionPartyGetPartyInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 PartyId = 1;
    if (has_partyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->partyid());
    }

    // optional .pb.EUnionPartyStage PartyStage = 2;
    if (has_partystage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->partystage());
    }

    // optional int64 StartTime = 3;
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->starttime());
    }

    // optional uint64 JoinPartyId = 4;
    if (has_joinpartyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->joinpartyid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyGetPartyInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyGetPartyInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyGetPartyInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyGetPartyInfoRsp::MergeFrom(const TUnionPartyGetPartyInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_partyid()) {
      set_partyid(from.partyid());
    }
    if (from.has_partystage()) {
      set_partystage(from.partystage());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
    if (from.has_joinpartyid()) {
      set_joinpartyid(from.joinpartyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyGetPartyInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyGetPartyInfoRsp::CopyFrom(const TUnionPartyGetPartyInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyGetPartyInfoRsp::IsInitialized() const {

  return true;
}

void TUnionPartyGetPartyInfoRsp::Swap(TUnionPartyGetPartyInfoRsp* other) {
  if (other != this) {
    std::swap(partyid_, other->partyid_);
    std::swap(partystage_, other->partystage_);
    std::swap(starttime_, other->starttime_);
    std::swap(joinpartyid_, other->joinpartyid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyGetPartyInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyGetPartyInfoRsp_descriptor_;
  metadata.reflection = TUnionPartyGetPartyInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyStartPartyRsp::kResultCodeFieldNumber;
#endif  // !_MSC_VER

TUnionPartyStartPartyRsp::TUnionPartyStartPartyRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyStartPartyRsp)
}

void TUnionPartyStartPartyRsp::InitAsDefaultInstance() {
}

TUnionPartyStartPartyRsp::TUnionPartyStartPartyRsp(const TUnionPartyStartPartyRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyStartPartyRsp)
}

void TUnionPartyStartPartyRsp::SharedCtor() {
  _cached_size_ = 0;
  resultcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyStartPartyRsp::~TUnionPartyStartPartyRsp() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyStartPartyRsp)
  SharedDtor();
}

void TUnionPartyStartPartyRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUnionPartyStartPartyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyStartPartyRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyStartPartyRsp_descriptor_;
}

const TUnionPartyStartPartyRsp& TUnionPartyStartPartyRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyStartPartyRsp* TUnionPartyStartPartyRsp::default_instance_ = NULL;

TUnionPartyStartPartyRsp* TUnionPartyStartPartyRsp::New() const {
  return new TUnionPartyStartPartyRsp;
}

void TUnionPartyStartPartyRsp::Clear() {
  resultcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyStartPartyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyStartPartyRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.EUnionPartyStartResult ResultCode = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EUnionPartyStartResult_IsValid(value)) {
            set_resultcode(static_cast< ::pb::EUnionPartyStartResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyStartPartyRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyStartPartyRsp)
  return false;
#undef DO_
}

void TUnionPartyStartPartyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyStartPartyRsp)
  // optional .pb.EUnionPartyStartResult ResultCode = 1;
  if (has_resultcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->resultcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyStartPartyRsp)
}

::google::protobuf::uint8* TUnionPartyStartPartyRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyStartPartyRsp)
  // optional .pb.EUnionPartyStartResult ResultCode = 1;
  if (has_resultcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->resultcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyStartPartyRsp)
  return target;
}

int TUnionPartyStartPartyRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.EUnionPartyStartResult ResultCode = 1;
    if (has_resultcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->resultcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyStartPartyRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyStartPartyRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyStartPartyRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyStartPartyRsp::MergeFrom(const TUnionPartyStartPartyRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resultcode()) {
      set_resultcode(from.resultcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyStartPartyRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyStartPartyRsp::CopyFrom(const TUnionPartyStartPartyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyStartPartyRsp::IsInitialized() const {

  return true;
}

void TUnionPartyStartPartyRsp::Swap(TUnionPartyStartPartyRsp* other) {
  if (other != this) {
    std::swap(resultcode_, other->resultcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyStartPartyRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyStartPartyRsp_descriptor_;
  metadata.reflection = TUnionPartyStartPartyRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyFreeBoxInfo::kBoxIdFieldNumber;
const int TUnionPartyFreeBoxInfo::kCreateTimeFieldNumber;
const int TUnionPartyFreeBoxInfo::kPosIdFieldNumber;
#endif  // !_MSC_VER

TUnionPartyFreeBoxInfo::TUnionPartyFreeBoxInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyFreeBoxInfo)
}

void TUnionPartyFreeBoxInfo::InitAsDefaultInstance() {
}

TUnionPartyFreeBoxInfo::TUnionPartyFreeBoxInfo(const TUnionPartyFreeBoxInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyFreeBoxInfo)
}

void TUnionPartyFreeBoxInfo::SharedCtor() {
  _cached_size_ = 0;
  boxid_ = 0;
  createtime_ = GOOGLE_LONGLONG(0);
  posid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyFreeBoxInfo::~TUnionPartyFreeBoxInfo() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyFreeBoxInfo)
  SharedDtor();
}

void TUnionPartyFreeBoxInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUnionPartyFreeBoxInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyFreeBoxInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyFreeBoxInfo_descriptor_;
}

const TUnionPartyFreeBoxInfo& TUnionPartyFreeBoxInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyFreeBoxInfo* TUnionPartyFreeBoxInfo::default_instance_ = NULL;

TUnionPartyFreeBoxInfo* TUnionPartyFreeBoxInfo::New() const {
  return new TUnionPartyFreeBoxInfo;
}

void TUnionPartyFreeBoxInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TUnionPartyFreeBoxInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(createtime_, posid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyFreeBoxInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyFreeBoxInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 BoxId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boxid_)));
          set_has_boxid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CreateTime;
        break;
      }

      // optional int64 CreateTime = 2;
      case 2: {
        if (tag == 16) {
         parse_CreateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &createtime_)));
          set_has_createtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PosId;
        break;
      }

      // optional int32 PosId = 3;
      case 3: {
        if (tag == 24) {
         parse_PosId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posid_)));
          set_has_posid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyFreeBoxInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyFreeBoxInfo)
  return false;
#undef DO_
}

void TUnionPartyFreeBoxInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyFreeBoxInfo)
  // optional int32 BoxId = 1;
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->boxid(), output);
  }

  // optional int64 CreateTime = 2;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->createtime(), output);
  }

  // optional int32 PosId = 3;
  if (has_posid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->posid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyFreeBoxInfo)
}

::google::protobuf::uint8* TUnionPartyFreeBoxInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyFreeBoxInfo)
  // optional int32 BoxId = 1;
  if (has_boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->boxid(), target);
  }

  // optional int64 CreateTime = 2;
  if (has_createtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->createtime(), target);
  }

  // optional int32 PosId = 3;
  if (has_posid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->posid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyFreeBoxInfo)
  return target;
}

int TUnionPartyFreeBoxInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 BoxId = 1;
    if (has_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boxid());
    }

    // optional int64 CreateTime = 2;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->createtime());
    }

    // optional int32 PosId = 3;
    if (has_posid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyFreeBoxInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyFreeBoxInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyFreeBoxInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyFreeBoxInfo::MergeFrom(const TUnionPartyFreeBoxInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boxid()) {
      set_boxid(from.boxid());
    }
    if (from.has_createtime()) {
      set_createtime(from.createtime());
    }
    if (from.has_posid()) {
      set_posid(from.posid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyFreeBoxInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyFreeBoxInfo::CopyFrom(const TUnionPartyFreeBoxInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyFreeBoxInfo::IsInitialized() const {

  return true;
}

void TUnionPartyFreeBoxInfo::Swap(TUnionPartyFreeBoxInfo* other) {
  if (other != this) {
    std::swap(boxid_, other->boxid_);
    std::swap(createtime_, other->createtime_);
    std::swap(posid_, other->posid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyFreeBoxInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyFreeBoxInfo_descriptor_;
  metadata.reflection = TUnionPartyFreeBoxInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyRmbBoxInfo::kBoxIdFieldNumber;
const int TUnionPartyRmbBoxInfo::kCreateTimeFieldNumber;
const int TUnionPartyRmbBoxInfo::kPosXFieldNumber;
const int TUnionPartyRmbBoxInfo::kPosYFieldNumber;
const int TUnionPartyRmbBoxInfo::kGoodsIdFieldNumber;
const int TUnionPartyRmbBoxInfo::kUserInfoFieldNumber;
#endif  // !_MSC_VER

TUnionPartyRmbBoxInfo::TUnionPartyRmbBoxInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyRmbBoxInfo)
}

void TUnionPartyRmbBoxInfo::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TUnionPartyRmbBoxInfo::TUnionPartyRmbBoxInfo(const TUnionPartyRmbBoxInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyRmbBoxInfo)
}

void TUnionPartyRmbBoxInfo::SharedCtor() {
  _cached_size_ = 0;
  boxid_ = 0;
  createtime_ = GOOGLE_LONGLONG(0);
  posx_ = 0;
  posy_ = 0;
  goodsid_ = 0;
  userinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyRmbBoxInfo::~TUnionPartyRmbBoxInfo() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyRmbBoxInfo)
  SharedDtor();
}

void TUnionPartyRmbBoxInfo::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void TUnionPartyRmbBoxInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyRmbBoxInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyRmbBoxInfo_descriptor_;
}

const TUnionPartyRmbBoxInfo& TUnionPartyRmbBoxInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyRmbBoxInfo* TUnionPartyRmbBoxInfo::default_instance_ = NULL;

TUnionPartyRmbBoxInfo* TUnionPartyRmbBoxInfo::New() const {
  return new TUnionPartyRmbBoxInfo;
}

void TUnionPartyRmbBoxInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TUnionPartyRmbBoxInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(createtime_, goodsid_);
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyRmbBoxInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyRmbBoxInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 BoxId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boxid_)));
          set_has_boxid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CreateTime;
        break;
      }

      // optional int64 CreateTime = 2;
      case 2: {
        if (tag == 16) {
         parse_CreateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &createtime_)));
          set_has_createtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PosX;
        break;
      }

      // optional int32 PosX = 3;
      case 3: {
        if (tag == 24) {
         parse_PosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posx_)));
          set_has_posx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_PosY;
        break;
      }

      // optional int32 PosY = 4;
      case 4: {
        if (tag == 32) {
         parse_PosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posy_)));
          set_has_posy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_GoodsId;
        break;
      }

      // optional int32 GoodsId = 5;
      case 5: {
        if (tag == 40) {
         parse_GoodsId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_UserInfo;
        break;
      }

      // optional .pb.TUserSimpleInfo UserInfo = 6;
      case 6: {
        if (tag == 50) {
         parse_UserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyRmbBoxInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyRmbBoxInfo)
  return false;
#undef DO_
}

void TUnionPartyRmbBoxInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyRmbBoxInfo)
  // optional int32 BoxId = 1;
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->boxid(), output);
  }

  // optional int64 CreateTime = 2;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->createtime(), output);
  }

  // optional int32 PosX = 3;
  if (has_posx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->posx(), output);
  }

  // optional int32 PosY = 4;
  if (has_posy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->posy(), output);
  }

  // optional int32 GoodsId = 5;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->goodsid(), output);
  }

  // optional .pb.TUserSimpleInfo UserInfo = 6;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->userinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyRmbBoxInfo)
}

::google::protobuf::uint8* TUnionPartyRmbBoxInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyRmbBoxInfo)
  // optional int32 BoxId = 1;
  if (has_boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->boxid(), target);
  }

  // optional int64 CreateTime = 2;
  if (has_createtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->createtime(), target);
  }

  // optional int32 PosX = 3;
  if (has_posx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->posx(), target);
  }

  // optional int32 PosY = 4;
  if (has_posy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->posy(), target);
  }

  // optional int32 GoodsId = 5;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->goodsid(), target);
  }

  // optional .pb.TUserSimpleInfo UserInfo = 6;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->userinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyRmbBoxInfo)
  return target;
}

int TUnionPartyRmbBoxInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 BoxId = 1;
    if (has_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boxid());
    }

    // optional int64 CreateTime = 2;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->createtime());
    }

    // optional int32 PosX = 3;
    if (has_posx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posx());
    }

    // optional int32 PosY = 4;
    if (has_posy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posy());
    }

    // optional int32 GoodsId = 5;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goodsid());
    }

    // optional .pb.TUserSimpleInfo UserInfo = 6;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyRmbBoxInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyRmbBoxInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyRmbBoxInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyRmbBoxInfo::MergeFrom(const TUnionPartyRmbBoxInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boxid()) {
      set_boxid(from.boxid());
    }
    if (from.has_createtime()) {
      set_createtime(from.createtime());
    }
    if (from.has_posx()) {
      set_posx(from.posx());
    }
    if (from.has_posy()) {
      set_posy(from.posy());
    }
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
    if (from.has_userinfo()) {
      mutable_userinfo()->::pb::TUserSimpleInfo::MergeFrom(from.userinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyRmbBoxInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyRmbBoxInfo::CopyFrom(const TUnionPartyRmbBoxInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyRmbBoxInfo::IsInitialized() const {

  return true;
}

void TUnionPartyRmbBoxInfo::Swap(TUnionPartyRmbBoxInfo* other) {
  if (other != this) {
    std::swap(boxid_, other->boxid_);
    std::swap(createtime_, other->createtime_);
    std::swap(posx_, other->posx_);
    std::swap(posy_, other->posy_);
    std::swap(goodsid_, other->goodsid_);
    std::swap(userinfo_, other->userinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyRmbBoxInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyRmbBoxInfo_descriptor_;
  metadata.reflection = TUnionPartyRmbBoxInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyEnterRsp::kStageIdFieldNumber;
const int TUnionPartyEnterRsp::kArrFreeBoxInfoFieldNumber;
const int TUnionPartyEnterRsp::kArrRmbBoxInfoFieldNumber;
#endif  // !_MSC_VER

TUnionPartyEnterRsp::TUnionPartyEnterRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyEnterRsp)
}

void TUnionPartyEnterRsp::InitAsDefaultInstance() {
}

TUnionPartyEnterRsp::TUnionPartyEnterRsp(const TUnionPartyEnterRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyEnterRsp)
}

void TUnionPartyEnterRsp::SharedCtor() {
  _cached_size_ = 0;
  stageid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyEnterRsp::~TUnionPartyEnterRsp() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyEnterRsp)
  SharedDtor();
}

void TUnionPartyEnterRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUnionPartyEnterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyEnterRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyEnterRsp_descriptor_;
}

const TUnionPartyEnterRsp& TUnionPartyEnterRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyEnterRsp* TUnionPartyEnterRsp::default_instance_ = NULL;

TUnionPartyEnterRsp* TUnionPartyEnterRsp::New() const {
  return new TUnionPartyEnterRsp;
}

void TUnionPartyEnterRsp::Clear() {
  stageid_ = 0;
  arrfreeboxinfo_.Clear();
  arrrmbboxinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyEnterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyEnterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.EUnionPartyStage StageId = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EUnionPartyStage_IsValid(value)) {
            set_stageid(static_cast< ::pb::EUnionPartyStage >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrFreeBoxInfo;
        break;
      }

      // repeated .pb.TUnionPartyFreeBoxInfo ArrFreeBoxInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrFreeBoxInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrfreeboxinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrFreeBoxInfo;
        if (input->ExpectTag(26)) goto parse_ArrRmbBoxInfo;
        break;
      }

      // repeated .pb.TUnionPartyRmbBoxInfo ArrRmbBoxInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrRmbBoxInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrmbboxinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrRmbBoxInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyEnterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyEnterRsp)
  return false;
#undef DO_
}

void TUnionPartyEnterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyEnterRsp)
  // optional .pb.EUnionPartyStage StageId = 1;
  if (has_stageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->stageid(), output);
  }

  // repeated .pb.TUnionPartyFreeBoxInfo ArrFreeBoxInfo = 2;
  for (int i = 0; i < this->arrfreeboxinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrfreeboxinfo(i), output);
  }

  // repeated .pb.TUnionPartyRmbBoxInfo ArrRmbBoxInfo = 3;
  for (int i = 0; i < this->arrrmbboxinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrrmbboxinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyEnterRsp)
}

::google::protobuf::uint8* TUnionPartyEnterRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyEnterRsp)
  // optional .pb.EUnionPartyStage StageId = 1;
  if (has_stageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->stageid(), target);
  }

  // repeated .pb.TUnionPartyFreeBoxInfo ArrFreeBoxInfo = 2;
  for (int i = 0; i < this->arrfreeboxinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrfreeboxinfo(i), target);
  }

  // repeated .pb.TUnionPartyRmbBoxInfo ArrRmbBoxInfo = 3;
  for (int i = 0; i < this->arrrmbboxinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrrmbboxinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyEnterRsp)
  return target;
}

int TUnionPartyEnterRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.EUnionPartyStage StageId = 1;
    if (has_stageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stageid());
    }

  }
  // repeated .pb.TUnionPartyFreeBoxInfo ArrFreeBoxInfo = 2;
  total_size += 1 * this->arrfreeboxinfo_size();
  for (int i = 0; i < this->arrfreeboxinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrfreeboxinfo(i));
  }

  // repeated .pb.TUnionPartyRmbBoxInfo ArrRmbBoxInfo = 3;
  total_size += 1 * this->arrrmbboxinfo_size();
  for (int i = 0; i < this->arrrmbboxinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrmbboxinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyEnterRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyEnterRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyEnterRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyEnterRsp::MergeFrom(const TUnionPartyEnterRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrfreeboxinfo_.MergeFrom(from.arrfreeboxinfo_);
  arrrmbboxinfo_.MergeFrom(from.arrrmbboxinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stageid()) {
      set_stageid(from.stageid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyEnterRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyEnterRsp::CopyFrom(const TUnionPartyEnterRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyEnterRsp::IsInitialized() const {

  return true;
}

void TUnionPartyEnterRsp::Swap(TUnionPartyEnterRsp* other) {
  if (other != this) {
    std::swap(stageid_, other->stageid_);
    arrfreeboxinfo_.Swap(&other->arrfreeboxinfo_);
    arrrmbboxinfo_.Swap(&other->arrrmbboxinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyEnterRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyEnterRsp_descriptor_;
  metadata.reflection = TUnionPartyEnterRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyLootReq::kBoxIdFieldNumber;
#endif  // !_MSC_VER

TUnionPartyLootReq::TUnionPartyLootReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyLootReq)
}

void TUnionPartyLootReq::InitAsDefaultInstance() {
}

TUnionPartyLootReq::TUnionPartyLootReq(const TUnionPartyLootReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyLootReq)
}

void TUnionPartyLootReq::SharedCtor() {
  _cached_size_ = 0;
  boxid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyLootReq::~TUnionPartyLootReq() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyLootReq)
  SharedDtor();
}

void TUnionPartyLootReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUnionPartyLootReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyLootReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyLootReq_descriptor_;
}

const TUnionPartyLootReq& TUnionPartyLootReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyLootReq* TUnionPartyLootReq::default_instance_ = NULL;

TUnionPartyLootReq* TUnionPartyLootReq::New() const {
  return new TUnionPartyLootReq;
}

void TUnionPartyLootReq::Clear() {
  boxid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyLootReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyLootReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 BoxId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boxid_)));
          set_has_boxid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyLootReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyLootReq)
  return false;
#undef DO_
}

void TUnionPartyLootReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyLootReq)
  // optional int32 BoxId = 1;
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->boxid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyLootReq)
}

::google::protobuf::uint8* TUnionPartyLootReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyLootReq)
  // optional int32 BoxId = 1;
  if (has_boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->boxid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyLootReq)
  return target;
}

int TUnionPartyLootReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 BoxId = 1;
    if (has_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boxid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyLootReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyLootReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyLootReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyLootReq::MergeFrom(const TUnionPartyLootReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boxid()) {
      set_boxid(from.boxid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyLootReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyLootReq::CopyFrom(const TUnionPartyLootReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyLootReq::IsInitialized() const {

  return true;
}

void TUnionPartyLootReq::Swap(TUnionPartyLootReq* other) {
  if (other != this) {
    std::swap(boxid_, other->boxid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyLootReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyLootReq_descriptor_;
  metadata.reflection = TUnionPartyLootReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyLootRsp::kResultCodeFieldNumber;
const int TUnionPartyLootRsp::kArrRewardFieldNumber;
const int TUnionPartyLootRsp::kIsFreeBoxFieldNumber;
#endif  // !_MSC_VER

TUnionPartyLootRsp::TUnionPartyLootRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyLootRsp)
}

void TUnionPartyLootRsp::InitAsDefaultInstance() {
}

TUnionPartyLootRsp::TUnionPartyLootRsp(const TUnionPartyLootRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyLootRsp)
}

void TUnionPartyLootRsp::SharedCtor() {
  _cached_size_ = 0;
  resultcode_ = 0;
  isfreebox_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyLootRsp::~TUnionPartyLootRsp() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyLootRsp)
  SharedDtor();
}

void TUnionPartyLootRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUnionPartyLootRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyLootRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyLootRsp_descriptor_;
}

const TUnionPartyLootRsp& TUnionPartyLootRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyLootRsp* TUnionPartyLootRsp::default_instance_ = NULL;

TUnionPartyLootRsp* TUnionPartyLootRsp::New() const {
  return new TUnionPartyLootRsp;
}

void TUnionPartyLootRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TUnionPartyLootRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(resultcode_, isfreebox_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyLootRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyLootRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.EUnionPartyLootResult ResultCode = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EUnionPartyLootResult_IsValid(value)) {
            set_resultcode(static_cast< ::pb::EUnionPartyLootResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrReward;
        break;
      }

      // repeated .pb.TCommonReward ArrReward = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrReward;
        if (input->ExpectTag(24)) goto parse_IsFreeBox;
        break;
      }

      // optional bool IsFreeBox = 3;
      case 3: {
        if (tag == 24) {
         parse_IsFreeBox:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfreebox_)));
          set_has_isfreebox();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyLootRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyLootRsp)
  return false;
#undef DO_
}

void TUnionPartyLootRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyLootRsp)
  // optional .pb.EUnionPartyLootResult ResultCode = 1;
  if (has_resultcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->resultcode(), output);
  }

  // repeated .pb.TCommonReward ArrReward = 2;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrreward(i), output);
  }

  // optional bool IsFreeBox = 3;
  if (has_isfreebox()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isfreebox(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyLootRsp)
}

::google::protobuf::uint8* TUnionPartyLootRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyLootRsp)
  // optional .pb.EUnionPartyLootResult ResultCode = 1;
  if (has_resultcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->resultcode(), target);
  }

  // repeated .pb.TCommonReward ArrReward = 2;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrreward(i), target);
  }

  // optional bool IsFreeBox = 3;
  if (has_isfreebox()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isfreebox(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyLootRsp)
  return target;
}

int TUnionPartyLootRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.EUnionPartyLootResult ResultCode = 1;
    if (has_resultcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->resultcode());
    }

    // optional bool IsFreeBox = 3;
    if (has_isfreebox()) {
      total_size += 1 + 1;
    }

  }
  // repeated .pb.TCommonReward ArrReward = 2;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyLootRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyLootRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyLootRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyLootRsp::MergeFrom(const TUnionPartyLootRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resultcode()) {
      set_resultcode(from.resultcode());
    }
    if (from.has_isfreebox()) {
      set_isfreebox(from.isfreebox());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyLootRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyLootRsp::CopyFrom(const TUnionPartyLootRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyLootRsp::IsInitialized() const {

  return true;
}

void TUnionPartyLootRsp::Swap(TUnionPartyLootRsp* other) {
  if (other != this) {
    std::swap(resultcode_, other->resultcode_);
    arrreward_.Swap(&other->arrreward_);
    std::swap(isfreebox_, other->isfreebox_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyLootRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyLootRsp_descriptor_;
  metadata.reflection = TUnionPartyLootRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyBoxRechargeReq::kGoodsIdFieldNumber;
const int TUnionPartyBoxRechargeReq::kPosXFieldNumber;
const int TUnionPartyBoxRechargeReq::kPosYFieldNumber;
#endif  // !_MSC_VER

TUnionPartyBoxRechargeReq::TUnionPartyBoxRechargeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyBoxRechargeReq)
}

void TUnionPartyBoxRechargeReq::InitAsDefaultInstance() {
}

TUnionPartyBoxRechargeReq::TUnionPartyBoxRechargeReq(const TUnionPartyBoxRechargeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyBoxRechargeReq)
}

void TUnionPartyBoxRechargeReq::SharedCtor() {
  _cached_size_ = 0;
  goodsid_ = 0;
  posx_ = 0;
  posy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyBoxRechargeReq::~TUnionPartyBoxRechargeReq() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyBoxRechargeReq)
  SharedDtor();
}

void TUnionPartyBoxRechargeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUnionPartyBoxRechargeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyBoxRechargeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyBoxRechargeReq_descriptor_;
}

const TUnionPartyBoxRechargeReq& TUnionPartyBoxRechargeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyBoxRechargeReq* TUnionPartyBoxRechargeReq::default_instance_ = NULL;

TUnionPartyBoxRechargeReq* TUnionPartyBoxRechargeReq::New() const {
  return new TUnionPartyBoxRechargeReq;
}

void TUnionPartyBoxRechargeReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TUnionPartyBoxRechargeReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(goodsid_, posy_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyBoxRechargeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyBoxRechargeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 GoodsId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PosX;
        break;
      }

      // optional int32 PosX = 3;
      case 3: {
        if (tag == 24) {
         parse_PosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posx_)));
          set_has_posx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_PosY;
        break;
      }

      // optional int32 PosY = 4;
      case 4: {
        if (tag == 32) {
         parse_PosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posy_)));
          set_has_posy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyBoxRechargeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyBoxRechargeReq)
  return false;
#undef DO_
}

void TUnionPartyBoxRechargeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyBoxRechargeReq)
  // optional int32 GoodsId = 1;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->goodsid(), output);
  }

  // optional int32 PosX = 3;
  if (has_posx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->posx(), output);
  }

  // optional int32 PosY = 4;
  if (has_posy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->posy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyBoxRechargeReq)
}

::google::protobuf::uint8* TUnionPartyBoxRechargeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyBoxRechargeReq)
  // optional int32 GoodsId = 1;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->goodsid(), target);
  }

  // optional int32 PosX = 3;
  if (has_posx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->posx(), target);
  }

  // optional int32 PosY = 4;
  if (has_posy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->posy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyBoxRechargeReq)
  return target;
}

int TUnionPartyBoxRechargeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 GoodsId = 1;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goodsid());
    }

    // optional int32 PosX = 3;
    if (has_posx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posx());
    }

    // optional int32 PosY = 4;
    if (has_posy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posy());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyBoxRechargeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyBoxRechargeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyBoxRechargeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyBoxRechargeReq::MergeFrom(const TUnionPartyBoxRechargeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
    if (from.has_posx()) {
      set_posx(from.posx());
    }
    if (from.has_posy()) {
      set_posy(from.posy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyBoxRechargeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyBoxRechargeReq::CopyFrom(const TUnionPartyBoxRechargeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyBoxRechargeReq::IsInitialized() const {

  return true;
}

void TUnionPartyBoxRechargeReq::Swap(TUnionPartyBoxRechargeReq* other) {
  if (other != this) {
    std::swap(goodsid_, other->goodsid_);
    std::swap(posx_, other->posx_);
    std::swap(posy_, other->posy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyBoxRechargeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyBoxRechargeReq_descriptor_;
  metadata.reflection = TUnionPartyBoxRechargeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyBoxRechargeRsp::kGoodsIdFieldNumber;
const int TUnionPartyBoxRechargeRsp::kResultCodeFieldNumber;
#endif  // !_MSC_VER

TUnionPartyBoxRechargeRsp::TUnionPartyBoxRechargeRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyBoxRechargeRsp)
}

void TUnionPartyBoxRechargeRsp::InitAsDefaultInstance() {
}

TUnionPartyBoxRechargeRsp::TUnionPartyBoxRechargeRsp(const TUnionPartyBoxRechargeRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyBoxRechargeRsp)
}

void TUnionPartyBoxRechargeRsp::SharedCtor() {
  _cached_size_ = 0;
  goodsid_ = 0;
  resultcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyBoxRechargeRsp::~TUnionPartyBoxRechargeRsp() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyBoxRechargeRsp)
  SharedDtor();
}

void TUnionPartyBoxRechargeRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUnionPartyBoxRechargeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyBoxRechargeRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyBoxRechargeRsp_descriptor_;
}

const TUnionPartyBoxRechargeRsp& TUnionPartyBoxRechargeRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyBoxRechargeRsp* TUnionPartyBoxRechargeRsp::default_instance_ = NULL;

TUnionPartyBoxRechargeRsp* TUnionPartyBoxRechargeRsp::New() const {
  return new TUnionPartyBoxRechargeRsp;
}

void TUnionPartyBoxRechargeRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TUnionPartyBoxRechargeRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(goodsid_, resultcode_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyBoxRechargeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyBoxRechargeRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 GoodsId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ResultCode;
        break;
      }

      // optional .pb.EUnionPartyRechargeResult ResultCode = 2;
      case 2: {
        if (tag == 16) {
         parse_ResultCode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EUnionPartyRechargeResult_IsValid(value)) {
            set_resultcode(static_cast< ::pb::EUnionPartyRechargeResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyBoxRechargeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyBoxRechargeRsp)
  return false;
#undef DO_
}

void TUnionPartyBoxRechargeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyBoxRechargeRsp)
  // optional int32 GoodsId = 1;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->goodsid(), output);
  }

  // optional .pb.EUnionPartyRechargeResult ResultCode = 2;
  if (has_resultcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->resultcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyBoxRechargeRsp)
}

::google::protobuf::uint8* TUnionPartyBoxRechargeRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyBoxRechargeRsp)
  // optional int32 GoodsId = 1;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->goodsid(), target);
  }

  // optional .pb.EUnionPartyRechargeResult ResultCode = 2;
  if (has_resultcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->resultcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyBoxRechargeRsp)
  return target;
}

int TUnionPartyBoxRechargeRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 GoodsId = 1;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goodsid());
    }

    // optional .pb.EUnionPartyRechargeResult ResultCode = 2;
    if (has_resultcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->resultcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyBoxRechargeRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyBoxRechargeRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyBoxRechargeRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyBoxRechargeRsp::MergeFrom(const TUnionPartyBoxRechargeRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
    if (from.has_resultcode()) {
      set_resultcode(from.resultcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyBoxRechargeRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyBoxRechargeRsp::CopyFrom(const TUnionPartyBoxRechargeRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyBoxRechargeRsp::IsInitialized() const {

  return true;
}

void TUnionPartyBoxRechargeRsp::Swap(TUnionPartyBoxRechargeRsp* other) {
  if (other != this) {
    std::swap(goodsid_, other->goodsid_);
    std::swap(resultcode_, other->resultcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyBoxRechargeRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyBoxRechargeRsp_descriptor_;
  metadata.reflection = TUnionPartyBoxRechargeRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyNotify::kStageIdFieldNumber;
const int TUnionPartyNotify::kArrFreeBoxInfoFieldNumber;
const int TUnionPartyNotify::kArrRmbBoxInfoFieldNumber;
const int TUnionPartyNotify::kOptionFieldNumber;
#endif  // !_MSC_VER

TUnionPartyNotify::TUnionPartyNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyNotify)
}

void TUnionPartyNotify::InitAsDefaultInstance() {
}

TUnionPartyNotify::TUnionPartyNotify(const TUnionPartyNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyNotify)
}

void TUnionPartyNotify::SharedCtor() {
  _cached_size_ = 0;
  stageid_ = 0;
  option_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyNotify::~TUnionPartyNotify() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyNotify)
  SharedDtor();
}

void TUnionPartyNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUnionPartyNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyNotify_descriptor_;
}

const TUnionPartyNotify& TUnionPartyNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyNotify* TUnionPartyNotify::default_instance_ = NULL;

TUnionPartyNotify* TUnionPartyNotify::New() const {
  return new TUnionPartyNotify;
}

void TUnionPartyNotify::Clear() {
  if (_has_bits_[0 / 32] & 9) {
    stageid_ = 0;
    option_ = 1;
  }
  arrfreeboxinfo_.Clear();
  arrrmbboxinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.EUnionPartyStage StageId = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EUnionPartyStage_IsValid(value)) {
            set_stageid(static_cast< ::pb::EUnionPartyStage >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrFreeBoxInfo;
        break;
      }

      // repeated .pb.TUnionPartyFreeBoxInfo ArrFreeBoxInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrFreeBoxInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrfreeboxinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrFreeBoxInfo;
        if (input->ExpectTag(26)) goto parse_ArrRmbBoxInfo;
        break;
      }

      // repeated .pb.TUnionPartyRmbBoxInfo ArrRmbBoxInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrRmbBoxInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrmbboxinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrRmbBoxInfo;
        if (input->ExpectTag(32)) goto parse_Option;
        break;
      }

      // optional .pb.EUnionPartyOption Option = 4;
      case 4: {
        if (tag == 32) {
         parse_Option:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EUnionPartyOption_IsValid(value)) {
            set_option(static_cast< ::pb::EUnionPartyOption >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyNotify)
  return false;
#undef DO_
}

void TUnionPartyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyNotify)
  // optional .pb.EUnionPartyStage StageId = 1;
  if (has_stageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->stageid(), output);
  }

  // repeated .pb.TUnionPartyFreeBoxInfo ArrFreeBoxInfo = 2;
  for (int i = 0; i < this->arrfreeboxinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrfreeboxinfo(i), output);
  }

  // repeated .pb.TUnionPartyRmbBoxInfo ArrRmbBoxInfo = 3;
  for (int i = 0; i < this->arrrmbboxinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrrmbboxinfo(i), output);
  }

  // optional .pb.EUnionPartyOption Option = 4;
  if (has_option()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->option(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyNotify)
}

::google::protobuf::uint8* TUnionPartyNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyNotify)
  // optional .pb.EUnionPartyStage StageId = 1;
  if (has_stageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->stageid(), target);
  }

  // repeated .pb.TUnionPartyFreeBoxInfo ArrFreeBoxInfo = 2;
  for (int i = 0; i < this->arrfreeboxinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrfreeboxinfo(i), target);
  }

  // repeated .pb.TUnionPartyRmbBoxInfo ArrRmbBoxInfo = 3;
  for (int i = 0; i < this->arrrmbboxinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrrmbboxinfo(i), target);
  }

  // optional .pb.EUnionPartyOption Option = 4;
  if (has_option()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->option(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyNotify)
  return target;
}

int TUnionPartyNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.EUnionPartyStage StageId = 1;
    if (has_stageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stageid());
    }

    // optional .pb.EUnionPartyOption Option = 4;
    if (has_option()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->option());
    }

  }
  // repeated .pb.TUnionPartyFreeBoxInfo ArrFreeBoxInfo = 2;
  total_size += 1 * this->arrfreeboxinfo_size();
  for (int i = 0; i < this->arrfreeboxinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrfreeboxinfo(i));
  }

  // repeated .pb.TUnionPartyRmbBoxInfo ArrRmbBoxInfo = 3;
  total_size += 1 * this->arrrmbboxinfo_size();
  for (int i = 0; i < this->arrrmbboxinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrmbboxinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyNotify::MergeFrom(const TUnionPartyNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrfreeboxinfo_.MergeFrom(from.arrfreeboxinfo_);
  arrrmbboxinfo_.MergeFrom(from.arrrmbboxinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stageid()) {
      set_stageid(from.stageid());
    }
    if (from.has_option()) {
      set_option(from.option());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyNotify::CopyFrom(const TUnionPartyNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyNotify::IsInitialized() const {

  return true;
}

void TUnionPartyNotify::Swap(TUnionPartyNotify* other) {
  if (other != this) {
    std::swap(stageid_, other->stageid_);
    arrfreeboxinfo_.Swap(&other->arrfreeboxinfo_);
    arrrmbboxinfo_.Swap(&other->arrrmbboxinfo_);
    std::swap(option_, other->option_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyNotify_descriptor_;
  metadata.reflection = TUnionPartyNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUnionPartyStartNotify::kPartyIdFieldNumber;
const int TUnionPartyStartNotify::kStartTimeFieldNumber;
const int TUnionPartyStartNotify::kStageIdFieldNumber;
#endif  // !_MSC_VER

TUnionPartyStartNotify::TUnionPartyStartNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUnionPartyStartNotify)
}

void TUnionPartyStartNotify::InitAsDefaultInstance() {
}

TUnionPartyStartNotify::TUnionPartyStartNotify(const TUnionPartyStartNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUnionPartyStartNotify)
}

void TUnionPartyStartNotify::SharedCtor() {
  _cached_size_ = 0;
  partyid_ = GOOGLE_ULONGLONG(0);
  starttime_ = GOOGLE_LONGLONG(0);
  stageid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUnionPartyStartNotify::~TUnionPartyStartNotify() {
  // @@protoc_insertion_point(destructor:pb.TUnionPartyStartNotify)
  SharedDtor();
}

void TUnionPartyStartNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUnionPartyStartNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUnionPartyStartNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUnionPartyStartNotify_descriptor_;
}

const TUnionPartyStartNotify& TUnionPartyStartNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fUnionParty_2eproto();
  return *default_instance_;
}

TUnionPartyStartNotify* TUnionPartyStartNotify::default_instance_ = NULL;

TUnionPartyStartNotify* TUnionPartyStartNotify::New() const {
  return new TUnionPartyStartNotify;
}

void TUnionPartyStartNotify::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TUnionPartyStartNotify*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(partyid_, stageid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUnionPartyStartNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUnionPartyStartNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 PartyId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &partyid_)));
          set_has_partyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StartTime;
        break;
      }

      // optional int64 StartTime = 2;
      case 2: {
        if (tag == 16) {
         parse_StartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_StageId;
        break;
      }

      // optional .pb.EUnionPartyStage StageId = 3;
      case 3: {
        if (tag == 24) {
         parse_StageId:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EUnionPartyStage_IsValid(value)) {
            set_stageid(static_cast< ::pb::EUnionPartyStage >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUnionPartyStartNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUnionPartyStartNotify)
  return false;
#undef DO_
}

void TUnionPartyStartNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUnionPartyStartNotify)
  // optional uint64 PartyId = 1;
  if (has_partyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->partyid(), output);
  }

  // optional int64 StartTime = 2;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->starttime(), output);
  }

  // optional .pb.EUnionPartyStage StageId = 3;
  if (has_stageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->stageid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUnionPartyStartNotify)
}

::google::protobuf::uint8* TUnionPartyStartNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUnionPartyStartNotify)
  // optional uint64 PartyId = 1;
  if (has_partyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->partyid(), target);
  }

  // optional int64 StartTime = 2;
  if (has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->starttime(), target);
  }

  // optional .pb.EUnionPartyStage StageId = 3;
  if (has_stageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->stageid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUnionPartyStartNotify)
  return target;
}

int TUnionPartyStartNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 PartyId = 1;
    if (has_partyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->partyid());
    }

    // optional int64 StartTime = 2;
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->starttime());
    }

    // optional .pb.EUnionPartyStage StageId = 3;
    if (has_stageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stageid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUnionPartyStartNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUnionPartyStartNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUnionPartyStartNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUnionPartyStartNotify::MergeFrom(const TUnionPartyStartNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_partyid()) {
      set_partyid(from.partyid());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
    if (from.has_stageid()) {
      set_stageid(from.stageid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUnionPartyStartNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUnionPartyStartNotify::CopyFrom(const TUnionPartyStartNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUnionPartyStartNotify::IsInitialized() const {

  return true;
}

void TUnionPartyStartNotify::Swap(TUnionPartyStartNotify* other) {
  if (other != this) {
    std::swap(partyid_, other->partyid_);
    std::swap(starttime_, other->starttime_);
    std::swap(stageid_, other->stageid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUnionPartyStartNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUnionPartyStartNotify_descriptor_;
  metadata.reflection = TUnionPartyStartNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
