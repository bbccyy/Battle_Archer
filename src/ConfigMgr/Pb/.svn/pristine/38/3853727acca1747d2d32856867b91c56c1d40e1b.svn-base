// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/BeautyHouse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/BeautyHouse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TBeautyHouseBeautyInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeautyHouseBeautyInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeautyHouseCharmValueInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeautyHouseCharmValueInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeautyHouseSkillInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeautyHouseSkillInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeautyHouseGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeautyHouseGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeautyHouseBeautyUpgradeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeautyHouseBeautyUpgradeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeautyHouseInteractBeautyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeautyHouseInteractBeautyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeautyHouseReceiveBoxRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeautyHouseReceiveBoxRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeautyHouseReceiveBoxRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeautyHouseReceiveBoxRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeautyHouseSkillUpgradeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeautyHouseSkillUpgradeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBeautyHouseChangeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBeautyHouseChangeNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fBeautyHouse_2eproto() {
  protobuf_AddDesc_net_2fBeautyHouse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/BeautyHouse.proto");
  GOOGLE_CHECK(file != NULL);
  TBeautyHouseBeautyInfo_descriptor_ = file->message_type(0);
  static const int TBeautyHouseBeautyInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseBeautyInfo, bid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseBeautyInfo, beautylv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseBeautyInfo, intimatelv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseBeautyInfo, intimateexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseBeautyInfo, receivedboxarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseBeautyInfo, interactnum_),
  };
  TBeautyHouseBeautyInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeautyHouseBeautyInfo_descriptor_,
      TBeautyHouseBeautyInfo::default_instance_,
      TBeautyHouseBeautyInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseBeautyInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseBeautyInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeautyHouseBeautyInfo));
  TBeautyHouseCharmValueInfo_descriptor_ = file->message_type(1);
  static const int TBeautyHouseCharmValueInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseCharmValueInfo, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseCharmValueInfo, charmvalue_),
  };
  TBeautyHouseCharmValueInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeautyHouseCharmValueInfo_descriptor_,
      TBeautyHouseCharmValueInfo::default_instance_,
      TBeautyHouseCharmValueInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseCharmValueInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseCharmValueInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeautyHouseCharmValueInfo));
  TBeautyHouseSkillInfo_descriptor_ = file->message_type(2);
  static const int TBeautyHouseSkillInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseSkillInfo, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseSkillInfo, skillindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseSkillInfo, skilllv_),
  };
  TBeautyHouseSkillInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeautyHouseSkillInfo_descriptor_,
      TBeautyHouseSkillInfo::default_instance_,
      TBeautyHouseSkillInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseSkillInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseSkillInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeautyHouseSkillInfo));
  TBeautyHouseGetInfoRsp_descriptor_ = file->message_type(3);
  static const int TBeautyHouseGetInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseGetInfoRsp, beautyarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseGetInfoRsp, skillinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseGetInfoRsp, charmvalue_),
  };
  TBeautyHouseGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeautyHouseGetInfoRsp_descriptor_,
      TBeautyHouseGetInfoRsp::default_instance_,
      TBeautyHouseGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeautyHouseGetInfoRsp));
  TBeautyHouseBeautyUpgradeReq_descriptor_ = file->message_type(4);
  static const int TBeautyHouseBeautyUpgradeReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseBeautyUpgradeReq, bid_),
  };
  TBeautyHouseBeautyUpgradeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeautyHouseBeautyUpgradeReq_descriptor_,
      TBeautyHouseBeautyUpgradeReq::default_instance_,
      TBeautyHouseBeautyUpgradeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseBeautyUpgradeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseBeautyUpgradeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeautyHouseBeautyUpgradeReq));
  TBeautyHouseInteractBeautyReq_descriptor_ = file->message_type(5);
  static const int TBeautyHouseInteractBeautyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseInteractBeautyReq, bid_),
  };
  TBeautyHouseInteractBeautyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeautyHouseInteractBeautyReq_descriptor_,
      TBeautyHouseInteractBeautyReq::default_instance_,
      TBeautyHouseInteractBeautyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseInteractBeautyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseInteractBeautyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeautyHouseInteractBeautyReq));
  TBeautyHouseReceiveBoxRewardReq_descriptor_ = file->message_type(6);
  static const int TBeautyHouseReceiveBoxRewardReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseReceiveBoxRewardReq, bid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseReceiveBoxRewardReq, boxlv_),
  };
  TBeautyHouseReceiveBoxRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeautyHouseReceiveBoxRewardReq_descriptor_,
      TBeautyHouseReceiveBoxRewardReq::default_instance_,
      TBeautyHouseReceiveBoxRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseReceiveBoxRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseReceiveBoxRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeautyHouseReceiveBoxRewardReq));
  TBeautyHouseReceiveBoxRewardRsp_descriptor_ = file->message_type(7);
  static const int TBeautyHouseReceiveBoxRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseReceiveBoxRewardRsp, rewardarr_),
  };
  TBeautyHouseReceiveBoxRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeautyHouseReceiveBoxRewardRsp_descriptor_,
      TBeautyHouseReceiveBoxRewardRsp::default_instance_,
      TBeautyHouseReceiveBoxRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseReceiveBoxRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseReceiveBoxRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeautyHouseReceiveBoxRewardRsp));
  TBeautyHouseSkillUpgradeReq_descriptor_ = file->message_type(8);
  static const int TBeautyHouseSkillUpgradeReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseSkillUpgradeReq, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseSkillUpgradeReq, index_),
  };
  TBeautyHouseSkillUpgradeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeautyHouseSkillUpgradeReq_descriptor_,
      TBeautyHouseSkillUpgradeReq::default_instance_,
      TBeautyHouseSkillUpgradeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseSkillUpgradeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseSkillUpgradeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeautyHouseSkillUpgradeReq));
  TBeautyHouseChangeNotify_descriptor_ = file->message_type(9);
  static const int TBeautyHouseChangeNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseChangeNotify, beauty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseChangeNotify, charmvalueinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseChangeNotify, skillinfo_),
  };
  TBeautyHouseChangeNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBeautyHouseChangeNotify_descriptor_,
      TBeautyHouseChangeNotify::default_instance_,
      TBeautyHouseChangeNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseChangeNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBeautyHouseChangeNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBeautyHouseChangeNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fBeautyHouse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeautyHouseBeautyInfo_descriptor_, &TBeautyHouseBeautyInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeautyHouseCharmValueInfo_descriptor_, &TBeautyHouseCharmValueInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeautyHouseSkillInfo_descriptor_, &TBeautyHouseSkillInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeautyHouseGetInfoRsp_descriptor_, &TBeautyHouseGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeautyHouseBeautyUpgradeReq_descriptor_, &TBeautyHouseBeautyUpgradeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeautyHouseInteractBeautyReq_descriptor_, &TBeautyHouseInteractBeautyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeautyHouseReceiveBoxRewardReq_descriptor_, &TBeautyHouseReceiveBoxRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeautyHouseReceiveBoxRewardRsp_descriptor_, &TBeautyHouseReceiveBoxRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeautyHouseSkillUpgradeReq_descriptor_, &TBeautyHouseSkillUpgradeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBeautyHouseChangeNotify_descriptor_, &TBeautyHouseChangeNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fBeautyHouse_2eproto() {
  delete TBeautyHouseBeautyInfo::default_instance_;
  delete TBeautyHouseBeautyInfo_reflection_;
  delete TBeautyHouseCharmValueInfo::default_instance_;
  delete TBeautyHouseCharmValueInfo_reflection_;
  delete TBeautyHouseSkillInfo::default_instance_;
  delete TBeautyHouseSkillInfo_reflection_;
  delete TBeautyHouseGetInfoRsp::default_instance_;
  delete TBeautyHouseGetInfoRsp_reflection_;
  delete TBeautyHouseBeautyUpgradeReq::default_instance_;
  delete TBeautyHouseBeautyUpgradeReq_reflection_;
  delete TBeautyHouseInteractBeautyReq::default_instance_;
  delete TBeautyHouseInteractBeautyReq_reflection_;
  delete TBeautyHouseReceiveBoxRewardReq::default_instance_;
  delete TBeautyHouseReceiveBoxRewardReq_reflection_;
  delete TBeautyHouseReceiveBoxRewardRsp::default_instance_;
  delete TBeautyHouseReceiveBoxRewardRsp_reflection_;
  delete TBeautyHouseSkillUpgradeReq::default_instance_;
  delete TBeautyHouseSkillUpgradeReq_reflection_;
  delete TBeautyHouseChangeNotify::default_instance_;
  delete TBeautyHouseChangeNotify_reflection_;
}

void protobuf_AddDesc_net_2fBeautyHouse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommon_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025net/BeautyHouse.proto\022\002pb\032\020net/Common."
    "proto\032\026net/CommonReward.proto\032\016net/User."
    "proto\"\215\001\n\026TBeautyHouseBeautyInfo\022\013\n\003Bid\030"
    "\001 \001(\r\022\020\n\010BeautyLv\030\002 \001(\r\022\022\n\nIntimateLv\030\003 "
    "\001(\r\022\023\n\013IntimateExp\030\004 \001(\r\022\026\n\016ReceivedBoxA"
    "rr\030\005 \003(\r\022\023\n\013InteractNum\030\006 \001(\r\"A\n\032TBeauty"
    "HouseCharmValueInfo\022\017\n\007Quality\030\001 \001(\r\022\022\n\n"
    "CharmValue\030\002 \001(\r\"M\n\025TBeautyHouseSkillInf"
    "o\022\017\n\007Quality\030\001 \001(\r\022\022\n\nSkillIndex\030\002 \001(\r\022\017"
    "\n\007SkillLv\030\003 \001(\r\"\251\001\n\026TBeautyHouseGetInfoR"
    "sp\022-\n\tBeautyArr\030\001 \003(\0132\032.pb.TBeautyHouseB"
    "eautyInfo\022,\n\tSkillInfo\030\002 \003(\0132\031.pb.TBeaut"
    "yHouseSkillInfo\0222\n\nCharmValue\030\003 \003(\0132\036.pb"
    ".TBeautyHouseCharmValueInfo\"+\n\034TBeautyHo"
    "useBeautyUpgradeReq\022\013\n\003Bid\030\001 \001(\r\",\n\035TBea"
    "utyHouseInteractBeautyReq\022\013\n\003Bid\030\001 \001(\r\"="
    "\n\037TBeautyHouseReceiveBoxRewardReq\022\013\n\003Bid"
    "\030\001 \001(\r\022\r\n\005BoxLv\030\002 \001(\r\"G\n\037TBeautyHouseRec"
    "eiveBoxRewardRsp\022$\n\tRewardArr\030\001 \003(\0132\021.pb"
    ".TCommonReward\"=\n\033TBeautyHouseSkillUpgra"
    "deReq\022\017\n\007Quality\030\001 \001(\r\022\r\n\005Index\030\002 \001(\r\"\254\001"
    "\n\030TBeautyHouseChangeNotify\022*\n\006Beauty\030\001 \001"
    "(\0132\032.pb.TBeautyHouseBeautyInfo\0226\n\016CharmV"
    "alueInfo\030\002 \001(\0132\036.pb.TBeautyHouseCharmVal"
    "ueInfo\022,\n\tSkillInfo\030\003 \001(\0132\031.pb.TBeautyHo"
    "useSkillInfo", 1012);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/BeautyHouse.proto", &protobuf_RegisterTypes);
  TBeautyHouseBeautyInfo::default_instance_ = new TBeautyHouseBeautyInfo();
  TBeautyHouseCharmValueInfo::default_instance_ = new TBeautyHouseCharmValueInfo();
  TBeautyHouseSkillInfo::default_instance_ = new TBeautyHouseSkillInfo();
  TBeautyHouseGetInfoRsp::default_instance_ = new TBeautyHouseGetInfoRsp();
  TBeautyHouseBeautyUpgradeReq::default_instance_ = new TBeautyHouseBeautyUpgradeReq();
  TBeautyHouseInteractBeautyReq::default_instance_ = new TBeautyHouseInteractBeautyReq();
  TBeautyHouseReceiveBoxRewardReq::default_instance_ = new TBeautyHouseReceiveBoxRewardReq();
  TBeautyHouseReceiveBoxRewardRsp::default_instance_ = new TBeautyHouseReceiveBoxRewardRsp();
  TBeautyHouseSkillUpgradeReq::default_instance_ = new TBeautyHouseSkillUpgradeReq();
  TBeautyHouseChangeNotify::default_instance_ = new TBeautyHouseChangeNotify();
  TBeautyHouseBeautyInfo::default_instance_->InitAsDefaultInstance();
  TBeautyHouseCharmValueInfo::default_instance_->InitAsDefaultInstance();
  TBeautyHouseSkillInfo::default_instance_->InitAsDefaultInstance();
  TBeautyHouseGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TBeautyHouseBeautyUpgradeReq::default_instance_->InitAsDefaultInstance();
  TBeautyHouseInteractBeautyReq::default_instance_->InitAsDefaultInstance();
  TBeautyHouseReceiveBoxRewardReq::default_instance_->InitAsDefaultInstance();
  TBeautyHouseReceiveBoxRewardRsp::default_instance_->InitAsDefaultInstance();
  TBeautyHouseSkillUpgradeReq::default_instance_->InitAsDefaultInstance();
  TBeautyHouseChangeNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fBeautyHouse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fBeautyHouse_2eproto {
  StaticDescriptorInitializer_net_2fBeautyHouse_2eproto() {
    protobuf_AddDesc_net_2fBeautyHouse_2eproto();
  }
} static_descriptor_initializer_net_2fBeautyHouse_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TBeautyHouseBeautyInfo::kBidFieldNumber;
const int TBeautyHouseBeautyInfo::kBeautyLvFieldNumber;
const int TBeautyHouseBeautyInfo::kIntimateLvFieldNumber;
const int TBeautyHouseBeautyInfo::kIntimateExpFieldNumber;
const int TBeautyHouseBeautyInfo::kReceivedBoxArrFieldNumber;
const int TBeautyHouseBeautyInfo::kInteractNumFieldNumber;
#endif  // !_MSC_VER

TBeautyHouseBeautyInfo::TBeautyHouseBeautyInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeautyHouseBeautyInfo)
}

void TBeautyHouseBeautyInfo::InitAsDefaultInstance() {
}

TBeautyHouseBeautyInfo::TBeautyHouseBeautyInfo(const TBeautyHouseBeautyInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeautyHouseBeautyInfo)
}

void TBeautyHouseBeautyInfo::SharedCtor() {
  _cached_size_ = 0;
  bid_ = 0u;
  beautylv_ = 0u;
  intimatelv_ = 0u;
  intimateexp_ = 0u;
  interactnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeautyHouseBeautyInfo::~TBeautyHouseBeautyInfo() {
  // @@protoc_insertion_point(destructor:pb.TBeautyHouseBeautyInfo)
  SharedDtor();
}

void TBeautyHouseBeautyInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeautyHouseBeautyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeautyHouseBeautyInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeautyHouseBeautyInfo_descriptor_;
}

const TBeautyHouseBeautyInfo& TBeautyHouseBeautyInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeautyHouse_2eproto();
  return *default_instance_;
}

TBeautyHouseBeautyInfo* TBeautyHouseBeautyInfo::default_instance_ = NULL;

TBeautyHouseBeautyInfo* TBeautyHouseBeautyInfo::New() const {
  return new TBeautyHouseBeautyInfo;
}

void TBeautyHouseBeautyInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeautyHouseBeautyInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 47) {
    ZR_(bid_, intimateexp_);
    interactnum_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  receivedboxarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeautyHouseBeautyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeautyHouseBeautyInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Bid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bid_)));
          set_has_bid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BeautyLv;
        break;
      }

      // optional uint32 BeautyLv = 2;
      case 2: {
        if (tag == 16) {
         parse_BeautyLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beautylv_)));
          set_has_beautylv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_IntimateLv;
        break;
      }

      // optional uint32 IntimateLv = 3;
      case 3: {
        if (tag == 24) {
         parse_IntimateLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intimatelv_)));
          set_has_intimatelv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_IntimateExp;
        break;
      }

      // optional uint32 IntimateExp = 4;
      case 4: {
        if (tag == 32) {
         parse_IntimateExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intimateexp_)));
          set_has_intimateexp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ReceivedBoxArr;
        break;
      }

      // repeated uint32 ReceivedBoxArr = 5;
      case 5: {
        if (tag == 40) {
         parse_ReceivedBoxArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_receivedboxarr())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_receivedboxarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ReceivedBoxArr;
        if (input->ExpectTag(48)) goto parse_InteractNum;
        break;
      }

      // optional uint32 InteractNum = 6;
      case 6: {
        if (tag == 48) {
         parse_InteractNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &interactnum_)));
          set_has_interactnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeautyHouseBeautyInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeautyHouseBeautyInfo)
  return false;
#undef DO_
}

void TBeautyHouseBeautyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeautyHouseBeautyInfo)
  // optional uint32 Bid = 1;
  if (has_bid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bid(), output);
  }

  // optional uint32 BeautyLv = 2;
  if (has_beautylv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->beautylv(), output);
  }

  // optional uint32 IntimateLv = 3;
  if (has_intimatelv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->intimatelv(), output);
  }

  // optional uint32 IntimateExp = 4;
  if (has_intimateexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->intimateexp(), output);
  }

  // repeated uint32 ReceivedBoxArr = 5;
  for (int i = 0; i < this->receivedboxarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->receivedboxarr(i), output);
  }

  // optional uint32 InteractNum = 6;
  if (has_interactnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->interactnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeautyHouseBeautyInfo)
}

::google::protobuf::uint8* TBeautyHouseBeautyInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeautyHouseBeautyInfo)
  // optional uint32 Bid = 1;
  if (has_bid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bid(), target);
  }

  // optional uint32 BeautyLv = 2;
  if (has_beautylv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->beautylv(), target);
  }

  // optional uint32 IntimateLv = 3;
  if (has_intimatelv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->intimatelv(), target);
  }

  // optional uint32 IntimateExp = 4;
  if (has_intimateexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->intimateexp(), target);
  }

  // repeated uint32 ReceivedBoxArr = 5;
  for (int i = 0; i < this->receivedboxarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->receivedboxarr(i), target);
  }

  // optional uint32 InteractNum = 6;
  if (has_interactnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->interactnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeautyHouseBeautyInfo)
  return target;
}

int TBeautyHouseBeautyInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Bid = 1;
    if (has_bid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bid());
    }

    // optional uint32 BeautyLv = 2;
    if (has_beautylv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beautylv());
    }

    // optional uint32 IntimateLv = 3;
    if (has_intimatelv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->intimatelv());
    }

    // optional uint32 IntimateExp = 4;
    if (has_intimateexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->intimateexp());
    }

    // optional uint32 InteractNum = 6;
    if (has_interactnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->interactnum());
    }

  }
  // repeated uint32 ReceivedBoxArr = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->receivedboxarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->receivedboxarr(i));
    }
    total_size += 1 * this->receivedboxarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeautyHouseBeautyInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeautyHouseBeautyInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeautyHouseBeautyInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeautyHouseBeautyInfo::MergeFrom(const TBeautyHouseBeautyInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  receivedboxarr_.MergeFrom(from.receivedboxarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bid()) {
      set_bid(from.bid());
    }
    if (from.has_beautylv()) {
      set_beautylv(from.beautylv());
    }
    if (from.has_intimatelv()) {
      set_intimatelv(from.intimatelv());
    }
    if (from.has_intimateexp()) {
      set_intimateexp(from.intimateexp());
    }
    if (from.has_interactnum()) {
      set_interactnum(from.interactnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeautyHouseBeautyInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeautyHouseBeautyInfo::CopyFrom(const TBeautyHouseBeautyInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeautyHouseBeautyInfo::IsInitialized() const {

  return true;
}

void TBeautyHouseBeautyInfo::Swap(TBeautyHouseBeautyInfo* other) {
  if (other != this) {
    std::swap(bid_, other->bid_);
    std::swap(beautylv_, other->beautylv_);
    std::swap(intimatelv_, other->intimatelv_);
    std::swap(intimateexp_, other->intimateexp_);
    receivedboxarr_.Swap(&other->receivedboxarr_);
    std::swap(interactnum_, other->interactnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeautyHouseBeautyInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeautyHouseBeautyInfo_descriptor_;
  metadata.reflection = TBeautyHouseBeautyInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeautyHouseCharmValueInfo::kQualityFieldNumber;
const int TBeautyHouseCharmValueInfo::kCharmValueFieldNumber;
#endif  // !_MSC_VER

TBeautyHouseCharmValueInfo::TBeautyHouseCharmValueInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeautyHouseCharmValueInfo)
}

void TBeautyHouseCharmValueInfo::InitAsDefaultInstance() {
}

TBeautyHouseCharmValueInfo::TBeautyHouseCharmValueInfo(const TBeautyHouseCharmValueInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeautyHouseCharmValueInfo)
}

void TBeautyHouseCharmValueInfo::SharedCtor() {
  _cached_size_ = 0;
  quality_ = 0u;
  charmvalue_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeautyHouseCharmValueInfo::~TBeautyHouseCharmValueInfo() {
  // @@protoc_insertion_point(destructor:pb.TBeautyHouseCharmValueInfo)
  SharedDtor();
}

void TBeautyHouseCharmValueInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeautyHouseCharmValueInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeautyHouseCharmValueInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeautyHouseCharmValueInfo_descriptor_;
}

const TBeautyHouseCharmValueInfo& TBeautyHouseCharmValueInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeautyHouse_2eproto();
  return *default_instance_;
}

TBeautyHouseCharmValueInfo* TBeautyHouseCharmValueInfo::default_instance_ = NULL;

TBeautyHouseCharmValueInfo* TBeautyHouseCharmValueInfo::New() const {
  return new TBeautyHouseCharmValueInfo;
}

void TBeautyHouseCharmValueInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeautyHouseCharmValueInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(quality_, charmvalue_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeautyHouseCharmValueInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeautyHouseCharmValueInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Quality = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CharmValue;
        break;
      }

      // optional uint32 CharmValue = 2;
      case 2: {
        if (tag == 16) {
         parse_CharmValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &charmvalue_)));
          set_has_charmvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeautyHouseCharmValueInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeautyHouseCharmValueInfo)
  return false;
#undef DO_
}

void TBeautyHouseCharmValueInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeautyHouseCharmValueInfo)
  // optional uint32 Quality = 1;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->quality(), output);
  }

  // optional uint32 CharmValue = 2;
  if (has_charmvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->charmvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeautyHouseCharmValueInfo)
}

::google::protobuf::uint8* TBeautyHouseCharmValueInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeautyHouseCharmValueInfo)
  // optional uint32 Quality = 1;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->quality(), target);
  }

  // optional uint32 CharmValue = 2;
  if (has_charmvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->charmvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeautyHouseCharmValueInfo)
  return target;
}

int TBeautyHouseCharmValueInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Quality = 1;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quality());
    }

    // optional uint32 CharmValue = 2;
    if (has_charmvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->charmvalue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeautyHouseCharmValueInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeautyHouseCharmValueInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeautyHouseCharmValueInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeautyHouseCharmValueInfo::MergeFrom(const TBeautyHouseCharmValueInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_charmvalue()) {
      set_charmvalue(from.charmvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeautyHouseCharmValueInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeautyHouseCharmValueInfo::CopyFrom(const TBeautyHouseCharmValueInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeautyHouseCharmValueInfo::IsInitialized() const {

  return true;
}

void TBeautyHouseCharmValueInfo::Swap(TBeautyHouseCharmValueInfo* other) {
  if (other != this) {
    std::swap(quality_, other->quality_);
    std::swap(charmvalue_, other->charmvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeautyHouseCharmValueInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeautyHouseCharmValueInfo_descriptor_;
  metadata.reflection = TBeautyHouseCharmValueInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeautyHouseSkillInfo::kQualityFieldNumber;
const int TBeautyHouseSkillInfo::kSkillIndexFieldNumber;
const int TBeautyHouseSkillInfo::kSkillLvFieldNumber;
#endif  // !_MSC_VER

TBeautyHouseSkillInfo::TBeautyHouseSkillInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeautyHouseSkillInfo)
}

void TBeautyHouseSkillInfo::InitAsDefaultInstance() {
}

TBeautyHouseSkillInfo::TBeautyHouseSkillInfo(const TBeautyHouseSkillInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeautyHouseSkillInfo)
}

void TBeautyHouseSkillInfo::SharedCtor() {
  _cached_size_ = 0;
  quality_ = 0u;
  skillindex_ = 0u;
  skilllv_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeautyHouseSkillInfo::~TBeautyHouseSkillInfo() {
  // @@protoc_insertion_point(destructor:pb.TBeautyHouseSkillInfo)
  SharedDtor();
}

void TBeautyHouseSkillInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeautyHouseSkillInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeautyHouseSkillInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeautyHouseSkillInfo_descriptor_;
}

const TBeautyHouseSkillInfo& TBeautyHouseSkillInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeautyHouse_2eproto();
  return *default_instance_;
}

TBeautyHouseSkillInfo* TBeautyHouseSkillInfo::default_instance_ = NULL;

TBeautyHouseSkillInfo* TBeautyHouseSkillInfo::New() const {
  return new TBeautyHouseSkillInfo;
}

void TBeautyHouseSkillInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeautyHouseSkillInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(quality_, skilllv_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeautyHouseSkillInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeautyHouseSkillInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Quality = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SkillIndex;
        break;
      }

      // optional uint32 SkillIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_SkillIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillindex_)));
          set_has_skillindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SkillLv;
        break;
      }

      // optional uint32 SkillLv = 3;
      case 3: {
        if (tag == 24) {
         parse_SkillLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skilllv_)));
          set_has_skilllv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeautyHouseSkillInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeautyHouseSkillInfo)
  return false;
#undef DO_
}

void TBeautyHouseSkillInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeautyHouseSkillInfo)
  // optional uint32 Quality = 1;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->quality(), output);
  }

  // optional uint32 SkillIndex = 2;
  if (has_skillindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->skillindex(), output);
  }

  // optional uint32 SkillLv = 3;
  if (has_skilllv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->skilllv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeautyHouseSkillInfo)
}

::google::protobuf::uint8* TBeautyHouseSkillInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeautyHouseSkillInfo)
  // optional uint32 Quality = 1;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->quality(), target);
  }

  // optional uint32 SkillIndex = 2;
  if (has_skillindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->skillindex(), target);
  }

  // optional uint32 SkillLv = 3;
  if (has_skilllv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->skilllv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeautyHouseSkillInfo)
  return target;
}

int TBeautyHouseSkillInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Quality = 1;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quality());
    }

    // optional uint32 SkillIndex = 2;
    if (has_skillindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skillindex());
    }

    // optional uint32 SkillLv = 3;
    if (has_skilllv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skilllv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeautyHouseSkillInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeautyHouseSkillInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeautyHouseSkillInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeautyHouseSkillInfo::MergeFrom(const TBeautyHouseSkillInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_skillindex()) {
      set_skillindex(from.skillindex());
    }
    if (from.has_skilllv()) {
      set_skilllv(from.skilllv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeautyHouseSkillInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeautyHouseSkillInfo::CopyFrom(const TBeautyHouseSkillInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeautyHouseSkillInfo::IsInitialized() const {

  return true;
}

void TBeautyHouseSkillInfo::Swap(TBeautyHouseSkillInfo* other) {
  if (other != this) {
    std::swap(quality_, other->quality_);
    std::swap(skillindex_, other->skillindex_);
    std::swap(skilllv_, other->skilllv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeautyHouseSkillInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeautyHouseSkillInfo_descriptor_;
  metadata.reflection = TBeautyHouseSkillInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeautyHouseGetInfoRsp::kBeautyArrFieldNumber;
const int TBeautyHouseGetInfoRsp::kSkillInfoFieldNumber;
const int TBeautyHouseGetInfoRsp::kCharmValueFieldNumber;
#endif  // !_MSC_VER

TBeautyHouseGetInfoRsp::TBeautyHouseGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeautyHouseGetInfoRsp)
}

void TBeautyHouseGetInfoRsp::InitAsDefaultInstance() {
}

TBeautyHouseGetInfoRsp::TBeautyHouseGetInfoRsp(const TBeautyHouseGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeautyHouseGetInfoRsp)
}

void TBeautyHouseGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeautyHouseGetInfoRsp::~TBeautyHouseGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TBeautyHouseGetInfoRsp)
  SharedDtor();
}

void TBeautyHouseGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeautyHouseGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeautyHouseGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeautyHouseGetInfoRsp_descriptor_;
}

const TBeautyHouseGetInfoRsp& TBeautyHouseGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeautyHouse_2eproto();
  return *default_instance_;
}

TBeautyHouseGetInfoRsp* TBeautyHouseGetInfoRsp::default_instance_ = NULL;

TBeautyHouseGetInfoRsp* TBeautyHouseGetInfoRsp::New() const {
  return new TBeautyHouseGetInfoRsp;
}

void TBeautyHouseGetInfoRsp::Clear() {
  beautyarr_.Clear();
  skillinfo_.Clear();
  charmvalue_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeautyHouseGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeautyHouseGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TBeautyHouseBeautyInfo BeautyArr = 1;
      case 1: {
        if (tag == 10) {
         parse_BeautyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_beautyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_BeautyArr;
        if (input->ExpectTag(18)) goto parse_SkillInfo;
        break;
      }

      // repeated .pb.TBeautyHouseSkillInfo SkillInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_SkillInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skillinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SkillInfo;
        if (input->ExpectTag(26)) goto parse_CharmValue;
        break;
      }

      // repeated .pb.TBeautyHouseCharmValueInfo CharmValue = 3;
      case 3: {
        if (tag == 26) {
         parse_CharmValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_charmvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_CharmValue;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeautyHouseGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeautyHouseGetInfoRsp)
  return false;
#undef DO_
}

void TBeautyHouseGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeautyHouseGetInfoRsp)
  // repeated .pb.TBeautyHouseBeautyInfo BeautyArr = 1;
  for (int i = 0; i < this->beautyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->beautyarr(i), output);
  }

  // repeated .pb.TBeautyHouseSkillInfo SkillInfo = 2;
  for (int i = 0; i < this->skillinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->skillinfo(i), output);
  }

  // repeated .pb.TBeautyHouseCharmValueInfo CharmValue = 3;
  for (int i = 0; i < this->charmvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->charmvalue(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeautyHouseGetInfoRsp)
}

::google::protobuf::uint8* TBeautyHouseGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeautyHouseGetInfoRsp)
  // repeated .pb.TBeautyHouseBeautyInfo BeautyArr = 1;
  for (int i = 0; i < this->beautyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->beautyarr(i), target);
  }

  // repeated .pb.TBeautyHouseSkillInfo SkillInfo = 2;
  for (int i = 0; i < this->skillinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->skillinfo(i), target);
  }

  // repeated .pb.TBeautyHouseCharmValueInfo CharmValue = 3;
  for (int i = 0; i < this->charmvalue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->charmvalue(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeautyHouseGetInfoRsp)
  return target;
}

int TBeautyHouseGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TBeautyHouseBeautyInfo BeautyArr = 1;
  total_size += 1 * this->beautyarr_size();
  for (int i = 0; i < this->beautyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->beautyarr(i));
  }

  // repeated .pb.TBeautyHouseSkillInfo SkillInfo = 2;
  total_size += 1 * this->skillinfo_size();
  for (int i = 0; i < this->skillinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skillinfo(i));
  }

  // repeated .pb.TBeautyHouseCharmValueInfo CharmValue = 3;
  total_size += 1 * this->charmvalue_size();
  for (int i = 0; i < this->charmvalue_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->charmvalue(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeautyHouseGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeautyHouseGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeautyHouseGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeautyHouseGetInfoRsp::MergeFrom(const TBeautyHouseGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  beautyarr_.MergeFrom(from.beautyarr_);
  skillinfo_.MergeFrom(from.skillinfo_);
  charmvalue_.MergeFrom(from.charmvalue_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeautyHouseGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeautyHouseGetInfoRsp::CopyFrom(const TBeautyHouseGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeautyHouseGetInfoRsp::IsInitialized() const {

  return true;
}

void TBeautyHouseGetInfoRsp::Swap(TBeautyHouseGetInfoRsp* other) {
  if (other != this) {
    beautyarr_.Swap(&other->beautyarr_);
    skillinfo_.Swap(&other->skillinfo_);
    charmvalue_.Swap(&other->charmvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeautyHouseGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeautyHouseGetInfoRsp_descriptor_;
  metadata.reflection = TBeautyHouseGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeautyHouseBeautyUpgradeReq::kBidFieldNumber;
#endif  // !_MSC_VER

TBeautyHouseBeautyUpgradeReq::TBeautyHouseBeautyUpgradeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeautyHouseBeautyUpgradeReq)
}

void TBeautyHouseBeautyUpgradeReq::InitAsDefaultInstance() {
}

TBeautyHouseBeautyUpgradeReq::TBeautyHouseBeautyUpgradeReq(const TBeautyHouseBeautyUpgradeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeautyHouseBeautyUpgradeReq)
}

void TBeautyHouseBeautyUpgradeReq::SharedCtor() {
  _cached_size_ = 0;
  bid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeautyHouseBeautyUpgradeReq::~TBeautyHouseBeautyUpgradeReq() {
  // @@protoc_insertion_point(destructor:pb.TBeautyHouseBeautyUpgradeReq)
  SharedDtor();
}

void TBeautyHouseBeautyUpgradeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeautyHouseBeautyUpgradeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeautyHouseBeautyUpgradeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeautyHouseBeautyUpgradeReq_descriptor_;
}

const TBeautyHouseBeautyUpgradeReq& TBeautyHouseBeautyUpgradeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeautyHouse_2eproto();
  return *default_instance_;
}

TBeautyHouseBeautyUpgradeReq* TBeautyHouseBeautyUpgradeReq::default_instance_ = NULL;

TBeautyHouseBeautyUpgradeReq* TBeautyHouseBeautyUpgradeReq::New() const {
  return new TBeautyHouseBeautyUpgradeReq;
}

void TBeautyHouseBeautyUpgradeReq::Clear() {
  bid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeautyHouseBeautyUpgradeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeautyHouseBeautyUpgradeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Bid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bid_)));
          set_has_bid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeautyHouseBeautyUpgradeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeautyHouseBeautyUpgradeReq)
  return false;
#undef DO_
}

void TBeautyHouseBeautyUpgradeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeautyHouseBeautyUpgradeReq)
  // optional uint32 Bid = 1;
  if (has_bid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeautyHouseBeautyUpgradeReq)
}

::google::protobuf::uint8* TBeautyHouseBeautyUpgradeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeautyHouseBeautyUpgradeReq)
  // optional uint32 Bid = 1;
  if (has_bid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeautyHouseBeautyUpgradeReq)
  return target;
}

int TBeautyHouseBeautyUpgradeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Bid = 1;
    if (has_bid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeautyHouseBeautyUpgradeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeautyHouseBeautyUpgradeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeautyHouseBeautyUpgradeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeautyHouseBeautyUpgradeReq::MergeFrom(const TBeautyHouseBeautyUpgradeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bid()) {
      set_bid(from.bid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeautyHouseBeautyUpgradeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeautyHouseBeautyUpgradeReq::CopyFrom(const TBeautyHouseBeautyUpgradeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeautyHouseBeautyUpgradeReq::IsInitialized() const {

  return true;
}

void TBeautyHouseBeautyUpgradeReq::Swap(TBeautyHouseBeautyUpgradeReq* other) {
  if (other != this) {
    std::swap(bid_, other->bid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeautyHouseBeautyUpgradeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeautyHouseBeautyUpgradeReq_descriptor_;
  metadata.reflection = TBeautyHouseBeautyUpgradeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeautyHouseInteractBeautyReq::kBidFieldNumber;
#endif  // !_MSC_VER

TBeautyHouseInteractBeautyReq::TBeautyHouseInteractBeautyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeautyHouseInteractBeautyReq)
}

void TBeautyHouseInteractBeautyReq::InitAsDefaultInstance() {
}

TBeautyHouseInteractBeautyReq::TBeautyHouseInteractBeautyReq(const TBeautyHouseInteractBeautyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeautyHouseInteractBeautyReq)
}

void TBeautyHouseInteractBeautyReq::SharedCtor() {
  _cached_size_ = 0;
  bid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeautyHouseInteractBeautyReq::~TBeautyHouseInteractBeautyReq() {
  // @@protoc_insertion_point(destructor:pb.TBeautyHouseInteractBeautyReq)
  SharedDtor();
}

void TBeautyHouseInteractBeautyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeautyHouseInteractBeautyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeautyHouseInteractBeautyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeautyHouseInteractBeautyReq_descriptor_;
}

const TBeautyHouseInteractBeautyReq& TBeautyHouseInteractBeautyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeautyHouse_2eproto();
  return *default_instance_;
}

TBeautyHouseInteractBeautyReq* TBeautyHouseInteractBeautyReq::default_instance_ = NULL;

TBeautyHouseInteractBeautyReq* TBeautyHouseInteractBeautyReq::New() const {
  return new TBeautyHouseInteractBeautyReq;
}

void TBeautyHouseInteractBeautyReq::Clear() {
  bid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeautyHouseInteractBeautyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeautyHouseInteractBeautyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Bid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bid_)));
          set_has_bid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeautyHouseInteractBeautyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeautyHouseInteractBeautyReq)
  return false;
#undef DO_
}

void TBeautyHouseInteractBeautyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeautyHouseInteractBeautyReq)
  // optional uint32 Bid = 1;
  if (has_bid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeautyHouseInteractBeautyReq)
}

::google::protobuf::uint8* TBeautyHouseInteractBeautyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeautyHouseInteractBeautyReq)
  // optional uint32 Bid = 1;
  if (has_bid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeautyHouseInteractBeautyReq)
  return target;
}

int TBeautyHouseInteractBeautyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Bid = 1;
    if (has_bid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeautyHouseInteractBeautyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeautyHouseInteractBeautyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeautyHouseInteractBeautyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeautyHouseInteractBeautyReq::MergeFrom(const TBeautyHouseInteractBeautyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bid()) {
      set_bid(from.bid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeautyHouseInteractBeautyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeautyHouseInteractBeautyReq::CopyFrom(const TBeautyHouseInteractBeautyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeautyHouseInteractBeautyReq::IsInitialized() const {

  return true;
}

void TBeautyHouseInteractBeautyReq::Swap(TBeautyHouseInteractBeautyReq* other) {
  if (other != this) {
    std::swap(bid_, other->bid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeautyHouseInteractBeautyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeautyHouseInteractBeautyReq_descriptor_;
  metadata.reflection = TBeautyHouseInteractBeautyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeautyHouseReceiveBoxRewardReq::kBidFieldNumber;
const int TBeautyHouseReceiveBoxRewardReq::kBoxLvFieldNumber;
#endif  // !_MSC_VER

TBeautyHouseReceiveBoxRewardReq::TBeautyHouseReceiveBoxRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeautyHouseReceiveBoxRewardReq)
}

void TBeautyHouseReceiveBoxRewardReq::InitAsDefaultInstance() {
}

TBeautyHouseReceiveBoxRewardReq::TBeautyHouseReceiveBoxRewardReq(const TBeautyHouseReceiveBoxRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeautyHouseReceiveBoxRewardReq)
}

void TBeautyHouseReceiveBoxRewardReq::SharedCtor() {
  _cached_size_ = 0;
  bid_ = 0u;
  boxlv_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeautyHouseReceiveBoxRewardReq::~TBeautyHouseReceiveBoxRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TBeautyHouseReceiveBoxRewardReq)
  SharedDtor();
}

void TBeautyHouseReceiveBoxRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeautyHouseReceiveBoxRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeautyHouseReceiveBoxRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeautyHouseReceiveBoxRewardReq_descriptor_;
}

const TBeautyHouseReceiveBoxRewardReq& TBeautyHouseReceiveBoxRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeautyHouse_2eproto();
  return *default_instance_;
}

TBeautyHouseReceiveBoxRewardReq* TBeautyHouseReceiveBoxRewardReq::default_instance_ = NULL;

TBeautyHouseReceiveBoxRewardReq* TBeautyHouseReceiveBoxRewardReq::New() const {
  return new TBeautyHouseReceiveBoxRewardReq;
}

void TBeautyHouseReceiveBoxRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeautyHouseReceiveBoxRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(bid_, boxlv_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeautyHouseReceiveBoxRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeautyHouseReceiveBoxRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Bid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bid_)));
          set_has_bid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BoxLv;
        break;
      }

      // optional uint32 BoxLv = 2;
      case 2: {
        if (tag == 16) {
         parse_BoxLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &boxlv_)));
          set_has_boxlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeautyHouseReceiveBoxRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeautyHouseReceiveBoxRewardReq)
  return false;
#undef DO_
}

void TBeautyHouseReceiveBoxRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeautyHouseReceiveBoxRewardReq)
  // optional uint32 Bid = 1;
  if (has_bid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bid(), output);
  }

  // optional uint32 BoxLv = 2;
  if (has_boxlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->boxlv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeautyHouseReceiveBoxRewardReq)
}

::google::protobuf::uint8* TBeautyHouseReceiveBoxRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeautyHouseReceiveBoxRewardReq)
  // optional uint32 Bid = 1;
  if (has_bid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bid(), target);
  }

  // optional uint32 BoxLv = 2;
  if (has_boxlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->boxlv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeautyHouseReceiveBoxRewardReq)
  return target;
}

int TBeautyHouseReceiveBoxRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Bid = 1;
    if (has_bid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bid());
    }

    // optional uint32 BoxLv = 2;
    if (has_boxlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->boxlv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeautyHouseReceiveBoxRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeautyHouseReceiveBoxRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeautyHouseReceiveBoxRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeautyHouseReceiveBoxRewardReq::MergeFrom(const TBeautyHouseReceiveBoxRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bid()) {
      set_bid(from.bid());
    }
    if (from.has_boxlv()) {
      set_boxlv(from.boxlv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeautyHouseReceiveBoxRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeautyHouseReceiveBoxRewardReq::CopyFrom(const TBeautyHouseReceiveBoxRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeautyHouseReceiveBoxRewardReq::IsInitialized() const {

  return true;
}

void TBeautyHouseReceiveBoxRewardReq::Swap(TBeautyHouseReceiveBoxRewardReq* other) {
  if (other != this) {
    std::swap(bid_, other->bid_);
    std::swap(boxlv_, other->boxlv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeautyHouseReceiveBoxRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeautyHouseReceiveBoxRewardReq_descriptor_;
  metadata.reflection = TBeautyHouseReceiveBoxRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeautyHouseReceiveBoxRewardRsp::kRewardArrFieldNumber;
#endif  // !_MSC_VER

TBeautyHouseReceiveBoxRewardRsp::TBeautyHouseReceiveBoxRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeautyHouseReceiveBoxRewardRsp)
}

void TBeautyHouseReceiveBoxRewardRsp::InitAsDefaultInstance() {
}

TBeautyHouseReceiveBoxRewardRsp::TBeautyHouseReceiveBoxRewardRsp(const TBeautyHouseReceiveBoxRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeautyHouseReceiveBoxRewardRsp)
}

void TBeautyHouseReceiveBoxRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeautyHouseReceiveBoxRewardRsp::~TBeautyHouseReceiveBoxRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TBeautyHouseReceiveBoxRewardRsp)
  SharedDtor();
}

void TBeautyHouseReceiveBoxRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeautyHouseReceiveBoxRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeautyHouseReceiveBoxRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeautyHouseReceiveBoxRewardRsp_descriptor_;
}

const TBeautyHouseReceiveBoxRewardRsp& TBeautyHouseReceiveBoxRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeautyHouse_2eproto();
  return *default_instance_;
}

TBeautyHouseReceiveBoxRewardRsp* TBeautyHouseReceiveBoxRewardRsp::default_instance_ = NULL;

TBeautyHouseReceiveBoxRewardRsp* TBeautyHouseReceiveBoxRewardRsp::New() const {
  return new TBeautyHouseReceiveBoxRewardRsp;
}

void TBeautyHouseReceiveBoxRewardRsp::Clear() {
  rewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeautyHouseReceiveBoxRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeautyHouseReceiveBoxRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeautyHouseReceiveBoxRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeautyHouseReceiveBoxRewardRsp)
  return false;
#undef DO_
}

void TBeautyHouseReceiveBoxRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeautyHouseReceiveBoxRewardRsp)
  // repeated .pb.TCommonReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeautyHouseReceiveBoxRewardRsp)
}

::google::protobuf::uint8* TBeautyHouseReceiveBoxRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeautyHouseReceiveBoxRewardRsp)
  // repeated .pb.TCommonReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeautyHouseReceiveBoxRewardRsp)
  return target;
}

int TBeautyHouseReceiveBoxRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArr = 1;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeautyHouseReceiveBoxRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeautyHouseReceiveBoxRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeautyHouseReceiveBoxRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeautyHouseReceiveBoxRewardRsp::MergeFrom(const TBeautyHouseReceiveBoxRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarr_.MergeFrom(from.rewardarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeautyHouseReceiveBoxRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeautyHouseReceiveBoxRewardRsp::CopyFrom(const TBeautyHouseReceiveBoxRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeautyHouseReceiveBoxRewardRsp::IsInitialized() const {

  return true;
}

void TBeautyHouseReceiveBoxRewardRsp::Swap(TBeautyHouseReceiveBoxRewardRsp* other) {
  if (other != this) {
    rewardarr_.Swap(&other->rewardarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeautyHouseReceiveBoxRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeautyHouseReceiveBoxRewardRsp_descriptor_;
  metadata.reflection = TBeautyHouseReceiveBoxRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeautyHouseSkillUpgradeReq::kQualityFieldNumber;
const int TBeautyHouseSkillUpgradeReq::kIndexFieldNumber;
#endif  // !_MSC_VER

TBeautyHouseSkillUpgradeReq::TBeautyHouseSkillUpgradeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeautyHouseSkillUpgradeReq)
}

void TBeautyHouseSkillUpgradeReq::InitAsDefaultInstance() {
}

TBeautyHouseSkillUpgradeReq::TBeautyHouseSkillUpgradeReq(const TBeautyHouseSkillUpgradeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeautyHouseSkillUpgradeReq)
}

void TBeautyHouseSkillUpgradeReq::SharedCtor() {
  _cached_size_ = 0;
  quality_ = 0u;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeautyHouseSkillUpgradeReq::~TBeautyHouseSkillUpgradeReq() {
  // @@protoc_insertion_point(destructor:pb.TBeautyHouseSkillUpgradeReq)
  SharedDtor();
}

void TBeautyHouseSkillUpgradeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBeautyHouseSkillUpgradeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeautyHouseSkillUpgradeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeautyHouseSkillUpgradeReq_descriptor_;
}

const TBeautyHouseSkillUpgradeReq& TBeautyHouseSkillUpgradeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeautyHouse_2eproto();
  return *default_instance_;
}

TBeautyHouseSkillUpgradeReq* TBeautyHouseSkillUpgradeReq::default_instance_ = NULL;

TBeautyHouseSkillUpgradeReq* TBeautyHouseSkillUpgradeReq::New() const {
  return new TBeautyHouseSkillUpgradeReq;
}

void TBeautyHouseSkillUpgradeReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBeautyHouseSkillUpgradeReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(quality_, index_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeautyHouseSkillUpgradeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeautyHouseSkillUpgradeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Quality = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Index;
        break;
      }

      // optional uint32 Index = 2;
      case 2: {
        if (tag == 16) {
         parse_Index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeautyHouseSkillUpgradeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeautyHouseSkillUpgradeReq)
  return false;
#undef DO_
}

void TBeautyHouseSkillUpgradeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeautyHouseSkillUpgradeReq)
  // optional uint32 Quality = 1;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->quality(), output);
  }

  // optional uint32 Index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeautyHouseSkillUpgradeReq)
}

::google::protobuf::uint8* TBeautyHouseSkillUpgradeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeautyHouseSkillUpgradeReq)
  // optional uint32 Quality = 1;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->quality(), target);
  }

  // optional uint32 Index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeautyHouseSkillUpgradeReq)
  return target;
}

int TBeautyHouseSkillUpgradeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Quality = 1;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quality());
    }

    // optional uint32 Index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeautyHouseSkillUpgradeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeautyHouseSkillUpgradeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeautyHouseSkillUpgradeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeautyHouseSkillUpgradeReq::MergeFrom(const TBeautyHouseSkillUpgradeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeautyHouseSkillUpgradeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeautyHouseSkillUpgradeReq::CopyFrom(const TBeautyHouseSkillUpgradeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeautyHouseSkillUpgradeReq::IsInitialized() const {

  return true;
}

void TBeautyHouseSkillUpgradeReq::Swap(TBeautyHouseSkillUpgradeReq* other) {
  if (other != this) {
    std::swap(quality_, other->quality_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeautyHouseSkillUpgradeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeautyHouseSkillUpgradeReq_descriptor_;
  metadata.reflection = TBeautyHouseSkillUpgradeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBeautyHouseChangeNotify::kBeautyFieldNumber;
const int TBeautyHouseChangeNotify::kCharmValueInfoFieldNumber;
const int TBeautyHouseChangeNotify::kSkillInfoFieldNumber;
#endif  // !_MSC_VER

TBeautyHouseChangeNotify::TBeautyHouseChangeNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBeautyHouseChangeNotify)
}

void TBeautyHouseChangeNotify::InitAsDefaultInstance() {
  beauty_ = const_cast< ::pb::TBeautyHouseBeautyInfo*>(&::pb::TBeautyHouseBeautyInfo::default_instance());
  charmvalueinfo_ = const_cast< ::pb::TBeautyHouseCharmValueInfo*>(&::pb::TBeautyHouseCharmValueInfo::default_instance());
  skillinfo_ = const_cast< ::pb::TBeautyHouseSkillInfo*>(&::pb::TBeautyHouseSkillInfo::default_instance());
}

TBeautyHouseChangeNotify::TBeautyHouseChangeNotify(const TBeautyHouseChangeNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBeautyHouseChangeNotify)
}

void TBeautyHouseChangeNotify::SharedCtor() {
  _cached_size_ = 0;
  beauty_ = NULL;
  charmvalueinfo_ = NULL;
  skillinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBeautyHouseChangeNotify::~TBeautyHouseChangeNotify() {
  // @@protoc_insertion_point(destructor:pb.TBeautyHouseChangeNotify)
  SharedDtor();
}

void TBeautyHouseChangeNotify::SharedDtor() {
  if (this != default_instance_) {
    delete beauty_;
    delete charmvalueinfo_;
    delete skillinfo_;
  }
}

void TBeautyHouseChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBeautyHouseChangeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBeautyHouseChangeNotify_descriptor_;
}

const TBeautyHouseChangeNotify& TBeautyHouseChangeNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBeautyHouse_2eproto();
  return *default_instance_;
}

TBeautyHouseChangeNotify* TBeautyHouseChangeNotify::default_instance_ = NULL;

TBeautyHouseChangeNotify* TBeautyHouseChangeNotify::New() const {
  return new TBeautyHouseChangeNotify;
}

void TBeautyHouseChangeNotify::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_beauty()) {
      if (beauty_ != NULL) beauty_->::pb::TBeautyHouseBeautyInfo::Clear();
    }
    if (has_charmvalueinfo()) {
      if (charmvalueinfo_ != NULL) charmvalueinfo_->::pb::TBeautyHouseCharmValueInfo::Clear();
    }
    if (has_skillinfo()) {
      if (skillinfo_ != NULL) skillinfo_->::pb::TBeautyHouseSkillInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBeautyHouseChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBeautyHouseChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TBeautyHouseBeautyInfo Beauty = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_beauty()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CharmValueInfo;
        break;
      }

      // optional .pb.TBeautyHouseCharmValueInfo CharmValueInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_CharmValueInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_charmvalueinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_SkillInfo;
        break;
      }

      // optional .pb.TBeautyHouseSkillInfo SkillInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_SkillInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skillinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBeautyHouseChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBeautyHouseChangeNotify)
  return false;
#undef DO_
}

void TBeautyHouseChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBeautyHouseChangeNotify)
  // optional .pb.TBeautyHouseBeautyInfo Beauty = 1;
  if (has_beauty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->beauty(), output);
  }

  // optional .pb.TBeautyHouseCharmValueInfo CharmValueInfo = 2;
  if (has_charmvalueinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->charmvalueinfo(), output);
  }

  // optional .pb.TBeautyHouseSkillInfo SkillInfo = 3;
  if (has_skillinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->skillinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBeautyHouseChangeNotify)
}

::google::protobuf::uint8* TBeautyHouseChangeNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBeautyHouseChangeNotify)
  // optional .pb.TBeautyHouseBeautyInfo Beauty = 1;
  if (has_beauty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->beauty(), target);
  }

  // optional .pb.TBeautyHouseCharmValueInfo CharmValueInfo = 2;
  if (has_charmvalueinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->charmvalueinfo(), target);
  }

  // optional .pb.TBeautyHouseSkillInfo SkillInfo = 3;
  if (has_skillinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->skillinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBeautyHouseChangeNotify)
  return target;
}

int TBeautyHouseChangeNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TBeautyHouseBeautyInfo Beauty = 1;
    if (has_beauty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->beauty());
    }

    // optional .pb.TBeautyHouseCharmValueInfo CharmValueInfo = 2;
    if (has_charmvalueinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->charmvalueinfo());
    }

    // optional .pb.TBeautyHouseSkillInfo SkillInfo = 3;
    if (has_skillinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skillinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBeautyHouseChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBeautyHouseChangeNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBeautyHouseChangeNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBeautyHouseChangeNotify::MergeFrom(const TBeautyHouseChangeNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beauty()) {
      mutable_beauty()->::pb::TBeautyHouseBeautyInfo::MergeFrom(from.beauty());
    }
    if (from.has_charmvalueinfo()) {
      mutable_charmvalueinfo()->::pb::TBeautyHouseCharmValueInfo::MergeFrom(from.charmvalueinfo());
    }
    if (from.has_skillinfo()) {
      mutable_skillinfo()->::pb::TBeautyHouseSkillInfo::MergeFrom(from.skillinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBeautyHouseChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBeautyHouseChangeNotify::CopyFrom(const TBeautyHouseChangeNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBeautyHouseChangeNotify::IsInitialized() const {

  return true;
}

void TBeautyHouseChangeNotify::Swap(TBeautyHouseChangeNotify* other) {
  if (other != this) {
    std::swap(beauty_, other->beauty_);
    std::swap(charmvalueinfo_, other->charmvalueinfo_);
    std::swap(skillinfo_, other->skillinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBeautyHouseChangeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBeautyHouseChangeNotify_descriptor_;
  metadata.reflection = TBeautyHouseChangeNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
