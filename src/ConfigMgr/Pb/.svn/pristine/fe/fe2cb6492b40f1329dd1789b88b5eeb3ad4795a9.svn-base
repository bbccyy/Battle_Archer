// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Pay.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/Pay.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TGoldInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TGoldInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFirstInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFirstInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPayGetGoldInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPayGetGoldInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPayGetItemInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPayGetItemInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPayGetFirstPayRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPayGetFirstPayRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPayRewardFirstPayReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPayRewardFirstPayReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPayBuyGoldByCouponReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPayBuyGoldByCouponReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPayBuyGiftByCouponReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPayBuyGiftByCouponReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPayInfoNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPayInfoNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TFirstPayNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TFirstPayNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPayBuyFreeGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPayBuyFreeGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPayRebateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPayRebateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPayExchangeGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPayExchangeGiftReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPayExchangeGoldReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPayExchangeGoldReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPayRebateRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPayRebateRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPayDoubleNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPayDoubleNotify_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ERebateRetCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fPay_2eproto() {
  protobuf_AddDesc_net_2fPay_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/Pay.proto");
  GOOGLE_CHECK(file != NULL);
  TGoldInfo_descriptor_ = file->message_type(0);
  static const int TGoldInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TGoldInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TGoldInfo, num_),
  };
  TGoldInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TGoldInfo_descriptor_,
      TGoldInfo::default_instance_,
      TGoldInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TGoldInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TGoldInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TGoldInfo));
  TItemInfo_descriptor_ = file->message_type(1);
  static const int TItemInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemInfo, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemInfo, expiretime_),
  };
  TItemInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemInfo_descriptor_,
      TItemInfo::default_instance_,
      TItemInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemInfo));
  TFirstInfo_descriptor_ = file->message_type(2);
  static const int TFirstInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFirstInfo, paytotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFirstInfo, arrrewardid_),
  };
  TFirstInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFirstInfo_descriptor_,
      TFirstInfo::default_instance_,
      TFirstInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFirstInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFirstInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFirstInfo));
  TPayGetGoldInfoRsp_descriptor_ = file->message_type(3);
  static const int TPayGetGoldInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayGetGoldInfoRsp, arrgoldinfo_),
  };
  TPayGetGoldInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPayGetGoldInfoRsp_descriptor_,
      TPayGetGoldInfoRsp::default_instance_,
      TPayGetGoldInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayGetGoldInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayGetGoldInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPayGetGoldInfoRsp));
  TPayGetItemInfoRsp_descriptor_ = file->message_type(4);
  static const int TPayGetItemInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayGetItemInfoRsp, arriteminfo_),
  };
  TPayGetItemInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPayGetItemInfoRsp_descriptor_,
      TPayGetItemInfoRsp::default_instance_,
      TPayGetItemInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayGetItemInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayGetItemInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPayGetItemInfoRsp));
  TPayGetFirstPayRsp_descriptor_ = file->message_type(5);
  static const int TPayGetFirstPayRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayGetFirstPayRsp, firstpayinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayGetFirstPayRsp, userlogofftime_),
  };
  TPayGetFirstPayRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPayGetFirstPayRsp_descriptor_,
      TPayGetFirstPayRsp::default_instance_,
      TPayGetFirstPayRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayGetFirstPayRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayGetFirstPayRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPayGetFirstPayRsp));
  TPayRewardFirstPayReq_descriptor_ = file->message_type(6);
  static const int TPayRewardFirstPayReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayRewardFirstPayReq, id_),
  };
  TPayRewardFirstPayReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPayRewardFirstPayReq_descriptor_,
      TPayRewardFirstPayReq::default_instance_,
      TPayRewardFirstPayReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayRewardFirstPayReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayRewardFirstPayReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPayRewardFirstPayReq));
  TPayBuyGoldByCouponReq_descriptor_ = file->message_type(7);
  static const int TPayBuyGoldByCouponReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayBuyGoldByCouponReq, productid_),
  };
  TPayBuyGoldByCouponReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPayBuyGoldByCouponReq_descriptor_,
      TPayBuyGoldByCouponReq::default_instance_,
      TPayBuyGoldByCouponReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayBuyGoldByCouponReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayBuyGoldByCouponReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPayBuyGoldByCouponReq));
  TPayBuyGiftByCouponReq_descriptor_ = file->message_type(8);
  static const int TPayBuyGiftByCouponReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayBuyGiftByCouponReq, productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayBuyGiftByCouponReq, unifiedworld_),
  };
  TPayBuyGiftByCouponReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPayBuyGiftByCouponReq_descriptor_,
      TPayBuyGiftByCouponReq::default_instance_,
      TPayBuyGiftByCouponReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayBuyGiftByCouponReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayBuyGiftByCouponReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPayBuyGiftByCouponReq));
  TPayInfoNotify_descriptor_ = file->message_type(9);
  static const int TPayInfoNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayInfoNotify, arrgoldinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayInfoNotify, arriteminfo_),
  };
  TPayInfoNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPayInfoNotify_descriptor_,
      TPayInfoNotify::default_instance_,
      TPayInfoNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayInfoNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayInfoNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPayInfoNotify));
  TFirstPayNotify_descriptor_ = file->message_type(10);
  static const int TFirstPayNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFirstPayNotify, paytotal_),
  };
  TFirstPayNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TFirstPayNotify_descriptor_,
      TFirstPayNotify::default_instance_,
      TFirstPayNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFirstPayNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TFirstPayNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TFirstPayNotify));
  TPayBuyFreeGiftReq_descriptor_ = file->message_type(11);
  static const int TPayBuyFreeGiftReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayBuyFreeGiftReq, giftitemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayBuyFreeGiftReq, buynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayBuyFreeGiftReq, unifiedworld_),
  };
  TPayBuyFreeGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPayBuyFreeGiftReq_descriptor_,
      TPayBuyFreeGiftReq::default_instance_,
      TPayBuyFreeGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayBuyFreeGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayBuyFreeGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPayBuyFreeGiftReq));
  TPayRebateReq_descriptor_ = file->message_type(12);
  static const int TPayRebateReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayRebateReq, rebategold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayRebateReq, money_),
  };
  TPayRebateReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPayRebateReq_descriptor_,
      TPayRebateReq::default_instance_,
      TPayRebateReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayRebateReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayRebateReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPayRebateReq));
  TPayExchangeGiftReq_descriptor_ = file->message_type(13);
  static const int TPayExchangeGiftReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayExchangeGiftReq, productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayExchangeGiftReq, double__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayExchangeGiftReq, unifiedworld_),
  };
  TPayExchangeGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPayExchangeGiftReq_descriptor_,
      TPayExchangeGiftReq::default_instance_,
      TPayExchangeGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayExchangeGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayExchangeGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPayExchangeGiftReq));
  TPayExchangeGoldReq_descriptor_ = file->message_type(14);
  static const int TPayExchangeGoldReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayExchangeGoldReq, productid_),
  };
  TPayExchangeGoldReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPayExchangeGoldReq_descriptor_,
      TPayExchangeGoldReq::default_instance_,
      TPayExchangeGoldReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayExchangeGoldReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayExchangeGoldReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPayExchangeGoldReq));
  TPayRebateRsp_descriptor_ = file->message_type(15);
  static const int TPayRebateRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayRebateRsp, retcode_),
  };
  TPayRebateRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPayRebateRsp_descriptor_,
      TPayRebateRsp::default_instance_,
      TPayRebateRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayRebateRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayRebateRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPayRebateRsp));
  TPayDoubleNotify_descriptor_ = file->message_type(16);
  static const int TPayDoubleNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayDoubleNotify, productid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayDoubleNotify, rate_),
  };
  TPayDoubleNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPayDoubleNotify_descriptor_,
      TPayDoubleNotify::default_instance_,
      TPayDoubleNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayDoubleNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPayDoubleNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPayDoubleNotify));
  ERebateRetCode_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fPay_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TGoldInfo_descriptor_, &TGoldInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemInfo_descriptor_, &TItemInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFirstInfo_descriptor_, &TFirstInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPayGetGoldInfoRsp_descriptor_, &TPayGetGoldInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPayGetItemInfoRsp_descriptor_, &TPayGetItemInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPayGetFirstPayRsp_descriptor_, &TPayGetFirstPayRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPayRewardFirstPayReq_descriptor_, &TPayRewardFirstPayReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPayBuyGoldByCouponReq_descriptor_, &TPayBuyGoldByCouponReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPayBuyGiftByCouponReq_descriptor_, &TPayBuyGiftByCouponReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPayInfoNotify_descriptor_, &TPayInfoNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TFirstPayNotify_descriptor_, &TFirstPayNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPayBuyFreeGiftReq_descriptor_, &TPayBuyFreeGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPayRebateReq_descriptor_, &TPayRebateReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPayExchangeGiftReq_descriptor_, &TPayExchangeGiftReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPayExchangeGoldReq_descriptor_, &TPayExchangeGoldReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPayRebateRsp_descriptor_, &TPayRebateRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPayDoubleNotify_descriptor_, &TPayDoubleNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fPay_2eproto() {
  delete TGoldInfo::default_instance_;
  delete TGoldInfo_reflection_;
  delete TItemInfo::default_instance_;
  delete TItemInfo_reflection_;
  delete TFirstInfo::default_instance_;
  delete TFirstInfo_reflection_;
  delete TPayGetGoldInfoRsp::default_instance_;
  delete TPayGetGoldInfoRsp_reflection_;
  delete TPayGetItemInfoRsp::default_instance_;
  delete TPayGetItemInfoRsp_reflection_;
  delete TPayGetFirstPayRsp::default_instance_;
  delete TPayGetFirstPayRsp_reflection_;
  delete TPayRewardFirstPayReq::default_instance_;
  delete TPayRewardFirstPayReq_reflection_;
  delete TPayBuyGoldByCouponReq::default_instance_;
  delete TPayBuyGoldByCouponReq_reflection_;
  delete TPayBuyGiftByCouponReq::default_instance_;
  delete TPayBuyGiftByCouponReq_reflection_;
  delete TPayInfoNotify::default_instance_;
  delete TPayInfoNotify_reflection_;
  delete TFirstPayNotify::default_instance_;
  delete TFirstPayNotify_reflection_;
  delete TPayBuyFreeGiftReq::default_instance_;
  delete TPayBuyFreeGiftReq_reflection_;
  delete TPayRebateReq::default_instance_;
  delete TPayRebateReq_reflection_;
  delete TPayExchangeGiftReq::default_instance_;
  delete TPayExchangeGiftReq_reflection_;
  delete TPayExchangeGoldReq::default_instance_;
  delete TPayExchangeGoldReq_reflection_;
  delete TPayRebateRsp::default_instance_;
  delete TPayRebateRsp_reflection_;
  delete TPayDoubleNotify::default_instance_;
  delete TPayDoubleNotify_reflection_;
}

void protobuf_AddDesc_net_2fPay_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rnet/Pay.proto\022\002pb\"$\n\tTGoldInfo\022\n\n\002Id\030\001"
    " \001(\r\022\013\n\003Num\030\002 \001(\r\"8\n\tTItemInfo\022\n\n\002Id\030\001 \001"
    "(\r\022\013\n\003Num\030\002 \001(\r\022\022\n\nExpireTime\030\003 \001(\004\"3\n\nT"
    "FirstInfo\022\020\n\010PayTotal\030\001 \001(\r\022\023\n\013ArrReward"
    "Id\030\002 \003(\r\"8\n\022TPayGetGoldInfoRsp\022\"\n\013ArrGol"
    "dInfo\030\001 \003(\0132\r.pb.TGoldInfo\"8\n\022TPayGetIte"
    "mInfoRsp\022\"\n\013ArrItemInfo\030\001 \003(\0132\r.pb.TItem"
    "Info\"R\n\022TPayGetFirstPayRsp\022$\n\014FirstPayIn"
    "fo\030\001 \001(\0132\016.pb.TFirstInfo\022\026\n\016UserLogoffTi"
    "me\030\002 \001(\004\"#\n\025TPayRewardFirstPayReq\022\n\n\002Id\030"
    "\001 \001(\r\"+\n\026TPayBuyGoldByCouponReq\022\021\n\tProdu"
    "ctId\030\001 \001(\r\"A\n\026TPayBuyGiftByCouponReq\022\021\n\t"
    "ProductId\030\001 \001(\r\022\024\n\014UnifiedWorld\030\002 \001(\t\"X\n"
    "\016TPayInfoNotify\022\"\n\013ArrGoldInfo\030\001 \003(\0132\r.p"
    "b.TGoldInfo\022\"\n\013ArrItemInfo\030\002 \003(\0132\r.pb.TI"
    "temInfo\"#\n\017TFirstPayNotify\022\020\n\010PayTotal\030\001"
    " \001(\r\"N\n\022TPayBuyFreeGiftReq\022\022\n\nGiftItemId"
    "\030\001 \001(\r\022\016\n\006BuyNum\030\002 \001(\r\022\024\n\014UnifiedWorld\030\003"
    " \003(\r\"2\n\rTPayRebateReq\022\022\n\nRebateGold\030\001 \001("
    "\r\022\r\n\005Money\030\002 \001(\r\"N\n\023TPayExchangeGiftReq\022"
    "\021\n\tProductId\030\001 \001(\r\022\016\n\006Double\030\002 \001(\r\022\024\n\014Un"
    "ifiedWorld\030\003 \001(\t\"(\n\023TPayExchangeGoldReq\022"
    "\021\n\tProductId\030\001 \001(\r\"4\n\rTPayRebateRsp\022#\n\007R"
    "etCode\030\001 \001(\0162\022.pb.ERebateRetCode\"3\n\020TPay"
    "DoubleNotify\022\021\n\tProductId\030\001 \001(\r\022\014\n\004Rate\030"
    "\002 \001(\r*\243\001\n\016ERebateRetCode\022\032\n\026REBATERET_CO"
    "DE_SUCCESS\020\000\022\031\n\025REBATERET_CODE_UNKOWN\020\001\022"
    "\034\n\030REBATERET_CODE_NO_REBATE\020\002\022\036\n\032REBATER"
    "ET_CODE_BEYOND_TIME\020\003\022\034\n\030REBATERET_CODE_"
    "BEYOND_PL\020\004", 1171);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/Pay.proto", &protobuf_RegisterTypes);
  TGoldInfo::default_instance_ = new TGoldInfo();
  TItemInfo::default_instance_ = new TItemInfo();
  TFirstInfo::default_instance_ = new TFirstInfo();
  TPayGetGoldInfoRsp::default_instance_ = new TPayGetGoldInfoRsp();
  TPayGetItemInfoRsp::default_instance_ = new TPayGetItemInfoRsp();
  TPayGetFirstPayRsp::default_instance_ = new TPayGetFirstPayRsp();
  TPayRewardFirstPayReq::default_instance_ = new TPayRewardFirstPayReq();
  TPayBuyGoldByCouponReq::default_instance_ = new TPayBuyGoldByCouponReq();
  TPayBuyGiftByCouponReq::default_instance_ = new TPayBuyGiftByCouponReq();
  TPayInfoNotify::default_instance_ = new TPayInfoNotify();
  TFirstPayNotify::default_instance_ = new TFirstPayNotify();
  TPayBuyFreeGiftReq::default_instance_ = new TPayBuyFreeGiftReq();
  TPayRebateReq::default_instance_ = new TPayRebateReq();
  TPayExchangeGiftReq::default_instance_ = new TPayExchangeGiftReq();
  TPayExchangeGoldReq::default_instance_ = new TPayExchangeGoldReq();
  TPayRebateRsp::default_instance_ = new TPayRebateRsp();
  TPayDoubleNotify::default_instance_ = new TPayDoubleNotify();
  TGoldInfo::default_instance_->InitAsDefaultInstance();
  TItemInfo::default_instance_->InitAsDefaultInstance();
  TFirstInfo::default_instance_->InitAsDefaultInstance();
  TPayGetGoldInfoRsp::default_instance_->InitAsDefaultInstance();
  TPayGetItemInfoRsp::default_instance_->InitAsDefaultInstance();
  TPayGetFirstPayRsp::default_instance_->InitAsDefaultInstance();
  TPayRewardFirstPayReq::default_instance_->InitAsDefaultInstance();
  TPayBuyGoldByCouponReq::default_instance_->InitAsDefaultInstance();
  TPayBuyGiftByCouponReq::default_instance_->InitAsDefaultInstance();
  TPayInfoNotify::default_instance_->InitAsDefaultInstance();
  TFirstPayNotify::default_instance_->InitAsDefaultInstance();
  TPayBuyFreeGiftReq::default_instance_->InitAsDefaultInstance();
  TPayRebateReq::default_instance_->InitAsDefaultInstance();
  TPayExchangeGiftReq::default_instance_->InitAsDefaultInstance();
  TPayExchangeGoldReq::default_instance_->InitAsDefaultInstance();
  TPayRebateRsp::default_instance_->InitAsDefaultInstance();
  TPayDoubleNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fPay_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fPay_2eproto {
  StaticDescriptorInitializer_net_2fPay_2eproto() {
    protobuf_AddDesc_net_2fPay_2eproto();
  }
} static_descriptor_initializer_net_2fPay_2eproto_;
const ::google::protobuf::EnumDescriptor* ERebateRetCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ERebateRetCode_descriptor_;
}
bool ERebateRetCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TGoldInfo::kIdFieldNumber;
const int TGoldInfo::kNumFieldNumber;
#endif  // !_MSC_VER

TGoldInfo::TGoldInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TGoldInfo)
}

void TGoldInfo::InitAsDefaultInstance() {
}

TGoldInfo::TGoldInfo(const TGoldInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TGoldInfo)
}

void TGoldInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TGoldInfo::~TGoldInfo() {
  // @@protoc_insertion_point(destructor:pb.TGoldInfo)
  SharedDtor();
}

void TGoldInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TGoldInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TGoldInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TGoldInfo_descriptor_;
}

const TGoldInfo& TGoldInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TGoldInfo* TGoldInfo::default_instance_ = NULL;

TGoldInfo* TGoldInfo::New() const {
  return new TGoldInfo;
}

void TGoldInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TGoldInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TGoldInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TGoldInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TGoldInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TGoldInfo)
  return false;
#undef DO_
}

void TGoldInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TGoldInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TGoldInfo)
}

::google::protobuf::uint8* TGoldInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TGoldInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TGoldInfo)
  return target;
}

int TGoldInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TGoldInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TGoldInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TGoldInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TGoldInfo::MergeFrom(const TGoldInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TGoldInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TGoldInfo::CopyFrom(const TGoldInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TGoldInfo::IsInitialized() const {

  return true;
}

void TGoldInfo::Swap(TGoldInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TGoldInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TGoldInfo_descriptor_;
  metadata.reflection = TGoldInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemInfo::kIdFieldNumber;
const int TItemInfo::kNumFieldNumber;
const int TItemInfo::kExpireTimeFieldNumber;
#endif  // !_MSC_VER

TItemInfo::TItemInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemInfo)
}

void TItemInfo::InitAsDefaultInstance() {
}

TItemInfo::TItemInfo(const TItemInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemInfo)
}

void TItemInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  expiretime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemInfo::~TItemInfo() {
  // @@protoc_insertion_point(destructor:pb.TItemInfo)
  SharedDtor();
}

void TItemInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemInfo_descriptor_;
}

const TItemInfo& TItemInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TItemInfo* TItemInfo::default_instance_ = NULL;

TItemInfo* TItemInfo::New() const {
  return new TItemInfo;
}

void TItemInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, expiretime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ExpireTime;
        break;
      }

      // optional uint64 ExpireTime = 3;
      case 3: {
        if (tag == 24) {
         parse_ExpireTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expiretime_)));
          set_has_expiretime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemInfo)
  return false;
#undef DO_
}

void TItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  // optional uint64 ExpireTime = 3;
  if (has_expiretime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->expiretime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemInfo)
}

::google::protobuf::uint8* TItemInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  // optional uint64 ExpireTime = 3;
  if (has_expiretime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->expiretime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemInfo)
  return target;
}

int TItemInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint64 ExpireTime = 3;
    if (has_expiretime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->expiretime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemInfo::MergeFrom(const TItemInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_expiretime()) {
      set_expiretime(from.expiretime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemInfo::CopyFrom(const TItemInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemInfo::IsInitialized() const {

  return true;
}

void TItemInfo::Swap(TItemInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(expiretime_, other->expiretime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemInfo_descriptor_;
  metadata.reflection = TItemInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFirstInfo::kPayTotalFieldNumber;
const int TFirstInfo::kArrRewardIdFieldNumber;
#endif  // !_MSC_VER

TFirstInfo::TFirstInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFirstInfo)
}

void TFirstInfo::InitAsDefaultInstance() {
}

TFirstInfo::TFirstInfo(const TFirstInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFirstInfo)
}

void TFirstInfo::SharedCtor() {
  _cached_size_ = 0;
  paytotal_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFirstInfo::~TFirstInfo() {
  // @@protoc_insertion_point(destructor:pb.TFirstInfo)
  SharedDtor();
}

void TFirstInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFirstInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFirstInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFirstInfo_descriptor_;
}

const TFirstInfo& TFirstInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TFirstInfo* TFirstInfo::default_instance_ = NULL;

TFirstInfo* TFirstInfo::New() const {
  return new TFirstInfo;
}

void TFirstInfo::Clear() {
  paytotal_ = 0u;
  arrrewardid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFirstInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFirstInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 PayTotal = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &paytotal_)));
          set_has_paytotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ArrRewardId;
        break;
      }

      // repeated uint32 ArrRewardId = 2;
      case 2: {
        if (tag == 16) {
         parse_ArrRewardId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_arrrewardid())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrrewardid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ArrRewardId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFirstInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFirstInfo)
  return false;
#undef DO_
}

void TFirstInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFirstInfo)
  // optional uint32 PayTotal = 1;
  if (has_paytotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->paytotal(), output);
  }

  // repeated uint32 ArrRewardId = 2;
  for (int i = 0; i < this->arrrewardid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->arrrewardid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFirstInfo)
}

::google::protobuf::uint8* TFirstInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFirstInfo)
  // optional uint32 PayTotal = 1;
  if (has_paytotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->paytotal(), target);
  }

  // repeated uint32 ArrRewardId = 2;
  for (int i = 0; i < this->arrrewardid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->arrrewardid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFirstInfo)
  return target;
}

int TFirstInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 PayTotal = 1;
    if (has_paytotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->paytotal());
    }

  }
  // repeated uint32 ArrRewardId = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrrewardid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrrewardid(i));
    }
    total_size += 1 * this->arrrewardid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFirstInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFirstInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFirstInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFirstInfo::MergeFrom(const TFirstInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrewardid_.MergeFrom(from.arrrewardid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_paytotal()) {
      set_paytotal(from.paytotal());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFirstInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFirstInfo::CopyFrom(const TFirstInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFirstInfo::IsInitialized() const {

  return true;
}

void TFirstInfo::Swap(TFirstInfo* other) {
  if (other != this) {
    std::swap(paytotal_, other->paytotal_);
    arrrewardid_.Swap(&other->arrrewardid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFirstInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFirstInfo_descriptor_;
  metadata.reflection = TFirstInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPayGetGoldInfoRsp::kArrGoldInfoFieldNumber;
#endif  // !_MSC_VER

TPayGetGoldInfoRsp::TPayGetGoldInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPayGetGoldInfoRsp)
}

void TPayGetGoldInfoRsp::InitAsDefaultInstance() {
}

TPayGetGoldInfoRsp::TPayGetGoldInfoRsp(const TPayGetGoldInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPayGetGoldInfoRsp)
}

void TPayGetGoldInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPayGetGoldInfoRsp::~TPayGetGoldInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TPayGetGoldInfoRsp)
  SharedDtor();
}

void TPayGetGoldInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPayGetGoldInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPayGetGoldInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPayGetGoldInfoRsp_descriptor_;
}

const TPayGetGoldInfoRsp& TPayGetGoldInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TPayGetGoldInfoRsp* TPayGetGoldInfoRsp::default_instance_ = NULL;

TPayGetGoldInfoRsp* TPayGetGoldInfoRsp::New() const {
  return new TPayGetGoldInfoRsp;
}

void TPayGetGoldInfoRsp::Clear() {
  arrgoldinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPayGetGoldInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPayGetGoldInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TGoldInfo ArrGoldInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrGoldInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrgoldinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrGoldInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPayGetGoldInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPayGetGoldInfoRsp)
  return false;
#undef DO_
}

void TPayGetGoldInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPayGetGoldInfoRsp)
  // repeated .pb.TGoldInfo ArrGoldInfo = 1;
  for (int i = 0; i < this->arrgoldinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrgoldinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPayGetGoldInfoRsp)
}

::google::protobuf::uint8* TPayGetGoldInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPayGetGoldInfoRsp)
  // repeated .pb.TGoldInfo ArrGoldInfo = 1;
  for (int i = 0; i < this->arrgoldinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrgoldinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPayGetGoldInfoRsp)
  return target;
}

int TPayGetGoldInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TGoldInfo ArrGoldInfo = 1;
  total_size += 1 * this->arrgoldinfo_size();
  for (int i = 0; i < this->arrgoldinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrgoldinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPayGetGoldInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPayGetGoldInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPayGetGoldInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPayGetGoldInfoRsp::MergeFrom(const TPayGetGoldInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrgoldinfo_.MergeFrom(from.arrgoldinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPayGetGoldInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPayGetGoldInfoRsp::CopyFrom(const TPayGetGoldInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPayGetGoldInfoRsp::IsInitialized() const {

  return true;
}

void TPayGetGoldInfoRsp::Swap(TPayGetGoldInfoRsp* other) {
  if (other != this) {
    arrgoldinfo_.Swap(&other->arrgoldinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPayGetGoldInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPayGetGoldInfoRsp_descriptor_;
  metadata.reflection = TPayGetGoldInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPayGetItemInfoRsp::kArrItemInfoFieldNumber;
#endif  // !_MSC_VER

TPayGetItemInfoRsp::TPayGetItemInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPayGetItemInfoRsp)
}

void TPayGetItemInfoRsp::InitAsDefaultInstance() {
}

TPayGetItemInfoRsp::TPayGetItemInfoRsp(const TPayGetItemInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPayGetItemInfoRsp)
}

void TPayGetItemInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPayGetItemInfoRsp::~TPayGetItemInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TPayGetItemInfoRsp)
  SharedDtor();
}

void TPayGetItemInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPayGetItemInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPayGetItemInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPayGetItemInfoRsp_descriptor_;
}

const TPayGetItemInfoRsp& TPayGetItemInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TPayGetItemInfoRsp* TPayGetItemInfoRsp::default_instance_ = NULL;

TPayGetItemInfoRsp* TPayGetItemInfoRsp::New() const {
  return new TPayGetItemInfoRsp;
}

void TPayGetItemInfoRsp::Clear() {
  arriteminfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPayGetItemInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPayGetItemInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TItemInfo ArrItemInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrItemInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arriteminfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrItemInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPayGetItemInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPayGetItemInfoRsp)
  return false;
#undef DO_
}

void TPayGetItemInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPayGetItemInfoRsp)
  // repeated .pb.TItemInfo ArrItemInfo = 1;
  for (int i = 0; i < this->arriteminfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arriteminfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPayGetItemInfoRsp)
}

::google::protobuf::uint8* TPayGetItemInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPayGetItemInfoRsp)
  // repeated .pb.TItemInfo ArrItemInfo = 1;
  for (int i = 0; i < this->arriteminfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arriteminfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPayGetItemInfoRsp)
  return target;
}

int TPayGetItemInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TItemInfo ArrItemInfo = 1;
  total_size += 1 * this->arriteminfo_size();
  for (int i = 0; i < this->arriteminfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arriteminfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPayGetItemInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPayGetItemInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPayGetItemInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPayGetItemInfoRsp::MergeFrom(const TPayGetItemInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arriteminfo_.MergeFrom(from.arriteminfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPayGetItemInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPayGetItemInfoRsp::CopyFrom(const TPayGetItemInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPayGetItemInfoRsp::IsInitialized() const {

  return true;
}

void TPayGetItemInfoRsp::Swap(TPayGetItemInfoRsp* other) {
  if (other != this) {
    arriteminfo_.Swap(&other->arriteminfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPayGetItemInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPayGetItemInfoRsp_descriptor_;
  metadata.reflection = TPayGetItemInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPayGetFirstPayRsp::kFirstPayInfoFieldNumber;
const int TPayGetFirstPayRsp::kUserLogoffTimeFieldNumber;
#endif  // !_MSC_VER

TPayGetFirstPayRsp::TPayGetFirstPayRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPayGetFirstPayRsp)
}

void TPayGetFirstPayRsp::InitAsDefaultInstance() {
  firstpayinfo_ = const_cast< ::pb::TFirstInfo*>(&::pb::TFirstInfo::default_instance());
}

TPayGetFirstPayRsp::TPayGetFirstPayRsp(const TPayGetFirstPayRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPayGetFirstPayRsp)
}

void TPayGetFirstPayRsp::SharedCtor() {
  _cached_size_ = 0;
  firstpayinfo_ = NULL;
  userlogofftime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPayGetFirstPayRsp::~TPayGetFirstPayRsp() {
  // @@protoc_insertion_point(destructor:pb.TPayGetFirstPayRsp)
  SharedDtor();
}

void TPayGetFirstPayRsp::SharedDtor() {
  if (this != default_instance_) {
    delete firstpayinfo_;
  }
}

void TPayGetFirstPayRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPayGetFirstPayRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPayGetFirstPayRsp_descriptor_;
}

const TPayGetFirstPayRsp& TPayGetFirstPayRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TPayGetFirstPayRsp* TPayGetFirstPayRsp::default_instance_ = NULL;

TPayGetFirstPayRsp* TPayGetFirstPayRsp::New() const {
  return new TPayGetFirstPayRsp;
}

void TPayGetFirstPayRsp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_firstpayinfo()) {
      if (firstpayinfo_ != NULL) firstpayinfo_->::pb::TFirstInfo::Clear();
    }
    userlogofftime_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPayGetFirstPayRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPayGetFirstPayRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TFirstInfo FirstPayInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_firstpayinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_UserLogoffTime;
        break;
      }

      // optional uint64 UserLogoffTime = 2;
      case 2: {
        if (tag == 16) {
         parse_UserLogoffTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userlogofftime_)));
          set_has_userlogofftime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPayGetFirstPayRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPayGetFirstPayRsp)
  return false;
#undef DO_
}

void TPayGetFirstPayRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPayGetFirstPayRsp)
  // optional .pb.TFirstInfo FirstPayInfo = 1;
  if (has_firstpayinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->firstpayinfo(), output);
  }

  // optional uint64 UserLogoffTime = 2;
  if (has_userlogofftime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->userlogofftime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPayGetFirstPayRsp)
}

::google::protobuf::uint8* TPayGetFirstPayRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPayGetFirstPayRsp)
  // optional .pb.TFirstInfo FirstPayInfo = 1;
  if (has_firstpayinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->firstpayinfo(), target);
  }

  // optional uint64 UserLogoffTime = 2;
  if (has_userlogofftime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->userlogofftime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPayGetFirstPayRsp)
  return target;
}

int TPayGetFirstPayRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TFirstInfo FirstPayInfo = 1;
    if (has_firstpayinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->firstpayinfo());
    }

    // optional uint64 UserLogoffTime = 2;
    if (has_userlogofftime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->userlogofftime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPayGetFirstPayRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPayGetFirstPayRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPayGetFirstPayRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPayGetFirstPayRsp::MergeFrom(const TPayGetFirstPayRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_firstpayinfo()) {
      mutable_firstpayinfo()->::pb::TFirstInfo::MergeFrom(from.firstpayinfo());
    }
    if (from.has_userlogofftime()) {
      set_userlogofftime(from.userlogofftime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPayGetFirstPayRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPayGetFirstPayRsp::CopyFrom(const TPayGetFirstPayRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPayGetFirstPayRsp::IsInitialized() const {

  return true;
}

void TPayGetFirstPayRsp::Swap(TPayGetFirstPayRsp* other) {
  if (other != this) {
    std::swap(firstpayinfo_, other->firstpayinfo_);
    std::swap(userlogofftime_, other->userlogofftime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPayGetFirstPayRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPayGetFirstPayRsp_descriptor_;
  metadata.reflection = TPayGetFirstPayRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPayRewardFirstPayReq::kIdFieldNumber;
#endif  // !_MSC_VER

TPayRewardFirstPayReq::TPayRewardFirstPayReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPayRewardFirstPayReq)
}

void TPayRewardFirstPayReq::InitAsDefaultInstance() {
}

TPayRewardFirstPayReq::TPayRewardFirstPayReq(const TPayRewardFirstPayReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPayRewardFirstPayReq)
}

void TPayRewardFirstPayReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPayRewardFirstPayReq::~TPayRewardFirstPayReq() {
  // @@protoc_insertion_point(destructor:pb.TPayRewardFirstPayReq)
  SharedDtor();
}

void TPayRewardFirstPayReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPayRewardFirstPayReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPayRewardFirstPayReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPayRewardFirstPayReq_descriptor_;
}

const TPayRewardFirstPayReq& TPayRewardFirstPayReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TPayRewardFirstPayReq* TPayRewardFirstPayReq::default_instance_ = NULL;

TPayRewardFirstPayReq* TPayRewardFirstPayReq::New() const {
  return new TPayRewardFirstPayReq;
}

void TPayRewardFirstPayReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPayRewardFirstPayReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPayRewardFirstPayReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPayRewardFirstPayReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPayRewardFirstPayReq)
  return false;
#undef DO_
}

void TPayRewardFirstPayReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPayRewardFirstPayReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPayRewardFirstPayReq)
}

::google::protobuf::uint8* TPayRewardFirstPayReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPayRewardFirstPayReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPayRewardFirstPayReq)
  return target;
}

int TPayRewardFirstPayReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPayRewardFirstPayReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPayRewardFirstPayReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPayRewardFirstPayReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPayRewardFirstPayReq::MergeFrom(const TPayRewardFirstPayReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPayRewardFirstPayReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPayRewardFirstPayReq::CopyFrom(const TPayRewardFirstPayReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPayRewardFirstPayReq::IsInitialized() const {

  return true;
}

void TPayRewardFirstPayReq::Swap(TPayRewardFirstPayReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPayRewardFirstPayReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPayRewardFirstPayReq_descriptor_;
  metadata.reflection = TPayRewardFirstPayReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPayBuyGoldByCouponReq::kProductIdFieldNumber;
#endif  // !_MSC_VER

TPayBuyGoldByCouponReq::TPayBuyGoldByCouponReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPayBuyGoldByCouponReq)
}

void TPayBuyGoldByCouponReq::InitAsDefaultInstance() {
}

TPayBuyGoldByCouponReq::TPayBuyGoldByCouponReq(const TPayBuyGoldByCouponReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPayBuyGoldByCouponReq)
}

void TPayBuyGoldByCouponReq::SharedCtor() {
  _cached_size_ = 0;
  productid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPayBuyGoldByCouponReq::~TPayBuyGoldByCouponReq() {
  // @@protoc_insertion_point(destructor:pb.TPayBuyGoldByCouponReq)
  SharedDtor();
}

void TPayBuyGoldByCouponReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPayBuyGoldByCouponReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPayBuyGoldByCouponReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPayBuyGoldByCouponReq_descriptor_;
}

const TPayBuyGoldByCouponReq& TPayBuyGoldByCouponReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TPayBuyGoldByCouponReq* TPayBuyGoldByCouponReq::default_instance_ = NULL;

TPayBuyGoldByCouponReq* TPayBuyGoldByCouponReq::New() const {
  return new TPayBuyGoldByCouponReq;
}

void TPayBuyGoldByCouponReq::Clear() {
  productid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPayBuyGoldByCouponReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPayBuyGoldByCouponReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ProductId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &productid_)));
          set_has_productid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPayBuyGoldByCouponReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPayBuyGoldByCouponReq)
  return false;
#undef DO_
}

void TPayBuyGoldByCouponReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPayBuyGoldByCouponReq)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->productid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPayBuyGoldByCouponReq)
}

::google::protobuf::uint8* TPayBuyGoldByCouponReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPayBuyGoldByCouponReq)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->productid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPayBuyGoldByCouponReq)
  return target;
}

int TPayBuyGoldByCouponReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ProductId = 1;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->productid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPayBuyGoldByCouponReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPayBuyGoldByCouponReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPayBuyGoldByCouponReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPayBuyGoldByCouponReq::MergeFrom(const TPayBuyGoldByCouponReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_productid()) {
      set_productid(from.productid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPayBuyGoldByCouponReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPayBuyGoldByCouponReq::CopyFrom(const TPayBuyGoldByCouponReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPayBuyGoldByCouponReq::IsInitialized() const {

  return true;
}

void TPayBuyGoldByCouponReq::Swap(TPayBuyGoldByCouponReq* other) {
  if (other != this) {
    std::swap(productid_, other->productid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPayBuyGoldByCouponReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPayBuyGoldByCouponReq_descriptor_;
  metadata.reflection = TPayBuyGoldByCouponReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPayBuyGiftByCouponReq::kProductIdFieldNumber;
const int TPayBuyGiftByCouponReq::kUnifiedWorldFieldNumber;
#endif  // !_MSC_VER

TPayBuyGiftByCouponReq::TPayBuyGiftByCouponReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPayBuyGiftByCouponReq)
}

void TPayBuyGiftByCouponReq::InitAsDefaultInstance() {
}

TPayBuyGiftByCouponReq::TPayBuyGiftByCouponReq(const TPayBuyGiftByCouponReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPayBuyGiftByCouponReq)
}

void TPayBuyGiftByCouponReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  productid_ = 0u;
  unifiedworld_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPayBuyGiftByCouponReq::~TPayBuyGiftByCouponReq() {
  // @@protoc_insertion_point(destructor:pb.TPayBuyGiftByCouponReq)
  SharedDtor();
}

void TPayBuyGiftByCouponReq::SharedDtor() {
  if (unifiedworld_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete unifiedworld_;
  }
  if (this != default_instance_) {
  }
}

void TPayBuyGiftByCouponReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPayBuyGiftByCouponReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPayBuyGiftByCouponReq_descriptor_;
}

const TPayBuyGiftByCouponReq& TPayBuyGiftByCouponReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TPayBuyGiftByCouponReq* TPayBuyGiftByCouponReq::default_instance_ = NULL;

TPayBuyGiftByCouponReq* TPayBuyGiftByCouponReq::New() const {
  return new TPayBuyGiftByCouponReq;
}

void TPayBuyGiftByCouponReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    productid_ = 0u;
    if (has_unifiedworld()) {
      if (unifiedworld_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        unifiedworld_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPayBuyGiftByCouponReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPayBuyGiftByCouponReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ProductId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &productid_)));
          set_has_productid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_UnifiedWorld;
        break;
      }

      // optional string UnifiedWorld = 2;
      case 2: {
        if (tag == 18) {
         parse_UnifiedWorld:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unifiedworld()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unifiedworld().data(), this->unifiedworld().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "unifiedworld");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPayBuyGiftByCouponReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPayBuyGiftByCouponReq)
  return false;
#undef DO_
}

void TPayBuyGiftByCouponReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPayBuyGiftByCouponReq)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->productid(), output);
  }

  // optional string UnifiedWorld = 2;
  if (has_unifiedworld()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unifiedworld().data(), this->unifiedworld().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unifiedworld");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->unifiedworld(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPayBuyGiftByCouponReq)
}

::google::protobuf::uint8* TPayBuyGiftByCouponReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPayBuyGiftByCouponReq)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->productid(), target);
  }

  // optional string UnifiedWorld = 2;
  if (has_unifiedworld()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unifiedworld().data(), this->unifiedworld().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unifiedworld");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->unifiedworld(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPayBuyGiftByCouponReq)
  return target;
}

int TPayBuyGiftByCouponReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ProductId = 1;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->productid());
    }

    // optional string UnifiedWorld = 2;
    if (has_unifiedworld()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unifiedworld());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPayBuyGiftByCouponReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPayBuyGiftByCouponReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPayBuyGiftByCouponReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPayBuyGiftByCouponReq::MergeFrom(const TPayBuyGiftByCouponReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_productid()) {
      set_productid(from.productid());
    }
    if (from.has_unifiedworld()) {
      set_unifiedworld(from.unifiedworld());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPayBuyGiftByCouponReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPayBuyGiftByCouponReq::CopyFrom(const TPayBuyGiftByCouponReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPayBuyGiftByCouponReq::IsInitialized() const {

  return true;
}

void TPayBuyGiftByCouponReq::Swap(TPayBuyGiftByCouponReq* other) {
  if (other != this) {
    std::swap(productid_, other->productid_);
    std::swap(unifiedworld_, other->unifiedworld_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPayBuyGiftByCouponReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPayBuyGiftByCouponReq_descriptor_;
  metadata.reflection = TPayBuyGiftByCouponReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPayInfoNotify::kArrGoldInfoFieldNumber;
const int TPayInfoNotify::kArrItemInfoFieldNumber;
#endif  // !_MSC_VER

TPayInfoNotify::TPayInfoNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPayInfoNotify)
}

void TPayInfoNotify::InitAsDefaultInstance() {
}

TPayInfoNotify::TPayInfoNotify(const TPayInfoNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPayInfoNotify)
}

void TPayInfoNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPayInfoNotify::~TPayInfoNotify() {
  // @@protoc_insertion_point(destructor:pb.TPayInfoNotify)
  SharedDtor();
}

void TPayInfoNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPayInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPayInfoNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPayInfoNotify_descriptor_;
}

const TPayInfoNotify& TPayInfoNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TPayInfoNotify* TPayInfoNotify::default_instance_ = NULL;

TPayInfoNotify* TPayInfoNotify::New() const {
  return new TPayInfoNotify;
}

void TPayInfoNotify::Clear() {
  arrgoldinfo_.Clear();
  arriteminfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPayInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPayInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TGoldInfo ArrGoldInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrGoldInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrgoldinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrGoldInfo;
        if (input->ExpectTag(18)) goto parse_ArrItemInfo;
        break;
      }

      // repeated .pb.TItemInfo ArrItemInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrItemInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arriteminfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrItemInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPayInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPayInfoNotify)
  return false;
#undef DO_
}

void TPayInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPayInfoNotify)
  // repeated .pb.TGoldInfo ArrGoldInfo = 1;
  for (int i = 0; i < this->arrgoldinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrgoldinfo(i), output);
  }

  // repeated .pb.TItemInfo ArrItemInfo = 2;
  for (int i = 0; i < this->arriteminfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arriteminfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPayInfoNotify)
}

::google::protobuf::uint8* TPayInfoNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPayInfoNotify)
  // repeated .pb.TGoldInfo ArrGoldInfo = 1;
  for (int i = 0; i < this->arrgoldinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrgoldinfo(i), target);
  }

  // repeated .pb.TItemInfo ArrItemInfo = 2;
  for (int i = 0; i < this->arriteminfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arriteminfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPayInfoNotify)
  return target;
}

int TPayInfoNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TGoldInfo ArrGoldInfo = 1;
  total_size += 1 * this->arrgoldinfo_size();
  for (int i = 0; i < this->arrgoldinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrgoldinfo(i));
  }

  // repeated .pb.TItemInfo ArrItemInfo = 2;
  total_size += 1 * this->arriteminfo_size();
  for (int i = 0; i < this->arriteminfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arriteminfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPayInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPayInfoNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPayInfoNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPayInfoNotify::MergeFrom(const TPayInfoNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrgoldinfo_.MergeFrom(from.arrgoldinfo_);
  arriteminfo_.MergeFrom(from.arriteminfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPayInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPayInfoNotify::CopyFrom(const TPayInfoNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPayInfoNotify::IsInitialized() const {

  return true;
}

void TPayInfoNotify::Swap(TPayInfoNotify* other) {
  if (other != this) {
    arrgoldinfo_.Swap(&other->arrgoldinfo_);
    arriteminfo_.Swap(&other->arriteminfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPayInfoNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPayInfoNotify_descriptor_;
  metadata.reflection = TPayInfoNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TFirstPayNotify::kPayTotalFieldNumber;
#endif  // !_MSC_VER

TFirstPayNotify::TFirstPayNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TFirstPayNotify)
}

void TFirstPayNotify::InitAsDefaultInstance() {
}

TFirstPayNotify::TFirstPayNotify(const TFirstPayNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TFirstPayNotify)
}

void TFirstPayNotify::SharedCtor() {
  _cached_size_ = 0;
  paytotal_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TFirstPayNotify::~TFirstPayNotify() {
  // @@protoc_insertion_point(destructor:pb.TFirstPayNotify)
  SharedDtor();
}

void TFirstPayNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TFirstPayNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TFirstPayNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TFirstPayNotify_descriptor_;
}

const TFirstPayNotify& TFirstPayNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TFirstPayNotify* TFirstPayNotify::default_instance_ = NULL;

TFirstPayNotify* TFirstPayNotify::New() const {
  return new TFirstPayNotify;
}

void TFirstPayNotify::Clear() {
  paytotal_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TFirstPayNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TFirstPayNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 PayTotal = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &paytotal_)));
          set_has_paytotal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TFirstPayNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TFirstPayNotify)
  return false;
#undef DO_
}

void TFirstPayNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TFirstPayNotify)
  // optional uint32 PayTotal = 1;
  if (has_paytotal()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->paytotal(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TFirstPayNotify)
}

::google::protobuf::uint8* TFirstPayNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TFirstPayNotify)
  // optional uint32 PayTotal = 1;
  if (has_paytotal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->paytotal(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TFirstPayNotify)
  return target;
}

int TFirstPayNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 PayTotal = 1;
    if (has_paytotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->paytotal());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TFirstPayNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TFirstPayNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TFirstPayNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TFirstPayNotify::MergeFrom(const TFirstPayNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_paytotal()) {
      set_paytotal(from.paytotal());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TFirstPayNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TFirstPayNotify::CopyFrom(const TFirstPayNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TFirstPayNotify::IsInitialized() const {

  return true;
}

void TFirstPayNotify::Swap(TFirstPayNotify* other) {
  if (other != this) {
    std::swap(paytotal_, other->paytotal_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TFirstPayNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TFirstPayNotify_descriptor_;
  metadata.reflection = TFirstPayNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPayBuyFreeGiftReq::kGiftItemIdFieldNumber;
const int TPayBuyFreeGiftReq::kBuyNumFieldNumber;
const int TPayBuyFreeGiftReq::kUnifiedWorldFieldNumber;
#endif  // !_MSC_VER

TPayBuyFreeGiftReq::TPayBuyFreeGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPayBuyFreeGiftReq)
}

void TPayBuyFreeGiftReq::InitAsDefaultInstance() {
}

TPayBuyFreeGiftReq::TPayBuyFreeGiftReq(const TPayBuyFreeGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPayBuyFreeGiftReq)
}

void TPayBuyFreeGiftReq::SharedCtor() {
  _cached_size_ = 0;
  giftitemid_ = 0u;
  buynum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPayBuyFreeGiftReq::~TPayBuyFreeGiftReq() {
  // @@protoc_insertion_point(destructor:pb.TPayBuyFreeGiftReq)
  SharedDtor();
}

void TPayBuyFreeGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPayBuyFreeGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPayBuyFreeGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPayBuyFreeGiftReq_descriptor_;
}

const TPayBuyFreeGiftReq& TPayBuyFreeGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TPayBuyFreeGiftReq* TPayBuyFreeGiftReq::default_instance_ = NULL;

TPayBuyFreeGiftReq* TPayBuyFreeGiftReq::New() const {
  return new TPayBuyFreeGiftReq;
}

void TPayBuyFreeGiftReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPayBuyFreeGiftReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(giftitemid_, buynum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  unifiedworld_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPayBuyFreeGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPayBuyFreeGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GiftItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giftitemid_)));
          set_has_giftitemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BuyNum;
        break;
      }

      // optional uint32 BuyNum = 2;
      case 2: {
        if (tag == 16) {
         parse_BuyNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buynum_)));
          set_has_buynum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_UnifiedWorld;
        break;
      }

      // repeated uint32 UnifiedWorld = 3;
      case 3: {
        if (tag == 24) {
         parse_UnifiedWorld:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_unifiedworld())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unifiedworld())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_UnifiedWorld;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPayBuyFreeGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPayBuyFreeGiftReq)
  return false;
#undef DO_
}

void TPayBuyFreeGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPayBuyFreeGiftReq)
  // optional uint32 GiftItemId = 1;
  if (has_giftitemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->giftitemid(), output);
  }

  // optional uint32 BuyNum = 2;
  if (has_buynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->buynum(), output);
  }

  // repeated uint32 UnifiedWorld = 3;
  for (int i = 0; i < this->unifiedworld_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->unifiedworld(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPayBuyFreeGiftReq)
}

::google::protobuf::uint8* TPayBuyFreeGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPayBuyFreeGiftReq)
  // optional uint32 GiftItemId = 1;
  if (has_giftitemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->giftitemid(), target);
  }

  // optional uint32 BuyNum = 2;
  if (has_buynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->buynum(), target);
  }

  // repeated uint32 UnifiedWorld = 3;
  for (int i = 0; i < this->unifiedworld_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->unifiedworld(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPayBuyFreeGiftReq)
  return target;
}

int TPayBuyFreeGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GiftItemId = 1;
    if (has_giftitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->giftitemid());
    }

    // optional uint32 BuyNum = 2;
    if (has_buynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buynum());
    }

  }
  // repeated uint32 UnifiedWorld = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->unifiedworld_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->unifiedworld(i));
    }
    total_size += 1 * this->unifiedworld_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPayBuyFreeGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPayBuyFreeGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPayBuyFreeGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPayBuyFreeGiftReq::MergeFrom(const TPayBuyFreeGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  unifiedworld_.MergeFrom(from.unifiedworld_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_giftitemid()) {
      set_giftitemid(from.giftitemid());
    }
    if (from.has_buynum()) {
      set_buynum(from.buynum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPayBuyFreeGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPayBuyFreeGiftReq::CopyFrom(const TPayBuyFreeGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPayBuyFreeGiftReq::IsInitialized() const {

  return true;
}

void TPayBuyFreeGiftReq::Swap(TPayBuyFreeGiftReq* other) {
  if (other != this) {
    std::swap(giftitemid_, other->giftitemid_);
    std::swap(buynum_, other->buynum_);
    unifiedworld_.Swap(&other->unifiedworld_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPayBuyFreeGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPayBuyFreeGiftReq_descriptor_;
  metadata.reflection = TPayBuyFreeGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPayRebateReq::kRebateGoldFieldNumber;
const int TPayRebateReq::kMoneyFieldNumber;
#endif  // !_MSC_VER

TPayRebateReq::TPayRebateReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPayRebateReq)
}

void TPayRebateReq::InitAsDefaultInstance() {
}

TPayRebateReq::TPayRebateReq(const TPayRebateReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPayRebateReq)
}

void TPayRebateReq::SharedCtor() {
  _cached_size_ = 0;
  rebategold_ = 0u;
  money_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPayRebateReq::~TPayRebateReq() {
  // @@protoc_insertion_point(destructor:pb.TPayRebateReq)
  SharedDtor();
}

void TPayRebateReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPayRebateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPayRebateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPayRebateReq_descriptor_;
}

const TPayRebateReq& TPayRebateReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TPayRebateReq* TPayRebateReq::default_instance_ = NULL;

TPayRebateReq* TPayRebateReq::New() const {
  return new TPayRebateReq;
}

void TPayRebateReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPayRebateReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(rebategold_, money_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPayRebateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPayRebateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RebateGold = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rebategold_)));
          set_has_rebategold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Money;
        break;
      }

      // optional uint32 Money = 2;
      case 2: {
        if (tag == 16) {
         parse_Money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPayRebateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPayRebateReq)
  return false;
#undef DO_
}

void TPayRebateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPayRebateReq)
  // optional uint32 RebateGold = 1;
  if (has_rebategold()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rebategold(), output);
  }

  // optional uint32 Money = 2;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->money(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPayRebateReq)
}

::google::protobuf::uint8* TPayRebateReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPayRebateReq)
  // optional uint32 RebateGold = 1;
  if (has_rebategold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rebategold(), target);
  }

  // optional uint32 Money = 2;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->money(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPayRebateReq)
  return target;
}

int TPayRebateReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RebateGold = 1;
    if (has_rebategold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rebategold());
    }

    // optional uint32 Money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->money());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPayRebateReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPayRebateReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPayRebateReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPayRebateReq::MergeFrom(const TPayRebateReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rebategold()) {
      set_rebategold(from.rebategold());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPayRebateReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPayRebateReq::CopyFrom(const TPayRebateReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPayRebateReq::IsInitialized() const {

  return true;
}

void TPayRebateReq::Swap(TPayRebateReq* other) {
  if (other != this) {
    std::swap(rebategold_, other->rebategold_);
    std::swap(money_, other->money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPayRebateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPayRebateReq_descriptor_;
  metadata.reflection = TPayRebateReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPayExchangeGiftReq::kProductIdFieldNumber;
const int TPayExchangeGiftReq::kDoubleFieldNumber;
const int TPayExchangeGiftReq::kUnifiedWorldFieldNumber;
#endif  // !_MSC_VER

TPayExchangeGiftReq::TPayExchangeGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPayExchangeGiftReq)
}

void TPayExchangeGiftReq::InitAsDefaultInstance() {
}

TPayExchangeGiftReq::TPayExchangeGiftReq(const TPayExchangeGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPayExchangeGiftReq)
}

void TPayExchangeGiftReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  productid_ = 0u;
  double__ = 0u;
  unifiedworld_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPayExchangeGiftReq::~TPayExchangeGiftReq() {
  // @@protoc_insertion_point(destructor:pb.TPayExchangeGiftReq)
  SharedDtor();
}

void TPayExchangeGiftReq::SharedDtor() {
  if (unifiedworld_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete unifiedworld_;
  }
  if (this != default_instance_) {
  }
}

void TPayExchangeGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPayExchangeGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPayExchangeGiftReq_descriptor_;
}

const TPayExchangeGiftReq& TPayExchangeGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TPayExchangeGiftReq* TPayExchangeGiftReq::default_instance_ = NULL;

TPayExchangeGiftReq* TPayExchangeGiftReq::New() const {
  return new TPayExchangeGiftReq;
}

void TPayExchangeGiftReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPayExchangeGiftReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(productid_, double__);
    if (has_unifiedworld()) {
      if (unifiedworld_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        unifiedworld_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPayExchangeGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPayExchangeGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ProductId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &productid_)));
          set_has_productid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Double;
        break;
      }

      // optional uint32 Double = 2;
      case 2: {
        if (tag == 16) {
         parse_Double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &double__)));
          set_has_double_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_UnifiedWorld;
        break;
      }

      // optional string UnifiedWorld = 3;
      case 3: {
        if (tag == 26) {
         parse_UnifiedWorld:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unifiedworld()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unifiedworld().data(), this->unifiedworld().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "unifiedworld");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPayExchangeGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPayExchangeGiftReq)
  return false;
#undef DO_
}

void TPayExchangeGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPayExchangeGiftReq)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->productid(), output);
  }

  // optional uint32 Double = 2;
  if (has_double_()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->double_(), output);
  }

  // optional string UnifiedWorld = 3;
  if (has_unifiedworld()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unifiedworld().data(), this->unifiedworld().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unifiedworld");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->unifiedworld(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPayExchangeGiftReq)
}

::google::protobuf::uint8* TPayExchangeGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPayExchangeGiftReq)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->productid(), target);
  }

  // optional uint32 Double = 2;
  if (has_double_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->double_(), target);
  }

  // optional string UnifiedWorld = 3;
  if (has_unifiedworld()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unifiedworld().data(), this->unifiedworld().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unifiedworld");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->unifiedworld(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPayExchangeGiftReq)
  return target;
}

int TPayExchangeGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ProductId = 1;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->productid());
    }

    // optional uint32 Double = 2;
    if (has_double_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->double_());
    }

    // optional string UnifiedWorld = 3;
    if (has_unifiedworld()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unifiedworld());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPayExchangeGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPayExchangeGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPayExchangeGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPayExchangeGiftReq::MergeFrom(const TPayExchangeGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_productid()) {
      set_productid(from.productid());
    }
    if (from.has_double_()) {
      set_double_(from.double_());
    }
    if (from.has_unifiedworld()) {
      set_unifiedworld(from.unifiedworld());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPayExchangeGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPayExchangeGiftReq::CopyFrom(const TPayExchangeGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPayExchangeGiftReq::IsInitialized() const {

  return true;
}

void TPayExchangeGiftReq::Swap(TPayExchangeGiftReq* other) {
  if (other != this) {
    std::swap(productid_, other->productid_);
    std::swap(double__, other->double__);
    std::swap(unifiedworld_, other->unifiedworld_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPayExchangeGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPayExchangeGiftReq_descriptor_;
  metadata.reflection = TPayExchangeGiftReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPayExchangeGoldReq::kProductIdFieldNumber;
#endif  // !_MSC_VER

TPayExchangeGoldReq::TPayExchangeGoldReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPayExchangeGoldReq)
}

void TPayExchangeGoldReq::InitAsDefaultInstance() {
}

TPayExchangeGoldReq::TPayExchangeGoldReq(const TPayExchangeGoldReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPayExchangeGoldReq)
}

void TPayExchangeGoldReq::SharedCtor() {
  _cached_size_ = 0;
  productid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPayExchangeGoldReq::~TPayExchangeGoldReq() {
  // @@protoc_insertion_point(destructor:pb.TPayExchangeGoldReq)
  SharedDtor();
}

void TPayExchangeGoldReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPayExchangeGoldReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPayExchangeGoldReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPayExchangeGoldReq_descriptor_;
}

const TPayExchangeGoldReq& TPayExchangeGoldReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TPayExchangeGoldReq* TPayExchangeGoldReq::default_instance_ = NULL;

TPayExchangeGoldReq* TPayExchangeGoldReq::New() const {
  return new TPayExchangeGoldReq;
}

void TPayExchangeGoldReq::Clear() {
  productid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPayExchangeGoldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPayExchangeGoldReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ProductId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &productid_)));
          set_has_productid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPayExchangeGoldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPayExchangeGoldReq)
  return false;
#undef DO_
}

void TPayExchangeGoldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPayExchangeGoldReq)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->productid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPayExchangeGoldReq)
}

::google::protobuf::uint8* TPayExchangeGoldReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPayExchangeGoldReq)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->productid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPayExchangeGoldReq)
  return target;
}

int TPayExchangeGoldReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ProductId = 1;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->productid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPayExchangeGoldReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPayExchangeGoldReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPayExchangeGoldReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPayExchangeGoldReq::MergeFrom(const TPayExchangeGoldReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_productid()) {
      set_productid(from.productid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPayExchangeGoldReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPayExchangeGoldReq::CopyFrom(const TPayExchangeGoldReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPayExchangeGoldReq::IsInitialized() const {

  return true;
}

void TPayExchangeGoldReq::Swap(TPayExchangeGoldReq* other) {
  if (other != this) {
    std::swap(productid_, other->productid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPayExchangeGoldReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPayExchangeGoldReq_descriptor_;
  metadata.reflection = TPayExchangeGoldReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPayRebateRsp::kRetCodeFieldNumber;
#endif  // !_MSC_VER

TPayRebateRsp::TPayRebateRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPayRebateRsp)
}

void TPayRebateRsp::InitAsDefaultInstance() {
}

TPayRebateRsp::TPayRebateRsp(const TPayRebateRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPayRebateRsp)
}

void TPayRebateRsp::SharedCtor() {
  _cached_size_ = 0;
  retcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPayRebateRsp::~TPayRebateRsp() {
  // @@protoc_insertion_point(destructor:pb.TPayRebateRsp)
  SharedDtor();
}

void TPayRebateRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPayRebateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPayRebateRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPayRebateRsp_descriptor_;
}

const TPayRebateRsp& TPayRebateRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TPayRebateRsp* TPayRebateRsp::default_instance_ = NULL;

TPayRebateRsp* TPayRebateRsp::New() const {
  return new TPayRebateRsp;
}

void TPayRebateRsp::Clear() {
  retcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPayRebateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPayRebateRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.ERebateRetCode RetCode = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ERebateRetCode_IsValid(value)) {
            set_retcode(static_cast< ::pb::ERebateRetCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPayRebateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPayRebateRsp)
  return false;
#undef DO_
}

void TPayRebateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPayRebateRsp)
  // optional .pb.ERebateRetCode RetCode = 1;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->retcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPayRebateRsp)
}

::google::protobuf::uint8* TPayRebateRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPayRebateRsp)
  // optional .pb.ERebateRetCode RetCode = 1;
  if (has_retcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->retcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPayRebateRsp)
  return target;
}

int TPayRebateRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.ERebateRetCode RetCode = 1;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->retcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPayRebateRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPayRebateRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPayRebateRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPayRebateRsp::MergeFrom(const TPayRebateRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPayRebateRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPayRebateRsp::CopyFrom(const TPayRebateRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPayRebateRsp::IsInitialized() const {

  return true;
}

void TPayRebateRsp::Swap(TPayRebateRsp* other) {
  if (other != this) {
    std::swap(retcode_, other->retcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPayRebateRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPayRebateRsp_descriptor_;
  metadata.reflection = TPayRebateRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPayDoubleNotify::kProductIdFieldNumber;
const int TPayDoubleNotify::kRateFieldNumber;
#endif  // !_MSC_VER

TPayDoubleNotify::TPayDoubleNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPayDoubleNotify)
}

void TPayDoubleNotify::InitAsDefaultInstance() {
}

TPayDoubleNotify::TPayDoubleNotify(const TPayDoubleNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPayDoubleNotify)
}

void TPayDoubleNotify::SharedCtor() {
  _cached_size_ = 0;
  productid_ = 0u;
  rate_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPayDoubleNotify::~TPayDoubleNotify() {
  // @@protoc_insertion_point(destructor:pb.TPayDoubleNotify)
  SharedDtor();
}

void TPayDoubleNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPayDoubleNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPayDoubleNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPayDoubleNotify_descriptor_;
}

const TPayDoubleNotify& TPayDoubleNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPay_2eproto();
  return *default_instance_;
}

TPayDoubleNotify* TPayDoubleNotify::default_instance_ = NULL;

TPayDoubleNotify* TPayDoubleNotify::New() const {
  return new TPayDoubleNotify;
}

void TPayDoubleNotify::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPayDoubleNotify*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(productid_, rate_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPayDoubleNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPayDoubleNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ProductId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &productid_)));
          set_has_productid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Rate;
        break;
      }

      // optional uint32 Rate = 2;
      case 2: {
        if (tag == 16) {
         parse_Rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rate_)));
          set_has_rate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPayDoubleNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPayDoubleNotify)
  return false;
#undef DO_
}

void TPayDoubleNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPayDoubleNotify)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->productid(), output);
  }

  // optional uint32 Rate = 2;
  if (has_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPayDoubleNotify)
}

::google::protobuf::uint8* TPayDoubleNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPayDoubleNotify)
  // optional uint32 ProductId = 1;
  if (has_productid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->productid(), target);
  }

  // optional uint32 Rate = 2;
  if (has_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPayDoubleNotify)
  return target;
}

int TPayDoubleNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ProductId = 1;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->productid());
    }

    // optional uint32 Rate = 2;
    if (has_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPayDoubleNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPayDoubleNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPayDoubleNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPayDoubleNotify::MergeFrom(const TPayDoubleNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_productid()) {
      set_productid(from.productid());
    }
    if (from.has_rate()) {
      set_rate(from.rate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPayDoubleNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPayDoubleNotify::CopyFrom(const TPayDoubleNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPayDoubleNotify::IsInitialized() const {

  return true;
}

void TPayDoubleNotify::Swap(TPayDoubleNotify* other) {
  if (other != this) {
    std::swap(productid_, other->productid_);
    std::swap(rate_, other->rate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPayDoubleNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPayDoubleNotify_descriptor_;
  metadata.reflection = TPayDoubleNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
