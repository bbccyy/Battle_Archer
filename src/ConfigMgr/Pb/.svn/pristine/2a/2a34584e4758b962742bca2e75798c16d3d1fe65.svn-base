// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/OpenActivity.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/OpenActivity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActivityRewardInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActivityRewardInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActivityBuyRecordInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActivityBuyRecordInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityAccuLoginGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityAccuLoginGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityAccuLoginGetRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityAccuLoginGetRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityAccuLoginGetRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityAccuLoginGetRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityLevelUpGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityLevelUpGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityLevelUpGetRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityLevelUpGetRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityLevelUpGetRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityLevelUpGetRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityDiscountGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityDiscountGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityDiscountBuyGoodReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityDiscountBuyGoodReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityDiscountBuyGoodRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityDiscountBuyGoodRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityRecruitRetGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityRecruitRetGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityRecruitRetGetRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityRecruitRetGetRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityRecruitRetGetRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityRecruitRetGetRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHeroStarInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHeroStarInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHeroStarUpGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHeroStarUpGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHeroStarUpGetRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHeroStarUpGetRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHeroStarUpGetRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHeroStarUpGetRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthBuyRecordInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHalfMonthBuyRecordInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthSingleDayInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHalfMonthSingleDayInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthGetInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHalfMonthGetInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHalfMonthGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthGetTaskRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHalfMonthGetTaskRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthGetTaskRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHalfMonthGetTaskRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthBuyGoodsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHalfMonthBuyGoodsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthBuyGoodsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHalfMonthBuyGoodsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthGetIntegralRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHalfMonthGetIntegralRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthGetIntegralRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityHalfMonthGetIntegralRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOActSevenActivityGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOActSevenActivityGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOActSevenActivityReceiveTaskActivityAwardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOActSevenActivityReceiveTaskActivityAwardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOActSevenActivityReceiveSignAwardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOActSevenActivityReceiveSignAwardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOActSevenActivityBuySellDiscountItemReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOActSevenActivityBuySellDiscountItemReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOActStarBlessingBagGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOActStarBlessingBagGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOActStarBlessingBagGetRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOActStarBlessingBagGetRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityLotsOfGoldGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityLotsOfGoldGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityLotsOfGoldGetTaskRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityLotsOfGoldGetTaskRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityLotsOfGoldGetTaskRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityLotsOfGoldGetTaskRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityLotsOfGoldGetIntegralRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityLotsOfGoldGetIntegralRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityLotsOfGoldGetIntegralRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityLotsOfGoldGetIntegralRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityAllPlayerGoldHeroGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityAllPlayerGoldHeroGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityAllPlayerGoldHeroGetRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityAllPlayerGoldHeroGetRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityAllPlayerGoldHeroGetRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityAllPlayerGoldHeroGetRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityTowerPassLayerGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityTowerPassLayerGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityTowerPassLayerGetRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityTowerPassLayerGetRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOpenActivityTowerPassLayerGetRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOpenActivityTowerPassLayerGetRewardRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fOpenActivity_2eproto() {
  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/OpenActivity.proto");
  GOOGLE_CHECK(file != NULL);
  TActivityRewardInfo_descriptor_ = file->message_type(0);
  static const int TActivityRewardInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityRewardInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityRewardInfo, rewardtime_),
  };
  TActivityRewardInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActivityRewardInfo_descriptor_,
      TActivityRewardInfo::default_instance_,
      TActivityRewardInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityRewardInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityRewardInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActivityRewardInfo));
  TActivityBuyRecordInfo_descriptor_ = file->message_type(1);
  static const int TActivityBuyRecordInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityBuyRecordInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityBuyRecordInfo, goodindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityBuyRecordInfo, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityBuyRecordInfo, buytime_),
  };
  TActivityBuyRecordInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActivityBuyRecordInfo_descriptor_,
      TActivityBuyRecordInfo::default_instance_,
      TActivityBuyRecordInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityBuyRecordInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActivityBuyRecordInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActivityBuyRecordInfo));
  TOpenActivityAccuLoginGetInfoRsp_descriptor_ = file->message_type(2);
  static const int TOpenActivityAccuLoginGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAccuLoginGetInfoRsp, acculoginnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAccuLoginGetInfoRsp, arrrewardinfo_),
  };
  TOpenActivityAccuLoginGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityAccuLoginGetInfoRsp_descriptor_,
      TOpenActivityAccuLoginGetInfoRsp::default_instance_,
      TOpenActivityAccuLoginGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAccuLoginGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAccuLoginGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityAccuLoginGetInfoRsp));
  TOpenActivityAccuLoginGetRewardReq_descriptor_ = file->message_type(3);
  static const int TOpenActivityAccuLoginGetRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAccuLoginGetRewardReq, id_),
  };
  TOpenActivityAccuLoginGetRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityAccuLoginGetRewardReq_descriptor_,
      TOpenActivityAccuLoginGetRewardReq::default_instance_,
      TOpenActivityAccuLoginGetRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAccuLoginGetRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAccuLoginGetRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityAccuLoginGetRewardReq));
  TOpenActivityAccuLoginGetRewardRsp_descriptor_ = file->message_type(4);
  static const int TOpenActivityAccuLoginGetRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAccuLoginGetRewardRsp, arrreward_),
  };
  TOpenActivityAccuLoginGetRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityAccuLoginGetRewardRsp_descriptor_,
      TOpenActivityAccuLoginGetRewardRsp::default_instance_,
      TOpenActivityAccuLoginGetRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAccuLoginGetRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAccuLoginGetRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityAccuLoginGetRewardRsp));
  TOpenActivityLevelUpGetInfoRsp_descriptor_ = file->message_type(5);
  static const int TOpenActivityLevelUpGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLevelUpGetInfoRsp, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLevelUpGetInfoRsp, arrrewardinfo_),
  };
  TOpenActivityLevelUpGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityLevelUpGetInfoRsp_descriptor_,
      TOpenActivityLevelUpGetInfoRsp::default_instance_,
      TOpenActivityLevelUpGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLevelUpGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLevelUpGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityLevelUpGetInfoRsp));
  TOpenActivityLevelUpGetRewardReq_descriptor_ = file->message_type(6);
  static const int TOpenActivityLevelUpGetRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLevelUpGetRewardReq, id_),
  };
  TOpenActivityLevelUpGetRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityLevelUpGetRewardReq_descriptor_,
      TOpenActivityLevelUpGetRewardReq::default_instance_,
      TOpenActivityLevelUpGetRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLevelUpGetRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLevelUpGetRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityLevelUpGetRewardReq));
  TOpenActivityLevelUpGetRewardRsp_descriptor_ = file->message_type(7);
  static const int TOpenActivityLevelUpGetRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLevelUpGetRewardRsp, arrreward_),
  };
  TOpenActivityLevelUpGetRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityLevelUpGetRewardRsp_descriptor_,
      TOpenActivityLevelUpGetRewardRsp::default_instance_,
      TOpenActivityLevelUpGetRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLevelUpGetRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLevelUpGetRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityLevelUpGetRewardRsp));
  TOpenActivityDiscountGetInfoRsp_descriptor_ = file->message_type(8);
  static const int TOpenActivityDiscountGetInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityDiscountGetInfoRsp, arrbuyrecordinfo_),
  };
  TOpenActivityDiscountGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityDiscountGetInfoRsp_descriptor_,
      TOpenActivityDiscountGetInfoRsp::default_instance_,
      TOpenActivityDiscountGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityDiscountGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityDiscountGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityDiscountGetInfoRsp));
  TOpenActivityDiscountBuyGoodReq_descriptor_ = file->message_type(9);
  static const int TOpenActivityDiscountBuyGoodReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityDiscountBuyGoodReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityDiscountBuyGoodReq, goodindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityDiscountBuyGoodReq, num_),
  };
  TOpenActivityDiscountBuyGoodReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityDiscountBuyGoodReq_descriptor_,
      TOpenActivityDiscountBuyGoodReq::default_instance_,
      TOpenActivityDiscountBuyGoodReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityDiscountBuyGoodReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityDiscountBuyGoodReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityDiscountBuyGoodReq));
  TOpenActivityDiscountBuyGoodRsp_descriptor_ = file->message_type(10);
  static const int TOpenActivityDiscountBuyGoodRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityDiscountBuyGoodRsp, arrreward_),
  };
  TOpenActivityDiscountBuyGoodRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityDiscountBuyGoodRsp_descriptor_,
      TOpenActivityDiscountBuyGoodRsp::default_instance_,
      TOpenActivityDiscountBuyGoodRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityDiscountBuyGoodRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityDiscountBuyGoodRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityDiscountBuyGoodRsp));
  TOpenActivityRecruitRetGetInfoRsp_descriptor_ = file->message_type(11);
  static const int TOpenActivityRecruitRetGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityRecruitRetGetInfoRsp, recruitnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityRecruitRetGetInfoRsp, arrrewardinfo_),
  };
  TOpenActivityRecruitRetGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityRecruitRetGetInfoRsp_descriptor_,
      TOpenActivityRecruitRetGetInfoRsp::default_instance_,
      TOpenActivityRecruitRetGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityRecruitRetGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityRecruitRetGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityRecruitRetGetInfoRsp));
  TOpenActivityRecruitRetGetRewardReq_descriptor_ = file->message_type(12);
  static const int TOpenActivityRecruitRetGetRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityRecruitRetGetRewardReq, id_),
  };
  TOpenActivityRecruitRetGetRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityRecruitRetGetRewardReq_descriptor_,
      TOpenActivityRecruitRetGetRewardReq::default_instance_,
      TOpenActivityRecruitRetGetRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityRecruitRetGetRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityRecruitRetGetRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityRecruitRetGetRewardReq));
  TOpenActivityRecruitRetGetRewardRsp_descriptor_ = file->message_type(13);
  static const int TOpenActivityRecruitRetGetRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityRecruitRetGetRewardRsp, arrreward_),
  };
  TOpenActivityRecruitRetGetRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityRecruitRetGetRewardRsp_descriptor_,
      TOpenActivityRecruitRetGetRewardRsp::default_instance_,
      TOpenActivityRecruitRetGetRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityRecruitRetGetRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityRecruitRetGetRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityRecruitRetGetRewardRsp));
  TOpenActivityHeroStarInfo_descriptor_ = file->message_type(14);
  static const int TOpenActivityHeroStarInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarInfo, htid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarInfo, starlv_),
  };
  TOpenActivityHeroStarInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHeroStarInfo_descriptor_,
      TOpenActivityHeroStarInfo::default_instance_,
      TOpenActivityHeroStarInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHeroStarInfo));
  TOpenActivityHeroStarUpGetInfoRsp_descriptor_ = file->message_type(15);
  static const int TOpenActivityHeroStarUpGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarUpGetInfoRsp, arrherostar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarUpGetInfoRsp, arrrewardinfo_),
  };
  TOpenActivityHeroStarUpGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHeroStarUpGetInfoRsp_descriptor_,
      TOpenActivityHeroStarUpGetInfoRsp::default_instance_,
      TOpenActivityHeroStarUpGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarUpGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarUpGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHeroStarUpGetInfoRsp));
  TOpenActivityHeroStarUpGetRewardReq_descriptor_ = file->message_type(16);
  static const int TOpenActivityHeroStarUpGetRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarUpGetRewardReq, id_),
  };
  TOpenActivityHeroStarUpGetRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHeroStarUpGetRewardReq_descriptor_,
      TOpenActivityHeroStarUpGetRewardReq::default_instance_,
      TOpenActivityHeroStarUpGetRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarUpGetRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarUpGetRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHeroStarUpGetRewardReq));
  TOpenActivityHeroStarUpGetRewardRsp_descriptor_ = file->message_type(17);
  static const int TOpenActivityHeroStarUpGetRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarUpGetRewardRsp, arrreward_),
  };
  TOpenActivityHeroStarUpGetRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHeroStarUpGetRewardRsp_descriptor_,
      TOpenActivityHeroStarUpGetRewardRsp::default_instance_,
      TOpenActivityHeroStarUpGetRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarUpGetRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHeroStarUpGetRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHeroStarUpGetRewardRsp));
  TOpenActivityHalfMonthBuyRecordInfo_descriptor_ = file->message_type(18);
  static const int TOpenActivityHalfMonthBuyRecordInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyRecordInfo, goodindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyRecordInfo, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyRecordInfo, buytime_),
  };
  TOpenActivityHalfMonthBuyRecordInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHalfMonthBuyRecordInfo_descriptor_,
      TOpenActivityHalfMonthBuyRecordInfo::default_instance_,
      TOpenActivityHalfMonthBuyRecordInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyRecordInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyRecordInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHalfMonthBuyRecordInfo));
  TOpenActivityHalfMonthSingleDayInfo_descriptor_ = file->message_type(19);
  static const int TOpenActivityHalfMonthSingleDayInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthSingleDayInfo, dayid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthSingleDayInfo, arrtaskrewardinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthSingleDayInfo, arrbuyrecordinfo_),
  };
  TOpenActivityHalfMonthSingleDayInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHalfMonthSingleDayInfo_descriptor_,
      TOpenActivityHalfMonthSingleDayInfo::default_instance_,
      TOpenActivityHalfMonthSingleDayInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthSingleDayInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthSingleDayInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHalfMonthSingleDayInfo));
  TOpenActivityHalfMonthGetInfoReq_descriptor_ = file->message_type(20);
  static const int TOpenActivityHalfMonthGetInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetInfoReq, confid_),
  };
  TOpenActivityHalfMonthGetInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHalfMonthGetInfoReq_descriptor_,
      TOpenActivityHalfMonthGetInfoReq::default_instance_,
      TOpenActivityHalfMonthGetInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHalfMonthGetInfoReq));
  TOpenActivityHalfMonthGetInfoRsp_descriptor_ = file->message_type(21);
  static const int TOpenActivityHalfMonthGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetInfoRsp, arrdayinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetInfoRsp, arrintegralrewardinfo_),
  };
  TOpenActivityHalfMonthGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHalfMonthGetInfoRsp_descriptor_,
      TOpenActivityHalfMonthGetInfoRsp::default_instance_,
      TOpenActivityHalfMonthGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHalfMonthGetInfoRsp));
  TOpenActivityHalfMonthGetTaskRewardReq_descriptor_ = file->message_type(22);
  static const int TOpenActivityHalfMonthGetTaskRewardReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetTaskRewardReq, confid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetTaskRewardReq, dayid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetTaskRewardReq, contentid_),
  };
  TOpenActivityHalfMonthGetTaskRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHalfMonthGetTaskRewardReq_descriptor_,
      TOpenActivityHalfMonthGetTaskRewardReq::default_instance_,
      TOpenActivityHalfMonthGetTaskRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetTaskRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetTaskRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHalfMonthGetTaskRewardReq));
  TOpenActivityHalfMonthGetTaskRewardRsp_descriptor_ = file->message_type(23);
  static const int TOpenActivityHalfMonthGetTaskRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetTaskRewardRsp, arrreward_),
  };
  TOpenActivityHalfMonthGetTaskRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHalfMonthGetTaskRewardRsp_descriptor_,
      TOpenActivityHalfMonthGetTaskRewardRsp::default_instance_,
      TOpenActivityHalfMonthGetTaskRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetTaskRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetTaskRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHalfMonthGetTaskRewardRsp));
  TOpenActivityHalfMonthBuyGoodsReq_descriptor_ = file->message_type(24);
  static const int TOpenActivityHalfMonthBuyGoodsReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyGoodsReq, confid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyGoodsReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyGoodsReq, goodindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyGoodsReq, num_),
  };
  TOpenActivityHalfMonthBuyGoodsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHalfMonthBuyGoodsReq_descriptor_,
      TOpenActivityHalfMonthBuyGoodsReq::default_instance_,
      TOpenActivityHalfMonthBuyGoodsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyGoodsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyGoodsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHalfMonthBuyGoodsReq));
  TOpenActivityHalfMonthBuyGoodsRsp_descriptor_ = file->message_type(25);
  static const int TOpenActivityHalfMonthBuyGoodsRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyGoodsRsp, arrreward_),
  };
  TOpenActivityHalfMonthBuyGoodsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHalfMonthBuyGoodsRsp_descriptor_,
      TOpenActivityHalfMonthBuyGoodsRsp::default_instance_,
      TOpenActivityHalfMonthBuyGoodsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyGoodsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthBuyGoodsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHalfMonthBuyGoodsRsp));
  TOpenActivityHalfMonthGetIntegralRewardReq_descriptor_ = file->message_type(26);
  static const int TOpenActivityHalfMonthGetIntegralRewardReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetIntegralRewardReq, confid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetIntegralRewardReq, id_),
  };
  TOpenActivityHalfMonthGetIntegralRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHalfMonthGetIntegralRewardReq_descriptor_,
      TOpenActivityHalfMonthGetIntegralRewardReq::default_instance_,
      TOpenActivityHalfMonthGetIntegralRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetIntegralRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetIntegralRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHalfMonthGetIntegralRewardReq));
  TOpenActivityHalfMonthGetIntegralRewardRsp_descriptor_ = file->message_type(27);
  static const int TOpenActivityHalfMonthGetIntegralRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetIntegralRewardRsp, arrreward_),
  };
  TOpenActivityHalfMonthGetIntegralRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityHalfMonthGetIntegralRewardRsp_descriptor_,
      TOpenActivityHalfMonthGetIntegralRewardRsp::default_instance_,
      TOpenActivityHalfMonthGetIntegralRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetIntegralRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityHalfMonthGetIntegralRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityHalfMonthGetIntegralRewardRsp));
  TOActSevenActivityGetInfoRsp_descriptor_ = file->message_type(28);
  static const int TOActSevenActivityGetInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityGetInfoRsp, taskarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityGetInfoRsp, signrewardarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityGetInfoRsp, selldiscountarr_),
  };
  TOActSevenActivityGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOActSevenActivityGetInfoRsp_descriptor_,
      TOActSevenActivityGetInfoRsp::default_instance_,
      TOActSevenActivityGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOActSevenActivityGetInfoRsp));
  TOActSevenActivityReceiveTaskActivityAwardReq_descriptor_ = file->message_type(29);
  static const int TOActSevenActivityReceiveTaskActivityAwardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityReceiveTaskActivityAwardReq, contentid_),
  };
  TOActSevenActivityReceiveTaskActivityAwardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOActSevenActivityReceiveTaskActivityAwardReq_descriptor_,
      TOActSevenActivityReceiveTaskActivityAwardReq::default_instance_,
      TOActSevenActivityReceiveTaskActivityAwardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityReceiveTaskActivityAwardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityReceiveTaskActivityAwardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOActSevenActivityReceiveTaskActivityAwardReq));
  TOActSevenActivityReceiveSignAwardReq_descriptor_ = file->message_type(30);
  static const int TOActSevenActivityReceiveSignAwardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityReceiveSignAwardReq, day_),
  };
  TOActSevenActivityReceiveSignAwardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOActSevenActivityReceiveSignAwardReq_descriptor_,
      TOActSevenActivityReceiveSignAwardReq::default_instance_,
      TOActSevenActivityReceiveSignAwardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityReceiveSignAwardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityReceiveSignAwardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOActSevenActivityReceiveSignAwardReq));
  TOActSevenActivityBuySellDiscountItemReq_descriptor_ = file->message_type(31);
  static const int TOActSevenActivityBuySellDiscountItemReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityBuySellDiscountItemReq, day_),
  };
  TOActSevenActivityBuySellDiscountItemReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOActSevenActivityBuySellDiscountItemReq_descriptor_,
      TOActSevenActivityBuySellDiscountItemReq::default_instance_,
      TOActSevenActivityBuySellDiscountItemReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityBuySellDiscountItemReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActSevenActivityBuySellDiscountItemReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOActSevenActivityBuySellDiscountItemReq));
  TOActStarBlessingBagGetInfoRsp_descriptor_ = file->message_type(32);
  static const int TOActStarBlessingBagGetInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActStarBlessingBagGetInfoRsp, arrrewardinfo_),
  };
  TOActStarBlessingBagGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOActStarBlessingBagGetInfoRsp_descriptor_,
      TOActStarBlessingBagGetInfoRsp::default_instance_,
      TOActStarBlessingBagGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActStarBlessingBagGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActStarBlessingBagGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOActStarBlessingBagGetInfoRsp));
  TOActStarBlessingBagGetRewardRsp_descriptor_ = file->message_type(33);
  static const int TOActStarBlessingBagGetRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActStarBlessingBagGetRewardRsp, rewardinfo_),
  };
  TOActStarBlessingBagGetRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOActStarBlessingBagGetRewardRsp_descriptor_,
      TOActStarBlessingBagGetRewardRsp::default_instance_,
      TOActStarBlessingBagGetRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActStarBlessingBagGetRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOActStarBlessingBagGetRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOActStarBlessingBagGetRewardRsp));
  TOpenActivityLotsOfGoldGetInfoRsp_descriptor_ = file->message_type(34);
  static const int TOpenActivityLotsOfGoldGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetInfoRsp, arrtaskrewardinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetInfoRsp, arrintegralrewardinfo_),
  };
  TOpenActivityLotsOfGoldGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityLotsOfGoldGetInfoRsp_descriptor_,
      TOpenActivityLotsOfGoldGetInfoRsp::default_instance_,
      TOpenActivityLotsOfGoldGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityLotsOfGoldGetInfoRsp));
  TOpenActivityLotsOfGoldGetTaskRewardReq_descriptor_ = file->message_type(35);
  static const int TOpenActivityLotsOfGoldGetTaskRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetTaskRewardReq, contentid_),
  };
  TOpenActivityLotsOfGoldGetTaskRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityLotsOfGoldGetTaskRewardReq_descriptor_,
      TOpenActivityLotsOfGoldGetTaskRewardReq::default_instance_,
      TOpenActivityLotsOfGoldGetTaskRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetTaskRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetTaskRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityLotsOfGoldGetTaskRewardReq));
  TOpenActivityLotsOfGoldGetTaskRewardRsp_descriptor_ = file->message_type(36);
  static const int TOpenActivityLotsOfGoldGetTaskRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetTaskRewardRsp, arrreward_),
  };
  TOpenActivityLotsOfGoldGetTaskRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityLotsOfGoldGetTaskRewardRsp_descriptor_,
      TOpenActivityLotsOfGoldGetTaskRewardRsp::default_instance_,
      TOpenActivityLotsOfGoldGetTaskRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetTaskRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetTaskRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityLotsOfGoldGetTaskRewardRsp));
  TOpenActivityLotsOfGoldGetIntegralRewardReq_descriptor_ = file->message_type(37);
  static const int TOpenActivityLotsOfGoldGetIntegralRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetIntegralRewardReq, integralid_),
  };
  TOpenActivityLotsOfGoldGetIntegralRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityLotsOfGoldGetIntegralRewardReq_descriptor_,
      TOpenActivityLotsOfGoldGetIntegralRewardReq::default_instance_,
      TOpenActivityLotsOfGoldGetIntegralRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetIntegralRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetIntegralRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityLotsOfGoldGetIntegralRewardReq));
  TOpenActivityLotsOfGoldGetIntegralRewardRsp_descriptor_ = file->message_type(38);
  static const int TOpenActivityLotsOfGoldGetIntegralRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetIntegralRewardRsp, arrreward_),
  };
  TOpenActivityLotsOfGoldGetIntegralRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityLotsOfGoldGetIntegralRewardRsp_descriptor_,
      TOpenActivityLotsOfGoldGetIntegralRewardRsp::default_instance_,
      TOpenActivityLotsOfGoldGetIntegralRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetIntegralRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityLotsOfGoldGetIntegralRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityLotsOfGoldGetIntegralRewardRsp));
  TOpenActivityAllPlayerGoldHeroGetInfoRsp_descriptor_ = file->message_type(39);
  static const int TOpenActivityAllPlayerGoldHeroGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAllPlayerGoldHeroGetInfoRsp, totalwavenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAllPlayerGoldHeroGetInfoRsp, arrrewardinfo_),
  };
  TOpenActivityAllPlayerGoldHeroGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityAllPlayerGoldHeroGetInfoRsp_descriptor_,
      TOpenActivityAllPlayerGoldHeroGetInfoRsp::default_instance_,
      TOpenActivityAllPlayerGoldHeroGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAllPlayerGoldHeroGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAllPlayerGoldHeroGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityAllPlayerGoldHeroGetInfoRsp));
  TOpenActivityAllPlayerGoldHeroGetRewardReq_descriptor_ = file->message_type(40);
  static const int TOpenActivityAllPlayerGoldHeroGetRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAllPlayerGoldHeroGetRewardReq, id_),
  };
  TOpenActivityAllPlayerGoldHeroGetRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityAllPlayerGoldHeroGetRewardReq_descriptor_,
      TOpenActivityAllPlayerGoldHeroGetRewardReq::default_instance_,
      TOpenActivityAllPlayerGoldHeroGetRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAllPlayerGoldHeroGetRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAllPlayerGoldHeroGetRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityAllPlayerGoldHeroGetRewardReq));
  TOpenActivityAllPlayerGoldHeroGetRewardRsp_descriptor_ = file->message_type(41);
  static const int TOpenActivityAllPlayerGoldHeroGetRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAllPlayerGoldHeroGetRewardRsp, arrreward_),
  };
  TOpenActivityAllPlayerGoldHeroGetRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityAllPlayerGoldHeroGetRewardRsp_descriptor_,
      TOpenActivityAllPlayerGoldHeroGetRewardRsp::default_instance_,
      TOpenActivityAllPlayerGoldHeroGetRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAllPlayerGoldHeroGetRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityAllPlayerGoldHeroGetRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityAllPlayerGoldHeroGetRewardRsp));
  TOpenActivityTowerPassLayerGetInfoRsp_descriptor_ = file->message_type(42);
  static const int TOpenActivityTowerPassLayerGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityTowerPassLayerGetInfoRsp, passlayer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityTowerPassLayerGetInfoRsp, arrrewardinfo_),
  };
  TOpenActivityTowerPassLayerGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityTowerPassLayerGetInfoRsp_descriptor_,
      TOpenActivityTowerPassLayerGetInfoRsp::default_instance_,
      TOpenActivityTowerPassLayerGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityTowerPassLayerGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityTowerPassLayerGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityTowerPassLayerGetInfoRsp));
  TOpenActivityTowerPassLayerGetRewardReq_descriptor_ = file->message_type(43);
  static const int TOpenActivityTowerPassLayerGetRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityTowerPassLayerGetRewardReq, id_),
  };
  TOpenActivityTowerPassLayerGetRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityTowerPassLayerGetRewardReq_descriptor_,
      TOpenActivityTowerPassLayerGetRewardReq::default_instance_,
      TOpenActivityTowerPassLayerGetRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityTowerPassLayerGetRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityTowerPassLayerGetRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityTowerPassLayerGetRewardReq));
  TOpenActivityTowerPassLayerGetRewardRsp_descriptor_ = file->message_type(44);
  static const int TOpenActivityTowerPassLayerGetRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityTowerPassLayerGetRewardRsp, arrreward_),
  };
  TOpenActivityTowerPassLayerGetRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOpenActivityTowerPassLayerGetRewardRsp_descriptor_,
      TOpenActivityTowerPassLayerGetRewardRsp::default_instance_,
      TOpenActivityTowerPassLayerGetRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityTowerPassLayerGetRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOpenActivityTowerPassLayerGetRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOpenActivityTowerPassLayerGetRewardRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fOpenActivity_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActivityRewardInfo_descriptor_, &TActivityRewardInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActivityBuyRecordInfo_descriptor_, &TActivityBuyRecordInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityAccuLoginGetInfoRsp_descriptor_, &TOpenActivityAccuLoginGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityAccuLoginGetRewardReq_descriptor_, &TOpenActivityAccuLoginGetRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityAccuLoginGetRewardRsp_descriptor_, &TOpenActivityAccuLoginGetRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityLevelUpGetInfoRsp_descriptor_, &TOpenActivityLevelUpGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityLevelUpGetRewardReq_descriptor_, &TOpenActivityLevelUpGetRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityLevelUpGetRewardRsp_descriptor_, &TOpenActivityLevelUpGetRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityDiscountGetInfoRsp_descriptor_, &TOpenActivityDiscountGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityDiscountBuyGoodReq_descriptor_, &TOpenActivityDiscountBuyGoodReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityDiscountBuyGoodRsp_descriptor_, &TOpenActivityDiscountBuyGoodRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityRecruitRetGetInfoRsp_descriptor_, &TOpenActivityRecruitRetGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityRecruitRetGetRewardReq_descriptor_, &TOpenActivityRecruitRetGetRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityRecruitRetGetRewardRsp_descriptor_, &TOpenActivityRecruitRetGetRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHeroStarInfo_descriptor_, &TOpenActivityHeroStarInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHeroStarUpGetInfoRsp_descriptor_, &TOpenActivityHeroStarUpGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHeroStarUpGetRewardReq_descriptor_, &TOpenActivityHeroStarUpGetRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHeroStarUpGetRewardRsp_descriptor_, &TOpenActivityHeroStarUpGetRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHalfMonthBuyRecordInfo_descriptor_, &TOpenActivityHalfMonthBuyRecordInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHalfMonthSingleDayInfo_descriptor_, &TOpenActivityHalfMonthSingleDayInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHalfMonthGetInfoReq_descriptor_, &TOpenActivityHalfMonthGetInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHalfMonthGetInfoRsp_descriptor_, &TOpenActivityHalfMonthGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHalfMonthGetTaskRewardReq_descriptor_, &TOpenActivityHalfMonthGetTaskRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHalfMonthGetTaskRewardRsp_descriptor_, &TOpenActivityHalfMonthGetTaskRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHalfMonthBuyGoodsReq_descriptor_, &TOpenActivityHalfMonthBuyGoodsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHalfMonthBuyGoodsRsp_descriptor_, &TOpenActivityHalfMonthBuyGoodsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHalfMonthGetIntegralRewardReq_descriptor_, &TOpenActivityHalfMonthGetIntegralRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityHalfMonthGetIntegralRewardRsp_descriptor_, &TOpenActivityHalfMonthGetIntegralRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOActSevenActivityGetInfoRsp_descriptor_, &TOActSevenActivityGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOActSevenActivityReceiveTaskActivityAwardReq_descriptor_, &TOActSevenActivityReceiveTaskActivityAwardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOActSevenActivityReceiveSignAwardReq_descriptor_, &TOActSevenActivityReceiveSignAwardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOActSevenActivityBuySellDiscountItemReq_descriptor_, &TOActSevenActivityBuySellDiscountItemReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOActStarBlessingBagGetInfoRsp_descriptor_, &TOActStarBlessingBagGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOActStarBlessingBagGetRewardRsp_descriptor_, &TOActStarBlessingBagGetRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityLotsOfGoldGetInfoRsp_descriptor_, &TOpenActivityLotsOfGoldGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityLotsOfGoldGetTaskRewardReq_descriptor_, &TOpenActivityLotsOfGoldGetTaskRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityLotsOfGoldGetTaskRewardRsp_descriptor_, &TOpenActivityLotsOfGoldGetTaskRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityLotsOfGoldGetIntegralRewardReq_descriptor_, &TOpenActivityLotsOfGoldGetIntegralRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityLotsOfGoldGetIntegralRewardRsp_descriptor_, &TOpenActivityLotsOfGoldGetIntegralRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityAllPlayerGoldHeroGetInfoRsp_descriptor_, &TOpenActivityAllPlayerGoldHeroGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityAllPlayerGoldHeroGetRewardReq_descriptor_, &TOpenActivityAllPlayerGoldHeroGetRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityAllPlayerGoldHeroGetRewardRsp_descriptor_, &TOpenActivityAllPlayerGoldHeroGetRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityTowerPassLayerGetInfoRsp_descriptor_, &TOpenActivityTowerPassLayerGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityTowerPassLayerGetRewardReq_descriptor_, &TOpenActivityTowerPassLayerGetRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOpenActivityTowerPassLayerGetRewardRsp_descriptor_, &TOpenActivityTowerPassLayerGetRewardRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fOpenActivity_2eproto() {
  delete TActivityRewardInfo::default_instance_;
  delete TActivityRewardInfo_reflection_;
  delete TActivityBuyRecordInfo::default_instance_;
  delete TActivityBuyRecordInfo_reflection_;
  delete TOpenActivityAccuLoginGetInfoRsp::default_instance_;
  delete TOpenActivityAccuLoginGetInfoRsp_reflection_;
  delete TOpenActivityAccuLoginGetRewardReq::default_instance_;
  delete TOpenActivityAccuLoginGetRewardReq_reflection_;
  delete TOpenActivityAccuLoginGetRewardRsp::default_instance_;
  delete TOpenActivityAccuLoginGetRewardRsp_reflection_;
  delete TOpenActivityLevelUpGetInfoRsp::default_instance_;
  delete TOpenActivityLevelUpGetInfoRsp_reflection_;
  delete TOpenActivityLevelUpGetRewardReq::default_instance_;
  delete TOpenActivityLevelUpGetRewardReq_reflection_;
  delete TOpenActivityLevelUpGetRewardRsp::default_instance_;
  delete TOpenActivityLevelUpGetRewardRsp_reflection_;
  delete TOpenActivityDiscountGetInfoRsp::default_instance_;
  delete TOpenActivityDiscountGetInfoRsp_reflection_;
  delete TOpenActivityDiscountBuyGoodReq::default_instance_;
  delete TOpenActivityDiscountBuyGoodReq_reflection_;
  delete TOpenActivityDiscountBuyGoodRsp::default_instance_;
  delete TOpenActivityDiscountBuyGoodRsp_reflection_;
  delete TOpenActivityRecruitRetGetInfoRsp::default_instance_;
  delete TOpenActivityRecruitRetGetInfoRsp_reflection_;
  delete TOpenActivityRecruitRetGetRewardReq::default_instance_;
  delete TOpenActivityRecruitRetGetRewardReq_reflection_;
  delete TOpenActivityRecruitRetGetRewardRsp::default_instance_;
  delete TOpenActivityRecruitRetGetRewardRsp_reflection_;
  delete TOpenActivityHeroStarInfo::default_instance_;
  delete TOpenActivityHeroStarInfo_reflection_;
  delete TOpenActivityHeroStarUpGetInfoRsp::default_instance_;
  delete TOpenActivityHeroStarUpGetInfoRsp_reflection_;
  delete TOpenActivityHeroStarUpGetRewardReq::default_instance_;
  delete TOpenActivityHeroStarUpGetRewardReq_reflection_;
  delete TOpenActivityHeroStarUpGetRewardRsp::default_instance_;
  delete TOpenActivityHeroStarUpGetRewardRsp_reflection_;
  delete TOpenActivityHalfMonthBuyRecordInfo::default_instance_;
  delete TOpenActivityHalfMonthBuyRecordInfo_reflection_;
  delete TOpenActivityHalfMonthSingleDayInfo::default_instance_;
  delete TOpenActivityHalfMonthSingleDayInfo_reflection_;
  delete TOpenActivityHalfMonthGetInfoReq::default_instance_;
  delete TOpenActivityHalfMonthGetInfoReq_reflection_;
  delete TOpenActivityHalfMonthGetInfoRsp::default_instance_;
  delete TOpenActivityHalfMonthGetInfoRsp_reflection_;
  delete TOpenActivityHalfMonthGetTaskRewardReq::default_instance_;
  delete TOpenActivityHalfMonthGetTaskRewardReq_reflection_;
  delete TOpenActivityHalfMonthGetTaskRewardRsp::default_instance_;
  delete TOpenActivityHalfMonthGetTaskRewardRsp_reflection_;
  delete TOpenActivityHalfMonthBuyGoodsReq::default_instance_;
  delete TOpenActivityHalfMonthBuyGoodsReq_reflection_;
  delete TOpenActivityHalfMonthBuyGoodsRsp::default_instance_;
  delete TOpenActivityHalfMonthBuyGoodsRsp_reflection_;
  delete TOpenActivityHalfMonthGetIntegralRewardReq::default_instance_;
  delete TOpenActivityHalfMonthGetIntegralRewardReq_reflection_;
  delete TOpenActivityHalfMonthGetIntegralRewardRsp::default_instance_;
  delete TOpenActivityHalfMonthGetIntegralRewardRsp_reflection_;
  delete TOActSevenActivityGetInfoRsp::default_instance_;
  delete TOActSevenActivityGetInfoRsp_reflection_;
  delete TOActSevenActivityReceiveTaskActivityAwardReq::default_instance_;
  delete TOActSevenActivityReceiveTaskActivityAwardReq_reflection_;
  delete TOActSevenActivityReceiveSignAwardReq::default_instance_;
  delete TOActSevenActivityReceiveSignAwardReq_reflection_;
  delete TOActSevenActivityBuySellDiscountItemReq::default_instance_;
  delete TOActSevenActivityBuySellDiscountItemReq_reflection_;
  delete TOActStarBlessingBagGetInfoRsp::default_instance_;
  delete TOActStarBlessingBagGetInfoRsp_reflection_;
  delete TOActStarBlessingBagGetRewardRsp::default_instance_;
  delete TOActStarBlessingBagGetRewardRsp_reflection_;
  delete TOpenActivityLotsOfGoldGetInfoRsp::default_instance_;
  delete TOpenActivityLotsOfGoldGetInfoRsp_reflection_;
  delete TOpenActivityLotsOfGoldGetTaskRewardReq::default_instance_;
  delete TOpenActivityLotsOfGoldGetTaskRewardReq_reflection_;
  delete TOpenActivityLotsOfGoldGetTaskRewardRsp::default_instance_;
  delete TOpenActivityLotsOfGoldGetTaskRewardRsp_reflection_;
  delete TOpenActivityLotsOfGoldGetIntegralRewardReq::default_instance_;
  delete TOpenActivityLotsOfGoldGetIntegralRewardReq_reflection_;
  delete TOpenActivityLotsOfGoldGetIntegralRewardRsp::default_instance_;
  delete TOpenActivityLotsOfGoldGetIntegralRewardRsp_reflection_;
  delete TOpenActivityAllPlayerGoldHeroGetInfoRsp::default_instance_;
  delete TOpenActivityAllPlayerGoldHeroGetInfoRsp_reflection_;
  delete TOpenActivityAllPlayerGoldHeroGetRewardReq::default_instance_;
  delete TOpenActivityAllPlayerGoldHeroGetRewardReq_reflection_;
  delete TOpenActivityAllPlayerGoldHeroGetRewardRsp::default_instance_;
  delete TOpenActivityAllPlayerGoldHeroGetRewardRsp_reflection_;
  delete TOpenActivityTowerPassLayerGetInfoRsp::default_instance_;
  delete TOpenActivityTowerPassLayerGetInfoRsp_reflection_;
  delete TOpenActivityTowerPassLayerGetRewardReq::default_instance_;
  delete TOpenActivityTowerPassLayerGetRewardReq_reflection_;
  delete TOpenActivityTowerPassLayerGetRewardRsp::default_instance_;
  delete TOpenActivityTowerPassLayerGetRewardRsp_reflection_;
}

void protobuf_AddDesc_net_2fOpenActivity_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026net/OpenActivity.proto\022\002pb\032\026net/Common"
    "Reward.proto\"5\n\023TActivityRewardInfo\022\n\n\002I"
    "d\030\001 \001(\r\022\022\n\nRewardTime\030\002 \001(\004\"U\n\026TActivity"
    "BuyRecordInfo\022\n\n\002Id\030\001 \001(\r\022\021\n\tGoodIndex\030\002"
    " \001(\r\022\013\n\003Num\030\003 \001(\r\022\017\n\007BuyTime\030\004 \001(\004\"h\n TO"
    "penActivityAccuLoginGetInfoRsp\022\024\n\014AccuLo"
    "ginNum\030\001 \001(\r\022.\n\rArrRewardInfo\030\002 \003(\0132\027.pb"
    ".TActivityRewardInfo\"0\n\"TOpenActivityAcc"
    "uLoginGetRewardReq\022\n\n\002Id\030\001 \001(\r\"J\n\"TOpenA"
    "ctivityAccuLoginGetRewardRsp\022$\n\tArrRewar"
    "d\030\001 \003(\0132\021.pb.TCommonReward\"_\n\036TOpenActiv"
    "ityLevelUpGetInfoRsp\022\r\n\005Level\030\001 \001(\r\022.\n\rA"
    "rrRewardInfo\030\002 \003(\0132\027.pb.TActivityRewardI"
    "nfo\".\n TOpenActivityLevelUpGetRewardReq\022"
    "\n\n\002Id\030\001 \001(\r\"H\n TOpenActivityLevelUpGetRe"
    "wardRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb.TCommonR"
    "eward\"W\n\037TOpenActivityDiscountGetInfoRsp"
    "\0224\n\020ArrBuyRecordInfo\030\001 \003(\0132\032.pb.TActivit"
    "yBuyRecordInfo\"M\n\037TOpenActivityDiscountB"
    "uyGoodReq\022\n\n\002Id\030\001 \001(\r\022\021\n\tGoodIndex\030\002 \001(\r"
    "\022\013\n\003Num\030\003 \001(\r\"G\n\037TOpenActivityDiscountBu"
    "yGoodRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb.TCommon"
    "Reward\"g\n!TOpenActivityRecruitRetGetInfo"
    "Rsp\022\022\n\nRecruitNum\030\001 \001(\r\022.\n\rArrRewardInfo"
    "\030\002 \003(\0132\027.pb.TActivityRewardInfo\"1\n#TOpen"
    "ActivityRecruitRetGetRewardReq\022\n\n\002Id\030\001 \001"
    "(\r\"K\n#TOpenActivityRecruitRetGetRewardRs"
    "p\022$\n\tArrReward\030\001 \003(\0132\021.pb.TCommonReward\""
    "9\n\031TOpenActivityHeroStarInfo\022\014\n\004Htid\030\001 \001"
    "(\r\022\016\n\006StarLv\030\002 \001(\r\"\207\001\n!TOpenActivityHero"
    "StarUpGetInfoRsp\0222\n\013ArrHeroStar\030\001 \003(\0132\035."
    "pb.TOpenActivityHeroStarInfo\022.\n\rArrRewar"
    "dInfo\030\002 \003(\0132\027.pb.TActivityRewardInfo\"1\n#"
    "TOpenActivityHeroStarUpGetRewardReq\022\n\n\002I"
    "d\030\001 \001(\r\"K\n#TOpenActivityHeroStarUpGetRew"
    "ardRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb.TCommonRe"
    "ward\"V\n#TOpenActivityHalfMonthBuyRecordI"
    "nfo\022\021\n\tGoodIndex\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\022\017\n\007B"
    "uyTime\030\003 \001(\004\"\253\001\n#TOpenActivityHalfMonthS"
    "ingleDayInfo\022\r\n\005DayId\030\001 \001(\r\0222\n\021ArrTaskRe"
    "wardInfo\030\002 \003(\0132\027.pb.TActivityRewardInfo\022"
    "A\n\020ArrBuyRecordInfo\030\003 \003(\0132\'.pb.TOpenActi"
    "vityHalfMonthBuyRecordInfo\"2\n TOpenActiv"
    "ityHalfMonthGetInfoReq\022\016\n\006ConfId\030\001 \001(\r\"\227"
    "\001\n TOpenActivityHalfMonthGetInfoRsp\022;\n\nA"
    "rrDayInfo\030\001 \003(\0132\'.pb.TOpenActivityHalfMo"
    "nthSingleDayInfo\0226\n\025ArrIntegralRewardInf"
    "o\030\002 \003(\0132\027.pb.TActivityRewardInfo\"Z\n&TOpe"
    "nActivityHalfMonthGetTaskRewardReq\022\016\n\006Co"
    "nfId\030\001 \001(\r\022\r\n\005DayId\030\002 \001(\r\022\021\n\tContentId\030\003"
    " \001(\r\"N\n&TOpenActivityHalfMonthGetTaskRew"
    "ardRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb.TCommonRe"
    "ward\"_\n!TOpenActivityHalfMonthBuyGoodsRe"
    "q\022\016\n\006ConfId\030\001 \001(\r\022\n\n\002Id\030\002 \001(\r\022\021\n\tGoodInd"
    "ex\030\003 \001(\r\022\013\n\003Num\030\004 \001(\r\"I\n!TOpenActivityHa"
    "lfMonthBuyGoodsRsp\022$\n\tArrReward\030\001 \003(\0132\021."
    "pb.TCommonReward\"H\n*TOpenActivityHalfMon"
    "thGetIntegralRewardReq\022\016\n\006ConfId\030\001 \001(\r\022\n"
    "\n\002Id\030\002 \001(\r\"R\n*TOpenActivityHalfMonthGetI"
    "ntegralRewardRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb"
    ".TCommonReward\"_\n\034TOActSevenActivityGetI"
    "nfoRsp\022\017\n\007TaskArr\030\001 \003(\r\022\025\n\rSignRewardArr"
    "\030\002 \003(\r\022\027\n\017SellDiscountArr\030\003 \003(\r\"B\n-TOAct"
    "SevenActivityReceiveTaskActivityAwardReq"
    "\022\021\n\tContentId\030\001 \001(\r\"4\n%TOActSevenActivit"
    "yReceiveSignAwardReq\022\013\n\003Day\030\001 \001(\r\"7\n(TOA"
    "ctSevenActivityBuySellDiscountItemReq\022\013\n"
    "\003Day\030\001 \001(\r\"J\n\036TOActStarBlessingBagGetInf"
    "oRsp\022(\n\rArrRewardInfo\030\001 \003(\0132\021.pb.TCommon"
    "Reward\"I\n TOActStarBlessingBagGetRewardR"
    "sp\022%\n\nRewardInfo\030\001 \001(\0132\021.pb.TCommonRewar"
    "d\"\217\001\n!TOpenActivityLotsOfGoldGetInfoRsp\022"
    "2\n\021ArrTaskRewardInfo\030\001 \003(\0132\027.pb.TActivit"
    "yRewardInfo\0226\n\025ArrIntegralRewardInfo\030\002 \003"
    "(\0132\027.pb.TActivityRewardInfo\"<\n\'TOpenActi"
    "vityLotsOfGoldGetTaskRewardReq\022\021\n\tConten"
    "tId\030\001 \001(\r\"O\n\'TOpenActivityLotsOfGoldGetT"
    "askRewardRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb.TCo"
    "mmonReward\"A\n+TOpenActivityLotsOfGoldGet"
    "IntegralRewardReq\022\022\n\nIntegralId\030\001 \001(\r\"S\n"
    "+TOpenActivityLotsOfGoldGetIntegralRewar"
    "dRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb.TCommonRewa"
    "rd\"p\n(TOpenActivityAllPlayerGoldHeroGetI"
    "nfoRsp\022\024\n\014TotalWaveNum\030\001 \001(\r\022.\n\rArrRewar"
    "dInfo\030\002 \003(\0132\027.pb.TActivityRewardInfo\"8\n*"
    "TOpenActivityAllPlayerGoldHeroGetRewardR"
    "eq\022\n\n\002Id\030\001 \001(\r\"R\n*TOpenActivityAllPlayer"
    "GoldHeroGetRewardRsp\022$\n\tArrReward\030\001 \003(\0132"
    "\021.pb.TCommonReward\"j\n%TOpenActivityTower"
    "PassLayerGetInfoRsp\022\021\n\tPassLayer\030\001 \001(\r\022."
    "\n\rArrRewardInfo\030\002 \003(\0132\027.pb.TActivityRewa"
    "rdInfo\"5\n\'TOpenActivityTowerPassLayerGet"
    "RewardReq\022\n\n\002Id\030\001 \001(\r\"O\n\'TOpenActivityTo"
    "werPassLayerGetRewardRsp\022$\n\tArrReward\030\001 "
    "\003(\0132\021.pb.TCommonReward", 3782);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/OpenActivity.proto", &protobuf_RegisterTypes);
  TActivityRewardInfo::default_instance_ = new TActivityRewardInfo();
  TActivityBuyRecordInfo::default_instance_ = new TActivityBuyRecordInfo();
  TOpenActivityAccuLoginGetInfoRsp::default_instance_ = new TOpenActivityAccuLoginGetInfoRsp();
  TOpenActivityAccuLoginGetRewardReq::default_instance_ = new TOpenActivityAccuLoginGetRewardReq();
  TOpenActivityAccuLoginGetRewardRsp::default_instance_ = new TOpenActivityAccuLoginGetRewardRsp();
  TOpenActivityLevelUpGetInfoRsp::default_instance_ = new TOpenActivityLevelUpGetInfoRsp();
  TOpenActivityLevelUpGetRewardReq::default_instance_ = new TOpenActivityLevelUpGetRewardReq();
  TOpenActivityLevelUpGetRewardRsp::default_instance_ = new TOpenActivityLevelUpGetRewardRsp();
  TOpenActivityDiscountGetInfoRsp::default_instance_ = new TOpenActivityDiscountGetInfoRsp();
  TOpenActivityDiscountBuyGoodReq::default_instance_ = new TOpenActivityDiscountBuyGoodReq();
  TOpenActivityDiscountBuyGoodRsp::default_instance_ = new TOpenActivityDiscountBuyGoodRsp();
  TOpenActivityRecruitRetGetInfoRsp::default_instance_ = new TOpenActivityRecruitRetGetInfoRsp();
  TOpenActivityRecruitRetGetRewardReq::default_instance_ = new TOpenActivityRecruitRetGetRewardReq();
  TOpenActivityRecruitRetGetRewardRsp::default_instance_ = new TOpenActivityRecruitRetGetRewardRsp();
  TOpenActivityHeroStarInfo::default_instance_ = new TOpenActivityHeroStarInfo();
  TOpenActivityHeroStarUpGetInfoRsp::default_instance_ = new TOpenActivityHeroStarUpGetInfoRsp();
  TOpenActivityHeroStarUpGetRewardReq::default_instance_ = new TOpenActivityHeroStarUpGetRewardReq();
  TOpenActivityHeroStarUpGetRewardRsp::default_instance_ = new TOpenActivityHeroStarUpGetRewardRsp();
  TOpenActivityHalfMonthBuyRecordInfo::default_instance_ = new TOpenActivityHalfMonthBuyRecordInfo();
  TOpenActivityHalfMonthSingleDayInfo::default_instance_ = new TOpenActivityHalfMonthSingleDayInfo();
  TOpenActivityHalfMonthGetInfoReq::default_instance_ = new TOpenActivityHalfMonthGetInfoReq();
  TOpenActivityHalfMonthGetInfoRsp::default_instance_ = new TOpenActivityHalfMonthGetInfoRsp();
  TOpenActivityHalfMonthGetTaskRewardReq::default_instance_ = new TOpenActivityHalfMonthGetTaskRewardReq();
  TOpenActivityHalfMonthGetTaskRewardRsp::default_instance_ = new TOpenActivityHalfMonthGetTaskRewardRsp();
  TOpenActivityHalfMonthBuyGoodsReq::default_instance_ = new TOpenActivityHalfMonthBuyGoodsReq();
  TOpenActivityHalfMonthBuyGoodsRsp::default_instance_ = new TOpenActivityHalfMonthBuyGoodsRsp();
  TOpenActivityHalfMonthGetIntegralRewardReq::default_instance_ = new TOpenActivityHalfMonthGetIntegralRewardReq();
  TOpenActivityHalfMonthGetIntegralRewardRsp::default_instance_ = new TOpenActivityHalfMonthGetIntegralRewardRsp();
  TOActSevenActivityGetInfoRsp::default_instance_ = new TOActSevenActivityGetInfoRsp();
  TOActSevenActivityReceiveTaskActivityAwardReq::default_instance_ = new TOActSevenActivityReceiveTaskActivityAwardReq();
  TOActSevenActivityReceiveSignAwardReq::default_instance_ = new TOActSevenActivityReceiveSignAwardReq();
  TOActSevenActivityBuySellDiscountItemReq::default_instance_ = new TOActSevenActivityBuySellDiscountItemReq();
  TOActStarBlessingBagGetInfoRsp::default_instance_ = new TOActStarBlessingBagGetInfoRsp();
  TOActStarBlessingBagGetRewardRsp::default_instance_ = new TOActStarBlessingBagGetRewardRsp();
  TOpenActivityLotsOfGoldGetInfoRsp::default_instance_ = new TOpenActivityLotsOfGoldGetInfoRsp();
  TOpenActivityLotsOfGoldGetTaskRewardReq::default_instance_ = new TOpenActivityLotsOfGoldGetTaskRewardReq();
  TOpenActivityLotsOfGoldGetTaskRewardRsp::default_instance_ = new TOpenActivityLotsOfGoldGetTaskRewardRsp();
  TOpenActivityLotsOfGoldGetIntegralRewardReq::default_instance_ = new TOpenActivityLotsOfGoldGetIntegralRewardReq();
  TOpenActivityLotsOfGoldGetIntegralRewardRsp::default_instance_ = new TOpenActivityLotsOfGoldGetIntegralRewardRsp();
  TOpenActivityAllPlayerGoldHeroGetInfoRsp::default_instance_ = new TOpenActivityAllPlayerGoldHeroGetInfoRsp();
  TOpenActivityAllPlayerGoldHeroGetRewardReq::default_instance_ = new TOpenActivityAllPlayerGoldHeroGetRewardReq();
  TOpenActivityAllPlayerGoldHeroGetRewardRsp::default_instance_ = new TOpenActivityAllPlayerGoldHeroGetRewardRsp();
  TOpenActivityTowerPassLayerGetInfoRsp::default_instance_ = new TOpenActivityTowerPassLayerGetInfoRsp();
  TOpenActivityTowerPassLayerGetRewardReq::default_instance_ = new TOpenActivityTowerPassLayerGetRewardReq();
  TOpenActivityTowerPassLayerGetRewardRsp::default_instance_ = new TOpenActivityTowerPassLayerGetRewardRsp();
  TActivityRewardInfo::default_instance_->InitAsDefaultInstance();
  TActivityBuyRecordInfo::default_instance_->InitAsDefaultInstance();
  TOpenActivityAccuLoginGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityAccuLoginGetRewardReq::default_instance_->InitAsDefaultInstance();
  TOpenActivityAccuLoginGetRewardRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityLevelUpGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityLevelUpGetRewardReq::default_instance_->InitAsDefaultInstance();
  TOpenActivityLevelUpGetRewardRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityDiscountGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityDiscountBuyGoodReq::default_instance_->InitAsDefaultInstance();
  TOpenActivityDiscountBuyGoodRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityRecruitRetGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityRecruitRetGetRewardReq::default_instance_->InitAsDefaultInstance();
  TOpenActivityRecruitRetGetRewardRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityHeroStarInfo::default_instance_->InitAsDefaultInstance();
  TOpenActivityHeroStarUpGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityHeroStarUpGetRewardReq::default_instance_->InitAsDefaultInstance();
  TOpenActivityHeroStarUpGetRewardRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityHalfMonthBuyRecordInfo::default_instance_->InitAsDefaultInstance();
  TOpenActivityHalfMonthSingleDayInfo::default_instance_->InitAsDefaultInstance();
  TOpenActivityHalfMonthGetInfoReq::default_instance_->InitAsDefaultInstance();
  TOpenActivityHalfMonthGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityHalfMonthGetTaskRewardReq::default_instance_->InitAsDefaultInstance();
  TOpenActivityHalfMonthGetTaskRewardRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityHalfMonthBuyGoodsReq::default_instance_->InitAsDefaultInstance();
  TOpenActivityHalfMonthBuyGoodsRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityHalfMonthGetIntegralRewardReq::default_instance_->InitAsDefaultInstance();
  TOpenActivityHalfMonthGetIntegralRewardRsp::default_instance_->InitAsDefaultInstance();
  TOActSevenActivityGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOActSevenActivityReceiveTaskActivityAwardReq::default_instance_->InitAsDefaultInstance();
  TOActSevenActivityReceiveSignAwardReq::default_instance_->InitAsDefaultInstance();
  TOActSevenActivityBuySellDiscountItemReq::default_instance_->InitAsDefaultInstance();
  TOActStarBlessingBagGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOActStarBlessingBagGetRewardRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityLotsOfGoldGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityLotsOfGoldGetTaskRewardReq::default_instance_->InitAsDefaultInstance();
  TOpenActivityLotsOfGoldGetTaskRewardRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityLotsOfGoldGetIntegralRewardReq::default_instance_->InitAsDefaultInstance();
  TOpenActivityLotsOfGoldGetIntegralRewardRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityAllPlayerGoldHeroGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityAllPlayerGoldHeroGetRewardReq::default_instance_->InitAsDefaultInstance();
  TOpenActivityAllPlayerGoldHeroGetRewardRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityTowerPassLayerGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOpenActivityTowerPassLayerGetRewardReq::default_instance_->InitAsDefaultInstance();
  TOpenActivityTowerPassLayerGetRewardRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fOpenActivity_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fOpenActivity_2eproto {
  StaticDescriptorInitializer_net_2fOpenActivity_2eproto() {
    protobuf_AddDesc_net_2fOpenActivity_2eproto();
  }
} static_descriptor_initializer_net_2fOpenActivity_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActivityRewardInfo::kIdFieldNumber;
const int TActivityRewardInfo::kRewardTimeFieldNumber;
#endif  // !_MSC_VER

TActivityRewardInfo::TActivityRewardInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActivityRewardInfo)
}

void TActivityRewardInfo::InitAsDefaultInstance() {
}

TActivityRewardInfo::TActivityRewardInfo(const TActivityRewardInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActivityRewardInfo)
}

void TActivityRewardInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  rewardtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActivityRewardInfo::~TActivityRewardInfo() {
  // @@protoc_insertion_point(destructor:pb.TActivityRewardInfo)
  SharedDtor();
}

void TActivityRewardInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActivityRewardInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActivityRewardInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActivityRewardInfo_descriptor_;
}

const TActivityRewardInfo& TActivityRewardInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TActivityRewardInfo* TActivityRewardInfo::default_instance_ = NULL;

TActivityRewardInfo* TActivityRewardInfo::New() const {
  return new TActivityRewardInfo;
}

void TActivityRewardInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActivityRewardInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(rewardtime_, id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActivityRewardInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActivityRewardInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardTime;
        break;
      }

      // optional uint64 RewardTime = 2;
      case 2: {
        if (tag == 16) {
         parse_RewardTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rewardtime_)));
          set_has_rewardtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActivityRewardInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActivityRewardInfo)
  return false;
#undef DO_
}

void TActivityRewardInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActivityRewardInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 RewardTime = 2;
  if (has_rewardtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->rewardtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActivityRewardInfo)
}

::google::protobuf::uint8* TActivityRewardInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActivityRewardInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 RewardTime = 2;
  if (has_rewardtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->rewardtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActivityRewardInfo)
  return target;
}

int TActivityRewardInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 RewardTime = 2;
    if (has_rewardtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rewardtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActivityRewardInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActivityRewardInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActivityRewardInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActivityRewardInfo::MergeFrom(const TActivityRewardInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_rewardtime()) {
      set_rewardtime(from.rewardtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActivityRewardInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActivityRewardInfo::CopyFrom(const TActivityRewardInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActivityRewardInfo::IsInitialized() const {

  return true;
}

void TActivityRewardInfo::Swap(TActivityRewardInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(rewardtime_, other->rewardtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActivityRewardInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActivityRewardInfo_descriptor_;
  metadata.reflection = TActivityRewardInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActivityBuyRecordInfo::kIdFieldNumber;
const int TActivityBuyRecordInfo::kGoodIndexFieldNumber;
const int TActivityBuyRecordInfo::kNumFieldNumber;
const int TActivityBuyRecordInfo::kBuyTimeFieldNumber;
#endif  // !_MSC_VER

TActivityBuyRecordInfo::TActivityBuyRecordInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActivityBuyRecordInfo)
}

void TActivityBuyRecordInfo::InitAsDefaultInstance() {
}

TActivityBuyRecordInfo::TActivityBuyRecordInfo(const TActivityBuyRecordInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActivityBuyRecordInfo)
}

void TActivityBuyRecordInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  goodindex_ = 0u;
  num_ = 0u;
  buytime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActivityBuyRecordInfo::~TActivityBuyRecordInfo() {
  // @@protoc_insertion_point(destructor:pb.TActivityBuyRecordInfo)
  SharedDtor();
}

void TActivityBuyRecordInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActivityBuyRecordInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActivityBuyRecordInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActivityBuyRecordInfo_descriptor_;
}

const TActivityBuyRecordInfo& TActivityBuyRecordInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TActivityBuyRecordInfo* TActivityBuyRecordInfo::default_instance_ = NULL;

TActivityBuyRecordInfo* TActivityBuyRecordInfo::New() const {
  return new TActivityBuyRecordInfo;
}

void TActivityBuyRecordInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActivityBuyRecordInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActivityBuyRecordInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActivityBuyRecordInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_GoodIndex;
        break;
      }

      // optional uint32 GoodIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_GoodIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodindex_)));
          set_has_goodindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 3;
      case 3: {
        if (tag == 24) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_BuyTime;
        break;
      }

      // optional uint64 BuyTime = 4;
      case 4: {
        if (tag == 32) {
         parse_BuyTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &buytime_)));
          set_has_buytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActivityBuyRecordInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActivityBuyRecordInfo)
  return false;
#undef DO_
}

void TActivityBuyRecordInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActivityBuyRecordInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 GoodIndex = 2;
  if (has_goodindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->goodindex(), output);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  // optional uint64 BuyTime = 4;
  if (has_buytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->buytime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActivityBuyRecordInfo)
}

::google::protobuf::uint8* TActivityBuyRecordInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActivityBuyRecordInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 GoodIndex = 2;
  if (has_goodindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->goodindex(), target);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  // optional uint64 BuyTime = 4;
  if (has_buytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->buytime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActivityBuyRecordInfo)
  return target;
}

int TActivityBuyRecordInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 GoodIndex = 2;
    if (has_goodindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodindex());
    }

    // optional uint32 Num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint64 BuyTime = 4;
    if (has_buytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->buytime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActivityBuyRecordInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActivityBuyRecordInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActivityBuyRecordInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActivityBuyRecordInfo::MergeFrom(const TActivityBuyRecordInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_goodindex()) {
      set_goodindex(from.goodindex());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_buytime()) {
      set_buytime(from.buytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActivityBuyRecordInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActivityBuyRecordInfo::CopyFrom(const TActivityBuyRecordInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActivityBuyRecordInfo::IsInitialized() const {

  return true;
}

void TActivityBuyRecordInfo::Swap(TActivityBuyRecordInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(goodindex_, other->goodindex_);
    std::swap(num_, other->num_);
    std::swap(buytime_, other->buytime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActivityBuyRecordInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActivityBuyRecordInfo_descriptor_;
  metadata.reflection = TActivityBuyRecordInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityAccuLoginGetInfoRsp::kAccuLoginNumFieldNumber;
const int TOpenActivityAccuLoginGetInfoRsp::kArrRewardInfoFieldNumber;
#endif  // !_MSC_VER

TOpenActivityAccuLoginGetInfoRsp::TOpenActivityAccuLoginGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityAccuLoginGetInfoRsp)
}

void TOpenActivityAccuLoginGetInfoRsp::InitAsDefaultInstance() {
}

TOpenActivityAccuLoginGetInfoRsp::TOpenActivityAccuLoginGetInfoRsp(const TOpenActivityAccuLoginGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityAccuLoginGetInfoRsp)
}

void TOpenActivityAccuLoginGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  acculoginnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityAccuLoginGetInfoRsp::~TOpenActivityAccuLoginGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityAccuLoginGetInfoRsp)
  SharedDtor();
}

void TOpenActivityAccuLoginGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityAccuLoginGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityAccuLoginGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityAccuLoginGetInfoRsp_descriptor_;
}

const TOpenActivityAccuLoginGetInfoRsp& TOpenActivityAccuLoginGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityAccuLoginGetInfoRsp* TOpenActivityAccuLoginGetInfoRsp::default_instance_ = NULL;

TOpenActivityAccuLoginGetInfoRsp* TOpenActivityAccuLoginGetInfoRsp::New() const {
  return new TOpenActivityAccuLoginGetInfoRsp;
}

void TOpenActivityAccuLoginGetInfoRsp::Clear() {
  acculoginnum_ = 0u;
  arrrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityAccuLoginGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityAccuLoginGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AccuLoginNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &acculoginnum_)));
          set_has_acculoginnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityAccuLoginGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityAccuLoginGetInfoRsp)
  return false;
#undef DO_
}

void TOpenActivityAccuLoginGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityAccuLoginGetInfoRsp)
  // optional uint32 AccuLoginNum = 1;
  if (has_acculoginnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->acculoginnum(), output);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityAccuLoginGetInfoRsp)
}

::google::protobuf::uint8* TOpenActivityAccuLoginGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityAccuLoginGetInfoRsp)
  // optional uint32 AccuLoginNum = 1;
  if (has_acculoginnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->acculoginnum(), target);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityAccuLoginGetInfoRsp)
  return target;
}

int TOpenActivityAccuLoginGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 AccuLoginNum = 1;
    if (has_acculoginnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->acculoginnum());
    }

  }
  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  total_size += 1 * this->arrrewardinfo_size();
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityAccuLoginGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityAccuLoginGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityAccuLoginGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityAccuLoginGetInfoRsp::MergeFrom(const TOpenActivityAccuLoginGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrewardinfo_.MergeFrom(from.arrrewardinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_acculoginnum()) {
      set_acculoginnum(from.acculoginnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityAccuLoginGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityAccuLoginGetInfoRsp::CopyFrom(const TOpenActivityAccuLoginGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityAccuLoginGetInfoRsp::IsInitialized() const {

  return true;
}

void TOpenActivityAccuLoginGetInfoRsp::Swap(TOpenActivityAccuLoginGetInfoRsp* other) {
  if (other != this) {
    std::swap(acculoginnum_, other->acculoginnum_);
    arrrewardinfo_.Swap(&other->arrrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityAccuLoginGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityAccuLoginGetInfoRsp_descriptor_;
  metadata.reflection = TOpenActivityAccuLoginGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityAccuLoginGetRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

TOpenActivityAccuLoginGetRewardReq::TOpenActivityAccuLoginGetRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityAccuLoginGetRewardReq)
}

void TOpenActivityAccuLoginGetRewardReq::InitAsDefaultInstance() {
}

TOpenActivityAccuLoginGetRewardReq::TOpenActivityAccuLoginGetRewardReq(const TOpenActivityAccuLoginGetRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityAccuLoginGetRewardReq)
}

void TOpenActivityAccuLoginGetRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityAccuLoginGetRewardReq::~TOpenActivityAccuLoginGetRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityAccuLoginGetRewardReq)
  SharedDtor();
}

void TOpenActivityAccuLoginGetRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityAccuLoginGetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityAccuLoginGetRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityAccuLoginGetRewardReq_descriptor_;
}

const TOpenActivityAccuLoginGetRewardReq& TOpenActivityAccuLoginGetRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityAccuLoginGetRewardReq* TOpenActivityAccuLoginGetRewardReq::default_instance_ = NULL;

TOpenActivityAccuLoginGetRewardReq* TOpenActivityAccuLoginGetRewardReq::New() const {
  return new TOpenActivityAccuLoginGetRewardReq;
}

void TOpenActivityAccuLoginGetRewardReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityAccuLoginGetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityAccuLoginGetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityAccuLoginGetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityAccuLoginGetRewardReq)
  return false;
#undef DO_
}

void TOpenActivityAccuLoginGetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityAccuLoginGetRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityAccuLoginGetRewardReq)
}

::google::protobuf::uint8* TOpenActivityAccuLoginGetRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityAccuLoginGetRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityAccuLoginGetRewardReq)
  return target;
}

int TOpenActivityAccuLoginGetRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityAccuLoginGetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityAccuLoginGetRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityAccuLoginGetRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityAccuLoginGetRewardReq::MergeFrom(const TOpenActivityAccuLoginGetRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityAccuLoginGetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityAccuLoginGetRewardReq::CopyFrom(const TOpenActivityAccuLoginGetRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityAccuLoginGetRewardReq::IsInitialized() const {

  return true;
}

void TOpenActivityAccuLoginGetRewardReq::Swap(TOpenActivityAccuLoginGetRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityAccuLoginGetRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityAccuLoginGetRewardReq_descriptor_;
  metadata.reflection = TOpenActivityAccuLoginGetRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityAccuLoginGetRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOpenActivityAccuLoginGetRewardRsp::TOpenActivityAccuLoginGetRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityAccuLoginGetRewardRsp)
}

void TOpenActivityAccuLoginGetRewardRsp::InitAsDefaultInstance() {
}

TOpenActivityAccuLoginGetRewardRsp::TOpenActivityAccuLoginGetRewardRsp(const TOpenActivityAccuLoginGetRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityAccuLoginGetRewardRsp)
}

void TOpenActivityAccuLoginGetRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityAccuLoginGetRewardRsp::~TOpenActivityAccuLoginGetRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityAccuLoginGetRewardRsp)
  SharedDtor();
}

void TOpenActivityAccuLoginGetRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityAccuLoginGetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityAccuLoginGetRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityAccuLoginGetRewardRsp_descriptor_;
}

const TOpenActivityAccuLoginGetRewardRsp& TOpenActivityAccuLoginGetRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityAccuLoginGetRewardRsp* TOpenActivityAccuLoginGetRewardRsp::default_instance_ = NULL;

TOpenActivityAccuLoginGetRewardRsp* TOpenActivityAccuLoginGetRewardRsp::New() const {
  return new TOpenActivityAccuLoginGetRewardRsp;
}

void TOpenActivityAccuLoginGetRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityAccuLoginGetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityAccuLoginGetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityAccuLoginGetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityAccuLoginGetRewardRsp)
  return false;
#undef DO_
}

void TOpenActivityAccuLoginGetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityAccuLoginGetRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityAccuLoginGetRewardRsp)
}

::google::protobuf::uint8* TOpenActivityAccuLoginGetRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityAccuLoginGetRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityAccuLoginGetRewardRsp)
  return target;
}

int TOpenActivityAccuLoginGetRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityAccuLoginGetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityAccuLoginGetRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityAccuLoginGetRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityAccuLoginGetRewardRsp::MergeFrom(const TOpenActivityAccuLoginGetRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityAccuLoginGetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityAccuLoginGetRewardRsp::CopyFrom(const TOpenActivityAccuLoginGetRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityAccuLoginGetRewardRsp::IsInitialized() const {

  return true;
}

void TOpenActivityAccuLoginGetRewardRsp::Swap(TOpenActivityAccuLoginGetRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityAccuLoginGetRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityAccuLoginGetRewardRsp_descriptor_;
  metadata.reflection = TOpenActivityAccuLoginGetRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityLevelUpGetInfoRsp::kLevelFieldNumber;
const int TOpenActivityLevelUpGetInfoRsp::kArrRewardInfoFieldNumber;
#endif  // !_MSC_VER

TOpenActivityLevelUpGetInfoRsp::TOpenActivityLevelUpGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityLevelUpGetInfoRsp)
}

void TOpenActivityLevelUpGetInfoRsp::InitAsDefaultInstance() {
}

TOpenActivityLevelUpGetInfoRsp::TOpenActivityLevelUpGetInfoRsp(const TOpenActivityLevelUpGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityLevelUpGetInfoRsp)
}

void TOpenActivityLevelUpGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityLevelUpGetInfoRsp::~TOpenActivityLevelUpGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityLevelUpGetInfoRsp)
  SharedDtor();
}

void TOpenActivityLevelUpGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityLevelUpGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityLevelUpGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityLevelUpGetInfoRsp_descriptor_;
}

const TOpenActivityLevelUpGetInfoRsp& TOpenActivityLevelUpGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityLevelUpGetInfoRsp* TOpenActivityLevelUpGetInfoRsp::default_instance_ = NULL;

TOpenActivityLevelUpGetInfoRsp* TOpenActivityLevelUpGetInfoRsp::New() const {
  return new TOpenActivityLevelUpGetInfoRsp;
}

void TOpenActivityLevelUpGetInfoRsp::Clear() {
  level_ = 0u;
  arrrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityLevelUpGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityLevelUpGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityLevelUpGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityLevelUpGetInfoRsp)
  return false;
#undef DO_
}

void TOpenActivityLevelUpGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityLevelUpGetInfoRsp)
  // optional uint32 Level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityLevelUpGetInfoRsp)
}

::google::protobuf::uint8* TOpenActivityLevelUpGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityLevelUpGetInfoRsp)
  // optional uint32 Level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityLevelUpGetInfoRsp)
  return target;
}

int TOpenActivityLevelUpGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  total_size += 1 * this->arrrewardinfo_size();
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityLevelUpGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityLevelUpGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityLevelUpGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityLevelUpGetInfoRsp::MergeFrom(const TOpenActivityLevelUpGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrewardinfo_.MergeFrom(from.arrrewardinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityLevelUpGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityLevelUpGetInfoRsp::CopyFrom(const TOpenActivityLevelUpGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityLevelUpGetInfoRsp::IsInitialized() const {

  return true;
}

void TOpenActivityLevelUpGetInfoRsp::Swap(TOpenActivityLevelUpGetInfoRsp* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    arrrewardinfo_.Swap(&other->arrrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityLevelUpGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityLevelUpGetInfoRsp_descriptor_;
  metadata.reflection = TOpenActivityLevelUpGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityLevelUpGetRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

TOpenActivityLevelUpGetRewardReq::TOpenActivityLevelUpGetRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityLevelUpGetRewardReq)
}

void TOpenActivityLevelUpGetRewardReq::InitAsDefaultInstance() {
}

TOpenActivityLevelUpGetRewardReq::TOpenActivityLevelUpGetRewardReq(const TOpenActivityLevelUpGetRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityLevelUpGetRewardReq)
}

void TOpenActivityLevelUpGetRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityLevelUpGetRewardReq::~TOpenActivityLevelUpGetRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityLevelUpGetRewardReq)
  SharedDtor();
}

void TOpenActivityLevelUpGetRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityLevelUpGetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityLevelUpGetRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityLevelUpGetRewardReq_descriptor_;
}

const TOpenActivityLevelUpGetRewardReq& TOpenActivityLevelUpGetRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityLevelUpGetRewardReq* TOpenActivityLevelUpGetRewardReq::default_instance_ = NULL;

TOpenActivityLevelUpGetRewardReq* TOpenActivityLevelUpGetRewardReq::New() const {
  return new TOpenActivityLevelUpGetRewardReq;
}

void TOpenActivityLevelUpGetRewardReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityLevelUpGetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityLevelUpGetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityLevelUpGetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityLevelUpGetRewardReq)
  return false;
#undef DO_
}

void TOpenActivityLevelUpGetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityLevelUpGetRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityLevelUpGetRewardReq)
}

::google::protobuf::uint8* TOpenActivityLevelUpGetRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityLevelUpGetRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityLevelUpGetRewardReq)
  return target;
}

int TOpenActivityLevelUpGetRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityLevelUpGetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityLevelUpGetRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityLevelUpGetRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityLevelUpGetRewardReq::MergeFrom(const TOpenActivityLevelUpGetRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityLevelUpGetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityLevelUpGetRewardReq::CopyFrom(const TOpenActivityLevelUpGetRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityLevelUpGetRewardReq::IsInitialized() const {

  return true;
}

void TOpenActivityLevelUpGetRewardReq::Swap(TOpenActivityLevelUpGetRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityLevelUpGetRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityLevelUpGetRewardReq_descriptor_;
  metadata.reflection = TOpenActivityLevelUpGetRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityLevelUpGetRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOpenActivityLevelUpGetRewardRsp::TOpenActivityLevelUpGetRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityLevelUpGetRewardRsp)
}

void TOpenActivityLevelUpGetRewardRsp::InitAsDefaultInstance() {
}

TOpenActivityLevelUpGetRewardRsp::TOpenActivityLevelUpGetRewardRsp(const TOpenActivityLevelUpGetRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityLevelUpGetRewardRsp)
}

void TOpenActivityLevelUpGetRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityLevelUpGetRewardRsp::~TOpenActivityLevelUpGetRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityLevelUpGetRewardRsp)
  SharedDtor();
}

void TOpenActivityLevelUpGetRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityLevelUpGetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityLevelUpGetRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityLevelUpGetRewardRsp_descriptor_;
}

const TOpenActivityLevelUpGetRewardRsp& TOpenActivityLevelUpGetRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityLevelUpGetRewardRsp* TOpenActivityLevelUpGetRewardRsp::default_instance_ = NULL;

TOpenActivityLevelUpGetRewardRsp* TOpenActivityLevelUpGetRewardRsp::New() const {
  return new TOpenActivityLevelUpGetRewardRsp;
}

void TOpenActivityLevelUpGetRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityLevelUpGetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityLevelUpGetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityLevelUpGetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityLevelUpGetRewardRsp)
  return false;
#undef DO_
}

void TOpenActivityLevelUpGetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityLevelUpGetRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityLevelUpGetRewardRsp)
}

::google::protobuf::uint8* TOpenActivityLevelUpGetRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityLevelUpGetRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityLevelUpGetRewardRsp)
  return target;
}

int TOpenActivityLevelUpGetRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityLevelUpGetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityLevelUpGetRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityLevelUpGetRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityLevelUpGetRewardRsp::MergeFrom(const TOpenActivityLevelUpGetRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityLevelUpGetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityLevelUpGetRewardRsp::CopyFrom(const TOpenActivityLevelUpGetRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityLevelUpGetRewardRsp::IsInitialized() const {

  return true;
}

void TOpenActivityLevelUpGetRewardRsp::Swap(TOpenActivityLevelUpGetRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityLevelUpGetRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityLevelUpGetRewardRsp_descriptor_;
  metadata.reflection = TOpenActivityLevelUpGetRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityDiscountGetInfoRsp::kArrBuyRecordInfoFieldNumber;
#endif  // !_MSC_VER

TOpenActivityDiscountGetInfoRsp::TOpenActivityDiscountGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityDiscountGetInfoRsp)
}

void TOpenActivityDiscountGetInfoRsp::InitAsDefaultInstance() {
}

TOpenActivityDiscountGetInfoRsp::TOpenActivityDiscountGetInfoRsp(const TOpenActivityDiscountGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityDiscountGetInfoRsp)
}

void TOpenActivityDiscountGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityDiscountGetInfoRsp::~TOpenActivityDiscountGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityDiscountGetInfoRsp)
  SharedDtor();
}

void TOpenActivityDiscountGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityDiscountGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityDiscountGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityDiscountGetInfoRsp_descriptor_;
}

const TOpenActivityDiscountGetInfoRsp& TOpenActivityDiscountGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityDiscountGetInfoRsp* TOpenActivityDiscountGetInfoRsp::default_instance_ = NULL;

TOpenActivityDiscountGetInfoRsp* TOpenActivityDiscountGetInfoRsp::New() const {
  return new TOpenActivityDiscountGetInfoRsp;
}

void TOpenActivityDiscountGetInfoRsp::Clear() {
  arrbuyrecordinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityDiscountGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityDiscountGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActivityBuyRecordInfo ArrBuyRecordInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrBuyRecordInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrbuyrecordinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrBuyRecordInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityDiscountGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityDiscountGetInfoRsp)
  return false;
#undef DO_
}

void TOpenActivityDiscountGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityDiscountGetInfoRsp)
  // repeated .pb.TActivityBuyRecordInfo ArrBuyRecordInfo = 1;
  for (int i = 0; i < this->arrbuyrecordinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrbuyrecordinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityDiscountGetInfoRsp)
}

::google::protobuf::uint8* TOpenActivityDiscountGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityDiscountGetInfoRsp)
  // repeated .pb.TActivityBuyRecordInfo ArrBuyRecordInfo = 1;
  for (int i = 0; i < this->arrbuyrecordinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrbuyrecordinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityDiscountGetInfoRsp)
  return target;
}

int TOpenActivityDiscountGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActivityBuyRecordInfo ArrBuyRecordInfo = 1;
  total_size += 1 * this->arrbuyrecordinfo_size();
  for (int i = 0; i < this->arrbuyrecordinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrbuyrecordinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityDiscountGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityDiscountGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityDiscountGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityDiscountGetInfoRsp::MergeFrom(const TOpenActivityDiscountGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrbuyrecordinfo_.MergeFrom(from.arrbuyrecordinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityDiscountGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityDiscountGetInfoRsp::CopyFrom(const TOpenActivityDiscountGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityDiscountGetInfoRsp::IsInitialized() const {

  return true;
}

void TOpenActivityDiscountGetInfoRsp::Swap(TOpenActivityDiscountGetInfoRsp* other) {
  if (other != this) {
    arrbuyrecordinfo_.Swap(&other->arrbuyrecordinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityDiscountGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityDiscountGetInfoRsp_descriptor_;
  metadata.reflection = TOpenActivityDiscountGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityDiscountBuyGoodReq::kIdFieldNumber;
const int TOpenActivityDiscountBuyGoodReq::kGoodIndexFieldNumber;
const int TOpenActivityDiscountBuyGoodReq::kNumFieldNumber;
#endif  // !_MSC_VER

TOpenActivityDiscountBuyGoodReq::TOpenActivityDiscountBuyGoodReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityDiscountBuyGoodReq)
}

void TOpenActivityDiscountBuyGoodReq::InitAsDefaultInstance() {
}

TOpenActivityDiscountBuyGoodReq::TOpenActivityDiscountBuyGoodReq(const TOpenActivityDiscountBuyGoodReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityDiscountBuyGoodReq)
}

void TOpenActivityDiscountBuyGoodReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  goodindex_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityDiscountBuyGoodReq::~TOpenActivityDiscountBuyGoodReq() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityDiscountBuyGoodReq)
  SharedDtor();
}

void TOpenActivityDiscountBuyGoodReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityDiscountBuyGoodReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityDiscountBuyGoodReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityDiscountBuyGoodReq_descriptor_;
}

const TOpenActivityDiscountBuyGoodReq& TOpenActivityDiscountBuyGoodReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityDiscountBuyGoodReq* TOpenActivityDiscountBuyGoodReq::default_instance_ = NULL;

TOpenActivityDiscountBuyGoodReq* TOpenActivityDiscountBuyGoodReq::New() const {
  return new TOpenActivityDiscountBuyGoodReq;
}

void TOpenActivityDiscountBuyGoodReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOpenActivityDiscountBuyGoodReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityDiscountBuyGoodReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityDiscountBuyGoodReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_GoodIndex;
        break;
      }

      // optional uint32 GoodIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_GoodIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodindex_)));
          set_has_goodindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 3;
      case 3: {
        if (tag == 24) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityDiscountBuyGoodReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityDiscountBuyGoodReq)
  return false;
#undef DO_
}

void TOpenActivityDiscountBuyGoodReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityDiscountBuyGoodReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 GoodIndex = 2;
  if (has_goodindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->goodindex(), output);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityDiscountBuyGoodReq)
}

::google::protobuf::uint8* TOpenActivityDiscountBuyGoodReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityDiscountBuyGoodReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 GoodIndex = 2;
  if (has_goodindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->goodindex(), target);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityDiscountBuyGoodReq)
  return target;
}

int TOpenActivityDiscountBuyGoodReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 GoodIndex = 2;
    if (has_goodindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodindex());
    }

    // optional uint32 Num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityDiscountBuyGoodReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityDiscountBuyGoodReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityDiscountBuyGoodReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityDiscountBuyGoodReq::MergeFrom(const TOpenActivityDiscountBuyGoodReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_goodindex()) {
      set_goodindex(from.goodindex());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityDiscountBuyGoodReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityDiscountBuyGoodReq::CopyFrom(const TOpenActivityDiscountBuyGoodReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityDiscountBuyGoodReq::IsInitialized() const {

  return true;
}

void TOpenActivityDiscountBuyGoodReq::Swap(TOpenActivityDiscountBuyGoodReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(goodindex_, other->goodindex_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityDiscountBuyGoodReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityDiscountBuyGoodReq_descriptor_;
  metadata.reflection = TOpenActivityDiscountBuyGoodReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityDiscountBuyGoodRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOpenActivityDiscountBuyGoodRsp::TOpenActivityDiscountBuyGoodRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityDiscountBuyGoodRsp)
}

void TOpenActivityDiscountBuyGoodRsp::InitAsDefaultInstance() {
}

TOpenActivityDiscountBuyGoodRsp::TOpenActivityDiscountBuyGoodRsp(const TOpenActivityDiscountBuyGoodRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityDiscountBuyGoodRsp)
}

void TOpenActivityDiscountBuyGoodRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityDiscountBuyGoodRsp::~TOpenActivityDiscountBuyGoodRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityDiscountBuyGoodRsp)
  SharedDtor();
}

void TOpenActivityDiscountBuyGoodRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityDiscountBuyGoodRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityDiscountBuyGoodRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityDiscountBuyGoodRsp_descriptor_;
}

const TOpenActivityDiscountBuyGoodRsp& TOpenActivityDiscountBuyGoodRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityDiscountBuyGoodRsp* TOpenActivityDiscountBuyGoodRsp::default_instance_ = NULL;

TOpenActivityDiscountBuyGoodRsp* TOpenActivityDiscountBuyGoodRsp::New() const {
  return new TOpenActivityDiscountBuyGoodRsp;
}

void TOpenActivityDiscountBuyGoodRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityDiscountBuyGoodRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityDiscountBuyGoodRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityDiscountBuyGoodRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityDiscountBuyGoodRsp)
  return false;
#undef DO_
}

void TOpenActivityDiscountBuyGoodRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityDiscountBuyGoodRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityDiscountBuyGoodRsp)
}

::google::protobuf::uint8* TOpenActivityDiscountBuyGoodRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityDiscountBuyGoodRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityDiscountBuyGoodRsp)
  return target;
}

int TOpenActivityDiscountBuyGoodRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityDiscountBuyGoodRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityDiscountBuyGoodRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityDiscountBuyGoodRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityDiscountBuyGoodRsp::MergeFrom(const TOpenActivityDiscountBuyGoodRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityDiscountBuyGoodRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityDiscountBuyGoodRsp::CopyFrom(const TOpenActivityDiscountBuyGoodRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityDiscountBuyGoodRsp::IsInitialized() const {

  return true;
}

void TOpenActivityDiscountBuyGoodRsp::Swap(TOpenActivityDiscountBuyGoodRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityDiscountBuyGoodRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityDiscountBuyGoodRsp_descriptor_;
  metadata.reflection = TOpenActivityDiscountBuyGoodRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityRecruitRetGetInfoRsp::kRecruitNumFieldNumber;
const int TOpenActivityRecruitRetGetInfoRsp::kArrRewardInfoFieldNumber;
#endif  // !_MSC_VER

TOpenActivityRecruitRetGetInfoRsp::TOpenActivityRecruitRetGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityRecruitRetGetInfoRsp)
}

void TOpenActivityRecruitRetGetInfoRsp::InitAsDefaultInstance() {
}

TOpenActivityRecruitRetGetInfoRsp::TOpenActivityRecruitRetGetInfoRsp(const TOpenActivityRecruitRetGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityRecruitRetGetInfoRsp)
}

void TOpenActivityRecruitRetGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  recruitnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityRecruitRetGetInfoRsp::~TOpenActivityRecruitRetGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityRecruitRetGetInfoRsp)
  SharedDtor();
}

void TOpenActivityRecruitRetGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityRecruitRetGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityRecruitRetGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityRecruitRetGetInfoRsp_descriptor_;
}

const TOpenActivityRecruitRetGetInfoRsp& TOpenActivityRecruitRetGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityRecruitRetGetInfoRsp* TOpenActivityRecruitRetGetInfoRsp::default_instance_ = NULL;

TOpenActivityRecruitRetGetInfoRsp* TOpenActivityRecruitRetGetInfoRsp::New() const {
  return new TOpenActivityRecruitRetGetInfoRsp;
}

void TOpenActivityRecruitRetGetInfoRsp::Clear() {
  recruitnum_ = 0u;
  arrrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityRecruitRetGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityRecruitRetGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RecruitNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recruitnum_)));
          set_has_recruitnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityRecruitRetGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityRecruitRetGetInfoRsp)
  return false;
#undef DO_
}

void TOpenActivityRecruitRetGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityRecruitRetGetInfoRsp)
  // optional uint32 RecruitNum = 1;
  if (has_recruitnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recruitnum(), output);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityRecruitRetGetInfoRsp)
}

::google::protobuf::uint8* TOpenActivityRecruitRetGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityRecruitRetGetInfoRsp)
  // optional uint32 RecruitNum = 1;
  if (has_recruitnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recruitnum(), target);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityRecruitRetGetInfoRsp)
  return target;
}

int TOpenActivityRecruitRetGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RecruitNum = 1;
    if (has_recruitnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recruitnum());
    }

  }
  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  total_size += 1 * this->arrrewardinfo_size();
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityRecruitRetGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityRecruitRetGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityRecruitRetGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityRecruitRetGetInfoRsp::MergeFrom(const TOpenActivityRecruitRetGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrewardinfo_.MergeFrom(from.arrrewardinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recruitnum()) {
      set_recruitnum(from.recruitnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityRecruitRetGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityRecruitRetGetInfoRsp::CopyFrom(const TOpenActivityRecruitRetGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityRecruitRetGetInfoRsp::IsInitialized() const {

  return true;
}

void TOpenActivityRecruitRetGetInfoRsp::Swap(TOpenActivityRecruitRetGetInfoRsp* other) {
  if (other != this) {
    std::swap(recruitnum_, other->recruitnum_);
    arrrewardinfo_.Swap(&other->arrrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityRecruitRetGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityRecruitRetGetInfoRsp_descriptor_;
  metadata.reflection = TOpenActivityRecruitRetGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityRecruitRetGetRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

TOpenActivityRecruitRetGetRewardReq::TOpenActivityRecruitRetGetRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityRecruitRetGetRewardReq)
}

void TOpenActivityRecruitRetGetRewardReq::InitAsDefaultInstance() {
}

TOpenActivityRecruitRetGetRewardReq::TOpenActivityRecruitRetGetRewardReq(const TOpenActivityRecruitRetGetRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityRecruitRetGetRewardReq)
}

void TOpenActivityRecruitRetGetRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityRecruitRetGetRewardReq::~TOpenActivityRecruitRetGetRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityRecruitRetGetRewardReq)
  SharedDtor();
}

void TOpenActivityRecruitRetGetRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityRecruitRetGetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityRecruitRetGetRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityRecruitRetGetRewardReq_descriptor_;
}

const TOpenActivityRecruitRetGetRewardReq& TOpenActivityRecruitRetGetRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityRecruitRetGetRewardReq* TOpenActivityRecruitRetGetRewardReq::default_instance_ = NULL;

TOpenActivityRecruitRetGetRewardReq* TOpenActivityRecruitRetGetRewardReq::New() const {
  return new TOpenActivityRecruitRetGetRewardReq;
}

void TOpenActivityRecruitRetGetRewardReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityRecruitRetGetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityRecruitRetGetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityRecruitRetGetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityRecruitRetGetRewardReq)
  return false;
#undef DO_
}

void TOpenActivityRecruitRetGetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityRecruitRetGetRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityRecruitRetGetRewardReq)
}

::google::protobuf::uint8* TOpenActivityRecruitRetGetRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityRecruitRetGetRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityRecruitRetGetRewardReq)
  return target;
}

int TOpenActivityRecruitRetGetRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityRecruitRetGetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityRecruitRetGetRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityRecruitRetGetRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityRecruitRetGetRewardReq::MergeFrom(const TOpenActivityRecruitRetGetRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityRecruitRetGetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityRecruitRetGetRewardReq::CopyFrom(const TOpenActivityRecruitRetGetRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityRecruitRetGetRewardReq::IsInitialized() const {

  return true;
}

void TOpenActivityRecruitRetGetRewardReq::Swap(TOpenActivityRecruitRetGetRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityRecruitRetGetRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityRecruitRetGetRewardReq_descriptor_;
  metadata.reflection = TOpenActivityRecruitRetGetRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityRecruitRetGetRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOpenActivityRecruitRetGetRewardRsp::TOpenActivityRecruitRetGetRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityRecruitRetGetRewardRsp)
}

void TOpenActivityRecruitRetGetRewardRsp::InitAsDefaultInstance() {
}

TOpenActivityRecruitRetGetRewardRsp::TOpenActivityRecruitRetGetRewardRsp(const TOpenActivityRecruitRetGetRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityRecruitRetGetRewardRsp)
}

void TOpenActivityRecruitRetGetRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityRecruitRetGetRewardRsp::~TOpenActivityRecruitRetGetRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityRecruitRetGetRewardRsp)
  SharedDtor();
}

void TOpenActivityRecruitRetGetRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityRecruitRetGetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityRecruitRetGetRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityRecruitRetGetRewardRsp_descriptor_;
}

const TOpenActivityRecruitRetGetRewardRsp& TOpenActivityRecruitRetGetRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityRecruitRetGetRewardRsp* TOpenActivityRecruitRetGetRewardRsp::default_instance_ = NULL;

TOpenActivityRecruitRetGetRewardRsp* TOpenActivityRecruitRetGetRewardRsp::New() const {
  return new TOpenActivityRecruitRetGetRewardRsp;
}

void TOpenActivityRecruitRetGetRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityRecruitRetGetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityRecruitRetGetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityRecruitRetGetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityRecruitRetGetRewardRsp)
  return false;
#undef DO_
}

void TOpenActivityRecruitRetGetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityRecruitRetGetRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityRecruitRetGetRewardRsp)
}

::google::protobuf::uint8* TOpenActivityRecruitRetGetRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityRecruitRetGetRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityRecruitRetGetRewardRsp)
  return target;
}

int TOpenActivityRecruitRetGetRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityRecruitRetGetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityRecruitRetGetRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityRecruitRetGetRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityRecruitRetGetRewardRsp::MergeFrom(const TOpenActivityRecruitRetGetRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityRecruitRetGetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityRecruitRetGetRewardRsp::CopyFrom(const TOpenActivityRecruitRetGetRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityRecruitRetGetRewardRsp::IsInitialized() const {

  return true;
}

void TOpenActivityRecruitRetGetRewardRsp::Swap(TOpenActivityRecruitRetGetRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityRecruitRetGetRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityRecruitRetGetRewardRsp_descriptor_;
  metadata.reflection = TOpenActivityRecruitRetGetRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHeroStarInfo::kHtidFieldNumber;
const int TOpenActivityHeroStarInfo::kStarLvFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHeroStarInfo::TOpenActivityHeroStarInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHeroStarInfo)
}

void TOpenActivityHeroStarInfo::InitAsDefaultInstance() {
}

TOpenActivityHeroStarInfo::TOpenActivityHeroStarInfo(const TOpenActivityHeroStarInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHeroStarInfo)
}

void TOpenActivityHeroStarInfo::SharedCtor() {
  _cached_size_ = 0;
  htid_ = 0u;
  starlv_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHeroStarInfo::~TOpenActivityHeroStarInfo() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHeroStarInfo)
  SharedDtor();
}

void TOpenActivityHeroStarInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHeroStarInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHeroStarInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHeroStarInfo_descriptor_;
}

const TOpenActivityHeroStarInfo& TOpenActivityHeroStarInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHeroStarInfo* TOpenActivityHeroStarInfo::default_instance_ = NULL;

TOpenActivityHeroStarInfo* TOpenActivityHeroStarInfo::New() const {
  return new TOpenActivityHeroStarInfo;
}

void TOpenActivityHeroStarInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOpenActivityHeroStarInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(htid_, starlv_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHeroStarInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHeroStarInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Htid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &htid_)));
          set_has_htid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StarLv;
        break;
      }

      // optional uint32 StarLv = 2;
      case 2: {
        if (tag == 16) {
         parse_StarLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starlv_)));
          set_has_starlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHeroStarInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHeroStarInfo)
  return false;
#undef DO_
}

void TOpenActivityHeroStarInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHeroStarInfo)
  // optional uint32 Htid = 1;
  if (has_htid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->htid(), output);
  }

  // optional uint32 StarLv = 2;
  if (has_starlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->starlv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHeroStarInfo)
}

::google::protobuf::uint8* TOpenActivityHeroStarInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHeroStarInfo)
  // optional uint32 Htid = 1;
  if (has_htid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->htid(), target);
  }

  // optional uint32 StarLv = 2;
  if (has_starlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->starlv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHeroStarInfo)
  return target;
}

int TOpenActivityHeroStarInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Htid = 1;
    if (has_htid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->htid());
    }

    // optional uint32 StarLv = 2;
    if (has_starlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starlv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHeroStarInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHeroStarInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHeroStarInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHeroStarInfo::MergeFrom(const TOpenActivityHeroStarInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_htid()) {
      set_htid(from.htid());
    }
    if (from.has_starlv()) {
      set_starlv(from.starlv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHeroStarInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHeroStarInfo::CopyFrom(const TOpenActivityHeroStarInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHeroStarInfo::IsInitialized() const {

  return true;
}

void TOpenActivityHeroStarInfo::Swap(TOpenActivityHeroStarInfo* other) {
  if (other != this) {
    std::swap(htid_, other->htid_);
    std::swap(starlv_, other->starlv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHeroStarInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHeroStarInfo_descriptor_;
  metadata.reflection = TOpenActivityHeroStarInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHeroStarUpGetInfoRsp::kArrHeroStarFieldNumber;
const int TOpenActivityHeroStarUpGetInfoRsp::kArrRewardInfoFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHeroStarUpGetInfoRsp::TOpenActivityHeroStarUpGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHeroStarUpGetInfoRsp)
}

void TOpenActivityHeroStarUpGetInfoRsp::InitAsDefaultInstance() {
}

TOpenActivityHeroStarUpGetInfoRsp::TOpenActivityHeroStarUpGetInfoRsp(const TOpenActivityHeroStarUpGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHeroStarUpGetInfoRsp)
}

void TOpenActivityHeroStarUpGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHeroStarUpGetInfoRsp::~TOpenActivityHeroStarUpGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHeroStarUpGetInfoRsp)
  SharedDtor();
}

void TOpenActivityHeroStarUpGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHeroStarUpGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHeroStarUpGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHeroStarUpGetInfoRsp_descriptor_;
}

const TOpenActivityHeroStarUpGetInfoRsp& TOpenActivityHeroStarUpGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHeroStarUpGetInfoRsp* TOpenActivityHeroStarUpGetInfoRsp::default_instance_ = NULL;

TOpenActivityHeroStarUpGetInfoRsp* TOpenActivityHeroStarUpGetInfoRsp::New() const {
  return new TOpenActivityHeroStarUpGetInfoRsp;
}

void TOpenActivityHeroStarUpGetInfoRsp::Clear() {
  arrherostar_.Clear();
  arrrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHeroStarUpGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHeroStarUpGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TOpenActivityHeroStarInfo ArrHeroStar = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrHeroStar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrherostar()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrHeroStar;
        if (input->ExpectTag(18)) goto parse_ArrRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHeroStarUpGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHeroStarUpGetInfoRsp)
  return false;
#undef DO_
}

void TOpenActivityHeroStarUpGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHeroStarUpGetInfoRsp)
  // repeated .pb.TOpenActivityHeroStarInfo ArrHeroStar = 1;
  for (int i = 0; i < this->arrherostar_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrherostar(i), output);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHeroStarUpGetInfoRsp)
}

::google::protobuf::uint8* TOpenActivityHeroStarUpGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHeroStarUpGetInfoRsp)
  // repeated .pb.TOpenActivityHeroStarInfo ArrHeroStar = 1;
  for (int i = 0; i < this->arrherostar_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrherostar(i), target);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHeroStarUpGetInfoRsp)
  return target;
}

int TOpenActivityHeroStarUpGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TOpenActivityHeroStarInfo ArrHeroStar = 1;
  total_size += 1 * this->arrherostar_size();
  for (int i = 0; i < this->arrherostar_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrherostar(i));
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  total_size += 1 * this->arrrewardinfo_size();
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHeroStarUpGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHeroStarUpGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHeroStarUpGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHeroStarUpGetInfoRsp::MergeFrom(const TOpenActivityHeroStarUpGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrherostar_.MergeFrom(from.arrherostar_);
  arrrewardinfo_.MergeFrom(from.arrrewardinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHeroStarUpGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHeroStarUpGetInfoRsp::CopyFrom(const TOpenActivityHeroStarUpGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHeroStarUpGetInfoRsp::IsInitialized() const {

  return true;
}

void TOpenActivityHeroStarUpGetInfoRsp::Swap(TOpenActivityHeroStarUpGetInfoRsp* other) {
  if (other != this) {
    arrherostar_.Swap(&other->arrherostar_);
    arrrewardinfo_.Swap(&other->arrrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHeroStarUpGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHeroStarUpGetInfoRsp_descriptor_;
  metadata.reflection = TOpenActivityHeroStarUpGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHeroStarUpGetRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHeroStarUpGetRewardReq::TOpenActivityHeroStarUpGetRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHeroStarUpGetRewardReq)
}

void TOpenActivityHeroStarUpGetRewardReq::InitAsDefaultInstance() {
}

TOpenActivityHeroStarUpGetRewardReq::TOpenActivityHeroStarUpGetRewardReq(const TOpenActivityHeroStarUpGetRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHeroStarUpGetRewardReq)
}

void TOpenActivityHeroStarUpGetRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHeroStarUpGetRewardReq::~TOpenActivityHeroStarUpGetRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHeroStarUpGetRewardReq)
  SharedDtor();
}

void TOpenActivityHeroStarUpGetRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHeroStarUpGetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHeroStarUpGetRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHeroStarUpGetRewardReq_descriptor_;
}

const TOpenActivityHeroStarUpGetRewardReq& TOpenActivityHeroStarUpGetRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHeroStarUpGetRewardReq* TOpenActivityHeroStarUpGetRewardReq::default_instance_ = NULL;

TOpenActivityHeroStarUpGetRewardReq* TOpenActivityHeroStarUpGetRewardReq::New() const {
  return new TOpenActivityHeroStarUpGetRewardReq;
}

void TOpenActivityHeroStarUpGetRewardReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHeroStarUpGetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHeroStarUpGetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHeroStarUpGetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHeroStarUpGetRewardReq)
  return false;
#undef DO_
}

void TOpenActivityHeroStarUpGetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHeroStarUpGetRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHeroStarUpGetRewardReq)
}

::google::protobuf::uint8* TOpenActivityHeroStarUpGetRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHeroStarUpGetRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHeroStarUpGetRewardReq)
  return target;
}

int TOpenActivityHeroStarUpGetRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHeroStarUpGetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHeroStarUpGetRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHeroStarUpGetRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHeroStarUpGetRewardReq::MergeFrom(const TOpenActivityHeroStarUpGetRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHeroStarUpGetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHeroStarUpGetRewardReq::CopyFrom(const TOpenActivityHeroStarUpGetRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHeroStarUpGetRewardReq::IsInitialized() const {

  return true;
}

void TOpenActivityHeroStarUpGetRewardReq::Swap(TOpenActivityHeroStarUpGetRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHeroStarUpGetRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHeroStarUpGetRewardReq_descriptor_;
  metadata.reflection = TOpenActivityHeroStarUpGetRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHeroStarUpGetRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHeroStarUpGetRewardRsp::TOpenActivityHeroStarUpGetRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHeroStarUpGetRewardRsp)
}

void TOpenActivityHeroStarUpGetRewardRsp::InitAsDefaultInstance() {
}

TOpenActivityHeroStarUpGetRewardRsp::TOpenActivityHeroStarUpGetRewardRsp(const TOpenActivityHeroStarUpGetRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHeroStarUpGetRewardRsp)
}

void TOpenActivityHeroStarUpGetRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHeroStarUpGetRewardRsp::~TOpenActivityHeroStarUpGetRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHeroStarUpGetRewardRsp)
  SharedDtor();
}

void TOpenActivityHeroStarUpGetRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHeroStarUpGetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHeroStarUpGetRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHeroStarUpGetRewardRsp_descriptor_;
}

const TOpenActivityHeroStarUpGetRewardRsp& TOpenActivityHeroStarUpGetRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHeroStarUpGetRewardRsp* TOpenActivityHeroStarUpGetRewardRsp::default_instance_ = NULL;

TOpenActivityHeroStarUpGetRewardRsp* TOpenActivityHeroStarUpGetRewardRsp::New() const {
  return new TOpenActivityHeroStarUpGetRewardRsp;
}

void TOpenActivityHeroStarUpGetRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHeroStarUpGetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHeroStarUpGetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHeroStarUpGetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHeroStarUpGetRewardRsp)
  return false;
#undef DO_
}

void TOpenActivityHeroStarUpGetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHeroStarUpGetRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHeroStarUpGetRewardRsp)
}

::google::protobuf::uint8* TOpenActivityHeroStarUpGetRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHeroStarUpGetRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHeroStarUpGetRewardRsp)
  return target;
}

int TOpenActivityHeroStarUpGetRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHeroStarUpGetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHeroStarUpGetRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHeroStarUpGetRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHeroStarUpGetRewardRsp::MergeFrom(const TOpenActivityHeroStarUpGetRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHeroStarUpGetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHeroStarUpGetRewardRsp::CopyFrom(const TOpenActivityHeroStarUpGetRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHeroStarUpGetRewardRsp::IsInitialized() const {

  return true;
}

void TOpenActivityHeroStarUpGetRewardRsp::Swap(TOpenActivityHeroStarUpGetRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHeroStarUpGetRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHeroStarUpGetRewardRsp_descriptor_;
  metadata.reflection = TOpenActivityHeroStarUpGetRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHalfMonthBuyRecordInfo::kGoodIndexFieldNumber;
const int TOpenActivityHalfMonthBuyRecordInfo::kNumFieldNumber;
const int TOpenActivityHalfMonthBuyRecordInfo::kBuyTimeFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHalfMonthBuyRecordInfo::TOpenActivityHalfMonthBuyRecordInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHalfMonthBuyRecordInfo)
}

void TOpenActivityHalfMonthBuyRecordInfo::InitAsDefaultInstance() {
}

TOpenActivityHalfMonthBuyRecordInfo::TOpenActivityHalfMonthBuyRecordInfo(const TOpenActivityHalfMonthBuyRecordInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHalfMonthBuyRecordInfo)
}

void TOpenActivityHalfMonthBuyRecordInfo::SharedCtor() {
  _cached_size_ = 0;
  goodindex_ = 0u;
  num_ = 0u;
  buytime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHalfMonthBuyRecordInfo::~TOpenActivityHalfMonthBuyRecordInfo() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHalfMonthBuyRecordInfo)
  SharedDtor();
}

void TOpenActivityHalfMonthBuyRecordInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHalfMonthBuyRecordInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthBuyRecordInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHalfMonthBuyRecordInfo_descriptor_;
}

const TOpenActivityHalfMonthBuyRecordInfo& TOpenActivityHalfMonthBuyRecordInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHalfMonthBuyRecordInfo* TOpenActivityHalfMonthBuyRecordInfo::default_instance_ = NULL;

TOpenActivityHalfMonthBuyRecordInfo* TOpenActivityHalfMonthBuyRecordInfo::New() const {
  return new TOpenActivityHalfMonthBuyRecordInfo;
}

void TOpenActivityHalfMonthBuyRecordInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOpenActivityHalfMonthBuyRecordInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(goodindex_, buytime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHalfMonthBuyRecordInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHalfMonthBuyRecordInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GoodIndex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodindex_)));
          set_has_goodindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BuyTime;
        break;
      }

      // optional uint64 BuyTime = 3;
      case 3: {
        if (tag == 24) {
         parse_BuyTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &buytime_)));
          set_has_buytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHalfMonthBuyRecordInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHalfMonthBuyRecordInfo)
  return false;
#undef DO_
}

void TOpenActivityHalfMonthBuyRecordInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHalfMonthBuyRecordInfo)
  // optional uint32 GoodIndex = 1;
  if (has_goodindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->goodindex(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  // optional uint64 BuyTime = 3;
  if (has_buytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->buytime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHalfMonthBuyRecordInfo)
}

::google::protobuf::uint8* TOpenActivityHalfMonthBuyRecordInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHalfMonthBuyRecordInfo)
  // optional uint32 GoodIndex = 1;
  if (has_goodindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->goodindex(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  // optional uint64 BuyTime = 3;
  if (has_buytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->buytime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHalfMonthBuyRecordInfo)
  return target;
}

int TOpenActivityHalfMonthBuyRecordInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GoodIndex = 1;
    if (has_goodindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodindex());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint64 BuyTime = 3;
    if (has_buytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->buytime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHalfMonthBuyRecordInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHalfMonthBuyRecordInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHalfMonthBuyRecordInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHalfMonthBuyRecordInfo::MergeFrom(const TOpenActivityHalfMonthBuyRecordInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goodindex()) {
      set_goodindex(from.goodindex());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_buytime()) {
      set_buytime(from.buytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHalfMonthBuyRecordInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHalfMonthBuyRecordInfo::CopyFrom(const TOpenActivityHalfMonthBuyRecordInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHalfMonthBuyRecordInfo::IsInitialized() const {

  return true;
}

void TOpenActivityHalfMonthBuyRecordInfo::Swap(TOpenActivityHalfMonthBuyRecordInfo* other) {
  if (other != this) {
    std::swap(goodindex_, other->goodindex_);
    std::swap(num_, other->num_);
    std::swap(buytime_, other->buytime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHalfMonthBuyRecordInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHalfMonthBuyRecordInfo_descriptor_;
  metadata.reflection = TOpenActivityHalfMonthBuyRecordInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHalfMonthSingleDayInfo::kDayIdFieldNumber;
const int TOpenActivityHalfMonthSingleDayInfo::kArrTaskRewardInfoFieldNumber;
const int TOpenActivityHalfMonthSingleDayInfo::kArrBuyRecordInfoFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHalfMonthSingleDayInfo::TOpenActivityHalfMonthSingleDayInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHalfMonthSingleDayInfo)
}

void TOpenActivityHalfMonthSingleDayInfo::InitAsDefaultInstance() {
}

TOpenActivityHalfMonthSingleDayInfo::TOpenActivityHalfMonthSingleDayInfo(const TOpenActivityHalfMonthSingleDayInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHalfMonthSingleDayInfo)
}

void TOpenActivityHalfMonthSingleDayInfo::SharedCtor() {
  _cached_size_ = 0;
  dayid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHalfMonthSingleDayInfo::~TOpenActivityHalfMonthSingleDayInfo() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHalfMonthSingleDayInfo)
  SharedDtor();
}

void TOpenActivityHalfMonthSingleDayInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHalfMonthSingleDayInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthSingleDayInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHalfMonthSingleDayInfo_descriptor_;
}

const TOpenActivityHalfMonthSingleDayInfo& TOpenActivityHalfMonthSingleDayInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHalfMonthSingleDayInfo* TOpenActivityHalfMonthSingleDayInfo::default_instance_ = NULL;

TOpenActivityHalfMonthSingleDayInfo* TOpenActivityHalfMonthSingleDayInfo::New() const {
  return new TOpenActivityHalfMonthSingleDayInfo;
}

void TOpenActivityHalfMonthSingleDayInfo::Clear() {
  dayid_ = 0u;
  arrtaskrewardinfo_.Clear();
  arrbuyrecordinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHalfMonthSingleDayInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHalfMonthSingleDayInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 DayId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dayid_)));
          set_has_dayid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrTaskRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrTaskRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtaskrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrTaskRewardInfo;
        if (input->ExpectTag(26)) goto parse_ArrBuyRecordInfo;
        break;
      }

      // repeated .pb.TOpenActivityHalfMonthBuyRecordInfo ArrBuyRecordInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrBuyRecordInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrbuyrecordinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrBuyRecordInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHalfMonthSingleDayInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHalfMonthSingleDayInfo)
  return false;
#undef DO_
}

void TOpenActivityHalfMonthSingleDayInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHalfMonthSingleDayInfo)
  // optional uint32 DayId = 1;
  if (has_dayid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dayid(), output);
  }

  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 2;
  for (int i = 0; i < this->arrtaskrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrtaskrewardinfo(i), output);
  }

  // repeated .pb.TOpenActivityHalfMonthBuyRecordInfo ArrBuyRecordInfo = 3;
  for (int i = 0; i < this->arrbuyrecordinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrbuyrecordinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHalfMonthSingleDayInfo)
}

::google::protobuf::uint8* TOpenActivityHalfMonthSingleDayInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHalfMonthSingleDayInfo)
  // optional uint32 DayId = 1;
  if (has_dayid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dayid(), target);
  }

  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 2;
  for (int i = 0; i < this->arrtaskrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrtaskrewardinfo(i), target);
  }

  // repeated .pb.TOpenActivityHalfMonthBuyRecordInfo ArrBuyRecordInfo = 3;
  for (int i = 0; i < this->arrbuyrecordinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrbuyrecordinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHalfMonthSingleDayInfo)
  return target;
}

int TOpenActivityHalfMonthSingleDayInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 DayId = 1;
    if (has_dayid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dayid());
    }

  }
  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 2;
  total_size += 1 * this->arrtaskrewardinfo_size();
  for (int i = 0; i < this->arrtaskrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtaskrewardinfo(i));
  }

  // repeated .pb.TOpenActivityHalfMonthBuyRecordInfo ArrBuyRecordInfo = 3;
  total_size += 1 * this->arrbuyrecordinfo_size();
  for (int i = 0; i < this->arrbuyrecordinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrbuyrecordinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHalfMonthSingleDayInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHalfMonthSingleDayInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHalfMonthSingleDayInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHalfMonthSingleDayInfo::MergeFrom(const TOpenActivityHalfMonthSingleDayInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrtaskrewardinfo_.MergeFrom(from.arrtaskrewardinfo_);
  arrbuyrecordinfo_.MergeFrom(from.arrbuyrecordinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dayid()) {
      set_dayid(from.dayid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHalfMonthSingleDayInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHalfMonthSingleDayInfo::CopyFrom(const TOpenActivityHalfMonthSingleDayInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHalfMonthSingleDayInfo::IsInitialized() const {

  return true;
}

void TOpenActivityHalfMonthSingleDayInfo::Swap(TOpenActivityHalfMonthSingleDayInfo* other) {
  if (other != this) {
    std::swap(dayid_, other->dayid_);
    arrtaskrewardinfo_.Swap(&other->arrtaskrewardinfo_);
    arrbuyrecordinfo_.Swap(&other->arrbuyrecordinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHalfMonthSingleDayInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHalfMonthSingleDayInfo_descriptor_;
  metadata.reflection = TOpenActivityHalfMonthSingleDayInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHalfMonthGetInfoReq::kConfIdFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHalfMonthGetInfoReq::TOpenActivityHalfMonthGetInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHalfMonthGetInfoReq)
}

void TOpenActivityHalfMonthGetInfoReq::InitAsDefaultInstance() {
}

TOpenActivityHalfMonthGetInfoReq::TOpenActivityHalfMonthGetInfoReq(const TOpenActivityHalfMonthGetInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHalfMonthGetInfoReq)
}

void TOpenActivityHalfMonthGetInfoReq::SharedCtor() {
  _cached_size_ = 0;
  confid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHalfMonthGetInfoReq::~TOpenActivityHalfMonthGetInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHalfMonthGetInfoReq)
  SharedDtor();
}

void TOpenActivityHalfMonthGetInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHalfMonthGetInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthGetInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHalfMonthGetInfoReq_descriptor_;
}

const TOpenActivityHalfMonthGetInfoReq& TOpenActivityHalfMonthGetInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHalfMonthGetInfoReq* TOpenActivityHalfMonthGetInfoReq::default_instance_ = NULL;

TOpenActivityHalfMonthGetInfoReq* TOpenActivityHalfMonthGetInfoReq::New() const {
  return new TOpenActivityHalfMonthGetInfoReq;
}

void TOpenActivityHalfMonthGetInfoReq::Clear() {
  confid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHalfMonthGetInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHalfMonthGetInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ConfId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confid_)));
          set_has_confid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHalfMonthGetInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHalfMonthGetInfoReq)
  return false;
#undef DO_
}

void TOpenActivityHalfMonthGetInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHalfMonthGetInfoReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->confid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHalfMonthGetInfoReq)
}

::google::protobuf::uint8* TOpenActivityHalfMonthGetInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHalfMonthGetInfoReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->confid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHalfMonthGetInfoReq)
  return target;
}

int TOpenActivityHalfMonthGetInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ConfId = 1;
    if (has_confid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->confid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHalfMonthGetInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHalfMonthGetInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHalfMonthGetInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHalfMonthGetInfoReq::MergeFrom(const TOpenActivityHalfMonthGetInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_confid()) {
      set_confid(from.confid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHalfMonthGetInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHalfMonthGetInfoReq::CopyFrom(const TOpenActivityHalfMonthGetInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHalfMonthGetInfoReq::IsInitialized() const {

  return true;
}

void TOpenActivityHalfMonthGetInfoReq::Swap(TOpenActivityHalfMonthGetInfoReq* other) {
  if (other != this) {
    std::swap(confid_, other->confid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHalfMonthGetInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHalfMonthGetInfoReq_descriptor_;
  metadata.reflection = TOpenActivityHalfMonthGetInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHalfMonthGetInfoRsp::kArrDayInfoFieldNumber;
const int TOpenActivityHalfMonthGetInfoRsp::kArrIntegralRewardInfoFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHalfMonthGetInfoRsp::TOpenActivityHalfMonthGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHalfMonthGetInfoRsp)
}

void TOpenActivityHalfMonthGetInfoRsp::InitAsDefaultInstance() {
}

TOpenActivityHalfMonthGetInfoRsp::TOpenActivityHalfMonthGetInfoRsp(const TOpenActivityHalfMonthGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHalfMonthGetInfoRsp)
}

void TOpenActivityHalfMonthGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHalfMonthGetInfoRsp::~TOpenActivityHalfMonthGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHalfMonthGetInfoRsp)
  SharedDtor();
}

void TOpenActivityHalfMonthGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHalfMonthGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHalfMonthGetInfoRsp_descriptor_;
}

const TOpenActivityHalfMonthGetInfoRsp& TOpenActivityHalfMonthGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHalfMonthGetInfoRsp* TOpenActivityHalfMonthGetInfoRsp::default_instance_ = NULL;

TOpenActivityHalfMonthGetInfoRsp* TOpenActivityHalfMonthGetInfoRsp::New() const {
  return new TOpenActivityHalfMonthGetInfoRsp;
}

void TOpenActivityHalfMonthGetInfoRsp::Clear() {
  arrdayinfo_.Clear();
  arrintegralrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHalfMonthGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHalfMonthGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TOpenActivityHalfMonthSingleDayInfo ArrDayInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrDayInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrdayinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrDayInfo;
        if (input->ExpectTag(18)) goto parse_ArrIntegralRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrIntegralRewardInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrIntegralRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrintegralrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrIntegralRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHalfMonthGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHalfMonthGetInfoRsp)
  return false;
#undef DO_
}

void TOpenActivityHalfMonthGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHalfMonthGetInfoRsp)
  // repeated .pb.TOpenActivityHalfMonthSingleDayInfo ArrDayInfo = 1;
  for (int i = 0; i < this->arrdayinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrdayinfo(i), output);
  }

  // repeated .pb.TActivityRewardInfo ArrIntegralRewardInfo = 2;
  for (int i = 0; i < this->arrintegralrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrintegralrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHalfMonthGetInfoRsp)
}

::google::protobuf::uint8* TOpenActivityHalfMonthGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHalfMonthGetInfoRsp)
  // repeated .pb.TOpenActivityHalfMonthSingleDayInfo ArrDayInfo = 1;
  for (int i = 0; i < this->arrdayinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrdayinfo(i), target);
  }

  // repeated .pb.TActivityRewardInfo ArrIntegralRewardInfo = 2;
  for (int i = 0; i < this->arrintegralrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrintegralrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHalfMonthGetInfoRsp)
  return target;
}

int TOpenActivityHalfMonthGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TOpenActivityHalfMonthSingleDayInfo ArrDayInfo = 1;
  total_size += 1 * this->arrdayinfo_size();
  for (int i = 0; i < this->arrdayinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrdayinfo(i));
  }

  // repeated .pb.TActivityRewardInfo ArrIntegralRewardInfo = 2;
  total_size += 1 * this->arrintegralrewardinfo_size();
  for (int i = 0; i < this->arrintegralrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrintegralrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHalfMonthGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHalfMonthGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHalfMonthGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHalfMonthGetInfoRsp::MergeFrom(const TOpenActivityHalfMonthGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrdayinfo_.MergeFrom(from.arrdayinfo_);
  arrintegralrewardinfo_.MergeFrom(from.arrintegralrewardinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHalfMonthGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHalfMonthGetInfoRsp::CopyFrom(const TOpenActivityHalfMonthGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHalfMonthGetInfoRsp::IsInitialized() const {

  return true;
}

void TOpenActivityHalfMonthGetInfoRsp::Swap(TOpenActivityHalfMonthGetInfoRsp* other) {
  if (other != this) {
    arrdayinfo_.Swap(&other->arrdayinfo_);
    arrintegralrewardinfo_.Swap(&other->arrintegralrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHalfMonthGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHalfMonthGetInfoRsp_descriptor_;
  metadata.reflection = TOpenActivityHalfMonthGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHalfMonthGetTaskRewardReq::kConfIdFieldNumber;
const int TOpenActivityHalfMonthGetTaskRewardReq::kDayIdFieldNumber;
const int TOpenActivityHalfMonthGetTaskRewardReq::kContentIdFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHalfMonthGetTaskRewardReq::TOpenActivityHalfMonthGetTaskRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHalfMonthGetTaskRewardReq)
}

void TOpenActivityHalfMonthGetTaskRewardReq::InitAsDefaultInstance() {
}

TOpenActivityHalfMonthGetTaskRewardReq::TOpenActivityHalfMonthGetTaskRewardReq(const TOpenActivityHalfMonthGetTaskRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHalfMonthGetTaskRewardReq)
}

void TOpenActivityHalfMonthGetTaskRewardReq::SharedCtor() {
  _cached_size_ = 0;
  confid_ = 0u;
  dayid_ = 0u;
  contentid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHalfMonthGetTaskRewardReq::~TOpenActivityHalfMonthGetTaskRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHalfMonthGetTaskRewardReq)
  SharedDtor();
}

void TOpenActivityHalfMonthGetTaskRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHalfMonthGetTaskRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthGetTaskRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHalfMonthGetTaskRewardReq_descriptor_;
}

const TOpenActivityHalfMonthGetTaskRewardReq& TOpenActivityHalfMonthGetTaskRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHalfMonthGetTaskRewardReq* TOpenActivityHalfMonthGetTaskRewardReq::default_instance_ = NULL;

TOpenActivityHalfMonthGetTaskRewardReq* TOpenActivityHalfMonthGetTaskRewardReq::New() const {
  return new TOpenActivityHalfMonthGetTaskRewardReq;
}

void TOpenActivityHalfMonthGetTaskRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOpenActivityHalfMonthGetTaskRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(confid_, contentid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHalfMonthGetTaskRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHalfMonthGetTaskRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ConfId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confid_)));
          set_has_confid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DayId;
        break;
      }

      // optional uint32 DayId = 2;
      case 2: {
        if (tag == 16) {
         parse_DayId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dayid_)));
          set_has_dayid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ContentId;
        break;
      }

      // optional uint32 ContentId = 3;
      case 3: {
        if (tag == 24) {
         parse_ContentId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contentid_)));
          set_has_contentid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHalfMonthGetTaskRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHalfMonthGetTaskRewardReq)
  return false;
#undef DO_
}

void TOpenActivityHalfMonthGetTaskRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHalfMonthGetTaskRewardReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->confid(), output);
  }

  // optional uint32 DayId = 2;
  if (has_dayid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dayid(), output);
  }

  // optional uint32 ContentId = 3;
  if (has_contentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->contentid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHalfMonthGetTaskRewardReq)
}

::google::protobuf::uint8* TOpenActivityHalfMonthGetTaskRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHalfMonthGetTaskRewardReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->confid(), target);
  }

  // optional uint32 DayId = 2;
  if (has_dayid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dayid(), target);
  }

  // optional uint32 ContentId = 3;
  if (has_contentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->contentid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHalfMonthGetTaskRewardReq)
  return target;
}

int TOpenActivityHalfMonthGetTaskRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ConfId = 1;
    if (has_confid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->confid());
    }

    // optional uint32 DayId = 2;
    if (has_dayid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dayid());
    }

    // optional uint32 ContentId = 3;
    if (has_contentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->contentid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHalfMonthGetTaskRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHalfMonthGetTaskRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHalfMonthGetTaskRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHalfMonthGetTaskRewardReq::MergeFrom(const TOpenActivityHalfMonthGetTaskRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_confid()) {
      set_confid(from.confid());
    }
    if (from.has_dayid()) {
      set_dayid(from.dayid());
    }
    if (from.has_contentid()) {
      set_contentid(from.contentid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHalfMonthGetTaskRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHalfMonthGetTaskRewardReq::CopyFrom(const TOpenActivityHalfMonthGetTaskRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHalfMonthGetTaskRewardReq::IsInitialized() const {

  return true;
}

void TOpenActivityHalfMonthGetTaskRewardReq::Swap(TOpenActivityHalfMonthGetTaskRewardReq* other) {
  if (other != this) {
    std::swap(confid_, other->confid_);
    std::swap(dayid_, other->dayid_);
    std::swap(contentid_, other->contentid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHalfMonthGetTaskRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHalfMonthGetTaskRewardReq_descriptor_;
  metadata.reflection = TOpenActivityHalfMonthGetTaskRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHalfMonthGetTaskRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHalfMonthGetTaskRewardRsp::TOpenActivityHalfMonthGetTaskRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHalfMonthGetTaskRewardRsp)
}

void TOpenActivityHalfMonthGetTaskRewardRsp::InitAsDefaultInstance() {
}

TOpenActivityHalfMonthGetTaskRewardRsp::TOpenActivityHalfMonthGetTaskRewardRsp(const TOpenActivityHalfMonthGetTaskRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHalfMonthGetTaskRewardRsp)
}

void TOpenActivityHalfMonthGetTaskRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHalfMonthGetTaskRewardRsp::~TOpenActivityHalfMonthGetTaskRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHalfMonthGetTaskRewardRsp)
  SharedDtor();
}

void TOpenActivityHalfMonthGetTaskRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHalfMonthGetTaskRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthGetTaskRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHalfMonthGetTaskRewardRsp_descriptor_;
}

const TOpenActivityHalfMonthGetTaskRewardRsp& TOpenActivityHalfMonthGetTaskRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHalfMonthGetTaskRewardRsp* TOpenActivityHalfMonthGetTaskRewardRsp::default_instance_ = NULL;

TOpenActivityHalfMonthGetTaskRewardRsp* TOpenActivityHalfMonthGetTaskRewardRsp::New() const {
  return new TOpenActivityHalfMonthGetTaskRewardRsp;
}

void TOpenActivityHalfMonthGetTaskRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHalfMonthGetTaskRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHalfMonthGetTaskRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHalfMonthGetTaskRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHalfMonthGetTaskRewardRsp)
  return false;
#undef DO_
}

void TOpenActivityHalfMonthGetTaskRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHalfMonthGetTaskRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHalfMonthGetTaskRewardRsp)
}

::google::protobuf::uint8* TOpenActivityHalfMonthGetTaskRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHalfMonthGetTaskRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHalfMonthGetTaskRewardRsp)
  return target;
}

int TOpenActivityHalfMonthGetTaskRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHalfMonthGetTaskRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHalfMonthGetTaskRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHalfMonthGetTaskRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHalfMonthGetTaskRewardRsp::MergeFrom(const TOpenActivityHalfMonthGetTaskRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHalfMonthGetTaskRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHalfMonthGetTaskRewardRsp::CopyFrom(const TOpenActivityHalfMonthGetTaskRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHalfMonthGetTaskRewardRsp::IsInitialized() const {

  return true;
}

void TOpenActivityHalfMonthGetTaskRewardRsp::Swap(TOpenActivityHalfMonthGetTaskRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHalfMonthGetTaskRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHalfMonthGetTaskRewardRsp_descriptor_;
  metadata.reflection = TOpenActivityHalfMonthGetTaskRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHalfMonthBuyGoodsReq::kConfIdFieldNumber;
const int TOpenActivityHalfMonthBuyGoodsReq::kIdFieldNumber;
const int TOpenActivityHalfMonthBuyGoodsReq::kGoodIndexFieldNumber;
const int TOpenActivityHalfMonthBuyGoodsReq::kNumFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHalfMonthBuyGoodsReq::TOpenActivityHalfMonthBuyGoodsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHalfMonthBuyGoodsReq)
}

void TOpenActivityHalfMonthBuyGoodsReq::InitAsDefaultInstance() {
}

TOpenActivityHalfMonthBuyGoodsReq::TOpenActivityHalfMonthBuyGoodsReq(const TOpenActivityHalfMonthBuyGoodsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHalfMonthBuyGoodsReq)
}

void TOpenActivityHalfMonthBuyGoodsReq::SharedCtor() {
  _cached_size_ = 0;
  confid_ = 0u;
  id_ = 0u;
  goodindex_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHalfMonthBuyGoodsReq::~TOpenActivityHalfMonthBuyGoodsReq() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHalfMonthBuyGoodsReq)
  SharedDtor();
}

void TOpenActivityHalfMonthBuyGoodsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHalfMonthBuyGoodsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthBuyGoodsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHalfMonthBuyGoodsReq_descriptor_;
}

const TOpenActivityHalfMonthBuyGoodsReq& TOpenActivityHalfMonthBuyGoodsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHalfMonthBuyGoodsReq* TOpenActivityHalfMonthBuyGoodsReq::default_instance_ = NULL;

TOpenActivityHalfMonthBuyGoodsReq* TOpenActivityHalfMonthBuyGoodsReq::New() const {
  return new TOpenActivityHalfMonthBuyGoodsReq;
}

void TOpenActivityHalfMonthBuyGoodsReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOpenActivityHalfMonthBuyGoodsReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(confid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHalfMonthBuyGoodsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHalfMonthBuyGoodsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ConfId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confid_)));
          set_has_confid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Id;
        break;
      }

      // optional uint32 Id = 2;
      case 2: {
        if (tag == 16) {
         parse_Id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_GoodIndex;
        break;
      }

      // optional uint32 GoodIndex = 3;
      case 3: {
        if (tag == 24) {
         parse_GoodIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodindex_)));
          set_has_goodindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 4;
      case 4: {
        if (tag == 32) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHalfMonthBuyGoodsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHalfMonthBuyGoodsReq)
  return false;
#undef DO_
}

void TOpenActivityHalfMonthBuyGoodsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHalfMonthBuyGoodsReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->confid(), output);
  }

  // optional uint32 Id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // optional uint32 GoodIndex = 3;
  if (has_goodindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->goodindex(), output);
  }

  // optional uint32 Num = 4;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHalfMonthBuyGoodsReq)
}

::google::protobuf::uint8* TOpenActivityHalfMonthBuyGoodsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHalfMonthBuyGoodsReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->confid(), target);
  }

  // optional uint32 Id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // optional uint32 GoodIndex = 3;
  if (has_goodindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->goodindex(), target);
  }

  // optional uint32 Num = 4;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHalfMonthBuyGoodsReq)
  return target;
}

int TOpenActivityHalfMonthBuyGoodsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ConfId = 1;
    if (has_confid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->confid());
    }

    // optional uint32 Id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 GoodIndex = 3;
    if (has_goodindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodindex());
    }

    // optional uint32 Num = 4;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHalfMonthBuyGoodsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHalfMonthBuyGoodsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHalfMonthBuyGoodsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHalfMonthBuyGoodsReq::MergeFrom(const TOpenActivityHalfMonthBuyGoodsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_confid()) {
      set_confid(from.confid());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_goodindex()) {
      set_goodindex(from.goodindex());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHalfMonthBuyGoodsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHalfMonthBuyGoodsReq::CopyFrom(const TOpenActivityHalfMonthBuyGoodsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHalfMonthBuyGoodsReq::IsInitialized() const {

  return true;
}

void TOpenActivityHalfMonthBuyGoodsReq::Swap(TOpenActivityHalfMonthBuyGoodsReq* other) {
  if (other != this) {
    std::swap(confid_, other->confid_);
    std::swap(id_, other->id_);
    std::swap(goodindex_, other->goodindex_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHalfMonthBuyGoodsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHalfMonthBuyGoodsReq_descriptor_;
  metadata.reflection = TOpenActivityHalfMonthBuyGoodsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHalfMonthBuyGoodsRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHalfMonthBuyGoodsRsp::TOpenActivityHalfMonthBuyGoodsRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHalfMonthBuyGoodsRsp)
}

void TOpenActivityHalfMonthBuyGoodsRsp::InitAsDefaultInstance() {
}

TOpenActivityHalfMonthBuyGoodsRsp::TOpenActivityHalfMonthBuyGoodsRsp(const TOpenActivityHalfMonthBuyGoodsRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHalfMonthBuyGoodsRsp)
}

void TOpenActivityHalfMonthBuyGoodsRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHalfMonthBuyGoodsRsp::~TOpenActivityHalfMonthBuyGoodsRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHalfMonthBuyGoodsRsp)
  SharedDtor();
}

void TOpenActivityHalfMonthBuyGoodsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHalfMonthBuyGoodsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthBuyGoodsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHalfMonthBuyGoodsRsp_descriptor_;
}

const TOpenActivityHalfMonthBuyGoodsRsp& TOpenActivityHalfMonthBuyGoodsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHalfMonthBuyGoodsRsp* TOpenActivityHalfMonthBuyGoodsRsp::default_instance_ = NULL;

TOpenActivityHalfMonthBuyGoodsRsp* TOpenActivityHalfMonthBuyGoodsRsp::New() const {
  return new TOpenActivityHalfMonthBuyGoodsRsp;
}

void TOpenActivityHalfMonthBuyGoodsRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHalfMonthBuyGoodsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHalfMonthBuyGoodsRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHalfMonthBuyGoodsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHalfMonthBuyGoodsRsp)
  return false;
#undef DO_
}

void TOpenActivityHalfMonthBuyGoodsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHalfMonthBuyGoodsRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHalfMonthBuyGoodsRsp)
}

::google::protobuf::uint8* TOpenActivityHalfMonthBuyGoodsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHalfMonthBuyGoodsRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHalfMonthBuyGoodsRsp)
  return target;
}

int TOpenActivityHalfMonthBuyGoodsRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHalfMonthBuyGoodsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHalfMonthBuyGoodsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHalfMonthBuyGoodsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHalfMonthBuyGoodsRsp::MergeFrom(const TOpenActivityHalfMonthBuyGoodsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHalfMonthBuyGoodsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHalfMonthBuyGoodsRsp::CopyFrom(const TOpenActivityHalfMonthBuyGoodsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHalfMonthBuyGoodsRsp::IsInitialized() const {

  return true;
}

void TOpenActivityHalfMonthBuyGoodsRsp::Swap(TOpenActivityHalfMonthBuyGoodsRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHalfMonthBuyGoodsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHalfMonthBuyGoodsRsp_descriptor_;
  metadata.reflection = TOpenActivityHalfMonthBuyGoodsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHalfMonthGetIntegralRewardReq::kConfIdFieldNumber;
const int TOpenActivityHalfMonthGetIntegralRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHalfMonthGetIntegralRewardReq::TOpenActivityHalfMonthGetIntegralRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHalfMonthGetIntegralRewardReq)
}

void TOpenActivityHalfMonthGetIntegralRewardReq::InitAsDefaultInstance() {
}

TOpenActivityHalfMonthGetIntegralRewardReq::TOpenActivityHalfMonthGetIntegralRewardReq(const TOpenActivityHalfMonthGetIntegralRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHalfMonthGetIntegralRewardReq)
}

void TOpenActivityHalfMonthGetIntegralRewardReq::SharedCtor() {
  _cached_size_ = 0;
  confid_ = 0u;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHalfMonthGetIntegralRewardReq::~TOpenActivityHalfMonthGetIntegralRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHalfMonthGetIntegralRewardReq)
  SharedDtor();
}

void TOpenActivityHalfMonthGetIntegralRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHalfMonthGetIntegralRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthGetIntegralRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHalfMonthGetIntegralRewardReq_descriptor_;
}

const TOpenActivityHalfMonthGetIntegralRewardReq& TOpenActivityHalfMonthGetIntegralRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHalfMonthGetIntegralRewardReq* TOpenActivityHalfMonthGetIntegralRewardReq::default_instance_ = NULL;

TOpenActivityHalfMonthGetIntegralRewardReq* TOpenActivityHalfMonthGetIntegralRewardReq::New() const {
  return new TOpenActivityHalfMonthGetIntegralRewardReq;
}

void TOpenActivityHalfMonthGetIntegralRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOpenActivityHalfMonthGetIntegralRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(confid_, id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHalfMonthGetIntegralRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHalfMonthGetIntegralRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ConfId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confid_)));
          set_has_confid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Id;
        break;
      }

      // optional uint32 Id = 2;
      case 2: {
        if (tag == 16) {
         parse_Id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHalfMonthGetIntegralRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHalfMonthGetIntegralRewardReq)
  return false;
#undef DO_
}

void TOpenActivityHalfMonthGetIntegralRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHalfMonthGetIntegralRewardReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->confid(), output);
  }

  // optional uint32 Id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHalfMonthGetIntegralRewardReq)
}

::google::protobuf::uint8* TOpenActivityHalfMonthGetIntegralRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHalfMonthGetIntegralRewardReq)
  // optional uint32 ConfId = 1;
  if (has_confid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->confid(), target);
  }

  // optional uint32 Id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHalfMonthGetIntegralRewardReq)
  return target;
}

int TOpenActivityHalfMonthGetIntegralRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ConfId = 1;
    if (has_confid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->confid());
    }

    // optional uint32 Id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHalfMonthGetIntegralRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHalfMonthGetIntegralRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHalfMonthGetIntegralRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHalfMonthGetIntegralRewardReq::MergeFrom(const TOpenActivityHalfMonthGetIntegralRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_confid()) {
      set_confid(from.confid());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHalfMonthGetIntegralRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHalfMonthGetIntegralRewardReq::CopyFrom(const TOpenActivityHalfMonthGetIntegralRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHalfMonthGetIntegralRewardReq::IsInitialized() const {

  return true;
}

void TOpenActivityHalfMonthGetIntegralRewardReq::Swap(TOpenActivityHalfMonthGetIntegralRewardReq* other) {
  if (other != this) {
    std::swap(confid_, other->confid_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHalfMonthGetIntegralRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHalfMonthGetIntegralRewardReq_descriptor_;
  metadata.reflection = TOpenActivityHalfMonthGetIntegralRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityHalfMonthGetIntegralRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOpenActivityHalfMonthGetIntegralRewardRsp::TOpenActivityHalfMonthGetIntegralRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityHalfMonthGetIntegralRewardRsp)
}

void TOpenActivityHalfMonthGetIntegralRewardRsp::InitAsDefaultInstance() {
}

TOpenActivityHalfMonthGetIntegralRewardRsp::TOpenActivityHalfMonthGetIntegralRewardRsp(const TOpenActivityHalfMonthGetIntegralRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityHalfMonthGetIntegralRewardRsp)
}

void TOpenActivityHalfMonthGetIntegralRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityHalfMonthGetIntegralRewardRsp::~TOpenActivityHalfMonthGetIntegralRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityHalfMonthGetIntegralRewardRsp)
  SharedDtor();
}

void TOpenActivityHalfMonthGetIntegralRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityHalfMonthGetIntegralRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityHalfMonthGetIntegralRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityHalfMonthGetIntegralRewardRsp_descriptor_;
}

const TOpenActivityHalfMonthGetIntegralRewardRsp& TOpenActivityHalfMonthGetIntegralRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityHalfMonthGetIntegralRewardRsp* TOpenActivityHalfMonthGetIntegralRewardRsp::default_instance_ = NULL;

TOpenActivityHalfMonthGetIntegralRewardRsp* TOpenActivityHalfMonthGetIntegralRewardRsp::New() const {
  return new TOpenActivityHalfMonthGetIntegralRewardRsp;
}

void TOpenActivityHalfMonthGetIntegralRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityHalfMonthGetIntegralRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityHalfMonthGetIntegralRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityHalfMonthGetIntegralRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityHalfMonthGetIntegralRewardRsp)
  return false;
#undef DO_
}

void TOpenActivityHalfMonthGetIntegralRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityHalfMonthGetIntegralRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityHalfMonthGetIntegralRewardRsp)
}

::google::protobuf::uint8* TOpenActivityHalfMonthGetIntegralRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityHalfMonthGetIntegralRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityHalfMonthGetIntegralRewardRsp)
  return target;
}

int TOpenActivityHalfMonthGetIntegralRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityHalfMonthGetIntegralRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityHalfMonthGetIntegralRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityHalfMonthGetIntegralRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityHalfMonthGetIntegralRewardRsp::MergeFrom(const TOpenActivityHalfMonthGetIntegralRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityHalfMonthGetIntegralRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityHalfMonthGetIntegralRewardRsp::CopyFrom(const TOpenActivityHalfMonthGetIntegralRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityHalfMonthGetIntegralRewardRsp::IsInitialized() const {

  return true;
}

void TOpenActivityHalfMonthGetIntegralRewardRsp::Swap(TOpenActivityHalfMonthGetIntegralRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityHalfMonthGetIntegralRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityHalfMonthGetIntegralRewardRsp_descriptor_;
  metadata.reflection = TOpenActivityHalfMonthGetIntegralRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOActSevenActivityGetInfoRsp::kTaskArrFieldNumber;
const int TOActSevenActivityGetInfoRsp::kSignRewardArrFieldNumber;
const int TOActSevenActivityGetInfoRsp::kSellDiscountArrFieldNumber;
#endif  // !_MSC_VER

TOActSevenActivityGetInfoRsp::TOActSevenActivityGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOActSevenActivityGetInfoRsp)
}

void TOActSevenActivityGetInfoRsp::InitAsDefaultInstance() {
}

TOActSevenActivityGetInfoRsp::TOActSevenActivityGetInfoRsp(const TOActSevenActivityGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOActSevenActivityGetInfoRsp)
}

void TOActSevenActivityGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOActSevenActivityGetInfoRsp::~TOActSevenActivityGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TOActSevenActivityGetInfoRsp)
  SharedDtor();
}

void TOActSevenActivityGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOActSevenActivityGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOActSevenActivityGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOActSevenActivityGetInfoRsp_descriptor_;
}

const TOActSevenActivityGetInfoRsp& TOActSevenActivityGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOActSevenActivityGetInfoRsp* TOActSevenActivityGetInfoRsp::default_instance_ = NULL;

TOActSevenActivityGetInfoRsp* TOActSevenActivityGetInfoRsp::New() const {
  return new TOActSevenActivityGetInfoRsp;
}

void TOActSevenActivityGetInfoRsp::Clear() {
  taskarr_.Clear();
  signrewardarr_.Clear();
  selldiscountarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOActSevenActivityGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOActSevenActivityGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 TaskArr = 1;
      case 1: {
        if (tag == 8) {
         parse_TaskArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_taskarr())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_taskarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_TaskArr;
        if (input->ExpectTag(16)) goto parse_SignRewardArr;
        break;
      }

      // repeated uint32 SignRewardArr = 2;
      case 2: {
        if (tag == 16) {
         parse_SignRewardArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_signrewardarr())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_signrewardarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SignRewardArr;
        if (input->ExpectTag(24)) goto parse_SellDiscountArr;
        break;
      }

      // repeated uint32 SellDiscountArr = 3;
      case 3: {
        if (tag == 24) {
         parse_SellDiscountArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_selldiscountarr())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_selldiscountarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SellDiscountArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOActSevenActivityGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOActSevenActivityGetInfoRsp)
  return false;
#undef DO_
}

void TOActSevenActivityGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOActSevenActivityGetInfoRsp)
  // repeated uint32 TaskArr = 1;
  for (int i = 0; i < this->taskarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->taskarr(i), output);
  }

  // repeated uint32 SignRewardArr = 2;
  for (int i = 0; i < this->signrewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->signrewardarr(i), output);
  }

  // repeated uint32 SellDiscountArr = 3;
  for (int i = 0; i < this->selldiscountarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->selldiscountarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOActSevenActivityGetInfoRsp)
}

::google::protobuf::uint8* TOActSevenActivityGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOActSevenActivityGetInfoRsp)
  // repeated uint32 TaskArr = 1;
  for (int i = 0; i < this->taskarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->taskarr(i), target);
  }

  // repeated uint32 SignRewardArr = 2;
  for (int i = 0; i < this->signrewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->signrewardarr(i), target);
  }

  // repeated uint32 SellDiscountArr = 3;
  for (int i = 0; i < this->selldiscountarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->selldiscountarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOActSevenActivityGetInfoRsp)
  return target;
}

int TOActSevenActivityGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated uint32 TaskArr = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->taskarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->taskarr(i));
    }
    total_size += 1 * this->taskarr_size() + data_size;
  }

  // repeated uint32 SignRewardArr = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->signrewardarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->signrewardarr(i));
    }
    total_size += 1 * this->signrewardarr_size() + data_size;
  }

  // repeated uint32 SellDiscountArr = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->selldiscountarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->selldiscountarr(i));
    }
    total_size += 1 * this->selldiscountarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOActSevenActivityGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOActSevenActivityGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOActSevenActivityGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOActSevenActivityGetInfoRsp::MergeFrom(const TOActSevenActivityGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  taskarr_.MergeFrom(from.taskarr_);
  signrewardarr_.MergeFrom(from.signrewardarr_);
  selldiscountarr_.MergeFrom(from.selldiscountarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOActSevenActivityGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOActSevenActivityGetInfoRsp::CopyFrom(const TOActSevenActivityGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOActSevenActivityGetInfoRsp::IsInitialized() const {

  return true;
}

void TOActSevenActivityGetInfoRsp::Swap(TOActSevenActivityGetInfoRsp* other) {
  if (other != this) {
    taskarr_.Swap(&other->taskarr_);
    signrewardarr_.Swap(&other->signrewardarr_);
    selldiscountarr_.Swap(&other->selldiscountarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOActSevenActivityGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOActSevenActivityGetInfoRsp_descriptor_;
  metadata.reflection = TOActSevenActivityGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOActSevenActivityReceiveTaskActivityAwardReq::kContentIdFieldNumber;
#endif  // !_MSC_VER

TOActSevenActivityReceiveTaskActivityAwardReq::TOActSevenActivityReceiveTaskActivityAwardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOActSevenActivityReceiveTaskActivityAwardReq)
}

void TOActSevenActivityReceiveTaskActivityAwardReq::InitAsDefaultInstance() {
}

TOActSevenActivityReceiveTaskActivityAwardReq::TOActSevenActivityReceiveTaskActivityAwardReq(const TOActSevenActivityReceiveTaskActivityAwardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOActSevenActivityReceiveTaskActivityAwardReq)
}

void TOActSevenActivityReceiveTaskActivityAwardReq::SharedCtor() {
  _cached_size_ = 0;
  contentid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOActSevenActivityReceiveTaskActivityAwardReq::~TOActSevenActivityReceiveTaskActivityAwardReq() {
  // @@protoc_insertion_point(destructor:pb.TOActSevenActivityReceiveTaskActivityAwardReq)
  SharedDtor();
}

void TOActSevenActivityReceiveTaskActivityAwardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOActSevenActivityReceiveTaskActivityAwardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOActSevenActivityReceiveTaskActivityAwardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOActSevenActivityReceiveTaskActivityAwardReq_descriptor_;
}

const TOActSevenActivityReceiveTaskActivityAwardReq& TOActSevenActivityReceiveTaskActivityAwardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOActSevenActivityReceiveTaskActivityAwardReq* TOActSevenActivityReceiveTaskActivityAwardReq::default_instance_ = NULL;

TOActSevenActivityReceiveTaskActivityAwardReq* TOActSevenActivityReceiveTaskActivityAwardReq::New() const {
  return new TOActSevenActivityReceiveTaskActivityAwardReq;
}

void TOActSevenActivityReceiveTaskActivityAwardReq::Clear() {
  contentid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOActSevenActivityReceiveTaskActivityAwardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOActSevenActivityReceiveTaskActivityAwardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ContentId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contentid_)));
          set_has_contentid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOActSevenActivityReceiveTaskActivityAwardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOActSevenActivityReceiveTaskActivityAwardReq)
  return false;
#undef DO_
}

void TOActSevenActivityReceiveTaskActivityAwardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOActSevenActivityReceiveTaskActivityAwardReq)
  // optional uint32 ContentId = 1;
  if (has_contentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->contentid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOActSevenActivityReceiveTaskActivityAwardReq)
}

::google::protobuf::uint8* TOActSevenActivityReceiveTaskActivityAwardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOActSevenActivityReceiveTaskActivityAwardReq)
  // optional uint32 ContentId = 1;
  if (has_contentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->contentid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOActSevenActivityReceiveTaskActivityAwardReq)
  return target;
}

int TOActSevenActivityReceiveTaskActivityAwardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ContentId = 1;
    if (has_contentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->contentid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOActSevenActivityReceiveTaskActivityAwardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOActSevenActivityReceiveTaskActivityAwardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOActSevenActivityReceiveTaskActivityAwardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOActSevenActivityReceiveTaskActivityAwardReq::MergeFrom(const TOActSevenActivityReceiveTaskActivityAwardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_contentid()) {
      set_contentid(from.contentid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOActSevenActivityReceiveTaskActivityAwardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOActSevenActivityReceiveTaskActivityAwardReq::CopyFrom(const TOActSevenActivityReceiveTaskActivityAwardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOActSevenActivityReceiveTaskActivityAwardReq::IsInitialized() const {

  return true;
}

void TOActSevenActivityReceiveTaskActivityAwardReq::Swap(TOActSevenActivityReceiveTaskActivityAwardReq* other) {
  if (other != this) {
    std::swap(contentid_, other->contentid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOActSevenActivityReceiveTaskActivityAwardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOActSevenActivityReceiveTaskActivityAwardReq_descriptor_;
  metadata.reflection = TOActSevenActivityReceiveTaskActivityAwardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOActSevenActivityReceiveSignAwardReq::kDayFieldNumber;
#endif  // !_MSC_VER

TOActSevenActivityReceiveSignAwardReq::TOActSevenActivityReceiveSignAwardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOActSevenActivityReceiveSignAwardReq)
}

void TOActSevenActivityReceiveSignAwardReq::InitAsDefaultInstance() {
}

TOActSevenActivityReceiveSignAwardReq::TOActSevenActivityReceiveSignAwardReq(const TOActSevenActivityReceiveSignAwardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOActSevenActivityReceiveSignAwardReq)
}

void TOActSevenActivityReceiveSignAwardReq::SharedCtor() {
  _cached_size_ = 0;
  day_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOActSevenActivityReceiveSignAwardReq::~TOActSevenActivityReceiveSignAwardReq() {
  // @@protoc_insertion_point(destructor:pb.TOActSevenActivityReceiveSignAwardReq)
  SharedDtor();
}

void TOActSevenActivityReceiveSignAwardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOActSevenActivityReceiveSignAwardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOActSevenActivityReceiveSignAwardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOActSevenActivityReceiveSignAwardReq_descriptor_;
}

const TOActSevenActivityReceiveSignAwardReq& TOActSevenActivityReceiveSignAwardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOActSevenActivityReceiveSignAwardReq* TOActSevenActivityReceiveSignAwardReq::default_instance_ = NULL;

TOActSevenActivityReceiveSignAwardReq* TOActSevenActivityReceiveSignAwardReq::New() const {
  return new TOActSevenActivityReceiveSignAwardReq;
}

void TOActSevenActivityReceiveSignAwardReq::Clear() {
  day_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOActSevenActivityReceiveSignAwardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOActSevenActivityReceiveSignAwardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Day = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_)));
          set_has_day();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOActSevenActivityReceiveSignAwardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOActSevenActivityReceiveSignAwardReq)
  return false;
#undef DO_
}

void TOActSevenActivityReceiveSignAwardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOActSevenActivityReceiveSignAwardReq)
  // optional uint32 Day = 1;
  if (has_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->day(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOActSevenActivityReceiveSignAwardReq)
}

::google::protobuf::uint8* TOActSevenActivityReceiveSignAwardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOActSevenActivityReceiveSignAwardReq)
  // optional uint32 Day = 1;
  if (has_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->day(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOActSevenActivityReceiveSignAwardReq)
  return target;
}

int TOActSevenActivityReceiveSignAwardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Day = 1;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->day());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOActSevenActivityReceiveSignAwardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOActSevenActivityReceiveSignAwardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOActSevenActivityReceiveSignAwardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOActSevenActivityReceiveSignAwardReq::MergeFrom(const TOActSevenActivityReceiveSignAwardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_day()) {
      set_day(from.day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOActSevenActivityReceiveSignAwardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOActSevenActivityReceiveSignAwardReq::CopyFrom(const TOActSevenActivityReceiveSignAwardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOActSevenActivityReceiveSignAwardReq::IsInitialized() const {

  return true;
}

void TOActSevenActivityReceiveSignAwardReq::Swap(TOActSevenActivityReceiveSignAwardReq* other) {
  if (other != this) {
    std::swap(day_, other->day_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOActSevenActivityReceiveSignAwardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOActSevenActivityReceiveSignAwardReq_descriptor_;
  metadata.reflection = TOActSevenActivityReceiveSignAwardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOActSevenActivityBuySellDiscountItemReq::kDayFieldNumber;
#endif  // !_MSC_VER

TOActSevenActivityBuySellDiscountItemReq::TOActSevenActivityBuySellDiscountItemReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOActSevenActivityBuySellDiscountItemReq)
}

void TOActSevenActivityBuySellDiscountItemReq::InitAsDefaultInstance() {
}

TOActSevenActivityBuySellDiscountItemReq::TOActSevenActivityBuySellDiscountItemReq(const TOActSevenActivityBuySellDiscountItemReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOActSevenActivityBuySellDiscountItemReq)
}

void TOActSevenActivityBuySellDiscountItemReq::SharedCtor() {
  _cached_size_ = 0;
  day_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOActSevenActivityBuySellDiscountItemReq::~TOActSevenActivityBuySellDiscountItemReq() {
  // @@protoc_insertion_point(destructor:pb.TOActSevenActivityBuySellDiscountItemReq)
  SharedDtor();
}

void TOActSevenActivityBuySellDiscountItemReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOActSevenActivityBuySellDiscountItemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOActSevenActivityBuySellDiscountItemReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOActSevenActivityBuySellDiscountItemReq_descriptor_;
}

const TOActSevenActivityBuySellDiscountItemReq& TOActSevenActivityBuySellDiscountItemReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOActSevenActivityBuySellDiscountItemReq* TOActSevenActivityBuySellDiscountItemReq::default_instance_ = NULL;

TOActSevenActivityBuySellDiscountItemReq* TOActSevenActivityBuySellDiscountItemReq::New() const {
  return new TOActSevenActivityBuySellDiscountItemReq;
}

void TOActSevenActivityBuySellDiscountItemReq::Clear() {
  day_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOActSevenActivityBuySellDiscountItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOActSevenActivityBuySellDiscountItemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Day = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_)));
          set_has_day();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOActSevenActivityBuySellDiscountItemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOActSevenActivityBuySellDiscountItemReq)
  return false;
#undef DO_
}

void TOActSevenActivityBuySellDiscountItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOActSevenActivityBuySellDiscountItemReq)
  // optional uint32 Day = 1;
  if (has_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->day(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOActSevenActivityBuySellDiscountItemReq)
}

::google::protobuf::uint8* TOActSevenActivityBuySellDiscountItemReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOActSevenActivityBuySellDiscountItemReq)
  // optional uint32 Day = 1;
  if (has_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->day(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOActSevenActivityBuySellDiscountItemReq)
  return target;
}

int TOActSevenActivityBuySellDiscountItemReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Day = 1;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->day());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOActSevenActivityBuySellDiscountItemReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOActSevenActivityBuySellDiscountItemReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOActSevenActivityBuySellDiscountItemReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOActSevenActivityBuySellDiscountItemReq::MergeFrom(const TOActSevenActivityBuySellDiscountItemReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_day()) {
      set_day(from.day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOActSevenActivityBuySellDiscountItemReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOActSevenActivityBuySellDiscountItemReq::CopyFrom(const TOActSevenActivityBuySellDiscountItemReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOActSevenActivityBuySellDiscountItemReq::IsInitialized() const {

  return true;
}

void TOActSevenActivityBuySellDiscountItemReq::Swap(TOActSevenActivityBuySellDiscountItemReq* other) {
  if (other != this) {
    std::swap(day_, other->day_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOActSevenActivityBuySellDiscountItemReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOActSevenActivityBuySellDiscountItemReq_descriptor_;
  metadata.reflection = TOActSevenActivityBuySellDiscountItemReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOActStarBlessingBagGetInfoRsp::kArrRewardInfoFieldNumber;
#endif  // !_MSC_VER

TOActStarBlessingBagGetInfoRsp::TOActStarBlessingBagGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOActStarBlessingBagGetInfoRsp)
}

void TOActStarBlessingBagGetInfoRsp::InitAsDefaultInstance() {
}

TOActStarBlessingBagGetInfoRsp::TOActStarBlessingBagGetInfoRsp(const TOActStarBlessingBagGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOActStarBlessingBagGetInfoRsp)
}

void TOActStarBlessingBagGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOActStarBlessingBagGetInfoRsp::~TOActStarBlessingBagGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TOActStarBlessingBagGetInfoRsp)
  SharedDtor();
}

void TOActStarBlessingBagGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOActStarBlessingBagGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOActStarBlessingBagGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOActStarBlessingBagGetInfoRsp_descriptor_;
}

const TOActStarBlessingBagGetInfoRsp& TOActStarBlessingBagGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOActStarBlessingBagGetInfoRsp* TOActStarBlessingBagGetInfoRsp::default_instance_ = NULL;

TOActStarBlessingBagGetInfoRsp* TOActStarBlessingBagGetInfoRsp::New() const {
  return new TOActStarBlessingBagGetInfoRsp;
}

void TOActStarBlessingBagGetInfoRsp::Clear() {
  arrrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOActStarBlessingBagGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOActStarBlessingBagGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrRewardInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOActStarBlessingBagGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOActStarBlessingBagGetInfoRsp)
  return false;
#undef DO_
}

void TOActStarBlessingBagGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOActStarBlessingBagGetInfoRsp)
  // repeated .pb.TCommonReward ArrRewardInfo = 1;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOActStarBlessingBagGetInfoRsp)
}

::google::protobuf::uint8* TOActStarBlessingBagGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOActStarBlessingBagGetInfoRsp)
  // repeated .pb.TCommonReward ArrRewardInfo = 1;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOActStarBlessingBagGetInfoRsp)
  return target;
}

int TOActStarBlessingBagGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrRewardInfo = 1;
  total_size += 1 * this->arrrewardinfo_size();
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOActStarBlessingBagGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOActStarBlessingBagGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOActStarBlessingBagGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOActStarBlessingBagGetInfoRsp::MergeFrom(const TOActStarBlessingBagGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrewardinfo_.MergeFrom(from.arrrewardinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOActStarBlessingBagGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOActStarBlessingBagGetInfoRsp::CopyFrom(const TOActStarBlessingBagGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOActStarBlessingBagGetInfoRsp::IsInitialized() const {

  return true;
}

void TOActStarBlessingBagGetInfoRsp::Swap(TOActStarBlessingBagGetInfoRsp* other) {
  if (other != this) {
    arrrewardinfo_.Swap(&other->arrrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOActStarBlessingBagGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOActStarBlessingBagGetInfoRsp_descriptor_;
  metadata.reflection = TOActStarBlessingBagGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOActStarBlessingBagGetRewardRsp::kRewardInfoFieldNumber;
#endif  // !_MSC_VER

TOActStarBlessingBagGetRewardRsp::TOActStarBlessingBagGetRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOActStarBlessingBagGetRewardRsp)
}

void TOActStarBlessingBagGetRewardRsp::InitAsDefaultInstance() {
  rewardinfo_ = const_cast< ::pb::TCommonReward*>(&::pb::TCommonReward::default_instance());
}

TOActStarBlessingBagGetRewardRsp::TOActStarBlessingBagGetRewardRsp(const TOActStarBlessingBagGetRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOActStarBlessingBagGetRewardRsp)
}

void TOActStarBlessingBagGetRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  rewardinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOActStarBlessingBagGetRewardRsp::~TOActStarBlessingBagGetRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOActStarBlessingBagGetRewardRsp)
  SharedDtor();
}

void TOActStarBlessingBagGetRewardRsp::SharedDtor() {
  if (this != default_instance_) {
    delete rewardinfo_;
  }
}

void TOActStarBlessingBagGetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOActStarBlessingBagGetRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOActStarBlessingBagGetRewardRsp_descriptor_;
}

const TOActStarBlessingBagGetRewardRsp& TOActStarBlessingBagGetRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOActStarBlessingBagGetRewardRsp* TOActStarBlessingBagGetRewardRsp::default_instance_ = NULL;

TOActStarBlessingBagGetRewardRsp* TOActStarBlessingBagGetRewardRsp::New() const {
  return new TOActStarBlessingBagGetRewardRsp;
}

void TOActStarBlessingBagGetRewardRsp::Clear() {
  if (has_rewardinfo()) {
    if (rewardinfo_ != NULL) rewardinfo_->::pb::TCommonReward::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOActStarBlessingBagGetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOActStarBlessingBagGetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TCommonReward RewardInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOActStarBlessingBagGetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOActStarBlessingBagGetRewardRsp)
  return false;
#undef DO_
}

void TOActStarBlessingBagGetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOActStarBlessingBagGetRewardRsp)
  // optional .pb.TCommonReward RewardInfo = 1;
  if (has_rewardinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOActStarBlessingBagGetRewardRsp)
}

::google::protobuf::uint8* TOActStarBlessingBagGetRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOActStarBlessingBagGetRewardRsp)
  // optional .pb.TCommonReward RewardInfo = 1;
  if (has_rewardinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOActStarBlessingBagGetRewardRsp)
  return target;
}

int TOActStarBlessingBagGetRewardRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TCommonReward RewardInfo = 1;
    if (has_rewardinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rewardinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOActStarBlessingBagGetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOActStarBlessingBagGetRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOActStarBlessingBagGetRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOActStarBlessingBagGetRewardRsp::MergeFrom(const TOActStarBlessingBagGetRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rewardinfo()) {
      mutable_rewardinfo()->::pb::TCommonReward::MergeFrom(from.rewardinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOActStarBlessingBagGetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOActStarBlessingBagGetRewardRsp::CopyFrom(const TOActStarBlessingBagGetRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOActStarBlessingBagGetRewardRsp::IsInitialized() const {

  return true;
}

void TOActStarBlessingBagGetRewardRsp::Swap(TOActStarBlessingBagGetRewardRsp* other) {
  if (other != this) {
    std::swap(rewardinfo_, other->rewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOActStarBlessingBagGetRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOActStarBlessingBagGetRewardRsp_descriptor_;
  metadata.reflection = TOActStarBlessingBagGetRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityLotsOfGoldGetInfoRsp::kArrTaskRewardInfoFieldNumber;
const int TOpenActivityLotsOfGoldGetInfoRsp::kArrIntegralRewardInfoFieldNumber;
#endif  // !_MSC_VER

TOpenActivityLotsOfGoldGetInfoRsp::TOpenActivityLotsOfGoldGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityLotsOfGoldGetInfoRsp)
}

void TOpenActivityLotsOfGoldGetInfoRsp::InitAsDefaultInstance() {
}

TOpenActivityLotsOfGoldGetInfoRsp::TOpenActivityLotsOfGoldGetInfoRsp(const TOpenActivityLotsOfGoldGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityLotsOfGoldGetInfoRsp)
}

void TOpenActivityLotsOfGoldGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityLotsOfGoldGetInfoRsp::~TOpenActivityLotsOfGoldGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityLotsOfGoldGetInfoRsp)
  SharedDtor();
}

void TOpenActivityLotsOfGoldGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityLotsOfGoldGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityLotsOfGoldGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityLotsOfGoldGetInfoRsp_descriptor_;
}

const TOpenActivityLotsOfGoldGetInfoRsp& TOpenActivityLotsOfGoldGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityLotsOfGoldGetInfoRsp* TOpenActivityLotsOfGoldGetInfoRsp::default_instance_ = NULL;

TOpenActivityLotsOfGoldGetInfoRsp* TOpenActivityLotsOfGoldGetInfoRsp::New() const {
  return new TOpenActivityLotsOfGoldGetInfoRsp;
}

void TOpenActivityLotsOfGoldGetInfoRsp::Clear() {
  arrtaskrewardinfo_.Clear();
  arrintegralrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityLotsOfGoldGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityLotsOfGoldGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrTaskRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtaskrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrTaskRewardInfo;
        if (input->ExpectTag(18)) goto parse_ArrIntegralRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrIntegralRewardInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrIntegralRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrintegralrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrIntegralRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityLotsOfGoldGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityLotsOfGoldGetInfoRsp)
  return false;
#undef DO_
}

void TOpenActivityLotsOfGoldGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityLotsOfGoldGetInfoRsp)
  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 1;
  for (int i = 0; i < this->arrtaskrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrtaskrewardinfo(i), output);
  }

  // repeated .pb.TActivityRewardInfo ArrIntegralRewardInfo = 2;
  for (int i = 0; i < this->arrintegralrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrintegralrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityLotsOfGoldGetInfoRsp)
}

::google::protobuf::uint8* TOpenActivityLotsOfGoldGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityLotsOfGoldGetInfoRsp)
  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 1;
  for (int i = 0; i < this->arrtaskrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrtaskrewardinfo(i), target);
  }

  // repeated .pb.TActivityRewardInfo ArrIntegralRewardInfo = 2;
  for (int i = 0; i < this->arrintegralrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrintegralrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityLotsOfGoldGetInfoRsp)
  return target;
}

int TOpenActivityLotsOfGoldGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 1;
  total_size += 1 * this->arrtaskrewardinfo_size();
  for (int i = 0; i < this->arrtaskrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtaskrewardinfo(i));
  }

  // repeated .pb.TActivityRewardInfo ArrIntegralRewardInfo = 2;
  total_size += 1 * this->arrintegralrewardinfo_size();
  for (int i = 0; i < this->arrintegralrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrintegralrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityLotsOfGoldGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityLotsOfGoldGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityLotsOfGoldGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityLotsOfGoldGetInfoRsp::MergeFrom(const TOpenActivityLotsOfGoldGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrtaskrewardinfo_.MergeFrom(from.arrtaskrewardinfo_);
  arrintegralrewardinfo_.MergeFrom(from.arrintegralrewardinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityLotsOfGoldGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityLotsOfGoldGetInfoRsp::CopyFrom(const TOpenActivityLotsOfGoldGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityLotsOfGoldGetInfoRsp::IsInitialized() const {

  return true;
}

void TOpenActivityLotsOfGoldGetInfoRsp::Swap(TOpenActivityLotsOfGoldGetInfoRsp* other) {
  if (other != this) {
    arrtaskrewardinfo_.Swap(&other->arrtaskrewardinfo_);
    arrintegralrewardinfo_.Swap(&other->arrintegralrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityLotsOfGoldGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityLotsOfGoldGetInfoRsp_descriptor_;
  metadata.reflection = TOpenActivityLotsOfGoldGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityLotsOfGoldGetTaskRewardReq::kContentIdFieldNumber;
#endif  // !_MSC_VER

TOpenActivityLotsOfGoldGetTaskRewardReq::TOpenActivityLotsOfGoldGetTaskRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityLotsOfGoldGetTaskRewardReq)
}

void TOpenActivityLotsOfGoldGetTaskRewardReq::InitAsDefaultInstance() {
}

TOpenActivityLotsOfGoldGetTaskRewardReq::TOpenActivityLotsOfGoldGetTaskRewardReq(const TOpenActivityLotsOfGoldGetTaskRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityLotsOfGoldGetTaskRewardReq)
}

void TOpenActivityLotsOfGoldGetTaskRewardReq::SharedCtor() {
  _cached_size_ = 0;
  contentid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityLotsOfGoldGetTaskRewardReq::~TOpenActivityLotsOfGoldGetTaskRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityLotsOfGoldGetTaskRewardReq)
  SharedDtor();
}

void TOpenActivityLotsOfGoldGetTaskRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityLotsOfGoldGetTaskRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityLotsOfGoldGetTaskRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityLotsOfGoldGetTaskRewardReq_descriptor_;
}

const TOpenActivityLotsOfGoldGetTaskRewardReq& TOpenActivityLotsOfGoldGetTaskRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityLotsOfGoldGetTaskRewardReq* TOpenActivityLotsOfGoldGetTaskRewardReq::default_instance_ = NULL;

TOpenActivityLotsOfGoldGetTaskRewardReq* TOpenActivityLotsOfGoldGetTaskRewardReq::New() const {
  return new TOpenActivityLotsOfGoldGetTaskRewardReq;
}

void TOpenActivityLotsOfGoldGetTaskRewardReq::Clear() {
  contentid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityLotsOfGoldGetTaskRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityLotsOfGoldGetTaskRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ContentId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contentid_)));
          set_has_contentid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityLotsOfGoldGetTaskRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityLotsOfGoldGetTaskRewardReq)
  return false;
#undef DO_
}

void TOpenActivityLotsOfGoldGetTaskRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityLotsOfGoldGetTaskRewardReq)
  // optional uint32 ContentId = 1;
  if (has_contentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->contentid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityLotsOfGoldGetTaskRewardReq)
}

::google::protobuf::uint8* TOpenActivityLotsOfGoldGetTaskRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityLotsOfGoldGetTaskRewardReq)
  // optional uint32 ContentId = 1;
  if (has_contentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->contentid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityLotsOfGoldGetTaskRewardReq)
  return target;
}

int TOpenActivityLotsOfGoldGetTaskRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ContentId = 1;
    if (has_contentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->contentid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityLotsOfGoldGetTaskRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityLotsOfGoldGetTaskRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityLotsOfGoldGetTaskRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityLotsOfGoldGetTaskRewardReq::MergeFrom(const TOpenActivityLotsOfGoldGetTaskRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_contentid()) {
      set_contentid(from.contentid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityLotsOfGoldGetTaskRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityLotsOfGoldGetTaskRewardReq::CopyFrom(const TOpenActivityLotsOfGoldGetTaskRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityLotsOfGoldGetTaskRewardReq::IsInitialized() const {

  return true;
}

void TOpenActivityLotsOfGoldGetTaskRewardReq::Swap(TOpenActivityLotsOfGoldGetTaskRewardReq* other) {
  if (other != this) {
    std::swap(contentid_, other->contentid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityLotsOfGoldGetTaskRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityLotsOfGoldGetTaskRewardReq_descriptor_;
  metadata.reflection = TOpenActivityLotsOfGoldGetTaskRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityLotsOfGoldGetTaskRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOpenActivityLotsOfGoldGetTaskRewardRsp::TOpenActivityLotsOfGoldGetTaskRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp)
}

void TOpenActivityLotsOfGoldGetTaskRewardRsp::InitAsDefaultInstance() {
}

TOpenActivityLotsOfGoldGetTaskRewardRsp::TOpenActivityLotsOfGoldGetTaskRewardRsp(const TOpenActivityLotsOfGoldGetTaskRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp)
}

void TOpenActivityLotsOfGoldGetTaskRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityLotsOfGoldGetTaskRewardRsp::~TOpenActivityLotsOfGoldGetTaskRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp)
  SharedDtor();
}

void TOpenActivityLotsOfGoldGetTaskRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityLotsOfGoldGetTaskRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityLotsOfGoldGetTaskRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityLotsOfGoldGetTaskRewardRsp_descriptor_;
}

const TOpenActivityLotsOfGoldGetTaskRewardRsp& TOpenActivityLotsOfGoldGetTaskRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityLotsOfGoldGetTaskRewardRsp* TOpenActivityLotsOfGoldGetTaskRewardRsp::default_instance_ = NULL;

TOpenActivityLotsOfGoldGetTaskRewardRsp* TOpenActivityLotsOfGoldGetTaskRewardRsp::New() const {
  return new TOpenActivityLotsOfGoldGetTaskRewardRsp;
}

void TOpenActivityLotsOfGoldGetTaskRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityLotsOfGoldGetTaskRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp)
  return false;
#undef DO_
}

void TOpenActivityLotsOfGoldGetTaskRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp)
}

::google::protobuf::uint8* TOpenActivityLotsOfGoldGetTaskRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp)
  return target;
}

int TOpenActivityLotsOfGoldGetTaskRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityLotsOfGoldGetTaskRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityLotsOfGoldGetTaskRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityLotsOfGoldGetTaskRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityLotsOfGoldGetTaskRewardRsp::MergeFrom(const TOpenActivityLotsOfGoldGetTaskRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityLotsOfGoldGetTaskRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityLotsOfGoldGetTaskRewardRsp::CopyFrom(const TOpenActivityLotsOfGoldGetTaskRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityLotsOfGoldGetTaskRewardRsp::IsInitialized() const {

  return true;
}

void TOpenActivityLotsOfGoldGetTaskRewardRsp::Swap(TOpenActivityLotsOfGoldGetTaskRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityLotsOfGoldGetTaskRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityLotsOfGoldGetTaskRewardRsp_descriptor_;
  metadata.reflection = TOpenActivityLotsOfGoldGetTaskRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityLotsOfGoldGetIntegralRewardReq::kIntegralIdFieldNumber;
#endif  // !_MSC_VER

TOpenActivityLotsOfGoldGetIntegralRewardReq::TOpenActivityLotsOfGoldGetIntegralRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityLotsOfGoldGetIntegralRewardReq)
}

void TOpenActivityLotsOfGoldGetIntegralRewardReq::InitAsDefaultInstance() {
}

TOpenActivityLotsOfGoldGetIntegralRewardReq::TOpenActivityLotsOfGoldGetIntegralRewardReq(const TOpenActivityLotsOfGoldGetIntegralRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityLotsOfGoldGetIntegralRewardReq)
}

void TOpenActivityLotsOfGoldGetIntegralRewardReq::SharedCtor() {
  _cached_size_ = 0;
  integralid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityLotsOfGoldGetIntegralRewardReq::~TOpenActivityLotsOfGoldGetIntegralRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityLotsOfGoldGetIntegralRewardReq)
  SharedDtor();
}

void TOpenActivityLotsOfGoldGetIntegralRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityLotsOfGoldGetIntegralRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityLotsOfGoldGetIntegralRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityLotsOfGoldGetIntegralRewardReq_descriptor_;
}

const TOpenActivityLotsOfGoldGetIntegralRewardReq& TOpenActivityLotsOfGoldGetIntegralRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityLotsOfGoldGetIntegralRewardReq* TOpenActivityLotsOfGoldGetIntegralRewardReq::default_instance_ = NULL;

TOpenActivityLotsOfGoldGetIntegralRewardReq* TOpenActivityLotsOfGoldGetIntegralRewardReq::New() const {
  return new TOpenActivityLotsOfGoldGetIntegralRewardReq;
}

void TOpenActivityLotsOfGoldGetIntegralRewardReq::Clear() {
  integralid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityLotsOfGoldGetIntegralRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityLotsOfGoldGetIntegralRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 IntegralId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &integralid_)));
          set_has_integralid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityLotsOfGoldGetIntegralRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityLotsOfGoldGetIntegralRewardReq)
  return false;
#undef DO_
}

void TOpenActivityLotsOfGoldGetIntegralRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityLotsOfGoldGetIntegralRewardReq)
  // optional uint32 IntegralId = 1;
  if (has_integralid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->integralid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityLotsOfGoldGetIntegralRewardReq)
}

::google::protobuf::uint8* TOpenActivityLotsOfGoldGetIntegralRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityLotsOfGoldGetIntegralRewardReq)
  // optional uint32 IntegralId = 1;
  if (has_integralid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->integralid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityLotsOfGoldGetIntegralRewardReq)
  return target;
}

int TOpenActivityLotsOfGoldGetIntegralRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 IntegralId = 1;
    if (has_integralid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->integralid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityLotsOfGoldGetIntegralRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityLotsOfGoldGetIntegralRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityLotsOfGoldGetIntegralRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityLotsOfGoldGetIntegralRewardReq::MergeFrom(const TOpenActivityLotsOfGoldGetIntegralRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_integralid()) {
      set_integralid(from.integralid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityLotsOfGoldGetIntegralRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityLotsOfGoldGetIntegralRewardReq::CopyFrom(const TOpenActivityLotsOfGoldGetIntegralRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityLotsOfGoldGetIntegralRewardReq::IsInitialized() const {

  return true;
}

void TOpenActivityLotsOfGoldGetIntegralRewardReq::Swap(TOpenActivityLotsOfGoldGetIntegralRewardReq* other) {
  if (other != this) {
    std::swap(integralid_, other->integralid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityLotsOfGoldGetIntegralRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityLotsOfGoldGetIntegralRewardReq_descriptor_;
  metadata.reflection = TOpenActivityLotsOfGoldGetIntegralRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityLotsOfGoldGetIntegralRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOpenActivityLotsOfGoldGetIntegralRewardRsp::TOpenActivityLotsOfGoldGetIntegralRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp)
}

void TOpenActivityLotsOfGoldGetIntegralRewardRsp::InitAsDefaultInstance() {
}

TOpenActivityLotsOfGoldGetIntegralRewardRsp::TOpenActivityLotsOfGoldGetIntegralRewardRsp(const TOpenActivityLotsOfGoldGetIntegralRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp)
}

void TOpenActivityLotsOfGoldGetIntegralRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityLotsOfGoldGetIntegralRewardRsp::~TOpenActivityLotsOfGoldGetIntegralRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp)
  SharedDtor();
}

void TOpenActivityLotsOfGoldGetIntegralRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityLotsOfGoldGetIntegralRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityLotsOfGoldGetIntegralRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityLotsOfGoldGetIntegralRewardRsp_descriptor_;
}

const TOpenActivityLotsOfGoldGetIntegralRewardRsp& TOpenActivityLotsOfGoldGetIntegralRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityLotsOfGoldGetIntegralRewardRsp* TOpenActivityLotsOfGoldGetIntegralRewardRsp::default_instance_ = NULL;

TOpenActivityLotsOfGoldGetIntegralRewardRsp* TOpenActivityLotsOfGoldGetIntegralRewardRsp::New() const {
  return new TOpenActivityLotsOfGoldGetIntegralRewardRsp;
}

void TOpenActivityLotsOfGoldGetIntegralRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityLotsOfGoldGetIntegralRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp)
  return false;
#undef DO_
}

void TOpenActivityLotsOfGoldGetIntegralRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp)
}

::google::protobuf::uint8* TOpenActivityLotsOfGoldGetIntegralRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp)
  return target;
}

int TOpenActivityLotsOfGoldGetIntegralRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityLotsOfGoldGetIntegralRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityLotsOfGoldGetIntegralRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityLotsOfGoldGetIntegralRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityLotsOfGoldGetIntegralRewardRsp::MergeFrom(const TOpenActivityLotsOfGoldGetIntegralRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityLotsOfGoldGetIntegralRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityLotsOfGoldGetIntegralRewardRsp::CopyFrom(const TOpenActivityLotsOfGoldGetIntegralRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityLotsOfGoldGetIntegralRewardRsp::IsInitialized() const {

  return true;
}

void TOpenActivityLotsOfGoldGetIntegralRewardRsp::Swap(TOpenActivityLotsOfGoldGetIntegralRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityLotsOfGoldGetIntegralRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityLotsOfGoldGetIntegralRewardRsp_descriptor_;
  metadata.reflection = TOpenActivityLotsOfGoldGetIntegralRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityAllPlayerGoldHeroGetInfoRsp::kTotalWaveNumFieldNumber;
const int TOpenActivityAllPlayerGoldHeroGetInfoRsp::kArrRewardInfoFieldNumber;
#endif  // !_MSC_VER

TOpenActivityAllPlayerGoldHeroGetInfoRsp::TOpenActivityAllPlayerGoldHeroGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp)
}

void TOpenActivityAllPlayerGoldHeroGetInfoRsp::InitAsDefaultInstance() {
}

TOpenActivityAllPlayerGoldHeroGetInfoRsp::TOpenActivityAllPlayerGoldHeroGetInfoRsp(const TOpenActivityAllPlayerGoldHeroGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp)
}

void TOpenActivityAllPlayerGoldHeroGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  totalwavenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityAllPlayerGoldHeroGetInfoRsp::~TOpenActivityAllPlayerGoldHeroGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp)
  SharedDtor();
}

void TOpenActivityAllPlayerGoldHeroGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityAllPlayerGoldHeroGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityAllPlayerGoldHeroGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityAllPlayerGoldHeroGetInfoRsp_descriptor_;
}

const TOpenActivityAllPlayerGoldHeroGetInfoRsp& TOpenActivityAllPlayerGoldHeroGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityAllPlayerGoldHeroGetInfoRsp* TOpenActivityAllPlayerGoldHeroGetInfoRsp::default_instance_ = NULL;

TOpenActivityAllPlayerGoldHeroGetInfoRsp* TOpenActivityAllPlayerGoldHeroGetInfoRsp::New() const {
  return new TOpenActivityAllPlayerGoldHeroGetInfoRsp;
}

void TOpenActivityAllPlayerGoldHeroGetInfoRsp::Clear() {
  totalwavenum_ = 0u;
  arrrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityAllPlayerGoldHeroGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TotalWaveNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalwavenum_)));
          set_has_totalwavenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp)
  return false;
#undef DO_
}

void TOpenActivityAllPlayerGoldHeroGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp)
  // optional uint32 TotalWaveNum = 1;
  if (has_totalwavenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->totalwavenum(), output);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp)
}

::google::protobuf::uint8* TOpenActivityAllPlayerGoldHeroGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp)
  // optional uint32 TotalWaveNum = 1;
  if (has_totalwavenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->totalwavenum(), target);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp)
  return target;
}

int TOpenActivityAllPlayerGoldHeroGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TotalWaveNum = 1;
    if (has_totalwavenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->totalwavenum());
    }

  }
  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  total_size += 1 * this->arrrewardinfo_size();
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityAllPlayerGoldHeroGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityAllPlayerGoldHeroGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityAllPlayerGoldHeroGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityAllPlayerGoldHeroGetInfoRsp::MergeFrom(const TOpenActivityAllPlayerGoldHeroGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrewardinfo_.MergeFrom(from.arrrewardinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_totalwavenum()) {
      set_totalwavenum(from.totalwavenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityAllPlayerGoldHeroGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityAllPlayerGoldHeroGetInfoRsp::CopyFrom(const TOpenActivityAllPlayerGoldHeroGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityAllPlayerGoldHeroGetInfoRsp::IsInitialized() const {

  return true;
}

void TOpenActivityAllPlayerGoldHeroGetInfoRsp::Swap(TOpenActivityAllPlayerGoldHeroGetInfoRsp* other) {
  if (other != this) {
    std::swap(totalwavenum_, other->totalwavenum_);
    arrrewardinfo_.Swap(&other->arrrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityAllPlayerGoldHeroGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityAllPlayerGoldHeroGetInfoRsp_descriptor_;
  metadata.reflection = TOpenActivityAllPlayerGoldHeroGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityAllPlayerGoldHeroGetRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

TOpenActivityAllPlayerGoldHeroGetRewardReq::TOpenActivityAllPlayerGoldHeroGetRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityAllPlayerGoldHeroGetRewardReq)
}

void TOpenActivityAllPlayerGoldHeroGetRewardReq::InitAsDefaultInstance() {
}

TOpenActivityAllPlayerGoldHeroGetRewardReq::TOpenActivityAllPlayerGoldHeroGetRewardReq(const TOpenActivityAllPlayerGoldHeroGetRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityAllPlayerGoldHeroGetRewardReq)
}

void TOpenActivityAllPlayerGoldHeroGetRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityAllPlayerGoldHeroGetRewardReq::~TOpenActivityAllPlayerGoldHeroGetRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityAllPlayerGoldHeroGetRewardReq)
  SharedDtor();
}

void TOpenActivityAllPlayerGoldHeroGetRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityAllPlayerGoldHeroGetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityAllPlayerGoldHeroGetRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityAllPlayerGoldHeroGetRewardReq_descriptor_;
}

const TOpenActivityAllPlayerGoldHeroGetRewardReq& TOpenActivityAllPlayerGoldHeroGetRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityAllPlayerGoldHeroGetRewardReq* TOpenActivityAllPlayerGoldHeroGetRewardReq::default_instance_ = NULL;

TOpenActivityAllPlayerGoldHeroGetRewardReq* TOpenActivityAllPlayerGoldHeroGetRewardReq::New() const {
  return new TOpenActivityAllPlayerGoldHeroGetRewardReq;
}

void TOpenActivityAllPlayerGoldHeroGetRewardReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityAllPlayerGoldHeroGetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityAllPlayerGoldHeroGetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityAllPlayerGoldHeroGetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityAllPlayerGoldHeroGetRewardReq)
  return false;
#undef DO_
}

void TOpenActivityAllPlayerGoldHeroGetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityAllPlayerGoldHeroGetRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityAllPlayerGoldHeroGetRewardReq)
}

::google::protobuf::uint8* TOpenActivityAllPlayerGoldHeroGetRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityAllPlayerGoldHeroGetRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityAllPlayerGoldHeroGetRewardReq)
  return target;
}

int TOpenActivityAllPlayerGoldHeroGetRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityAllPlayerGoldHeroGetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityAllPlayerGoldHeroGetRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityAllPlayerGoldHeroGetRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityAllPlayerGoldHeroGetRewardReq::MergeFrom(const TOpenActivityAllPlayerGoldHeroGetRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityAllPlayerGoldHeroGetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityAllPlayerGoldHeroGetRewardReq::CopyFrom(const TOpenActivityAllPlayerGoldHeroGetRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityAllPlayerGoldHeroGetRewardReq::IsInitialized() const {

  return true;
}

void TOpenActivityAllPlayerGoldHeroGetRewardReq::Swap(TOpenActivityAllPlayerGoldHeroGetRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityAllPlayerGoldHeroGetRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityAllPlayerGoldHeroGetRewardReq_descriptor_;
  metadata.reflection = TOpenActivityAllPlayerGoldHeroGetRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityAllPlayerGoldHeroGetRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOpenActivityAllPlayerGoldHeroGetRewardRsp::TOpenActivityAllPlayerGoldHeroGetRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp)
}

void TOpenActivityAllPlayerGoldHeroGetRewardRsp::InitAsDefaultInstance() {
}

TOpenActivityAllPlayerGoldHeroGetRewardRsp::TOpenActivityAllPlayerGoldHeroGetRewardRsp(const TOpenActivityAllPlayerGoldHeroGetRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp)
}

void TOpenActivityAllPlayerGoldHeroGetRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityAllPlayerGoldHeroGetRewardRsp::~TOpenActivityAllPlayerGoldHeroGetRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp)
  SharedDtor();
}

void TOpenActivityAllPlayerGoldHeroGetRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityAllPlayerGoldHeroGetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityAllPlayerGoldHeroGetRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityAllPlayerGoldHeroGetRewardRsp_descriptor_;
}

const TOpenActivityAllPlayerGoldHeroGetRewardRsp& TOpenActivityAllPlayerGoldHeroGetRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityAllPlayerGoldHeroGetRewardRsp* TOpenActivityAllPlayerGoldHeroGetRewardRsp::default_instance_ = NULL;

TOpenActivityAllPlayerGoldHeroGetRewardRsp* TOpenActivityAllPlayerGoldHeroGetRewardRsp::New() const {
  return new TOpenActivityAllPlayerGoldHeroGetRewardRsp;
}

void TOpenActivityAllPlayerGoldHeroGetRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityAllPlayerGoldHeroGetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp)
  return false;
#undef DO_
}

void TOpenActivityAllPlayerGoldHeroGetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp)
}

::google::protobuf::uint8* TOpenActivityAllPlayerGoldHeroGetRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp)
  return target;
}

int TOpenActivityAllPlayerGoldHeroGetRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityAllPlayerGoldHeroGetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityAllPlayerGoldHeroGetRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityAllPlayerGoldHeroGetRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityAllPlayerGoldHeroGetRewardRsp::MergeFrom(const TOpenActivityAllPlayerGoldHeroGetRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityAllPlayerGoldHeroGetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityAllPlayerGoldHeroGetRewardRsp::CopyFrom(const TOpenActivityAllPlayerGoldHeroGetRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityAllPlayerGoldHeroGetRewardRsp::IsInitialized() const {

  return true;
}

void TOpenActivityAllPlayerGoldHeroGetRewardRsp::Swap(TOpenActivityAllPlayerGoldHeroGetRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityAllPlayerGoldHeroGetRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityAllPlayerGoldHeroGetRewardRsp_descriptor_;
  metadata.reflection = TOpenActivityAllPlayerGoldHeroGetRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityTowerPassLayerGetInfoRsp::kPassLayerFieldNumber;
const int TOpenActivityTowerPassLayerGetInfoRsp::kArrRewardInfoFieldNumber;
#endif  // !_MSC_VER

TOpenActivityTowerPassLayerGetInfoRsp::TOpenActivityTowerPassLayerGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityTowerPassLayerGetInfoRsp)
}

void TOpenActivityTowerPassLayerGetInfoRsp::InitAsDefaultInstance() {
}

TOpenActivityTowerPassLayerGetInfoRsp::TOpenActivityTowerPassLayerGetInfoRsp(const TOpenActivityTowerPassLayerGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityTowerPassLayerGetInfoRsp)
}

void TOpenActivityTowerPassLayerGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  passlayer_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityTowerPassLayerGetInfoRsp::~TOpenActivityTowerPassLayerGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityTowerPassLayerGetInfoRsp)
  SharedDtor();
}

void TOpenActivityTowerPassLayerGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityTowerPassLayerGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityTowerPassLayerGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityTowerPassLayerGetInfoRsp_descriptor_;
}

const TOpenActivityTowerPassLayerGetInfoRsp& TOpenActivityTowerPassLayerGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityTowerPassLayerGetInfoRsp* TOpenActivityTowerPassLayerGetInfoRsp::default_instance_ = NULL;

TOpenActivityTowerPassLayerGetInfoRsp* TOpenActivityTowerPassLayerGetInfoRsp::New() const {
  return new TOpenActivityTowerPassLayerGetInfoRsp;
}

void TOpenActivityTowerPassLayerGetInfoRsp::Clear() {
  passlayer_ = 0u;
  arrrewardinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityTowerPassLayerGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityTowerPassLayerGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 PassLayer = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passlayer_)));
          set_has_passlayer();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRewardInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityTowerPassLayerGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityTowerPassLayerGetInfoRsp)
  return false;
#undef DO_
}

void TOpenActivityTowerPassLayerGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityTowerPassLayerGetInfoRsp)
  // optional uint32 PassLayer = 1;
  if (has_passlayer()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->passlayer(), output);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrrewardinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityTowerPassLayerGetInfoRsp)
}

::google::protobuf::uint8* TOpenActivityTowerPassLayerGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityTowerPassLayerGetInfoRsp)
  // optional uint32 PassLayer = 1;
  if (has_passlayer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->passlayer(), target);
  }

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrrewardinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityTowerPassLayerGetInfoRsp)
  return target;
}

int TOpenActivityTowerPassLayerGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 PassLayer = 1;
    if (has_passlayer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->passlayer());
    }

  }
  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  total_size += 1 * this->arrrewardinfo_size();
  for (int i = 0; i < this->arrrewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrewardinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityTowerPassLayerGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityTowerPassLayerGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityTowerPassLayerGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityTowerPassLayerGetInfoRsp::MergeFrom(const TOpenActivityTowerPassLayerGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrewardinfo_.MergeFrom(from.arrrewardinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_passlayer()) {
      set_passlayer(from.passlayer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityTowerPassLayerGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityTowerPassLayerGetInfoRsp::CopyFrom(const TOpenActivityTowerPassLayerGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityTowerPassLayerGetInfoRsp::IsInitialized() const {

  return true;
}

void TOpenActivityTowerPassLayerGetInfoRsp::Swap(TOpenActivityTowerPassLayerGetInfoRsp* other) {
  if (other != this) {
    std::swap(passlayer_, other->passlayer_);
    arrrewardinfo_.Swap(&other->arrrewardinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityTowerPassLayerGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityTowerPassLayerGetInfoRsp_descriptor_;
  metadata.reflection = TOpenActivityTowerPassLayerGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityTowerPassLayerGetRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

TOpenActivityTowerPassLayerGetRewardReq::TOpenActivityTowerPassLayerGetRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityTowerPassLayerGetRewardReq)
}

void TOpenActivityTowerPassLayerGetRewardReq::InitAsDefaultInstance() {
}

TOpenActivityTowerPassLayerGetRewardReq::TOpenActivityTowerPassLayerGetRewardReq(const TOpenActivityTowerPassLayerGetRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityTowerPassLayerGetRewardReq)
}

void TOpenActivityTowerPassLayerGetRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityTowerPassLayerGetRewardReq::~TOpenActivityTowerPassLayerGetRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityTowerPassLayerGetRewardReq)
  SharedDtor();
}

void TOpenActivityTowerPassLayerGetRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityTowerPassLayerGetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityTowerPassLayerGetRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityTowerPassLayerGetRewardReq_descriptor_;
}

const TOpenActivityTowerPassLayerGetRewardReq& TOpenActivityTowerPassLayerGetRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityTowerPassLayerGetRewardReq* TOpenActivityTowerPassLayerGetRewardReq::default_instance_ = NULL;

TOpenActivityTowerPassLayerGetRewardReq* TOpenActivityTowerPassLayerGetRewardReq::New() const {
  return new TOpenActivityTowerPassLayerGetRewardReq;
}

void TOpenActivityTowerPassLayerGetRewardReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityTowerPassLayerGetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityTowerPassLayerGetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityTowerPassLayerGetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityTowerPassLayerGetRewardReq)
  return false;
#undef DO_
}

void TOpenActivityTowerPassLayerGetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityTowerPassLayerGetRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityTowerPassLayerGetRewardReq)
}

::google::protobuf::uint8* TOpenActivityTowerPassLayerGetRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityTowerPassLayerGetRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityTowerPassLayerGetRewardReq)
  return target;
}

int TOpenActivityTowerPassLayerGetRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityTowerPassLayerGetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityTowerPassLayerGetRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityTowerPassLayerGetRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityTowerPassLayerGetRewardReq::MergeFrom(const TOpenActivityTowerPassLayerGetRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityTowerPassLayerGetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityTowerPassLayerGetRewardReq::CopyFrom(const TOpenActivityTowerPassLayerGetRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityTowerPassLayerGetRewardReq::IsInitialized() const {

  return true;
}

void TOpenActivityTowerPassLayerGetRewardReq::Swap(TOpenActivityTowerPassLayerGetRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityTowerPassLayerGetRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityTowerPassLayerGetRewardReq_descriptor_;
  metadata.reflection = TOpenActivityTowerPassLayerGetRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOpenActivityTowerPassLayerGetRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TOpenActivityTowerPassLayerGetRewardRsp::TOpenActivityTowerPassLayerGetRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOpenActivityTowerPassLayerGetRewardRsp)
}

void TOpenActivityTowerPassLayerGetRewardRsp::InitAsDefaultInstance() {
}

TOpenActivityTowerPassLayerGetRewardRsp::TOpenActivityTowerPassLayerGetRewardRsp(const TOpenActivityTowerPassLayerGetRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOpenActivityTowerPassLayerGetRewardRsp)
}

void TOpenActivityTowerPassLayerGetRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOpenActivityTowerPassLayerGetRewardRsp::~TOpenActivityTowerPassLayerGetRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOpenActivityTowerPassLayerGetRewardRsp)
  SharedDtor();
}

void TOpenActivityTowerPassLayerGetRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOpenActivityTowerPassLayerGetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOpenActivityTowerPassLayerGetRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOpenActivityTowerPassLayerGetRewardRsp_descriptor_;
}

const TOpenActivityTowerPassLayerGetRewardRsp& TOpenActivityTowerPassLayerGetRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOpenActivity_2eproto();
  return *default_instance_;
}

TOpenActivityTowerPassLayerGetRewardRsp* TOpenActivityTowerPassLayerGetRewardRsp::default_instance_ = NULL;

TOpenActivityTowerPassLayerGetRewardRsp* TOpenActivityTowerPassLayerGetRewardRsp::New() const {
  return new TOpenActivityTowerPassLayerGetRewardRsp;
}

void TOpenActivityTowerPassLayerGetRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOpenActivityTowerPassLayerGetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOpenActivityTowerPassLayerGetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOpenActivityTowerPassLayerGetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOpenActivityTowerPassLayerGetRewardRsp)
  return false;
#undef DO_
}

void TOpenActivityTowerPassLayerGetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOpenActivityTowerPassLayerGetRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOpenActivityTowerPassLayerGetRewardRsp)
}

::google::protobuf::uint8* TOpenActivityTowerPassLayerGetRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOpenActivityTowerPassLayerGetRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOpenActivityTowerPassLayerGetRewardRsp)
  return target;
}

int TOpenActivityTowerPassLayerGetRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOpenActivityTowerPassLayerGetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOpenActivityTowerPassLayerGetRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOpenActivityTowerPassLayerGetRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOpenActivityTowerPassLayerGetRewardRsp::MergeFrom(const TOpenActivityTowerPassLayerGetRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOpenActivityTowerPassLayerGetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOpenActivityTowerPassLayerGetRewardRsp::CopyFrom(const TOpenActivityTowerPassLayerGetRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOpenActivityTowerPassLayerGetRewardRsp::IsInitialized() const {

  return true;
}

void TOpenActivityTowerPassLayerGetRewardRsp::Swap(TOpenActivityTowerPassLayerGetRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOpenActivityTowerPassLayerGetRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOpenActivityTowerPassLayerGetRewardRsp_descriptor_;
  metadata.reflection = TOpenActivityTowerPassLayerGetRewardRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
