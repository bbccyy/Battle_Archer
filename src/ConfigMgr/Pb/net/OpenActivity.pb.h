// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/OpenActivity.proto

#ifndef PROTOBUF_net_2fOpenActivity_2eproto__INCLUDED
#define PROTOBUF_net_2fOpenActivity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

class TActivityRewardInfo;
class TActivityBuyRecordInfo;
class TOpenActivityAccuLoginGetInfoRsp;
class TOpenActivityAccuLoginGetRewardReq;
class TOpenActivityAccuLoginGetRewardRsp;
class TOpenActivityLevelUpGetInfoRsp;
class TOpenActivityLevelUpGetRewardReq;
class TOpenActivityLevelUpGetRewardRsp;
class TOpenActivityDiscountGetInfoRsp;
class TOpenActivityDiscountBuyGoodReq;
class TOpenActivityDiscountBuyGoodRsp;
class TOpenActivityRecruitRetGetInfoRsp;
class TOpenActivityRecruitRetGetRewardReq;
class TOpenActivityRecruitRetGetRewardRsp;
class TOpenActivityHeroStarInfo;
class TOpenActivityHeroStarUpGetInfoRsp;
class TOpenActivityHeroStarUpGetRewardReq;
class TOpenActivityHeroStarUpGetRewardRsp;
class TOpenActivityHalfMonthBuyRecordInfo;
class TOpenActivityHalfMonthSingleDayInfo;
class TOpenActivityHalfMonthGetInfoReq;
class TOpenActivityHalfMonthGetInfoRsp;
class TOpenActivityHalfMonthGetTaskRewardReq;
class TOpenActivityHalfMonthGetTaskRewardRsp;
class TOpenActivityHalfMonthBuyGoodsReq;
class TOpenActivityHalfMonthBuyGoodsRsp;
class TOpenActivityHalfMonthGetIntegralRewardReq;
class TOpenActivityHalfMonthGetIntegralRewardRsp;
class TOActSevenActivityGetInfoRsp;
class TOActSevenActivityReceiveTaskActivityAwardReq;
class TOActSevenActivityReceiveSignAwardReq;
class TOActSevenActivityBuySellDiscountItemReq;
class TOActStarBlessingBagGetInfoRsp;
class TOActStarBlessingBagGetRewardRsp;
class TOpenActivityLotsOfGoldGetInfoRsp;
class TOpenActivityLotsOfGoldGetTaskRewardReq;
class TOpenActivityLotsOfGoldGetTaskRewardRsp;
class TOpenActivityLotsOfGoldGetIntegralRewardReq;
class TOpenActivityLotsOfGoldGetIntegralRewardRsp;
class TOpenActivityAllPlayerGoldHeroGetInfoRsp;
class TOpenActivityAllPlayerGoldHeroGetRewardReq;
class TOpenActivityAllPlayerGoldHeroGetRewardRsp;
class TOpenActivityTowerPassLayerGetInfoRsp;
class TOpenActivityTowerPassLayerGetRewardReq;
class TOpenActivityTowerPassLayerGetRewardRsp;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActivityRewardInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActivityRewardInfo : public ::google::protobuf::Message {
 public:
  TActivityRewardInfo();
  virtual ~TActivityRewardInfo();

  TActivityRewardInfo(const TActivityRewardInfo& from);

  inline TActivityRewardInfo& operator=(const TActivityRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActivityRewardInfo& default_instance();

  void Swap(TActivityRewardInfo* other);

  // implements Message ----------------------------------------------

  TActivityRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActivityRewardInfo& from);
  void MergeFrom(const TActivityRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActivityRewardInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 RewardTime = 2;
  inline bool has_rewardtime() const;
  inline void clear_rewardtime();
  static const int kRewardTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActivityRewardInfo</name>
  	<Function>
  		<name>rewardtime</name>
  		<replaceName>RewardTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rewardtime</name>
  		<replaceName>RewardTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardtime</name>
  		<replaceName>RewardTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 rewardtime() const;
  inline void set_rewardtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActivityRewardInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rewardtime();
  inline void clear_has_rewardtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 rewardtime_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TActivityRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActivityBuyRecordInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActivityBuyRecordInfo : public ::google::protobuf::Message {
 public:
  TActivityBuyRecordInfo();
  virtual ~TActivityBuyRecordInfo();

  TActivityBuyRecordInfo(const TActivityBuyRecordInfo& from);

  inline TActivityBuyRecordInfo& operator=(const TActivityBuyRecordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActivityBuyRecordInfo& default_instance();

  void Swap(TActivityBuyRecordInfo* other);

  // implements Message ----------------------------------------------

  TActivityBuyRecordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActivityBuyRecordInfo& from);
  void MergeFrom(const TActivityBuyRecordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActivityBuyRecordInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 GoodIndex = 2;
  inline bool has_goodindex() const;
  inline void clear_goodindex();
  static const int kGoodIndexFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActivityBuyRecordInfo</name>
  	<Function>
  		<name>goodindex</name>
  		<replaceName>GoodIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_goodindex</name>
  		<replaceName>GoodIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodindex</name>
  		<replaceName>GoodIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 goodindex() const;
  inline void set_goodindex(::google::protobuf::uint32 value);

  // optional uint32 Num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActivityBuyRecordInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint64 BuyTime = 4;
  inline bool has_buytime() const;
  inline void clear_buytime();
  static const int kBuyTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActivityBuyRecordInfo</name>
  	<Function>
  		<name>buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 buytime() const;
  inline void set_buytime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActivityBuyRecordInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_goodindex();
  inline void clear_has_goodindex();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_buytime();
  inline void clear_has_buytime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 goodindex_;
  ::google::protobuf::uint64 buytime_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TActivityBuyRecordInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityAccuLoginGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityAccuLoginGetInfoRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityAccuLoginGetInfoRsp();
  virtual ~TOpenActivityAccuLoginGetInfoRsp();

  TOpenActivityAccuLoginGetInfoRsp(const TOpenActivityAccuLoginGetInfoRsp& from);

  inline TOpenActivityAccuLoginGetInfoRsp& operator=(const TOpenActivityAccuLoginGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityAccuLoginGetInfoRsp& default_instance();

  void Swap(TOpenActivityAccuLoginGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityAccuLoginGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityAccuLoginGetInfoRsp& from);
  void MergeFrom(const TOpenActivityAccuLoginGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AccuLoginNum = 1;
  inline bool has_acculoginnum() const;
  inline void clear_acculoginnum();
  static const int kAccuLoginNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityAccuLoginGetInfoRsp</name>
  	<Function>
  		<name>acculoginnum</name>
  		<replaceName>AccuLoginNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_acculoginnum</name>
  		<replaceName>AccuLoginNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_acculoginnum</name>
  		<replaceName>AccuLoginNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 acculoginnum() const;
  inline void set_acculoginnum(::google::protobuf::uint32 value);

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  inline int arrrewardinfo_size() const;
  inline void clear_arrrewardinfo();
  static const int kArrRewardInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityAccuLoginGetInfoRsp</name>
  	<Function>
  		<name>arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrewardinfo_size</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrrewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrrewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrrewardinfo();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityAccuLoginGetInfoRsp)
 private:
  inline void set_has_acculoginnum();
  inline void clear_has_acculoginnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrrewardinfo_;
  ::google::protobuf::uint32 acculoginnum_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityAccuLoginGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityAccuLoginGetRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityAccuLoginGetRewardReq : public ::google::protobuf::Message {
 public:
  TOpenActivityAccuLoginGetRewardReq();
  virtual ~TOpenActivityAccuLoginGetRewardReq();

  TOpenActivityAccuLoginGetRewardReq(const TOpenActivityAccuLoginGetRewardReq& from);

  inline TOpenActivityAccuLoginGetRewardReq& operator=(const TOpenActivityAccuLoginGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityAccuLoginGetRewardReq& default_instance();

  void Swap(TOpenActivityAccuLoginGetRewardReq* other);

  // implements Message ----------------------------------------------

  TOpenActivityAccuLoginGetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityAccuLoginGetRewardReq& from);
  void MergeFrom(const TOpenActivityAccuLoginGetRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityAccuLoginGetRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityAccuLoginGetRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityAccuLoginGetRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityAccuLoginGetRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityAccuLoginGetRewardRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityAccuLoginGetRewardRsp();
  virtual ~TOpenActivityAccuLoginGetRewardRsp();

  TOpenActivityAccuLoginGetRewardRsp(const TOpenActivityAccuLoginGetRewardRsp& from);

  inline TOpenActivityAccuLoginGetRewardRsp& operator=(const TOpenActivityAccuLoginGetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityAccuLoginGetRewardRsp& default_instance();

  void Swap(TOpenActivityAccuLoginGetRewardRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityAccuLoginGetRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityAccuLoginGetRewardRsp& from);
  void MergeFrom(const TOpenActivityAccuLoginGetRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityAccuLoginGetRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityAccuLoginGetRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityAccuLoginGetRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityLevelUpGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityLevelUpGetInfoRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityLevelUpGetInfoRsp();
  virtual ~TOpenActivityLevelUpGetInfoRsp();

  TOpenActivityLevelUpGetInfoRsp(const TOpenActivityLevelUpGetInfoRsp& from);

  inline TOpenActivityLevelUpGetInfoRsp& operator=(const TOpenActivityLevelUpGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityLevelUpGetInfoRsp& default_instance();

  void Swap(TOpenActivityLevelUpGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityLevelUpGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityLevelUpGetInfoRsp& from);
  void MergeFrom(const TOpenActivityLevelUpGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityLevelUpGetInfoRsp</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  inline int arrrewardinfo_size() const;
  inline void clear_arrrewardinfo();
  static const int kArrRewardInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityLevelUpGetInfoRsp</name>
  	<Function>
  		<name>arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrewardinfo_size</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrrewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrrewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrrewardinfo();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityLevelUpGetInfoRsp)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrrewardinfo_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityLevelUpGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityLevelUpGetRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityLevelUpGetRewardReq : public ::google::protobuf::Message {
 public:
  TOpenActivityLevelUpGetRewardReq();
  virtual ~TOpenActivityLevelUpGetRewardReq();

  TOpenActivityLevelUpGetRewardReq(const TOpenActivityLevelUpGetRewardReq& from);

  inline TOpenActivityLevelUpGetRewardReq& operator=(const TOpenActivityLevelUpGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityLevelUpGetRewardReq& default_instance();

  void Swap(TOpenActivityLevelUpGetRewardReq* other);

  // implements Message ----------------------------------------------

  TOpenActivityLevelUpGetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityLevelUpGetRewardReq& from);
  void MergeFrom(const TOpenActivityLevelUpGetRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityLevelUpGetRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityLevelUpGetRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityLevelUpGetRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityLevelUpGetRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityLevelUpGetRewardRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityLevelUpGetRewardRsp();
  virtual ~TOpenActivityLevelUpGetRewardRsp();

  TOpenActivityLevelUpGetRewardRsp(const TOpenActivityLevelUpGetRewardRsp& from);

  inline TOpenActivityLevelUpGetRewardRsp& operator=(const TOpenActivityLevelUpGetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityLevelUpGetRewardRsp& default_instance();

  void Swap(TOpenActivityLevelUpGetRewardRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityLevelUpGetRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityLevelUpGetRewardRsp& from);
  void MergeFrom(const TOpenActivityLevelUpGetRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityLevelUpGetRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityLevelUpGetRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityLevelUpGetRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityDiscountGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityDiscountGetInfoRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityDiscountGetInfoRsp();
  virtual ~TOpenActivityDiscountGetInfoRsp();

  TOpenActivityDiscountGetInfoRsp(const TOpenActivityDiscountGetInfoRsp& from);

  inline TOpenActivityDiscountGetInfoRsp& operator=(const TOpenActivityDiscountGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityDiscountGetInfoRsp& default_instance();

  void Swap(TOpenActivityDiscountGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityDiscountGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityDiscountGetInfoRsp& from);
  void MergeFrom(const TOpenActivityDiscountGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActivityBuyRecordInfo ArrBuyRecordInfo = 1;
  inline int arrbuyrecordinfo_size() const;
  inline void clear_arrbuyrecordinfo();
  static const int kArrBuyRecordInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityDiscountGetInfoRsp</name>
  	<Function>
  		<name>arrbuyrecordinfo</name>
  		<replaceName>ArrBuyRecordInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrbuyrecordinfo</name>
  		<replaceName>ArrBuyRecordInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrbuyrecordinfo</name>
  		<replaceName>ArrBuyRecordInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrbuyrecordinfo</name>
  		<replaceName>ArrBuyRecordInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrbuyrecordinfo_size</name>
  		<replaceName>ArrBuyRecordInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityBuyRecordInfo& arrbuyrecordinfo(int index) const;
  inline ::pb::TActivityBuyRecordInfo* mutable_arrbuyrecordinfo(int index);
  inline ::pb::TActivityBuyRecordInfo* add_arrbuyrecordinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityBuyRecordInfo >&
      arrbuyrecordinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityBuyRecordInfo >*
      mutable_arrbuyrecordinfo();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityDiscountGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityBuyRecordInfo > arrbuyrecordinfo_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityDiscountGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityDiscountBuyGoodReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityDiscountBuyGoodReq : public ::google::protobuf::Message {
 public:
  TOpenActivityDiscountBuyGoodReq();
  virtual ~TOpenActivityDiscountBuyGoodReq();

  TOpenActivityDiscountBuyGoodReq(const TOpenActivityDiscountBuyGoodReq& from);

  inline TOpenActivityDiscountBuyGoodReq& operator=(const TOpenActivityDiscountBuyGoodReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityDiscountBuyGoodReq& default_instance();

  void Swap(TOpenActivityDiscountBuyGoodReq* other);

  // implements Message ----------------------------------------------

  TOpenActivityDiscountBuyGoodReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityDiscountBuyGoodReq& from);
  void MergeFrom(const TOpenActivityDiscountBuyGoodReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityDiscountBuyGoodReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 GoodIndex = 2;
  inline bool has_goodindex() const;
  inline void clear_goodindex();
  static const int kGoodIndexFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityDiscountBuyGoodReq</name>
  	<Function>
  		<name>goodindex</name>
  		<replaceName>GoodIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_goodindex</name>
  		<replaceName>GoodIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodindex</name>
  		<replaceName>GoodIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 goodindex() const;
  inline void set_goodindex(::google::protobuf::uint32 value);

  // optional uint32 Num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityDiscountBuyGoodReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityDiscountBuyGoodReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_goodindex();
  inline void clear_has_goodindex();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 goodindex_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityDiscountBuyGoodReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityDiscountBuyGoodRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityDiscountBuyGoodRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityDiscountBuyGoodRsp();
  virtual ~TOpenActivityDiscountBuyGoodRsp();

  TOpenActivityDiscountBuyGoodRsp(const TOpenActivityDiscountBuyGoodRsp& from);

  inline TOpenActivityDiscountBuyGoodRsp& operator=(const TOpenActivityDiscountBuyGoodRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityDiscountBuyGoodRsp& default_instance();

  void Swap(TOpenActivityDiscountBuyGoodRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityDiscountBuyGoodRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityDiscountBuyGoodRsp& from);
  void MergeFrom(const TOpenActivityDiscountBuyGoodRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityDiscountBuyGoodRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityDiscountBuyGoodRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityDiscountBuyGoodRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityRecruitRetGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityRecruitRetGetInfoRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityRecruitRetGetInfoRsp();
  virtual ~TOpenActivityRecruitRetGetInfoRsp();

  TOpenActivityRecruitRetGetInfoRsp(const TOpenActivityRecruitRetGetInfoRsp& from);

  inline TOpenActivityRecruitRetGetInfoRsp& operator=(const TOpenActivityRecruitRetGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityRecruitRetGetInfoRsp& default_instance();

  void Swap(TOpenActivityRecruitRetGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityRecruitRetGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityRecruitRetGetInfoRsp& from);
  void MergeFrom(const TOpenActivityRecruitRetGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RecruitNum = 1;
  inline bool has_recruitnum() const;
  inline void clear_recruitnum();
  static const int kRecruitNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityRecruitRetGetInfoRsp</name>
  	<Function>
  		<name>recruitnum</name>
  		<replaceName>RecruitNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recruitnum</name>
  		<replaceName>RecruitNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recruitnum</name>
  		<replaceName>RecruitNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recruitnum() const;
  inline void set_recruitnum(::google::protobuf::uint32 value);

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  inline int arrrewardinfo_size() const;
  inline void clear_arrrewardinfo();
  static const int kArrRewardInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityRecruitRetGetInfoRsp</name>
  	<Function>
  		<name>arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrewardinfo_size</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrrewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrrewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrrewardinfo();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityRecruitRetGetInfoRsp)
 private:
  inline void set_has_recruitnum();
  inline void clear_has_recruitnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrrewardinfo_;
  ::google::protobuf::uint32 recruitnum_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityRecruitRetGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityRecruitRetGetRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityRecruitRetGetRewardReq : public ::google::protobuf::Message {
 public:
  TOpenActivityRecruitRetGetRewardReq();
  virtual ~TOpenActivityRecruitRetGetRewardReq();

  TOpenActivityRecruitRetGetRewardReq(const TOpenActivityRecruitRetGetRewardReq& from);

  inline TOpenActivityRecruitRetGetRewardReq& operator=(const TOpenActivityRecruitRetGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityRecruitRetGetRewardReq& default_instance();

  void Swap(TOpenActivityRecruitRetGetRewardReq* other);

  // implements Message ----------------------------------------------

  TOpenActivityRecruitRetGetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityRecruitRetGetRewardReq& from);
  void MergeFrom(const TOpenActivityRecruitRetGetRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityRecruitRetGetRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityRecruitRetGetRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityRecruitRetGetRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityRecruitRetGetRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityRecruitRetGetRewardRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityRecruitRetGetRewardRsp();
  virtual ~TOpenActivityRecruitRetGetRewardRsp();

  TOpenActivityRecruitRetGetRewardRsp(const TOpenActivityRecruitRetGetRewardRsp& from);

  inline TOpenActivityRecruitRetGetRewardRsp& operator=(const TOpenActivityRecruitRetGetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityRecruitRetGetRewardRsp& default_instance();

  void Swap(TOpenActivityRecruitRetGetRewardRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityRecruitRetGetRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityRecruitRetGetRewardRsp& from);
  void MergeFrom(const TOpenActivityRecruitRetGetRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityRecruitRetGetRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityRecruitRetGetRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityRecruitRetGetRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHeroStarInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHeroStarInfo : public ::google::protobuf::Message {
 public:
  TOpenActivityHeroStarInfo();
  virtual ~TOpenActivityHeroStarInfo();

  TOpenActivityHeroStarInfo(const TOpenActivityHeroStarInfo& from);

  inline TOpenActivityHeroStarInfo& operator=(const TOpenActivityHeroStarInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHeroStarInfo& default_instance();

  void Swap(TOpenActivityHeroStarInfo* other);

  // implements Message ----------------------------------------------

  TOpenActivityHeroStarInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHeroStarInfo& from);
  void MergeFrom(const TOpenActivityHeroStarInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Htid = 1;
  inline bool has_htid() const;
  inline void clear_htid();
  static const int kHtidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHeroStarInfo</name>
  	<Function>
  		<name>htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_htid</name>
  		<replaceName>Htid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 htid() const;
  inline void set_htid(::google::protobuf::uint32 value);

  // optional uint32 StarLv = 2;
  inline bool has_starlv() const;
  inline void clear_starlv();
  static const int kStarLvFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHeroStarInfo</name>
  	<Function>
  		<name>starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 starlv() const;
  inline void set_starlv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHeroStarInfo)
 private:
  inline void set_has_htid();
  inline void clear_has_htid();
  inline void set_has_starlv();
  inline void clear_has_starlv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 htid_;
  ::google::protobuf::uint32 starlv_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHeroStarInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHeroStarUpGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHeroStarUpGetInfoRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityHeroStarUpGetInfoRsp();
  virtual ~TOpenActivityHeroStarUpGetInfoRsp();

  TOpenActivityHeroStarUpGetInfoRsp(const TOpenActivityHeroStarUpGetInfoRsp& from);

  inline TOpenActivityHeroStarUpGetInfoRsp& operator=(const TOpenActivityHeroStarUpGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHeroStarUpGetInfoRsp& default_instance();

  void Swap(TOpenActivityHeroStarUpGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityHeroStarUpGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHeroStarUpGetInfoRsp& from);
  void MergeFrom(const TOpenActivityHeroStarUpGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TOpenActivityHeroStarInfo ArrHeroStar = 1;
  inline int arrherostar_size() const;
  inline void clear_arrherostar();
  static const int kArrHeroStarFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHeroStarUpGetInfoRsp</name>
  	<Function>
  		<name>arrherostar</name>
  		<replaceName>ArrHeroStar</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrherostar</name>
  		<replaceName>ArrHeroStar</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrherostar</name>
  		<replaceName>ArrHeroStar</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrherostar</name>
  		<replaceName>ArrHeroStar</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrherostar_size</name>
  		<replaceName>ArrHeroStar</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOpenActivityHeroStarInfo& arrherostar(int index) const;
  inline ::pb::TOpenActivityHeroStarInfo* mutable_arrherostar(int index);
  inline ::pb::TOpenActivityHeroStarInfo* add_arrherostar();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHeroStarInfo >&
      arrherostar() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHeroStarInfo >*
      mutable_arrherostar();

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  inline int arrrewardinfo_size() const;
  inline void clear_arrrewardinfo();
  static const int kArrRewardInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHeroStarUpGetInfoRsp</name>
  	<Function>
  		<name>arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrewardinfo_size</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrrewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrrewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrrewardinfo();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHeroStarUpGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHeroStarInfo > arrherostar_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrrewardinfo_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHeroStarUpGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHeroStarUpGetRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHeroStarUpGetRewardReq : public ::google::protobuf::Message {
 public:
  TOpenActivityHeroStarUpGetRewardReq();
  virtual ~TOpenActivityHeroStarUpGetRewardReq();

  TOpenActivityHeroStarUpGetRewardReq(const TOpenActivityHeroStarUpGetRewardReq& from);

  inline TOpenActivityHeroStarUpGetRewardReq& operator=(const TOpenActivityHeroStarUpGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHeroStarUpGetRewardReq& default_instance();

  void Swap(TOpenActivityHeroStarUpGetRewardReq* other);

  // implements Message ----------------------------------------------

  TOpenActivityHeroStarUpGetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHeroStarUpGetRewardReq& from);
  void MergeFrom(const TOpenActivityHeroStarUpGetRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHeroStarUpGetRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHeroStarUpGetRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHeroStarUpGetRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHeroStarUpGetRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHeroStarUpGetRewardRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityHeroStarUpGetRewardRsp();
  virtual ~TOpenActivityHeroStarUpGetRewardRsp();

  TOpenActivityHeroStarUpGetRewardRsp(const TOpenActivityHeroStarUpGetRewardRsp& from);

  inline TOpenActivityHeroStarUpGetRewardRsp& operator=(const TOpenActivityHeroStarUpGetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHeroStarUpGetRewardRsp& default_instance();

  void Swap(TOpenActivityHeroStarUpGetRewardRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityHeroStarUpGetRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHeroStarUpGetRewardRsp& from);
  void MergeFrom(const TOpenActivityHeroStarUpGetRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHeroStarUpGetRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHeroStarUpGetRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHeroStarUpGetRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHalfMonthBuyRecordInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHalfMonthBuyRecordInfo : public ::google::protobuf::Message {
 public:
  TOpenActivityHalfMonthBuyRecordInfo();
  virtual ~TOpenActivityHalfMonthBuyRecordInfo();

  TOpenActivityHalfMonthBuyRecordInfo(const TOpenActivityHalfMonthBuyRecordInfo& from);

  inline TOpenActivityHalfMonthBuyRecordInfo& operator=(const TOpenActivityHalfMonthBuyRecordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHalfMonthBuyRecordInfo& default_instance();

  void Swap(TOpenActivityHalfMonthBuyRecordInfo* other);

  // implements Message ----------------------------------------------

  TOpenActivityHalfMonthBuyRecordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHalfMonthBuyRecordInfo& from);
  void MergeFrom(const TOpenActivityHalfMonthBuyRecordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 GoodIndex = 1;
  inline bool has_goodindex() const;
  inline void clear_goodindex();
  static const int kGoodIndexFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthBuyRecordInfo</name>
  	<Function>
  		<name>goodindex</name>
  		<replaceName>GoodIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_goodindex</name>
  		<replaceName>GoodIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodindex</name>
  		<replaceName>GoodIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 goodindex() const;
  inline void set_goodindex(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthBuyRecordInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint64 BuyTime = 3;
  inline bool has_buytime() const;
  inline void clear_buytime();
  static const int kBuyTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthBuyRecordInfo</name>
  	<Function>
  		<name>buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 buytime() const;
  inline void set_buytime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHalfMonthBuyRecordInfo)
 private:
  inline void set_has_goodindex();
  inline void clear_has_goodindex();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_buytime();
  inline void clear_has_buytime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 goodindex_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint64 buytime_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHalfMonthBuyRecordInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHalfMonthSingleDayInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHalfMonthSingleDayInfo : public ::google::protobuf::Message {
 public:
  TOpenActivityHalfMonthSingleDayInfo();
  virtual ~TOpenActivityHalfMonthSingleDayInfo();

  TOpenActivityHalfMonthSingleDayInfo(const TOpenActivityHalfMonthSingleDayInfo& from);

  inline TOpenActivityHalfMonthSingleDayInfo& operator=(const TOpenActivityHalfMonthSingleDayInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHalfMonthSingleDayInfo& default_instance();

  void Swap(TOpenActivityHalfMonthSingleDayInfo* other);

  // implements Message ----------------------------------------------

  TOpenActivityHalfMonthSingleDayInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHalfMonthSingleDayInfo& from);
  void MergeFrom(const TOpenActivityHalfMonthSingleDayInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 DayId = 1;
  inline bool has_dayid() const;
  inline void clear_dayid();
  static const int kDayIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthSingleDayInfo</name>
  	<Function>
  		<name>dayid</name>
  		<replaceName>DayId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_dayid</name>
  		<replaceName>DayId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_dayid</name>
  		<replaceName>DayId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 dayid() const;
  inline void set_dayid(::google::protobuf::uint32 value);

  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 2;
  inline int arrtaskrewardinfo_size() const;
  inline void clear_arrtaskrewardinfo();
  static const int kArrTaskRewardInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthSingleDayInfo</name>
  	<Function>
  		<name>arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrtaskrewardinfo_size</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrtaskrewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrtaskrewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrtaskrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrtaskrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrtaskrewardinfo();

  // repeated .pb.TOpenActivityHalfMonthBuyRecordInfo ArrBuyRecordInfo = 3;
  inline int arrbuyrecordinfo_size() const;
  inline void clear_arrbuyrecordinfo();
  static const int kArrBuyRecordInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthSingleDayInfo</name>
  	<Function>
  		<name>arrbuyrecordinfo</name>
  		<replaceName>ArrBuyRecordInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrbuyrecordinfo</name>
  		<replaceName>ArrBuyRecordInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrbuyrecordinfo</name>
  		<replaceName>ArrBuyRecordInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrbuyrecordinfo</name>
  		<replaceName>ArrBuyRecordInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrbuyrecordinfo_size</name>
  		<replaceName>ArrBuyRecordInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOpenActivityHalfMonthBuyRecordInfo& arrbuyrecordinfo(int index) const;
  inline ::pb::TOpenActivityHalfMonthBuyRecordInfo* mutable_arrbuyrecordinfo(int index);
  inline ::pb::TOpenActivityHalfMonthBuyRecordInfo* add_arrbuyrecordinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHalfMonthBuyRecordInfo >&
      arrbuyrecordinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHalfMonthBuyRecordInfo >*
      mutable_arrbuyrecordinfo();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHalfMonthSingleDayInfo)
 private:
  inline void set_has_dayid();
  inline void clear_has_dayid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrtaskrewardinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHalfMonthBuyRecordInfo > arrbuyrecordinfo_;
  ::google::protobuf::uint32 dayid_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHalfMonthSingleDayInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHalfMonthGetInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHalfMonthGetInfoReq : public ::google::protobuf::Message {
 public:
  TOpenActivityHalfMonthGetInfoReq();
  virtual ~TOpenActivityHalfMonthGetInfoReq();

  TOpenActivityHalfMonthGetInfoReq(const TOpenActivityHalfMonthGetInfoReq& from);

  inline TOpenActivityHalfMonthGetInfoReq& operator=(const TOpenActivityHalfMonthGetInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHalfMonthGetInfoReq& default_instance();

  void Swap(TOpenActivityHalfMonthGetInfoReq* other);

  // implements Message ----------------------------------------------

  TOpenActivityHalfMonthGetInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHalfMonthGetInfoReq& from);
  void MergeFrom(const TOpenActivityHalfMonthGetInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ConfId = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthGetInfoReq</name>
  	<Function>
  		<name>confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 confid() const;
  inline void set_confid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHalfMonthGetInfoReq)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 confid_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHalfMonthGetInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHalfMonthGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHalfMonthGetInfoRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityHalfMonthGetInfoRsp();
  virtual ~TOpenActivityHalfMonthGetInfoRsp();

  TOpenActivityHalfMonthGetInfoRsp(const TOpenActivityHalfMonthGetInfoRsp& from);

  inline TOpenActivityHalfMonthGetInfoRsp& operator=(const TOpenActivityHalfMonthGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHalfMonthGetInfoRsp& default_instance();

  void Swap(TOpenActivityHalfMonthGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityHalfMonthGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHalfMonthGetInfoRsp& from);
  void MergeFrom(const TOpenActivityHalfMonthGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TOpenActivityHalfMonthSingleDayInfo ArrDayInfo = 1;
  inline int arrdayinfo_size() const;
  inline void clear_arrdayinfo();
  static const int kArrDayInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthGetInfoRsp</name>
  	<Function>
  		<name>arrdayinfo</name>
  		<replaceName>ArrDayInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrdayinfo</name>
  		<replaceName>ArrDayInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrdayinfo</name>
  		<replaceName>ArrDayInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrdayinfo</name>
  		<replaceName>ArrDayInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrdayinfo_size</name>
  		<replaceName>ArrDayInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TOpenActivityHalfMonthSingleDayInfo& arrdayinfo(int index) const;
  inline ::pb::TOpenActivityHalfMonthSingleDayInfo* mutable_arrdayinfo(int index);
  inline ::pb::TOpenActivityHalfMonthSingleDayInfo* add_arrdayinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHalfMonthSingleDayInfo >&
      arrdayinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHalfMonthSingleDayInfo >*
      mutable_arrdayinfo();

  // repeated .pb.TActivityRewardInfo ArrIntegralRewardInfo = 2;
  inline int arrintegralrewardinfo_size() const;
  inline void clear_arrintegralrewardinfo();
  static const int kArrIntegralRewardInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthGetInfoRsp</name>
  	<Function>
  		<name>arrintegralrewardinfo</name>
  		<replaceName>ArrIntegralRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrintegralrewardinfo</name>
  		<replaceName>ArrIntegralRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrintegralrewardinfo</name>
  		<replaceName>ArrIntegralRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrintegralrewardinfo</name>
  		<replaceName>ArrIntegralRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrintegralrewardinfo_size</name>
  		<replaceName>ArrIntegralRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrintegralrewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrintegralrewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrintegralrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrintegralrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrintegralrewardinfo();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHalfMonthGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHalfMonthSingleDayInfo > arrdayinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrintegralrewardinfo_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHalfMonthGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHalfMonthGetTaskRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHalfMonthGetTaskRewardReq : public ::google::protobuf::Message {
 public:
  TOpenActivityHalfMonthGetTaskRewardReq();
  virtual ~TOpenActivityHalfMonthGetTaskRewardReq();

  TOpenActivityHalfMonthGetTaskRewardReq(const TOpenActivityHalfMonthGetTaskRewardReq& from);

  inline TOpenActivityHalfMonthGetTaskRewardReq& operator=(const TOpenActivityHalfMonthGetTaskRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHalfMonthGetTaskRewardReq& default_instance();

  void Swap(TOpenActivityHalfMonthGetTaskRewardReq* other);

  // implements Message ----------------------------------------------

  TOpenActivityHalfMonthGetTaskRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHalfMonthGetTaskRewardReq& from);
  void MergeFrom(const TOpenActivityHalfMonthGetTaskRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ConfId = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthGetTaskRewardReq</name>
  	<Function>
  		<name>confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 confid() const;
  inline void set_confid(::google::protobuf::uint32 value);

  // optional uint32 DayId = 2;
  inline bool has_dayid() const;
  inline void clear_dayid();
  static const int kDayIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthGetTaskRewardReq</name>
  	<Function>
  		<name>dayid</name>
  		<replaceName>DayId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_dayid</name>
  		<replaceName>DayId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_dayid</name>
  		<replaceName>DayId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 dayid() const;
  inline void set_dayid(::google::protobuf::uint32 value);

  // optional uint32 ContentId = 3;
  inline bool has_contentid() const;
  inline void clear_contentid();
  static const int kContentIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthGetTaskRewardReq</name>
  	<Function>
  		<name>contentid</name>
  		<replaceName>ContentId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_contentid</name>
  		<replaceName>ContentId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_contentid</name>
  		<replaceName>ContentId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 contentid() const;
  inline void set_contentid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHalfMonthGetTaskRewardReq)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_dayid();
  inline void clear_has_dayid();
  inline void set_has_contentid();
  inline void clear_has_contentid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 confid_;
  ::google::protobuf::uint32 dayid_;
  ::google::protobuf::uint32 contentid_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHalfMonthGetTaskRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHalfMonthGetTaskRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHalfMonthGetTaskRewardRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityHalfMonthGetTaskRewardRsp();
  virtual ~TOpenActivityHalfMonthGetTaskRewardRsp();

  TOpenActivityHalfMonthGetTaskRewardRsp(const TOpenActivityHalfMonthGetTaskRewardRsp& from);

  inline TOpenActivityHalfMonthGetTaskRewardRsp& operator=(const TOpenActivityHalfMonthGetTaskRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHalfMonthGetTaskRewardRsp& default_instance();

  void Swap(TOpenActivityHalfMonthGetTaskRewardRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityHalfMonthGetTaskRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHalfMonthGetTaskRewardRsp& from);
  void MergeFrom(const TOpenActivityHalfMonthGetTaskRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthGetTaskRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHalfMonthGetTaskRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHalfMonthGetTaskRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHalfMonthBuyGoodsReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHalfMonthBuyGoodsReq : public ::google::protobuf::Message {
 public:
  TOpenActivityHalfMonthBuyGoodsReq();
  virtual ~TOpenActivityHalfMonthBuyGoodsReq();

  TOpenActivityHalfMonthBuyGoodsReq(const TOpenActivityHalfMonthBuyGoodsReq& from);

  inline TOpenActivityHalfMonthBuyGoodsReq& operator=(const TOpenActivityHalfMonthBuyGoodsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHalfMonthBuyGoodsReq& default_instance();

  void Swap(TOpenActivityHalfMonthBuyGoodsReq* other);

  // implements Message ----------------------------------------------

  TOpenActivityHalfMonthBuyGoodsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHalfMonthBuyGoodsReq& from);
  void MergeFrom(const TOpenActivityHalfMonthBuyGoodsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ConfId = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthBuyGoodsReq</name>
  	<Function>
  		<name>confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 confid() const;
  inline void set_confid(::google::protobuf::uint32 value);

  // optional uint32 Id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthBuyGoodsReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 GoodIndex = 3;
  inline bool has_goodindex() const;
  inline void clear_goodindex();
  static const int kGoodIndexFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthBuyGoodsReq</name>
  	<Function>
  		<name>goodindex</name>
  		<replaceName>GoodIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_goodindex</name>
  		<replaceName>GoodIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_goodindex</name>
  		<replaceName>GoodIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 goodindex() const;
  inline void set_goodindex(::google::protobuf::uint32 value);

  // optional uint32 Num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthBuyGoodsReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHalfMonthBuyGoodsReq)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_goodindex();
  inline void clear_has_goodindex();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 confid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 goodindex_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHalfMonthBuyGoodsReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHalfMonthBuyGoodsRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHalfMonthBuyGoodsRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityHalfMonthBuyGoodsRsp();
  virtual ~TOpenActivityHalfMonthBuyGoodsRsp();

  TOpenActivityHalfMonthBuyGoodsRsp(const TOpenActivityHalfMonthBuyGoodsRsp& from);

  inline TOpenActivityHalfMonthBuyGoodsRsp& operator=(const TOpenActivityHalfMonthBuyGoodsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHalfMonthBuyGoodsRsp& default_instance();

  void Swap(TOpenActivityHalfMonthBuyGoodsRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityHalfMonthBuyGoodsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHalfMonthBuyGoodsRsp& from);
  void MergeFrom(const TOpenActivityHalfMonthBuyGoodsRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthBuyGoodsRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHalfMonthBuyGoodsRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHalfMonthBuyGoodsRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHalfMonthGetIntegralRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHalfMonthGetIntegralRewardReq : public ::google::protobuf::Message {
 public:
  TOpenActivityHalfMonthGetIntegralRewardReq();
  virtual ~TOpenActivityHalfMonthGetIntegralRewardReq();

  TOpenActivityHalfMonthGetIntegralRewardReq(const TOpenActivityHalfMonthGetIntegralRewardReq& from);

  inline TOpenActivityHalfMonthGetIntegralRewardReq& operator=(const TOpenActivityHalfMonthGetIntegralRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHalfMonthGetIntegralRewardReq& default_instance();

  void Swap(TOpenActivityHalfMonthGetIntegralRewardReq* other);

  // implements Message ----------------------------------------------

  TOpenActivityHalfMonthGetIntegralRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHalfMonthGetIntegralRewardReq& from);
  void MergeFrom(const TOpenActivityHalfMonthGetIntegralRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ConfId = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthGetIntegralRewardReq</name>
  	<Function>
  		<name>confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 confid() const;
  inline void set_confid(::google::protobuf::uint32 value);

  // optional uint32 Id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthGetIntegralRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHalfMonthGetIntegralRewardReq)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 confid_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHalfMonthGetIntegralRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityHalfMonthGetIntegralRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityHalfMonthGetIntegralRewardRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityHalfMonthGetIntegralRewardRsp();
  virtual ~TOpenActivityHalfMonthGetIntegralRewardRsp();

  TOpenActivityHalfMonthGetIntegralRewardRsp(const TOpenActivityHalfMonthGetIntegralRewardRsp& from);

  inline TOpenActivityHalfMonthGetIntegralRewardRsp& operator=(const TOpenActivityHalfMonthGetIntegralRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityHalfMonthGetIntegralRewardRsp& default_instance();

  void Swap(TOpenActivityHalfMonthGetIntegralRewardRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityHalfMonthGetIntegralRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityHalfMonthGetIntegralRewardRsp& from);
  void MergeFrom(const TOpenActivityHalfMonthGetIntegralRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityHalfMonthGetIntegralRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityHalfMonthGetIntegralRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityHalfMonthGetIntegralRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOActSevenActivityGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOActSevenActivityGetInfoRsp : public ::google::protobuf::Message {
 public:
  TOActSevenActivityGetInfoRsp();
  virtual ~TOActSevenActivityGetInfoRsp();

  TOActSevenActivityGetInfoRsp(const TOActSevenActivityGetInfoRsp& from);

  inline TOActSevenActivityGetInfoRsp& operator=(const TOActSevenActivityGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOActSevenActivityGetInfoRsp& default_instance();

  void Swap(TOActSevenActivityGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TOActSevenActivityGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOActSevenActivityGetInfoRsp& from);
  void MergeFrom(const TOActSevenActivityGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 TaskArr = 1;
  inline int taskarr_size() const;
  inline void clear_taskarr();
  static const int kTaskArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOActSevenActivityGetInfoRsp</name>
  	<Function>
  		<name>taskarr</name>
  		<replaceName>TaskArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_taskarr</name>
  		<replaceName>TaskArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_taskarr</name>
  		<replaceName>TaskArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_taskarr</name>
  		<replaceName>TaskArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>taskarr_size</name>
  		<replaceName>TaskArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 taskarr(int index) const;
  inline void set_taskarr(int index, ::google::protobuf::uint32 value);
  inline void add_taskarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      taskarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_taskarr();

  // repeated uint32 SignRewardArr = 2;
  inline int signrewardarr_size() const;
  inline void clear_signrewardarr();
  static const int kSignRewardArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOActSevenActivityGetInfoRsp</name>
  	<Function>
  		<name>signrewardarr</name>
  		<replaceName>SignRewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_signrewardarr</name>
  		<replaceName>SignRewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_signrewardarr</name>
  		<replaceName>SignRewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_signrewardarr</name>
  		<replaceName>SignRewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>signrewardarr_size</name>
  		<replaceName>SignRewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 signrewardarr(int index) const;
  inline void set_signrewardarr(int index, ::google::protobuf::uint32 value);
  inline void add_signrewardarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      signrewardarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_signrewardarr();

  // repeated uint32 SellDiscountArr = 3;
  inline int selldiscountarr_size() const;
  inline void clear_selldiscountarr();
  static const int kSellDiscountArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TOActSevenActivityGetInfoRsp</name>
  	<Function>
  		<name>selldiscountarr</name>
  		<replaceName>SellDiscountArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_selldiscountarr</name>
  		<replaceName>SellDiscountArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_selldiscountarr</name>
  		<replaceName>SellDiscountArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_selldiscountarr</name>
  		<replaceName>SellDiscountArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>selldiscountarr_size</name>
  		<replaceName>SellDiscountArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 selldiscountarr(int index) const;
  inline void set_selldiscountarr(int index, ::google::protobuf::uint32 value);
  inline void add_selldiscountarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      selldiscountarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_selldiscountarr();

  // @@protoc_insertion_point(class_scope:pb.TOActSevenActivityGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > taskarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > signrewardarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > selldiscountarr_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOActSevenActivityGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOActSevenActivityReceiveTaskActivityAwardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOActSevenActivityReceiveTaskActivityAwardReq : public ::google::protobuf::Message {
 public:
  TOActSevenActivityReceiveTaskActivityAwardReq();
  virtual ~TOActSevenActivityReceiveTaskActivityAwardReq();

  TOActSevenActivityReceiveTaskActivityAwardReq(const TOActSevenActivityReceiveTaskActivityAwardReq& from);

  inline TOActSevenActivityReceiveTaskActivityAwardReq& operator=(const TOActSevenActivityReceiveTaskActivityAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOActSevenActivityReceiveTaskActivityAwardReq& default_instance();

  void Swap(TOActSevenActivityReceiveTaskActivityAwardReq* other);

  // implements Message ----------------------------------------------

  TOActSevenActivityReceiveTaskActivityAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOActSevenActivityReceiveTaskActivityAwardReq& from);
  void MergeFrom(const TOActSevenActivityReceiveTaskActivityAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ContentId = 1;
  inline bool has_contentid() const;
  inline void clear_contentid();
  static const int kContentIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOActSevenActivityReceiveTaskActivityAwardReq</name>
  	<Function>
  		<name>contentid</name>
  		<replaceName>ContentId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_contentid</name>
  		<replaceName>ContentId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_contentid</name>
  		<replaceName>ContentId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 contentid() const;
  inline void set_contentid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOActSevenActivityReceiveTaskActivityAwardReq)
 private:
  inline void set_has_contentid();
  inline void clear_has_contentid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 contentid_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOActSevenActivityReceiveTaskActivityAwardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOActSevenActivityReceiveSignAwardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOActSevenActivityReceiveSignAwardReq : public ::google::protobuf::Message {
 public:
  TOActSevenActivityReceiveSignAwardReq();
  virtual ~TOActSevenActivityReceiveSignAwardReq();

  TOActSevenActivityReceiveSignAwardReq(const TOActSevenActivityReceiveSignAwardReq& from);

  inline TOActSevenActivityReceiveSignAwardReq& operator=(const TOActSevenActivityReceiveSignAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOActSevenActivityReceiveSignAwardReq& default_instance();

  void Swap(TOActSevenActivityReceiveSignAwardReq* other);

  // implements Message ----------------------------------------------

  TOActSevenActivityReceiveSignAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOActSevenActivityReceiveSignAwardReq& from);
  void MergeFrom(const TOActSevenActivityReceiveSignAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOActSevenActivityReceiveSignAwardReq</name>
  	<Function>
  		<name>day</name>
  		<replaceName>Day</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_day</name>
  		<replaceName>Day</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_day</name>
  		<replaceName>Day</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOActSevenActivityReceiveSignAwardReq)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 day_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOActSevenActivityReceiveSignAwardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOActSevenActivityBuySellDiscountItemReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOActSevenActivityBuySellDiscountItemReq : public ::google::protobuf::Message {
 public:
  TOActSevenActivityBuySellDiscountItemReq();
  virtual ~TOActSevenActivityBuySellDiscountItemReq();

  TOActSevenActivityBuySellDiscountItemReq(const TOActSevenActivityBuySellDiscountItemReq& from);

  inline TOActSevenActivityBuySellDiscountItemReq& operator=(const TOActSevenActivityBuySellDiscountItemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOActSevenActivityBuySellDiscountItemReq& default_instance();

  void Swap(TOActSevenActivityBuySellDiscountItemReq* other);

  // implements Message ----------------------------------------------

  TOActSevenActivityBuySellDiscountItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOActSevenActivityBuySellDiscountItemReq& from);
  void MergeFrom(const TOActSevenActivityBuySellDiscountItemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOActSevenActivityBuySellDiscountItemReq</name>
  	<Function>
  		<name>day</name>
  		<replaceName>Day</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_day</name>
  		<replaceName>Day</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_day</name>
  		<replaceName>Day</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOActSevenActivityBuySellDiscountItemReq)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 day_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOActSevenActivityBuySellDiscountItemReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOActStarBlessingBagGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOActStarBlessingBagGetInfoRsp : public ::google::protobuf::Message {
 public:
  TOActStarBlessingBagGetInfoRsp();
  virtual ~TOActStarBlessingBagGetInfoRsp();

  TOActStarBlessingBagGetInfoRsp(const TOActStarBlessingBagGetInfoRsp& from);

  inline TOActStarBlessingBagGetInfoRsp& operator=(const TOActStarBlessingBagGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOActStarBlessingBagGetInfoRsp& default_instance();

  void Swap(TOActStarBlessingBagGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TOActStarBlessingBagGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOActStarBlessingBagGetInfoRsp& from);
  void MergeFrom(const TOActStarBlessingBagGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrRewardInfo = 1;
  inline int arrrewardinfo_size() const;
  inline void clear_arrrewardinfo();
  static const int kArrRewardInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOActStarBlessingBagGetInfoRsp</name>
  	<Function>
  		<name>arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrewardinfo_size</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrrewardinfo(int index) const;
  inline ::pb::TCommonReward* mutable_arrrewardinfo(int index);
  inline ::pb::TCommonReward* add_arrrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrrewardinfo();

  // @@protoc_insertion_point(class_scope:pb.TOActStarBlessingBagGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrrewardinfo_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOActStarBlessingBagGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOActStarBlessingBagGetRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOActStarBlessingBagGetRewardRsp : public ::google::protobuf::Message {
 public:
  TOActStarBlessingBagGetRewardRsp();
  virtual ~TOActStarBlessingBagGetRewardRsp();

  TOActStarBlessingBagGetRewardRsp(const TOActStarBlessingBagGetRewardRsp& from);

  inline TOActStarBlessingBagGetRewardRsp& operator=(const TOActStarBlessingBagGetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOActStarBlessingBagGetRewardRsp& default_instance();

  void Swap(TOActStarBlessingBagGetRewardRsp* other);

  // implements Message ----------------------------------------------

  TOActStarBlessingBagGetRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOActStarBlessingBagGetRewardRsp& from);
  void MergeFrom(const TOActStarBlessingBagGetRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TCommonReward RewardInfo = 1;
  inline bool has_rewardinfo() const;
  inline void clear_rewardinfo();
  static const int kRewardInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOActStarBlessingBagGetRewardRsp</name>
  	<Function>
  		<name>rewardinfo</name>
  		<replaceName>RewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rewardinfo</name>
  		<replaceName>RewardInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_rewardinfo</name>
  		<replaceName>RewardInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardinfo</name>
  		<replaceName>RewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardinfo() const;
  inline ::pb::TCommonReward* mutable_rewardinfo();
  inline ::pb::TCommonReward* release_rewardinfo();
  inline void set_allocated_rewardinfo(::pb::TCommonReward* rewardinfo);

  // @@protoc_insertion_point(class_scope:pb.TOActStarBlessingBagGetRewardRsp)
 private:
  inline void set_has_rewardinfo();
  inline void clear_has_rewardinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TCommonReward* rewardinfo_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOActStarBlessingBagGetRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityLotsOfGoldGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityLotsOfGoldGetInfoRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityLotsOfGoldGetInfoRsp();
  virtual ~TOpenActivityLotsOfGoldGetInfoRsp();

  TOpenActivityLotsOfGoldGetInfoRsp(const TOpenActivityLotsOfGoldGetInfoRsp& from);

  inline TOpenActivityLotsOfGoldGetInfoRsp& operator=(const TOpenActivityLotsOfGoldGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityLotsOfGoldGetInfoRsp& default_instance();

  void Swap(TOpenActivityLotsOfGoldGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityLotsOfGoldGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityLotsOfGoldGetInfoRsp& from);
  void MergeFrom(const TOpenActivityLotsOfGoldGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 1;
  inline int arrtaskrewardinfo_size() const;
  inline void clear_arrtaskrewardinfo();
  static const int kArrTaskRewardInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityLotsOfGoldGetInfoRsp</name>
  	<Function>
  		<name>arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrtaskrewardinfo</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrtaskrewardinfo_size</name>
  		<replaceName>ArrTaskRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrtaskrewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrtaskrewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrtaskrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrtaskrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrtaskrewardinfo();

  // repeated .pb.TActivityRewardInfo ArrIntegralRewardInfo = 2;
  inline int arrintegralrewardinfo_size() const;
  inline void clear_arrintegralrewardinfo();
  static const int kArrIntegralRewardInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityLotsOfGoldGetInfoRsp</name>
  	<Function>
  		<name>arrintegralrewardinfo</name>
  		<replaceName>ArrIntegralRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrintegralrewardinfo</name>
  		<replaceName>ArrIntegralRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrintegralrewardinfo</name>
  		<replaceName>ArrIntegralRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrintegralrewardinfo</name>
  		<replaceName>ArrIntegralRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrintegralrewardinfo_size</name>
  		<replaceName>ArrIntegralRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrintegralrewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrintegralrewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrintegralrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrintegralrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrintegralrewardinfo();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityLotsOfGoldGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrtaskrewardinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrintegralrewardinfo_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityLotsOfGoldGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityLotsOfGoldGetTaskRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityLotsOfGoldGetTaskRewardReq : public ::google::protobuf::Message {
 public:
  TOpenActivityLotsOfGoldGetTaskRewardReq();
  virtual ~TOpenActivityLotsOfGoldGetTaskRewardReq();

  TOpenActivityLotsOfGoldGetTaskRewardReq(const TOpenActivityLotsOfGoldGetTaskRewardReq& from);

  inline TOpenActivityLotsOfGoldGetTaskRewardReq& operator=(const TOpenActivityLotsOfGoldGetTaskRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityLotsOfGoldGetTaskRewardReq& default_instance();

  void Swap(TOpenActivityLotsOfGoldGetTaskRewardReq* other);

  // implements Message ----------------------------------------------

  TOpenActivityLotsOfGoldGetTaskRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityLotsOfGoldGetTaskRewardReq& from);
  void MergeFrom(const TOpenActivityLotsOfGoldGetTaskRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ContentId = 1;
  inline bool has_contentid() const;
  inline void clear_contentid();
  static const int kContentIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityLotsOfGoldGetTaskRewardReq</name>
  	<Function>
  		<name>contentid</name>
  		<replaceName>ContentId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_contentid</name>
  		<replaceName>ContentId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_contentid</name>
  		<replaceName>ContentId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 contentid() const;
  inline void set_contentid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityLotsOfGoldGetTaskRewardReq)
 private:
  inline void set_has_contentid();
  inline void clear_has_contentid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 contentid_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityLotsOfGoldGetTaskRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityLotsOfGoldGetTaskRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityLotsOfGoldGetTaskRewardRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityLotsOfGoldGetTaskRewardRsp();
  virtual ~TOpenActivityLotsOfGoldGetTaskRewardRsp();

  TOpenActivityLotsOfGoldGetTaskRewardRsp(const TOpenActivityLotsOfGoldGetTaskRewardRsp& from);

  inline TOpenActivityLotsOfGoldGetTaskRewardRsp& operator=(const TOpenActivityLotsOfGoldGetTaskRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityLotsOfGoldGetTaskRewardRsp& default_instance();

  void Swap(TOpenActivityLotsOfGoldGetTaskRewardRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityLotsOfGoldGetTaskRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityLotsOfGoldGetTaskRewardRsp& from);
  void MergeFrom(const TOpenActivityLotsOfGoldGetTaskRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityLotsOfGoldGetTaskRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityLotsOfGoldGetTaskRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityLotsOfGoldGetIntegralRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityLotsOfGoldGetIntegralRewardReq : public ::google::protobuf::Message {
 public:
  TOpenActivityLotsOfGoldGetIntegralRewardReq();
  virtual ~TOpenActivityLotsOfGoldGetIntegralRewardReq();

  TOpenActivityLotsOfGoldGetIntegralRewardReq(const TOpenActivityLotsOfGoldGetIntegralRewardReq& from);

  inline TOpenActivityLotsOfGoldGetIntegralRewardReq& operator=(const TOpenActivityLotsOfGoldGetIntegralRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityLotsOfGoldGetIntegralRewardReq& default_instance();

  void Swap(TOpenActivityLotsOfGoldGetIntegralRewardReq* other);

  // implements Message ----------------------------------------------

  TOpenActivityLotsOfGoldGetIntegralRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityLotsOfGoldGetIntegralRewardReq& from);
  void MergeFrom(const TOpenActivityLotsOfGoldGetIntegralRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 IntegralId = 1;
  inline bool has_integralid() const;
  inline void clear_integralid();
  static const int kIntegralIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityLotsOfGoldGetIntegralRewardReq</name>
  	<Function>
  		<name>integralid</name>
  		<replaceName>IntegralId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_integralid</name>
  		<replaceName>IntegralId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_integralid</name>
  		<replaceName>IntegralId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 integralid() const;
  inline void set_integralid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityLotsOfGoldGetIntegralRewardReq)
 private:
  inline void set_has_integralid();
  inline void clear_has_integralid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 integralid_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityLotsOfGoldGetIntegralRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityLotsOfGoldGetIntegralRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityLotsOfGoldGetIntegralRewardRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityLotsOfGoldGetIntegralRewardRsp();
  virtual ~TOpenActivityLotsOfGoldGetIntegralRewardRsp();

  TOpenActivityLotsOfGoldGetIntegralRewardRsp(const TOpenActivityLotsOfGoldGetIntegralRewardRsp& from);

  inline TOpenActivityLotsOfGoldGetIntegralRewardRsp& operator=(const TOpenActivityLotsOfGoldGetIntegralRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityLotsOfGoldGetIntegralRewardRsp& default_instance();

  void Swap(TOpenActivityLotsOfGoldGetIntegralRewardRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityLotsOfGoldGetIntegralRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityLotsOfGoldGetIntegralRewardRsp& from);
  void MergeFrom(const TOpenActivityLotsOfGoldGetIntegralRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityLotsOfGoldGetIntegralRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityLotsOfGoldGetIntegralRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityAllPlayerGoldHeroGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityAllPlayerGoldHeroGetInfoRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityAllPlayerGoldHeroGetInfoRsp();
  virtual ~TOpenActivityAllPlayerGoldHeroGetInfoRsp();

  TOpenActivityAllPlayerGoldHeroGetInfoRsp(const TOpenActivityAllPlayerGoldHeroGetInfoRsp& from);

  inline TOpenActivityAllPlayerGoldHeroGetInfoRsp& operator=(const TOpenActivityAllPlayerGoldHeroGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityAllPlayerGoldHeroGetInfoRsp& default_instance();

  void Swap(TOpenActivityAllPlayerGoldHeroGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityAllPlayerGoldHeroGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityAllPlayerGoldHeroGetInfoRsp& from);
  void MergeFrom(const TOpenActivityAllPlayerGoldHeroGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TotalWaveNum = 1;
  inline bool has_totalwavenum() const;
  inline void clear_totalwavenum();
  static const int kTotalWaveNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityAllPlayerGoldHeroGetInfoRsp</name>
  	<Function>
  		<name>totalwavenum</name>
  		<replaceName>TotalWaveNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totalwavenum</name>
  		<replaceName>TotalWaveNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totalwavenum</name>
  		<replaceName>TotalWaveNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 totalwavenum() const;
  inline void set_totalwavenum(::google::protobuf::uint32 value);

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  inline int arrrewardinfo_size() const;
  inline void clear_arrrewardinfo();
  static const int kArrRewardInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityAllPlayerGoldHeroGetInfoRsp</name>
  	<Function>
  		<name>arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrewardinfo_size</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrrewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrrewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrrewardinfo();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp)
 private:
  inline void set_has_totalwavenum();
  inline void clear_has_totalwavenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrrewardinfo_;
  ::google::protobuf::uint32 totalwavenum_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityAllPlayerGoldHeroGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityAllPlayerGoldHeroGetRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityAllPlayerGoldHeroGetRewardReq : public ::google::protobuf::Message {
 public:
  TOpenActivityAllPlayerGoldHeroGetRewardReq();
  virtual ~TOpenActivityAllPlayerGoldHeroGetRewardReq();

  TOpenActivityAllPlayerGoldHeroGetRewardReq(const TOpenActivityAllPlayerGoldHeroGetRewardReq& from);

  inline TOpenActivityAllPlayerGoldHeroGetRewardReq& operator=(const TOpenActivityAllPlayerGoldHeroGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityAllPlayerGoldHeroGetRewardReq& default_instance();

  void Swap(TOpenActivityAllPlayerGoldHeroGetRewardReq* other);

  // implements Message ----------------------------------------------

  TOpenActivityAllPlayerGoldHeroGetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityAllPlayerGoldHeroGetRewardReq& from);
  void MergeFrom(const TOpenActivityAllPlayerGoldHeroGetRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityAllPlayerGoldHeroGetRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityAllPlayerGoldHeroGetRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityAllPlayerGoldHeroGetRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityAllPlayerGoldHeroGetRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityAllPlayerGoldHeroGetRewardRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityAllPlayerGoldHeroGetRewardRsp();
  virtual ~TOpenActivityAllPlayerGoldHeroGetRewardRsp();

  TOpenActivityAllPlayerGoldHeroGetRewardRsp(const TOpenActivityAllPlayerGoldHeroGetRewardRsp& from);

  inline TOpenActivityAllPlayerGoldHeroGetRewardRsp& operator=(const TOpenActivityAllPlayerGoldHeroGetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityAllPlayerGoldHeroGetRewardRsp& default_instance();

  void Swap(TOpenActivityAllPlayerGoldHeroGetRewardRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityAllPlayerGoldHeroGetRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityAllPlayerGoldHeroGetRewardRsp& from);
  void MergeFrom(const TOpenActivityAllPlayerGoldHeroGetRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityAllPlayerGoldHeroGetRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityAllPlayerGoldHeroGetRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityTowerPassLayerGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityTowerPassLayerGetInfoRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityTowerPassLayerGetInfoRsp();
  virtual ~TOpenActivityTowerPassLayerGetInfoRsp();

  TOpenActivityTowerPassLayerGetInfoRsp(const TOpenActivityTowerPassLayerGetInfoRsp& from);

  inline TOpenActivityTowerPassLayerGetInfoRsp& operator=(const TOpenActivityTowerPassLayerGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityTowerPassLayerGetInfoRsp& default_instance();

  void Swap(TOpenActivityTowerPassLayerGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityTowerPassLayerGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityTowerPassLayerGetInfoRsp& from);
  void MergeFrom(const TOpenActivityTowerPassLayerGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 PassLayer = 1;
  inline bool has_passlayer() const;
  inline void clear_passlayer();
  static const int kPassLayerFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityTowerPassLayerGetInfoRsp</name>
  	<Function>
  		<name>passlayer</name>
  		<replaceName>PassLayer</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_passlayer</name>
  		<replaceName>PassLayer</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_passlayer</name>
  		<replaceName>PassLayer</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 passlayer() const;
  inline void set_passlayer(::google::protobuf::uint32 value);

  // repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
  inline int arrrewardinfo_size() const;
  inline void clear_arrrewardinfo();
  static const int kArrRewardInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityTowerPassLayerGetInfoRsp</name>
  	<Function>
  		<name>arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrewardinfo</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrewardinfo_size</name>
  		<replaceName>ArrRewardInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActivityRewardInfo& arrrewardinfo(int index) const;
  inline ::pb::TActivityRewardInfo* mutable_arrrewardinfo(int index);
  inline ::pb::TActivityRewardInfo* add_arrrewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
      arrrewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
      mutable_arrrewardinfo();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityTowerPassLayerGetInfoRsp)
 private:
  inline void set_has_passlayer();
  inline void clear_has_passlayer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo > arrrewardinfo_;
  ::google::protobuf::uint32 passlayer_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityTowerPassLayerGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityTowerPassLayerGetRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityTowerPassLayerGetRewardReq : public ::google::protobuf::Message {
 public:
  TOpenActivityTowerPassLayerGetRewardReq();
  virtual ~TOpenActivityTowerPassLayerGetRewardReq();

  TOpenActivityTowerPassLayerGetRewardReq(const TOpenActivityTowerPassLayerGetRewardReq& from);

  inline TOpenActivityTowerPassLayerGetRewardReq& operator=(const TOpenActivityTowerPassLayerGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityTowerPassLayerGetRewardReq& default_instance();

  void Swap(TOpenActivityTowerPassLayerGetRewardReq* other);

  // implements Message ----------------------------------------------

  TOpenActivityTowerPassLayerGetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityTowerPassLayerGetRewardReq& from);
  void MergeFrom(const TOpenActivityTowerPassLayerGetRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityTowerPassLayerGetRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityTowerPassLayerGetRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityTowerPassLayerGetRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TOpenActivityTowerPassLayerGetRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/OpenActivity.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TOpenActivityTowerPassLayerGetRewardRsp : public ::google::protobuf::Message {
 public:
  TOpenActivityTowerPassLayerGetRewardRsp();
  virtual ~TOpenActivityTowerPassLayerGetRewardRsp();

  TOpenActivityTowerPassLayerGetRewardRsp(const TOpenActivityTowerPassLayerGetRewardRsp& from);

  inline TOpenActivityTowerPassLayerGetRewardRsp& operator=(const TOpenActivityTowerPassLayerGetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TOpenActivityTowerPassLayerGetRewardRsp& default_instance();

  void Swap(TOpenActivityTowerPassLayerGetRewardRsp* other);

  // implements Message ----------------------------------------------

  TOpenActivityTowerPassLayerGetRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TOpenActivityTowerPassLayerGetRewardRsp& from);
  void MergeFrom(const TOpenActivityTowerPassLayerGetRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TOpenActivityTowerPassLayerGetRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TOpenActivityTowerPassLayerGetRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_AssignDesc_net_2fOpenActivity_2eproto();
  friend void protobuf_ShutdownFile_net_2fOpenActivity_2eproto();

  void InitAsDefaultInstance();
  static TOpenActivityTowerPassLayerGetRewardRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TActivityRewardInfo

// optional uint32 Id = 1;
inline bool TActivityRewardInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActivityRewardInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActivityRewardInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActivityRewardInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActivityRewardInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TActivityRewardInfo.Id)
  return id_;
}
inline void TActivityRewardInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActivityRewardInfo.Id)
}

// optional uint64 RewardTime = 2;
inline bool TActivityRewardInfo::has_rewardtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActivityRewardInfo::set_has_rewardtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActivityRewardInfo::clear_has_rewardtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActivityRewardInfo::clear_rewardtime() {
  rewardtime_ = GOOGLE_ULONGLONG(0);
  clear_has_rewardtime();
}
inline ::google::protobuf::uint64 TActivityRewardInfo::rewardtime() const {
  // @@protoc_insertion_point(field_get:pb.TActivityRewardInfo.RewardTime)
  return rewardtime_;
}
inline void TActivityRewardInfo::set_rewardtime(::google::protobuf::uint64 value) {
  set_has_rewardtime();
  rewardtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TActivityRewardInfo.RewardTime)
}

// -------------------------------------------------------------------

// TActivityBuyRecordInfo

// optional uint32 Id = 1;
inline bool TActivityBuyRecordInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActivityBuyRecordInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActivityBuyRecordInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActivityBuyRecordInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActivityBuyRecordInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TActivityBuyRecordInfo.Id)
  return id_;
}
inline void TActivityBuyRecordInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActivityBuyRecordInfo.Id)
}

// optional uint32 GoodIndex = 2;
inline bool TActivityBuyRecordInfo::has_goodindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActivityBuyRecordInfo::set_has_goodindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActivityBuyRecordInfo::clear_has_goodindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActivityBuyRecordInfo::clear_goodindex() {
  goodindex_ = 0u;
  clear_has_goodindex();
}
inline ::google::protobuf::uint32 TActivityBuyRecordInfo::goodindex() const {
  // @@protoc_insertion_point(field_get:pb.TActivityBuyRecordInfo.GoodIndex)
  return goodindex_;
}
inline void TActivityBuyRecordInfo::set_goodindex(::google::protobuf::uint32 value) {
  set_has_goodindex();
  goodindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TActivityBuyRecordInfo.GoodIndex)
}

// optional uint32 Num = 3;
inline bool TActivityBuyRecordInfo::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActivityBuyRecordInfo::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActivityBuyRecordInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActivityBuyRecordInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActivityBuyRecordInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TActivityBuyRecordInfo.Num)
  return num_;
}
inline void TActivityBuyRecordInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActivityBuyRecordInfo.Num)
}

// optional uint64 BuyTime = 4;
inline bool TActivityBuyRecordInfo::has_buytime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TActivityBuyRecordInfo::set_has_buytime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TActivityBuyRecordInfo::clear_has_buytime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TActivityBuyRecordInfo::clear_buytime() {
  buytime_ = GOOGLE_ULONGLONG(0);
  clear_has_buytime();
}
inline ::google::protobuf::uint64 TActivityBuyRecordInfo::buytime() const {
  // @@protoc_insertion_point(field_get:pb.TActivityBuyRecordInfo.BuyTime)
  return buytime_;
}
inline void TActivityBuyRecordInfo::set_buytime(::google::protobuf::uint64 value) {
  set_has_buytime();
  buytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TActivityBuyRecordInfo.BuyTime)
}

// -------------------------------------------------------------------

// TOpenActivityAccuLoginGetInfoRsp

// optional uint32 AccuLoginNum = 1;
inline bool TOpenActivityAccuLoginGetInfoRsp::has_acculoginnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityAccuLoginGetInfoRsp::set_has_acculoginnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityAccuLoginGetInfoRsp::clear_has_acculoginnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityAccuLoginGetInfoRsp::clear_acculoginnum() {
  acculoginnum_ = 0u;
  clear_has_acculoginnum();
}
inline ::google::protobuf::uint32 TOpenActivityAccuLoginGetInfoRsp::acculoginnum() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityAccuLoginGetInfoRsp.AccuLoginNum)
  return acculoginnum_;
}
inline void TOpenActivityAccuLoginGetInfoRsp::set_acculoginnum(::google::protobuf::uint32 value) {
  set_has_acculoginnum();
  acculoginnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityAccuLoginGetInfoRsp.AccuLoginNum)
}

// repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
inline int TOpenActivityAccuLoginGetInfoRsp::arrrewardinfo_size() const {
  return arrrewardinfo_.size();
}
inline void TOpenActivityAccuLoginGetInfoRsp::clear_arrrewardinfo() {
  arrrewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TOpenActivityAccuLoginGetInfoRsp::arrrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityAccuLoginGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityAccuLoginGetInfoRsp::mutable_arrrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityAccuLoginGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityAccuLoginGetInfoRsp::add_arrrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityAccuLoginGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TOpenActivityAccuLoginGetInfoRsp::arrrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityAccuLoginGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TOpenActivityAccuLoginGetInfoRsp::mutable_arrrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityAccuLoginGetInfoRsp.ArrRewardInfo)
  return &arrrewardinfo_;
}

// -------------------------------------------------------------------

// TOpenActivityAccuLoginGetRewardReq

// optional uint32 Id = 1;
inline bool TOpenActivityAccuLoginGetRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityAccuLoginGetRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityAccuLoginGetRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityAccuLoginGetRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TOpenActivityAccuLoginGetRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityAccuLoginGetRewardReq.Id)
  return id_;
}
inline void TOpenActivityAccuLoginGetRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityAccuLoginGetRewardReq.Id)
}

// -------------------------------------------------------------------

// TOpenActivityAccuLoginGetRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOpenActivityAccuLoginGetRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOpenActivityAccuLoginGetRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOpenActivityAccuLoginGetRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityAccuLoginGetRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOpenActivityAccuLoginGetRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityAccuLoginGetRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOpenActivityAccuLoginGetRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityAccuLoginGetRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOpenActivityAccuLoginGetRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityAccuLoginGetRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOpenActivityAccuLoginGetRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityAccuLoginGetRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TOpenActivityLevelUpGetInfoRsp

// optional uint32 Level = 1;
inline bool TOpenActivityLevelUpGetInfoRsp::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityLevelUpGetInfoRsp::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityLevelUpGetInfoRsp::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityLevelUpGetInfoRsp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TOpenActivityLevelUpGetInfoRsp::level() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityLevelUpGetInfoRsp.Level)
  return level_;
}
inline void TOpenActivityLevelUpGetInfoRsp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityLevelUpGetInfoRsp.Level)
}

// repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
inline int TOpenActivityLevelUpGetInfoRsp::arrrewardinfo_size() const {
  return arrrewardinfo_.size();
}
inline void TOpenActivityLevelUpGetInfoRsp::clear_arrrewardinfo() {
  arrrewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TOpenActivityLevelUpGetInfoRsp::arrrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityLevelUpGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityLevelUpGetInfoRsp::mutable_arrrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityLevelUpGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityLevelUpGetInfoRsp::add_arrrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityLevelUpGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TOpenActivityLevelUpGetInfoRsp::arrrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityLevelUpGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TOpenActivityLevelUpGetInfoRsp::mutable_arrrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityLevelUpGetInfoRsp.ArrRewardInfo)
  return &arrrewardinfo_;
}

// -------------------------------------------------------------------

// TOpenActivityLevelUpGetRewardReq

// optional uint32 Id = 1;
inline bool TOpenActivityLevelUpGetRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityLevelUpGetRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityLevelUpGetRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityLevelUpGetRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TOpenActivityLevelUpGetRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityLevelUpGetRewardReq.Id)
  return id_;
}
inline void TOpenActivityLevelUpGetRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityLevelUpGetRewardReq.Id)
}

// -------------------------------------------------------------------

// TOpenActivityLevelUpGetRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOpenActivityLevelUpGetRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOpenActivityLevelUpGetRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOpenActivityLevelUpGetRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityLevelUpGetRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOpenActivityLevelUpGetRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityLevelUpGetRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOpenActivityLevelUpGetRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityLevelUpGetRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOpenActivityLevelUpGetRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityLevelUpGetRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOpenActivityLevelUpGetRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityLevelUpGetRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TOpenActivityDiscountGetInfoRsp

// repeated .pb.TActivityBuyRecordInfo ArrBuyRecordInfo = 1;
inline int TOpenActivityDiscountGetInfoRsp::arrbuyrecordinfo_size() const {
  return arrbuyrecordinfo_.size();
}
inline void TOpenActivityDiscountGetInfoRsp::clear_arrbuyrecordinfo() {
  arrbuyrecordinfo_.Clear();
}
inline const ::pb::TActivityBuyRecordInfo& TOpenActivityDiscountGetInfoRsp::arrbuyrecordinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityDiscountGetInfoRsp.ArrBuyRecordInfo)
  return arrbuyrecordinfo_.Get(index);
}
inline ::pb::TActivityBuyRecordInfo* TOpenActivityDiscountGetInfoRsp::mutable_arrbuyrecordinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityDiscountGetInfoRsp.ArrBuyRecordInfo)
  return arrbuyrecordinfo_.Mutable(index);
}
inline ::pb::TActivityBuyRecordInfo* TOpenActivityDiscountGetInfoRsp::add_arrbuyrecordinfo() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityDiscountGetInfoRsp.ArrBuyRecordInfo)
  return arrbuyrecordinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityBuyRecordInfo >&
TOpenActivityDiscountGetInfoRsp::arrbuyrecordinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityDiscountGetInfoRsp.ArrBuyRecordInfo)
  return arrbuyrecordinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityBuyRecordInfo >*
TOpenActivityDiscountGetInfoRsp::mutable_arrbuyrecordinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityDiscountGetInfoRsp.ArrBuyRecordInfo)
  return &arrbuyrecordinfo_;
}

// -------------------------------------------------------------------

// TOpenActivityDiscountBuyGoodReq

// optional uint32 Id = 1;
inline bool TOpenActivityDiscountBuyGoodReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityDiscountBuyGoodReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityDiscountBuyGoodReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityDiscountBuyGoodReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TOpenActivityDiscountBuyGoodReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityDiscountBuyGoodReq.Id)
  return id_;
}
inline void TOpenActivityDiscountBuyGoodReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityDiscountBuyGoodReq.Id)
}

// optional uint32 GoodIndex = 2;
inline bool TOpenActivityDiscountBuyGoodReq::has_goodindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TOpenActivityDiscountBuyGoodReq::set_has_goodindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TOpenActivityDiscountBuyGoodReq::clear_has_goodindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TOpenActivityDiscountBuyGoodReq::clear_goodindex() {
  goodindex_ = 0u;
  clear_has_goodindex();
}
inline ::google::protobuf::uint32 TOpenActivityDiscountBuyGoodReq::goodindex() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityDiscountBuyGoodReq.GoodIndex)
  return goodindex_;
}
inline void TOpenActivityDiscountBuyGoodReq::set_goodindex(::google::protobuf::uint32 value) {
  set_has_goodindex();
  goodindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityDiscountBuyGoodReq.GoodIndex)
}

// optional uint32 Num = 3;
inline bool TOpenActivityDiscountBuyGoodReq::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TOpenActivityDiscountBuyGoodReq::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TOpenActivityDiscountBuyGoodReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TOpenActivityDiscountBuyGoodReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TOpenActivityDiscountBuyGoodReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityDiscountBuyGoodReq.Num)
  return num_;
}
inline void TOpenActivityDiscountBuyGoodReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityDiscountBuyGoodReq.Num)
}

// -------------------------------------------------------------------

// TOpenActivityDiscountBuyGoodRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOpenActivityDiscountBuyGoodRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOpenActivityDiscountBuyGoodRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOpenActivityDiscountBuyGoodRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityDiscountBuyGoodRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOpenActivityDiscountBuyGoodRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityDiscountBuyGoodRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOpenActivityDiscountBuyGoodRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityDiscountBuyGoodRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOpenActivityDiscountBuyGoodRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityDiscountBuyGoodRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOpenActivityDiscountBuyGoodRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityDiscountBuyGoodRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TOpenActivityRecruitRetGetInfoRsp

// optional uint32 RecruitNum = 1;
inline bool TOpenActivityRecruitRetGetInfoRsp::has_recruitnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityRecruitRetGetInfoRsp::set_has_recruitnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityRecruitRetGetInfoRsp::clear_has_recruitnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityRecruitRetGetInfoRsp::clear_recruitnum() {
  recruitnum_ = 0u;
  clear_has_recruitnum();
}
inline ::google::protobuf::uint32 TOpenActivityRecruitRetGetInfoRsp::recruitnum() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityRecruitRetGetInfoRsp.RecruitNum)
  return recruitnum_;
}
inline void TOpenActivityRecruitRetGetInfoRsp::set_recruitnum(::google::protobuf::uint32 value) {
  set_has_recruitnum();
  recruitnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityRecruitRetGetInfoRsp.RecruitNum)
}

// repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
inline int TOpenActivityRecruitRetGetInfoRsp::arrrewardinfo_size() const {
  return arrrewardinfo_.size();
}
inline void TOpenActivityRecruitRetGetInfoRsp::clear_arrrewardinfo() {
  arrrewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TOpenActivityRecruitRetGetInfoRsp::arrrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityRecruitRetGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityRecruitRetGetInfoRsp::mutable_arrrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityRecruitRetGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityRecruitRetGetInfoRsp::add_arrrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityRecruitRetGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TOpenActivityRecruitRetGetInfoRsp::arrrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityRecruitRetGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TOpenActivityRecruitRetGetInfoRsp::mutable_arrrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityRecruitRetGetInfoRsp.ArrRewardInfo)
  return &arrrewardinfo_;
}

// -------------------------------------------------------------------

// TOpenActivityRecruitRetGetRewardReq

// optional uint32 Id = 1;
inline bool TOpenActivityRecruitRetGetRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityRecruitRetGetRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityRecruitRetGetRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityRecruitRetGetRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TOpenActivityRecruitRetGetRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityRecruitRetGetRewardReq.Id)
  return id_;
}
inline void TOpenActivityRecruitRetGetRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityRecruitRetGetRewardReq.Id)
}

// -------------------------------------------------------------------

// TOpenActivityRecruitRetGetRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOpenActivityRecruitRetGetRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOpenActivityRecruitRetGetRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOpenActivityRecruitRetGetRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityRecruitRetGetRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOpenActivityRecruitRetGetRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityRecruitRetGetRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOpenActivityRecruitRetGetRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityRecruitRetGetRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOpenActivityRecruitRetGetRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityRecruitRetGetRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOpenActivityRecruitRetGetRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityRecruitRetGetRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TOpenActivityHeroStarInfo

// optional uint32 Htid = 1;
inline bool TOpenActivityHeroStarInfo::has_htid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityHeroStarInfo::set_has_htid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityHeroStarInfo::clear_has_htid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityHeroStarInfo::clear_htid() {
  htid_ = 0u;
  clear_has_htid();
}
inline ::google::protobuf::uint32 TOpenActivityHeroStarInfo::htid() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHeroStarInfo.Htid)
  return htid_;
}
inline void TOpenActivityHeroStarInfo::set_htid(::google::protobuf::uint32 value) {
  set_has_htid();
  htid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHeroStarInfo.Htid)
}

// optional uint32 StarLv = 2;
inline bool TOpenActivityHeroStarInfo::has_starlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TOpenActivityHeroStarInfo::set_has_starlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TOpenActivityHeroStarInfo::clear_has_starlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TOpenActivityHeroStarInfo::clear_starlv() {
  starlv_ = 0u;
  clear_has_starlv();
}
inline ::google::protobuf::uint32 TOpenActivityHeroStarInfo::starlv() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHeroStarInfo.StarLv)
  return starlv_;
}
inline void TOpenActivityHeroStarInfo::set_starlv(::google::protobuf::uint32 value) {
  set_has_starlv();
  starlv_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHeroStarInfo.StarLv)
}

// -------------------------------------------------------------------

// TOpenActivityHeroStarUpGetInfoRsp

// repeated .pb.TOpenActivityHeroStarInfo ArrHeroStar = 1;
inline int TOpenActivityHeroStarUpGetInfoRsp::arrherostar_size() const {
  return arrherostar_.size();
}
inline void TOpenActivityHeroStarUpGetInfoRsp::clear_arrherostar() {
  arrherostar_.Clear();
}
inline const ::pb::TOpenActivityHeroStarInfo& TOpenActivityHeroStarUpGetInfoRsp::arrherostar(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHeroStarUpGetInfoRsp.ArrHeroStar)
  return arrherostar_.Get(index);
}
inline ::pb::TOpenActivityHeroStarInfo* TOpenActivityHeroStarUpGetInfoRsp::mutable_arrherostar(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityHeroStarUpGetInfoRsp.ArrHeroStar)
  return arrherostar_.Mutable(index);
}
inline ::pb::TOpenActivityHeroStarInfo* TOpenActivityHeroStarUpGetInfoRsp::add_arrherostar() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityHeroStarUpGetInfoRsp.ArrHeroStar)
  return arrherostar_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHeroStarInfo >&
TOpenActivityHeroStarUpGetInfoRsp::arrherostar() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityHeroStarUpGetInfoRsp.ArrHeroStar)
  return arrherostar_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHeroStarInfo >*
TOpenActivityHeroStarUpGetInfoRsp::mutable_arrherostar() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityHeroStarUpGetInfoRsp.ArrHeroStar)
  return &arrherostar_;
}

// repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
inline int TOpenActivityHeroStarUpGetInfoRsp::arrrewardinfo_size() const {
  return arrrewardinfo_.size();
}
inline void TOpenActivityHeroStarUpGetInfoRsp::clear_arrrewardinfo() {
  arrrewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TOpenActivityHeroStarUpGetInfoRsp::arrrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHeroStarUpGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityHeroStarUpGetInfoRsp::mutable_arrrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityHeroStarUpGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityHeroStarUpGetInfoRsp::add_arrrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityHeroStarUpGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TOpenActivityHeroStarUpGetInfoRsp::arrrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityHeroStarUpGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TOpenActivityHeroStarUpGetInfoRsp::mutable_arrrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityHeroStarUpGetInfoRsp.ArrRewardInfo)
  return &arrrewardinfo_;
}

// -------------------------------------------------------------------

// TOpenActivityHeroStarUpGetRewardReq

// optional uint32 Id = 1;
inline bool TOpenActivityHeroStarUpGetRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityHeroStarUpGetRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityHeroStarUpGetRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityHeroStarUpGetRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TOpenActivityHeroStarUpGetRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHeroStarUpGetRewardReq.Id)
  return id_;
}
inline void TOpenActivityHeroStarUpGetRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHeroStarUpGetRewardReq.Id)
}

// -------------------------------------------------------------------

// TOpenActivityHeroStarUpGetRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOpenActivityHeroStarUpGetRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOpenActivityHeroStarUpGetRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOpenActivityHeroStarUpGetRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHeroStarUpGetRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOpenActivityHeroStarUpGetRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityHeroStarUpGetRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOpenActivityHeroStarUpGetRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityHeroStarUpGetRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOpenActivityHeroStarUpGetRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityHeroStarUpGetRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOpenActivityHeroStarUpGetRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityHeroStarUpGetRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TOpenActivityHalfMonthBuyRecordInfo

// optional uint32 GoodIndex = 1;
inline bool TOpenActivityHalfMonthBuyRecordInfo::has_goodindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityHalfMonthBuyRecordInfo::set_has_goodindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityHalfMonthBuyRecordInfo::clear_has_goodindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityHalfMonthBuyRecordInfo::clear_goodindex() {
  goodindex_ = 0u;
  clear_has_goodindex();
}
inline ::google::protobuf::uint32 TOpenActivityHalfMonthBuyRecordInfo::goodindex() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthBuyRecordInfo.GoodIndex)
  return goodindex_;
}
inline void TOpenActivityHalfMonthBuyRecordInfo::set_goodindex(::google::protobuf::uint32 value) {
  set_has_goodindex();
  goodindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthBuyRecordInfo.GoodIndex)
}

// optional uint32 Num = 2;
inline bool TOpenActivityHalfMonthBuyRecordInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TOpenActivityHalfMonthBuyRecordInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TOpenActivityHalfMonthBuyRecordInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TOpenActivityHalfMonthBuyRecordInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TOpenActivityHalfMonthBuyRecordInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthBuyRecordInfo.Num)
  return num_;
}
inline void TOpenActivityHalfMonthBuyRecordInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthBuyRecordInfo.Num)
}

// optional uint64 BuyTime = 3;
inline bool TOpenActivityHalfMonthBuyRecordInfo::has_buytime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TOpenActivityHalfMonthBuyRecordInfo::set_has_buytime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TOpenActivityHalfMonthBuyRecordInfo::clear_has_buytime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TOpenActivityHalfMonthBuyRecordInfo::clear_buytime() {
  buytime_ = GOOGLE_ULONGLONG(0);
  clear_has_buytime();
}
inline ::google::protobuf::uint64 TOpenActivityHalfMonthBuyRecordInfo::buytime() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthBuyRecordInfo.BuyTime)
  return buytime_;
}
inline void TOpenActivityHalfMonthBuyRecordInfo::set_buytime(::google::protobuf::uint64 value) {
  set_has_buytime();
  buytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthBuyRecordInfo.BuyTime)
}

// -------------------------------------------------------------------

// TOpenActivityHalfMonthSingleDayInfo

// optional uint32 DayId = 1;
inline bool TOpenActivityHalfMonthSingleDayInfo::has_dayid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityHalfMonthSingleDayInfo::set_has_dayid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityHalfMonthSingleDayInfo::clear_has_dayid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityHalfMonthSingleDayInfo::clear_dayid() {
  dayid_ = 0u;
  clear_has_dayid();
}
inline ::google::protobuf::uint32 TOpenActivityHalfMonthSingleDayInfo::dayid() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthSingleDayInfo.DayId)
  return dayid_;
}
inline void TOpenActivityHalfMonthSingleDayInfo::set_dayid(::google::protobuf::uint32 value) {
  set_has_dayid();
  dayid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthSingleDayInfo.DayId)
}

// repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 2;
inline int TOpenActivityHalfMonthSingleDayInfo::arrtaskrewardinfo_size() const {
  return arrtaskrewardinfo_.size();
}
inline void TOpenActivityHalfMonthSingleDayInfo::clear_arrtaskrewardinfo() {
  arrtaskrewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TOpenActivityHalfMonthSingleDayInfo::arrtaskrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthSingleDayInfo.ArrTaskRewardInfo)
  return arrtaskrewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityHalfMonthSingleDayInfo::mutable_arrtaskrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityHalfMonthSingleDayInfo.ArrTaskRewardInfo)
  return arrtaskrewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityHalfMonthSingleDayInfo::add_arrtaskrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityHalfMonthSingleDayInfo.ArrTaskRewardInfo)
  return arrtaskrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TOpenActivityHalfMonthSingleDayInfo::arrtaskrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityHalfMonthSingleDayInfo.ArrTaskRewardInfo)
  return arrtaskrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TOpenActivityHalfMonthSingleDayInfo::mutable_arrtaskrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityHalfMonthSingleDayInfo.ArrTaskRewardInfo)
  return &arrtaskrewardinfo_;
}

// repeated .pb.TOpenActivityHalfMonthBuyRecordInfo ArrBuyRecordInfo = 3;
inline int TOpenActivityHalfMonthSingleDayInfo::arrbuyrecordinfo_size() const {
  return arrbuyrecordinfo_.size();
}
inline void TOpenActivityHalfMonthSingleDayInfo::clear_arrbuyrecordinfo() {
  arrbuyrecordinfo_.Clear();
}
inline const ::pb::TOpenActivityHalfMonthBuyRecordInfo& TOpenActivityHalfMonthSingleDayInfo::arrbuyrecordinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthSingleDayInfo.ArrBuyRecordInfo)
  return arrbuyrecordinfo_.Get(index);
}
inline ::pb::TOpenActivityHalfMonthBuyRecordInfo* TOpenActivityHalfMonthSingleDayInfo::mutable_arrbuyrecordinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityHalfMonthSingleDayInfo.ArrBuyRecordInfo)
  return arrbuyrecordinfo_.Mutable(index);
}
inline ::pb::TOpenActivityHalfMonthBuyRecordInfo* TOpenActivityHalfMonthSingleDayInfo::add_arrbuyrecordinfo() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityHalfMonthSingleDayInfo.ArrBuyRecordInfo)
  return arrbuyrecordinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHalfMonthBuyRecordInfo >&
TOpenActivityHalfMonthSingleDayInfo::arrbuyrecordinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityHalfMonthSingleDayInfo.ArrBuyRecordInfo)
  return arrbuyrecordinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHalfMonthBuyRecordInfo >*
TOpenActivityHalfMonthSingleDayInfo::mutable_arrbuyrecordinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityHalfMonthSingleDayInfo.ArrBuyRecordInfo)
  return &arrbuyrecordinfo_;
}

// -------------------------------------------------------------------

// TOpenActivityHalfMonthGetInfoReq

// optional uint32 ConfId = 1;
inline bool TOpenActivityHalfMonthGetInfoReq::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityHalfMonthGetInfoReq::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityHalfMonthGetInfoReq::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityHalfMonthGetInfoReq::clear_confid() {
  confid_ = 0u;
  clear_has_confid();
}
inline ::google::protobuf::uint32 TOpenActivityHalfMonthGetInfoReq::confid() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthGetInfoReq.ConfId)
  return confid_;
}
inline void TOpenActivityHalfMonthGetInfoReq::set_confid(::google::protobuf::uint32 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthGetInfoReq.ConfId)
}

// -------------------------------------------------------------------

// TOpenActivityHalfMonthGetInfoRsp

// repeated .pb.TOpenActivityHalfMonthSingleDayInfo ArrDayInfo = 1;
inline int TOpenActivityHalfMonthGetInfoRsp::arrdayinfo_size() const {
  return arrdayinfo_.size();
}
inline void TOpenActivityHalfMonthGetInfoRsp::clear_arrdayinfo() {
  arrdayinfo_.Clear();
}
inline const ::pb::TOpenActivityHalfMonthSingleDayInfo& TOpenActivityHalfMonthGetInfoRsp::arrdayinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthGetInfoRsp.ArrDayInfo)
  return arrdayinfo_.Get(index);
}
inline ::pb::TOpenActivityHalfMonthSingleDayInfo* TOpenActivityHalfMonthGetInfoRsp::mutable_arrdayinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityHalfMonthGetInfoRsp.ArrDayInfo)
  return arrdayinfo_.Mutable(index);
}
inline ::pb::TOpenActivityHalfMonthSingleDayInfo* TOpenActivityHalfMonthGetInfoRsp::add_arrdayinfo() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityHalfMonthGetInfoRsp.ArrDayInfo)
  return arrdayinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHalfMonthSingleDayInfo >&
TOpenActivityHalfMonthGetInfoRsp::arrdayinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityHalfMonthGetInfoRsp.ArrDayInfo)
  return arrdayinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TOpenActivityHalfMonthSingleDayInfo >*
TOpenActivityHalfMonthGetInfoRsp::mutable_arrdayinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityHalfMonthGetInfoRsp.ArrDayInfo)
  return &arrdayinfo_;
}

// repeated .pb.TActivityRewardInfo ArrIntegralRewardInfo = 2;
inline int TOpenActivityHalfMonthGetInfoRsp::arrintegralrewardinfo_size() const {
  return arrintegralrewardinfo_.size();
}
inline void TOpenActivityHalfMonthGetInfoRsp::clear_arrintegralrewardinfo() {
  arrintegralrewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TOpenActivityHalfMonthGetInfoRsp::arrintegralrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthGetInfoRsp.ArrIntegralRewardInfo)
  return arrintegralrewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityHalfMonthGetInfoRsp::mutable_arrintegralrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityHalfMonthGetInfoRsp.ArrIntegralRewardInfo)
  return arrintegralrewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityHalfMonthGetInfoRsp::add_arrintegralrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityHalfMonthGetInfoRsp.ArrIntegralRewardInfo)
  return arrintegralrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TOpenActivityHalfMonthGetInfoRsp::arrintegralrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityHalfMonthGetInfoRsp.ArrIntegralRewardInfo)
  return arrintegralrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TOpenActivityHalfMonthGetInfoRsp::mutable_arrintegralrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityHalfMonthGetInfoRsp.ArrIntegralRewardInfo)
  return &arrintegralrewardinfo_;
}

// -------------------------------------------------------------------

// TOpenActivityHalfMonthGetTaskRewardReq

// optional uint32 ConfId = 1;
inline bool TOpenActivityHalfMonthGetTaskRewardReq::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityHalfMonthGetTaskRewardReq::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityHalfMonthGetTaskRewardReq::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityHalfMonthGetTaskRewardReq::clear_confid() {
  confid_ = 0u;
  clear_has_confid();
}
inline ::google::protobuf::uint32 TOpenActivityHalfMonthGetTaskRewardReq::confid() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthGetTaskRewardReq.ConfId)
  return confid_;
}
inline void TOpenActivityHalfMonthGetTaskRewardReq::set_confid(::google::protobuf::uint32 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthGetTaskRewardReq.ConfId)
}

// optional uint32 DayId = 2;
inline bool TOpenActivityHalfMonthGetTaskRewardReq::has_dayid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TOpenActivityHalfMonthGetTaskRewardReq::set_has_dayid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TOpenActivityHalfMonthGetTaskRewardReq::clear_has_dayid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TOpenActivityHalfMonthGetTaskRewardReq::clear_dayid() {
  dayid_ = 0u;
  clear_has_dayid();
}
inline ::google::protobuf::uint32 TOpenActivityHalfMonthGetTaskRewardReq::dayid() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthGetTaskRewardReq.DayId)
  return dayid_;
}
inline void TOpenActivityHalfMonthGetTaskRewardReq::set_dayid(::google::protobuf::uint32 value) {
  set_has_dayid();
  dayid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthGetTaskRewardReq.DayId)
}

// optional uint32 ContentId = 3;
inline bool TOpenActivityHalfMonthGetTaskRewardReq::has_contentid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TOpenActivityHalfMonthGetTaskRewardReq::set_has_contentid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TOpenActivityHalfMonthGetTaskRewardReq::clear_has_contentid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TOpenActivityHalfMonthGetTaskRewardReq::clear_contentid() {
  contentid_ = 0u;
  clear_has_contentid();
}
inline ::google::protobuf::uint32 TOpenActivityHalfMonthGetTaskRewardReq::contentid() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthGetTaskRewardReq.ContentId)
  return contentid_;
}
inline void TOpenActivityHalfMonthGetTaskRewardReq::set_contentid(::google::protobuf::uint32 value) {
  set_has_contentid();
  contentid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthGetTaskRewardReq.ContentId)
}

// -------------------------------------------------------------------

// TOpenActivityHalfMonthGetTaskRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOpenActivityHalfMonthGetTaskRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOpenActivityHalfMonthGetTaskRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOpenActivityHalfMonthGetTaskRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthGetTaskRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOpenActivityHalfMonthGetTaskRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityHalfMonthGetTaskRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOpenActivityHalfMonthGetTaskRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityHalfMonthGetTaskRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOpenActivityHalfMonthGetTaskRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityHalfMonthGetTaskRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOpenActivityHalfMonthGetTaskRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityHalfMonthGetTaskRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TOpenActivityHalfMonthBuyGoodsReq

// optional uint32 ConfId = 1;
inline bool TOpenActivityHalfMonthBuyGoodsReq::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::clear_confid() {
  confid_ = 0u;
  clear_has_confid();
}
inline ::google::protobuf::uint32 TOpenActivityHalfMonthBuyGoodsReq::confid() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthBuyGoodsReq.ConfId)
  return confid_;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::set_confid(::google::protobuf::uint32 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthBuyGoodsReq.ConfId)
}

// optional uint32 Id = 2;
inline bool TOpenActivityHalfMonthBuyGoodsReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TOpenActivityHalfMonthBuyGoodsReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthBuyGoodsReq.Id)
  return id_;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthBuyGoodsReq.Id)
}

// optional uint32 GoodIndex = 3;
inline bool TOpenActivityHalfMonthBuyGoodsReq::has_goodindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::set_has_goodindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::clear_has_goodindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::clear_goodindex() {
  goodindex_ = 0u;
  clear_has_goodindex();
}
inline ::google::protobuf::uint32 TOpenActivityHalfMonthBuyGoodsReq::goodindex() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthBuyGoodsReq.GoodIndex)
  return goodindex_;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::set_goodindex(::google::protobuf::uint32 value) {
  set_has_goodindex();
  goodindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthBuyGoodsReq.GoodIndex)
}

// optional uint32 Num = 4;
inline bool TOpenActivityHalfMonthBuyGoodsReq::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TOpenActivityHalfMonthBuyGoodsReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthBuyGoodsReq.Num)
  return num_;
}
inline void TOpenActivityHalfMonthBuyGoodsReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthBuyGoodsReq.Num)
}

// -------------------------------------------------------------------

// TOpenActivityHalfMonthBuyGoodsRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOpenActivityHalfMonthBuyGoodsRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOpenActivityHalfMonthBuyGoodsRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOpenActivityHalfMonthBuyGoodsRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthBuyGoodsRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOpenActivityHalfMonthBuyGoodsRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityHalfMonthBuyGoodsRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOpenActivityHalfMonthBuyGoodsRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityHalfMonthBuyGoodsRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOpenActivityHalfMonthBuyGoodsRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityHalfMonthBuyGoodsRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOpenActivityHalfMonthBuyGoodsRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityHalfMonthBuyGoodsRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TOpenActivityHalfMonthGetIntegralRewardReq

// optional uint32 ConfId = 1;
inline bool TOpenActivityHalfMonthGetIntegralRewardReq::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityHalfMonthGetIntegralRewardReq::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityHalfMonthGetIntegralRewardReq::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityHalfMonthGetIntegralRewardReq::clear_confid() {
  confid_ = 0u;
  clear_has_confid();
}
inline ::google::protobuf::uint32 TOpenActivityHalfMonthGetIntegralRewardReq::confid() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthGetIntegralRewardReq.ConfId)
  return confid_;
}
inline void TOpenActivityHalfMonthGetIntegralRewardReq::set_confid(::google::protobuf::uint32 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthGetIntegralRewardReq.ConfId)
}

// optional uint32 Id = 2;
inline bool TOpenActivityHalfMonthGetIntegralRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TOpenActivityHalfMonthGetIntegralRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TOpenActivityHalfMonthGetIntegralRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TOpenActivityHalfMonthGetIntegralRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TOpenActivityHalfMonthGetIntegralRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthGetIntegralRewardReq.Id)
  return id_;
}
inline void TOpenActivityHalfMonthGetIntegralRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityHalfMonthGetIntegralRewardReq.Id)
}

// -------------------------------------------------------------------

// TOpenActivityHalfMonthGetIntegralRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOpenActivityHalfMonthGetIntegralRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOpenActivityHalfMonthGetIntegralRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOpenActivityHalfMonthGetIntegralRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityHalfMonthGetIntegralRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOpenActivityHalfMonthGetIntegralRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityHalfMonthGetIntegralRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOpenActivityHalfMonthGetIntegralRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityHalfMonthGetIntegralRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOpenActivityHalfMonthGetIntegralRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityHalfMonthGetIntegralRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOpenActivityHalfMonthGetIntegralRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityHalfMonthGetIntegralRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TOActSevenActivityGetInfoRsp

// repeated uint32 TaskArr = 1;
inline int TOActSevenActivityGetInfoRsp::taskarr_size() const {
  return taskarr_.size();
}
inline void TOActSevenActivityGetInfoRsp::clear_taskarr() {
  taskarr_.Clear();
}
inline ::google::protobuf::uint32 TOActSevenActivityGetInfoRsp::taskarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOActSevenActivityGetInfoRsp.TaskArr)
  return taskarr_.Get(index);
}
inline void TOActSevenActivityGetInfoRsp::set_taskarr(int index, ::google::protobuf::uint32 value) {
  taskarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TOActSevenActivityGetInfoRsp.TaskArr)
}
inline void TOActSevenActivityGetInfoRsp::add_taskarr(::google::protobuf::uint32 value) {
  taskarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TOActSevenActivityGetInfoRsp.TaskArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TOActSevenActivityGetInfoRsp::taskarr() const {
  // @@protoc_insertion_point(field_list:pb.TOActSevenActivityGetInfoRsp.TaskArr)
  return taskarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TOActSevenActivityGetInfoRsp::mutable_taskarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOActSevenActivityGetInfoRsp.TaskArr)
  return &taskarr_;
}

// repeated uint32 SignRewardArr = 2;
inline int TOActSevenActivityGetInfoRsp::signrewardarr_size() const {
  return signrewardarr_.size();
}
inline void TOActSevenActivityGetInfoRsp::clear_signrewardarr() {
  signrewardarr_.Clear();
}
inline ::google::protobuf::uint32 TOActSevenActivityGetInfoRsp::signrewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOActSevenActivityGetInfoRsp.SignRewardArr)
  return signrewardarr_.Get(index);
}
inline void TOActSevenActivityGetInfoRsp::set_signrewardarr(int index, ::google::protobuf::uint32 value) {
  signrewardarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TOActSevenActivityGetInfoRsp.SignRewardArr)
}
inline void TOActSevenActivityGetInfoRsp::add_signrewardarr(::google::protobuf::uint32 value) {
  signrewardarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TOActSevenActivityGetInfoRsp.SignRewardArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TOActSevenActivityGetInfoRsp::signrewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TOActSevenActivityGetInfoRsp.SignRewardArr)
  return signrewardarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TOActSevenActivityGetInfoRsp::mutable_signrewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOActSevenActivityGetInfoRsp.SignRewardArr)
  return &signrewardarr_;
}

// repeated uint32 SellDiscountArr = 3;
inline int TOActSevenActivityGetInfoRsp::selldiscountarr_size() const {
  return selldiscountarr_.size();
}
inline void TOActSevenActivityGetInfoRsp::clear_selldiscountarr() {
  selldiscountarr_.Clear();
}
inline ::google::protobuf::uint32 TOActSevenActivityGetInfoRsp::selldiscountarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOActSevenActivityGetInfoRsp.SellDiscountArr)
  return selldiscountarr_.Get(index);
}
inline void TOActSevenActivityGetInfoRsp::set_selldiscountarr(int index, ::google::protobuf::uint32 value) {
  selldiscountarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TOActSevenActivityGetInfoRsp.SellDiscountArr)
}
inline void TOActSevenActivityGetInfoRsp::add_selldiscountarr(::google::protobuf::uint32 value) {
  selldiscountarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TOActSevenActivityGetInfoRsp.SellDiscountArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TOActSevenActivityGetInfoRsp::selldiscountarr() const {
  // @@protoc_insertion_point(field_list:pb.TOActSevenActivityGetInfoRsp.SellDiscountArr)
  return selldiscountarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TOActSevenActivityGetInfoRsp::mutable_selldiscountarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOActSevenActivityGetInfoRsp.SellDiscountArr)
  return &selldiscountarr_;
}

// -------------------------------------------------------------------

// TOActSevenActivityReceiveTaskActivityAwardReq

// optional uint32 ContentId = 1;
inline bool TOActSevenActivityReceiveTaskActivityAwardReq::has_contentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOActSevenActivityReceiveTaskActivityAwardReq::set_has_contentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOActSevenActivityReceiveTaskActivityAwardReq::clear_has_contentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOActSevenActivityReceiveTaskActivityAwardReq::clear_contentid() {
  contentid_ = 0u;
  clear_has_contentid();
}
inline ::google::protobuf::uint32 TOActSevenActivityReceiveTaskActivityAwardReq::contentid() const {
  // @@protoc_insertion_point(field_get:pb.TOActSevenActivityReceiveTaskActivityAwardReq.ContentId)
  return contentid_;
}
inline void TOActSevenActivityReceiveTaskActivityAwardReq::set_contentid(::google::protobuf::uint32 value) {
  set_has_contentid();
  contentid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOActSevenActivityReceiveTaskActivityAwardReq.ContentId)
}

// -------------------------------------------------------------------

// TOActSevenActivityReceiveSignAwardReq

// optional uint32 Day = 1;
inline bool TOActSevenActivityReceiveSignAwardReq::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOActSevenActivityReceiveSignAwardReq::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOActSevenActivityReceiveSignAwardReq::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOActSevenActivityReceiveSignAwardReq::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 TOActSevenActivityReceiveSignAwardReq::day() const {
  // @@protoc_insertion_point(field_get:pb.TOActSevenActivityReceiveSignAwardReq.Day)
  return day_;
}
inline void TOActSevenActivityReceiveSignAwardReq::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:pb.TOActSevenActivityReceiveSignAwardReq.Day)
}

// -------------------------------------------------------------------

// TOActSevenActivityBuySellDiscountItemReq

// optional uint32 Day = 1;
inline bool TOActSevenActivityBuySellDiscountItemReq::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOActSevenActivityBuySellDiscountItemReq::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOActSevenActivityBuySellDiscountItemReq::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOActSevenActivityBuySellDiscountItemReq::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 TOActSevenActivityBuySellDiscountItemReq::day() const {
  // @@protoc_insertion_point(field_get:pb.TOActSevenActivityBuySellDiscountItemReq.Day)
  return day_;
}
inline void TOActSevenActivityBuySellDiscountItemReq::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:pb.TOActSevenActivityBuySellDiscountItemReq.Day)
}

// -------------------------------------------------------------------

// TOActStarBlessingBagGetInfoRsp

// repeated .pb.TCommonReward ArrRewardInfo = 1;
inline int TOActStarBlessingBagGetInfoRsp::arrrewardinfo_size() const {
  return arrrewardinfo_.size();
}
inline void TOActStarBlessingBagGetInfoRsp::clear_arrrewardinfo() {
  arrrewardinfo_.Clear();
}
inline const ::pb::TCommonReward& TOActStarBlessingBagGetInfoRsp::arrrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOActStarBlessingBagGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Get(index);
}
inline ::pb::TCommonReward* TOActStarBlessingBagGetInfoRsp::mutable_arrrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOActStarBlessingBagGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Mutable(index);
}
inline ::pb::TCommonReward* TOActStarBlessingBagGetInfoRsp::add_arrrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TOActStarBlessingBagGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOActStarBlessingBagGetInfoRsp::arrrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOActStarBlessingBagGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOActStarBlessingBagGetInfoRsp::mutable_arrrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOActStarBlessingBagGetInfoRsp.ArrRewardInfo)
  return &arrrewardinfo_;
}

// -------------------------------------------------------------------

// TOActStarBlessingBagGetRewardRsp

// optional .pb.TCommonReward RewardInfo = 1;
inline bool TOActStarBlessingBagGetRewardRsp::has_rewardinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOActStarBlessingBagGetRewardRsp::set_has_rewardinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOActStarBlessingBagGetRewardRsp::clear_has_rewardinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOActStarBlessingBagGetRewardRsp::clear_rewardinfo() {
  if (rewardinfo_ != NULL) rewardinfo_->::pb::TCommonReward::Clear();
  clear_has_rewardinfo();
}
inline const ::pb::TCommonReward& TOActStarBlessingBagGetRewardRsp::rewardinfo() const {
  // @@protoc_insertion_point(field_get:pb.TOActStarBlessingBagGetRewardRsp.RewardInfo)
  return rewardinfo_ != NULL ? *rewardinfo_ : *default_instance_->rewardinfo_;
}
inline ::pb::TCommonReward* TOActStarBlessingBagGetRewardRsp::mutable_rewardinfo() {
  set_has_rewardinfo();
  if (rewardinfo_ == NULL) rewardinfo_ = new ::pb::TCommonReward;
  // @@protoc_insertion_point(field_mutable:pb.TOActStarBlessingBagGetRewardRsp.RewardInfo)
  return rewardinfo_;
}
inline ::pb::TCommonReward* TOActStarBlessingBagGetRewardRsp::release_rewardinfo() {
  clear_has_rewardinfo();
  ::pb::TCommonReward* temp = rewardinfo_;
  rewardinfo_ = NULL;
  return temp;
}
inline void TOActStarBlessingBagGetRewardRsp::set_allocated_rewardinfo(::pb::TCommonReward* rewardinfo) {
  delete rewardinfo_;
  rewardinfo_ = rewardinfo;
  if (rewardinfo) {
    set_has_rewardinfo();
  } else {
    clear_has_rewardinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TOActStarBlessingBagGetRewardRsp.RewardInfo)
}

// -------------------------------------------------------------------

// TOpenActivityLotsOfGoldGetInfoRsp

// repeated .pb.TActivityRewardInfo ArrTaskRewardInfo = 1;
inline int TOpenActivityLotsOfGoldGetInfoRsp::arrtaskrewardinfo_size() const {
  return arrtaskrewardinfo_.size();
}
inline void TOpenActivityLotsOfGoldGetInfoRsp::clear_arrtaskrewardinfo() {
  arrtaskrewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TOpenActivityLotsOfGoldGetInfoRsp::arrtaskrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityLotsOfGoldGetInfoRsp.ArrTaskRewardInfo)
  return arrtaskrewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityLotsOfGoldGetInfoRsp::mutable_arrtaskrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityLotsOfGoldGetInfoRsp.ArrTaskRewardInfo)
  return arrtaskrewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityLotsOfGoldGetInfoRsp::add_arrtaskrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityLotsOfGoldGetInfoRsp.ArrTaskRewardInfo)
  return arrtaskrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TOpenActivityLotsOfGoldGetInfoRsp::arrtaskrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityLotsOfGoldGetInfoRsp.ArrTaskRewardInfo)
  return arrtaskrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TOpenActivityLotsOfGoldGetInfoRsp::mutable_arrtaskrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityLotsOfGoldGetInfoRsp.ArrTaskRewardInfo)
  return &arrtaskrewardinfo_;
}

// repeated .pb.TActivityRewardInfo ArrIntegralRewardInfo = 2;
inline int TOpenActivityLotsOfGoldGetInfoRsp::arrintegralrewardinfo_size() const {
  return arrintegralrewardinfo_.size();
}
inline void TOpenActivityLotsOfGoldGetInfoRsp::clear_arrintegralrewardinfo() {
  arrintegralrewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TOpenActivityLotsOfGoldGetInfoRsp::arrintegralrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityLotsOfGoldGetInfoRsp.ArrIntegralRewardInfo)
  return arrintegralrewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityLotsOfGoldGetInfoRsp::mutable_arrintegralrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityLotsOfGoldGetInfoRsp.ArrIntegralRewardInfo)
  return arrintegralrewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityLotsOfGoldGetInfoRsp::add_arrintegralrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityLotsOfGoldGetInfoRsp.ArrIntegralRewardInfo)
  return arrintegralrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TOpenActivityLotsOfGoldGetInfoRsp::arrintegralrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityLotsOfGoldGetInfoRsp.ArrIntegralRewardInfo)
  return arrintegralrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TOpenActivityLotsOfGoldGetInfoRsp::mutable_arrintegralrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityLotsOfGoldGetInfoRsp.ArrIntegralRewardInfo)
  return &arrintegralrewardinfo_;
}

// -------------------------------------------------------------------

// TOpenActivityLotsOfGoldGetTaskRewardReq

// optional uint32 ContentId = 1;
inline bool TOpenActivityLotsOfGoldGetTaskRewardReq::has_contentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityLotsOfGoldGetTaskRewardReq::set_has_contentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityLotsOfGoldGetTaskRewardReq::clear_has_contentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityLotsOfGoldGetTaskRewardReq::clear_contentid() {
  contentid_ = 0u;
  clear_has_contentid();
}
inline ::google::protobuf::uint32 TOpenActivityLotsOfGoldGetTaskRewardReq::contentid() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityLotsOfGoldGetTaskRewardReq.ContentId)
  return contentid_;
}
inline void TOpenActivityLotsOfGoldGetTaskRewardReq::set_contentid(::google::protobuf::uint32 value) {
  set_has_contentid();
  contentid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityLotsOfGoldGetTaskRewardReq.ContentId)
}

// -------------------------------------------------------------------

// TOpenActivityLotsOfGoldGetTaskRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOpenActivityLotsOfGoldGetTaskRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOpenActivityLotsOfGoldGetTaskRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOpenActivityLotsOfGoldGetTaskRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOpenActivityLotsOfGoldGetTaskRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOpenActivityLotsOfGoldGetTaskRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOpenActivityLotsOfGoldGetTaskRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOpenActivityLotsOfGoldGetTaskRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityLotsOfGoldGetTaskRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TOpenActivityLotsOfGoldGetIntegralRewardReq

// optional uint32 IntegralId = 1;
inline bool TOpenActivityLotsOfGoldGetIntegralRewardReq::has_integralid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityLotsOfGoldGetIntegralRewardReq::set_has_integralid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityLotsOfGoldGetIntegralRewardReq::clear_has_integralid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityLotsOfGoldGetIntegralRewardReq::clear_integralid() {
  integralid_ = 0u;
  clear_has_integralid();
}
inline ::google::protobuf::uint32 TOpenActivityLotsOfGoldGetIntegralRewardReq::integralid() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityLotsOfGoldGetIntegralRewardReq.IntegralId)
  return integralid_;
}
inline void TOpenActivityLotsOfGoldGetIntegralRewardReq::set_integralid(::google::protobuf::uint32 value) {
  set_has_integralid();
  integralid_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityLotsOfGoldGetIntegralRewardReq.IntegralId)
}

// -------------------------------------------------------------------

// TOpenActivityLotsOfGoldGetIntegralRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOpenActivityLotsOfGoldGetIntegralRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOpenActivityLotsOfGoldGetIntegralRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOpenActivityLotsOfGoldGetIntegralRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOpenActivityLotsOfGoldGetIntegralRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOpenActivityLotsOfGoldGetIntegralRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOpenActivityLotsOfGoldGetIntegralRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOpenActivityLotsOfGoldGetIntegralRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityLotsOfGoldGetIntegralRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TOpenActivityAllPlayerGoldHeroGetInfoRsp

// optional uint32 TotalWaveNum = 1;
inline bool TOpenActivityAllPlayerGoldHeroGetInfoRsp::has_totalwavenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityAllPlayerGoldHeroGetInfoRsp::set_has_totalwavenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityAllPlayerGoldHeroGetInfoRsp::clear_has_totalwavenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityAllPlayerGoldHeroGetInfoRsp::clear_totalwavenum() {
  totalwavenum_ = 0u;
  clear_has_totalwavenum();
}
inline ::google::protobuf::uint32 TOpenActivityAllPlayerGoldHeroGetInfoRsp::totalwavenum() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp.TotalWaveNum)
  return totalwavenum_;
}
inline void TOpenActivityAllPlayerGoldHeroGetInfoRsp::set_totalwavenum(::google::protobuf::uint32 value) {
  set_has_totalwavenum();
  totalwavenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp.TotalWaveNum)
}

// repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
inline int TOpenActivityAllPlayerGoldHeroGetInfoRsp::arrrewardinfo_size() const {
  return arrrewardinfo_.size();
}
inline void TOpenActivityAllPlayerGoldHeroGetInfoRsp::clear_arrrewardinfo() {
  arrrewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TOpenActivityAllPlayerGoldHeroGetInfoRsp::arrrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityAllPlayerGoldHeroGetInfoRsp::mutable_arrrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityAllPlayerGoldHeroGetInfoRsp::add_arrrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TOpenActivityAllPlayerGoldHeroGetInfoRsp::arrrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TOpenActivityAllPlayerGoldHeroGetInfoRsp::mutable_arrrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityAllPlayerGoldHeroGetInfoRsp.ArrRewardInfo)
  return &arrrewardinfo_;
}

// -------------------------------------------------------------------

// TOpenActivityAllPlayerGoldHeroGetRewardReq

// optional uint32 Id = 1;
inline bool TOpenActivityAllPlayerGoldHeroGetRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityAllPlayerGoldHeroGetRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityAllPlayerGoldHeroGetRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityAllPlayerGoldHeroGetRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TOpenActivityAllPlayerGoldHeroGetRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityAllPlayerGoldHeroGetRewardReq.Id)
  return id_;
}
inline void TOpenActivityAllPlayerGoldHeroGetRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityAllPlayerGoldHeroGetRewardReq.Id)
}

// -------------------------------------------------------------------

// TOpenActivityAllPlayerGoldHeroGetRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOpenActivityAllPlayerGoldHeroGetRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOpenActivityAllPlayerGoldHeroGetRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOpenActivityAllPlayerGoldHeroGetRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOpenActivityAllPlayerGoldHeroGetRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOpenActivityAllPlayerGoldHeroGetRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOpenActivityAllPlayerGoldHeroGetRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOpenActivityAllPlayerGoldHeroGetRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityAllPlayerGoldHeroGetRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TOpenActivityTowerPassLayerGetInfoRsp

// optional uint32 PassLayer = 1;
inline bool TOpenActivityTowerPassLayerGetInfoRsp::has_passlayer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityTowerPassLayerGetInfoRsp::set_has_passlayer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityTowerPassLayerGetInfoRsp::clear_has_passlayer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityTowerPassLayerGetInfoRsp::clear_passlayer() {
  passlayer_ = 0u;
  clear_has_passlayer();
}
inline ::google::protobuf::uint32 TOpenActivityTowerPassLayerGetInfoRsp::passlayer() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityTowerPassLayerGetInfoRsp.PassLayer)
  return passlayer_;
}
inline void TOpenActivityTowerPassLayerGetInfoRsp::set_passlayer(::google::protobuf::uint32 value) {
  set_has_passlayer();
  passlayer_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityTowerPassLayerGetInfoRsp.PassLayer)
}

// repeated .pb.TActivityRewardInfo ArrRewardInfo = 2;
inline int TOpenActivityTowerPassLayerGetInfoRsp::arrrewardinfo_size() const {
  return arrrewardinfo_.size();
}
inline void TOpenActivityTowerPassLayerGetInfoRsp::clear_arrrewardinfo() {
  arrrewardinfo_.Clear();
}
inline const ::pb::TActivityRewardInfo& TOpenActivityTowerPassLayerGetInfoRsp::arrrewardinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityTowerPassLayerGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Get(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityTowerPassLayerGetInfoRsp::mutable_arrrewardinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityTowerPassLayerGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Mutable(index);
}
inline ::pb::TActivityRewardInfo* TOpenActivityTowerPassLayerGetInfoRsp::add_arrrewardinfo() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityTowerPassLayerGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >&
TOpenActivityTowerPassLayerGetInfoRsp::arrrewardinfo() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityTowerPassLayerGetInfoRsp.ArrRewardInfo)
  return arrrewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActivityRewardInfo >*
TOpenActivityTowerPassLayerGetInfoRsp::mutable_arrrewardinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityTowerPassLayerGetInfoRsp.ArrRewardInfo)
  return &arrrewardinfo_;
}

// -------------------------------------------------------------------

// TOpenActivityTowerPassLayerGetRewardReq

// optional uint32 Id = 1;
inline bool TOpenActivityTowerPassLayerGetRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TOpenActivityTowerPassLayerGetRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TOpenActivityTowerPassLayerGetRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TOpenActivityTowerPassLayerGetRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TOpenActivityTowerPassLayerGetRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityTowerPassLayerGetRewardReq.Id)
  return id_;
}
inline void TOpenActivityTowerPassLayerGetRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TOpenActivityTowerPassLayerGetRewardReq.Id)
}

// -------------------------------------------------------------------

// TOpenActivityTowerPassLayerGetRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TOpenActivityTowerPassLayerGetRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TOpenActivityTowerPassLayerGetRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TOpenActivityTowerPassLayerGetRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TOpenActivityTowerPassLayerGetRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TOpenActivityTowerPassLayerGetRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TOpenActivityTowerPassLayerGetRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TOpenActivityTowerPassLayerGetRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TOpenActivityTowerPassLayerGetRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TOpenActivityTowerPassLayerGetRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TOpenActivityTowerPassLayerGetRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TOpenActivityTowerPassLayerGetRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TOpenActivityTowerPassLayerGetRewardRsp.ArrReward)
  return &arrreward_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fOpenActivity_2eproto__INCLUDED
