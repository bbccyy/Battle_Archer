// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/TreasureSystem.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/TreasureSystem.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TTreasureAccSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTreasureAccSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTreasureItemAccSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTreasureItemAccSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTreasureUnionAccSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTreasureUnionAccSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTreasureGetTreasureSystemInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTreasureGetTreasureSystemInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTreasureSystemRewardAchievementReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTreasureSystemRewardAchievementReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTreasureSystemNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTreasureSystemNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTreasureSystemActivityUnionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTreasureSystemActivityUnionReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ETreasureAccType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fTreasureSystem_2eproto() {
  protobuf_AddDesc_net_2fTreasureSystem_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/TreasureSystem.proto");
  GOOGLE_CHECK(file != NULL);
  TTreasureAccSingle_descriptor_ = file->message_type(0);
  static const int TTreasureAccSingle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureAccSingle, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureAccSingle, progress_),
  };
  TTreasureAccSingle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTreasureAccSingle_descriptor_,
      TTreasureAccSingle::default_instance_,
      TTreasureAccSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureAccSingle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureAccSingle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTreasureAccSingle));
  TTreasureItemAccSingle_descriptor_ = file->message_type(1);
  static const int TTreasureItemAccSingle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureItemAccSingle, treasuretid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureItemAccSingle, accarr_),
  };
  TTreasureItemAccSingle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTreasureItemAccSingle_descriptor_,
      TTreasureItemAccSingle::default_instance_,
      TTreasureItemAccSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureItemAccSingle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureItemAccSingle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTreasureItemAccSingle));
  TTreasureUnionAccSingle_descriptor_ = file->message_type(2);
  static const int TTreasureUnionAccSingle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureUnionAccSingle, uniontid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureUnionAccSingle, accarr_),
  };
  TTreasureUnionAccSingle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTreasureUnionAccSingle_descriptor_,
      TTreasureUnionAccSingle::default_instance_,
      TTreasureUnionAccSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureUnionAccSingle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureUnionAccSingle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTreasureUnionAccSingle));
  TTreasureGetTreasureSystemInfoRsp_descriptor_ = file->message_type(3);
  static const int TTreasureGetTreasureSystemInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureGetTreasureSystemInfoRsp, treasureaccarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureGetTreasureSystemInfoRsp, rewardedarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureGetTreasureSystemInfoRsp, unionarr_),
  };
  TTreasureGetTreasureSystemInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTreasureGetTreasureSystemInfoRsp_descriptor_,
      TTreasureGetTreasureSystemInfoRsp::default_instance_,
      TTreasureGetTreasureSystemInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureGetTreasureSystemInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureGetTreasureSystemInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTreasureGetTreasureSystemInfoRsp));
  TTreasureSystemRewardAchievementReq_descriptor_ = file->message_type(4);
  static const int TTreasureSystemRewardAchievementReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureSystemRewardAchievementReq, tid_),
  };
  TTreasureSystemRewardAchievementReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTreasureSystemRewardAchievementReq_descriptor_,
      TTreasureSystemRewardAchievementReq::default_instance_,
      TTreasureSystemRewardAchievementReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureSystemRewardAchievementReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureSystemRewardAchievementReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTreasureSystemRewardAchievementReq));
  TTreasureSystemNotify_descriptor_ = file->message_type(5);
  static const int TTreasureSystemNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureSystemNotify, treasureaccarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureSystemNotify, unionarr_),
  };
  TTreasureSystemNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTreasureSystemNotify_descriptor_,
      TTreasureSystemNotify::default_instance_,
      TTreasureSystemNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureSystemNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureSystemNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTreasureSystemNotify));
  TTreasureSystemActivityUnionReq_descriptor_ = file->message_type(6);
  static const int TTreasureSystemActivityUnionReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureSystemActivityUnionReq, tid_),
  };
  TTreasureSystemActivityUnionReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTreasureSystemActivityUnionReq_descriptor_,
      TTreasureSystemActivityUnionReq::default_instance_,
      TTreasureSystemActivityUnionReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureSystemActivityUnionReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTreasureSystemActivityUnionReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTreasureSystemActivityUnionReq));
  ETreasureAccType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fTreasureSystem_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTreasureAccSingle_descriptor_, &TTreasureAccSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTreasureItemAccSingle_descriptor_, &TTreasureItemAccSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTreasureUnionAccSingle_descriptor_, &TTreasureUnionAccSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTreasureGetTreasureSystemInfoRsp_descriptor_, &TTreasureGetTreasureSystemInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTreasureSystemRewardAchievementReq_descriptor_, &TTreasureSystemRewardAchievementReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTreasureSystemNotify_descriptor_, &TTreasureSystemNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTreasureSystemActivityUnionReq_descriptor_, &TTreasureSystemActivityUnionReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fTreasureSystem_2eproto() {
  delete TTreasureAccSingle::default_instance_;
  delete TTreasureAccSingle_reflection_;
  delete TTreasureItemAccSingle::default_instance_;
  delete TTreasureItemAccSingle_reflection_;
  delete TTreasureUnionAccSingle::default_instance_;
  delete TTreasureUnionAccSingle_reflection_;
  delete TTreasureGetTreasureSystemInfoRsp::default_instance_;
  delete TTreasureGetTreasureSystemInfoRsp_reflection_;
  delete TTreasureSystemRewardAchievementReq::default_instance_;
  delete TTreasureSystemRewardAchievementReq_reflection_;
  delete TTreasureSystemNotify::default_instance_;
  delete TTreasureSystemNotify_reflection_;
  delete TTreasureSystemActivityUnionReq::default_instance_;
  delete TTreasureSystemActivityUnionReq_reflection_;
}

void protobuf_AddDesc_net_2fTreasureSystem_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030net/TreasureSystem.proto\022\002pb\"H\n\022TTreas"
    "ureAccSingle\022 \n\002Id\030\002 \001(\0162\024.pb.ETreasureA"
    "ccType\022\020\n\010Progress\030\003 \001(\004\"U\n\026TTreasureIte"
    "mAccSingle\022\023\n\013TreasureTid\030\001 \001(\r\022&\n\006AccAr"
    "r\030\003 \003(\0132\026.pb.TTreasureAccSingle\"S\n\027TTrea"
    "sureUnionAccSingle\022\020\n\010UnionTid\030\001 \001(\r\022&\n\006"
    "AccArr\030\003 \003(\0132\026.pb.TTreasureAccSingle\"\233\001\n"
    "!TTreasureGetTreasureSystemInfoRsp\0222\n\016Tr"
    "easureAccArr\030\001 \003(\0132\032.pb.TTreasureItemAcc"
    "Single\022\023\n\013RewardedArr\030\002 \003(\r\022-\n\010UnionArr\030"
    "\003 \003(\0132\033.pb.TTreasureUnionAccSingle\"2\n#TT"
    "reasureSystemRewardAchievementReq\022\013\n\003Tid"
    "\030\001 \001(\r\"z\n\025TTreasureSystemNotify\0222\n\016Treas"
    "ureAccArr\030\001 \003(\0132\032.pb.TTreasureItemAccSin"
    "gle\022-\n\010UnionArr\030\003 \003(\0132\033.pb.TTreasureUnio"
    "nAccSingle\".\n\037TTreasureSystemActivityUni"
    "onReq\022\013\n\003Tid\030\001 \001(\r*\373\004\n\020ETreasureAccType\022"
    "\031\n\025LevyCrossWinUserCount\020\001\022\017\n\013GoldHeroNu"
    "m\020\002\022\033\n\027PassInstanceCommonCount\020\003\022\022\n\016Pass"
    "TowerCount\020\004\022\026\n\022PassCampTowerCount\020\005\022\032\n\026"
    "PassInstanceEliteCount\020\006\022\030\n\024WorldBossDam"
    "ageTotal\020\007\022\024\n\020PubGoldHeroCount\020\010\022\020\n\014PubC"
    "ampCount\020\t\022\027\n\023PassExpeditionCount\020\n\022\027\n\023A"
    "renaChallengeCount\020\013\022 \n\034ArenaHighOrderCh"
    "allengeCount\020\014\022\032\n\026BeastInstanceBossCount"
    "\020\r\022\024\n\020LevyWinUserCount\020\016\022\027\n\023GuildWarAtta"
    "ckCount\020\017\022\031\n\025TowerDefensePassRound\020\020\022\037\n\033"
    "CrossChallengeGuessWinCount\020\021\022\022\n\016Adventu"
    "reCount\020\022\022\024\n\020PubgSurviveRound\020\023\022\016\n\nPubgW"
    "inNum\020\024\022\037\n\033AllianceDoneFiveStarTaskNum\020\025"
    "\022\027\n\023AllianceDoneTaskNum\020\026\022\030\n\024CrossChalle"
    "ngeWinNum\020\027\022\025\n\021ExecuteConsumeNum\020\030\022\024\n\020Co"
    "nquerAttackNum\020\031", 1296);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/TreasureSystem.proto", &protobuf_RegisterTypes);
  TTreasureAccSingle::default_instance_ = new TTreasureAccSingle();
  TTreasureItemAccSingle::default_instance_ = new TTreasureItemAccSingle();
  TTreasureUnionAccSingle::default_instance_ = new TTreasureUnionAccSingle();
  TTreasureGetTreasureSystemInfoRsp::default_instance_ = new TTreasureGetTreasureSystemInfoRsp();
  TTreasureSystemRewardAchievementReq::default_instance_ = new TTreasureSystemRewardAchievementReq();
  TTreasureSystemNotify::default_instance_ = new TTreasureSystemNotify();
  TTreasureSystemActivityUnionReq::default_instance_ = new TTreasureSystemActivityUnionReq();
  TTreasureAccSingle::default_instance_->InitAsDefaultInstance();
  TTreasureItemAccSingle::default_instance_->InitAsDefaultInstance();
  TTreasureUnionAccSingle::default_instance_->InitAsDefaultInstance();
  TTreasureGetTreasureSystemInfoRsp::default_instance_->InitAsDefaultInstance();
  TTreasureSystemRewardAchievementReq::default_instance_->InitAsDefaultInstance();
  TTreasureSystemNotify::default_instance_->InitAsDefaultInstance();
  TTreasureSystemActivityUnionReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fTreasureSystem_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fTreasureSystem_2eproto {
  StaticDescriptorInitializer_net_2fTreasureSystem_2eproto() {
    protobuf_AddDesc_net_2fTreasureSystem_2eproto();
  }
} static_descriptor_initializer_net_2fTreasureSystem_2eproto_;
const ::google::protobuf::EnumDescriptor* ETreasureAccType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ETreasureAccType_descriptor_;
}
bool ETreasureAccType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TTreasureAccSingle::kIdFieldNumber;
const int TTreasureAccSingle::kProgressFieldNumber;
#endif  // !_MSC_VER

TTreasureAccSingle::TTreasureAccSingle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTreasureAccSingle)
}

void TTreasureAccSingle::InitAsDefaultInstance() {
}

TTreasureAccSingle::TTreasureAccSingle(const TTreasureAccSingle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTreasureAccSingle)
}

void TTreasureAccSingle::SharedCtor() {
  _cached_size_ = 0;
  id_ = 1;
  progress_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTreasureAccSingle::~TTreasureAccSingle() {
  // @@protoc_insertion_point(destructor:pb.TTreasureAccSingle)
  SharedDtor();
}

void TTreasureAccSingle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTreasureAccSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTreasureAccSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTreasureAccSingle_descriptor_;
}

const TTreasureAccSingle& TTreasureAccSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTreasureSystem_2eproto();
  return *default_instance_;
}

TTreasureAccSingle* TTreasureAccSingle::default_instance_ = NULL;

TTreasureAccSingle* TTreasureAccSingle::New() const {
  return new TTreasureAccSingle;
}

void TTreasureAccSingle::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    id_ = 1;
    progress_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTreasureAccSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTreasureAccSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.ETreasureAccType Id = 2;
      case 2: {
        if (tag == 16) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ETreasureAccType_IsValid(value)) {
            set_id(static_cast< ::pb::ETreasureAccType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Progress;
        break;
      }

      // optional uint64 Progress = 3;
      case 3: {
        if (tag == 24) {
         parse_Progress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &progress_)));
          set_has_progress();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTreasureAccSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTreasureAccSingle)
  return false;
#undef DO_
}

void TTreasureAccSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTreasureAccSingle)
  // optional .pb.ETreasureAccType Id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->id(), output);
  }

  // optional uint64 Progress = 3;
  if (has_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->progress(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTreasureAccSingle)
}

::google::protobuf::uint8* TTreasureAccSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTreasureAccSingle)
  // optional .pb.ETreasureAccType Id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->id(), target);
  }

  // optional uint64 Progress = 3;
  if (has_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->progress(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTreasureAccSingle)
  return target;
}

int TTreasureAccSingle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.ETreasureAccType Id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
    }

    // optional uint64 Progress = 3;
    if (has_progress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->progress());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTreasureAccSingle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTreasureAccSingle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTreasureAccSingle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTreasureAccSingle::MergeFrom(const TTreasureAccSingle& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_progress()) {
      set_progress(from.progress());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTreasureAccSingle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTreasureAccSingle::CopyFrom(const TTreasureAccSingle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTreasureAccSingle::IsInitialized() const {

  return true;
}

void TTreasureAccSingle::Swap(TTreasureAccSingle* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(progress_, other->progress_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTreasureAccSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTreasureAccSingle_descriptor_;
  metadata.reflection = TTreasureAccSingle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTreasureItemAccSingle::kTreasureTidFieldNumber;
const int TTreasureItemAccSingle::kAccArrFieldNumber;
#endif  // !_MSC_VER

TTreasureItemAccSingle::TTreasureItemAccSingle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTreasureItemAccSingle)
}

void TTreasureItemAccSingle::InitAsDefaultInstance() {
}

TTreasureItemAccSingle::TTreasureItemAccSingle(const TTreasureItemAccSingle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTreasureItemAccSingle)
}

void TTreasureItemAccSingle::SharedCtor() {
  _cached_size_ = 0;
  treasuretid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTreasureItemAccSingle::~TTreasureItemAccSingle() {
  // @@protoc_insertion_point(destructor:pb.TTreasureItemAccSingle)
  SharedDtor();
}

void TTreasureItemAccSingle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTreasureItemAccSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTreasureItemAccSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTreasureItemAccSingle_descriptor_;
}

const TTreasureItemAccSingle& TTreasureItemAccSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTreasureSystem_2eproto();
  return *default_instance_;
}

TTreasureItemAccSingle* TTreasureItemAccSingle::default_instance_ = NULL;

TTreasureItemAccSingle* TTreasureItemAccSingle::New() const {
  return new TTreasureItemAccSingle;
}

void TTreasureItemAccSingle::Clear() {
  treasuretid_ = 0u;
  accarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTreasureItemAccSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTreasureItemAccSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TreasureTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &treasuretid_)));
          set_has_treasuretid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_AccArr;
        break;
      }

      // repeated .pb.TTreasureAccSingle AccArr = 3;
      case 3: {
        if (tag == 26) {
         parse_AccArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_accarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_AccArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTreasureItemAccSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTreasureItemAccSingle)
  return false;
#undef DO_
}

void TTreasureItemAccSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTreasureItemAccSingle)
  // optional uint32 TreasureTid = 1;
  if (has_treasuretid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->treasuretid(), output);
  }

  // repeated .pb.TTreasureAccSingle AccArr = 3;
  for (int i = 0; i < this->accarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->accarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTreasureItemAccSingle)
}

::google::protobuf::uint8* TTreasureItemAccSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTreasureItemAccSingle)
  // optional uint32 TreasureTid = 1;
  if (has_treasuretid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->treasuretid(), target);
  }

  // repeated .pb.TTreasureAccSingle AccArr = 3;
  for (int i = 0; i < this->accarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->accarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTreasureItemAccSingle)
  return target;
}

int TTreasureItemAccSingle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TreasureTid = 1;
    if (has_treasuretid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->treasuretid());
    }

  }
  // repeated .pb.TTreasureAccSingle AccArr = 3;
  total_size += 1 * this->accarr_size();
  for (int i = 0; i < this->accarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->accarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTreasureItemAccSingle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTreasureItemAccSingle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTreasureItemAccSingle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTreasureItemAccSingle::MergeFrom(const TTreasureItemAccSingle& from) {
  GOOGLE_CHECK_NE(&from, this);
  accarr_.MergeFrom(from.accarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_treasuretid()) {
      set_treasuretid(from.treasuretid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTreasureItemAccSingle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTreasureItemAccSingle::CopyFrom(const TTreasureItemAccSingle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTreasureItemAccSingle::IsInitialized() const {

  return true;
}

void TTreasureItemAccSingle::Swap(TTreasureItemAccSingle* other) {
  if (other != this) {
    std::swap(treasuretid_, other->treasuretid_);
    accarr_.Swap(&other->accarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTreasureItemAccSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTreasureItemAccSingle_descriptor_;
  metadata.reflection = TTreasureItemAccSingle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTreasureUnionAccSingle::kUnionTidFieldNumber;
const int TTreasureUnionAccSingle::kAccArrFieldNumber;
#endif  // !_MSC_VER

TTreasureUnionAccSingle::TTreasureUnionAccSingle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTreasureUnionAccSingle)
}

void TTreasureUnionAccSingle::InitAsDefaultInstance() {
}

TTreasureUnionAccSingle::TTreasureUnionAccSingle(const TTreasureUnionAccSingle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTreasureUnionAccSingle)
}

void TTreasureUnionAccSingle::SharedCtor() {
  _cached_size_ = 0;
  uniontid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTreasureUnionAccSingle::~TTreasureUnionAccSingle() {
  // @@protoc_insertion_point(destructor:pb.TTreasureUnionAccSingle)
  SharedDtor();
}

void TTreasureUnionAccSingle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTreasureUnionAccSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTreasureUnionAccSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTreasureUnionAccSingle_descriptor_;
}

const TTreasureUnionAccSingle& TTreasureUnionAccSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTreasureSystem_2eproto();
  return *default_instance_;
}

TTreasureUnionAccSingle* TTreasureUnionAccSingle::default_instance_ = NULL;

TTreasureUnionAccSingle* TTreasureUnionAccSingle::New() const {
  return new TTreasureUnionAccSingle;
}

void TTreasureUnionAccSingle::Clear() {
  uniontid_ = 0u;
  accarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTreasureUnionAccSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTreasureUnionAccSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 UnionTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniontid_)));
          set_has_uniontid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_AccArr;
        break;
      }

      // repeated .pb.TTreasureAccSingle AccArr = 3;
      case 3: {
        if (tag == 26) {
         parse_AccArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_accarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_AccArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTreasureUnionAccSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTreasureUnionAccSingle)
  return false;
#undef DO_
}

void TTreasureUnionAccSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTreasureUnionAccSingle)
  // optional uint32 UnionTid = 1;
  if (has_uniontid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uniontid(), output);
  }

  // repeated .pb.TTreasureAccSingle AccArr = 3;
  for (int i = 0; i < this->accarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->accarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTreasureUnionAccSingle)
}

::google::protobuf::uint8* TTreasureUnionAccSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTreasureUnionAccSingle)
  // optional uint32 UnionTid = 1;
  if (has_uniontid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uniontid(), target);
  }

  // repeated .pb.TTreasureAccSingle AccArr = 3;
  for (int i = 0; i < this->accarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->accarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTreasureUnionAccSingle)
  return target;
}

int TTreasureUnionAccSingle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 UnionTid = 1;
    if (has_uniontid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uniontid());
    }

  }
  // repeated .pb.TTreasureAccSingle AccArr = 3;
  total_size += 1 * this->accarr_size();
  for (int i = 0; i < this->accarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->accarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTreasureUnionAccSingle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTreasureUnionAccSingle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTreasureUnionAccSingle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTreasureUnionAccSingle::MergeFrom(const TTreasureUnionAccSingle& from) {
  GOOGLE_CHECK_NE(&from, this);
  accarr_.MergeFrom(from.accarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uniontid()) {
      set_uniontid(from.uniontid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTreasureUnionAccSingle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTreasureUnionAccSingle::CopyFrom(const TTreasureUnionAccSingle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTreasureUnionAccSingle::IsInitialized() const {

  return true;
}

void TTreasureUnionAccSingle::Swap(TTreasureUnionAccSingle* other) {
  if (other != this) {
    std::swap(uniontid_, other->uniontid_);
    accarr_.Swap(&other->accarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTreasureUnionAccSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTreasureUnionAccSingle_descriptor_;
  metadata.reflection = TTreasureUnionAccSingle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTreasureGetTreasureSystemInfoRsp::kTreasureAccArrFieldNumber;
const int TTreasureGetTreasureSystemInfoRsp::kRewardedArrFieldNumber;
const int TTreasureGetTreasureSystemInfoRsp::kUnionArrFieldNumber;
#endif  // !_MSC_VER

TTreasureGetTreasureSystemInfoRsp::TTreasureGetTreasureSystemInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTreasureGetTreasureSystemInfoRsp)
}

void TTreasureGetTreasureSystemInfoRsp::InitAsDefaultInstance() {
}

TTreasureGetTreasureSystemInfoRsp::TTreasureGetTreasureSystemInfoRsp(const TTreasureGetTreasureSystemInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTreasureGetTreasureSystemInfoRsp)
}

void TTreasureGetTreasureSystemInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTreasureGetTreasureSystemInfoRsp::~TTreasureGetTreasureSystemInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TTreasureGetTreasureSystemInfoRsp)
  SharedDtor();
}

void TTreasureGetTreasureSystemInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTreasureGetTreasureSystemInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTreasureGetTreasureSystemInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTreasureGetTreasureSystemInfoRsp_descriptor_;
}

const TTreasureGetTreasureSystemInfoRsp& TTreasureGetTreasureSystemInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTreasureSystem_2eproto();
  return *default_instance_;
}

TTreasureGetTreasureSystemInfoRsp* TTreasureGetTreasureSystemInfoRsp::default_instance_ = NULL;

TTreasureGetTreasureSystemInfoRsp* TTreasureGetTreasureSystemInfoRsp::New() const {
  return new TTreasureGetTreasureSystemInfoRsp;
}

void TTreasureGetTreasureSystemInfoRsp::Clear() {
  treasureaccarr_.Clear();
  rewardedarr_.Clear();
  unionarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTreasureGetTreasureSystemInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTreasureGetTreasureSystemInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TTreasureItemAccSingle TreasureAccArr = 1;
      case 1: {
        if (tag == 10) {
         parse_TreasureAccArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_treasureaccarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_TreasureAccArr;
        if (input->ExpectTag(16)) goto parse_RewardedArr;
        break;
      }

      // repeated uint32 RewardedArr = 2;
      case 2: {
        if (tag == 16) {
         parse_RewardedArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_rewardedarr())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_rewardedarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardedArr;
        if (input->ExpectTag(26)) goto parse_UnionArr;
        break;
      }

      // repeated .pb.TTreasureUnionAccSingle UnionArr = 3;
      case 3: {
        if (tag == 26) {
         parse_UnionArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_unionarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_UnionArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTreasureGetTreasureSystemInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTreasureGetTreasureSystemInfoRsp)
  return false;
#undef DO_
}

void TTreasureGetTreasureSystemInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTreasureGetTreasureSystemInfoRsp)
  // repeated .pb.TTreasureItemAccSingle TreasureAccArr = 1;
  for (int i = 0; i < this->treasureaccarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->treasureaccarr(i), output);
  }

  // repeated uint32 RewardedArr = 2;
  for (int i = 0; i < this->rewardedarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->rewardedarr(i), output);
  }

  // repeated .pb.TTreasureUnionAccSingle UnionArr = 3;
  for (int i = 0; i < this->unionarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->unionarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTreasureGetTreasureSystemInfoRsp)
}

::google::protobuf::uint8* TTreasureGetTreasureSystemInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTreasureGetTreasureSystemInfoRsp)
  // repeated .pb.TTreasureItemAccSingle TreasureAccArr = 1;
  for (int i = 0; i < this->treasureaccarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->treasureaccarr(i), target);
  }

  // repeated uint32 RewardedArr = 2;
  for (int i = 0; i < this->rewardedarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->rewardedarr(i), target);
  }

  // repeated .pb.TTreasureUnionAccSingle UnionArr = 3;
  for (int i = 0; i < this->unionarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->unionarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTreasureGetTreasureSystemInfoRsp)
  return target;
}

int TTreasureGetTreasureSystemInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TTreasureItemAccSingle TreasureAccArr = 1;
  total_size += 1 * this->treasureaccarr_size();
  for (int i = 0; i < this->treasureaccarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->treasureaccarr(i));
  }

  // repeated uint32 RewardedArr = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->rewardedarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->rewardedarr(i));
    }
    total_size += 1 * this->rewardedarr_size() + data_size;
  }

  // repeated .pb.TTreasureUnionAccSingle UnionArr = 3;
  total_size += 1 * this->unionarr_size();
  for (int i = 0; i < this->unionarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->unionarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTreasureGetTreasureSystemInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTreasureGetTreasureSystemInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTreasureGetTreasureSystemInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTreasureGetTreasureSystemInfoRsp::MergeFrom(const TTreasureGetTreasureSystemInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  treasureaccarr_.MergeFrom(from.treasureaccarr_);
  rewardedarr_.MergeFrom(from.rewardedarr_);
  unionarr_.MergeFrom(from.unionarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTreasureGetTreasureSystemInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTreasureGetTreasureSystemInfoRsp::CopyFrom(const TTreasureGetTreasureSystemInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTreasureGetTreasureSystemInfoRsp::IsInitialized() const {

  return true;
}

void TTreasureGetTreasureSystemInfoRsp::Swap(TTreasureGetTreasureSystemInfoRsp* other) {
  if (other != this) {
    treasureaccarr_.Swap(&other->treasureaccarr_);
    rewardedarr_.Swap(&other->rewardedarr_);
    unionarr_.Swap(&other->unionarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTreasureGetTreasureSystemInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTreasureGetTreasureSystemInfoRsp_descriptor_;
  metadata.reflection = TTreasureGetTreasureSystemInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTreasureSystemRewardAchievementReq::kTidFieldNumber;
#endif  // !_MSC_VER

TTreasureSystemRewardAchievementReq::TTreasureSystemRewardAchievementReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTreasureSystemRewardAchievementReq)
}

void TTreasureSystemRewardAchievementReq::InitAsDefaultInstance() {
}

TTreasureSystemRewardAchievementReq::TTreasureSystemRewardAchievementReq(const TTreasureSystemRewardAchievementReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTreasureSystemRewardAchievementReq)
}

void TTreasureSystemRewardAchievementReq::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTreasureSystemRewardAchievementReq::~TTreasureSystemRewardAchievementReq() {
  // @@protoc_insertion_point(destructor:pb.TTreasureSystemRewardAchievementReq)
  SharedDtor();
}

void TTreasureSystemRewardAchievementReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTreasureSystemRewardAchievementReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTreasureSystemRewardAchievementReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTreasureSystemRewardAchievementReq_descriptor_;
}

const TTreasureSystemRewardAchievementReq& TTreasureSystemRewardAchievementReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTreasureSystem_2eproto();
  return *default_instance_;
}

TTreasureSystemRewardAchievementReq* TTreasureSystemRewardAchievementReq::default_instance_ = NULL;

TTreasureSystemRewardAchievementReq* TTreasureSystemRewardAchievementReq::New() const {
  return new TTreasureSystemRewardAchievementReq;
}

void TTreasureSystemRewardAchievementReq::Clear() {
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTreasureSystemRewardAchievementReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTreasureSystemRewardAchievementReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTreasureSystemRewardAchievementReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTreasureSystemRewardAchievementReq)
  return false;
#undef DO_
}

void TTreasureSystemRewardAchievementReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTreasureSystemRewardAchievementReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTreasureSystemRewardAchievementReq)
}

::google::protobuf::uint8* TTreasureSystemRewardAchievementReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTreasureSystemRewardAchievementReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTreasureSystemRewardAchievementReq)
  return target;
}

int TTreasureSystemRewardAchievementReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTreasureSystemRewardAchievementReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTreasureSystemRewardAchievementReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTreasureSystemRewardAchievementReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTreasureSystemRewardAchievementReq::MergeFrom(const TTreasureSystemRewardAchievementReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTreasureSystemRewardAchievementReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTreasureSystemRewardAchievementReq::CopyFrom(const TTreasureSystemRewardAchievementReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTreasureSystemRewardAchievementReq::IsInitialized() const {

  return true;
}

void TTreasureSystemRewardAchievementReq::Swap(TTreasureSystemRewardAchievementReq* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTreasureSystemRewardAchievementReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTreasureSystemRewardAchievementReq_descriptor_;
  metadata.reflection = TTreasureSystemRewardAchievementReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTreasureSystemNotify::kTreasureAccArrFieldNumber;
const int TTreasureSystemNotify::kUnionArrFieldNumber;
#endif  // !_MSC_VER

TTreasureSystemNotify::TTreasureSystemNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTreasureSystemNotify)
}

void TTreasureSystemNotify::InitAsDefaultInstance() {
}

TTreasureSystemNotify::TTreasureSystemNotify(const TTreasureSystemNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTreasureSystemNotify)
}

void TTreasureSystemNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTreasureSystemNotify::~TTreasureSystemNotify() {
  // @@protoc_insertion_point(destructor:pb.TTreasureSystemNotify)
  SharedDtor();
}

void TTreasureSystemNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTreasureSystemNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTreasureSystemNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTreasureSystemNotify_descriptor_;
}

const TTreasureSystemNotify& TTreasureSystemNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTreasureSystem_2eproto();
  return *default_instance_;
}

TTreasureSystemNotify* TTreasureSystemNotify::default_instance_ = NULL;

TTreasureSystemNotify* TTreasureSystemNotify::New() const {
  return new TTreasureSystemNotify;
}

void TTreasureSystemNotify::Clear() {
  treasureaccarr_.Clear();
  unionarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTreasureSystemNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTreasureSystemNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TTreasureItemAccSingle TreasureAccArr = 1;
      case 1: {
        if (tag == 10) {
         parse_TreasureAccArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_treasureaccarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_TreasureAccArr;
        if (input->ExpectTag(26)) goto parse_UnionArr;
        break;
      }

      // repeated .pb.TTreasureUnionAccSingle UnionArr = 3;
      case 3: {
        if (tag == 26) {
         parse_UnionArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_unionarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_UnionArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTreasureSystemNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTreasureSystemNotify)
  return false;
#undef DO_
}

void TTreasureSystemNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTreasureSystemNotify)
  // repeated .pb.TTreasureItemAccSingle TreasureAccArr = 1;
  for (int i = 0; i < this->treasureaccarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->treasureaccarr(i), output);
  }

  // repeated .pb.TTreasureUnionAccSingle UnionArr = 3;
  for (int i = 0; i < this->unionarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->unionarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTreasureSystemNotify)
}

::google::protobuf::uint8* TTreasureSystemNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTreasureSystemNotify)
  // repeated .pb.TTreasureItemAccSingle TreasureAccArr = 1;
  for (int i = 0; i < this->treasureaccarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->treasureaccarr(i), target);
  }

  // repeated .pb.TTreasureUnionAccSingle UnionArr = 3;
  for (int i = 0; i < this->unionarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->unionarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTreasureSystemNotify)
  return target;
}

int TTreasureSystemNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TTreasureItemAccSingle TreasureAccArr = 1;
  total_size += 1 * this->treasureaccarr_size();
  for (int i = 0; i < this->treasureaccarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->treasureaccarr(i));
  }

  // repeated .pb.TTreasureUnionAccSingle UnionArr = 3;
  total_size += 1 * this->unionarr_size();
  for (int i = 0; i < this->unionarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->unionarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTreasureSystemNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTreasureSystemNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTreasureSystemNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTreasureSystemNotify::MergeFrom(const TTreasureSystemNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  treasureaccarr_.MergeFrom(from.treasureaccarr_);
  unionarr_.MergeFrom(from.unionarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTreasureSystemNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTreasureSystemNotify::CopyFrom(const TTreasureSystemNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTreasureSystemNotify::IsInitialized() const {

  return true;
}

void TTreasureSystemNotify::Swap(TTreasureSystemNotify* other) {
  if (other != this) {
    treasureaccarr_.Swap(&other->treasureaccarr_);
    unionarr_.Swap(&other->unionarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTreasureSystemNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTreasureSystemNotify_descriptor_;
  metadata.reflection = TTreasureSystemNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTreasureSystemActivityUnionReq::kTidFieldNumber;
#endif  // !_MSC_VER

TTreasureSystemActivityUnionReq::TTreasureSystemActivityUnionReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTreasureSystemActivityUnionReq)
}

void TTreasureSystemActivityUnionReq::InitAsDefaultInstance() {
}

TTreasureSystemActivityUnionReq::TTreasureSystemActivityUnionReq(const TTreasureSystemActivityUnionReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTreasureSystemActivityUnionReq)
}

void TTreasureSystemActivityUnionReq::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTreasureSystemActivityUnionReq::~TTreasureSystemActivityUnionReq() {
  // @@protoc_insertion_point(destructor:pb.TTreasureSystemActivityUnionReq)
  SharedDtor();
}

void TTreasureSystemActivityUnionReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTreasureSystemActivityUnionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTreasureSystemActivityUnionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTreasureSystemActivityUnionReq_descriptor_;
}

const TTreasureSystemActivityUnionReq& TTreasureSystemActivityUnionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTreasureSystem_2eproto();
  return *default_instance_;
}

TTreasureSystemActivityUnionReq* TTreasureSystemActivityUnionReq::default_instance_ = NULL;

TTreasureSystemActivityUnionReq* TTreasureSystemActivityUnionReq::New() const {
  return new TTreasureSystemActivityUnionReq;
}

void TTreasureSystemActivityUnionReq::Clear() {
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTreasureSystemActivityUnionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTreasureSystemActivityUnionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTreasureSystemActivityUnionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTreasureSystemActivityUnionReq)
  return false;
#undef DO_
}

void TTreasureSystemActivityUnionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTreasureSystemActivityUnionReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTreasureSystemActivityUnionReq)
}

::google::protobuf::uint8* TTreasureSystemActivityUnionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTreasureSystemActivityUnionReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTreasureSystemActivityUnionReq)
  return target;
}

int TTreasureSystemActivityUnionReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTreasureSystemActivityUnionReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTreasureSystemActivityUnionReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTreasureSystemActivityUnionReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTreasureSystemActivityUnionReq::MergeFrom(const TTreasureSystemActivityUnionReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTreasureSystemActivityUnionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTreasureSystemActivityUnionReq::CopyFrom(const TTreasureSystemActivityUnionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTreasureSystemActivityUnionReq::IsInitialized() const {

  return true;
}

void TTreasureSystemActivityUnionReq::Swap(TTreasureSystemActivityUnionReq* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTreasureSystemActivityUnionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTreasureSystemActivityUnionReq_descriptor_;
  metadata.reflection = TTreasureSystemActivityUnionReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
