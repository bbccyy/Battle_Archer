// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Artifact.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/Artifact.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TArtifactInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TArtifactFreeRecruitEffect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactFreeRecruitEffect_reflection_ = NULL;
const ::google::protobuf::Descriptor* TArtifactEffectInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactEffectInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TArtifactGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TArtifactStarUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactStarUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TArtifactCombineArtifactReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactCombineArtifactReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TArtifactActiveFreeEffect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactActiveFreeEffect_reflection_ = NULL;
const ::google::protobuf::Descriptor* TArtifactActivePubGainReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactActivePubGainReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TArtifactChargeArtifactEnergyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactChargeArtifactEnergyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TArtifactDuplicatingItemReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactDuplicatingItemReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TArtifactDuplicatingItemRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactDuplicatingItemRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TArtifactUpGradeItemReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactUpGradeItemReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TArtifactUpGradeItemRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactUpGradeItemRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TArtifactNodify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TArtifactNodify_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TArtifactEffectType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fArtifact_2eproto() {
  protobuf_AddDesc_net_2fArtifact_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/Artifact.proto");
  GOOGLE_CHECK(file != NULL);
  TArtifactInfo_descriptor_ = file->message_type(0);
  static const int TArtifactInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactInfo, artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactInfo, starlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactInfo, energy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactInfo, chargetime_),
  };
  TArtifactInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactInfo_descriptor_,
      TArtifactInfo::default_instance_,
      TArtifactInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactInfo));
  TArtifactFreeRecruitEffect_descriptor_ = file->message_type(1);
  static const int TArtifactFreeRecruitEffect_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactFreeRecruitEffect, freerecruittime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactFreeRecruitEffect, freerecruittype_),
  };
  TArtifactFreeRecruitEffect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactFreeRecruitEffect_descriptor_,
      TArtifactFreeRecruitEffect::default_instance_,
      TArtifactFreeRecruitEffect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactFreeRecruitEffect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactFreeRecruitEffect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactFreeRecruitEffect));
  TArtifactEffectInfo_descriptor_ = file->message_type(2);
  static const int TArtifactEffectInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactEffectInfo, artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactEffectInfo, effecttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactEffectInfo, timesleft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactEffectInfo, freerecruiteffect_),
  };
  TArtifactEffectInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactEffectInfo_descriptor_,
      TArtifactEffectInfo::default_instance_,
      TArtifactEffectInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactEffectInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactEffectInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactEffectInfo));
  TArtifactGetInfoRsp_descriptor_ = file->message_type(3);
  static const int TArtifactGetInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactGetInfoRsp, artifactinfoarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactGetInfoRsp, artifacteffectinfoarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactGetInfoRsp, chargenum_),
  };
  TArtifactGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactGetInfoRsp_descriptor_,
      TArtifactGetInfoRsp::default_instance_,
      TArtifactGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactGetInfoRsp));
  TArtifactStarUpReq_descriptor_ = file->message_type(4);
  static const int TArtifactStarUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactStarUpReq, artifactid_),
  };
  TArtifactStarUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactStarUpReq_descriptor_,
      TArtifactStarUpReq::default_instance_,
      TArtifactStarUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactStarUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactStarUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactStarUpReq));
  TArtifactCombineArtifactReq_descriptor_ = file->message_type(5);
  static const int TArtifactCombineArtifactReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactCombineArtifactReq, ftid_),
  };
  TArtifactCombineArtifactReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactCombineArtifactReq_descriptor_,
      TArtifactCombineArtifactReq::default_instance_,
      TArtifactCombineArtifactReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactCombineArtifactReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactCombineArtifactReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactCombineArtifactReq));
  TArtifactActiveFreeEffect_descriptor_ = file->message_type(6);
  static const int TArtifactActiveFreeEffect_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactActiveFreeEffect, freerecruittime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactActiveFreeEffect, freerecruittype_),
  };
  TArtifactActiveFreeEffect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactActiveFreeEffect_descriptor_,
      TArtifactActiveFreeEffect::default_instance_,
      TArtifactActiveFreeEffect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactActiveFreeEffect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactActiveFreeEffect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactActiveFreeEffect));
  TArtifactActivePubGainReq_descriptor_ = file->message_type(7);
  static const int TArtifactActivePubGainReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactActivePubGainReq, artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactActivePubGainReq, freerecruiteffect_),
  };
  TArtifactActivePubGainReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactActivePubGainReq_descriptor_,
      TArtifactActivePubGainReq::default_instance_,
      TArtifactActivePubGainReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactActivePubGainReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactActivePubGainReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactActivePubGainReq));
  TArtifactChargeArtifactEnergyReq_descriptor_ = file->message_type(8);
  static const int TArtifactChargeArtifactEnergyReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactChargeArtifactEnergyReq, artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactChargeArtifactEnergyReq, chargenums_),
  };
  TArtifactChargeArtifactEnergyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactChargeArtifactEnergyReq_descriptor_,
      TArtifactChargeArtifactEnergyReq::default_instance_,
      TArtifactChargeArtifactEnergyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactChargeArtifactEnergyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactChargeArtifactEnergyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactChargeArtifactEnergyReq));
  TArtifactDuplicatingItemReq_descriptor_ = file->message_type(9);
  static const int TArtifactDuplicatingItemReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactDuplicatingItemReq, artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactDuplicatingItemReq, items_),
  };
  TArtifactDuplicatingItemReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactDuplicatingItemReq_descriptor_,
      TArtifactDuplicatingItemReq::default_instance_,
      TArtifactDuplicatingItemReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactDuplicatingItemReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactDuplicatingItemReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactDuplicatingItemReq));
  TArtifactDuplicatingItemRsp_descriptor_ = file->message_type(10);
  static const int TArtifactDuplicatingItemRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactDuplicatingItemRsp, items_),
  };
  TArtifactDuplicatingItemRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactDuplicatingItemRsp_descriptor_,
      TArtifactDuplicatingItemRsp::default_instance_,
      TArtifactDuplicatingItemRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactDuplicatingItemRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactDuplicatingItemRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactDuplicatingItemRsp));
  TArtifactUpGradeItemReq_descriptor_ = file->message_type(11);
  static const int TArtifactUpGradeItemReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactUpGradeItemReq, artifactid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactUpGradeItemReq, items_),
  };
  TArtifactUpGradeItemReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactUpGradeItemReq_descriptor_,
      TArtifactUpGradeItemReq::default_instance_,
      TArtifactUpGradeItemReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactUpGradeItemReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactUpGradeItemReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactUpGradeItemReq));
  TArtifactUpGradeItemRsp_descriptor_ = file->message_type(12);
  static const int TArtifactUpGradeItemRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactUpGradeItemRsp, items_),
  };
  TArtifactUpGradeItemRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactUpGradeItemRsp_descriptor_,
      TArtifactUpGradeItemRsp::default_instance_,
      TArtifactUpGradeItemRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactUpGradeItemRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactUpGradeItemRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactUpGradeItemRsp));
  TArtifactNodify_descriptor_ = file->message_type(13);
  static const int TArtifactNodify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactNodify, artifactinfoarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactNodify, artifacteffectinfoarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactNodify, chargenum_),
  };
  TArtifactNodify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TArtifactNodify_descriptor_,
      TArtifactNodify::default_instance_,
      TArtifactNodify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactNodify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TArtifactNodify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TArtifactNodify));
  TArtifactEffectType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fArtifact_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactInfo_descriptor_, &TArtifactInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactFreeRecruitEffect_descriptor_, &TArtifactFreeRecruitEffect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactEffectInfo_descriptor_, &TArtifactEffectInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactGetInfoRsp_descriptor_, &TArtifactGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactStarUpReq_descriptor_, &TArtifactStarUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactCombineArtifactReq_descriptor_, &TArtifactCombineArtifactReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactActiveFreeEffect_descriptor_, &TArtifactActiveFreeEffect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactActivePubGainReq_descriptor_, &TArtifactActivePubGainReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactChargeArtifactEnergyReq_descriptor_, &TArtifactChargeArtifactEnergyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactDuplicatingItemReq_descriptor_, &TArtifactDuplicatingItemReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactDuplicatingItemRsp_descriptor_, &TArtifactDuplicatingItemRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactUpGradeItemReq_descriptor_, &TArtifactUpGradeItemReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactUpGradeItemRsp_descriptor_, &TArtifactUpGradeItemRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TArtifactNodify_descriptor_, &TArtifactNodify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fArtifact_2eproto() {
  delete TArtifactInfo::default_instance_;
  delete TArtifactInfo_reflection_;
  delete TArtifactFreeRecruitEffect::default_instance_;
  delete TArtifactFreeRecruitEffect_reflection_;
  delete TArtifactEffectInfo::default_instance_;
  delete TArtifactEffectInfo_reflection_;
  delete TArtifactGetInfoRsp::default_instance_;
  delete TArtifactGetInfoRsp_reflection_;
  delete TArtifactStarUpReq::default_instance_;
  delete TArtifactStarUpReq_reflection_;
  delete TArtifactCombineArtifactReq::default_instance_;
  delete TArtifactCombineArtifactReq_reflection_;
  delete TArtifactActiveFreeEffect::default_instance_;
  delete TArtifactActiveFreeEffect_reflection_;
  delete TArtifactActivePubGainReq::default_instance_;
  delete TArtifactActivePubGainReq_reflection_;
  delete TArtifactChargeArtifactEnergyReq::default_instance_;
  delete TArtifactChargeArtifactEnergyReq_reflection_;
  delete TArtifactDuplicatingItemReq::default_instance_;
  delete TArtifactDuplicatingItemReq_reflection_;
  delete TArtifactDuplicatingItemRsp::default_instance_;
  delete TArtifactDuplicatingItemRsp_reflection_;
  delete TArtifactUpGradeItemReq::default_instance_;
  delete TArtifactUpGradeItemReq_reflection_;
  delete TArtifactUpGradeItemRsp::default_instance_;
  delete TArtifactUpGradeItemRsp_reflection_;
  delete TArtifactNodify::default_instance_;
  delete TArtifactNodify_reflection_;
}

void protobuf_AddDesc_net_2fArtifact_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022net/Artifact.proto\022\002pb\032\026net/CommonRewa"
    "rd.proto\"W\n\rTArtifactInfo\022\022\n\nArtifactId\030"
    "\001 \001(\r\022\016\n\006StarLv\030\002 \001(\r\022\016\n\006Energy\030\003 \001(\r\022\022\n"
    "\nChargeTime\030\004 \001(\004\"g\n\032TArtifactFreeRecrui"
    "tEffect\022\027\n\017FreeRecruitTime\030\001 \001(\r\0220\n\017Free"
    "RecruitType\030\002 \001(\0162\027.pb.TArtifactEffectTy"
    "pe\"\213\001\n\023TArtifactEffectInfo\022\022\n\nArtifactId"
    "\030\001 \001(\r\022\022\n\nEffectTime\030\002 \001(\004\022\021\n\tTimesleft\030"
    "\003 \001(\r\0229\n\021FreeRecruitEffect\030\004 \003(\0132\036.pb.TA"
    "rtifactFreeRecruitEffect\"\214\001\n\023TArtifactGe"
    "tInfoRsp\022*\n\017ArtifactInfoArr\030\001 \003(\0132\021.pb.T"
    "ArtifactInfo\0226\n\025ArtifactEffectInfoArr\030\002 "
    "\003(\0132\027.pb.TArtifactEffectInfo\022\021\n\tChargeNu"
    "m\030\003 \001(\r\"(\n\022TArtifactStarUpReq\022\022\n\nArtifac"
    "tId\030\001 \001(\r\"+\n\033TArtifactCombineArtifactReq"
    "\022\014\n\004Ftid\030\001 \001(\r\"f\n\031TArtifactActiveFreeEff"
    "ect\022\027\n\017FreeRecruitTime\030\001 \001(\r\0220\n\017FreeRecr"
    "uitType\030\002 \001(\0162\027.pb.TArtifactEffectType\"i"
    "\n\031TArtifactActivePubGainReq\022\022\n\nArtifactI"
    "d\030\001 \001(\r\0228\n\021FreeRecruitEffect\030\002 \003(\0132\035.pb."
    "TArtifactActiveFreeEffect\"J\n TArtifactCh"
    "argeArtifactEnergyReq\022\022\n\nArtifactId\030\001 \001("
    "\r\022\022\n\nChargeNums\030\002 \001(\r\"S\n\033TArtifactDuplic"
    "atingItemReq\022\022\n\nArtifactId\030\001 \001(\r\022 \n\005Item"
    "s\030\002 \003(\0132\021.pb.TCommonReward\"\?\n\033TArtifactD"
    "uplicatingItemRsp\022 \n\005Items\030\001 \003(\0132\021.pb.TC"
    "ommonReward\"O\n\027TArtifactUpGradeItemReq\022\022"
    "\n\nArtifactId\030\001 \001(\r\022 \n\005Items\030\002 \003(\0132\021.pb.T"
    "CommonReward\";\n\027TArtifactUpGradeItemRsp\022"
    " \n\005Items\030\001 \003(\0132\021.pb.TCommonReward\"\210\001\n\017TA"
    "rtifactNodify\022*\n\017ArtifactInfoArr\030\001 \003(\0132\021"
    ".pb.TArtifactInfo\0226\n\025ArtifactEffectInfoA"
    "rr\030\002 \003(\0132\027.pb.TArtifactEffectInfo\022\021\n\tCha"
    "rgeNum\030\003 \001(\r*\204\001\n\023TArtifactEffectType\022\020\n\014"
    "CAMP_RECRUIT\020\001\022\020\n\014GOLD_RECRUIT\020\002\022\027\n\023ABRO"
    "AD_GOLD_RECRUIT\020\003\022\027\n\023ABROAD_TIME_RECRUIT"
    "\020\004\022\027\n\023ACTLINKSOUL_RECRUIT\020\005", 1467);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/Artifact.proto", &protobuf_RegisterTypes);
  TArtifactInfo::default_instance_ = new TArtifactInfo();
  TArtifactFreeRecruitEffect::default_instance_ = new TArtifactFreeRecruitEffect();
  TArtifactEffectInfo::default_instance_ = new TArtifactEffectInfo();
  TArtifactGetInfoRsp::default_instance_ = new TArtifactGetInfoRsp();
  TArtifactStarUpReq::default_instance_ = new TArtifactStarUpReq();
  TArtifactCombineArtifactReq::default_instance_ = new TArtifactCombineArtifactReq();
  TArtifactActiveFreeEffect::default_instance_ = new TArtifactActiveFreeEffect();
  TArtifactActivePubGainReq::default_instance_ = new TArtifactActivePubGainReq();
  TArtifactChargeArtifactEnergyReq::default_instance_ = new TArtifactChargeArtifactEnergyReq();
  TArtifactDuplicatingItemReq::default_instance_ = new TArtifactDuplicatingItemReq();
  TArtifactDuplicatingItemRsp::default_instance_ = new TArtifactDuplicatingItemRsp();
  TArtifactUpGradeItemReq::default_instance_ = new TArtifactUpGradeItemReq();
  TArtifactUpGradeItemRsp::default_instance_ = new TArtifactUpGradeItemRsp();
  TArtifactNodify::default_instance_ = new TArtifactNodify();
  TArtifactInfo::default_instance_->InitAsDefaultInstance();
  TArtifactFreeRecruitEffect::default_instance_->InitAsDefaultInstance();
  TArtifactEffectInfo::default_instance_->InitAsDefaultInstance();
  TArtifactGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TArtifactStarUpReq::default_instance_->InitAsDefaultInstance();
  TArtifactCombineArtifactReq::default_instance_->InitAsDefaultInstance();
  TArtifactActiveFreeEffect::default_instance_->InitAsDefaultInstance();
  TArtifactActivePubGainReq::default_instance_->InitAsDefaultInstance();
  TArtifactChargeArtifactEnergyReq::default_instance_->InitAsDefaultInstance();
  TArtifactDuplicatingItemReq::default_instance_->InitAsDefaultInstance();
  TArtifactDuplicatingItemRsp::default_instance_->InitAsDefaultInstance();
  TArtifactUpGradeItemReq::default_instance_->InitAsDefaultInstance();
  TArtifactUpGradeItemRsp::default_instance_->InitAsDefaultInstance();
  TArtifactNodify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fArtifact_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fArtifact_2eproto {
  StaticDescriptorInitializer_net_2fArtifact_2eproto() {
    protobuf_AddDesc_net_2fArtifact_2eproto();
  }
} static_descriptor_initializer_net_2fArtifact_2eproto_;
const ::google::protobuf::EnumDescriptor* TArtifactEffectType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactEffectType_descriptor_;
}
bool TArtifactEffectType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactInfo::kArtifactIdFieldNumber;
const int TArtifactInfo::kStarLvFieldNumber;
const int TArtifactInfo::kEnergyFieldNumber;
const int TArtifactInfo::kChargeTimeFieldNumber;
#endif  // !_MSC_VER

TArtifactInfo::TArtifactInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactInfo)
}

void TArtifactInfo::InitAsDefaultInstance() {
}

TArtifactInfo::TArtifactInfo(const TArtifactInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactInfo)
}

void TArtifactInfo::SharedCtor() {
  _cached_size_ = 0;
  artifactid_ = 0u;
  starlv_ = 0u;
  energy_ = 0u;
  chargetime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactInfo::~TArtifactInfo() {
  // @@protoc_insertion_point(destructor:pb.TArtifactInfo)
  SharedDtor();
}

void TArtifactInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactInfo_descriptor_;
}

const TArtifactInfo& TArtifactInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactInfo* TArtifactInfo::default_instance_ = NULL;

TArtifactInfo* TArtifactInfo::New() const {
  return new TArtifactInfo;
}

void TArtifactInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TArtifactInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(artifactid_, energy_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ArtifactId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &artifactid_)));
          set_has_artifactid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StarLv;
        break;
      }

      // optional uint32 StarLv = 2;
      case 2: {
        if (tag == 16) {
         parse_StarLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starlv_)));
          set_has_starlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Energy;
        break;
      }

      // optional uint32 Energy = 3;
      case 3: {
        if (tag == 24) {
         parse_Energy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &energy_)));
          set_has_energy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ChargeTime;
        break;
      }

      // optional uint64 ChargeTime = 4;
      case 4: {
        if (tag == 32) {
         parse_ChargeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &chargetime_)));
          set_has_chargetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactInfo)
  return false;
#undef DO_
}

void TArtifactInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactInfo)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->artifactid(), output);
  }

  // optional uint32 StarLv = 2;
  if (has_starlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->starlv(), output);
  }

  // optional uint32 Energy = 3;
  if (has_energy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->energy(), output);
  }

  // optional uint64 ChargeTime = 4;
  if (has_chargetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->chargetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactInfo)
}

::google::protobuf::uint8* TArtifactInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactInfo)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->artifactid(), target);
  }

  // optional uint32 StarLv = 2;
  if (has_starlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->starlv(), target);
  }

  // optional uint32 Energy = 3;
  if (has_energy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->energy(), target);
  }

  // optional uint64 ChargeTime = 4;
  if (has_chargetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->chargetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactInfo)
  return target;
}

int TArtifactInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ArtifactId = 1;
    if (has_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->artifactid());
    }

    // optional uint32 StarLv = 2;
    if (has_starlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starlv());
    }

    // optional uint32 Energy = 3;
    if (has_energy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->energy());
    }

    // optional uint64 ChargeTime = 4;
    if (has_chargetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->chargetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactInfo::MergeFrom(const TArtifactInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_artifactid()) {
      set_artifactid(from.artifactid());
    }
    if (from.has_starlv()) {
      set_starlv(from.starlv());
    }
    if (from.has_energy()) {
      set_energy(from.energy());
    }
    if (from.has_chargetime()) {
      set_chargetime(from.chargetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactInfo::CopyFrom(const TArtifactInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactInfo::IsInitialized() const {

  return true;
}

void TArtifactInfo::Swap(TArtifactInfo* other) {
  if (other != this) {
    std::swap(artifactid_, other->artifactid_);
    std::swap(starlv_, other->starlv_);
    std::swap(energy_, other->energy_);
    std::swap(chargetime_, other->chargetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactInfo_descriptor_;
  metadata.reflection = TArtifactInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactFreeRecruitEffect::kFreeRecruitTimeFieldNumber;
const int TArtifactFreeRecruitEffect::kFreeRecruitTypeFieldNumber;
#endif  // !_MSC_VER

TArtifactFreeRecruitEffect::TArtifactFreeRecruitEffect()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactFreeRecruitEffect)
}

void TArtifactFreeRecruitEffect::InitAsDefaultInstance() {
}

TArtifactFreeRecruitEffect::TArtifactFreeRecruitEffect(const TArtifactFreeRecruitEffect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactFreeRecruitEffect)
}

void TArtifactFreeRecruitEffect::SharedCtor() {
  _cached_size_ = 0;
  freerecruittime_ = 0u;
  freerecruittype_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactFreeRecruitEffect::~TArtifactFreeRecruitEffect() {
  // @@protoc_insertion_point(destructor:pb.TArtifactFreeRecruitEffect)
  SharedDtor();
}

void TArtifactFreeRecruitEffect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactFreeRecruitEffect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactFreeRecruitEffect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactFreeRecruitEffect_descriptor_;
}

const TArtifactFreeRecruitEffect& TArtifactFreeRecruitEffect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactFreeRecruitEffect* TArtifactFreeRecruitEffect::default_instance_ = NULL;

TArtifactFreeRecruitEffect* TArtifactFreeRecruitEffect::New() const {
  return new TArtifactFreeRecruitEffect;
}

void TArtifactFreeRecruitEffect::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    freerecruittime_ = 0u;
    freerecruittype_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactFreeRecruitEffect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactFreeRecruitEffect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FreeRecruitTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &freerecruittime_)));
          set_has_freerecruittime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FreeRecruitType;
        break;
      }

      // optional .pb.TArtifactEffectType FreeRecruitType = 2;
      case 2: {
        if (tag == 16) {
         parse_FreeRecruitType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::TArtifactEffectType_IsValid(value)) {
            set_freerecruittype(static_cast< ::pb::TArtifactEffectType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactFreeRecruitEffect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactFreeRecruitEffect)
  return false;
#undef DO_
}

void TArtifactFreeRecruitEffect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactFreeRecruitEffect)
  // optional uint32 FreeRecruitTime = 1;
  if (has_freerecruittime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->freerecruittime(), output);
  }

  // optional .pb.TArtifactEffectType FreeRecruitType = 2;
  if (has_freerecruittype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->freerecruittype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactFreeRecruitEffect)
}

::google::protobuf::uint8* TArtifactFreeRecruitEffect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactFreeRecruitEffect)
  // optional uint32 FreeRecruitTime = 1;
  if (has_freerecruittime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->freerecruittime(), target);
  }

  // optional .pb.TArtifactEffectType FreeRecruitType = 2;
  if (has_freerecruittype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->freerecruittype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactFreeRecruitEffect)
  return target;
}

int TArtifactFreeRecruitEffect::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FreeRecruitTime = 1;
    if (has_freerecruittime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->freerecruittime());
    }

    // optional .pb.TArtifactEffectType FreeRecruitType = 2;
    if (has_freerecruittype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->freerecruittype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactFreeRecruitEffect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactFreeRecruitEffect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactFreeRecruitEffect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactFreeRecruitEffect::MergeFrom(const TArtifactFreeRecruitEffect& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_freerecruittime()) {
      set_freerecruittime(from.freerecruittime());
    }
    if (from.has_freerecruittype()) {
      set_freerecruittype(from.freerecruittype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactFreeRecruitEffect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactFreeRecruitEffect::CopyFrom(const TArtifactFreeRecruitEffect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactFreeRecruitEffect::IsInitialized() const {

  return true;
}

void TArtifactFreeRecruitEffect::Swap(TArtifactFreeRecruitEffect* other) {
  if (other != this) {
    std::swap(freerecruittime_, other->freerecruittime_);
    std::swap(freerecruittype_, other->freerecruittype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactFreeRecruitEffect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactFreeRecruitEffect_descriptor_;
  metadata.reflection = TArtifactFreeRecruitEffect_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactEffectInfo::kArtifactIdFieldNumber;
const int TArtifactEffectInfo::kEffectTimeFieldNumber;
const int TArtifactEffectInfo::kTimesleftFieldNumber;
const int TArtifactEffectInfo::kFreeRecruitEffectFieldNumber;
#endif  // !_MSC_VER

TArtifactEffectInfo::TArtifactEffectInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactEffectInfo)
}

void TArtifactEffectInfo::InitAsDefaultInstance() {
}

TArtifactEffectInfo::TArtifactEffectInfo(const TArtifactEffectInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactEffectInfo)
}

void TArtifactEffectInfo::SharedCtor() {
  _cached_size_ = 0;
  artifactid_ = 0u;
  effecttime_ = GOOGLE_ULONGLONG(0);
  timesleft_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactEffectInfo::~TArtifactEffectInfo() {
  // @@protoc_insertion_point(destructor:pb.TArtifactEffectInfo)
  SharedDtor();
}

void TArtifactEffectInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactEffectInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactEffectInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactEffectInfo_descriptor_;
}

const TArtifactEffectInfo& TArtifactEffectInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactEffectInfo* TArtifactEffectInfo::default_instance_ = NULL;

TArtifactEffectInfo* TArtifactEffectInfo::New() const {
  return new TArtifactEffectInfo;
}

void TArtifactEffectInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TArtifactEffectInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(effecttime_, timesleft_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  freerecruiteffect_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactEffectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactEffectInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ArtifactId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &artifactid_)));
          set_has_artifactid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_EffectTime;
        break;
      }

      // optional uint64 EffectTime = 2;
      case 2: {
        if (tag == 16) {
         parse_EffectTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &effecttime_)));
          set_has_effecttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Timesleft;
        break;
      }

      // optional uint32 Timesleft = 3;
      case 3: {
        if (tag == 24) {
         parse_Timesleft:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timesleft_)));
          set_has_timesleft();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_FreeRecruitEffect;
        break;
      }

      // repeated .pb.TArtifactFreeRecruitEffect FreeRecruitEffect = 4;
      case 4: {
        if (tag == 34) {
         parse_FreeRecruitEffect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_freerecruiteffect()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_FreeRecruitEffect;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactEffectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactEffectInfo)
  return false;
#undef DO_
}

void TArtifactEffectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactEffectInfo)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->artifactid(), output);
  }

  // optional uint64 EffectTime = 2;
  if (has_effecttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->effecttime(), output);
  }

  // optional uint32 Timesleft = 3;
  if (has_timesleft()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->timesleft(), output);
  }

  // repeated .pb.TArtifactFreeRecruitEffect FreeRecruitEffect = 4;
  for (int i = 0; i < this->freerecruiteffect_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->freerecruiteffect(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactEffectInfo)
}

::google::protobuf::uint8* TArtifactEffectInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactEffectInfo)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->artifactid(), target);
  }

  // optional uint64 EffectTime = 2;
  if (has_effecttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->effecttime(), target);
  }

  // optional uint32 Timesleft = 3;
  if (has_timesleft()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->timesleft(), target);
  }

  // repeated .pb.TArtifactFreeRecruitEffect FreeRecruitEffect = 4;
  for (int i = 0; i < this->freerecruiteffect_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->freerecruiteffect(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactEffectInfo)
  return target;
}

int TArtifactEffectInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ArtifactId = 1;
    if (has_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->artifactid());
    }

    // optional uint64 EffectTime = 2;
    if (has_effecttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->effecttime());
    }

    // optional uint32 Timesleft = 3;
    if (has_timesleft()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timesleft());
    }

  }
  // repeated .pb.TArtifactFreeRecruitEffect FreeRecruitEffect = 4;
  total_size += 1 * this->freerecruiteffect_size();
  for (int i = 0; i < this->freerecruiteffect_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->freerecruiteffect(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactEffectInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactEffectInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactEffectInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactEffectInfo::MergeFrom(const TArtifactEffectInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  freerecruiteffect_.MergeFrom(from.freerecruiteffect_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_artifactid()) {
      set_artifactid(from.artifactid());
    }
    if (from.has_effecttime()) {
      set_effecttime(from.effecttime());
    }
    if (from.has_timesleft()) {
      set_timesleft(from.timesleft());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactEffectInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactEffectInfo::CopyFrom(const TArtifactEffectInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactEffectInfo::IsInitialized() const {

  return true;
}

void TArtifactEffectInfo::Swap(TArtifactEffectInfo* other) {
  if (other != this) {
    std::swap(artifactid_, other->artifactid_);
    std::swap(effecttime_, other->effecttime_);
    std::swap(timesleft_, other->timesleft_);
    freerecruiteffect_.Swap(&other->freerecruiteffect_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactEffectInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactEffectInfo_descriptor_;
  metadata.reflection = TArtifactEffectInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactGetInfoRsp::kArtifactInfoArrFieldNumber;
const int TArtifactGetInfoRsp::kArtifactEffectInfoArrFieldNumber;
const int TArtifactGetInfoRsp::kChargeNumFieldNumber;
#endif  // !_MSC_VER

TArtifactGetInfoRsp::TArtifactGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactGetInfoRsp)
}

void TArtifactGetInfoRsp::InitAsDefaultInstance() {
}

TArtifactGetInfoRsp::TArtifactGetInfoRsp(const TArtifactGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactGetInfoRsp)
}

void TArtifactGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  chargenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactGetInfoRsp::~TArtifactGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TArtifactGetInfoRsp)
  SharedDtor();
}

void TArtifactGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactGetInfoRsp_descriptor_;
}

const TArtifactGetInfoRsp& TArtifactGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactGetInfoRsp* TArtifactGetInfoRsp::default_instance_ = NULL;

TArtifactGetInfoRsp* TArtifactGetInfoRsp::New() const {
  return new TArtifactGetInfoRsp;
}

void TArtifactGetInfoRsp::Clear() {
  chargenum_ = 0u;
  artifactinfoarr_.Clear();
  artifacteffectinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TArtifactInfo ArtifactInfoArr = 1;
      case 1: {
        if (tag == 10) {
         parse_ArtifactInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_artifactinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArtifactInfoArr;
        if (input->ExpectTag(18)) goto parse_ArtifactEffectInfoArr;
        break;
      }

      // repeated .pb.TArtifactEffectInfo ArtifactEffectInfoArr = 2;
      case 2: {
        if (tag == 18) {
         parse_ArtifactEffectInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_artifacteffectinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArtifactEffectInfoArr;
        if (input->ExpectTag(24)) goto parse_ChargeNum;
        break;
      }

      // optional uint32 ChargeNum = 3;
      case 3: {
        if (tag == 24) {
         parse_ChargeNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chargenum_)));
          set_has_chargenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactGetInfoRsp)
  return false;
#undef DO_
}

void TArtifactGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactGetInfoRsp)
  // repeated .pb.TArtifactInfo ArtifactInfoArr = 1;
  for (int i = 0; i < this->artifactinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->artifactinfoarr(i), output);
  }

  // repeated .pb.TArtifactEffectInfo ArtifactEffectInfoArr = 2;
  for (int i = 0; i < this->artifacteffectinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->artifacteffectinfoarr(i), output);
  }

  // optional uint32 ChargeNum = 3;
  if (has_chargenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->chargenum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactGetInfoRsp)
}

::google::protobuf::uint8* TArtifactGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactGetInfoRsp)
  // repeated .pb.TArtifactInfo ArtifactInfoArr = 1;
  for (int i = 0; i < this->artifactinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->artifactinfoarr(i), target);
  }

  // repeated .pb.TArtifactEffectInfo ArtifactEffectInfoArr = 2;
  for (int i = 0; i < this->artifacteffectinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->artifacteffectinfoarr(i), target);
  }

  // optional uint32 ChargeNum = 3;
  if (has_chargenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->chargenum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactGetInfoRsp)
  return target;
}

int TArtifactGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional uint32 ChargeNum = 3;
    if (has_chargenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chargenum());
    }

  }
  // repeated .pb.TArtifactInfo ArtifactInfoArr = 1;
  total_size += 1 * this->artifactinfoarr_size();
  for (int i = 0; i < this->artifactinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->artifactinfoarr(i));
  }

  // repeated .pb.TArtifactEffectInfo ArtifactEffectInfoArr = 2;
  total_size += 1 * this->artifacteffectinfoarr_size();
  for (int i = 0; i < this->artifacteffectinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->artifacteffectinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactGetInfoRsp::MergeFrom(const TArtifactGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  artifactinfoarr_.MergeFrom(from.artifactinfoarr_);
  artifacteffectinfoarr_.MergeFrom(from.artifacteffectinfoarr_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_chargenum()) {
      set_chargenum(from.chargenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactGetInfoRsp::CopyFrom(const TArtifactGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactGetInfoRsp::IsInitialized() const {

  return true;
}

void TArtifactGetInfoRsp::Swap(TArtifactGetInfoRsp* other) {
  if (other != this) {
    artifactinfoarr_.Swap(&other->artifactinfoarr_);
    artifacteffectinfoarr_.Swap(&other->artifacteffectinfoarr_);
    std::swap(chargenum_, other->chargenum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactGetInfoRsp_descriptor_;
  metadata.reflection = TArtifactGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactStarUpReq::kArtifactIdFieldNumber;
#endif  // !_MSC_VER

TArtifactStarUpReq::TArtifactStarUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactStarUpReq)
}

void TArtifactStarUpReq::InitAsDefaultInstance() {
}

TArtifactStarUpReq::TArtifactStarUpReq(const TArtifactStarUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactStarUpReq)
}

void TArtifactStarUpReq::SharedCtor() {
  _cached_size_ = 0;
  artifactid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactStarUpReq::~TArtifactStarUpReq() {
  // @@protoc_insertion_point(destructor:pb.TArtifactStarUpReq)
  SharedDtor();
}

void TArtifactStarUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactStarUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactStarUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactStarUpReq_descriptor_;
}

const TArtifactStarUpReq& TArtifactStarUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactStarUpReq* TArtifactStarUpReq::default_instance_ = NULL;

TArtifactStarUpReq* TArtifactStarUpReq::New() const {
  return new TArtifactStarUpReq;
}

void TArtifactStarUpReq::Clear() {
  artifactid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactStarUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactStarUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ArtifactId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &artifactid_)));
          set_has_artifactid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactStarUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactStarUpReq)
  return false;
#undef DO_
}

void TArtifactStarUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactStarUpReq)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->artifactid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactStarUpReq)
}

::google::protobuf::uint8* TArtifactStarUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactStarUpReq)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->artifactid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactStarUpReq)
  return target;
}

int TArtifactStarUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ArtifactId = 1;
    if (has_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->artifactid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactStarUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactStarUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactStarUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactStarUpReq::MergeFrom(const TArtifactStarUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_artifactid()) {
      set_artifactid(from.artifactid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactStarUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactStarUpReq::CopyFrom(const TArtifactStarUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactStarUpReq::IsInitialized() const {

  return true;
}

void TArtifactStarUpReq::Swap(TArtifactStarUpReq* other) {
  if (other != this) {
    std::swap(artifactid_, other->artifactid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactStarUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactStarUpReq_descriptor_;
  metadata.reflection = TArtifactStarUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactCombineArtifactReq::kFtidFieldNumber;
#endif  // !_MSC_VER

TArtifactCombineArtifactReq::TArtifactCombineArtifactReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactCombineArtifactReq)
}

void TArtifactCombineArtifactReq::InitAsDefaultInstance() {
}

TArtifactCombineArtifactReq::TArtifactCombineArtifactReq(const TArtifactCombineArtifactReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactCombineArtifactReq)
}

void TArtifactCombineArtifactReq::SharedCtor() {
  _cached_size_ = 0;
  ftid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactCombineArtifactReq::~TArtifactCombineArtifactReq() {
  // @@protoc_insertion_point(destructor:pb.TArtifactCombineArtifactReq)
  SharedDtor();
}

void TArtifactCombineArtifactReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactCombineArtifactReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactCombineArtifactReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactCombineArtifactReq_descriptor_;
}

const TArtifactCombineArtifactReq& TArtifactCombineArtifactReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactCombineArtifactReq* TArtifactCombineArtifactReq::default_instance_ = NULL;

TArtifactCombineArtifactReq* TArtifactCombineArtifactReq::New() const {
  return new TArtifactCombineArtifactReq;
}

void TArtifactCombineArtifactReq::Clear() {
  ftid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactCombineArtifactReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactCombineArtifactReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Ftid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ftid_)));
          set_has_ftid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactCombineArtifactReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactCombineArtifactReq)
  return false;
#undef DO_
}

void TArtifactCombineArtifactReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactCombineArtifactReq)
  // optional uint32 Ftid = 1;
  if (has_ftid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ftid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactCombineArtifactReq)
}

::google::protobuf::uint8* TArtifactCombineArtifactReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactCombineArtifactReq)
  // optional uint32 Ftid = 1;
  if (has_ftid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ftid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactCombineArtifactReq)
  return target;
}

int TArtifactCombineArtifactReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Ftid = 1;
    if (has_ftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ftid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactCombineArtifactReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactCombineArtifactReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactCombineArtifactReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactCombineArtifactReq::MergeFrom(const TArtifactCombineArtifactReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ftid()) {
      set_ftid(from.ftid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactCombineArtifactReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactCombineArtifactReq::CopyFrom(const TArtifactCombineArtifactReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactCombineArtifactReq::IsInitialized() const {

  return true;
}

void TArtifactCombineArtifactReq::Swap(TArtifactCombineArtifactReq* other) {
  if (other != this) {
    std::swap(ftid_, other->ftid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactCombineArtifactReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactCombineArtifactReq_descriptor_;
  metadata.reflection = TArtifactCombineArtifactReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactActiveFreeEffect::kFreeRecruitTimeFieldNumber;
const int TArtifactActiveFreeEffect::kFreeRecruitTypeFieldNumber;
#endif  // !_MSC_VER

TArtifactActiveFreeEffect::TArtifactActiveFreeEffect()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactActiveFreeEffect)
}

void TArtifactActiveFreeEffect::InitAsDefaultInstance() {
}

TArtifactActiveFreeEffect::TArtifactActiveFreeEffect(const TArtifactActiveFreeEffect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactActiveFreeEffect)
}

void TArtifactActiveFreeEffect::SharedCtor() {
  _cached_size_ = 0;
  freerecruittime_ = 0u;
  freerecruittype_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactActiveFreeEffect::~TArtifactActiveFreeEffect() {
  // @@protoc_insertion_point(destructor:pb.TArtifactActiveFreeEffect)
  SharedDtor();
}

void TArtifactActiveFreeEffect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactActiveFreeEffect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactActiveFreeEffect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactActiveFreeEffect_descriptor_;
}

const TArtifactActiveFreeEffect& TArtifactActiveFreeEffect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactActiveFreeEffect* TArtifactActiveFreeEffect::default_instance_ = NULL;

TArtifactActiveFreeEffect* TArtifactActiveFreeEffect::New() const {
  return new TArtifactActiveFreeEffect;
}

void TArtifactActiveFreeEffect::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    freerecruittime_ = 0u;
    freerecruittype_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactActiveFreeEffect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactActiveFreeEffect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FreeRecruitTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &freerecruittime_)));
          set_has_freerecruittime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FreeRecruitType;
        break;
      }

      // optional .pb.TArtifactEffectType FreeRecruitType = 2;
      case 2: {
        if (tag == 16) {
         parse_FreeRecruitType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::TArtifactEffectType_IsValid(value)) {
            set_freerecruittype(static_cast< ::pb::TArtifactEffectType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactActiveFreeEffect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactActiveFreeEffect)
  return false;
#undef DO_
}

void TArtifactActiveFreeEffect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactActiveFreeEffect)
  // optional uint32 FreeRecruitTime = 1;
  if (has_freerecruittime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->freerecruittime(), output);
  }

  // optional .pb.TArtifactEffectType FreeRecruitType = 2;
  if (has_freerecruittype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->freerecruittype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactActiveFreeEffect)
}

::google::protobuf::uint8* TArtifactActiveFreeEffect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactActiveFreeEffect)
  // optional uint32 FreeRecruitTime = 1;
  if (has_freerecruittime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->freerecruittime(), target);
  }

  // optional .pb.TArtifactEffectType FreeRecruitType = 2;
  if (has_freerecruittype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->freerecruittype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactActiveFreeEffect)
  return target;
}

int TArtifactActiveFreeEffect::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FreeRecruitTime = 1;
    if (has_freerecruittime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->freerecruittime());
    }

    // optional .pb.TArtifactEffectType FreeRecruitType = 2;
    if (has_freerecruittype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->freerecruittype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactActiveFreeEffect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactActiveFreeEffect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactActiveFreeEffect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactActiveFreeEffect::MergeFrom(const TArtifactActiveFreeEffect& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_freerecruittime()) {
      set_freerecruittime(from.freerecruittime());
    }
    if (from.has_freerecruittype()) {
      set_freerecruittype(from.freerecruittype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactActiveFreeEffect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactActiveFreeEffect::CopyFrom(const TArtifactActiveFreeEffect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactActiveFreeEffect::IsInitialized() const {

  return true;
}

void TArtifactActiveFreeEffect::Swap(TArtifactActiveFreeEffect* other) {
  if (other != this) {
    std::swap(freerecruittime_, other->freerecruittime_);
    std::swap(freerecruittype_, other->freerecruittype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactActiveFreeEffect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactActiveFreeEffect_descriptor_;
  metadata.reflection = TArtifactActiveFreeEffect_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactActivePubGainReq::kArtifactIdFieldNumber;
const int TArtifactActivePubGainReq::kFreeRecruitEffectFieldNumber;
#endif  // !_MSC_VER

TArtifactActivePubGainReq::TArtifactActivePubGainReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactActivePubGainReq)
}

void TArtifactActivePubGainReq::InitAsDefaultInstance() {
}

TArtifactActivePubGainReq::TArtifactActivePubGainReq(const TArtifactActivePubGainReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactActivePubGainReq)
}

void TArtifactActivePubGainReq::SharedCtor() {
  _cached_size_ = 0;
  artifactid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactActivePubGainReq::~TArtifactActivePubGainReq() {
  // @@protoc_insertion_point(destructor:pb.TArtifactActivePubGainReq)
  SharedDtor();
}

void TArtifactActivePubGainReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactActivePubGainReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactActivePubGainReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactActivePubGainReq_descriptor_;
}

const TArtifactActivePubGainReq& TArtifactActivePubGainReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactActivePubGainReq* TArtifactActivePubGainReq::default_instance_ = NULL;

TArtifactActivePubGainReq* TArtifactActivePubGainReq::New() const {
  return new TArtifactActivePubGainReq;
}

void TArtifactActivePubGainReq::Clear() {
  artifactid_ = 0u;
  freerecruiteffect_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactActivePubGainReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactActivePubGainReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ArtifactId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &artifactid_)));
          set_has_artifactid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_FreeRecruitEffect;
        break;
      }

      // repeated .pb.TArtifactActiveFreeEffect FreeRecruitEffect = 2;
      case 2: {
        if (tag == 18) {
         parse_FreeRecruitEffect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_freerecruiteffect()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_FreeRecruitEffect;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactActivePubGainReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactActivePubGainReq)
  return false;
#undef DO_
}

void TArtifactActivePubGainReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactActivePubGainReq)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->artifactid(), output);
  }

  // repeated .pb.TArtifactActiveFreeEffect FreeRecruitEffect = 2;
  for (int i = 0; i < this->freerecruiteffect_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->freerecruiteffect(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactActivePubGainReq)
}

::google::protobuf::uint8* TArtifactActivePubGainReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactActivePubGainReq)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->artifactid(), target);
  }

  // repeated .pb.TArtifactActiveFreeEffect FreeRecruitEffect = 2;
  for (int i = 0; i < this->freerecruiteffect_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->freerecruiteffect(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactActivePubGainReq)
  return target;
}

int TArtifactActivePubGainReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ArtifactId = 1;
    if (has_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->artifactid());
    }

  }
  // repeated .pb.TArtifactActiveFreeEffect FreeRecruitEffect = 2;
  total_size += 1 * this->freerecruiteffect_size();
  for (int i = 0; i < this->freerecruiteffect_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->freerecruiteffect(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactActivePubGainReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactActivePubGainReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactActivePubGainReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactActivePubGainReq::MergeFrom(const TArtifactActivePubGainReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  freerecruiteffect_.MergeFrom(from.freerecruiteffect_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_artifactid()) {
      set_artifactid(from.artifactid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactActivePubGainReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactActivePubGainReq::CopyFrom(const TArtifactActivePubGainReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactActivePubGainReq::IsInitialized() const {

  return true;
}

void TArtifactActivePubGainReq::Swap(TArtifactActivePubGainReq* other) {
  if (other != this) {
    std::swap(artifactid_, other->artifactid_);
    freerecruiteffect_.Swap(&other->freerecruiteffect_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactActivePubGainReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactActivePubGainReq_descriptor_;
  metadata.reflection = TArtifactActivePubGainReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactChargeArtifactEnergyReq::kArtifactIdFieldNumber;
const int TArtifactChargeArtifactEnergyReq::kChargeNumsFieldNumber;
#endif  // !_MSC_VER

TArtifactChargeArtifactEnergyReq::TArtifactChargeArtifactEnergyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactChargeArtifactEnergyReq)
}

void TArtifactChargeArtifactEnergyReq::InitAsDefaultInstance() {
}

TArtifactChargeArtifactEnergyReq::TArtifactChargeArtifactEnergyReq(const TArtifactChargeArtifactEnergyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactChargeArtifactEnergyReq)
}

void TArtifactChargeArtifactEnergyReq::SharedCtor() {
  _cached_size_ = 0;
  artifactid_ = 0u;
  chargenums_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactChargeArtifactEnergyReq::~TArtifactChargeArtifactEnergyReq() {
  // @@protoc_insertion_point(destructor:pb.TArtifactChargeArtifactEnergyReq)
  SharedDtor();
}

void TArtifactChargeArtifactEnergyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactChargeArtifactEnergyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactChargeArtifactEnergyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactChargeArtifactEnergyReq_descriptor_;
}

const TArtifactChargeArtifactEnergyReq& TArtifactChargeArtifactEnergyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactChargeArtifactEnergyReq* TArtifactChargeArtifactEnergyReq::default_instance_ = NULL;

TArtifactChargeArtifactEnergyReq* TArtifactChargeArtifactEnergyReq::New() const {
  return new TArtifactChargeArtifactEnergyReq;
}

void TArtifactChargeArtifactEnergyReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TArtifactChargeArtifactEnergyReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(artifactid_, chargenums_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactChargeArtifactEnergyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactChargeArtifactEnergyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ArtifactId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &artifactid_)));
          set_has_artifactid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ChargeNums;
        break;
      }

      // optional uint32 ChargeNums = 2;
      case 2: {
        if (tag == 16) {
         parse_ChargeNums:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chargenums_)));
          set_has_chargenums();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactChargeArtifactEnergyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactChargeArtifactEnergyReq)
  return false;
#undef DO_
}

void TArtifactChargeArtifactEnergyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactChargeArtifactEnergyReq)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->artifactid(), output);
  }

  // optional uint32 ChargeNums = 2;
  if (has_chargenums()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->chargenums(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactChargeArtifactEnergyReq)
}

::google::protobuf::uint8* TArtifactChargeArtifactEnergyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactChargeArtifactEnergyReq)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->artifactid(), target);
  }

  // optional uint32 ChargeNums = 2;
  if (has_chargenums()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->chargenums(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactChargeArtifactEnergyReq)
  return target;
}

int TArtifactChargeArtifactEnergyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ArtifactId = 1;
    if (has_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->artifactid());
    }

    // optional uint32 ChargeNums = 2;
    if (has_chargenums()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chargenums());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactChargeArtifactEnergyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactChargeArtifactEnergyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactChargeArtifactEnergyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactChargeArtifactEnergyReq::MergeFrom(const TArtifactChargeArtifactEnergyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_artifactid()) {
      set_artifactid(from.artifactid());
    }
    if (from.has_chargenums()) {
      set_chargenums(from.chargenums());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactChargeArtifactEnergyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactChargeArtifactEnergyReq::CopyFrom(const TArtifactChargeArtifactEnergyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactChargeArtifactEnergyReq::IsInitialized() const {

  return true;
}

void TArtifactChargeArtifactEnergyReq::Swap(TArtifactChargeArtifactEnergyReq* other) {
  if (other != this) {
    std::swap(artifactid_, other->artifactid_);
    std::swap(chargenums_, other->chargenums_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactChargeArtifactEnergyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactChargeArtifactEnergyReq_descriptor_;
  metadata.reflection = TArtifactChargeArtifactEnergyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactDuplicatingItemReq::kArtifactIdFieldNumber;
const int TArtifactDuplicatingItemReq::kItemsFieldNumber;
#endif  // !_MSC_VER

TArtifactDuplicatingItemReq::TArtifactDuplicatingItemReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactDuplicatingItemReq)
}

void TArtifactDuplicatingItemReq::InitAsDefaultInstance() {
}

TArtifactDuplicatingItemReq::TArtifactDuplicatingItemReq(const TArtifactDuplicatingItemReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactDuplicatingItemReq)
}

void TArtifactDuplicatingItemReq::SharedCtor() {
  _cached_size_ = 0;
  artifactid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactDuplicatingItemReq::~TArtifactDuplicatingItemReq() {
  // @@protoc_insertion_point(destructor:pb.TArtifactDuplicatingItemReq)
  SharedDtor();
}

void TArtifactDuplicatingItemReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactDuplicatingItemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactDuplicatingItemReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactDuplicatingItemReq_descriptor_;
}

const TArtifactDuplicatingItemReq& TArtifactDuplicatingItemReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactDuplicatingItemReq* TArtifactDuplicatingItemReq::default_instance_ = NULL;

TArtifactDuplicatingItemReq* TArtifactDuplicatingItemReq::New() const {
  return new TArtifactDuplicatingItemReq;
}

void TArtifactDuplicatingItemReq::Clear() {
  artifactid_ = 0u;
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactDuplicatingItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactDuplicatingItemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ArtifactId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &artifactid_)));
          set_has_artifactid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Items;
        break;
      }

      // repeated .pb.TCommonReward Items = 2;
      case 2: {
        if (tag == 18) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactDuplicatingItemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactDuplicatingItemReq)
  return false;
#undef DO_
}

void TArtifactDuplicatingItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactDuplicatingItemReq)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->artifactid(), output);
  }

  // repeated .pb.TCommonReward Items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactDuplicatingItemReq)
}

::google::protobuf::uint8* TArtifactDuplicatingItemReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactDuplicatingItemReq)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->artifactid(), target);
  }

  // repeated .pb.TCommonReward Items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactDuplicatingItemReq)
  return target;
}

int TArtifactDuplicatingItemReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ArtifactId = 1;
    if (has_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->artifactid());
    }

  }
  // repeated .pb.TCommonReward Items = 2;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactDuplicatingItemReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactDuplicatingItemReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactDuplicatingItemReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactDuplicatingItemReq::MergeFrom(const TArtifactDuplicatingItemReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_artifactid()) {
      set_artifactid(from.artifactid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactDuplicatingItemReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactDuplicatingItemReq::CopyFrom(const TArtifactDuplicatingItemReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactDuplicatingItemReq::IsInitialized() const {

  return true;
}

void TArtifactDuplicatingItemReq::Swap(TArtifactDuplicatingItemReq* other) {
  if (other != this) {
    std::swap(artifactid_, other->artifactid_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactDuplicatingItemReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactDuplicatingItemReq_descriptor_;
  metadata.reflection = TArtifactDuplicatingItemReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactDuplicatingItemRsp::kItemsFieldNumber;
#endif  // !_MSC_VER

TArtifactDuplicatingItemRsp::TArtifactDuplicatingItemRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactDuplicatingItemRsp)
}

void TArtifactDuplicatingItemRsp::InitAsDefaultInstance() {
}

TArtifactDuplicatingItemRsp::TArtifactDuplicatingItemRsp(const TArtifactDuplicatingItemRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactDuplicatingItemRsp)
}

void TArtifactDuplicatingItemRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactDuplicatingItemRsp::~TArtifactDuplicatingItemRsp() {
  // @@protoc_insertion_point(destructor:pb.TArtifactDuplicatingItemRsp)
  SharedDtor();
}

void TArtifactDuplicatingItemRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactDuplicatingItemRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactDuplicatingItemRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactDuplicatingItemRsp_descriptor_;
}

const TArtifactDuplicatingItemRsp& TArtifactDuplicatingItemRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactDuplicatingItemRsp* TArtifactDuplicatingItemRsp::default_instance_ = NULL;

TArtifactDuplicatingItemRsp* TArtifactDuplicatingItemRsp::New() const {
  return new TArtifactDuplicatingItemRsp;
}

void TArtifactDuplicatingItemRsp::Clear() {
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactDuplicatingItemRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactDuplicatingItemRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward Items = 1;
      case 1: {
        if (tag == 10) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactDuplicatingItemRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactDuplicatingItemRsp)
  return false;
#undef DO_
}

void TArtifactDuplicatingItemRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactDuplicatingItemRsp)
  // repeated .pb.TCommonReward Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactDuplicatingItemRsp)
}

::google::protobuf::uint8* TArtifactDuplicatingItemRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactDuplicatingItemRsp)
  // repeated .pb.TCommonReward Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactDuplicatingItemRsp)
  return target;
}

int TArtifactDuplicatingItemRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward Items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactDuplicatingItemRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactDuplicatingItemRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactDuplicatingItemRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactDuplicatingItemRsp::MergeFrom(const TArtifactDuplicatingItemRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactDuplicatingItemRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactDuplicatingItemRsp::CopyFrom(const TArtifactDuplicatingItemRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactDuplicatingItemRsp::IsInitialized() const {

  return true;
}

void TArtifactDuplicatingItemRsp::Swap(TArtifactDuplicatingItemRsp* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactDuplicatingItemRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactDuplicatingItemRsp_descriptor_;
  metadata.reflection = TArtifactDuplicatingItemRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactUpGradeItemReq::kArtifactIdFieldNumber;
const int TArtifactUpGradeItemReq::kItemsFieldNumber;
#endif  // !_MSC_VER

TArtifactUpGradeItemReq::TArtifactUpGradeItemReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactUpGradeItemReq)
}

void TArtifactUpGradeItemReq::InitAsDefaultInstance() {
}

TArtifactUpGradeItemReq::TArtifactUpGradeItemReq(const TArtifactUpGradeItemReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactUpGradeItemReq)
}

void TArtifactUpGradeItemReq::SharedCtor() {
  _cached_size_ = 0;
  artifactid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactUpGradeItemReq::~TArtifactUpGradeItemReq() {
  // @@protoc_insertion_point(destructor:pb.TArtifactUpGradeItemReq)
  SharedDtor();
}

void TArtifactUpGradeItemReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactUpGradeItemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactUpGradeItemReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactUpGradeItemReq_descriptor_;
}

const TArtifactUpGradeItemReq& TArtifactUpGradeItemReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactUpGradeItemReq* TArtifactUpGradeItemReq::default_instance_ = NULL;

TArtifactUpGradeItemReq* TArtifactUpGradeItemReq::New() const {
  return new TArtifactUpGradeItemReq;
}

void TArtifactUpGradeItemReq::Clear() {
  artifactid_ = 0u;
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactUpGradeItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactUpGradeItemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ArtifactId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &artifactid_)));
          set_has_artifactid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Items;
        break;
      }

      // repeated .pb.TCommonReward Items = 2;
      case 2: {
        if (tag == 18) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactUpGradeItemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactUpGradeItemReq)
  return false;
#undef DO_
}

void TArtifactUpGradeItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactUpGradeItemReq)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->artifactid(), output);
  }

  // repeated .pb.TCommonReward Items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactUpGradeItemReq)
}

::google::protobuf::uint8* TArtifactUpGradeItemReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactUpGradeItemReq)
  // optional uint32 ArtifactId = 1;
  if (has_artifactid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->artifactid(), target);
  }

  // repeated .pb.TCommonReward Items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactUpGradeItemReq)
  return target;
}

int TArtifactUpGradeItemReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ArtifactId = 1;
    if (has_artifactid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->artifactid());
    }

  }
  // repeated .pb.TCommonReward Items = 2;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactUpGradeItemReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactUpGradeItemReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactUpGradeItemReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactUpGradeItemReq::MergeFrom(const TArtifactUpGradeItemReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_artifactid()) {
      set_artifactid(from.artifactid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactUpGradeItemReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactUpGradeItemReq::CopyFrom(const TArtifactUpGradeItemReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactUpGradeItemReq::IsInitialized() const {

  return true;
}

void TArtifactUpGradeItemReq::Swap(TArtifactUpGradeItemReq* other) {
  if (other != this) {
    std::swap(artifactid_, other->artifactid_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactUpGradeItemReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactUpGradeItemReq_descriptor_;
  metadata.reflection = TArtifactUpGradeItemReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactUpGradeItemRsp::kItemsFieldNumber;
#endif  // !_MSC_VER

TArtifactUpGradeItemRsp::TArtifactUpGradeItemRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactUpGradeItemRsp)
}

void TArtifactUpGradeItemRsp::InitAsDefaultInstance() {
}

TArtifactUpGradeItemRsp::TArtifactUpGradeItemRsp(const TArtifactUpGradeItemRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactUpGradeItemRsp)
}

void TArtifactUpGradeItemRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactUpGradeItemRsp::~TArtifactUpGradeItemRsp() {
  // @@protoc_insertion_point(destructor:pb.TArtifactUpGradeItemRsp)
  SharedDtor();
}

void TArtifactUpGradeItemRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactUpGradeItemRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactUpGradeItemRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactUpGradeItemRsp_descriptor_;
}

const TArtifactUpGradeItemRsp& TArtifactUpGradeItemRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactUpGradeItemRsp* TArtifactUpGradeItemRsp::default_instance_ = NULL;

TArtifactUpGradeItemRsp* TArtifactUpGradeItemRsp::New() const {
  return new TArtifactUpGradeItemRsp;
}

void TArtifactUpGradeItemRsp::Clear() {
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactUpGradeItemRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactUpGradeItemRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward Items = 1;
      case 1: {
        if (tag == 10) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactUpGradeItemRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactUpGradeItemRsp)
  return false;
#undef DO_
}

void TArtifactUpGradeItemRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactUpGradeItemRsp)
  // repeated .pb.TCommonReward Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactUpGradeItemRsp)
}

::google::protobuf::uint8* TArtifactUpGradeItemRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactUpGradeItemRsp)
  // repeated .pb.TCommonReward Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactUpGradeItemRsp)
  return target;
}

int TArtifactUpGradeItemRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward Items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactUpGradeItemRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactUpGradeItemRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactUpGradeItemRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactUpGradeItemRsp::MergeFrom(const TArtifactUpGradeItemRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactUpGradeItemRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactUpGradeItemRsp::CopyFrom(const TArtifactUpGradeItemRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactUpGradeItemRsp::IsInitialized() const {

  return true;
}

void TArtifactUpGradeItemRsp::Swap(TArtifactUpGradeItemRsp* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactUpGradeItemRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactUpGradeItemRsp_descriptor_;
  metadata.reflection = TArtifactUpGradeItemRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TArtifactNodify::kArtifactInfoArrFieldNumber;
const int TArtifactNodify::kArtifactEffectInfoArrFieldNumber;
const int TArtifactNodify::kChargeNumFieldNumber;
#endif  // !_MSC_VER

TArtifactNodify::TArtifactNodify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TArtifactNodify)
}

void TArtifactNodify::InitAsDefaultInstance() {
}

TArtifactNodify::TArtifactNodify(const TArtifactNodify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TArtifactNodify)
}

void TArtifactNodify::SharedCtor() {
  _cached_size_ = 0;
  chargenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TArtifactNodify::~TArtifactNodify() {
  // @@protoc_insertion_point(destructor:pb.TArtifactNodify)
  SharedDtor();
}

void TArtifactNodify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TArtifactNodify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TArtifactNodify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TArtifactNodify_descriptor_;
}

const TArtifactNodify& TArtifactNodify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fArtifact_2eproto();
  return *default_instance_;
}

TArtifactNodify* TArtifactNodify::default_instance_ = NULL;

TArtifactNodify* TArtifactNodify::New() const {
  return new TArtifactNodify;
}

void TArtifactNodify::Clear() {
  chargenum_ = 0u;
  artifactinfoarr_.Clear();
  artifacteffectinfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TArtifactNodify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TArtifactNodify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TArtifactInfo ArtifactInfoArr = 1;
      case 1: {
        if (tag == 10) {
         parse_ArtifactInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_artifactinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArtifactInfoArr;
        if (input->ExpectTag(18)) goto parse_ArtifactEffectInfoArr;
        break;
      }

      // repeated .pb.TArtifactEffectInfo ArtifactEffectInfoArr = 2;
      case 2: {
        if (tag == 18) {
         parse_ArtifactEffectInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_artifacteffectinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArtifactEffectInfoArr;
        if (input->ExpectTag(24)) goto parse_ChargeNum;
        break;
      }

      // optional uint32 ChargeNum = 3;
      case 3: {
        if (tag == 24) {
         parse_ChargeNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chargenum_)));
          set_has_chargenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TArtifactNodify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TArtifactNodify)
  return false;
#undef DO_
}

void TArtifactNodify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TArtifactNodify)
  // repeated .pb.TArtifactInfo ArtifactInfoArr = 1;
  for (int i = 0; i < this->artifactinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->artifactinfoarr(i), output);
  }

  // repeated .pb.TArtifactEffectInfo ArtifactEffectInfoArr = 2;
  for (int i = 0; i < this->artifacteffectinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->artifacteffectinfoarr(i), output);
  }

  // optional uint32 ChargeNum = 3;
  if (has_chargenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->chargenum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TArtifactNodify)
}

::google::protobuf::uint8* TArtifactNodify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TArtifactNodify)
  // repeated .pb.TArtifactInfo ArtifactInfoArr = 1;
  for (int i = 0; i < this->artifactinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->artifactinfoarr(i), target);
  }

  // repeated .pb.TArtifactEffectInfo ArtifactEffectInfoArr = 2;
  for (int i = 0; i < this->artifacteffectinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->artifacteffectinfoarr(i), target);
  }

  // optional uint32 ChargeNum = 3;
  if (has_chargenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->chargenum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TArtifactNodify)
  return target;
}

int TArtifactNodify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional uint32 ChargeNum = 3;
    if (has_chargenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chargenum());
    }

  }
  // repeated .pb.TArtifactInfo ArtifactInfoArr = 1;
  total_size += 1 * this->artifactinfoarr_size();
  for (int i = 0; i < this->artifactinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->artifactinfoarr(i));
  }

  // repeated .pb.TArtifactEffectInfo ArtifactEffectInfoArr = 2;
  total_size += 1 * this->artifacteffectinfoarr_size();
  for (int i = 0; i < this->artifacteffectinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->artifacteffectinfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TArtifactNodify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TArtifactNodify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TArtifactNodify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TArtifactNodify::MergeFrom(const TArtifactNodify& from) {
  GOOGLE_CHECK_NE(&from, this);
  artifactinfoarr_.MergeFrom(from.artifactinfoarr_);
  artifacteffectinfoarr_.MergeFrom(from.artifacteffectinfoarr_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_chargenum()) {
      set_chargenum(from.chargenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TArtifactNodify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TArtifactNodify::CopyFrom(const TArtifactNodify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TArtifactNodify::IsInitialized() const {

  return true;
}

void TArtifactNodify::Swap(TArtifactNodify* other) {
  if (other != this) {
    artifactinfoarr_.Swap(&other->artifactinfoarr_);
    artifacteffectinfoarr_.Swap(&other->artifacteffectinfoarr_);
    std::swap(chargenum_, other->chargenum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TArtifactNodify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TArtifactNodify_descriptor_;
  metadata.reflection = TArtifactNodify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
