// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/CrossAllianceTreasureBox.proto

#ifndef PROTOBUF_net_2fCrossAllianceTreasureBox_2eproto__INCLUDED
#define PROTOBUF_net_2fCrossAllianceTreasureBox_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
#include "net/User.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fCrossAllianceTreasureBox_2eproto();
void protobuf_AssignDesc_net_2fCrossAllianceTreasureBox_2eproto();
void protobuf_ShutdownFile_net_2fCrossAllianceTreasureBox_2eproto();

class TCrossAllianceTreasureBoxInfo;
class TCrossAllianceTreasureBoxGetSimpleInfoRsp;
class TCrossAllianceTreasureBoxGetBoxInfoReq;
class TCrossAllianceTreasureBoxGetBoxInfoRsp;
class TCrossAllianceTreasureBoxReceiveTreasureBoxReq;
class TCrossAllianceTreasureBoxReceiveTreasureBoxRsp;
class TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp;
class TCrossAllianceTreasureBoxSetAnonymityReq;
class TCrossAllianceTreasureBoxSetAnonymityRsp;
class TCrossAllianceTreasureBoxDataChangeNotify;

enum EBoxType {
  EBox_Active = 1,
  EBox_Recharge = 2,
  EBox_Resource = 3
};
bool EBoxType_IsValid(int value);
const EBoxType EBoxType_MIN = EBox_Active;
const EBoxType EBoxType_MAX = EBox_Resource;
const int EBoxType_ARRAYSIZE = EBoxType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EBoxType_descriptor();
inline const ::std::string& EBoxType_Name(EBoxType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EBoxType_descriptor(), value);
}
inline bool EBoxType_Parse(
    const ::std::string& name, EBoxType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EBoxType>(
    EBoxType_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TCrossAllianceTreasureBoxInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CrossAllianceTreasureBox.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCrossAllianceTreasureBoxInfo : public ::google::protobuf::Message {
 public:
  TCrossAllianceTreasureBoxInfo();
  virtual ~TCrossAllianceTreasureBoxInfo();

  TCrossAllianceTreasureBoxInfo(const TCrossAllianceTreasureBoxInfo& from);

  inline TCrossAllianceTreasureBoxInfo& operator=(const TCrossAllianceTreasureBoxInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCrossAllianceTreasureBoxInfo& default_instance();

  void Swap(TCrossAllianceTreasureBoxInfo* other);

  // implements Message ----------------------------------------------

  TCrossAllianceTreasureBoxInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCrossAllianceTreasureBoxInfo& from);
  void MergeFrom(const TCrossAllianceTreasureBoxInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 GainTime = 2;
  inline bool has_gaintime() const;
  inline void clear_gaintime();
  static const int kGainTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxInfo</name>
  	<Function>
  		<name>gaintime</name>
  		<replaceName>GainTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_gaintime</name>
  		<replaceName>GainTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_gaintime</name>
  		<replaceName>GainTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 gaintime() const;
  inline void set_gaintime(::google::protobuf::uint64 value);

  // optional uint64 PickUpTime = 3;
  inline bool has_pickuptime() const;
  inline void clear_pickuptime();
  static const int kPickUpTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxInfo</name>
  	<Function>
  		<name>pickuptime</name>
  		<replaceName>PickUpTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pickuptime</name>
  		<replaceName>PickUpTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pickuptime</name>
  		<replaceName>PickUpTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 pickuptime() const;
  inline void set_pickuptime(::google::protobuf::uint64 value);

  // optional .pb.TUserSimpleInfo UserInfo = 4;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxInfo</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // optional uint32 BoxState = 5;
  inline bool has_boxstate() const;
  inline void clear_boxstate();
  static const int kBoxStateFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxInfo</name>
  	<Function>
  		<name>boxstate</name>
  		<replaceName>BoxState</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boxstate</name>
  		<replaceName>BoxState</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boxstate</name>
  		<replaceName>BoxState</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 boxstate() const;
  inline void set_boxstate(::google::protobuf::uint32 value);

  // optional uint32 Tid = 6;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxInfo</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TCrossAllianceTreasureBoxInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_gaintime();
  inline void clear_has_gaintime();
  inline void set_has_pickuptime();
  inline void clear_has_pickuptime();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_boxstate();
  inline void clear_has_boxstate();
  inline void set_has_tid();
  inline void clear_has_tid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 gaintime_;
  ::google::protobuf::uint64 pickuptime_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 boxstate_;
  ::pb::TUserSimpleInfo* userinfo_;
  ::google::protobuf::uint32 tid_;
  friend void  protobuf_AddDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_AssignDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_ShutdownFile_net_2fCrossAllianceTreasureBox_2eproto();

  void InitAsDefaultInstance();
  static TCrossAllianceTreasureBoxInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TCrossAllianceTreasureBoxGetSimpleInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CrossAllianceTreasureBox.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCrossAllianceTreasureBoxGetSimpleInfoRsp : public ::google::protobuf::Message {
 public:
  TCrossAllianceTreasureBoxGetSimpleInfoRsp();
  virtual ~TCrossAllianceTreasureBoxGetSimpleInfoRsp();

  TCrossAllianceTreasureBoxGetSimpleInfoRsp(const TCrossAllianceTreasureBoxGetSimpleInfoRsp& from);

  inline TCrossAllianceTreasureBoxGetSimpleInfoRsp& operator=(const TCrossAllianceTreasureBoxGetSimpleInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCrossAllianceTreasureBoxGetSimpleInfoRsp& default_instance();

  void Swap(TCrossAllianceTreasureBoxGetSimpleInfoRsp* other);

  // implements Message ----------------------------------------------

  TCrossAllianceTreasureBoxGetSimpleInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCrossAllianceTreasureBoxGetSimpleInfoRsp& from);
  void MergeFrom(const TCrossAllianceTreasureBoxGetSimpleInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ResourcePoint = 1;
  inline bool has_resourcepoint() const;
  inline void clear_resourcepoint();
  static const int kResourcePointFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetSimpleInfoRsp</name>
  	<Function>
  		<name>resourcepoint</name>
  		<replaceName>ResourcePoint</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_resourcepoint</name>
  		<replaceName>ResourcePoint</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_resourcepoint</name>
  		<replaceName>ResourcePoint</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 resourcepoint() const;
  inline void set_resourcepoint(::google::protobuf::uint32 value);

  // optional uint32 BoxLevel = 2;
  inline bool has_boxlevel() const;
  inline void clear_boxlevel();
  static const int kBoxLevelFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetSimpleInfoRsp</name>
  	<Function>
  		<name>boxlevel</name>
  		<replaceName>BoxLevel</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boxlevel</name>
  		<replaceName>BoxLevel</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boxlevel</name>
  		<replaceName>BoxLevel</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 boxlevel() const;
  inline void set_boxlevel(::google::protobuf::uint32 value);

  // optional uint32 OpenedTimes = 3;
  inline bool has_openedtimes() const;
  inline void clear_openedtimes();
  static const int kOpenedTimesFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetSimpleInfoRsp</name>
  	<Function>
  		<name>openedtimes</name>
  		<replaceName>OpenedTimes</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_openedtimes</name>
  		<replaceName>OpenedTimes</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_openedtimes</name>
  		<replaceName>OpenedTimes</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 openedtimes() const;
  inline void set_openedtimes(::google::protobuf::uint32 value);

  // optional uint32 ActiveBoxNum = 4;
  inline bool has_activeboxnum() const;
  inline void clear_activeboxnum();
  static const int kActiveBoxNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetSimpleInfoRsp</name>
  	<Function>
  		<name>activeboxnum</name>
  		<replaceName>ActiveBoxNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_activeboxnum</name>
  		<replaceName>ActiveBoxNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_activeboxnum</name>
  		<replaceName>ActiveBoxNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 activeboxnum() const;
  inline void set_activeboxnum(::google::protobuf::uint32 value);

  // optional uint32 RechargeBoxNum = 5;
  inline bool has_rechargeboxnum() const;
  inline void clear_rechargeboxnum();
  static const int kRechargeBoxNumFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetSimpleInfoRsp</name>
  	<Function>
  		<name>rechargeboxnum</name>
  		<replaceName>RechargeBoxNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rechargeboxnum</name>
  		<replaceName>RechargeBoxNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rechargeboxnum</name>
  		<replaceName>RechargeBoxNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rechargeboxnum() const;
  inline void set_rechargeboxnum(::google::protobuf::uint32 value);

  // optional uint32 ResourceBoxNum = 6;
  inline bool has_resourceboxnum() const;
  inline void clear_resourceboxnum();
  static const int kResourceBoxNumFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetSimpleInfoRsp</name>
  	<Function>
  		<name>resourceboxnum</name>
  		<replaceName>ResourceBoxNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_resourceboxnum</name>
  		<replaceName>ResourceBoxNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_resourceboxnum</name>
  		<replaceName>ResourceBoxNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 resourceboxnum() const;
  inline void set_resourceboxnum(::google::protobuf::uint32 value);

  // optional uint32 UserState = 7;
  inline bool has_userstate() const;
  inline void clear_userstate();
  static const int kUserStateFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetSimpleInfoRsp</name>
  	<Function>
  		<name>userstate</name>
  		<replaceName>UserState</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userstate</name>
  		<replaceName>UserState</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userstate</name>
  		<replaceName>UserState</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 userstate() const;
  inline void set_userstate(::google::protobuf::uint32 value);

  // optional uint64 ActiveBoxLastTime = 8;
  inline bool has_activeboxlasttime() const;
  inline void clear_activeboxlasttime();
  static const int kActiveBoxLastTimeFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetSimpleInfoRsp</name>
  	<Function>
  		<name>activeboxlasttime</name>
  		<replaceName>ActiveBoxLastTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_activeboxlasttime</name>
  		<replaceName>ActiveBoxLastTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_activeboxlasttime</name>
  		<replaceName>ActiveBoxLastTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 activeboxlasttime() const;
  inline void set_activeboxlasttime(::google::protobuf::uint64 value);

  // optional uint64 RechargeBoxLastTime = 9;
  inline bool has_rechargeboxlasttime() const;
  inline void clear_rechargeboxlasttime();
  static const int kRechargeBoxLastTimeFieldNumber = 9;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetSimpleInfoRsp</name>
  	<Function>
  		<name>rechargeboxlasttime</name>
  		<replaceName>RechargeBoxLastTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rechargeboxlasttime</name>
  		<replaceName>RechargeBoxLastTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rechargeboxlasttime</name>
  		<replaceName>RechargeBoxLastTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 rechargeboxlasttime() const;
  inline void set_rechargeboxlasttime(::google::protobuf::uint64 value);

  // optional uint64 ResourceBoxLastTime = 10;
  inline bool has_resourceboxlasttime() const;
  inline void clear_resourceboxlasttime();
  static const int kResourceBoxLastTimeFieldNumber = 10;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetSimpleInfoRsp</name>
  	<Function>
  		<name>resourceboxlasttime</name>
  		<replaceName>ResourceBoxLastTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_resourceboxlasttime</name>
  		<replaceName>ResourceBoxLastTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_resourceboxlasttime</name>
  		<replaceName>ResourceBoxLastTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 resourceboxlasttime() const;
  inline void set_resourceboxlasttime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp)
 private:
  inline void set_has_resourcepoint();
  inline void clear_has_resourcepoint();
  inline void set_has_boxlevel();
  inline void clear_has_boxlevel();
  inline void set_has_openedtimes();
  inline void clear_has_openedtimes();
  inline void set_has_activeboxnum();
  inline void clear_has_activeboxnum();
  inline void set_has_rechargeboxnum();
  inline void clear_has_rechargeboxnum();
  inline void set_has_resourceboxnum();
  inline void clear_has_resourceboxnum();
  inline void set_has_userstate();
  inline void clear_has_userstate();
  inline void set_has_activeboxlasttime();
  inline void clear_has_activeboxlasttime();
  inline void set_has_rechargeboxlasttime();
  inline void clear_has_rechargeboxlasttime();
  inline void set_has_resourceboxlasttime();
  inline void clear_has_resourceboxlasttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 resourcepoint_;
  ::google::protobuf::uint32 boxlevel_;
  ::google::protobuf::uint32 openedtimes_;
  ::google::protobuf::uint32 activeboxnum_;
  ::google::protobuf::uint32 rechargeboxnum_;
  ::google::protobuf::uint32 resourceboxnum_;
  ::google::protobuf::uint64 activeboxlasttime_;
  ::google::protobuf::uint64 rechargeboxlasttime_;
  ::google::protobuf::uint64 resourceboxlasttime_;
  ::google::protobuf::uint32 userstate_;
  friend void  protobuf_AddDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_AssignDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_ShutdownFile_net_2fCrossAllianceTreasureBox_2eproto();

  void InitAsDefaultInstance();
  static TCrossAllianceTreasureBoxGetSimpleInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TCrossAllianceTreasureBoxGetBoxInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CrossAllianceTreasureBox.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCrossAllianceTreasureBoxGetBoxInfoReq : public ::google::protobuf::Message {
 public:
  TCrossAllianceTreasureBoxGetBoxInfoReq();
  virtual ~TCrossAllianceTreasureBoxGetBoxInfoReq();

  TCrossAllianceTreasureBoxGetBoxInfoReq(const TCrossAllianceTreasureBoxGetBoxInfoReq& from);

  inline TCrossAllianceTreasureBoxGetBoxInfoReq& operator=(const TCrossAllianceTreasureBoxGetBoxInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCrossAllianceTreasureBoxGetBoxInfoReq& default_instance();

  void Swap(TCrossAllianceTreasureBoxGetBoxInfoReq* other);

  // implements Message ----------------------------------------------

  TCrossAllianceTreasureBoxGetBoxInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCrossAllianceTreasureBoxGetBoxInfoReq& from);
  void MergeFrom(const TCrossAllianceTreasureBoxGetBoxInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.EBoxType BoxType = 1;
  inline bool has_boxtype() const;
  inline void clear_boxtype();
  static const int kBoxTypeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetBoxInfoReq</name>
  	<Function>
  		<name>boxtype</name>
  		<replaceName>BoxType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boxtype</name>
  		<replaceName>BoxType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boxtype</name>
  		<replaceName>BoxType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EBoxType boxtype() const;
  inline void set_boxtype(::pb::EBoxType value);

  // optional uint32 OffSet = 2;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffSetFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetBoxInfoReq</name>
  	<Function>
  		<name>offset</name>
  		<replaceName>OffSet</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_offset</name>
  		<replaceName>OffSet</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_offset</name>
  		<replaceName>OffSet</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 Limit = 3;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetBoxInfoReq</name>
  	<Function>
  		<name>limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // repeated uint32 BoxIdArr = 4;
  inline int boxidarr_size() const;
  inline void clear_boxidarr();
  static const int kBoxIdArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetBoxInfoReq</name>
  	<Function>
  		<name>boxidarr</name>
  		<replaceName>BoxIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_boxidarr</name>
  		<replaceName>BoxIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_boxidarr</name>
  		<replaceName>BoxIdArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boxidarr</name>
  		<replaceName>BoxIdArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>boxidarr_size</name>
  		<replaceName>BoxIdArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 boxidarr(int index) const;
  inline void set_boxidarr(int index, ::google::protobuf::uint32 value);
  inline void add_boxidarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      boxidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_boxidarr();

  // @@protoc_insertion_point(class_scope:pb.TCrossAllianceTreasureBoxGetBoxInfoReq)
 private:
  inline void set_has_boxtype();
  inline void clear_has_boxtype();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int boxtype_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > boxidarr_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_AssignDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_ShutdownFile_net_2fCrossAllianceTreasureBox_2eproto();

  void InitAsDefaultInstance();
  static TCrossAllianceTreasureBoxGetBoxInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TCrossAllianceTreasureBoxGetBoxInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CrossAllianceTreasureBox.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCrossAllianceTreasureBoxGetBoxInfoRsp : public ::google::protobuf::Message {
 public:
  TCrossAllianceTreasureBoxGetBoxInfoRsp();
  virtual ~TCrossAllianceTreasureBoxGetBoxInfoRsp();

  TCrossAllianceTreasureBoxGetBoxInfoRsp(const TCrossAllianceTreasureBoxGetBoxInfoRsp& from);

  inline TCrossAllianceTreasureBoxGetBoxInfoRsp& operator=(const TCrossAllianceTreasureBoxGetBoxInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCrossAllianceTreasureBoxGetBoxInfoRsp& default_instance();

  void Swap(TCrossAllianceTreasureBoxGetBoxInfoRsp* other);

  // implements Message ----------------------------------------------

  TCrossAllianceTreasureBoxGetBoxInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCrossAllianceTreasureBoxGetBoxInfoRsp& from);
  void MergeFrom(const TCrossAllianceTreasureBoxGetBoxInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCrossAllianceTreasureBoxInfo BoxInfoArr = 1;
  inline int boxinfoarr_size() const;
  inline void clear_boxinfoarr();
  static const int kBoxInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxGetBoxInfoRsp</name>
  	<Function>
  		<name>boxinfoarr</name>
  		<replaceName>BoxInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_boxinfoarr</name>
  		<replaceName>BoxInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_boxinfoarr</name>
  		<replaceName>BoxInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boxinfoarr</name>
  		<replaceName>BoxInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>boxinfoarr_size</name>
  		<replaceName>BoxInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCrossAllianceTreasureBoxInfo& boxinfoarr(int index) const;
  inline ::pb::TCrossAllianceTreasureBoxInfo* mutable_boxinfoarr(int index);
  inline ::pb::TCrossAllianceTreasureBoxInfo* add_boxinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCrossAllianceTreasureBoxInfo >&
      boxinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCrossAllianceTreasureBoxInfo >*
      mutable_boxinfoarr();

  // @@protoc_insertion_point(class_scope:pb.TCrossAllianceTreasureBoxGetBoxInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCrossAllianceTreasureBoxInfo > boxinfoarr_;
  friend void  protobuf_AddDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_AssignDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_ShutdownFile_net_2fCrossAllianceTreasureBox_2eproto();

  void InitAsDefaultInstance();
  static TCrossAllianceTreasureBoxGetBoxInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TCrossAllianceTreasureBoxReceiveTreasureBoxReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CrossAllianceTreasureBox.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCrossAllianceTreasureBoxReceiveTreasureBoxReq : public ::google::protobuf::Message {
 public:
  TCrossAllianceTreasureBoxReceiveTreasureBoxReq();
  virtual ~TCrossAllianceTreasureBoxReceiveTreasureBoxReq();

  TCrossAllianceTreasureBoxReceiveTreasureBoxReq(const TCrossAllianceTreasureBoxReceiveTreasureBoxReq& from);

  inline TCrossAllianceTreasureBoxReceiveTreasureBoxReq& operator=(const TCrossAllianceTreasureBoxReceiveTreasureBoxReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCrossAllianceTreasureBoxReceiveTreasureBoxReq& default_instance();

  void Swap(TCrossAllianceTreasureBoxReceiveTreasureBoxReq* other);

  // implements Message ----------------------------------------------

  TCrossAllianceTreasureBoxReceiveTreasureBoxReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCrossAllianceTreasureBoxReceiveTreasureBoxReq& from);
  void MergeFrom(const TCrossAllianceTreasureBoxReceiveTreasureBoxReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxReceiveTreasureBoxReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .pb.EBoxType Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxReceiveTreasureBoxReq</name>
  	<Function>
  		<name>type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_type</name>
  		<replaceName>Type</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EBoxType type() const;
  inline void set_type(::pb::EBoxType value);

  // @@protoc_insertion_point(class_scope:pb.TCrossAllianceTreasureBoxReceiveTreasureBoxReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  int type_;
  friend void  protobuf_AddDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_AssignDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_ShutdownFile_net_2fCrossAllianceTreasureBox_2eproto();

  void InitAsDefaultInstance();
  static TCrossAllianceTreasureBoxReceiveTreasureBoxReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TCrossAllianceTreasureBoxReceiveTreasureBoxRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CrossAllianceTreasureBox.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCrossAllianceTreasureBoxReceiveTreasureBoxRsp : public ::google::protobuf::Message {
 public:
  TCrossAllianceTreasureBoxReceiveTreasureBoxRsp();
  virtual ~TCrossAllianceTreasureBoxReceiveTreasureBoxRsp();

  TCrossAllianceTreasureBoxReceiveTreasureBoxRsp(const TCrossAllianceTreasureBoxReceiveTreasureBoxRsp& from);

  inline TCrossAllianceTreasureBoxReceiveTreasureBoxRsp& operator=(const TCrossAllianceTreasureBoxReceiveTreasureBoxRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCrossAllianceTreasureBoxReceiveTreasureBoxRsp& default_instance();

  void Swap(TCrossAllianceTreasureBoxReceiveTreasureBoxRsp* other);

  // implements Message ----------------------------------------------

  TCrossAllianceTreasureBoxReceiveTreasureBoxRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCrossAllianceTreasureBoxReceiveTreasureBoxRsp& from);
  void MergeFrom(const TCrossAllianceTreasureBoxReceiveTreasureBoxRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArr = 1;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxReceiveTreasureBoxRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarr(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarr(int index);
  inline ::pb::TCommonReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarr();

  // optional uint64 LastTime = 2;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxReceiveTreasureBoxRsp</name>
  	<Function>
  		<name>lasttime</name>
  		<replaceName>LastTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_lasttime</name>
  		<replaceName>LastTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_lasttime</name>
  		<replaceName>LastTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TCrossAllianceTreasureBoxReceiveTreasureBoxRsp)
 private:
  inline void set_has_lasttime();
  inline void clear_has_lasttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarr_;
  ::google::protobuf::uint64 lasttime_;
  friend void  protobuf_AddDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_AssignDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_ShutdownFile_net_2fCrossAllianceTreasureBox_2eproto();

  void InitAsDefaultInstance();
  static TCrossAllianceTreasureBoxReceiveTreasureBoxRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CrossAllianceTreasureBox.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp : public ::google::protobuf::Message {
 public:
  TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp();
  virtual ~TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp();

  TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp(const TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp& from);

  inline TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp& operator=(const TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp& default_instance();

  void Swap(TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp* other);

  // implements Message ----------------------------------------------

  TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp& from);
  void MergeFrom(const TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArr = 1;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarr(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarr(int index);
  inline ::pb::TCommonReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarr();

  // @@protoc_insertion_point(class_scope:pb.TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarr_;
  friend void  protobuf_AddDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_AssignDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_ShutdownFile_net_2fCrossAllianceTreasureBox_2eproto();

  void InitAsDefaultInstance();
  static TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TCrossAllianceTreasureBoxSetAnonymityReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CrossAllianceTreasureBox.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCrossAllianceTreasureBoxSetAnonymityReq : public ::google::protobuf::Message {
 public:
  TCrossAllianceTreasureBoxSetAnonymityReq();
  virtual ~TCrossAllianceTreasureBoxSetAnonymityReq();

  TCrossAllianceTreasureBoxSetAnonymityReq(const TCrossAllianceTreasureBoxSetAnonymityReq& from);

  inline TCrossAllianceTreasureBoxSetAnonymityReq& operator=(const TCrossAllianceTreasureBoxSetAnonymityReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCrossAllianceTreasureBoxSetAnonymityReq& default_instance();

  void Swap(TCrossAllianceTreasureBoxSetAnonymityReq* other);

  // implements Message ----------------------------------------------

  TCrossAllianceTreasureBoxSetAnonymityReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCrossAllianceTreasureBoxSetAnonymityReq& from);
  void MergeFrom(const TCrossAllianceTreasureBoxSetAnonymityReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 SetAnonymity = 1;
  inline bool has_setanonymity() const;
  inline void clear_setanonymity();
  static const int kSetAnonymityFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxSetAnonymityReq</name>
  	<Function>
  		<name>setanonymity</name>
  		<replaceName>SetAnonymity</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_setanonymity</name>
  		<replaceName>SetAnonymity</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_setanonymity</name>
  		<replaceName>SetAnonymity</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 setanonymity() const;
  inline void set_setanonymity(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TCrossAllianceTreasureBoxSetAnonymityReq)
 private:
  inline void set_has_setanonymity();
  inline void clear_has_setanonymity();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 setanonymity_;
  friend void  protobuf_AddDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_AssignDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_ShutdownFile_net_2fCrossAllianceTreasureBox_2eproto();

  void InitAsDefaultInstance();
  static TCrossAllianceTreasureBoxSetAnonymityReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TCrossAllianceTreasureBoxSetAnonymityRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CrossAllianceTreasureBox.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCrossAllianceTreasureBoxSetAnonymityRsp : public ::google::protobuf::Message {
 public:
  TCrossAllianceTreasureBoxSetAnonymityRsp();
  virtual ~TCrossAllianceTreasureBoxSetAnonymityRsp();

  TCrossAllianceTreasureBoxSetAnonymityRsp(const TCrossAllianceTreasureBoxSetAnonymityRsp& from);

  inline TCrossAllianceTreasureBoxSetAnonymityRsp& operator=(const TCrossAllianceTreasureBoxSetAnonymityRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCrossAllianceTreasureBoxSetAnonymityRsp& default_instance();

  void Swap(TCrossAllianceTreasureBoxSetAnonymityRsp* other);

  // implements Message ----------------------------------------------

  TCrossAllianceTreasureBoxSetAnonymityRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCrossAllianceTreasureBoxSetAnonymityRsp& from);
  void MergeFrom(const TCrossAllianceTreasureBoxSetAnonymityRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 IsAnonymity = 2;
  inline bool has_isanonymity() const;
  inline void clear_isanonymity();
  static const int kIsAnonymityFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxSetAnonymityRsp</name>
  	<Function>
  		<name>isanonymity</name>
  		<replaceName>IsAnonymity</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_isanonymity</name>
  		<replaceName>IsAnonymity</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_isanonymity</name>
  		<replaceName>IsAnonymity</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 isanonymity() const;
  inline void set_isanonymity(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TCrossAllianceTreasureBoxSetAnonymityRsp)
 private:
  inline void set_has_isanonymity();
  inline void clear_has_isanonymity();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 isanonymity_;
  friend void  protobuf_AddDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_AssignDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_ShutdownFile_net_2fCrossAllianceTreasureBox_2eproto();

  void InitAsDefaultInstance();
  static TCrossAllianceTreasureBoxSetAnonymityRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TCrossAllianceTreasureBoxDataChangeNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CrossAllianceTreasureBox.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCrossAllianceTreasureBoxDataChangeNotify : public ::google::protobuf::Message {
 public:
  TCrossAllianceTreasureBoxDataChangeNotify();
  virtual ~TCrossAllianceTreasureBoxDataChangeNotify();

  TCrossAllianceTreasureBoxDataChangeNotify(const TCrossAllianceTreasureBoxDataChangeNotify& from);

  inline TCrossAllianceTreasureBoxDataChangeNotify& operator=(const TCrossAllianceTreasureBoxDataChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCrossAllianceTreasureBoxDataChangeNotify& default_instance();

  void Swap(TCrossAllianceTreasureBoxDataChangeNotify* other);

  // implements Message ----------------------------------------------

  TCrossAllianceTreasureBoxDataChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCrossAllianceTreasureBoxDataChangeNotify& from);
  void MergeFrom(const TCrossAllianceTreasureBoxDataChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ResourcePoint = 1;
  inline bool has_resourcepoint() const;
  inline void clear_resourcepoint();
  static const int kResourcePointFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxDataChangeNotify</name>
  	<Function>
  		<name>resourcepoint</name>
  		<replaceName>ResourcePoint</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_resourcepoint</name>
  		<replaceName>ResourcePoint</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_resourcepoint</name>
  		<replaceName>ResourcePoint</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 resourcepoint() const;
  inline void set_resourcepoint(::google::protobuf::uint32 value);

  // optional uint32 BoxLevel = 2;
  inline bool has_boxlevel() const;
  inline void clear_boxlevel();
  static const int kBoxLevelFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxDataChangeNotify</name>
  	<Function>
  		<name>boxlevel</name>
  		<replaceName>BoxLevel</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_boxlevel</name>
  		<replaceName>BoxLevel</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_boxlevel</name>
  		<replaceName>BoxLevel</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 boxlevel() const;
  inline void set_boxlevel(::google::protobuf::uint32 value);

  // optional uint32 OpenedTimes = 3;
  inline bool has_openedtimes() const;
  inline void clear_openedtimes();
  static const int kOpenedTimesFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxDataChangeNotify</name>
  	<Function>
  		<name>openedtimes</name>
  		<replaceName>OpenedTimes</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_openedtimes</name>
  		<replaceName>OpenedTimes</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_openedtimes</name>
  		<replaceName>OpenedTimes</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 openedtimes() const;
  inline void set_openedtimes(::google::protobuf::uint32 value);

  // optional .pb.TCrossAllianceTreasureBoxInfo ActiveBoxInfo = 4;
  inline bool has_activeboxinfo() const;
  inline void clear_activeboxinfo();
  static const int kActiveBoxInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxDataChangeNotify</name>
  	<Function>
  		<name>activeboxinfo</name>
  		<replaceName>ActiveBoxInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_activeboxinfo</name>
  		<replaceName>ActiveBoxInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_activeboxinfo</name>
  		<replaceName>ActiveBoxInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_activeboxinfo</name>
  		<replaceName>ActiveBoxInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCrossAllianceTreasureBoxInfo& activeboxinfo() const;
  inline ::pb::TCrossAllianceTreasureBoxInfo* mutable_activeboxinfo();
  inline ::pb::TCrossAllianceTreasureBoxInfo* release_activeboxinfo();
  inline void set_allocated_activeboxinfo(::pb::TCrossAllianceTreasureBoxInfo* activeboxinfo);

  // optional .pb.TCrossAllianceTreasureBoxInfo RechargeBoxInfo = 5;
  inline bool has_rechargeboxinfo() const;
  inline void clear_rechargeboxinfo();
  static const int kRechargeBoxInfoFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxDataChangeNotify</name>
  	<Function>
  		<name>rechargeboxinfo</name>
  		<replaceName>RechargeBoxInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rechargeboxinfo</name>
  		<replaceName>RechargeBoxInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_rechargeboxinfo</name>
  		<replaceName>RechargeBoxInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rechargeboxinfo</name>
  		<replaceName>RechargeBoxInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCrossAllianceTreasureBoxInfo& rechargeboxinfo() const;
  inline ::pb::TCrossAllianceTreasureBoxInfo* mutable_rechargeboxinfo();
  inline ::pb::TCrossAllianceTreasureBoxInfo* release_rechargeboxinfo();
  inline void set_allocated_rechargeboxinfo(::pb::TCrossAllianceTreasureBoxInfo* rechargeboxinfo);

  // optional .pb.TCrossAllianceTreasureBoxInfo ResourceBoxInfo = 6;
  inline bool has_resourceboxinfo() const;
  inline void clear_resourceboxinfo();
  static const int kResourceBoxInfoFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TCrossAllianceTreasureBoxDataChangeNotify</name>
  	<Function>
  		<name>resourceboxinfo</name>
  		<replaceName>ResourceBoxInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_resourceboxinfo</name>
  		<replaceName>ResourceBoxInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_resourceboxinfo</name>
  		<replaceName>ResourceBoxInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_resourceboxinfo</name>
  		<replaceName>ResourceBoxInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCrossAllianceTreasureBoxInfo& resourceboxinfo() const;
  inline ::pb::TCrossAllianceTreasureBoxInfo* mutable_resourceboxinfo();
  inline ::pb::TCrossAllianceTreasureBoxInfo* release_resourceboxinfo();
  inline void set_allocated_resourceboxinfo(::pb::TCrossAllianceTreasureBoxInfo* resourceboxinfo);

  // @@protoc_insertion_point(class_scope:pb.TCrossAllianceTreasureBoxDataChangeNotify)
 private:
  inline void set_has_resourcepoint();
  inline void clear_has_resourcepoint();
  inline void set_has_boxlevel();
  inline void clear_has_boxlevel();
  inline void set_has_openedtimes();
  inline void clear_has_openedtimes();
  inline void set_has_activeboxinfo();
  inline void clear_has_activeboxinfo();
  inline void set_has_rechargeboxinfo();
  inline void clear_has_rechargeboxinfo();
  inline void set_has_resourceboxinfo();
  inline void clear_has_resourceboxinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 resourcepoint_;
  ::google::protobuf::uint32 boxlevel_;
  ::pb::TCrossAllianceTreasureBoxInfo* activeboxinfo_;
  ::pb::TCrossAllianceTreasureBoxInfo* rechargeboxinfo_;
  ::pb::TCrossAllianceTreasureBoxInfo* resourceboxinfo_;
  ::google::protobuf::uint32 openedtimes_;
  friend void  protobuf_AddDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_AssignDesc_net_2fCrossAllianceTreasureBox_2eproto();
  friend void protobuf_ShutdownFile_net_2fCrossAllianceTreasureBox_2eproto();

  void InitAsDefaultInstance();
  static TCrossAllianceTreasureBoxDataChangeNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TCrossAllianceTreasureBoxInfo

// optional uint32 Id = 1;
inline bool TCrossAllianceTreasureBoxInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TCrossAllianceTreasureBoxInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TCrossAllianceTreasureBoxInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TCrossAllianceTreasureBoxInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxInfo.Id)
  return id_;
}
inline void TCrossAllianceTreasureBoxInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxInfo.Id)
}

// optional uint64 GainTime = 2;
inline bool TCrossAllianceTreasureBoxInfo::has_gaintime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TCrossAllianceTreasureBoxInfo::set_has_gaintime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TCrossAllianceTreasureBoxInfo::clear_has_gaintime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TCrossAllianceTreasureBoxInfo::clear_gaintime() {
  gaintime_ = GOOGLE_ULONGLONG(0);
  clear_has_gaintime();
}
inline ::google::protobuf::uint64 TCrossAllianceTreasureBoxInfo::gaintime() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxInfo.GainTime)
  return gaintime_;
}
inline void TCrossAllianceTreasureBoxInfo::set_gaintime(::google::protobuf::uint64 value) {
  set_has_gaintime();
  gaintime_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxInfo.GainTime)
}

// optional uint64 PickUpTime = 3;
inline bool TCrossAllianceTreasureBoxInfo::has_pickuptime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TCrossAllianceTreasureBoxInfo::set_has_pickuptime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TCrossAllianceTreasureBoxInfo::clear_has_pickuptime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TCrossAllianceTreasureBoxInfo::clear_pickuptime() {
  pickuptime_ = GOOGLE_ULONGLONG(0);
  clear_has_pickuptime();
}
inline ::google::protobuf::uint64 TCrossAllianceTreasureBoxInfo::pickuptime() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxInfo.PickUpTime)
  return pickuptime_;
}
inline void TCrossAllianceTreasureBoxInfo::set_pickuptime(::google::protobuf::uint64 value) {
  set_has_pickuptime();
  pickuptime_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxInfo.PickUpTime)
}

// optional .pb.TUserSimpleInfo UserInfo = 4;
inline bool TCrossAllianceTreasureBoxInfo::has_userinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TCrossAllianceTreasureBoxInfo::set_has_userinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TCrossAllianceTreasureBoxInfo::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TCrossAllianceTreasureBoxInfo::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TCrossAllianceTreasureBoxInfo::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxInfo.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TCrossAllianceTreasureBoxInfo::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TCrossAllianceTreasureBoxInfo.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TCrossAllianceTreasureBoxInfo::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TCrossAllianceTreasureBoxInfo::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TCrossAllianceTreasureBoxInfo.UserInfo)
}

// optional uint32 BoxState = 5;
inline bool TCrossAllianceTreasureBoxInfo::has_boxstate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TCrossAllianceTreasureBoxInfo::set_has_boxstate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TCrossAllianceTreasureBoxInfo::clear_has_boxstate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TCrossAllianceTreasureBoxInfo::clear_boxstate() {
  boxstate_ = 0u;
  clear_has_boxstate();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxInfo::boxstate() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxInfo.BoxState)
  return boxstate_;
}
inline void TCrossAllianceTreasureBoxInfo::set_boxstate(::google::protobuf::uint32 value) {
  set_has_boxstate();
  boxstate_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxInfo.BoxState)
}

// optional uint32 Tid = 6;
inline bool TCrossAllianceTreasureBoxInfo::has_tid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TCrossAllianceTreasureBoxInfo::set_has_tid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TCrossAllianceTreasureBoxInfo::clear_has_tid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TCrossAllianceTreasureBoxInfo::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxInfo::tid() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxInfo.Tid)
  return tid_;
}
inline void TCrossAllianceTreasureBoxInfo::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxInfo.Tid)
}

// -------------------------------------------------------------------

// TCrossAllianceTreasureBoxGetSimpleInfoRsp

// optional uint32 ResourcePoint = 1;
inline bool TCrossAllianceTreasureBoxGetSimpleInfoRsp::has_resourcepoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_has_resourcepoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_has_resourcepoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_resourcepoint() {
  resourcepoint_ = 0u;
  clear_has_resourcepoint();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxGetSimpleInfoRsp::resourcepoint() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.ResourcePoint)
  return resourcepoint_;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_resourcepoint(::google::protobuf::uint32 value) {
  set_has_resourcepoint();
  resourcepoint_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.ResourcePoint)
}

// optional uint32 BoxLevel = 2;
inline bool TCrossAllianceTreasureBoxGetSimpleInfoRsp::has_boxlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_has_boxlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_has_boxlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_boxlevel() {
  boxlevel_ = 0u;
  clear_has_boxlevel();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxGetSimpleInfoRsp::boxlevel() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.BoxLevel)
  return boxlevel_;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_boxlevel(::google::protobuf::uint32 value) {
  set_has_boxlevel();
  boxlevel_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.BoxLevel)
}

// optional uint32 OpenedTimes = 3;
inline bool TCrossAllianceTreasureBoxGetSimpleInfoRsp::has_openedtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_has_openedtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_has_openedtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_openedtimes() {
  openedtimes_ = 0u;
  clear_has_openedtimes();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxGetSimpleInfoRsp::openedtimes() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.OpenedTimes)
  return openedtimes_;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_openedtimes(::google::protobuf::uint32 value) {
  set_has_openedtimes();
  openedtimes_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.OpenedTimes)
}

// optional uint32 ActiveBoxNum = 4;
inline bool TCrossAllianceTreasureBoxGetSimpleInfoRsp::has_activeboxnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_has_activeboxnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_has_activeboxnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_activeboxnum() {
  activeboxnum_ = 0u;
  clear_has_activeboxnum();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxGetSimpleInfoRsp::activeboxnum() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.ActiveBoxNum)
  return activeboxnum_;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_activeboxnum(::google::protobuf::uint32 value) {
  set_has_activeboxnum();
  activeboxnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.ActiveBoxNum)
}

// optional uint32 RechargeBoxNum = 5;
inline bool TCrossAllianceTreasureBoxGetSimpleInfoRsp::has_rechargeboxnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_has_rechargeboxnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_has_rechargeboxnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_rechargeboxnum() {
  rechargeboxnum_ = 0u;
  clear_has_rechargeboxnum();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxGetSimpleInfoRsp::rechargeboxnum() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.RechargeBoxNum)
  return rechargeboxnum_;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_rechargeboxnum(::google::protobuf::uint32 value) {
  set_has_rechargeboxnum();
  rechargeboxnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.RechargeBoxNum)
}

// optional uint32 ResourceBoxNum = 6;
inline bool TCrossAllianceTreasureBoxGetSimpleInfoRsp::has_resourceboxnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_has_resourceboxnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_has_resourceboxnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_resourceboxnum() {
  resourceboxnum_ = 0u;
  clear_has_resourceboxnum();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxGetSimpleInfoRsp::resourceboxnum() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.ResourceBoxNum)
  return resourceboxnum_;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_resourceboxnum(::google::protobuf::uint32 value) {
  set_has_resourceboxnum();
  resourceboxnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.ResourceBoxNum)
}

// optional uint32 UserState = 7;
inline bool TCrossAllianceTreasureBoxGetSimpleInfoRsp::has_userstate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_has_userstate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_has_userstate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_userstate() {
  userstate_ = 0u;
  clear_has_userstate();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxGetSimpleInfoRsp::userstate() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.UserState)
  return userstate_;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_userstate(::google::protobuf::uint32 value) {
  set_has_userstate();
  userstate_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.UserState)
}

// optional uint64 ActiveBoxLastTime = 8;
inline bool TCrossAllianceTreasureBoxGetSimpleInfoRsp::has_activeboxlasttime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_has_activeboxlasttime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_has_activeboxlasttime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_activeboxlasttime() {
  activeboxlasttime_ = GOOGLE_ULONGLONG(0);
  clear_has_activeboxlasttime();
}
inline ::google::protobuf::uint64 TCrossAllianceTreasureBoxGetSimpleInfoRsp::activeboxlasttime() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.ActiveBoxLastTime)
  return activeboxlasttime_;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_activeboxlasttime(::google::protobuf::uint64 value) {
  set_has_activeboxlasttime();
  activeboxlasttime_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.ActiveBoxLastTime)
}

// optional uint64 RechargeBoxLastTime = 9;
inline bool TCrossAllianceTreasureBoxGetSimpleInfoRsp::has_rechargeboxlasttime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_has_rechargeboxlasttime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_has_rechargeboxlasttime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_rechargeboxlasttime() {
  rechargeboxlasttime_ = GOOGLE_ULONGLONG(0);
  clear_has_rechargeboxlasttime();
}
inline ::google::protobuf::uint64 TCrossAllianceTreasureBoxGetSimpleInfoRsp::rechargeboxlasttime() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.RechargeBoxLastTime)
  return rechargeboxlasttime_;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_rechargeboxlasttime(::google::protobuf::uint64 value) {
  set_has_rechargeboxlasttime();
  rechargeboxlasttime_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.RechargeBoxLastTime)
}

// optional uint64 ResourceBoxLastTime = 10;
inline bool TCrossAllianceTreasureBoxGetSimpleInfoRsp::has_resourceboxlasttime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_has_resourceboxlasttime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_has_resourceboxlasttime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::clear_resourceboxlasttime() {
  resourceboxlasttime_ = GOOGLE_ULONGLONG(0);
  clear_has_resourceboxlasttime();
}
inline ::google::protobuf::uint64 TCrossAllianceTreasureBoxGetSimpleInfoRsp::resourceboxlasttime() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.ResourceBoxLastTime)
  return resourceboxlasttime_;
}
inline void TCrossAllianceTreasureBoxGetSimpleInfoRsp::set_resourceboxlasttime(::google::protobuf::uint64 value) {
  set_has_resourceboxlasttime();
  resourceboxlasttime_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetSimpleInfoRsp.ResourceBoxLastTime)
}

// -------------------------------------------------------------------

// TCrossAllianceTreasureBoxGetBoxInfoReq

// optional .pb.EBoxType BoxType = 1;
inline bool TCrossAllianceTreasureBoxGetBoxInfoReq::has_boxtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::set_has_boxtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::clear_has_boxtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::clear_boxtype() {
  boxtype_ = 1;
  clear_has_boxtype();
}
inline ::pb::EBoxType TCrossAllianceTreasureBoxGetBoxInfoReq::boxtype() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetBoxInfoReq.BoxType)
  return static_cast< ::pb::EBoxType >(boxtype_);
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::set_boxtype(::pb::EBoxType value) {
  assert(::pb::EBoxType_IsValid(value));
  set_has_boxtype();
  boxtype_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetBoxInfoReq.BoxType)
}

// optional uint32 OffSet = 2;
inline bool TCrossAllianceTreasureBoxGetBoxInfoReq::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxGetBoxInfoReq::offset() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetBoxInfoReq.OffSet)
  return offset_;
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetBoxInfoReq.OffSet)
}

// optional uint32 Limit = 3;
inline bool TCrossAllianceTreasureBoxGetBoxInfoReq::has_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::set_has_limit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::clear_has_limit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxGetBoxInfoReq::limit() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetBoxInfoReq.Limit)
  return limit_;
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetBoxInfoReq.Limit)
}

// repeated uint32 BoxIdArr = 4;
inline int TCrossAllianceTreasureBoxGetBoxInfoReq::boxidarr_size() const {
  return boxidarr_.size();
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::clear_boxidarr() {
  boxidarr_.Clear();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxGetBoxInfoReq::boxidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetBoxInfoReq.BoxIdArr)
  return boxidarr_.Get(index);
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::set_boxidarr(int index, ::google::protobuf::uint32 value) {
  boxidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxGetBoxInfoReq.BoxIdArr)
}
inline void TCrossAllianceTreasureBoxGetBoxInfoReq::add_boxidarr(::google::protobuf::uint32 value) {
  boxidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TCrossAllianceTreasureBoxGetBoxInfoReq.BoxIdArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TCrossAllianceTreasureBoxGetBoxInfoReq::boxidarr() const {
  // @@protoc_insertion_point(field_list:pb.TCrossAllianceTreasureBoxGetBoxInfoReq.BoxIdArr)
  return boxidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TCrossAllianceTreasureBoxGetBoxInfoReq::mutable_boxidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TCrossAllianceTreasureBoxGetBoxInfoReq.BoxIdArr)
  return &boxidarr_;
}

// -------------------------------------------------------------------

// TCrossAllianceTreasureBoxGetBoxInfoRsp

// repeated .pb.TCrossAllianceTreasureBoxInfo BoxInfoArr = 1;
inline int TCrossAllianceTreasureBoxGetBoxInfoRsp::boxinfoarr_size() const {
  return boxinfoarr_.size();
}
inline void TCrossAllianceTreasureBoxGetBoxInfoRsp::clear_boxinfoarr() {
  boxinfoarr_.Clear();
}
inline const ::pb::TCrossAllianceTreasureBoxInfo& TCrossAllianceTreasureBoxGetBoxInfoRsp::boxinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxGetBoxInfoRsp.BoxInfoArr)
  return boxinfoarr_.Get(index);
}
inline ::pb::TCrossAllianceTreasureBoxInfo* TCrossAllianceTreasureBoxGetBoxInfoRsp::mutable_boxinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TCrossAllianceTreasureBoxGetBoxInfoRsp.BoxInfoArr)
  return boxinfoarr_.Mutable(index);
}
inline ::pb::TCrossAllianceTreasureBoxInfo* TCrossAllianceTreasureBoxGetBoxInfoRsp::add_boxinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TCrossAllianceTreasureBoxGetBoxInfoRsp.BoxInfoArr)
  return boxinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCrossAllianceTreasureBoxInfo >&
TCrossAllianceTreasureBoxGetBoxInfoRsp::boxinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TCrossAllianceTreasureBoxGetBoxInfoRsp.BoxInfoArr)
  return boxinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCrossAllianceTreasureBoxInfo >*
TCrossAllianceTreasureBoxGetBoxInfoRsp::mutable_boxinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TCrossAllianceTreasureBoxGetBoxInfoRsp.BoxInfoArr)
  return &boxinfoarr_;
}

// -------------------------------------------------------------------

// TCrossAllianceTreasureBoxReceiveTreasureBoxReq

// optional uint32 Id = 1;
inline bool TCrossAllianceTreasureBoxReceiveTreasureBoxReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TCrossAllianceTreasureBoxReceiveTreasureBoxReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TCrossAllianceTreasureBoxReceiveTreasureBoxReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TCrossAllianceTreasureBoxReceiveTreasureBoxReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxReceiveTreasureBoxReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxReceiveTreasureBoxReq.Id)
  return id_;
}
inline void TCrossAllianceTreasureBoxReceiveTreasureBoxReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxReceiveTreasureBoxReq.Id)
}

// optional .pb.EBoxType Type = 2;
inline bool TCrossAllianceTreasureBoxReceiveTreasureBoxReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TCrossAllianceTreasureBoxReceiveTreasureBoxReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TCrossAllianceTreasureBoxReceiveTreasureBoxReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TCrossAllianceTreasureBoxReceiveTreasureBoxReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::pb::EBoxType TCrossAllianceTreasureBoxReceiveTreasureBoxReq::type() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxReceiveTreasureBoxReq.Type)
  return static_cast< ::pb::EBoxType >(type_);
}
inline void TCrossAllianceTreasureBoxReceiveTreasureBoxReq::set_type(::pb::EBoxType value) {
  assert(::pb::EBoxType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxReceiveTreasureBoxReq.Type)
}

// -------------------------------------------------------------------

// TCrossAllianceTreasureBoxReceiveTreasureBoxRsp

// repeated .pb.TCommonReward RewardArr = 1;
inline int TCrossAllianceTreasureBoxReceiveTreasureBoxRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TCrossAllianceTreasureBoxReceiveTreasureBoxRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TCommonReward& TCrossAllianceTreasureBoxReceiveTreasureBoxRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxReceiveTreasureBoxRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TCommonReward* TCrossAllianceTreasureBoxReceiveTreasureBoxRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TCrossAllianceTreasureBoxReceiveTreasureBoxRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TCommonReward* TCrossAllianceTreasureBoxReceiveTreasureBoxRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TCrossAllianceTreasureBoxReceiveTreasureBoxRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TCrossAllianceTreasureBoxReceiveTreasureBoxRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TCrossAllianceTreasureBoxReceiveTreasureBoxRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TCrossAllianceTreasureBoxReceiveTreasureBoxRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TCrossAllianceTreasureBoxReceiveTreasureBoxRsp.RewardArr)
  return &rewardarr_;
}

// optional uint64 LastTime = 2;
inline bool TCrossAllianceTreasureBoxReceiveTreasureBoxRsp::has_lasttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TCrossAllianceTreasureBoxReceiveTreasureBoxRsp::set_has_lasttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TCrossAllianceTreasureBoxReceiveTreasureBoxRsp::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TCrossAllianceTreasureBoxReceiveTreasureBoxRsp::clear_lasttime() {
  lasttime_ = GOOGLE_ULONGLONG(0);
  clear_has_lasttime();
}
inline ::google::protobuf::uint64 TCrossAllianceTreasureBoxReceiveTreasureBoxRsp::lasttime() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxReceiveTreasureBoxRsp.LastTime)
  return lasttime_;
}
inline void TCrossAllianceTreasureBoxReceiveTreasureBoxRsp::set_lasttime(::google::protobuf::uint64 value) {
  set_has_lasttime();
  lasttime_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxReceiveTreasureBoxRsp.LastTime)
}

// -------------------------------------------------------------------

// TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp

// repeated .pb.TCommonReward RewardArr = 1;
inline int TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TCommonReward& TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TCommonReward* TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TCommonReward* TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TCrossAllianceTreasureBoxReceiveReceiveAllBoxRsp.RewardArr)
  return &rewardarr_;
}

// -------------------------------------------------------------------

// TCrossAllianceTreasureBoxSetAnonymityReq

// optional uint32 SetAnonymity = 1;
inline bool TCrossAllianceTreasureBoxSetAnonymityReq::has_setanonymity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TCrossAllianceTreasureBoxSetAnonymityReq::set_has_setanonymity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TCrossAllianceTreasureBoxSetAnonymityReq::clear_has_setanonymity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TCrossAllianceTreasureBoxSetAnonymityReq::clear_setanonymity() {
  setanonymity_ = 0u;
  clear_has_setanonymity();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxSetAnonymityReq::setanonymity() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxSetAnonymityReq.SetAnonymity)
  return setanonymity_;
}
inline void TCrossAllianceTreasureBoxSetAnonymityReq::set_setanonymity(::google::protobuf::uint32 value) {
  set_has_setanonymity();
  setanonymity_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxSetAnonymityReq.SetAnonymity)
}

// -------------------------------------------------------------------

// TCrossAllianceTreasureBoxSetAnonymityRsp

// optional uint32 IsAnonymity = 2;
inline bool TCrossAllianceTreasureBoxSetAnonymityRsp::has_isanonymity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TCrossAllianceTreasureBoxSetAnonymityRsp::set_has_isanonymity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TCrossAllianceTreasureBoxSetAnonymityRsp::clear_has_isanonymity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TCrossAllianceTreasureBoxSetAnonymityRsp::clear_isanonymity() {
  isanonymity_ = 0u;
  clear_has_isanonymity();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxSetAnonymityRsp::isanonymity() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxSetAnonymityRsp.IsAnonymity)
  return isanonymity_;
}
inline void TCrossAllianceTreasureBoxSetAnonymityRsp::set_isanonymity(::google::protobuf::uint32 value) {
  set_has_isanonymity();
  isanonymity_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxSetAnonymityRsp.IsAnonymity)
}

// -------------------------------------------------------------------

// TCrossAllianceTreasureBoxDataChangeNotify

// optional uint32 ResourcePoint = 1;
inline bool TCrossAllianceTreasureBoxDataChangeNotify::has_resourcepoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::set_has_resourcepoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::clear_has_resourcepoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::clear_resourcepoint() {
  resourcepoint_ = 0u;
  clear_has_resourcepoint();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxDataChangeNotify::resourcepoint() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxDataChangeNotify.ResourcePoint)
  return resourcepoint_;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::set_resourcepoint(::google::protobuf::uint32 value) {
  set_has_resourcepoint();
  resourcepoint_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxDataChangeNotify.ResourcePoint)
}

// optional uint32 BoxLevel = 2;
inline bool TCrossAllianceTreasureBoxDataChangeNotify::has_boxlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::set_has_boxlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::clear_has_boxlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::clear_boxlevel() {
  boxlevel_ = 0u;
  clear_has_boxlevel();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxDataChangeNotify::boxlevel() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxDataChangeNotify.BoxLevel)
  return boxlevel_;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::set_boxlevel(::google::protobuf::uint32 value) {
  set_has_boxlevel();
  boxlevel_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxDataChangeNotify.BoxLevel)
}

// optional uint32 OpenedTimes = 3;
inline bool TCrossAllianceTreasureBoxDataChangeNotify::has_openedtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::set_has_openedtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::clear_has_openedtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::clear_openedtimes() {
  openedtimes_ = 0u;
  clear_has_openedtimes();
}
inline ::google::protobuf::uint32 TCrossAllianceTreasureBoxDataChangeNotify::openedtimes() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxDataChangeNotify.OpenedTimes)
  return openedtimes_;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::set_openedtimes(::google::protobuf::uint32 value) {
  set_has_openedtimes();
  openedtimes_ = value;
  // @@protoc_insertion_point(field_set:pb.TCrossAllianceTreasureBoxDataChangeNotify.OpenedTimes)
}

// optional .pb.TCrossAllianceTreasureBoxInfo ActiveBoxInfo = 4;
inline bool TCrossAllianceTreasureBoxDataChangeNotify::has_activeboxinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::set_has_activeboxinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::clear_has_activeboxinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::clear_activeboxinfo() {
  if (activeboxinfo_ != NULL) activeboxinfo_->::pb::TCrossAllianceTreasureBoxInfo::Clear();
  clear_has_activeboxinfo();
}
inline const ::pb::TCrossAllianceTreasureBoxInfo& TCrossAllianceTreasureBoxDataChangeNotify::activeboxinfo() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxDataChangeNotify.ActiveBoxInfo)
  return activeboxinfo_ != NULL ? *activeboxinfo_ : *default_instance_->activeboxinfo_;
}
inline ::pb::TCrossAllianceTreasureBoxInfo* TCrossAllianceTreasureBoxDataChangeNotify::mutable_activeboxinfo() {
  set_has_activeboxinfo();
  if (activeboxinfo_ == NULL) activeboxinfo_ = new ::pb::TCrossAllianceTreasureBoxInfo;
  // @@protoc_insertion_point(field_mutable:pb.TCrossAllianceTreasureBoxDataChangeNotify.ActiveBoxInfo)
  return activeboxinfo_;
}
inline ::pb::TCrossAllianceTreasureBoxInfo* TCrossAllianceTreasureBoxDataChangeNotify::release_activeboxinfo() {
  clear_has_activeboxinfo();
  ::pb::TCrossAllianceTreasureBoxInfo* temp = activeboxinfo_;
  activeboxinfo_ = NULL;
  return temp;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::set_allocated_activeboxinfo(::pb::TCrossAllianceTreasureBoxInfo* activeboxinfo) {
  delete activeboxinfo_;
  activeboxinfo_ = activeboxinfo;
  if (activeboxinfo) {
    set_has_activeboxinfo();
  } else {
    clear_has_activeboxinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TCrossAllianceTreasureBoxDataChangeNotify.ActiveBoxInfo)
}

// optional .pb.TCrossAllianceTreasureBoxInfo RechargeBoxInfo = 5;
inline bool TCrossAllianceTreasureBoxDataChangeNotify::has_rechargeboxinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::set_has_rechargeboxinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::clear_has_rechargeboxinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::clear_rechargeboxinfo() {
  if (rechargeboxinfo_ != NULL) rechargeboxinfo_->::pb::TCrossAllianceTreasureBoxInfo::Clear();
  clear_has_rechargeboxinfo();
}
inline const ::pb::TCrossAllianceTreasureBoxInfo& TCrossAllianceTreasureBoxDataChangeNotify::rechargeboxinfo() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxDataChangeNotify.RechargeBoxInfo)
  return rechargeboxinfo_ != NULL ? *rechargeboxinfo_ : *default_instance_->rechargeboxinfo_;
}
inline ::pb::TCrossAllianceTreasureBoxInfo* TCrossAllianceTreasureBoxDataChangeNotify::mutable_rechargeboxinfo() {
  set_has_rechargeboxinfo();
  if (rechargeboxinfo_ == NULL) rechargeboxinfo_ = new ::pb::TCrossAllianceTreasureBoxInfo;
  // @@protoc_insertion_point(field_mutable:pb.TCrossAllianceTreasureBoxDataChangeNotify.RechargeBoxInfo)
  return rechargeboxinfo_;
}
inline ::pb::TCrossAllianceTreasureBoxInfo* TCrossAllianceTreasureBoxDataChangeNotify::release_rechargeboxinfo() {
  clear_has_rechargeboxinfo();
  ::pb::TCrossAllianceTreasureBoxInfo* temp = rechargeboxinfo_;
  rechargeboxinfo_ = NULL;
  return temp;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::set_allocated_rechargeboxinfo(::pb::TCrossAllianceTreasureBoxInfo* rechargeboxinfo) {
  delete rechargeboxinfo_;
  rechargeboxinfo_ = rechargeboxinfo;
  if (rechargeboxinfo) {
    set_has_rechargeboxinfo();
  } else {
    clear_has_rechargeboxinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TCrossAllianceTreasureBoxDataChangeNotify.RechargeBoxInfo)
}

// optional .pb.TCrossAllianceTreasureBoxInfo ResourceBoxInfo = 6;
inline bool TCrossAllianceTreasureBoxDataChangeNotify::has_resourceboxinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::set_has_resourceboxinfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::clear_has_resourceboxinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::clear_resourceboxinfo() {
  if (resourceboxinfo_ != NULL) resourceboxinfo_->::pb::TCrossAllianceTreasureBoxInfo::Clear();
  clear_has_resourceboxinfo();
}
inline const ::pb::TCrossAllianceTreasureBoxInfo& TCrossAllianceTreasureBoxDataChangeNotify::resourceboxinfo() const {
  // @@protoc_insertion_point(field_get:pb.TCrossAllianceTreasureBoxDataChangeNotify.ResourceBoxInfo)
  return resourceboxinfo_ != NULL ? *resourceboxinfo_ : *default_instance_->resourceboxinfo_;
}
inline ::pb::TCrossAllianceTreasureBoxInfo* TCrossAllianceTreasureBoxDataChangeNotify::mutable_resourceboxinfo() {
  set_has_resourceboxinfo();
  if (resourceboxinfo_ == NULL) resourceboxinfo_ = new ::pb::TCrossAllianceTreasureBoxInfo;
  // @@protoc_insertion_point(field_mutable:pb.TCrossAllianceTreasureBoxDataChangeNotify.ResourceBoxInfo)
  return resourceboxinfo_;
}
inline ::pb::TCrossAllianceTreasureBoxInfo* TCrossAllianceTreasureBoxDataChangeNotify::release_resourceboxinfo() {
  clear_has_resourceboxinfo();
  ::pb::TCrossAllianceTreasureBoxInfo* temp = resourceboxinfo_;
  resourceboxinfo_ = NULL;
  return temp;
}
inline void TCrossAllianceTreasureBoxDataChangeNotify::set_allocated_resourceboxinfo(::pb::TCrossAllianceTreasureBoxInfo* resourceboxinfo) {
  delete resourceboxinfo_;
  resourceboxinfo_ = resourceboxinfo;
  if (resourceboxinfo) {
    set_has_resourceboxinfo();
  } else {
    clear_has_resourceboxinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TCrossAllianceTreasureBoxDataChangeNotify.ResourceBoxInfo)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::EBoxType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EBoxType>() {
  return ::pb::EBoxType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fCrossAllianceTreasureBox_2eproto__INCLUDED
