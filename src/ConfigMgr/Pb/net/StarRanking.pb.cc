// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/StarRanking.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/StarRanking.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TStarRankingRankItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TStarRankingRankItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* TStarRankingTakeRewardRecordRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TStarRankingTakeRewardRecordRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TStarRankingTakeRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TStarRankingTakeRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TStarRankingRankRewardInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TStarRankingRankRewardInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TStarRankingGetRankRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TStarRankingGetRankRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TStarRankingEntranceCloseReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TStarRankingEntranceCloseReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fStarRanking_2eproto() {
  protobuf_AddDesc_net_2fStarRanking_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/StarRanking.proto");
  GOOGLE_CHECK(file != NULL);
  TStarRankingRankItem_descriptor_ = file->message_type(0);
  static const int TStarRankingRankItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingRankItem, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingRankItem, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingRankItem, changetime_),
  };
  TStarRankingRankItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TStarRankingRankItem_descriptor_,
      TStarRankingRankItem::default_instance_,
      TStarRankingRankItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingRankItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingRankItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TStarRankingRankItem));
  TStarRankingTakeRewardRecordRsp_descriptor_ = file->message_type(1);
  static const int TStarRankingTakeRewardRecordRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingTakeRewardRecordRsp, takearr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingTakeRewardRecordRsp, starnum_),
  };
  TStarRankingTakeRewardRecordRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TStarRankingTakeRewardRecordRsp_descriptor_,
      TStarRankingTakeRewardRecordRsp::default_instance_,
      TStarRankingTakeRewardRecordRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingTakeRewardRecordRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingTakeRewardRecordRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TStarRankingTakeRewardRecordRsp));
  TStarRankingTakeRewardReq_descriptor_ = file->message_type(2);
  static const int TStarRankingTakeRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingTakeRewardReq, rewardid_),
  };
  TStarRankingTakeRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TStarRankingTakeRewardReq_descriptor_,
      TStarRankingTakeRewardReq::default_instance_,
      TStarRankingTakeRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingTakeRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingTakeRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TStarRankingTakeRewardReq));
  TStarRankingRankRewardInfo_descriptor_ = file->message_type(3);
  static const int TStarRankingRankRewardInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingRankRewardInfo, rankinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingRankRewardInfo, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingRankRewardInfo, count_),
  };
  TStarRankingRankRewardInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TStarRankingRankRewardInfo_descriptor_,
      TStarRankingRankRewardInfo::default_instance_,
      TStarRankingRankRewardInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingRankRewardInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingRankRewardInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TStarRankingRankRewardInfo));
  TStarRankingGetRankRewardRsp_descriptor_ = file->message_type(4);
  static const int TStarRankingGetRankRewardRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingGetRankRewardRsp, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingGetRankRewardRsp, rankrewardarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingGetRankRewardRsp, starnum_),
  };
  TStarRankingGetRankRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TStarRankingGetRankRewardRsp_descriptor_,
      TStarRankingGetRankRewardRsp::default_instance_,
      TStarRankingGetRankRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingGetRankRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingGetRankRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TStarRankingGetRankRewardRsp));
  TStarRankingEntranceCloseReq_descriptor_ = file->message_type(5);
  static const int TStarRankingEntranceCloseReq_offsets_[1] = {
  };
  TStarRankingEntranceCloseReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TStarRankingEntranceCloseReq_descriptor_,
      TStarRankingEntranceCloseReq::default_instance_,
      TStarRankingEntranceCloseReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingEntranceCloseReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStarRankingEntranceCloseReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TStarRankingEntranceCloseReq));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fStarRanking_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TStarRankingRankItem_descriptor_, &TStarRankingRankItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TStarRankingTakeRewardRecordRsp_descriptor_, &TStarRankingTakeRewardRecordRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TStarRankingTakeRewardReq_descriptor_, &TStarRankingTakeRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TStarRankingRankRewardInfo_descriptor_, &TStarRankingRankRewardInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TStarRankingGetRankRewardRsp_descriptor_, &TStarRankingGetRankRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TStarRankingEntranceCloseReq_descriptor_, &TStarRankingEntranceCloseReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fStarRanking_2eproto() {
  delete TStarRankingRankItem::default_instance_;
  delete TStarRankingRankItem_reflection_;
  delete TStarRankingTakeRewardRecordRsp::default_instance_;
  delete TStarRankingTakeRewardRecordRsp_reflection_;
  delete TStarRankingTakeRewardReq::default_instance_;
  delete TStarRankingTakeRewardReq_reflection_;
  delete TStarRankingRankRewardInfo::default_instance_;
  delete TStarRankingRankRewardInfo_reflection_;
  delete TStarRankingGetRankRewardRsp::default_instance_;
  delete TStarRankingGetRankRewardRsp_reflection_;
  delete TStarRankingEntranceCloseReq::default_instance_;
  delete TStarRankingEntranceCloseReq_reflection_;
}

void protobuf_AddDesc_net_2fStarRanking_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025net/StarRanking.proto\022\002pb\032\016net/User.pr"
    "oto\"_\n\024TStarRankingRankItem\022%\n\010UserInfo\030"
    "\001 \001(\0132\023.pb.TUserSimpleInfo\022\014\n\004Star\030\002 \001(\r"
    "\022\022\n\nChangeTime\030\003 \001(\004\"C\n\037TStarRankingTake"
    "RewardRecordRsp\022\017\n\007TakeArr\030\001 \003(\005\022\017\n\007Star"
    "Num\030\002 \001(\r\"-\n\031TStarRankingTakeRewardReq\022\020"
    "\n\010RewardId\030\001 \001(\005\"e\n\032TStarRankingRankRewa"
    "rdInfo\022*\n\010RankInfo\030\001 \001(\0132\030.pb.TStarRanki"
    "ngRankItem\022\014\n\004Rank\030\002 \001(\005\022\r\n\005Count\030\003 \001(\005\""
    "t\n\034TStarRankingGetRankRewardRsp\022\014\n\004Rank\030"
    "\001 \001(\005\0225\n\rRankRewardArr\030\002 \003(\0132\036.pb.TStarR"
    "ankingRankRewardInfo\022\017\n\007StarNum\030\003 \001(\r\"\036\n"
    "\034TStarRankingEntranceCloseReq", 509);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/StarRanking.proto", &protobuf_RegisterTypes);
  TStarRankingRankItem::default_instance_ = new TStarRankingRankItem();
  TStarRankingTakeRewardRecordRsp::default_instance_ = new TStarRankingTakeRewardRecordRsp();
  TStarRankingTakeRewardReq::default_instance_ = new TStarRankingTakeRewardReq();
  TStarRankingRankRewardInfo::default_instance_ = new TStarRankingRankRewardInfo();
  TStarRankingGetRankRewardRsp::default_instance_ = new TStarRankingGetRankRewardRsp();
  TStarRankingEntranceCloseReq::default_instance_ = new TStarRankingEntranceCloseReq();
  TStarRankingRankItem::default_instance_->InitAsDefaultInstance();
  TStarRankingTakeRewardRecordRsp::default_instance_->InitAsDefaultInstance();
  TStarRankingTakeRewardReq::default_instance_->InitAsDefaultInstance();
  TStarRankingRankRewardInfo::default_instance_->InitAsDefaultInstance();
  TStarRankingGetRankRewardRsp::default_instance_->InitAsDefaultInstance();
  TStarRankingEntranceCloseReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fStarRanking_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fStarRanking_2eproto {
  StaticDescriptorInitializer_net_2fStarRanking_2eproto() {
    protobuf_AddDesc_net_2fStarRanking_2eproto();
  }
} static_descriptor_initializer_net_2fStarRanking_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TStarRankingRankItem::kUserInfoFieldNumber;
const int TStarRankingRankItem::kStarFieldNumber;
const int TStarRankingRankItem::kChangeTimeFieldNumber;
#endif  // !_MSC_VER

TStarRankingRankItem::TStarRankingRankItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TStarRankingRankItem)
}

void TStarRankingRankItem::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TStarRankingRankItem::TStarRankingRankItem(const TStarRankingRankItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TStarRankingRankItem)
}

void TStarRankingRankItem::SharedCtor() {
  _cached_size_ = 0;
  userinfo_ = NULL;
  star_ = 0u;
  changetime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TStarRankingRankItem::~TStarRankingRankItem() {
  // @@protoc_insertion_point(destructor:pb.TStarRankingRankItem)
  SharedDtor();
}

void TStarRankingRankItem::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void TStarRankingRankItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TStarRankingRankItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TStarRankingRankItem_descriptor_;
}

const TStarRankingRankItem& TStarRankingRankItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fStarRanking_2eproto();
  return *default_instance_;
}

TStarRankingRankItem* TStarRankingRankItem::default_instance_ = NULL;

TStarRankingRankItem* TStarRankingRankItem::New() const {
  return new TStarRankingRankItem;
}

void TStarRankingRankItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TStarRankingRankItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(changetime_, star_);
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TStarRankingRankItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TStarRankingRankItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TUserSimpleInfo UserInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Star;
        break;
      }

      // optional uint32 Star = 2;
      case 2: {
        if (tag == 16) {
         parse_Star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ChangeTime;
        break;
      }

      // optional uint64 ChangeTime = 3;
      case 3: {
        if (tag == 24) {
         parse_ChangeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &changetime_)));
          set_has_changetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TStarRankingRankItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TStarRankingRankItem)
  return false;
#undef DO_
}

void TStarRankingRankItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TStarRankingRankItem)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(), output);
  }

  // optional uint32 Star = 2;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->star(), output);
  }

  // optional uint64 ChangeTime = 3;
  if (has_changetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->changetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TStarRankingRankItem)
}

::google::protobuf::uint8* TStarRankingRankItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TStarRankingRankItem)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userinfo(), target);
  }

  // optional uint32 Star = 2;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->star(), target);
  }

  // optional uint64 ChangeTime = 3;
  if (has_changetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->changetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TStarRankingRankItem)
  return target;
}

int TStarRankingRankItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TUserSimpleInfo UserInfo = 1;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }

    // optional uint32 Star = 2;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star());
    }

    // optional uint64 ChangeTime = 3;
    if (has_changetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->changetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TStarRankingRankItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TStarRankingRankItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TStarRankingRankItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TStarRankingRankItem::MergeFrom(const TStarRankingRankItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userinfo()) {
      mutable_userinfo()->::pb::TUserSimpleInfo::MergeFrom(from.userinfo());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
    if (from.has_changetime()) {
      set_changetime(from.changetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TStarRankingRankItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TStarRankingRankItem::CopyFrom(const TStarRankingRankItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TStarRankingRankItem::IsInitialized() const {

  return true;
}

void TStarRankingRankItem::Swap(TStarRankingRankItem* other) {
  if (other != this) {
    std::swap(userinfo_, other->userinfo_);
    std::swap(star_, other->star_);
    std::swap(changetime_, other->changetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TStarRankingRankItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TStarRankingRankItem_descriptor_;
  metadata.reflection = TStarRankingRankItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TStarRankingTakeRewardRecordRsp::kTakeArrFieldNumber;
const int TStarRankingTakeRewardRecordRsp::kStarNumFieldNumber;
#endif  // !_MSC_VER

TStarRankingTakeRewardRecordRsp::TStarRankingTakeRewardRecordRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TStarRankingTakeRewardRecordRsp)
}

void TStarRankingTakeRewardRecordRsp::InitAsDefaultInstance() {
}

TStarRankingTakeRewardRecordRsp::TStarRankingTakeRewardRecordRsp(const TStarRankingTakeRewardRecordRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TStarRankingTakeRewardRecordRsp)
}

void TStarRankingTakeRewardRecordRsp::SharedCtor() {
  _cached_size_ = 0;
  starnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TStarRankingTakeRewardRecordRsp::~TStarRankingTakeRewardRecordRsp() {
  // @@protoc_insertion_point(destructor:pb.TStarRankingTakeRewardRecordRsp)
  SharedDtor();
}

void TStarRankingTakeRewardRecordRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TStarRankingTakeRewardRecordRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TStarRankingTakeRewardRecordRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TStarRankingTakeRewardRecordRsp_descriptor_;
}

const TStarRankingTakeRewardRecordRsp& TStarRankingTakeRewardRecordRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fStarRanking_2eproto();
  return *default_instance_;
}

TStarRankingTakeRewardRecordRsp* TStarRankingTakeRewardRecordRsp::default_instance_ = NULL;

TStarRankingTakeRewardRecordRsp* TStarRankingTakeRewardRecordRsp::New() const {
  return new TStarRankingTakeRewardRecordRsp;
}

void TStarRankingTakeRewardRecordRsp::Clear() {
  starnum_ = 0u;
  takearr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TStarRankingTakeRewardRecordRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TStarRankingTakeRewardRecordRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 TakeArr = 1;
      case 1: {
        if (tag == 8) {
         parse_TakeArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_takearr())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_takearr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_TakeArr;
        if (input->ExpectTag(16)) goto parse_StarNum;
        break;
      }

      // optional uint32 StarNum = 2;
      case 2: {
        if (tag == 16) {
         parse_StarNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starnum_)));
          set_has_starnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TStarRankingTakeRewardRecordRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TStarRankingTakeRewardRecordRsp)
  return false;
#undef DO_
}

void TStarRankingTakeRewardRecordRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TStarRankingTakeRewardRecordRsp)
  // repeated int32 TakeArr = 1;
  for (int i = 0; i < this->takearr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->takearr(i), output);
  }

  // optional uint32 StarNum = 2;
  if (has_starnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->starnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TStarRankingTakeRewardRecordRsp)
}

::google::protobuf::uint8* TStarRankingTakeRewardRecordRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TStarRankingTakeRewardRecordRsp)
  // repeated int32 TakeArr = 1;
  for (int i = 0; i < this->takearr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->takearr(i), target);
  }

  // optional uint32 StarNum = 2;
  if (has_starnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->starnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TStarRankingTakeRewardRecordRsp)
  return target;
}

int TStarRankingTakeRewardRecordRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 StarNum = 2;
    if (has_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starnum());
    }

  }
  // repeated int32 TakeArr = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->takearr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->takearr(i));
    }
    total_size += 1 * this->takearr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TStarRankingTakeRewardRecordRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TStarRankingTakeRewardRecordRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TStarRankingTakeRewardRecordRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TStarRankingTakeRewardRecordRsp::MergeFrom(const TStarRankingTakeRewardRecordRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  takearr_.MergeFrom(from.takearr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_starnum()) {
      set_starnum(from.starnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TStarRankingTakeRewardRecordRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TStarRankingTakeRewardRecordRsp::CopyFrom(const TStarRankingTakeRewardRecordRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TStarRankingTakeRewardRecordRsp::IsInitialized() const {

  return true;
}

void TStarRankingTakeRewardRecordRsp::Swap(TStarRankingTakeRewardRecordRsp* other) {
  if (other != this) {
    takearr_.Swap(&other->takearr_);
    std::swap(starnum_, other->starnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TStarRankingTakeRewardRecordRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TStarRankingTakeRewardRecordRsp_descriptor_;
  metadata.reflection = TStarRankingTakeRewardRecordRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TStarRankingTakeRewardReq::kRewardIdFieldNumber;
#endif  // !_MSC_VER

TStarRankingTakeRewardReq::TStarRankingTakeRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TStarRankingTakeRewardReq)
}

void TStarRankingTakeRewardReq::InitAsDefaultInstance() {
}

TStarRankingTakeRewardReq::TStarRankingTakeRewardReq(const TStarRankingTakeRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TStarRankingTakeRewardReq)
}

void TStarRankingTakeRewardReq::SharedCtor() {
  _cached_size_ = 0;
  rewardid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TStarRankingTakeRewardReq::~TStarRankingTakeRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TStarRankingTakeRewardReq)
  SharedDtor();
}

void TStarRankingTakeRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TStarRankingTakeRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TStarRankingTakeRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TStarRankingTakeRewardReq_descriptor_;
}

const TStarRankingTakeRewardReq& TStarRankingTakeRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fStarRanking_2eproto();
  return *default_instance_;
}

TStarRankingTakeRewardReq* TStarRankingTakeRewardReq::default_instance_ = NULL;

TStarRankingTakeRewardReq* TStarRankingTakeRewardReq::New() const {
  return new TStarRankingTakeRewardReq;
}

void TStarRankingTakeRewardReq::Clear() {
  rewardid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TStarRankingTakeRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TStarRankingTakeRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 RewardId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rewardid_)));
          set_has_rewardid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TStarRankingTakeRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TStarRankingTakeRewardReq)
  return false;
#undef DO_
}

void TStarRankingTakeRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TStarRankingTakeRewardReq)
  // optional int32 RewardId = 1;
  if (has_rewardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rewardid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TStarRankingTakeRewardReq)
}

::google::protobuf::uint8* TStarRankingTakeRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TStarRankingTakeRewardReq)
  // optional int32 RewardId = 1;
  if (has_rewardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rewardid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TStarRankingTakeRewardReq)
  return target;
}

int TStarRankingTakeRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 RewardId = 1;
    if (has_rewardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rewardid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TStarRankingTakeRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TStarRankingTakeRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TStarRankingTakeRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TStarRankingTakeRewardReq::MergeFrom(const TStarRankingTakeRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rewardid()) {
      set_rewardid(from.rewardid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TStarRankingTakeRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TStarRankingTakeRewardReq::CopyFrom(const TStarRankingTakeRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TStarRankingTakeRewardReq::IsInitialized() const {

  return true;
}

void TStarRankingTakeRewardReq::Swap(TStarRankingTakeRewardReq* other) {
  if (other != this) {
    std::swap(rewardid_, other->rewardid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TStarRankingTakeRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TStarRankingTakeRewardReq_descriptor_;
  metadata.reflection = TStarRankingTakeRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TStarRankingRankRewardInfo::kRankInfoFieldNumber;
const int TStarRankingRankRewardInfo::kRankFieldNumber;
const int TStarRankingRankRewardInfo::kCountFieldNumber;
#endif  // !_MSC_VER

TStarRankingRankRewardInfo::TStarRankingRankRewardInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TStarRankingRankRewardInfo)
}

void TStarRankingRankRewardInfo::InitAsDefaultInstance() {
  rankinfo_ = const_cast< ::pb::TStarRankingRankItem*>(&::pb::TStarRankingRankItem::default_instance());
}

TStarRankingRankRewardInfo::TStarRankingRankRewardInfo(const TStarRankingRankRewardInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TStarRankingRankRewardInfo)
}

void TStarRankingRankRewardInfo::SharedCtor() {
  _cached_size_ = 0;
  rankinfo_ = NULL;
  rank_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TStarRankingRankRewardInfo::~TStarRankingRankRewardInfo() {
  // @@protoc_insertion_point(destructor:pb.TStarRankingRankRewardInfo)
  SharedDtor();
}

void TStarRankingRankRewardInfo::SharedDtor() {
  if (this != default_instance_) {
    delete rankinfo_;
  }
}

void TStarRankingRankRewardInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TStarRankingRankRewardInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TStarRankingRankRewardInfo_descriptor_;
}

const TStarRankingRankRewardInfo& TStarRankingRankRewardInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fStarRanking_2eproto();
  return *default_instance_;
}

TStarRankingRankRewardInfo* TStarRankingRankRewardInfo::default_instance_ = NULL;

TStarRankingRankRewardInfo* TStarRankingRankRewardInfo::New() const {
  return new TStarRankingRankRewardInfo;
}

void TStarRankingRankRewardInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TStarRankingRankRewardInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(rank_, count_);
    if (has_rankinfo()) {
      if (rankinfo_ != NULL) rankinfo_->::pb::TStarRankingRankItem::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TStarRankingRankRewardInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TStarRankingRankRewardInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TStarRankingRankItem RankInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rankinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Rank;
        break;
      }

      // optional int32 Rank = 2;
      case 2: {
        if (tag == 16) {
         parse_Rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Count;
        break;
      }

      // optional int32 Count = 3;
      case 3: {
        if (tag == 24) {
         parse_Count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TStarRankingRankRewardInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TStarRankingRankRewardInfo)
  return false;
#undef DO_
}

void TStarRankingRankRewardInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TStarRankingRankRewardInfo)
  // optional .pb.TStarRankingRankItem RankInfo = 1;
  if (has_rankinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rankinfo(), output);
  }

  // optional int32 Rank = 2;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rank(), output);
  }

  // optional int32 Count = 3;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TStarRankingRankRewardInfo)
}

::google::protobuf::uint8* TStarRankingRankRewardInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TStarRankingRankRewardInfo)
  // optional .pb.TStarRankingRankItem RankInfo = 1;
  if (has_rankinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rankinfo(), target);
  }

  // optional int32 Rank = 2;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rank(), target);
  }

  // optional int32 Count = 3;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TStarRankingRankRewardInfo)
  return target;
}

int TStarRankingRankRewardInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TStarRankingRankItem RankInfo = 1;
    if (has_rankinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rankinfo());
    }

    // optional int32 Rank = 2;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }

    // optional int32 Count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TStarRankingRankRewardInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TStarRankingRankRewardInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TStarRankingRankRewardInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TStarRankingRankRewardInfo::MergeFrom(const TStarRankingRankRewardInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rankinfo()) {
      mutable_rankinfo()->::pb::TStarRankingRankItem::MergeFrom(from.rankinfo());
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TStarRankingRankRewardInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TStarRankingRankRewardInfo::CopyFrom(const TStarRankingRankRewardInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TStarRankingRankRewardInfo::IsInitialized() const {

  return true;
}

void TStarRankingRankRewardInfo::Swap(TStarRankingRankRewardInfo* other) {
  if (other != this) {
    std::swap(rankinfo_, other->rankinfo_);
    std::swap(rank_, other->rank_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TStarRankingRankRewardInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TStarRankingRankRewardInfo_descriptor_;
  metadata.reflection = TStarRankingRankRewardInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TStarRankingGetRankRewardRsp::kRankFieldNumber;
const int TStarRankingGetRankRewardRsp::kRankRewardArrFieldNumber;
const int TStarRankingGetRankRewardRsp::kStarNumFieldNumber;
#endif  // !_MSC_VER

TStarRankingGetRankRewardRsp::TStarRankingGetRankRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TStarRankingGetRankRewardRsp)
}

void TStarRankingGetRankRewardRsp::InitAsDefaultInstance() {
}

TStarRankingGetRankRewardRsp::TStarRankingGetRankRewardRsp(const TStarRankingGetRankRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TStarRankingGetRankRewardRsp)
}

void TStarRankingGetRankRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  rank_ = 0;
  starnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TStarRankingGetRankRewardRsp::~TStarRankingGetRankRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TStarRankingGetRankRewardRsp)
  SharedDtor();
}

void TStarRankingGetRankRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TStarRankingGetRankRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TStarRankingGetRankRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TStarRankingGetRankRewardRsp_descriptor_;
}

const TStarRankingGetRankRewardRsp& TStarRankingGetRankRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fStarRanking_2eproto();
  return *default_instance_;
}

TStarRankingGetRankRewardRsp* TStarRankingGetRankRewardRsp::default_instance_ = NULL;

TStarRankingGetRankRewardRsp* TStarRankingGetRankRewardRsp::New() const {
  return new TStarRankingGetRankRewardRsp;
}

void TStarRankingGetRankRewardRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TStarRankingGetRankRewardRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(rank_, starnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  rankrewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TStarRankingGetRankRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TStarRankingGetRankRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Rank = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RankRewardArr;
        break;
      }

      // repeated .pb.TStarRankingRankRewardInfo RankRewardArr = 2;
      case 2: {
        if (tag == 18) {
         parse_RankRewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rankrewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RankRewardArr;
        if (input->ExpectTag(24)) goto parse_StarNum;
        break;
      }

      // optional uint32 StarNum = 3;
      case 3: {
        if (tag == 24) {
         parse_StarNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starnum_)));
          set_has_starnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TStarRankingGetRankRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TStarRankingGetRankRewardRsp)
  return false;
#undef DO_
}

void TStarRankingGetRankRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TStarRankingGetRankRewardRsp)
  // optional int32 Rank = 1;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  // repeated .pb.TStarRankingRankRewardInfo RankRewardArr = 2;
  for (int i = 0; i < this->rankrewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rankrewardarr(i), output);
  }

  // optional uint32 StarNum = 3;
  if (has_starnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->starnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TStarRankingGetRankRewardRsp)
}

::google::protobuf::uint8* TStarRankingGetRankRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TStarRankingGetRankRewardRsp)
  // optional int32 Rank = 1;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  // repeated .pb.TStarRankingRankRewardInfo RankRewardArr = 2;
  for (int i = 0; i < this->rankrewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rankrewardarr(i), target);
  }

  // optional uint32 StarNum = 3;
  if (has_starnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->starnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TStarRankingGetRankRewardRsp)
  return target;
}

int TStarRankingGetRankRewardRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Rank = 1;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }

    // optional uint32 StarNum = 3;
    if (has_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starnum());
    }

  }
  // repeated .pb.TStarRankingRankRewardInfo RankRewardArr = 2;
  total_size += 1 * this->rankrewardarr_size();
  for (int i = 0; i < this->rankrewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rankrewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TStarRankingGetRankRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TStarRankingGetRankRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TStarRankingGetRankRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TStarRankingGetRankRewardRsp::MergeFrom(const TStarRankingGetRankRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rankrewardarr_.MergeFrom(from.rankrewardarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_starnum()) {
      set_starnum(from.starnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TStarRankingGetRankRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TStarRankingGetRankRewardRsp::CopyFrom(const TStarRankingGetRankRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TStarRankingGetRankRewardRsp::IsInitialized() const {

  return true;
}

void TStarRankingGetRankRewardRsp::Swap(TStarRankingGetRankRewardRsp* other) {
  if (other != this) {
    std::swap(rank_, other->rank_);
    rankrewardarr_.Swap(&other->rankrewardarr_);
    std::swap(starnum_, other->starnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TStarRankingGetRankRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TStarRankingGetRankRewardRsp_descriptor_;
  metadata.reflection = TStarRankingGetRankRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TStarRankingEntranceCloseReq::TStarRankingEntranceCloseReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TStarRankingEntranceCloseReq)
}

void TStarRankingEntranceCloseReq::InitAsDefaultInstance() {
}

TStarRankingEntranceCloseReq::TStarRankingEntranceCloseReq(const TStarRankingEntranceCloseReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TStarRankingEntranceCloseReq)
}

void TStarRankingEntranceCloseReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TStarRankingEntranceCloseReq::~TStarRankingEntranceCloseReq() {
  // @@protoc_insertion_point(destructor:pb.TStarRankingEntranceCloseReq)
  SharedDtor();
}

void TStarRankingEntranceCloseReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TStarRankingEntranceCloseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TStarRankingEntranceCloseReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TStarRankingEntranceCloseReq_descriptor_;
}

const TStarRankingEntranceCloseReq& TStarRankingEntranceCloseReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fStarRanking_2eproto();
  return *default_instance_;
}

TStarRankingEntranceCloseReq* TStarRankingEntranceCloseReq::default_instance_ = NULL;

TStarRankingEntranceCloseReq* TStarRankingEntranceCloseReq::New() const {
  return new TStarRankingEntranceCloseReq;
}

void TStarRankingEntranceCloseReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TStarRankingEntranceCloseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TStarRankingEntranceCloseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TStarRankingEntranceCloseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TStarRankingEntranceCloseReq)
  return false;
#undef DO_
}

void TStarRankingEntranceCloseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TStarRankingEntranceCloseReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TStarRankingEntranceCloseReq)
}

::google::protobuf::uint8* TStarRankingEntranceCloseReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TStarRankingEntranceCloseReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TStarRankingEntranceCloseReq)
  return target;
}

int TStarRankingEntranceCloseReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TStarRankingEntranceCloseReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TStarRankingEntranceCloseReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TStarRankingEntranceCloseReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TStarRankingEntranceCloseReq::MergeFrom(const TStarRankingEntranceCloseReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TStarRankingEntranceCloseReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TStarRankingEntranceCloseReq::CopyFrom(const TStarRankingEntranceCloseReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TStarRankingEntranceCloseReq::IsInitialized() const {

  return true;
}

void TStarRankingEntranceCloseReq::Swap(TStarRankingEntranceCloseReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TStarRankingEntranceCloseReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TStarRankingEntranceCloseReq_descriptor_;
  metadata.reflection = TStarRankingEntranceCloseReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
