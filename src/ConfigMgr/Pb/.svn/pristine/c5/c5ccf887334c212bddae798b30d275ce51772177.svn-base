// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/TaskDaily.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/TaskDaily.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TTaskDailyCell_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTaskDailyCell_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTaskDailyInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTaskDailyInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTaskDailyReceiveTaskSingleAwardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTaskDailyReceiveTaskSingleAwardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTaskDailyReceiveScoresAwardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTaskDailyReceiveScoresAwardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTaskDailyInfoNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTaskDailyInfoNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fTaskDaily_2eproto() {
  protobuf_AddDesc_net_2fTaskDaily_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/TaskDaily.proto");
  GOOGLE_CHECK(file != NULL);
  TTaskDailyCell_descriptor_ = file->message_type(0);
  static const int TTaskDailyCell_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyCell, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyCell, status_),
  };
  TTaskDailyCell_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTaskDailyCell_descriptor_,
      TTaskDailyCell::default_instance_,
      TTaskDailyCell_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyCell, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyCell, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTaskDailyCell));
  TTaskDailyInfoRsp_descriptor_ = file->message_type(1);
  static const int TTaskDailyInfoRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyInfoRsp, taskstatusarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyInfoRsp, receivedawardtidarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyInfoRsp, totalscores_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyInfoRsp, updatetime_),
  };
  TTaskDailyInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTaskDailyInfoRsp_descriptor_,
      TTaskDailyInfoRsp::default_instance_,
      TTaskDailyInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTaskDailyInfoRsp));
  TTaskDailyReceiveTaskSingleAwardReq_descriptor_ = file->message_type(2);
  static const int TTaskDailyReceiveTaskSingleAwardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyReceiveTaskSingleAwardReq, taskdailytid_),
  };
  TTaskDailyReceiveTaskSingleAwardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTaskDailyReceiveTaskSingleAwardReq_descriptor_,
      TTaskDailyReceiveTaskSingleAwardReq::default_instance_,
      TTaskDailyReceiveTaskSingleAwardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyReceiveTaskSingleAwardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyReceiveTaskSingleAwardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTaskDailyReceiveTaskSingleAwardReq));
  TTaskDailyReceiveScoresAwardReq_descriptor_ = file->message_type(3);
  static const int TTaskDailyReceiveScoresAwardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyReceiveScoresAwardReq, scoreawardtid_),
  };
  TTaskDailyReceiveScoresAwardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTaskDailyReceiveScoresAwardReq_descriptor_,
      TTaskDailyReceiveScoresAwardReq::default_instance_,
      TTaskDailyReceiveScoresAwardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyReceiveScoresAwardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyReceiveScoresAwardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTaskDailyReceiveScoresAwardReq));
  TTaskDailyInfoNotify_descriptor_ = file->message_type(4);
  static const int TTaskDailyInfoNotify_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyInfoNotify, taskstatusarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyInfoNotify, receivedawardtidarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyInfoNotify, totalscores_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyInfoNotify, updatetime_),
  };
  TTaskDailyInfoNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTaskDailyInfoNotify_descriptor_,
      TTaskDailyInfoNotify::default_instance_,
      TTaskDailyInfoNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyInfoNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTaskDailyInfoNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTaskDailyInfoNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fTaskDaily_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTaskDailyCell_descriptor_, &TTaskDailyCell::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTaskDailyInfoRsp_descriptor_, &TTaskDailyInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTaskDailyReceiveTaskSingleAwardReq_descriptor_, &TTaskDailyReceiveTaskSingleAwardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTaskDailyReceiveScoresAwardReq_descriptor_, &TTaskDailyReceiveScoresAwardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTaskDailyInfoNotify_descriptor_, &TTaskDailyInfoNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fTaskDaily_2eproto() {
  delete TTaskDailyCell::default_instance_;
  delete TTaskDailyCell_reflection_;
  delete TTaskDailyInfoRsp::default_instance_;
  delete TTaskDailyInfoRsp_reflection_;
  delete TTaskDailyReceiveTaskSingleAwardReq::default_instance_;
  delete TTaskDailyReceiveTaskSingleAwardReq_reflection_;
  delete TTaskDailyReceiveScoresAwardReq::default_instance_;
  delete TTaskDailyReceiveScoresAwardReq_reflection_;
  delete TTaskDailyInfoNotify::default_instance_;
  delete TTaskDailyInfoNotify_reflection_;
}

void protobuf_AddDesc_net_2fTaskDaily_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fTaskBase_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023net/TaskDaily.proto\022\002pb\032\022net/TaskBase."
    "proto\">\n\016TTaskDailyCell\022\013\n\003Tid\030\001 \001(\r\022\037\n\006"
    "Status\030\002 \001(\0162\017.pb.ETaskStatus\"\204\001\n\021TTaskD"
    "ailyInfoRsp\022)\n\rTaskStatusArr\030\001 \003(\0132\022.pb."
    "TTaskDailyCell\022\033\n\023ReceivedAwardTidArr\030\002 "
    "\003(\r\022\023\n\013TotalScores\030\003 \001(\r\022\022\n\nUpdateTime\030\004"
    " \001(\003\";\n#TTaskDailyReceiveTaskSingleAward"
    "Req\022\024\n\014TaskDailyTid\030\001 \001(\r\"8\n\037TTaskDailyR"
    "eceiveScoresAwardReq\022\025\n\rScoreAwardTid\030\001 "
    "\001(\r\"\207\001\n\024TTaskDailyInfoNotify\022)\n\rTaskStat"
    "usArr\030\001 \003(\0132\022.pb.TTaskDailyCell\022\033\n\023Recei"
    "vedAwardTidArr\030\002 \003(\r\022\023\n\013TotalScores\030\003 \001("
    "\r\022\022\n\nUpdateTime\030\004 \001(\003", 501);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/TaskDaily.proto", &protobuf_RegisterTypes);
  TTaskDailyCell::default_instance_ = new TTaskDailyCell();
  TTaskDailyInfoRsp::default_instance_ = new TTaskDailyInfoRsp();
  TTaskDailyReceiveTaskSingleAwardReq::default_instance_ = new TTaskDailyReceiveTaskSingleAwardReq();
  TTaskDailyReceiveScoresAwardReq::default_instance_ = new TTaskDailyReceiveScoresAwardReq();
  TTaskDailyInfoNotify::default_instance_ = new TTaskDailyInfoNotify();
  TTaskDailyCell::default_instance_->InitAsDefaultInstance();
  TTaskDailyInfoRsp::default_instance_->InitAsDefaultInstance();
  TTaskDailyReceiveTaskSingleAwardReq::default_instance_->InitAsDefaultInstance();
  TTaskDailyReceiveScoresAwardReq::default_instance_->InitAsDefaultInstance();
  TTaskDailyInfoNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fTaskDaily_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fTaskDaily_2eproto {
  StaticDescriptorInitializer_net_2fTaskDaily_2eproto() {
    protobuf_AddDesc_net_2fTaskDaily_2eproto();
  }
} static_descriptor_initializer_net_2fTaskDaily_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TTaskDailyCell::kTidFieldNumber;
const int TTaskDailyCell::kStatusFieldNumber;
#endif  // !_MSC_VER

TTaskDailyCell::TTaskDailyCell()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTaskDailyCell)
}

void TTaskDailyCell::InitAsDefaultInstance() {
}

TTaskDailyCell::TTaskDailyCell(const TTaskDailyCell& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTaskDailyCell)
}

void TTaskDailyCell::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTaskDailyCell::~TTaskDailyCell() {
  // @@protoc_insertion_point(destructor:pb.TTaskDailyCell)
  SharedDtor();
}

void TTaskDailyCell::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTaskDailyCell::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTaskDailyCell::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTaskDailyCell_descriptor_;
}

const TTaskDailyCell& TTaskDailyCell::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTaskDaily_2eproto();
  return *default_instance_;
}

TTaskDailyCell* TTaskDailyCell::default_instance_ = NULL;

TTaskDailyCell* TTaskDailyCell::New() const {
  return new TTaskDailyCell;
}

void TTaskDailyCell::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    tid_ = 0u;
    status_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTaskDailyCell::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTaskDailyCell)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Status;
        break;
      }

      // optional .pb.ETaskStatus Status = 2;
      case 2: {
        if (tag == 16) {
         parse_Status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ETaskStatus_IsValid(value)) {
            set_status(static_cast< ::pb::ETaskStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTaskDailyCell)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTaskDailyCell)
  return false;
#undef DO_
}

void TTaskDailyCell::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTaskDailyCell)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional .pb.ETaskStatus Status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTaskDailyCell)
}

::google::protobuf::uint8* TTaskDailyCell::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTaskDailyCell)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional .pb.ETaskStatus Status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTaskDailyCell)
  return target;
}

int TTaskDailyCell::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional .pb.ETaskStatus Status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTaskDailyCell::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTaskDailyCell* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTaskDailyCell*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTaskDailyCell::MergeFrom(const TTaskDailyCell& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTaskDailyCell::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTaskDailyCell::CopyFrom(const TTaskDailyCell& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTaskDailyCell::IsInitialized() const {

  return true;
}

void TTaskDailyCell::Swap(TTaskDailyCell* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTaskDailyCell::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTaskDailyCell_descriptor_;
  metadata.reflection = TTaskDailyCell_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTaskDailyInfoRsp::kTaskStatusArrFieldNumber;
const int TTaskDailyInfoRsp::kReceivedAwardTidArrFieldNumber;
const int TTaskDailyInfoRsp::kTotalScoresFieldNumber;
const int TTaskDailyInfoRsp::kUpdateTimeFieldNumber;
#endif  // !_MSC_VER

TTaskDailyInfoRsp::TTaskDailyInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTaskDailyInfoRsp)
}

void TTaskDailyInfoRsp::InitAsDefaultInstance() {
}

TTaskDailyInfoRsp::TTaskDailyInfoRsp(const TTaskDailyInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTaskDailyInfoRsp)
}

void TTaskDailyInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  totalscores_ = 0u;
  updatetime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTaskDailyInfoRsp::~TTaskDailyInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TTaskDailyInfoRsp)
  SharedDtor();
}

void TTaskDailyInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTaskDailyInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTaskDailyInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTaskDailyInfoRsp_descriptor_;
}

const TTaskDailyInfoRsp& TTaskDailyInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTaskDaily_2eproto();
  return *default_instance_;
}

TTaskDailyInfoRsp* TTaskDailyInfoRsp::default_instance_ = NULL;

TTaskDailyInfoRsp* TTaskDailyInfoRsp::New() const {
  return new TTaskDailyInfoRsp;
}

void TTaskDailyInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTaskDailyInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(updatetime_, totalscores_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  taskstatusarr_.Clear();
  receivedawardtidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTaskDailyInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTaskDailyInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TTaskDailyCell TaskStatusArr = 1;
      case 1: {
        if (tag == 10) {
         parse_TaskStatusArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_taskstatusarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_TaskStatusArr;
        if (input->ExpectTag(16)) goto parse_ReceivedAwardTidArr;
        break;
      }

      // repeated uint32 ReceivedAwardTidArr = 2;
      case 2: {
        if (tag == 16) {
         parse_ReceivedAwardTidArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_receivedawardtidarr())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_receivedawardtidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ReceivedAwardTidArr;
        if (input->ExpectTag(24)) goto parse_TotalScores;
        break;
      }

      // optional uint32 TotalScores = 3;
      case 3: {
        if (tag == 24) {
         parse_TotalScores:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalscores_)));
          set_has_totalscores();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_UpdateTime;
        break;
      }

      // optional int64 UpdateTime = 4;
      case 4: {
        if (tag == 32) {
         parse_UpdateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &updatetime_)));
          set_has_updatetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTaskDailyInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTaskDailyInfoRsp)
  return false;
#undef DO_
}

void TTaskDailyInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTaskDailyInfoRsp)
  // repeated .pb.TTaskDailyCell TaskStatusArr = 1;
  for (int i = 0; i < this->taskstatusarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->taskstatusarr(i), output);
  }

  // repeated uint32 ReceivedAwardTidArr = 2;
  for (int i = 0; i < this->receivedawardtidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->receivedawardtidarr(i), output);
  }

  // optional uint32 TotalScores = 3;
  if (has_totalscores()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->totalscores(), output);
  }

  // optional int64 UpdateTime = 4;
  if (has_updatetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->updatetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTaskDailyInfoRsp)
}

::google::protobuf::uint8* TTaskDailyInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTaskDailyInfoRsp)
  // repeated .pb.TTaskDailyCell TaskStatusArr = 1;
  for (int i = 0; i < this->taskstatusarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->taskstatusarr(i), target);
  }

  // repeated uint32 ReceivedAwardTidArr = 2;
  for (int i = 0; i < this->receivedawardtidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->receivedawardtidarr(i), target);
  }

  // optional uint32 TotalScores = 3;
  if (has_totalscores()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->totalscores(), target);
  }

  // optional int64 UpdateTime = 4;
  if (has_updatetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->updatetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTaskDailyInfoRsp)
  return target;
}

int TTaskDailyInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional uint32 TotalScores = 3;
    if (has_totalscores()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->totalscores());
    }

    // optional int64 UpdateTime = 4;
    if (has_updatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->updatetime());
    }

  }
  // repeated .pb.TTaskDailyCell TaskStatusArr = 1;
  total_size += 1 * this->taskstatusarr_size();
  for (int i = 0; i < this->taskstatusarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->taskstatusarr(i));
  }

  // repeated uint32 ReceivedAwardTidArr = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->receivedawardtidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->receivedawardtidarr(i));
    }
    total_size += 1 * this->receivedawardtidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTaskDailyInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTaskDailyInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTaskDailyInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTaskDailyInfoRsp::MergeFrom(const TTaskDailyInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  taskstatusarr_.MergeFrom(from.taskstatusarr_);
  receivedawardtidarr_.MergeFrom(from.receivedawardtidarr_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_totalscores()) {
      set_totalscores(from.totalscores());
    }
    if (from.has_updatetime()) {
      set_updatetime(from.updatetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTaskDailyInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTaskDailyInfoRsp::CopyFrom(const TTaskDailyInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTaskDailyInfoRsp::IsInitialized() const {

  return true;
}

void TTaskDailyInfoRsp::Swap(TTaskDailyInfoRsp* other) {
  if (other != this) {
    taskstatusarr_.Swap(&other->taskstatusarr_);
    receivedawardtidarr_.Swap(&other->receivedawardtidarr_);
    std::swap(totalscores_, other->totalscores_);
    std::swap(updatetime_, other->updatetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTaskDailyInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTaskDailyInfoRsp_descriptor_;
  metadata.reflection = TTaskDailyInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTaskDailyReceiveTaskSingleAwardReq::kTaskDailyTidFieldNumber;
#endif  // !_MSC_VER

TTaskDailyReceiveTaskSingleAwardReq::TTaskDailyReceiveTaskSingleAwardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTaskDailyReceiveTaskSingleAwardReq)
}

void TTaskDailyReceiveTaskSingleAwardReq::InitAsDefaultInstance() {
}

TTaskDailyReceiveTaskSingleAwardReq::TTaskDailyReceiveTaskSingleAwardReq(const TTaskDailyReceiveTaskSingleAwardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTaskDailyReceiveTaskSingleAwardReq)
}

void TTaskDailyReceiveTaskSingleAwardReq::SharedCtor() {
  _cached_size_ = 0;
  taskdailytid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTaskDailyReceiveTaskSingleAwardReq::~TTaskDailyReceiveTaskSingleAwardReq() {
  // @@protoc_insertion_point(destructor:pb.TTaskDailyReceiveTaskSingleAwardReq)
  SharedDtor();
}

void TTaskDailyReceiveTaskSingleAwardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTaskDailyReceiveTaskSingleAwardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTaskDailyReceiveTaskSingleAwardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTaskDailyReceiveTaskSingleAwardReq_descriptor_;
}

const TTaskDailyReceiveTaskSingleAwardReq& TTaskDailyReceiveTaskSingleAwardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTaskDaily_2eproto();
  return *default_instance_;
}

TTaskDailyReceiveTaskSingleAwardReq* TTaskDailyReceiveTaskSingleAwardReq::default_instance_ = NULL;

TTaskDailyReceiveTaskSingleAwardReq* TTaskDailyReceiveTaskSingleAwardReq::New() const {
  return new TTaskDailyReceiveTaskSingleAwardReq;
}

void TTaskDailyReceiveTaskSingleAwardReq::Clear() {
  taskdailytid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTaskDailyReceiveTaskSingleAwardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTaskDailyReceiveTaskSingleAwardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TaskDailyTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskdailytid_)));
          set_has_taskdailytid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTaskDailyReceiveTaskSingleAwardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTaskDailyReceiveTaskSingleAwardReq)
  return false;
#undef DO_
}

void TTaskDailyReceiveTaskSingleAwardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTaskDailyReceiveTaskSingleAwardReq)
  // optional uint32 TaskDailyTid = 1;
  if (has_taskdailytid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taskdailytid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTaskDailyReceiveTaskSingleAwardReq)
}

::google::protobuf::uint8* TTaskDailyReceiveTaskSingleAwardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTaskDailyReceiveTaskSingleAwardReq)
  // optional uint32 TaskDailyTid = 1;
  if (has_taskdailytid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taskdailytid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTaskDailyReceiveTaskSingleAwardReq)
  return target;
}

int TTaskDailyReceiveTaskSingleAwardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TaskDailyTid = 1;
    if (has_taskdailytid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->taskdailytid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTaskDailyReceiveTaskSingleAwardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTaskDailyReceiveTaskSingleAwardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTaskDailyReceiveTaskSingleAwardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTaskDailyReceiveTaskSingleAwardReq::MergeFrom(const TTaskDailyReceiveTaskSingleAwardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskdailytid()) {
      set_taskdailytid(from.taskdailytid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTaskDailyReceiveTaskSingleAwardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTaskDailyReceiveTaskSingleAwardReq::CopyFrom(const TTaskDailyReceiveTaskSingleAwardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTaskDailyReceiveTaskSingleAwardReq::IsInitialized() const {

  return true;
}

void TTaskDailyReceiveTaskSingleAwardReq::Swap(TTaskDailyReceiveTaskSingleAwardReq* other) {
  if (other != this) {
    std::swap(taskdailytid_, other->taskdailytid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTaskDailyReceiveTaskSingleAwardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTaskDailyReceiveTaskSingleAwardReq_descriptor_;
  metadata.reflection = TTaskDailyReceiveTaskSingleAwardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTaskDailyReceiveScoresAwardReq::kScoreAwardTidFieldNumber;
#endif  // !_MSC_VER

TTaskDailyReceiveScoresAwardReq::TTaskDailyReceiveScoresAwardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTaskDailyReceiveScoresAwardReq)
}

void TTaskDailyReceiveScoresAwardReq::InitAsDefaultInstance() {
}

TTaskDailyReceiveScoresAwardReq::TTaskDailyReceiveScoresAwardReq(const TTaskDailyReceiveScoresAwardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTaskDailyReceiveScoresAwardReq)
}

void TTaskDailyReceiveScoresAwardReq::SharedCtor() {
  _cached_size_ = 0;
  scoreawardtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTaskDailyReceiveScoresAwardReq::~TTaskDailyReceiveScoresAwardReq() {
  // @@protoc_insertion_point(destructor:pb.TTaskDailyReceiveScoresAwardReq)
  SharedDtor();
}

void TTaskDailyReceiveScoresAwardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTaskDailyReceiveScoresAwardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTaskDailyReceiveScoresAwardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTaskDailyReceiveScoresAwardReq_descriptor_;
}

const TTaskDailyReceiveScoresAwardReq& TTaskDailyReceiveScoresAwardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTaskDaily_2eproto();
  return *default_instance_;
}

TTaskDailyReceiveScoresAwardReq* TTaskDailyReceiveScoresAwardReq::default_instance_ = NULL;

TTaskDailyReceiveScoresAwardReq* TTaskDailyReceiveScoresAwardReq::New() const {
  return new TTaskDailyReceiveScoresAwardReq;
}

void TTaskDailyReceiveScoresAwardReq::Clear() {
  scoreawardtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTaskDailyReceiveScoresAwardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTaskDailyReceiveScoresAwardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ScoreAwardTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scoreawardtid_)));
          set_has_scoreawardtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTaskDailyReceiveScoresAwardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTaskDailyReceiveScoresAwardReq)
  return false;
#undef DO_
}

void TTaskDailyReceiveScoresAwardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTaskDailyReceiveScoresAwardReq)
  // optional uint32 ScoreAwardTid = 1;
  if (has_scoreawardtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scoreawardtid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTaskDailyReceiveScoresAwardReq)
}

::google::protobuf::uint8* TTaskDailyReceiveScoresAwardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTaskDailyReceiveScoresAwardReq)
  // optional uint32 ScoreAwardTid = 1;
  if (has_scoreawardtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scoreawardtid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTaskDailyReceiveScoresAwardReq)
  return target;
}

int TTaskDailyReceiveScoresAwardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ScoreAwardTid = 1;
    if (has_scoreawardtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scoreawardtid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTaskDailyReceiveScoresAwardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTaskDailyReceiveScoresAwardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTaskDailyReceiveScoresAwardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTaskDailyReceiveScoresAwardReq::MergeFrom(const TTaskDailyReceiveScoresAwardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scoreawardtid()) {
      set_scoreawardtid(from.scoreawardtid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTaskDailyReceiveScoresAwardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTaskDailyReceiveScoresAwardReq::CopyFrom(const TTaskDailyReceiveScoresAwardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTaskDailyReceiveScoresAwardReq::IsInitialized() const {

  return true;
}

void TTaskDailyReceiveScoresAwardReq::Swap(TTaskDailyReceiveScoresAwardReq* other) {
  if (other != this) {
    std::swap(scoreawardtid_, other->scoreawardtid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTaskDailyReceiveScoresAwardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTaskDailyReceiveScoresAwardReq_descriptor_;
  metadata.reflection = TTaskDailyReceiveScoresAwardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTaskDailyInfoNotify::kTaskStatusArrFieldNumber;
const int TTaskDailyInfoNotify::kReceivedAwardTidArrFieldNumber;
const int TTaskDailyInfoNotify::kTotalScoresFieldNumber;
const int TTaskDailyInfoNotify::kUpdateTimeFieldNumber;
#endif  // !_MSC_VER

TTaskDailyInfoNotify::TTaskDailyInfoNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTaskDailyInfoNotify)
}

void TTaskDailyInfoNotify::InitAsDefaultInstance() {
}

TTaskDailyInfoNotify::TTaskDailyInfoNotify(const TTaskDailyInfoNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTaskDailyInfoNotify)
}

void TTaskDailyInfoNotify::SharedCtor() {
  _cached_size_ = 0;
  totalscores_ = 0u;
  updatetime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTaskDailyInfoNotify::~TTaskDailyInfoNotify() {
  // @@protoc_insertion_point(destructor:pb.TTaskDailyInfoNotify)
  SharedDtor();
}

void TTaskDailyInfoNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTaskDailyInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTaskDailyInfoNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTaskDailyInfoNotify_descriptor_;
}

const TTaskDailyInfoNotify& TTaskDailyInfoNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTaskDaily_2eproto();
  return *default_instance_;
}

TTaskDailyInfoNotify* TTaskDailyInfoNotify::default_instance_ = NULL;

TTaskDailyInfoNotify* TTaskDailyInfoNotify::New() const {
  return new TTaskDailyInfoNotify;
}

void TTaskDailyInfoNotify::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTaskDailyInfoNotify*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(updatetime_, totalscores_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  taskstatusarr_.Clear();
  receivedawardtidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTaskDailyInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTaskDailyInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TTaskDailyCell TaskStatusArr = 1;
      case 1: {
        if (tag == 10) {
         parse_TaskStatusArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_taskstatusarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_TaskStatusArr;
        if (input->ExpectTag(16)) goto parse_ReceivedAwardTidArr;
        break;
      }

      // repeated uint32 ReceivedAwardTidArr = 2;
      case 2: {
        if (tag == 16) {
         parse_ReceivedAwardTidArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_receivedawardtidarr())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_receivedawardtidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ReceivedAwardTidArr;
        if (input->ExpectTag(24)) goto parse_TotalScores;
        break;
      }

      // optional uint32 TotalScores = 3;
      case 3: {
        if (tag == 24) {
         parse_TotalScores:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalscores_)));
          set_has_totalscores();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_UpdateTime;
        break;
      }

      // optional int64 UpdateTime = 4;
      case 4: {
        if (tag == 32) {
         parse_UpdateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &updatetime_)));
          set_has_updatetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTaskDailyInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTaskDailyInfoNotify)
  return false;
#undef DO_
}

void TTaskDailyInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTaskDailyInfoNotify)
  // repeated .pb.TTaskDailyCell TaskStatusArr = 1;
  for (int i = 0; i < this->taskstatusarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->taskstatusarr(i), output);
  }

  // repeated uint32 ReceivedAwardTidArr = 2;
  for (int i = 0; i < this->receivedawardtidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->receivedawardtidarr(i), output);
  }

  // optional uint32 TotalScores = 3;
  if (has_totalscores()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->totalscores(), output);
  }

  // optional int64 UpdateTime = 4;
  if (has_updatetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->updatetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTaskDailyInfoNotify)
}

::google::protobuf::uint8* TTaskDailyInfoNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTaskDailyInfoNotify)
  // repeated .pb.TTaskDailyCell TaskStatusArr = 1;
  for (int i = 0; i < this->taskstatusarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->taskstatusarr(i), target);
  }

  // repeated uint32 ReceivedAwardTidArr = 2;
  for (int i = 0; i < this->receivedawardtidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->receivedawardtidarr(i), target);
  }

  // optional uint32 TotalScores = 3;
  if (has_totalscores()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->totalscores(), target);
  }

  // optional int64 UpdateTime = 4;
  if (has_updatetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->updatetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTaskDailyInfoNotify)
  return target;
}

int TTaskDailyInfoNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional uint32 TotalScores = 3;
    if (has_totalscores()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->totalscores());
    }

    // optional int64 UpdateTime = 4;
    if (has_updatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->updatetime());
    }

  }
  // repeated .pb.TTaskDailyCell TaskStatusArr = 1;
  total_size += 1 * this->taskstatusarr_size();
  for (int i = 0; i < this->taskstatusarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->taskstatusarr(i));
  }

  // repeated uint32 ReceivedAwardTidArr = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->receivedawardtidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->receivedawardtidarr(i));
    }
    total_size += 1 * this->receivedawardtidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTaskDailyInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTaskDailyInfoNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTaskDailyInfoNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTaskDailyInfoNotify::MergeFrom(const TTaskDailyInfoNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  taskstatusarr_.MergeFrom(from.taskstatusarr_);
  receivedawardtidarr_.MergeFrom(from.receivedawardtidarr_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_totalscores()) {
      set_totalscores(from.totalscores());
    }
    if (from.has_updatetime()) {
      set_updatetime(from.updatetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTaskDailyInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTaskDailyInfoNotify::CopyFrom(const TTaskDailyInfoNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTaskDailyInfoNotify::IsInitialized() const {

  return true;
}

void TTaskDailyInfoNotify::Swap(TTaskDailyInfoNotify* other) {
  if (other != this) {
    taskstatusarr_.Swap(&other->taskstatusarr_);
    receivedawardtidarr_.Swap(&other->receivedawardtidarr_);
    std::swap(totalscores_, other->totalscores_);
    std::swap(updatetime_, other->updatetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTaskDailyInfoNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTaskDailyInfoNotify_descriptor_;
  metadata.reflection = TTaskDailyInfoNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
