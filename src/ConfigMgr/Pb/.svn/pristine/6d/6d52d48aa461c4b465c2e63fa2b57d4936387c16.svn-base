// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActAllianceBattle.proto

#ifndef PROTOBUF_net_2fActAllianceBattle_2eproto__INCLUDED
#define PROTOBUF_net_2fActAllianceBattle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
#include "net/Alliance.pb.h"
#include "net/User.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

class TActAllianceBattleGetMissionHistoryRsp;
class TActAllianceBattleGetMemberScoreRsp;
class TActAllianceBattleGetAllyScoreRsp;
class TActAllianceBattleGetMissionArrRsp;
class TActAllianceBattleGetAchievementRecordRsp;
class TActAllianceBattleGetInfoRsp;
class TActAllianceBattleMission;
class TActAllianceBattleMissionHistory;
class TActAllianceBattleMemberInfo;
class TActAllianceBattleAllyScore;
class TActAllianceBattleReceiveMissionReq;
class TActAllianceBattleDelMissionReq;
class TActAllianceBattleReceiveMissionScore;
class TActAllianceBattleGetPersonalScoreRewardReq;
class TActAllianceBattleGetPersonalScoreRewardRsp;
class TActAllianceBattleGetAllyScoreRewardReq;
class TActAllianceBattleGetAllyScoreRewardRsp;
class TActAllianceBattleBuyReceiveNumReq;
class TActAllianceBattleTaskNotify;
class TActAllianceBattleScoreNotify;
class TActAllianceBattleDelPersonalMissionReq;
class TActAllianceBattleAbandonMission;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActAllianceBattleGetMissionHistoryRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleGetMissionHistoryRsp : public ::google::protobuf::Message {
 public:
  TActAllianceBattleGetMissionHistoryRsp();
  virtual ~TActAllianceBattleGetMissionHistoryRsp();

  TActAllianceBattleGetMissionHistoryRsp(const TActAllianceBattleGetMissionHistoryRsp& from);

  inline TActAllianceBattleGetMissionHistoryRsp& operator=(const TActAllianceBattleGetMissionHistoryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleGetMissionHistoryRsp& default_instance();

  void Swap(TActAllianceBattleGetMissionHistoryRsp* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleGetMissionHistoryRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleGetMissionHistoryRsp& from);
  void MergeFrom(const TActAllianceBattleGetMissionHistoryRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActAllianceBattleMissionHistory ArrMissionHistory = 1;
  inline int arrmissionhistory_size() const;
  inline void clear_arrmissionhistory();
  static const int kArrMissionHistoryFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetMissionHistoryRsp</name>
  	<Function>
  		<name>arrmissionhistory</name>
  		<replaceName>ArrMissionHistory</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrmissionhistory</name>
  		<replaceName>ArrMissionHistory</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrmissionhistory</name>
  		<replaceName>ArrMissionHistory</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrmissionhistory</name>
  		<replaceName>ArrMissionHistory</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrmissionhistory_size</name>
  		<replaceName>ArrMissionHistory</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActAllianceBattleMissionHistory& arrmissionhistory(int index) const;
  inline ::pb::TActAllianceBattleMissionHistory* mutable_arrmissionhistory(int index);
  inline ::pb::TActAllianceBattleMissionHistory* add_arrmissionhistory();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMissionHistory >&
      arrmissionhistory() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMissionHistory >*
      mutable_arrmissionhistory();

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleGetMissionHistoryRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMissionHistory > arrmissionhistory_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleGetMissionHistoryRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleGetMemberScoreRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleGetMemberScoreRsp : public ::google::protobuf::Message {
 public:
  TActAllianceBattleGetMemberScoreRsp();
  virtual ~TActAllianceBattleGetMemberScoreRsp();

  TActAllianceBattleGetMemberScoreRsp(const TActAllianceBattleGetMemberScoreRsp& from);

  inline TActAllianceBattleGetMemberScoreRsp& operator=(const TActAllianceBattleGetMemberScoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleGetMemberScoreRsp& default_instance();

  void Swap(TActAllianceBattleGetMemberScoreRsp* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleGetMemberScoreRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleGetMemberScoreRsp& from);
  void MergeFrom(const TActAllianceBattleGetMemberScoreRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActAllianceBattleMemberInfo ArrMemberInfo = 1;
  inline int arrmemberinfo_size() const;
  inline void clear_arrmemberinfo();
  static const int kArrMemberInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetMemberScoreRsp</name>
  	<Function>
  		<name>arrmemberinfo</name>
  		<replaceName>ArrMemberInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrmemberinfo</name>
  		<replaceName>ArrMemberInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrmemberinfo</name>
  		<replaceName>ArrMemberInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrmemberinfo</name>
  		<replaceName>ArrMemberInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrmemberinfo_size</name>
  		<replaceName>ArrMemberInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActAllianceBattleMemberInfo& arrmemberinfo(int index) const;
  inline ::pb::TActAllianceBattleMemberInfo* mutable_arrmemberinfo(int index);
  inline ::pb::TActAllianceBattleMemberInfo* add_arrmemberinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMemberInfo >&
      arrmemberinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMemberInfo >*
      mutable_arrmemberinfo();

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleGetMemberScoreRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMemberInfo > arrmemberinfo_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleGetMemberScoreRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleGetAllyScoreRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleGetAllyScoreRsp : public ::google::protobuf::Message {
 public:
  TActAllianceBattleGetAllyScoreRsp();
  virtual ~TActAllianceBattleGetAllyScoreRsp();

  TActAllianceBattleGetAllyScoreRsp(const TActAllianceBattleGetAllyScoreRsp& from);

  inline TActAllianceBattleGetAllyScoreRsp& operator=(const TActAllianceBattleGetAllyScoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleGetAllyScoreRsp& default_instance();

  void Swap(TActAllianceBattleGetAllyScoreRsp* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleGetAllyScoreRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleGetAllyScoreRsp& from);
  void MergeFrom(const TActAllianceBattleGetAllyScoreRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActAllianceBattleAllyScore ArrAllyScore = 1;
  inline int arrallyscore_size() const;
  inline void clear_arrallyscore();
  static const int kArrAllyScoreFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetAllyScoreRsp</name>
  	<Function>
  		<name>arrallyscore</name>
  		<replaceName>ArrAllyScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrallyscore</name>
  		<replaceName>ArrAllyScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrallyscore</name>
  		<replaceName>ArrAllyScore</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrallyscore</name>
  		<replaceName>ArrAllyScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrallyscore_size</name>
  		<replaceName>ArrAllyScore</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActAllianceBattleAllyScore& arrallyscore(int index) const;
  inline ::pb::TActAllianceBattleAllyScore* mutable_arrallyscore(int index);
  inline ::pb::TActAllianceBattleAllyScore* add_arrallyscore();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleAllyScore >&
      arrallyscore() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleAllyScore >*
      mutable_arrallyscore();

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleGetAllyScoreRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleAllyScore > arrallyscore_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleGetAllyScoreRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleGetMissionArrRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleGetMissionArrRsp : public ::google::protobuf::Message {
 public:
  TActAllianceBattleGetMissionArrRsp();
  virtual ~TActAllianceBattleGetMissionArrRsp();

  TActAllianceBattleGetMissionArrRsp(const TActAllianceBattleGetMissionArrRsp& from);

  inline TActAllianceBattleGetMissionArrRsp& operator=(const TActAllianceBattleGetMissionArrRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleGetMissionArrRsp& default_instance();

  void Swap(TActAllianceBattleGetMissionArrRsp* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleGetMissionArrRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleGetMissionArrRsp& from);
  void MergeFrom(const TActAllianceBattleGetMissionArrRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActAllianceBattleMission ArrMission = 1;
  inline int arrmission_size() const;
  inline void clear_arrmission();
  static const int kArrMissionFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetMissionArrRsp</name>
  	<Function>
  		<name>arrmission</name>
  		<replaceName>ArrMission</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrmission</name>
  		<replaceName>ArrMission</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrmission</name>
  		<replaceName>ArrMission</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrmission</name>
  		<replaceName>ArrMission</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrmission_size</name>
  		<replaceName>ArrMission</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActAllianceBattleMission& arrmission(int index) const;
  inline ::pb::TActAllianceBattleMission* mutable_arrmission(int index);
  inline ::pb::TActAllianceBattleMission* add_arrmission();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMission >&
      arrmission() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMission >*
      mutable_arrmission();

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleGetMissionArrRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMission > arrmission_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleGetMissionArrRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleGetAchievementRecordRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleGetAchievementRecordRsp : public ::google::protobuf::Message {
 public:
  TActAllianceBattleGetAchievementRecordRsp();
  virtual ~TActAllianceBattleGetAchievementRecordRsp();

  TActAllianceBattleGetAchievementRecordRsp(const TActAllianceBattleGetAchievementRecordRsp& from);

  inline TActAllianceBattleGetAchievementRecordRsp& operator=(const TActAllianceBattleGetAchievementRecordRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleGetAchievementRecordRsp& default_instance();

  void Swap(TActAllianceBattleGetAchievementRecordRsp* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleGetAchievementRecordRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleGetAchievementRecordRsp& from);
  void MergeFrom(const TActAllianceBattleGetAchievementRecordRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 PersonalRewardId = 3;
  inline int personalrewardid_size() const;
  inline void clear_personalrewardid();
  static const int kPersonalRewardIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetAchievementRecordRsp</name>
  	<Function>
  		<name>personalrewardid</name>
  		<replaceName>PersonalRewardId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_personalrewardid</name>
  		<replaceName>PersonalRewardId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_personalrewardid</name>
  		<replaceName>PersonalRewardId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_personalrewardid</name>
  		<replaceName>PersonalRewardId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>personalrewardid_size</name>
  		<replaceName>PersonalRewardId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 personalrewardid(int index) const;
  inline void set_personalrewardid(int index, ::google::protobuf::uint32 value);
  inline void add_personalrewardid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      personalrewardid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_personalrewardid();

  // repeated uint32 AllyRewardId = 4;
  inline int allyrewardid_size() const;
  inline void clear_allyrewardid();
  static const int kAllyRewardIdFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetAchievementRecordRsp</name>
  	<Function>
  		<name>allyrewardid</name>
  		<replaceName>AllyRewardId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_allyrewardid</name>
  		<replaceName>AllyRewardId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_allyrewardid</name>
  		<replaceName>AllyRewardId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_allyrewardid</name>
  		<replaceName>AllyRewardId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>allyrewardid_size</name>
  		<replaceName>AllyRewardId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 allyrewardid(int index) const;
  inline void set_allyrewardid(int index, ::google::protobuf::uint32 value);
  inline void add_allyrewardid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      allyrewardid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_allyrewardid();

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleGetAchievementRecordRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > personalrewardid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > allyrewardid_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleGetAchievementRecordRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActAllianceBattleGetInfoRsp();
  virtual ~TActAllianceBattleGetInfoRsp();

  TActAllianceBattleGetInfoRsp(const TActAllianceBattleGetInfoRsp& from);

  inline TActAllianceBattleGetInfoRsp& operator=(const TActAllianceBattleGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleGetInfoRsp& default_instance();

  void Swap(TActAllianceBattleGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleGetInfoRsp& from);
  void MergeFrom(const TActAllianceBattleGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 PersonRank = 1;
  inline bool has_personrank() const;
  inline void clear_personrank();
  static const int kPersonRankFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetInfoRsp</name>
  	<Function>
  		<name>personrank</name>
  		<replaceName>PersonRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_personrank</name>
  		<replaceName>PersonRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_personrank</name>
  		<replaceName>PersonRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 personrank() const;
  inline void set_personrank(::google::protobuf::uint32 value);

  // optional uint32 PersonScore = 2;
  inline bool has_personscore() const;
  inline void clear_personscore();
  static const int kPersonScoreFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetInfoRsp</name>
  	<Function>
  		<name>personscore</name>
  		<replaceName>PersonScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_personscore</name>
  		<replaceName>PersonScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_personscore</name>
  		<replaceName>PersonScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 personscore() const;
  inline void set_personscore(::google::protobuf::uint32 value);

  // optional uint32 AllyRank = 3;
  inline bool has_allyrank() const;
  inline void clear_allyrank();
  static const int kAllyRankFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetInfoRsp</name>
  	<Function>
  		<name>allyrank</name>
  		<replaceName>AllyRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allyrank</name>
  		<replaceName>AllyRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_allyrank</name>
  		<replaceName>AllyRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 allyrank() const;
  inline void set_allyrank(::google::protobuf::uint32 value);

  // optional uint32 AllyScore = 4;
  inline bool has_allyscore() const;
  inline void clear_allyscore();
  static const int kAllyScoreFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetInfoRsp</name>
  	<Function>
  		<name>allyscore</name>
  		<replaceName>AllyScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allyscore</name>
  		<replaceName>AllyScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_allyscore</name>
  		<replaceName>AllyScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 allyscore() const;
  inline void set_allyscore(::google::protobuf::uint32 value);

  // optional uint32 ReceiveNum = 5;
  inline bool has_receivenum() const;
  inline void clear_receivenum();
  static const int kReceiveNumFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetInfoRsp</name>
  	<Function>
  		<name>receivenum</name>
  		<replaceName>ReceiveNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_receivenum</name>
  		<replaceName>ReceiveNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivenum</name>
  		<replaceName>ReceiveNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 receivenum() const;
  inline void set_receivenum(::google::protobuf::uint32 value);

  // optional uint32 ReceiveBuyNum = 6;
  inline bool has_receivebuynum() const;
  inline void clear_receivebuynum();
  static const int kReceiveBuyNumFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetInfoRsp</name>
  	<Function>
  		<name>receivebuynum</name>
  		<replaceName>ReceiveBuyNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_receivebuynum</name>
  		<replaceName>ReceiveBuyNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivebuynum</name>
  		<replaceName>ReceiveBuyNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 receivebuynum() const;
  inline void set_receivebuynum(::google::protobuf::uint32 value);

  // optional uint32 TierId = 7;
  inline bool has_tierid() const;
  inline void clear_tierid();
  static const int kTierIdFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetInfoRsp</name>
  	<Function>
  		<name>tierid</name>
  		<replaceName>TierId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tierid</name>
  		<replaceName>TierId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tierid</name>
  		<replaceName>TierId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tierid() const;
  inline void set_tierid(::google::protobuf::uint32 value);

  // optional uint32 DeleteNum = 8;
  inline bool has_deletenum() const;
  inline void clear_deletenum();
  static const int kDeleteNumFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetInfoRsp</name>
  	<Function>
  		<name>deletenum</name>
  		<replaceName>DeleteNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_deletenum</name>
  		<replaceName>DeleteNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_deletenum</name>
  		<replaceName>DeleteNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 deletenum() const;
  inline void set_deletenum(::google::protobuf::uint32 value);

  // optional uint32 AbandonNum = 9;
  inline bool has_abandonnum() const;
  inline void clear_abandonnum();
  static const int kAbandonNumFieldNumber = 9;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetInfoRsp</name>
  	<Function>
  		<name>abandonnum</name>
  		<replaceName>AbandonNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_abandonnum</name>
  		<replaceName>AbandonNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_abandonnum</name>
  		<replaceName>AbandonNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 abandonnum() const;
  inline void set_abandonnum(::google::protobuf::uint32 value);

  // optional uint32 OverallPersonalRank = 10;
  inline bool has_overallpersonalrank() const;
  inline void clear_overallpersonalrank();
  static const int kOverallPersonalRankFieldNumber = 10;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetInfoRsp</name>
  	<Function>
  		<name>overallpersonalrank</name>
  		<replaceName>OverallPersonalRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_overallpersonalrank</name>
  		<replaceName>OverallPersonalRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_overallpersonalrank</name>
  		<replaceName>OverallPersonalRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 overallpersonalrank() const;
  inline void set_overallpersonalrank(::google::protobuf::uint32 value);

  // optional uint32 OverallTotalRankNum = 11;
  inline bool has_overalltotalranknum() const;
  inline void clear_overalltotalranknum();
  static const int kOverallTotalRankNumFieldNumber = 11;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetInfoRsp</name>
  	<Function>
  		<name>overalltotalranknum</name>
  		<replaceName>OverallTotalRankNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_overalltotalranknum</name>
  		<replaceName>OverallTotalRankNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_overalltotalranknum</name>
  		<replaceName>OverallTotalRankNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 overalltotalranknum() const;
  inline void set_overalltotalranknum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleGetInfoRsp)
 private:
  inline void set_has_personrank();
  inline void clear_has_personrank();
  inline void set_has_personscore();
  inline void clear_has_personscore();
  inline void set_has_allyrank();
  inline void clear_has_allyrank();
  inline void set_has_allyscore();
  inline void clear_has_allyscore();
  inline void set_has_receivenum();
  inline void clear_has_receivenum();
  inline void set_has_receivebuynum();
  inline void clear_has_receivebuynum();
  inline void set_has_tierid();
  inline void clear_has_tierid();
  inline void set_has_deletenum();
  inline void clear_has_deletenum();
  inline void set_has_abandonnum();
  inline void clear_has_abandonnum();
  inline void set_has_overallpersonalrank();
  inline void clear_has_overallpersonalrank();
  inline void set_has_overalltotalranknum();
  inline void clear_has_overalltotalranknum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 personrank_;
  ::google::protobuf::uint32 personscore_;
  ::google::protobuf::uint32 allyrank_;
  ::google::protobuf::uint32 allyscore_;
  ::google::protobuf::uint32 receivenum_;
  ::google::protobuf::uint32 receivebuynum_;
  ::google::protobuf::uint32 tierid_;
  ::google::protobuf::uint32 deletenum_;
  ::google::protobuf::uint32 abandonnum_;
  ::google::protobuf::uint32 overallpersonalrank_;
  ::google::protobuf::uint32 overalltotalranknum_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleMission</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleMission : public ::google::protobuf::Message {
 public:
  TActAllianceBattleMission();
  virtual ~TActAllianceBattleMission();

  TActAllianceBattleMission(const TActAllianceBattleMission& from);

  inline TActAllianceBattleMission& operator=(const TActAllianceBattleMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleMission& default_instance();

  void Swap(TActAllianceBattleMission* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleMission& from);
  void MergeFrom(const TActAllianceBattleMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMission</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 MissionTid = 2;
  inline bool has_missiontid() const;
  inline void clear_missiontid();
  static const int kMissionTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMission</name>
  	<Function>
  		<name>missiontid</name>
  		<replaceName>MissionTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_missiontid</name>
  		<replaceName>MissionTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_missiontid</name>
  		<replaceName>MissionTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 missiontid() const;
  inline void set_missiontid(::google::protobuf::uint32 value);

  // optional .pb.TUserSimpleInfo UserInfo = 3;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMission</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // optional uint64 ReceiveTime = 4;
  inline bool has_receivetime() const;
  inline void clear_receivetime();
  static const int kReceiveTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMission</name>
  	<Function>
  		<name>receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 receivetime() const;
  inline void set_receivetime(::google::protobuf::uint64 value);

  // optional uint32 FinishNum = 5;
  inline bool has_finishnum() const;
  inline void clear_finishnum();
  static const int kFinishNumFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMission</name>
  	<Function>
  		<name>finishnum</name>
  		<replaceName>FinishNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_finishnum</name>
  		<replaceName>FinishNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_finishnum</name>
  		<replaceName>FinishNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 finishnum() const;
  inline void set_finishnum(::google::protobuf::uint32 value);

  // optional uint64 GenTime = 6;
  inline bool has_gentime() const;
  inline void clear_gentime();
  static const int kGenTimeFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMission</name>
  	<Function>
  		<name>gentime</name>
  		<replaceName>GenTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_gentime</name>
  		<replaceName>GenTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_gentime</name>
  		<replaceName>GenTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 gentime() const;
  inline void set_gentime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleMission)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_missiontid();
  inline void clear_has_missiontid();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_receivetime();
  inline void clear_has_receivetime();
  inline void set_has_finishnum();
  inline void clear_has_finishnum();
  inline void set_has_gentime();
  inline void clear_has_gentime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 missiontid_;
  ::pb::TUserSimpleInfo* userinfo_;
  ::google::protobuf::uint64 receivetime_;
  ::google::protobuf::uint64 gentime_;
  ::google::protobuf::uint32 finishnum_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleMission* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleMissionHistory</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleMissionHistory : public ::google::protobuf::Message {
 public:
  TActAllianceBattleMissionHistory();
  virtual ~TActAllianceBattleMissionHistory();

  TActAllianceBattleMissionHistory(const TActAllianceBattleMissionHistory& from);

  inline TActAllianceBattleMissionHistory& operator=(const TActAllianceBattleMissionHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleMissionHistory& default_instance();

  void Swap(TActAllianceBattleMissionHistory* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleMissionHistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleMissionHistory& from);
  void MergeFrom(const TActAllianceBattleMissionHistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string GuildName = 1;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildNameFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMissionHistory</name>
  	<Function>
  		<name>guildname</name>
  		<replaceName>GuildName</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_guildname</name>
  		<replaceName>GuildName</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_guildname</name>
  		<replaceName>GuildName</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const char* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // optional string UserName = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUserNameFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMissionHistory</name>
  	<Function>
  		<name>username</name>
  		<replaceName>UserName</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_username</name>
  		<replaceName>UserName</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_username</name>
  		<replaceName>UserName</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional string ServerId = 5;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMissionHistory</name>
  	<Function>
  		<name>serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_serverid</name>
  		<replaceName>ServerId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& serverid() const;
  inline void set_serverid(const ::std::string& value);
  inline void set_serverid(const char* value);
  inline void set_serverid(const char* value, size_t size);
  inline ::std::string* mutable_serverid();
  inline ::std::string* release_serverid();
  inline void set_allocated_serverid(::std::string* serverid);

  // optional uint32 MissionTid = 3;
  inline bool has_missiontid() const;
  inline void clear_missiontid();
  static const int kMissionTidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMissionHistory</name>
  	<Function>
  		<name>missiontid</name>
  		<replaceName>MissionTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_missiontid</name>
  		<replaceName>MissionTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_missiontid</name>
  		<replaceName>MissionTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 missiontid() const;
  inline void set_missiontid(::google::protobuf::uint32 value);

  // optional uint64 FinishTime = 4;
  inline bool has_finishtime() const;
  inline void clear_finishtime();
  static const int kFinishTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMissionHistory</name>
  	<Function>
  		<name>finishtime</name>
  		<replaceName>FinishTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_finishtime</name>
  		<replaceName>FinishTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_finishtime</name>
  		<replaceName>FinishTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 finishtime() const;
  inline void set_finishtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleMissionHistory)
 private:
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_missiontid();
  inline void clear_has_missiontid();
  inline void set_has_finishtime();
  inline void clear_has_finishtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* guildname_;
  ::std::string* username_;
  ::std::string* serverid_;
  ::google::protobuf::uint64 finishtime_;
  ::google::protobuf::uint32 missiontid_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleMissionHistory* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleMemberInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleMemberInfo : public ::google::protobuf::Message {
 public:
  TActAllianceBattleMemberInfo();
  virtual ~TActAllianceBattleMemberInfo();

  TActAllianceBattleMemberInfo(const TActAllianceBattleMemberInfo& from);

  inline TActAllianceBattleMemberInfo& operator=(const TActAllianceBattleMemberInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleMemberInfo& default_instance();

  void Swap(TActAllianceBattleMemberInfo* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleMemberInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleMemberInfo& from);
  void MergeFrom(const TActAllianceBattleMemberInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUserSimpleInfo UserData = 1;
  inline bool has_userdata() const;
  inline void clear_userdata();
  static const int kUserDataFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMemberInfo</name>
  	<Function>
  		<name>userdata</name>
  		<replaceName>UserData</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userdata</name>
  		<replaceName>UserData</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userdata</name>
  		<replaceName>UserData</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userdata</name>
  		<replaceName>UserData</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userdata() const;
  inline ::pb::TUserSimpleInfo* mutable_userdata();
  inline ::pb::TUserSimpleInfo* release_userdata();
  inline void set_allocated_userdata(::pb::TUserSimpleInfo* userdata);

  // optional uint32 Score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMemberInfo</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 ReceiveNum = 3;
  inline bool has_receivenum() const;
  inline void clear_receivenum();
  static const int kReceiveNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMemberInfo</name>
  	<Function>
  		<name>receivenum</name>
  		<replaceName>ReceiveNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_receivenum</name>
  		<replaceName>ReceiveNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivenum</name>
  		<replaceName>ReceiveNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 receivenum() const;
  inline void set_receivenum(::google::protobuf::uint32 value);

  // optional uint32 ReceiveBuyNum = 4;
  inline bool has_receivebuynum() const;
  inline void clear_receivebuynum();
  static const int kReceiveBuyNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleMemberInfo</name>
  	<Function>
  		<name>receivebuynum</name>
  		<replaceName>ReceiveBuyNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_receivebuynum</name>
  		<replaceName>ReceiveBuyNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivebuynum</name>
  		<replaceName>ReceiveBuyNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 receivebuynum() const;
  inline void set_receivebuynum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleMemberInfo)
 private:
  inline void set_has_userdata();
  inline void clear_has_userdata();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_receivenum();
  inline void clear_has_receivenum();
  inline void set_has_receivebuynum();
  inline void clear_has_receivebuynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUserSimpleInfo* userdata_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 receivenum_;
  ::google::protobuf::uint32 receivebuynum_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleMemberInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleAllyScore</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleAllyScore : public ::google::protobuf::Message {
 public:
  TActAllianceBattleAllyScore();
  virtual ~TActAllianceBattleAllyScore();

  TActAllianceBattleAllyScore(const TActAllianceBattleAllyScore& from);

  inline TActAllianceBattleAllyScore& operator=(const TActAllianceBattleAllyScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleAllyScore& default_instance();

  void Swap(TActAllianceBattleAllyScore* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleAllyScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleAllyScore& from);
  void MergeFrom(const TActAllianceBattleAllyScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TAllianceSimpleInfo AllyInfo = 1;
  inline bool has_allyinfo() const;
  inline void clear_allyinfo();
  static const int kAllyInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleAllyScore</name>
  	<Function>
  		<name>allyinfo</name>
  		<replaceName>AllyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allyinfo</name>
  		<replaceName>AllyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_allyinfo</name>
  		<replaceName>AllyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_allyinfo</name>
  		<replaceName>AllyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAllianceSimpleInfo& allyinfo() const;
  inline ::pb::TAllianceSimpleInfo* mutable_allyinfo();
  inline ::pb::TAllianceSimpleInfo* release_allyinfo();
  inline void set_allocated_allyinfo(::pb::TAllianceSimpleInfo* allyinfo);

  // optional uint32 Score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleAllyScore</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleAllyScore)
 private:
  inline void set_has_allyinfo();
  inline void clear_has_allyinfo();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TAllianceSimpleInfo* allyinfo_;
  ::google::protobuf::uint32 score_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleAllyScore* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleReceiveMissionReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleReceiveMissionReq : public ::google::protobuf::Message {
 public:
  TActAllianceBattleReceiveMissionReq();
  virtual ~TActAllianceBattleReceiveMissionReq();

  TActAllianceBattleReceiveMissionReq(const TActAllianceBattleReceiveMissionReq& from);

  inline TActAllianceBattleReceiveMissionReq& operator=(const TActAllianceBattleReceiveMissionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleReceiveMissionReq& default_instance();

  void Swap(TActAllianceBattleReceiveMissionReq* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleReceiveMissionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleReceiveMissionReq& from);
  void MergeFrom(const TActAllianceBattleReceiveMissionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleReceiveMissionReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleReceiveMissionReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleReceiveMissionReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleDelMissionReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleDelMissionReq : public ::google::protobuf::Message {
 public:
  TActAllianceBattleDelMissionReq();
  virtual ~TActAllianceBattleDelMissionReq();

  TActAllianceBattleDelMissionReq(const TActAllianceBattleDelMissionReq& from);

  inline TActAllianceBattleDelMissionReq& operator=(const TActAllianceBattleDelMissionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleDelMissionReq& default_instance();

  void Swap(TActAllianceBattleDelMissionReq* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleDelMissionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleDelMissionReq& from);
  void MergeFrom(const TActAllianceBattleDelMissionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleDelMissionReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleDelMissionReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleDelMissionReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleReceiveMissionScore</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleReceiveMissionScore : public ::google::protobuf::Message {
 public:
  TActAllianceBattleReceiveMissionScore();
  virtual ~TActAllianceBattleReceiveMissionScore();

  TActAllianceBattleReceiveMissionScore(const TActAllianceBattleReceiveMissionScore& from);

  inline TActAllianceBattleReceiveMissionScore& operator=(const TActAllianceBattleReceiveMissionScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleReceiveMissionScore& default_instance();

  void Swap(TActAllianceBattleReceiveMissionScore* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleReceiveMissionScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleReceiveMissionScore& from);
  void MergeFrom(const TActAllianceBattleReceiveMissionScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 MissionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleReceiveMissionScore</name>
  	<Function>
  		<name>missionid</name>
  		<replaceName>MissionId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_missionid</name>
  		<replaceName>MissionId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_missionid</name>
  		<replaceName>MissionId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // optional uint32 MissionTid = 2;
  inline bool has_missiontid() const;
  inline void clear_missiontid();
  static const int kMissionTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleReceiveMissionScore</name>
  	<Function>
  		<name>missiontid</name>
  		<replaceName>MissionTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_missiontid</name>
  		<replaceName>MissionTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_missiontid</name>
  		<replaceName>MissionTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 missiontid() const;
  inline void set_missiontid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleReceiveMissionScore)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_missiontid();
  inline void clear_has_missiontid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 missionid_;
  ::google::protobuf::uint32 missiontid_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleReceiveMissionScore* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleGetPersonalScoreRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleGetPersonalScoreRewardReq : public ::google::protobuf::Message {
 public:
  TActAllianceBattleGetPersonalScoreRewardReq();
  virtual ~TActAllianceBattleGetPersonalScoreRewardReq();

  TActAllianceBattleGetPersonalScoreRewardReq(const TActAllianceBattleGetPersonalScoreRewardReq& from);

  inline TActAllianceBattleGetPersonalScoreRewardReq& operator=(const TActAllianceBattleGetPersonalScoreRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleGetPersonalScoreRewardReq& default_instance();

  void Swap(TActAllianceBattleGetPersonalScoreRewardReq* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleGetPersonalScoreRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleGetPersonalScoreRewardReq& from);
  void MergeFrom(const TActAllianceBattleGetPersonalScoreRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetPersonalScoreRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleGetPersonalScoreRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleGetPersonalScoreRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleGetPersonalScoreRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleGetPersonalScoreRewardRsp : public ::google::protobuf::Message {
 public:
  TActAllianceBattleGetPersonalScoreRewardRsp();
  virtual ~TActAllianceBattleGetPersonalScoreRewardRsp();

  TActAllianceBattleGetPersonalScoreRewardRsp(const TActAllianceBattleGetPersonalScoreRewardRsp& from);

  inline TActAllianceBattleGetPersonalScoreRewardRsp& operator=(const TActAllianceBattleGetPersonalScoreRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleGetPersonalScoreRewardRsp& default_instance();

  void Swap(TActAllianceBattleGetPersonalScoreRewardRsp* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleGetPersonalScoreRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleGetPersonalScoreRewardRsp& from);
  void MergeFrom(const TActAllianceBattleGetPersonalScoreRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetPersonalScoreRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleGetPersonalScoreRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleGetPersonalScoreRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleGetAllyScoreRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleGetAllyScoreRewardReq : public ::google::protobuf::Message {
 public:
  TActAllianceBattleGetAllyScoreRewardReq();
  virtual ~TActAllianceBattleGetAllyScoreRewardReq();

  TActAllianceBattleGetAllyScoreRewardReq(const TActAllianceBattleGetAllyScoreRewardReq& from);

  inline TActAllianceBattleGetAllyScoreRewardReq& operator=(const TActAllianceBattleGetAllyScoreRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleGetAllyScoreRewardReq& default_instance();

  void Swap(TActAllianceBattleGetAllyScoreRewardReq* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleGetAllyScoreRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleGetAllyScoreRewardReq& from);
  void MergeFrom(const TActAllianceBattleGetAllyScoreRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetAllyScoreRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleGetAllyScoreRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleGetAllyScoreRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleGetAllyScoreRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleGetAllyScoreRewardRsp : public ::google::protobuf::Message {
 public:
  TActAllianceBattleGetAllyScoreRewardRsp();
  virtual ~TActAllianceBattleGetAllyScoreRewardRsp();

  TActAllianceBattleGetAllyScoreRewardRsp(const TActAllianceBattleGetAllyScoreRewardRsp& from);

  inline TActAllianceBattleGetAllyScoreRewardRsp& operator=(const TActAllianceBattleGetAllyScoreRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleGetAllyScoreRewardRsp& default_instance();

  void Swap(TActAllianceBattleGetAllyScoreRewardRsp* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleGetAllyScoreRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleGetAllyScoreRewardRsp& from);
  void MergeFrom(const TActAllianceBattleGetAllyScoreRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleGetAllyScoreRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleGetAllyScoreRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleGetAllyScoreRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleBuyReceiveNumReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleBuyReceiveNumReq : public ::google::protobuf::Message {
 public:
  TActAllianceBattleBuyReceiveNumReq();
  virtual ~TActAllianceBattleBuyReceiveNumReq();

  TActAllianceBattleBuyReceiveNumReq(const TActAllianceBattleBuyReceiveNumReq& from);

  inline TActAllianceBattleBuyReceiveNumReq& operator=(const TActAllianceBattleBuyReceiveNumReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleBuyReceiveNumReq& default_instance();

  void Swap(TActAllianceBattleBuyReceiveNumReq* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleBuyReceiveNumReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleBuyReceiveNumReq& from);
  void MergeFrom(const TActAllianceBattleBuyReceiveNumReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleBuyReceiveNumReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleBuyReceiveNumReq)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleBuyReceiveNumReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleTaskNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleTaskNotify : public ::google::protobuf::Message {
 public:
  TActAllianceBattleTaskNotify();
  virtual ~TActAllianceBattleTaskNotify();

  TActAllianceBattleTaskNotify(const TActAllianceBattleTaskNotify& from);

  inline TActAllianceBattleTaskNotify& operator=(const TActAllianceBattleTaskNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleTaskNotify& default_instance();

  void Swap(TActAllianceBattleTaskNotify* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleTaskNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleTaskNotify& from);
  void MergeFrom(const TActAllianceBattleTaskNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TaskNum = 1;
  inline bool has_tasknum() const;
  inline void clear_tasknum();
  static const int kTaskNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleTaskNotify</name>
  	<Function>
  		<name>tasknum</name>
  		<replaceName>TaskNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tasknum</name>
  		<replaceName>TaskNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tasknum</name>
  		<replaceName>TaskNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tasknum() const;
  inline void set_tasknum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleTaskNotify)
 private:
  inline void set_has_tasknum();
  inline void clear_has_tasknum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tasknum_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleTaskNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleScoreNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleScoreNotify : public ::google::protobuf::Message {
 public:
  TActAllianceBattleScoreNotify();
  virtual ~TActAllianceBattleScoreNotify();

  TActAllianceBattleScoreNotify(const TActAllianceBattleScoreNotify& from);

  inline TActAllianceBattleScoreNotify& operator=(const TActAllianceBattleScoreNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleScoreNotify& default_instance();

  void Swap(TActAllianceBattleScoreNotify* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleScoreNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleScoreNotify& from);
  void MergeFrom(const TActAllianceBattleScoreNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleScoreNotify</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleScoreNotify)
 private:
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 score_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleScoreNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleDelPersonalMissionReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleDelPersonalMissionReq : public ::google::protobuf::Message {
 public:
  TActAllianceBattleDelPersonalMissionReq();
  virtual ~TActAllianceBattleDelPersonalMissionReq();

  TActAllianceBattleDelPersonalMissionReq(const TActAllianceBattleDelPersonalMissionReq& from);

  inline TActAllianceBattleDelPersonalMissionReq& operator=(const TActAllianceBattleDelPersonalMissionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleDelPersonalMissionReq& default_instance();

  void Swap(TActAllianceBattleDelPersonalMissionReq* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleDelPersonalMissionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleDelPersonalMissionReq& from);
  void MergeFrom(const TActAllianceBattleDelPersonalMissionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 MissionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleDelPersonalMissionReq</name>
  	<Function>
  		<name>missionid</name>
  		<replaceName>MissionId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_missionid</name>
  		<replaceName>MissionId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_missionid</name>
  		<replaceName>MissionId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleDelPersonalMissionReq)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 missionid_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleDelPersonalMissionReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAllianceBattleAbandonMission</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAllianceBattle.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAllianceBattleAbandonMission : public ::google::protobuf::Message {
 public:
  TActAllianceBattleAbandonMission();
  virtual ~TActAllianceBattleAbandonMission();

  TActAllianceBattleAbandonMission(const TActAllianceBattleAbandonMission& from);

  inline TActAllianceBattleAbandonMission& operator=(const TActAllianceBattleAbandonMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAllianceBattleAbandonMission& default_instance();

  void Swap(TActAllianceBattleAbandonMission* other);

  // implements Message ----------------------------------------------

  TActAllianceBattleAbandonMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAllianceBattleAbandonMission& from);
  void MergeFrom(const TActAllianceBattleAbandonMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 MissionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleAbandonMission</name>
  	<Function>
  		<name>missionid</name>
  		<replaceName>MissionId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_missionid</name>
  		<replaceName>MissionId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_missionid</name>
  		<replaceName>MissionId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // optional uint32 MissionTid = 2;
  inline bool has_missiontid() const;
  inline void clear_missiontid();
  static const int kMissionTidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActAllianceBattleAbandonMission</name>
  	<Function>
  		<name>missiontid</name>
  		<replaceName>MissionTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_missiontid</name>
  		<replaceName>MissionTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_missiontid</name>
  		<replaceName>MissionTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 missiontid() const;
  inline void set_missiontid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAllianceBattleAbandonMission)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_missiontid();
  inline void clear_has_missiontid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 missionid_;
  ::google::protobuf::uint32 missiontid_;
  friend void  protobuf_AddDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_AssignDesc_net_2fActAllianceBattle_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAllianceBattle_2eproto();

  void InitAsDefaultInstance();
  static TActAllianceBattleAbandonMission* default_instance_;
};
// ===================================================================


// ===================================================================

// TActAllianceBattleGetMissionHistoryRsp

// repeated .pb.TActAllianceBattleMissionHistory ArrMissionHistory = 1;
inline int TActAllianceBattleGetMissionHistoryRsp::arrmissionhistory_size() const {
  return arrmissionhistory_.size();
}
inline void TActAllianceBattleGetMissionHistoryRsp::clear_arrmissionhistory() {
  arrmissionhistory_.Clear();
}
inline const ::pb::TActAllianceBattleMissionHistory& TActAllianceBattleGetMissionHistoryRsp::arrmissionhistory(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetMissionHistoryRsp.ArrMissionHistory)
  return arrmissionhistory_.Get(index);
}
inline ::pb::TActAllianceBattleMissionHistory* TActAllianceBattleGetMissionHistoryRsp::mutable_arrmissionhistory(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActAllianceBattleGetMissionHistoryRsp.ArrMissionHistory)
  return arrmissionhistory_.Mutable(index);
}
inline ::pb::TActAllianceBattleMissionHistory* TActAllianceBattleGetMissionHistoryRsp::add_arrmissionhistory() {
  // @@protoc_insertion_point(field_add:pb.TActAllianceBattleGetMissionHistoryRsp.ArrMissionHistory)
  return arrmissionhistory_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMissionHistory >&
TActAllianceBattleGetMissionHistoryRsp::arrmissionhistory() const {
  // @@protoc_insertion_point(field_list:pb.TActAllianceBattleGetMissionHistoryRsp.ArrMissionHistory)
  return arrmissionhistory_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMissionHistory >*
TActAllianceBattleGetMissionHistoryRsp::mutable_arrmissionhistory() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActAllianceBattleGetMissionHistoryRsp.ArrMissionHistory)
  return &arrmissionhistory_;
}

// -------------------------------------------------------------------

// TActAllianceBattleGetMemberScoreRsp

// repeated .pb.TActAllianceBattleMemberInfo ArrMemberInfo = 1;
inline int TActAllianceBattleGetMemberScoreRsp::arrmemberinfo_size() const {
  return arrmemberinfo_.size();
}
inline void TActAllianceBattleGetMemberScoreRsp::clear_arrmemberinfo() {
  arrmemberinfo_.Clear();
}
inline const ::pb::TActAllianceBattleMemberInfo& TActAllianceBattleGetMemberScoreRsp::arrmemberinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetMemberScoreRsp.ArrMemberInfo)
  return arrmemberinfo_.Get(index);
}
inline ::pb::TActAllianceBattleMemberInfo* TActAllianceBattleGetMemberScoreRsp::mutable_arrmemberinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActAllianceBattleGetMemberScoreRsp.ArrMemberInfo)
  return arrmemberinfo_.Mutable(index);
}
inline ::pb::TActAllianceBattleMemberInfo* TActAllianceBattleGetMemberScoreRsp::add_arrmemberinfo() {
  // @@protoc_insertion_point(field_add:pb.TActAllianceBattleGetMemberScoreRsp.ArrMemberInfo)
  return arrmemberinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMemberInfo >&
TActAllianceBattleGetMemberScoreRsp::arrmemberinfo() const {
  // @@protoc_insertion_point(field_list:pb.TActAllianceBattleGetMemberScoreRsp.ArrMemberInfo)
  return arrmemberinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMemberInfo >*
TActAllianceBattleGetMemberScoreRsp::mutable_arrmemberinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActAllianceBattleGetMemberScoreRsp.ArrMemberInfo)
  return &arrmemberinfo_;
}

// -------------------------------------------------------------------

// TActAllianceBattleGetAllyScoreRsp

// repeated .pb.TActAllianceBattleAllyScore ArrAllyScore = 1;
inline int TActAllianceBattleGetAllyScoreRsp::arrallyscore_size() const {
  return arrallyscore_.size();
}
inline void TActAllianceBattleGetAllyScoreRsp::clear_arrallyscore() {
  arrallyscore_.Clear();
}
inline const ::pb::TActAllianceBattleAllyScore& TActAllianceBattleGetAllyScoreRsp::arrallyscore(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetAllyScoreRsp.ArrAllyScore)
  return arrallyscore_.Get(index);
}
inline ::pb::TActAllianceBattleAllyScore* TActAllianceBattleGetAllyScoreRsp::mutable_arrallyscore(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActAllianceBattleGetAllyScoreRsp.ArrAllyScore)
  return arrallyscore_.Mutable(index);
}
inline ::pb::TActAllianceBattleAllyScore* TActAllianceBattleGetAllyScoreRsp::add_arrallyscore() {
  // @@protoc_insertion_point(field_add:pb.TActAllianceBattleGetAllyScoreRsp.ArrAllyScore)
  return arrallyscore_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleAllyScore >&
TActAllianceBattleGetAllyScoreRsp::arrallyscore() const {
  // @@protoc_insertion_point(field_list:pb.TActAllianceBattleGetAllyScoreRsp.ArrAllyScore)
  return arrallyscore_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleAllyScore >*
TActAllianceBattleGetAllyScoreRsp::mutable_arrallyscore() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActAllianceBattleGetAllyScoreRsp.ArrAllyScore)
  return &arrallyscore_;
}

// -------------------------------------------------------------------

// TActAllianceBattleGetMissionArrRsp

// repeated .pb.TActAllianceBattleMission ArrMission = 1;
inline int TActAllianceBattleGetMissionArrRsp::arrmission_size() const {
  return arrmission_.size();
}
inline void TActAllianceBattleGetMissionArrRsp::clear_arrmission() {
  arrmission_.Clear();
}
inline const ::pb::TActAllianceBattleMission& TActAllianceBattleGetMissionArrRsp::arrmission(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetMissionArrRsp.ArrMission)
  return arrmission_.Get(index);
}
inline ::pb::TActAllianceBattleMission* TActAllianceBattleGetMissionArrRsp::mutable_arrmission(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActAllianceBattleGetMissionArrRsp.ArrMission)
  return arrmission_.Mutable(index);
}
inline ::pb::TActAllianceBattleMission* TActAllianceBattleGetMissionArrRsp::add_arrmission() {
  // @@protoc_insertion_point(field_add:pb.TActAllianceBattleGetMissionArrRsp.ArrMission)
  return arrmission_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMission >&
TActAllianceBattleGetMissionArrRsp::arrmission() const {
  // @@protoc_insertion_point(field_list:pb.TActAllianceBattleGetMissionArrRsp.ArrMission)
  return arrmission_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActAllianceBattleMission >*
TActAllianceBattleGetMissionArrRsp::mutable_arrmission() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActAllianceBattleGetMissionArrRsp.ArrMission)
  return &arrmission_;
}

// -------------------------------------------------------------------

// TActAllianceBattleGetAchievementRecordRsp

// repeated uint32 PersonalRewardId = 3;
inline int TActAllianceBattleGetAchievementRecordRsp::personalrewardid_size() const {
  return personalrewardid_.size();
}
inline void TActAllianceBattleGetAchievementRecordRsp::clear_personalrewardid() {
  personalrewardid_.Clear();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetAchievementRecordRsp::personalrewardid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetAchievementRecordRsp.PersonalRewardId)
  return personalrewardid_.Get(index);
}
inline void TActAllianceBattleGetAchievementRecordRsp::set_personalrewardid(int index, ::google::protobuf::uint32 value) {
  personalrewardid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetAchievementRecordRsp.PersonalRewardId)
}
inline void TActAllianceBattleGetAchievementRecordRsp::add_personalrewardid(::google::protobuf::uint32 value) {
  personalrewardid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActAllianceBattleGetAchievementRecordRsp.PersonalRewardId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TActAllianceBattleGetAchievementRecordRsp::personalrewardid() const {
  // @@protoc_insertion_point(field_list:pb.TActAllianceBattleGetAchievementRecordRsp.PersonalRewardId)
  return personalrewardid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TActAllianceBattleGetAchievementRecordRsp::mutable_personalrewardid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActAllianceBattleGetAchievementRecordRsp.PersonalRewardId)
  return &personalrewardid_;
}

// repeated uint32 AllyRewardId = 4;
inline int TActAllianceBattleGetAchievementRecordRsp::allyrewardid_size() const {
  return allyrewardid_.size();
}
inline void TActAllianceBattleGetAchievementRecordRsp::clear_allyrewardid() {
  allyrewardid_.Clear();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetAchievementRecordRsp::allyrewardid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetAchievementRecordRsp.AllyRewardId)
  return allyrewardid_.Get(index);
}
inline void TActAllianceBattleGetAchievementRecordRsp::set_allyrewardid(int index, ::google::protobuf::uint32 value) {
  allyrewardid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetAchievementRecordRsp.AllyRewardId)
}
inline void TActAllianceBattleGetAchievementRecordRsp::add_allyrewardid(::google::protobuf::uint32 value) {
  allyrewardid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActAllianceBattleGetAchievementRecordRsp.AllyRewardId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TActAllianceBattleGetAchievementRecordRsp::allyrewardid() const {
  // @@protoc_insertion_point(field_list:pb.TActAllianceBattleGetAchievementRecordRsp.AllyRewardId)
  return allyrewardid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TActAllianceBattleGetAchievementRecordRsp::mutable_allyrewardid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActAllianceBattleGetAchievementRecordRsp.AllyRewardId)
  return &allyrewardid_;
}

// -------------------------------------------------------------------

// TActAllianceBattleGetInfoRsp

// optional uint32 PersonRank = 1;
inline bool TActAllianceBattleGetInfoRsp::has_personrank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleGetInfoRsp::set_has_personrank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleGetInfoRsp::clear_has_personrank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleGetInfoRsp::clear_personrank() {
  personrank_ = 0u;
  clear_has_personrank();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetInfoRsp::personrank() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetInfoRsp.PersonRank)
  return personrank_;
}
inline void TActAllianceBattleGetInfoRsp::set_personrank(::google::protobuf::uint32 value) {
  set_has_personrank();
  personrank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetInfoRsp.PersonRank)
}

// optional uint32 PersonScore = 2;
inline bool TActAllianceBattleGetInfoRsp::has_personscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActAllianceBattleGetInfoRsp::set_has_personscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActAllianceBattleGetInfoRsp::clear_has_personscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActAllianceBattleGetInfoRsp::clear_personscore() {
  personscore_ = 0u;
  clear_has_personscore();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetInfoRsp::personscore() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetInfoRsp.PersonScore)
  return personscore_;
}
inline void TActAllianceBattleGetInfoRsp::set_personscore(::google::protobuf::uint32 value) {
  set_has_personscore();
  personscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetInfoRsp.PersonScore)
}

// optional uint32 AllyRank = 3;
inline bool TActAllianceBattleGetInfoRsp::has_allyrank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActAllianceBattleGetInfoRsp::set_has_allyrank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActAllianceBattleGetInfoRsp::clear_has_allyrank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActAllianceBattleGetInfoRsp::clear_allyrank() {
  allyrank_ = 0u;
  clear_has_allyrank();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetInfoRsp::allyrank() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetInfoRsp.AllyRank)
  return allyrank_;
}
inline void TActAllianceBattleGetInfoRsp::set_allyrank(::google::protobuf::uint32 value) {
  set_has_allyrank();
  allyrank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetInfoRsp.AllyRank)
}

// optional uint32 AllyScore = 4;
inline bool TActAllianceBattleGetInfoRsp::has_allyscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TActAllianceBattleGetInfoRsp::set_has_allyscore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TActAllianceBattleGetInfoRsp::clear_has_allyscore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TActAllianceBattleGetInfoRsp::clear_allyscore() {
  allyscore_ = 0u;
  clear_has_allyscore();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetInfoRsp::allyscore() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetInfoRsp.AllyScore)
  return allyscore_;
}
inline void TActAllianceBattleGetInfoRsp::set_allyscore(::google::protobuf::uint32 value) {
  set_has_allyscore();
  allyscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetInfoRsp.AllyScore)
}

// optional uint32 ReceiveNum = 5;
inline bool TActAllianceBattleGetInfoRsp::has_receivenum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TActAllianceBattleGetInfoRsp::set_has_receivenum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TActAllianceBattleGetInfoRsp::clear_has_receivenum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TActAllianceBattleGetInfoRsp::clear_receivenum() {
  receivenum_ = 0u;
  clear_has_receivenum();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetInfoRsp::receivenum() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetInfoRsp.ReceiveNum)
  return receivenum_;
}
inline void TActAllianceBattleGetInfoRsp::set_receivenum(::google::protobuf::uint32 value) {
  set_has_receivenum();
  receivenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetInfoRsp.ReceiveNum)
}

// optional uint32 ReceiveBuyNum = 6;
inline bool TActAllianceBattleGetInfoRsp::has_receivebuynum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TActAllianceBattleGetInfoRsp::set_has_receivebuynum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TActAllianceBattleGetInfoRsp::clear_has_receivebuynum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TActAllianceBattleGetInfoRsp::clear_receivebuynum() {
  receivebuynum_ = 0u;
  clear_has_receivebuynum();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetInfoRsp::receivebuynum() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetInfoRsp.ReceiveBuyNum)
  return receivebuynum_;
}
inline void TActAllianceBattleGetInfoRsp::set_receivebuynum(::google::protobuf::uint32 value) {
  set_has_receivebuynum();
  receivebuynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetInfoRsp.ReceiveBuyNum)
}

// optional uint32 TierId = 7;
inline bool TActAllianceBattleGetInfoRsp::has_tierid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TActAllianceBattleGetInfoRsp::set_has_tierid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TActAllianceBattleGetInfoRsp::clear_has_tierid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TActAllianceBattleGetInfoRsp::clear_tierid() {
  tierid_ = 0u;
  clear_has_tierid();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetInfoRsp::tierid() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetInfoRsp.TierId)
  return tierid_;
}
inline void TActAllianceBattleGetInfoRsp::set_tierid(::google::protobuf::uint32 value) {
  set_has_tierid();
  tierid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetInfoRsp.TierId)
}

// optional uint32 DeleteNum = 8;
inline bool TActAllianceBattleGetInfoRsp::has_deletenum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TActAllianceBattleGetInfoRsp::set_has_deletenum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TActAllianceBattleGetInfoRsp::clear_has_deletenum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TActAllianceBattleGetInfoRsp::clear_deletenum() {
  deletenum_ = 0u;
  clear_has_deletenum();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetInfoRsp::deletenum() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetInfoRsp.DeleteNum)
  return deletenum_;
}
inline void TActAllianceBattleGetInfoRsp::set_deletenum(::google::protobuf::uint32 value) {
  set_has_deletenum();
  deletenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetInfoRsp.DeleteNum)
}

// optional uint32 AbandonNum = 9;
inline bool TActAllianceBattleGetInfoRsp::has_abandonnum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TActAllianceBattleGetInfoRsp::set_has_abandonnum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TActAllianceBattleGetInfoRsp::clear_has_abandonnum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TActAllianceBattleGetInfoRsp::clear_abandonnum() {
  abandonnum_ = 0u;
  clear_has_abandonnum();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetInfoRsp::abandonnum() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetInfoRsp.AbandonNum)
  return abandonnum_;
}
inline void TActAllianceBattleGetInfoRsp::set_abandonnum(::google::protobuf::uint32 value) {
  set_has_abandonnum();
  abandonnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetInfoRsp.AbandonNum)
}

// optional uint32 OverallPersonalRank = 10;
inline bool TActAllianceBattleGetInfoRsp::has_overallpersonalrank() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TActAllianceBattleGetInfoRsp::set_has_overallpersonalrank() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TActAllianceBattleGetInfoRsp::clear_has_overallpersonalrank() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TActAllianceBattleGetInfoRsp::clear_overallpersonalrank() {
  overallpersonalrank_ = 0u;
  clear_has_overallpersonalrank();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetInfoRsp::overallpersonalrank() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetInfoRsp.OverallPersonalRank)
  return overallpersonalrank_;
}
inline void TActAllianceBattleGetInfoRsp::set_overallpersonalrank(::google::protobuf::uint32 value) {
  set_has_overallpersonalrank();
  overallpersonalrank_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetInfoRsp.OverallPersonalRank)
}

// optional uint32 OverallTotalRankNum = 11;
inline bool TActAllianceBattleGetInfoRsp::has_overalltotalranknum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TActAllianceBattleGetInfoRsp::set_has_overalltotalranknum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TActAllianceBattleGetInfoRsp::clear_has_overalltotalranknum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TActAllianceBattleGetInfoRsp::clear_overalltotalranknum() {
  overalltotalranknum_ = 0u;
  clear_has_overalltotalranknum();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetInfoRsp::overalltotalranknum() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetInfoRsp.OverallTotalRankNum)
  return overalltotalranknum_;
}
inline void TActAllianceBattleGetInfoRsp::set_overalltotalranknum(::google::protobuf::uint32 value) {
  set_has_overalltotalranknum();
  overalltotalranknum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetInfoRsp.OverallTotalRankNum)
}

// -------------------------------------------------------------------

// TActAllianceBattleMission

// optional uint32 Id = 1;
inline bool TActAllianceBattleMission::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleMission::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleMission::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleMission::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActAllianceBattleMission::id() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMission.Id)
  return id_;
}
inline void TActAllianceBattleMission::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleMission.Id)
}

// optional uint32 MissionTid = 2;
inline bool TActAllianceBattleMission::has_missiontid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActAllianceBattleMission::set_has_missiontid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActAllianceBattleMission::clear_has_missiontid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActAllianceBattleMission::clear_missiontid() {
  missiontid_ = 0u;
  clear_has_missiontid();
}
inline ::google::protobuf::uint32 TActAllianceBattleMission::missiontid() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMission.MissionTid)
  return missiontid_;
}
inline void TActAllianceBattleMission::set_missiontid(::google::protobuf::uint32 value) {
  set_has_missiontid();
  missiontid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleMission.MissionTid)
}

// optional .pb.TUserSimpleInfo UserInfo = 3;
inline bool TActAllianceBattleMission::has_userinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActAllianceBattleMission::set_has_userinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActAllianceBattleMission::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActAllianceBattleMission::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TActAllianceBattleMission::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMission.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TActAllianceBattleMission::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TActAllianceBattleMission.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TActAllianceBattleMission::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TActAllianceBattleMission::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TActAllianceBattleMission.UserInfo)
}

// optional uint64 ReceiveTime = 4;
inline bool TActAllianceBattleMission::has_receivetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TActAllianceBattleMission::set_has_receivetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TActAllianceBattleMission::clear_has_receivetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TActAllianceBattleMission::clear_receivetime() {
  receivetime_ = GOOGLE_ULONGLONG(0);
  clear_has_receivetime();
}
inline ::google::protobuf::uint64 TActAllianceBattleMission::receivetime() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMission.ReceiveTime)
  return receivetime_;
}
inline void TActAllianceBattleMission::set_receivetime(::google::protobuf::uint64 value) {
  set_has_receivetime();
  receivetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleMission.ReceiveTime)
}

// optional uint32 FinishNum = 5;
inline bool TActAllianceBattleMission::has_finishnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TActAllianceBattleMission::set_has_finishnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TActAllianceBattleMission::clear_has_finishnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TActAllianceBattleMission::clear_finishnum() {
  finishnum_ = 0u;
  clear_has_finishnum();
}
inline ::google::protobuf::uint32 TActAllianceBattleMission::finishnum() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMission.FinishNum)
  return finishnum_;
}
inline void TActAllianceBattleMission::set_finishnum(::google::protobuf::uint32 value) {
  set_has_finishnum();
  finishnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleMission.FinishNum)
}

// optional uint64 GenTime = 6;
inline bool TActAllianceBattleMission::has_gentime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TActAllianceBattleMission::set_has_gentime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TActAllianceBattleMission::clear_has_gentime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TActAllianceBattleMission::clear_gentime() {
  gentime_ = GOOGLE_ULONGLONG(0);
  clear_has_gentime();
}
inline ::google::protobuf::uint64 TActAllianceBattleMission::gentime() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMission.GenTime)
  return gentime_;
}
inline void TActAllianceBattleMission::set_gentime(::google::protobuf::uint64 value) {
  set_has_gentime();
  gentime_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleMission.GenTime)
}

// -------------------------------------------------------------------

// TActAllianceBattleMissionHistory

// optional string GuildName = 1;
inline bool TActAllianceBattleMissionHistory::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleMissionHistory::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleMissionHistory::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleMissionHistory::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& TActAllianceBattleMissionHistory::guildname() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMissionHistory.GuildName)
  return *guildname_;
}
inline void TActAllianceBattleMissionHistory::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleMissionHistory.GuildName)
}
inline void TActAllianceBattleMissionHistory::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TActAllianceBattleMissionHistory.GuildName)
}
inline void TActAllianceBattleMissionHistory::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TActAllianceBattleMissionHistory.GuildName)
}
inline ::std::string* TActAllianceBattleMissionHistory::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TActAllianceBattleMissionHistory.GuildName)
  return guildname_;
}
inline ::std::string* TActAllianceBattleMissionHistory::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TActAllianceBattleMissionHistory::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TActAllianceBattleMissionHistory.GuildName)
}

// optional string UserName = 2;
inline bool TActAllianceBattleMissionHistory::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActAllianceBattleMissionHistory::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActAllianceBattleMissionHistory::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActAllianceBattleMissionHistory::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& TActAllianceBattleMissionHistory::username() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMissionHistory.UserName)
  return *username_;
}
inline void TActAllianceBattleMissionHistory::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleMissionHistory.UserName)
}
inline void TActAllianceBattleMissionHistory::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TActAllianceBattleMissionHistory.UserName)
}
inline void TActAllianceBattleMissionHistory::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TActAllianceBattleMissionHistory.UserName)
}
inline ::std::string* TActAllianceBattleMissionHistory::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TActAllianceBattleMissionHistory.UserName)
  return username_;
}
inline ::std::string* TActAllianceBattleMissionHistory::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TActAllianceBattleMissionHistory::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TActAllianceBattleMissionHistory.UserName)
}

// optional string ServerId = 5;
inline bool TActAllianceBattleMissionHistory::has_serverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActAllianceBattleMissionHistory::set_has_serverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActAllianceBattleMissionHistory::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActAllianceBattleMissionHistory::clear_serverid() {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_->clear();
  }
  clear_has_serverid();
}
inline const ::std::string& TActAllianceBattleMissionHistory::serverid() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMissionHistory.ServerId)
  return *serverid_;
}
inline void TActAllianceBattleMissionHistory::set_serverid(const ::std::string& value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleMissionHistory.ServerId)
}
inline void TActAllianceBattleMissionHistory::set_serverid(const char* value) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TActAllianceBattleMissionHistory.ServerId)
}
inline void TActAllianceBattleMissionHistory::set_serverid(const char* value, size_t size) {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  serverid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TActAllianceBattleMissionHistory.ServerId)
}
inline ::std::string* TActAllianceBattleMissionHistory::mutable_serverid() {
  set_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serverid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TActAllianceBattleMissionHistory.ServerId)
  return serverid_;
}
inline ::std::string* TActAllianceBattleMissionHistory::release_serverid() {
  clear_has_serverid();
  if (serverid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = serverid_;
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TActAllianceBattleMissionHistory::set_allocated_serverid(::std::string* serverid) {
  if (serverid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverid_;
  }
  if (serverid) {
    set_has_serverid();
    serverid_ = serverid;
  } else {
    clear_has_serverid();
    serverid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TActAllianceBattleMissionHistory.ServerId)
}

// optional uint32 MissionTid = 3;
inline bool TActAllianceBattleMissionHistory::has_missiontid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TActAllianceBattleMissionHistory::set_has_missiontid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TActAllianceBattleMissionHistory::clear_has_missiontid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TActAllianceBattleMissionHistory::clear_missiontid() {
  missiontid_ = 0u;
  clear_has_missiontid();
}
inline ::google::protobuf::uint32 TActAllianceBattleMissionHistory::missiontid() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMissionHistory.MissionTid)
  return missiontid_;
}
inline void TActAllianceBattleMissionHistory::set_missiontid(::google::protobuf::uint32 value) {
  set_has_missiontid();
  missiontid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleMissionHistory.MissionTid)
}

// optional uint64 FinishTime = 4;
inline bool TActAllianceBattleMissionHistory::has_finishtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TActAllianceBattleMissionHistory::set_has_finishtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TActAllianceBattleMissionHistory::clear_has_finishtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TActAllianceBattleMissionHistory::clear_finishtime() {
  finishtime_ = GOOGLE_ULONGLONG(0);
  clear_has_finishtime();
}
inline ::google::protobuf::uint64 TActAllianceBattleMissionHistory::finishtime() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMissionHistory.FinishTime)
  return finishtime_;
}
inline void TActAllianceBattleMissionHistory::set_finishtime(::google::protobuf::uint64 value) {
  set_has_finishtime();
  finishtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleMissionHistory.FinishTime)
}

// -------------------------------------------------------------------

// TActAllianceBattleMemberInfo

// optional .pb.TUserSimpleInfo UserData = 1;
inline bool TActAllianceBattleMemberInfo::has_userdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleMemberInfo::set_has_userdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleMemberInfo::clear_has_userdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleMemberInfo::clear_userdata() {
  if (userdata_ != NULL) userdata_->::pb::TUserSimpleInfo::Clear();
  clear_has_userdata();
}
inline const ::pb::TUserSimpleInfo& TActAllianceBattleMemberInfo::userdata() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMemberInfo.UserData)
  return userdata_ != NULL ? *userdata_ : *default_instance_->userdata_;
}
inline ::pb::TUserSimpleInfo* TActAllianceBattleMemberInfo::mutable_userdata() {
  set_has_userdata();
  if (userdata_ == NULL) userdata_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TActAllianceBattleMemberInfo.UserData)
  return userdata_;
}
inline ::pb::TUserSimpleInfo* TActAllianceBattleMemberInfo::release_userdata() {
  clear_has_userdata();
  ::pb::TUserSimpleInfo* temp = userdata_;
  userdata_ = NULL;
  return temp;
}
inline void TActAllianceBattleMemberInfo::set_allocated_userdata(::pb::TUserSimpleInfo* userdata) {
  delete userdata_;
  userdata_ = userdata;
  if (userdata) {
    set_has_userdata();
  } else {
    clear_has_userdata();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TActAllianceBattleMemberInfo.UserData)
}

// optional uint32 Score = 2;
inline bool TActAllianceBattleMemberInfo::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActAllianceBattleMemberInfo::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActAllianceBattleMemberInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActAllianceBattleMemberInfo::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 TActAllianceBattleMemberInfo::score() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMemberInfo.Score)
  return score_;
}
inline void TActAllianceBattleMemberInfo::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleMemberInfo.Score)
}

// optional uint32 ReceiveNum = 3;
inline bool TActAllianceBattleMemberInfo::has_receivenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActAllianceBattleMemberInfo::set_has_receivenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActAllianceBattleMemberInfo::clear_has_receivenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActAllianceBattleMemberInfo::clear_receivenum() {
  receivenum_ = 0u;
  clear_has_receivenum();
}
inline ::google::protobuf::uint32 TActAllianceBattleMemberInfo::receivenum() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMemberInfo.ReceiveNum)
  return receivenum_;
}
inline void TActAllianceBattleMemberInfo::set_receivenum(::google::protobuf::uint32 value) {
  set_has_receivenum();
  receivenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleMemberInfo.ReceiveNum)
}

// optional uint32 ReceiveBuyNum = 4;
inline bool TActAllianceBattleMemberInfo::has_receivebuynum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TActAllianceBattleMemberInfo::set_has_receivebuynum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TActAllianceBattleMemberInfo::clear_has_receivebuynum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TActAllianceBattleMemberInfo::clear_receivebuynum() {
  receivebuynum_ = 0u;
  clear_has_receivebuynum();
}
inline ::google::protobuf::uint32 TActAllianceBattleMemberInfo::receivebuynum() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleMemberInfo.ReceiveBuyNum)
  return receivebuynum_;
}
inline void TActAllianceBattleMemberInfo::set_receivebuynum(::google::protobuf::uint32 value) {
  set_has_receivebuynum();
  receivebuynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleMemberInfo.ReceiveBuyNum)
}

// -------------------------------------------------------------------

// TActAllianceBattleAllyScore

// optional .pb.TAllianceSimpleInfo AllyInfo = 1;
inline bool TActAllianceBattleAllyScore::has_allyinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleAllyScore::set_has_allyinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleAllyScore::clear_has_allyinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleAllyScore::clear_allyinfo() {
  if (allyinfo_ != NULL) allyinfo_->::pb::TAllianceSimpleInfo::Clear();
  clear_has_allyinfo();
}
inline const ::pb::TAllianceSimpleInfo& TActAllianceBattleAllyScore::allyinfo() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleAllyScore.AllyInfo)
  return allyinfo_ != NULL ? *allyinfo_ : *default_instance_->allyinfo_;
}
inline ::pb::TAllianceSimpleInfo* TActAllianceBattleAllyScore::mutable_allyinfo() {
  set_has_allyinfo();
  if (allyinfo_ == NULL) allyinfo_ = new ::pb::TAllianceSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TActAllianceBattleAllyScore.AllyInfo)
  return allyinfo_;
}
inline ::pb::TAllianceSimpleInfo* TActAllianceBattleAllyScore::release_allyinfo() {
  clear_has_allyinfo();
  ::pb::TAllianceSimpleInfo* temp = allyinfo_;
  allyinfo_ = NULL;
  return temp;
}
inline void TActAllianceBattleAllyScore::set_allocated_allyinfo(::pb::TAllianceSimpleInfo* allyinfo) {
  delete allyinfo_;
  allyinfo_ = allyinfo;
  if (allyinfo) {
    set_has_allyinfo();
  } else {
    clear_has_allyinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TActAllianceBattleAllyScore.AllyInfo)
}

// optional uint32 Score = 2;
inline bool TActAllianceBattleAllyScore::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActAllianceBattleAllyScore::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActAllianceBattleAllyScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActAllianceBattleAllyScore::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 TActAllianceBattleAllyScore::score() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleAllyScore.Score)
  return score_;
}
inline void TActAllianceBattleAllyScore::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleAllyScore.Score)
}

// -------------------------------------------------------------------

// TActAllianceBattleReceiveMissionReq

// optional uint32 Id = 1;
inline bool TActAllianceBattleReceiveMissionReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleReceiveMissionReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleReceiveMissionReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleReceiveMissionReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActAllianceBattleReceiveMissionReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleReceiveMissionReq.Id)
  return id_;
}
inline void TActAllianceBattleReceiveMissionReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleReceiveMissionReq.Id)
}

// -------------------------------------------------------------------

// TActAllianceBattleDelMissionReq

// optional uint32 Id = 1;
inline bool TActAllianceBattleDelMissionReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleDelMissionReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleDelMissionReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleDelMissionReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActAllianceBattleDelMissionReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleDelMissionReq.Id)
  return id_;
}
inline void TActAllianceBattleDelMissionReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleDelMissionReq.Id)
}

// -------------------------------------------------------------------

// TActAllianceBattleReceiveMissionScore

// optional uint32 MissionId = 1;
inline bool TActAllianceBattleReceiveMissionScore::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleReceiveMissionScore::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleReceiveMissionScore::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleReceiveMissionScore::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 TActAllianceBattleReceiveMissionScore::missionid() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleReceiveMissionScore.MissionId)
  return missionid_;
}
inline void TActAllianceBattleReceiveMissionScore::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleReceiveMissionScore.MissionId)
}

// optional uint32 MissionTid = 2;
inline bool TActAllianceBattleReceiveMissionScore::has_missiontid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActAllianceBattleReceiveMissionScore::set_has_missiontid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActAllianceBattleReceiveMissionScore::clear_has_missiontid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActAllianceBattleReceiveMissionScore::clear_missiontid() {
  missiontid_ = 0u;
  clear_has_missiontid();
}
inline ::google::protobuf::uint32 TActAllianceBattleReceiveMissionScore::missiontid() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleReceiveMissionScore.MissionTid)
  return missiontid_;
}
inline void TActAllianceBattleReceiveMissionScore::set_missiontid(::google::protobuf::uint32 value) {
  set_has_missiontid();
  missiontid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleReceiveMissionScore.MissionTid)
}

// -------------------------------------------------------------------

// TActAllianceBattleGetPersonalScoreRewardReq

// optional uint32 Id = 1;
inline bool TActAllianceBattleGetPersonalScoreRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleGetPersonalScoreRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleGetPersonalScoreRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleGetPersonalScoreRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetPersonalScoreRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetPersonalScoreRewardReq.Id)
  return id_;
}
inline void TActAllianceBattleGetPersonalScoreRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetPersonalScoreRewardReq.Id)
}

// -------------------------------------------------------------------

// TActAllianceBattleGetPersonalScoreRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TActAllianceBattleGetPersonalScoreRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TActAllianceBattleGetPersonalScoreRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TActAllianceBattleGetPersonalScoreRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetPersonalScoreRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TActAllianceBattleGetPersonalScoreRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActAllianceBattleGetPersonalScoreRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TActAllianceBattleGetPersonalScoreRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TActAllianceBattleGetPersonalScoreRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TActAllianceBattleGetPersonalScoreRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TActAllianceBattleGetPersonalScoreRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TActAllianceBattleGetPersonalScoreRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActAllianceBattleGetPersonalScoreRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TActAllianceBattleGetAllyScoreRewardReq

// optional uint32 Id = 1;
inline bool TActAllianceBattleGetAllyScoreRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleGetAllyScoreRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleGetAllyScoreRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleGetAllyScoreRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActAllianceBattleGetAllyScoreRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetAllyScoreRewardReq.Id)
  return id_;
}
inline void TActAllianceBattleGetAllyScoreRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleGetAllyScoreRewardReq.Id)
}

// -------------------------------------------------------------------

// TActAllianceBattleGetAllyScoreRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TActAllianceBattleGetAllyScoreRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TActAllianceBattleGetAllyScoreRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TActAllianceBattleGetAllyScoreRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleGetAllyScoreRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TActAllianceBattleGetAllyScoreRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActAllianceBattleGetAllyScoreRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TActAllianceBattleGetAllyScoreRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TActAllianceBattleGetAllyScoreRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TActAllianceBattleGetAllyScoreRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TActAllianceBattleGetAllyScoreRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TActAllianceBattleGetAllyScoreRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActAllianceBattleGetAllyScoreRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TActAllianceBattleBuyReceiveNumReq

// optional uint32 Num = 1;
inline bool TActAllianceBattleBuyReceiveNumReq::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleBuyReceiveNumReq::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleBuyReceiveNumReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleBuyReceiveNumReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActAllianceBattleBuyReceiveNumReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleBuyReceiveNumReq.Num)
  return num_;
}
inline void TActAllianceBattleBuyReceiveNumReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleBuyReceiveNumReq.Num)
}

// -------------------------------------------------------------------

// TActAllianceBattleTaskNotify

// optional uint32 TaskNum = 1;
inline bool TActAllianceBattleTaskNotify::has_tasknum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleTaskNotify::set_has_tasknum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleTaskNotify::clear_has_tasknum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleTaskNotify::clear_tasknum() {
  tasknum_ = 0u;
  clear_has_tasknum();
}
inline ::google::protobuf::uint32 TActAllianceBattleTaskNotify::tasknum() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleTaskNotify.TaskNum)
  return tasknum_;
}
inline void TActAllianceBattleTaskNotify::set_tasknum(::google::protobuf::uint32 value) {
  set_has_tasknum();
  tasknum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleTaskNotify.TaskNum)
}

// -------------------------------------------------------------------

// TActAllianceBattleScoreNotify

// optional uint32 Score = 1;
inline bool TActAllianceBattleScoreNotify::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleScoreNotify::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleScoreNotify::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleScoreNotify::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 TActAllianceBattleScoreNotify::score() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleScoreNotify.Score)
  return score_;
}
inline void TActAllianceBattleScoreNotify::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleScoreNotify.Score)
}

// -------------------------------------------------------------------

// TActAllianceBattleDelPersonalMissionReq

// optional uint32 MissionId = 1;
inline bool TActAllianceBattleDelPersonalMissionReq::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleDelPersonalMissionReq::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleDelPersonalMissionReq::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleDelPersonalMissionReq::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 TActAllianceBattleDelPersonalMissionReq::missionid() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleDelPersonalMissionReq.MissionId)
  return missionid_;
}
inline void TActAllianceBattleDelPersonalMissionReq::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleDelPersonalMissionReq.MissionId)
}

// -------------------------------------------------------------------

// TActAllianceBattleAbandonMission

// optional uint32 MissionId = 1;
inline bool TActAllianceBattleAbandonMission::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAllianceBattleAbandonMission::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAllianceBattleAbandonMission::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAllianceBattleAbandonMission::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 TActAllianceBattleAbandonMission::missionid() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleAbandonMission.MissionId)
  return missionid_;
}
inline void TActAllianceBattleAbandonMission::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleAbandonMission.MissionId)
}

// optional uint32 MissionTid = 2;
inline bool TActAllianceBattleAbandonMission::has_missiontid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActAllianceBattleAbandonMission::set_has_missiontid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActAllianceBattleAbandonMission::clear_has_missiontid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActAllianceBattleAbandonMission::clear_missiontid() {
  missiontid_ = 0u;
  clear_has_missiontid();
}
inline ::google::protobuf::uint32 TActAllianceBattleAbandonMission::missiontid() const {
  // @@protoc_insertion_point(field_get:pb.TActAllianceBattleAbandonMission.MissionTid)
  return missiontid_;
}
inline void TActAllianceBattleAbandonMission::set_missiontid(::google::protobuf::uint32 value) {
  set_has_missiontid();
  missiontid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAllianceBattleAbandonMission.MissionTid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActAllianceBattle_2eproto__INCLUDED
