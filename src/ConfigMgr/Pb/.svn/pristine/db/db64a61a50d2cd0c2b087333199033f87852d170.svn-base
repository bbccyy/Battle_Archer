// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Invite.proto

#ifndef PROTOBUF_net_2fInvite_2eproto__INCLUDED
#define PROTOBUF_net_2fInvite_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fInvite_2eproto();
void protobuf_AssignDesc_net_2fInvite_2eproto();
void protobuf_ShutdownFile_net_2fInvite_2eproto();

class TInviteGetInfoRsp;
class TInviteAchvItem;
class TInviteGetInviteAchvReq;
class TInviteGetShopPageGetInfoReq;
class TInviteGetShopPageGetInfoRsp;
class TInviteShopItem;
class TInviteBuyItemReq;
class TInviteBuyItemRsp;
class TInviteInviteByOtherReq;
class TInviteNotify;
class TInviteSendInfoToInviterReq;
class TInviteSendInfoToInviterRsp;

enum EInviteErrCode {
  INVITE_ERR_CODE_OK = 0,
  INVITE_ERR_CODE_INVALID_CODE = 1,
  INVITE_ERR_CODE_TIME_OUT = 2,
  INVITE_ERR_CODE_INVITEE_NUM_TO_LIMIT = 3
};
bool EInviteErrCode_IsValid(int value);
const EInviteErrCode EInviteErrCode_MIN = INVITE_ERR_CODE_OK;
const EInviteErrCode EInviteErrCode_MAX = INVITE_ERR_CODE_INVITEE_NUM_TO_LIMIT;
const int EInviteErrCode_ARRAYSIZE = EInviteErrCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* EInviteErrCode_descriptor();
inline const ::std::string& EInviteErrCode_Name(EInviteErrCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    EInviteErrCode_descriptor(), value);
}
inline bool EInviteErrCode_Parse(
    const ::std::string& name, EInviteErrCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EInviteErrCode>(
    EInviteErrCode_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TInviteGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Invite.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInviteGetInfoRsp : public ::google::protobuf::Message {
 public:
  TInviteGetInfoRsp();
  virtual ~TInviteGetInfoRsp();

  TInviteGetInfoRsp(const TInviteGetInfoRsp& from);

  inline TInviteGetInfoRsp& operator=(const TInviteGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInviteGetInfoRsp& default_instance();

  void Swap(TInviteGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TInviteGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInviteGetInfoRsp& from);
  void MergeFrom(const TInviteGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string InviteCode = 1;
  inline bool has_invitecode() const;
  inline void clear_invitecode();
  static const int kInviteCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInviteGetInfoRsp</name>
  	<Function>
  		<name>invitecode</name>
  		<replaceName>InviteCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_invitecode</name>
  		<replaceName>InviteCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_invitecode</name>
  		<replaceName>InviteCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& invitecode() const;
  inline void set_invitecode(const ::std::string& value);
  inline void set_invitecode(const char* value);
  inline void set_invitecode(const char* value, size_t size);
  inline ::std::string* mutable_invitecode();
  inline ::std::string* release_invitecode();
  inline void set_allocated_invitecode(::std::string* invitecode);

  // optional uint32 InviteNum = 2;
  inline bool has_invitenum() const;
  inline void clear_invitenum();
  static const int kInviteNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInviteGetInfoRsp</name>
  	<Function>
  		<name>invitenum</name>
  		<replaceName>InviteNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_invitenum</name>
  		<replaceName>InviteNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_invitenum</name>
  		<replaceName>InviteNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 invitenum() const;
  inline void set_invitenum(::google::protobuf::uint32 value);

  // repeated .pb.TInviteAchvItem PowerAchvArr = 3;
  inline int powerachvarr_size() const;
  inline void clear_powerachvarr();
  static const int kPowerAchvArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInviteGetInfoRsp</name>
  	<Function>
  		<name>powerachvarr</name>
  		<replaceName>PowerAchvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_powerachvarr</name>
  		<replaceName>PowerAchvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_powerachvarr</name>
  		<replaceName>PowerAchvArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_powerachvarr</name>
  		<replaceName>PowerAchvArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>powerachvarr_size</name>
  		<replaceName>PowerAchvArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInviteAchvItem& powerachvarr(int index) const;
  inline ::pb::TInviteAchvItem* mutable_powerachvarr(int index);
  inline ::pb::TInviteAchvItem* add_powerachvarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >&
      powerachvarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >*
      mutable_powerachvarr();

  // repeated .pb.TInviteAchvItem VIPAchvArr = 4;
  inline int vipachvarr_size() const;
  inline void clear_vipachvarr();
  static const int kVIPAchvArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TInviteGetInfoRsp</name>
  	<Function>
  		<name>vipachvarr</name>
  		<replaceName>VIPAchvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_vipachvarr</name>
  		<replaceName>VIPAchvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_vipachvarr</name>
  		<replaceName>VIPAchvArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_vipachvarr</name>
  		<replaceName>VIPAchvArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>vipachvarr_size</name>
  		<replaceName>VIPAchvArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInviteAchvItem& vipachvarr(int index) const;
  inline ::pb::TInviteAchvItem* mutable_vipachvarr(int index);
  inline ::pb::TInviteAchvItem* add_vipachvarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >&
      vipachvarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >*
      mutable_vipachvarr();

  // repeated .pb.TInviteAchvItem InviteNumAchvArr = 5;
  inline int invitenumachvarr_size() const;
  inline void clear_invitenumachvarr();
  static const int kInviteNumAchvArrFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TInviteGetInfoRsp</name>
  	<Function>
  		<name>invitenumachvarr</name>
  		<replaceName>InviteNumAchvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_invitenumachvarr</name>
  		<replaceName>InviteNumAchvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_invitenumachvarr</name>
  		<replaceName>InviteNumAchvArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_invitenumachvarr</name>
  		<replaceName>InviteNumAchvArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>invitenumachvarr_size</name>
  		<replaceName>InviteNumAchvArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInviteAchvItem& invitenumachvarr(int index) const;
  inline ::pb::TInviteAchvItem* mutable_invitenumachvarr(int index);
  inline ::pb::TInviteAchvItem* add_invitenumachvarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >&
      invitenumachvarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >*
      mutable_invitenumachvarr();

  // optional uint64 InvitedTime = 6;
  inline bool has_invitedtime() const;
  inline void clear_invitedtime();
  static const int kInvitedTimeFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TInviteGetInfoRsp</name>
  	<Function>
  		<name>invitedtime</name>
  		<replaceName>InvitedTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_invitedtime</name>
  		<replaceName>InvitedTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_invitedtime</name>
  		<replaceName>InvitedTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 invitedtime() const;
  inline void set_invitedtime(::google::protobuf::uint64 value);

  // optional uint64 CanGetInvitePoint = 7;
  inline bool has_cangetinvitepoint() const;
  inline void clear_cangetinvitepoint();
  static const int kCanGetInvitePointFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TInviteGetInfoRsp</name>
  	<Function>
  		<name>cangetinvitepoint</name>
  		<replaceName>CanGetInvitePoint</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_cangetinvitepoint</name>
  		<replaceName>CanGetInvitePoint</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_cangetinvitepoint</name>
  		<replaceName>CanGetInvitePoint</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 cangetinvitepoint() const;
  inline void set_cangetinvitepoint(::google::protobuf::uint64 value);

  // optional uint64 HistoryInvitePoint = 8;
  inline bool has_historyinvitepoint() const;
  inline void clear_historyinvitepoint();
  static const int kHistoryInvitePointFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TInviteGetInfoRsp</name>
  	<Function>
  		<name>historyinvitepoint</name>
  		<replaceName>HistoryInvitePoint</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_historyinvitepoint</name>
  		<replaceName>HistoryInvitePoint</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_historyinvitepoint</name>
  		<replaceName>HistoryInvitePoint</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 historyinvitepoint() const;
  inline void set_historyinvitepoint(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TInviteGetInfoRsp)
 private:
  inline void set_has_invitecode();
  inline void clear_has_invitecode();
  inline void set_has_invitenum();
  inline void clear_has_invitenum();
  inline void set_has_invitedtime();
  inline void clear_has_invitedtime();
  inline void set_has_cangetinvitepoint();
  inline void clear_has_cangetinvitepoint();
  inline void set_has_historyinvitepoint();
  inline void clear_has_historyinvitepoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* invitecode_;
  ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem > powerachvarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem > vipachvarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem > invitenumachvarr_;
  ::google::protobuf::uint64 invitedtime_;
  ::google::protobuf::uint64 cangetinvitepoint_;
  ::google::protobuf::uint64 historyinvitepoint_;
  ::google::protobuf::uint32 invitenum_;
  friend void  protobuf_AddDesc_net_2fInvite_2eproto();
  friend void protobuf_AssignDesc_net_2fInvite_2eproto();
  friend void protobuf_ShutdownFile_net_2fInvite_2eproto();

  void InitAsDefaultInstance();
  static TInviteGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInviteAchvItem</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Invite.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInviteAchvItem : public ::google::protobuf::Message {
 public:
  TInviteAchvItem();
  virtual ~TInviteAchvItem();

  TInviteAchvItem(const TInviteAchvItem& from);

  inline TInviteAchvItem& operator=(const TInviteAchvItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInviteAchvItem& default_instance();

  void Swap(TInviteAchvItem* other);

  // implements Message ----------------------------------------------

  TInviteAchvItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInviteAchvItem& from);
  void MergeFrom(const TInviteAchvItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 InviteAchvId = 1;
  inline bool has_inviteachvid() const;
  inline void clear_inviteachvid();
  static const int kInviteAchvIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInviteAchvItem</name>
  	<Function>
  		<name>inviteachvid</name>
  		<replaceName>InviteAchvId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_inviteachvid</name>
  		<replaceName>InviteAchvId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_inviteachvid</name>
  		<replaceName>InviteAchvId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 inviteachvid() const;
  inline void set_inviteachvid(::google::protobuf::uint32 value);

  // optional uint32 GetNum = 2;
  inline bool has_getnum() const;
  inline void clear_getnum();
  static const int kGetNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInviteAchvItem</name>
  	<Function>
  		<name>getnum</name>
  		<replaceName>GetNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_getnum</name>
  		<replaceName>GetNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_getnum</name>
  		<replaceName>GetNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 getnum() const;
  inline void set_getnum(::google::protobuf::uint32 value);

  // optional uint32 CanGetTimes = 3;
  inline bool has_cangettimes() const;
  inline void clear_cangettimes();
  static const int kCanGetTimesFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInviteAchvItem</name>
  	<Function>
  		<name>cangettimes</name>
  		<replaceName>CanGetTimes</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_cangettimes</name>
  		<replaceName>CanGetTimes</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_cangettimes</name>
  		<replaceName>CanGetTimes</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 cangettimes() const;
  inline void set_cangettimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TInviteAchvItem)
 private:
  inline void set_has_inviteachvid();
  inline void clear_has_inviteachvid();
  inline void set_has_getnum();
  inline void clear_has_getnum();
  inline void set_has_cangettimes();
  inline void clear_has_cangettimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 inviteachvid_;
  ::google::protobuf::uint32 getnum_;
  ::google::protobuf::uint32 cangettimes_;
  friend void  protobuf_AddDesc_net_2fInvite_2eproto();
  friend void protobuf_AssignDesc_net_2fInvite_2eproto();
  friend void protobuf_ShutdownFile_net_2fInvite_2eproto();

  void InitAsDefaultInstance();
  static TInviteAchvItem* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInviteGetInviteAchvReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Invite.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInviteGetInviteAchvReq : public ::google::protobuf::Message {
 public:
  TInviteGetInviteAchvReq();
  virtual ~TInviteGetInviteAchvReq();

  TInviteGetInviteAchvReq(const TInviteGetInviteAchvReq& from);

  inline TInviteGetInviteAchvReq& operator=(const TInviteGetInviteAchvReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInviteGetInviteAchvReq& default_instance();

  void Swap(TInviteGetInviteAchvReq* other);

  // implements Message ----------------------------------------------

  TInviteGetInviteAchvReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInviteGetInviteAchvReq& from);
  void MergeFrom(const TInviteGetInviteAchvReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 InviteAchvId = 1;
  inline bool has_inviteachvid() const;
  inline void clear_inviteachvid();
  static const int kInviteAchvIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInviteGetInviteAchvReq</name>
  	<Function>
  		<name>inviteachvid</name>
  		<replaceName>InviteAchvId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_inviteachvid</name>
  		<replaceName>InviteAchvId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_inviteachvid</name>
  		<replaceName>InviteAchvId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 inviteachvid() const;
  inline void set_inviteachvid(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInviteGetInviteAchvReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TInviteGetInviteAchvReq)
 private:
  inline void set_has_inviteachvid();
  inline void clear_has_inviteachvid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 inviteachvid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fInvite_2eproto();
  friend void protobuf_AssignDesc_net_2fInvite_2eproto();
  friend void protobuf_ShutdownFile_net_2fInvite_2eproto();

  void InitAsDefaultInstance();
  static TInviteGetInviteAchvReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInviteGetShopPageGetInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Invite.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInviteGetShopPageGetInfoReq : public ::google::protobuf::Message {
 public:
  TInviteGetShopPageGetInfoReq();
  virtual ~TInviteGetShopPageGetInfoReq();

  TInviteGetShopPageGetInfoReq(const TInviteGetShopPageGetInfoReq& from);

  inline TInviteGetShopPageGetInfoReq& operator=(const TInviteGetShopPageGetInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInviteGetShopPageGetInfoReq& default_instance();

  void Swap(TInviteGetShopPageGetInfoReq* other);

  // implements Message ----------------------------------------------

  TInviteGetShopPageGetInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInviteGetShopPageGetInfoReq& from);
  void MergeFrom(const TInviteGetShopPageGetInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ShopId = 1;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInviteGetShopPageGetInfoReq</name>
  	<Function>
  		<name>shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_shopid</name>
  		<replaceName>ShopId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 shopid() const;
  inline void set_shopid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TInviteGetShopPageGetInfoReq)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 shopid_;
  friend void  protobuf_AddDesc_net_2fInvite_2eproto();
  friend void protobuf_AssignDesc_net_2fInvite_2eproto();
  friend void protobuf_ShutdownFile_net_2fInvite_2eproto();

  void InitAsDefaultInstance();
  static TInviteGetShopPageGetInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInviteGetShopPageGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Invite.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInviteGetShopPageGetInfoRsp : public ::google::protobuf::Message {
 public:
  TInviteGetShopPageGetInfoRsp();
  virtual ~TInviteGetShopPageGetInfoRsp();

  TInviteGetShopPageGetInfoRsp(const TInviteGetShopPageGetInfoRsp& from);

  inline TInviteGetShopPageGetInfoRsp& operator=(const TInviteGetShopPageGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInviteGetShopPageGetInfoRsp& default_instance();

  void Swap(TInviteGetShopPageGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TInviteGetShopPageGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInviteGetShopPageGetInfoRsp& from);
  void MergeFrom(const TInviteGetShopPageGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RefreshTime = 1;
  inline bool has_refreshtime() const;
  inline void clear_refreshtime();
  static const int kRefreshTimeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInviteGetShopPageGetInfoRsp</name>
  	<Function>
  		<name>refreshtime</name>
  		<replaceName>RefreshTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_refreshtime</name>
  		<replaceName>RefreshTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_refreshtime</name>
  		<replaceName>RefreshTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 refreshtime() const;
  inline void set_refreshtime(::google::protobuf::uint64 value);

  // repeated .pb.TInviteShopItem ShopItemInfoArr = 2;
  inline int shopiteminfoarr_size() const;
  inline void clear_shopiteminfoarr();
  static const int kShopItemInfoArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInviteGetShopPageGetInfoRsp</name>
  	<Function>
  		<name>shopiteminfoarr</name>
  		<replaceName>ShopItemInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_shopiteminfoarr</name>
  		<replaceName>ShopItemInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_shopiteminfoarr</name>
  		<replaceName>ShopItemInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_shopiteminfoarr</name>
  		<replaceName>ShopItemInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>shopiteminfoarr_size</name>
  		<replaceName>ShopItemInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInviteShopItem& shopiteminfoarr(int index) const;
  inline ::pb::TInviteShopItem* mutable_shopiteminfoarr(int index);
  inline ::pb::TInviteShopItem* add_shopiteminfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteShopItem >&
      shopiteminfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteShopItem >*
      mutable_shopiteminfoarr();

  // @@protoc_insertion_point(class_scope:pb.TInviteGetShopPageGetInfoRsp)
 private:
  inline void set_has_refreshtime();
  inline void clear_has_refreshtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 refreshtime_;
  ::google::protobuf::RepeatedPtrField< ::pb::TInviteShopItem > shopiteminfoarr_;
  friend void  protobuf_AddDesc_net_2fInvite_2eproto();
  friend void protobuf_AssignDesc_net_2fInvite_2eproto();
  friend void protobuf_ShutdownFile_net_2fInvite_2eproto();

  void InitAsDefaultInstance();
  static TInviteGetShopPageGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInviteShopItem</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Invite.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInviteShopItem : public ::google::protobuf::Message {
 public:
  TInviteShopItem();
  virtual ~TInviteShopItem();

  TInviteShopItem(const TInviteShopItem& from);

  inline TInviteShopItem& operator=(const TInviteShopItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInviteShopItem& default_instance();

  void Swap(TInviteShopItem* other);

  // implements Message ----------------------------------------------

  TInviteShopItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInviteShopItem& from);
  void MergeFrom(const TInviteShopItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ShopItemId = 1;
  inline bool has_shopitemid() const;
  inline void clear_shopitemid();
  static const int kShopItemIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInviteShopItem</name>
  	<Function>
  		<name>shopitemid</name>
  		<replaceName>ShopItemId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_shopitemid</name>
  		<replaceName>ShopItemId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_shopitemid</name>
  		<replaceName>ShopItemId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 shopitemid() const;
  inline void set_shopitemid(::google::protobuf::uint32 value);

  // optional uint32 BuyTimes = 2;
  inline bool has_buytimes() const;
  inline void clear_buytimes();
  static const int kBuyTimesFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInviteShopItem</name>
  	<Function>
  		<name>buytimes</name>
  		<replaceName>BuyTimes</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buytimes</name>
  		<replaceName>BuyTimes</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buytimes</name>
  		<replaceName>BuyTimes</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buytimes() const;
  inline void set_buytimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TInviteShopItem)
 private:
  inline void set_has_shopitemid();
  inline void clear_has_shopitemid();
  inline void set_has_buytimes();
  inline void clear_has_buytimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 shopitemid_;
  ::google::protobuf::uint32 buytimes_;
  friend void  protobuf_AddDesc_net_2fInvite_2eproto();
  friend void protobuf_AssignDesc_net_2fInvite_2eproto();
  friend void protobuf_ShutdownFile_net_2fInvite_2eproto();

  void InitAsDefaultInstance();
  static TInviteShopItem* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInviteBuyItemReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Invite.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInviteBuyItemReq : public ::google::protobuf::Message {
 public:
  TInviteBuyItemReq();
  virtual ~TInviteBuyItemReq();

  TInviteBuyItemReq(const TInviteBuyItemReq& from);

  inline TInviteBuyItemReq& operator=(const TInviteBuyItemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInviteBuyItemReq& default_instance();

  void Swap(TInviteBuyItemReq* other);

  // implements Message ----------------------------------------------

  TInviteBuyItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInviteBuyItemReq& from);
  void MergeFrom(const TInviteBuyItemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TInviteShopItem ShopItemInfo = 1;
  inline bool has_shopiteminfo() const;
  inline void clear_shopiteminfo();
  static const int kShopItemInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInviteBuyItemReq</name>
  	<Function>
  		<name>shopiteminfo</name>
  		<replaceName>ShopItemInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_shopiteminfo</name>
  		<replaceName>ShopItemInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_shopiteminfo</name>
  		<replaceName>ShopItemInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_shopiteminfo</name>
  		<replaceName>ShopItemInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInviteShopItem& shopiteminfo() const;
  inline ::pb::TInviteShopItem* mutable_shopiteminfo();
  inline ::pb::TInviteShopItem* release_shopiteminfo();
  inline void set_allocated_shopiteminfo(::pb::TInviteShopItem* shopiteminfo);

  // @@protoc_insertion_point(class_scope:pb.TInviteBuyItemReq)
 private:
  inline void set_has_shopiteminfo();
  inline void clear_has_shopiteminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TInviteShopItem* shopiteminfo_;
  friend void  protobuf_AddDesc_net_2fInvite_2eproto();
  friend void protobuf_AssignDesc_net_2fInvite_2eproto();
  friend void protobuf_ShutdownFile_net_2fInvite_2eproto();

  void InitAsDefaultInstance();
  static TInviteBuyItemReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInviteBuyItemRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Invite.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInviteBuyItemRsp : public ::google::protobuf::Message {
 public:
  TInviteBuyItemRsp();
  virtual ~TInviteBuyItemRsp();

  TInviteBuyItemRsp(const TInviteBuyItemRsp& from);

  inline TInviteBuyItemRsp& operator=(const TInviteBuyItemRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInviteBuyItemRsp& default_instance();

  void Swap(TInviteBuyItemRsp* other);

  // implements Message ----------------------------------------------

  TInviteBuyItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInviteBuyItemRsp& from);
  void MergeFrom(const TInviteBuyItemRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ShopItemArr = 1;
  inline int shopitemarr_size() const;
  inline void clear_shopitemarr();
  static const int kShopItemArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInviteBuyItemRsp</name>
  	<Function>
  		<name>shopitemarr</name>
  		<replaceName>ShopItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_shopitemarr</name>
  		<replaceName>ShopItemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_shopitemarr</name>
  		<replaceName>ShopItemArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_shopitemarr</name>
  		<replaceName>ShopItemArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>shopitemarr_size</name>
  		<replaceName>ShopItemArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& shopitemarr(int index) const;
  inline ::pb::TCommonReward* mutable_shopitemarr(int index);
  inline ::pb::TCommonReward* add_shopitemarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      shopitemarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_shopitemarr();

  // @@protoc_insertion_point(class_scope:pb.TInviteBuyItemRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > shopitemarr_;
  friend void  protobuf_AddDesc_net_2fInvite_2eproto();
  friend void protobuf_AssignDesc_net_2fInvite_2eproto();
  friend void protobuf_ShutdownFile_net_2fInvite_2eproto();

  void InitAsDefaultInstance();
  static TInviteBuyItemRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInviteInviteByOtherReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Invite.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInviteInviteByOtherReq : public ::google::protobuf::Message {
 public:
  TInviteInviteByOtherReq();
  virtual ~TInviteInviteByOtherReq();

  TInviteInviteByOtherReq(const TInviteInviteByOtherReq& from);

  inline TInviteInviteByOtherReq& operator=(const TInviteInviteByOtherReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInviteInviteByOtherReq& default_instance();

  void Swap(TInviteInviteByOtherReq* other);

  // implements Message ----------------------------------------------

  TInviteInviteByOtherReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInviteInviteByOtherReq& from);
  void MergeFrom(const TInviteInviteByOtherReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string InviteCode = 1;
  inline bool has_invitecode() const;
  inline void clear_invitecode();
  static const int kInviteCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInviteInviteByOtherReq</name>
  	<Function>
  		<name>invitecode</name>
  		<replaceName>InviteCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_invitecode</name>
  		<replaceName>InviteCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_invitecode</name>
  		<replaceName>InviteCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& invitecode() const;
  inline void set_invitecode(const ::std::string& value);
  inline void set_invitecode(const char* value);
  inline void set_invitecode(const char* value, size_t size);
  inline ::std::string* mutable_invitecode();
  inline ::std::string* release_invitecode();
  inline void set_allocated_invitecode(::std::string* invitecode);

  // optional uint64 InviteeUid = 2;
  inline bool has_inviteeuid() const;
  inline void clear_inviteeuid();
  static const int kInviteeUidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInviteInviteByOtherReq</name>
  	<Function>
  		<name>inviteeuid</name>
  		<replaceName>InviteeUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_inviteeuid</name>
  		<replaceName>InviteeUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_inviteeuid</name>
  		<replaceName>InviteeUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 inviteeuid() const;
  inline void set_inviteeuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TInviteInviteByOtherReq)
 private:
  inline void set_has_invitecode();
  inline void clear_has_invitecode();
  inline void set_has_inviteeuid();
  inline void clear_has_inviteeuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* invitecode_;
  ::google::protobuf::uint64 inviteeuid_;
  friend void  protobuf_AddDesc_net_2fInvite_2eproto();
  friend void protobuf_AssignDesc_net_2fInvite_2eproto();
  friend void protobuf_ShutdownFile_net_2fInvite_2eproto();

  void InitAsDefaultInstance();
  static TInviteInviteByOtherReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInviteNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Invite.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInviteNotify : public ::google::protobuf::Message {
 public:
  TInviteNotify();
  virtual ~TInviteNotify();

  TInviteNotify(const TInviteNotify& from);

  inline TInviteNotify& operator=(const TInviteNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInviteNotify& default_instance();

  void Swap(TInviteNotify* other);

  // implements Message ----------------------------------------------

  TInviteNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInviteNotify& from);
  void MergeFrom(const TInviteNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 InviteNum = 1;
  inline bool has_invitenum() const;
  inline void clear_invitenum();
  static const int kInviteNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInviteNotify</name>
  	<Function>
  		<name>invitenum</name>
  		<replaceName>InviteNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_invitenum</name>
  		<replaceName>InviteNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_invitenum</name>
  		<replaceName>InviteNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 invitenum() const;
  inline void set_invitenum(::google::protobuf::uint32 value);

  // repeated .pb.TInviteAchvItem PowerAchvArr = 2;
  inline int powerachvarr_size() const;
  inline void clear_powerachvarr();
  static const int kPowerAchvArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInviteNotify</name>
  	<Function>
  		<name>powerachvarr</name>
  		<replaceName>PowerAchvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_powerachvarr</name>
  		<replaceName>PowerAchvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_powerachvarr</name>
  		<replaceName>PowerAchvArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_powerachvarr</name>
  		<replaceName>PowerAchvArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>powerachvarr_size</name>
  		<replaceName>PowerAchvArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInviteAchvItem& powerachvarr(int index) const;
  inline ::pb::TInviteAchvItem* mutable_powerachvarr(int index);
  inline ::pb::TInviteAchvItem* add_powerachvarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >&
      powerachvarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >*
      mutable_powerachvarr();

  // repeated .pb.TInviteAchvItem VIPAchvArr = 3;
  inline int vipachvarr_size() const;
  inline void clear_vipachvarr();
  static const int kVIPAchvArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInviteNotify</name>
  	<Function>
  		<name>vipachvarr</name>
  		<replaceName>VIPAchvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_vipachvarr</name>
  		<replaceName>VIPAchvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_vipachvarr</name>
  		<replaceName>VIPAchvArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_vipachvarr</name>
  		<replaceName>VIPAchvArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>vipachvarr_size</name>
  		<replaceName>VIPAchvArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInviteAchvItem& vipachvarr(int index) const;
  inline ::pb::TInviteAchvItem* mutable_vipachvarr(int index);
  inline ::pb::TInviteAchvItem* add_vipachvarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >&
      vipachvarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >*
      mutable_vipachvarr();

  // repeated .pb.TInviteAchvItem InviteNumAchvArr = 4;
  inline int invitenumachvarr_size() const;
  inline void clear_invitenumachvarr();
  static const int kInviteNumAchvArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TInviteNotify</name>
  	<Function>
  		<name>invitenumachvarr</name>
  		<replaceName>InviteNumAchvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_invitenumachvarr</name>
  		<replaceName>InviteNumAchvArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_invitenumachvarr</name>
  		<replaceName>InviteNumAchvArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_invitenumachvarr</name>
  		<replaceName>InviteNumAchvArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>invitenumachvarr_size</name>
  		<replaceName>InviteNumAchvArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInviteAchvItem& invitenumachvarr(int index) const;
  inline ::pb::TInviteAchvItem* mutable_invitenumachvarr(int index);
  inline ::pb::TInviteAchvItem* add_invitenumachvarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >&
      invitenumachvarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >*
      mutable_invitenumachvarr();

  // optional uint64 CanGetInvitePoint = 5;
  inline bool has_cangetinvitepoint() const;
  inline void clear_cangetinvitepoint();
  static const int kCanGetInvitePointFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TInviteNotify</name>
  	<Function>
  		<name>cangetinvitepoint</name>
  		<replaceName>CanGetInvitePoint</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_cangetinvitepoint</name>
  		<replaceName>CanGetInvitePoint</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_cangetinvitepoint</name>
  		<replaceName>CanGetInvitePoint</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 cangetinvitepoint() const;
  inline void set_cangetinvitepoint(::google::protobuf::uint64 value);

  // optional uint64 HistoryInvitePoint = 6;
  inline bool has_historyinvitepoint() const;
  inline void clear_historyinvitepoint();
  static const int kHistoryInvitePointFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TInviteNotify</name>
  	<Function>
  		<name>historyinvitepoint</name>
  		<replaceName>HistoryInvitePoint</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_historyinvitepoint</name>
  		<replaceName>HistoryInvitePoint</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_historyinvitepoint</name>
  		<replaceName>HistoryInvitePoint</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 historyinvitepoint() const;
  inline void set_historyinvitepoint(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TInviteNotify)
 private:
  inline void set_has_invitenum();
  inline void clear_has_invitenum();
  inline void set_has_cangetinvitepoint();
  inline void clear_has_cangetinvitepoint();
  inline void set_has_historyinvitepoint();
  inline void clear_has_historyinvitepoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem > powerachvarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem > vipachvarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem > invitenumachvarr_;
  ::google::protobuf::uint64 cangetinvitepoint_;
  ::google::protobuf::uint64 historyinvitepoint_;
  ::google::protobuf::uint32 invitenum_;
  friend void  protobuf_AddDesc_net_2fInvite_2eproto();
  friend void protobuf_AssignDesc_net_2fInvite_2eproto();
  friend void protobuf_ShutdownFile_net_2fInvite_2eproto();

  void InitAsDefaultInstance();
  static TInviteNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInviteSendInfoToInviterReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Invite.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInviteSendInfoToInviterReq : public ::google::protobuf::Message {
 public:
  TInviteSendInfoToInviterReq();
  virtual ~TInviteSendInfoToInviterReq();

  TInviteSendInfoToInviterReq(const TInviteSendInfoToInviterReq& from);

  inline TInviteSendInfoToInviterReq& operator=(const TInviteSendInfoToInviterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInviteSendInfoToInviterReq& default_instance();

  void Swap(TInviteSendInfoToInviterReq* other);

  // implements Message ----------------------------------------------

  TInviteSendInfoToInviterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInviteSendInfoToInviterReq& from);
  void MergeFrom(const TInviteSendInfoToInviterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 InviterUid = 1;
  inline bool has_inviteruid() const;
  inline void clear_inviteruid();
  static const int kInviterUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInviteSendInfoToInviterReq</name>
  	<Function>
  		<name>inviteruid</name>
  		<replaceName>InviterUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_inviteruid</name>
  		<replaceName>InviterUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_inviteruid</name>
  		<replaceName>InviterUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 inviteruid() const;
  inline void set_inviteruid(::google::protobuf::uint64 value);

  // optional uint64 InviteeUid = 2;
  inline bool has_inviteeuid() const;
  inline void clear_inviteeuid();
  static const int kInviteeUidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInviteSendInfoToInviterReq</name>
  	<Function>
  		<name>inviteeuid</name>
  		<replaceName>InviteeUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_inviteeuid</name>
  		<replaceName>InviteeUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_inviteeuid</name>
  		<replaceName>InviteeUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 inviteeuid() const;
  inline void set_inviteeuid(::google::protobuf::uint64 value);

  // optional uint64 Power = 3;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInviteSendInfoToInviterReq</name>
  	<Function>
  		<name>power</name>
  		<replaceName>Power</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_power</name>
  		<replaceName>Power</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_power</name>
  		<replaceName>Power</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 power() const;
  inline void set_power(::google::protobuf::uint64 value);

  // optional uint32 VIP = 4;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVIPFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TInviteSendInfoToInviterReq</name>
  	<Function>
  		<name>vip</name>
  		<replaceName>VIP</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_vip</name>
  		<replaceName>VIP</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_vip</name>
  		<replaceName>VIP</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 vip() const;
  inline void set_vip(::google::protobuf::uint32 value);

  // optional uint64 Pay = 5;
  inline bool has_pay() const;
  inline void clear_pay();
  static const int kPayFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TInviteSendInfoToInviterReq</name>
  	<Function>
  		<name>pay</name>
  		<replaceName>Pay</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pay</name>
  		<replaceName>Pay</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pay</name>
  		<replaceName>Pay</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 pay() const;
  inline void set_pay(::google::protobuf::uint64 value);

  // optional uint32 CurrLevel = 6;
  inline bool has_currlevel() const;
  inline void clear_currlevel();
  static const int kCurrLevelFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TInviteSendInfoToInviterReq</name>
  	<Function>
  		<name>currlevel</name>
  		<replaceName>CurrLevel</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_currlevel</name>
  		<replaceName>CurrLevel</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_currlevel</name>
  		<replaceName>CurrLevel</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 currlevel() const;
  inline void set_currlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TInviteSendInfoToInviterReq)
 private:
  inline void set_has_inviteruid();
  inline void clear_has_inviteruid();
  inline void set_has_inviteeuid();
  inline void clear_has_inviteeuid();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_pay();
  inline void clear_has_pay();
  inline void set_has_currlevel();
  inline void clear_has_currlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 inviteruid_;
  ::google::protobuf::uint64 inviteeuid_;
  ::google::protobuf::uint64 power_;
  ::google::protobuf::uint64 pay_;
  ::google::protobuf::uint32 vip_;
  ::google::protobuf::uint32 currlevel_;
  friend void  protobuf_AddDesc_net_2fInvite_2eproto();
  friend void protobuf_AssignDesc_net_2fInvite_2eproto();
  friend void protobuf_ShutdownFile_net_2fInvite_2eproto();

  void InitAsDefaultInstance();
  static TInviteSendInfoToInviterReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInviteSendInfoToInviterRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Invite.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInviteSendInfoToInviterRsp : public ::google::protobuf::Message {
 public:
  TInviteSendInfoToInviterRsp();
  virtual ~TInviteSendInfoToInviterRsp();

  TInviteSendInfoToInviterRsp(const TInviteSendInfoToInviterRsp& from);

  inline TInviteSendInfoToInviterRsp& operator=(const TInviteSendInfoToInviterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInviteSendInfoToInviterRsp& default_instance();

  void Swap(TInviteSendInfoToInviterRsp* other);

  // implements Message ----------------------------------------------

  TInviteSendInfoToInviterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInviteSendInfoToInviterRsp& from);
  void MergeFrom(const TInviteSendInfoToInviterRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.EInviteErrCode ErrCode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInviteSendInfoToInviterRsp</name>
  	<Function>
  		<name>errcode</name>
  		<replaceName>ErrCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_errcode</name>
  		<replaceName>ErrCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_errcode</name>
  		<replaceName>ErrCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EInviteErrCode errcode() const;
  inline void set_errcode(::pb::EInviteErrCode value);

  // @@protoc_insertion_point(class_scope:pb.TInviteSendInfoToInviterRsp)
 private:
  inline void set_has_errcode();
  inline void clear_has_errcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int errcode_;
  friend void  protobuf_AddDesc_net_2fInvite_2eproto();
  friend void protobuf_AssignDesc_net_2fInvite_2eproto();
  friend void protobuf_ShutdownFile_net_2fInvite_2eproto();

  void InitAsDefaultInstance();
  static TInviteSendInfoToInviterRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TInviteGetInfoRsp

// optional string InviteCode = 1;
inline bool TInviteGetInfoRsp::has_invitecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInviteGetInfoRsp::set_has_invitecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInviteGetInfoRsp::clear_has_invitecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInviteGetInfoRsp::clear_invitecode() {
  if (invitecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_->clear();
  }
  clear_has_invitecode();
}
inline const ::std::string& TInviteGetInfoRsp::invitecode() const {
  // @@protoc_insertion_point(field_get:pb.TInviteGetInfoRsp.InviteCode)
  return *invitecode_;
}
inline void TInviteGetInfoRsp::set_invitecode(const ::std::string& value) {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  invitecode_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TInviteGetInfoRsp.InviteCode)
}
inline void TInviteGetInfoRsp::set_invitecode(const char* value) {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  invitecode_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TInviteGetInfoRsp.InviteCode)
}
inline void TInviteGetInfoRsp::set_invitecode(const char* value, size_t size) {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  invitecode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TInviteGetInfoRsp.InviteCode)
}
inline ::std::string* TInviteGetInfoRsp::mutable_invitecode() {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TInviteGetInfoRsp.InviteCode)
  return invitecode_;
}
inline ::std::string* TInviteGetInfoRsp::release_invitecode() {
  clear_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = invitecode_;
    invitecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TInviteGetInfoRsp::set_allocated_invitecode(::std::string* invitecode) {
  if (invitecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitecode_;
  }
  if (invitecode) {
    set_has_invitecode();
    invitecode_ = invitecode;
  } else {
    clear_has_invitecode();
    invitecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInviteGetInfoRsp.InviteCode)
}

// optional uint32 InviteNum = 2;
inline bool TInviteGetInfoRsp::has_invitenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInviteGetInfoRsp::set_has_invitenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInviteGetInfoRsp::clear_has_invitenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInviteGetInfoRsp::clear_invitenum() {
  invitenum_ = 0u;
  clear_has_invitenum();
}
inline ::google::protobuf::uint32 TInviteGetInfoRsp::invitenum() const {
  // @@protoc_insertion_point(field_get:pb.TInviteGetInfoRsp.InviteNum)
  return invitenum_;
}
inline void TInviteGetInfoRsp::set_invitenum(::google::protobuf::uint32 value) {
  set_has_invitenum();
  invitenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteGetInfoRsp.InviteNum)
}

// repeated .pb.TInviteAchvItem PowerAchvArr = 3;
inline int TInviteGetInfoRsp::powerachvarr_size() const {
  return powerachvarr_.size();
}
inline void TInviteGetInfoRsp::clear_powerachvarr() {
  powerachvarr_.Clear();
}
inline const ::pb::TInviteAchvItem& TInviteGetInfoRsp::powerachvarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInviteGetInfoRsp.PowerAchvArr)
  return powerachvarr_.Get(index);
}
inline ::pb::TInviteAchvItem* TInviteGetInfoRsp::mutable_powerachvarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInviteGetInfoRsp.PowerAchvArr)
  return powerachvarr_.Mutable(index);
}
inline ::pb::TInviteAchvItem* TInviteGetInfoRsp::add_powerachvarr() {
  // @@protoc_insertion_point(field_add:pb.TInviteGetInfoRsp.PowerAchvArr)
  return powerachvarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >&
TInviteGetInfoRsp::powerachvarr() const {
  // @@protoc_insertion_point(field_list:pb.TInviteGetInfoRsp.PowerAchvArr)
  return powerachvarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >*
TInviteGetInfoRsp::mutable_powerachvarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInviteGetInfoRsp.PowerAchvArr)
  return &powerachvarr_;
}

// repeated .pb.TInviteAchvItem VIPAchvArr = 4;
inline int TInviteGetInfoRsp::vipachvarr_size() const {
  return vipachvarr_.size();
}
inline void TInviteGetInfoRsp::clear_vipachvarr() {
  vipachvarr_.Clear();
}
inline const ::pb::TInviteAchvItem& TInviteGetInfoRsp::vipachvarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInviteGetInfoRsp.VIPAchvArr)
  return vipachvarr_.Get(index);
}
inline ::pb::TInviteAchvItem* TInviteGetInfoRsp::mutable_vipachvarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInviteGetInfoRsp.VIPAchvArr)
  return vipachvarr_.Mutable(index);
}
inline ::pb::TInviteAchvItem* TInviteGetInfoRsp::add_vipachvarr() {
  // @@protoc_insertion_point(field_add:pb.TInviteGetInfoRsp.VIPAchvArr)
  return vipachvarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >&
TInviteGetInfoRsp::vipachvarr() const {
  // @@protoc_insertion_point(field_list:pb.TInviteGetInfoRsp.VIPAchvArr)
  return vipachvarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >*
TInviteGetInfoRsp::mutable_vipachvarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInviteGetInfoRsp.VIPAchvArr)
  return &vipachvarr_;
}

// repeated .pb.TInviteAchvItem InviteNumAchvArr = 5;
inline int TInviteGetInfoRsp::invitenumachvarr_size() const {
  return invitenumachvarr_.size();
}
inline void TInviteGetInfoRsp::clear_invitenumachvarr() {
  invitenumachvarr_.Clear();
}
inline const ::pb::TInviteAchvItem& TInviteGetInfoRsp::invitenumachvarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInviteGetInfoRsp.InviteNumAchvArr)
  return invitenumachvarr_.Get(index);
}
inline ::pb::TInviteAchvItem* TInviteGetInfoRsp::mutable_invitenumachvarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInviteGetInfoRsp.InviteNumAchvArr)
  return invitenumachvarr_.Mutable(index);
}
inline ::pb::TInviteAchvItem* TInviteGetInfoRsp::add_invitenumachvarr() {
  // @@protoc_insertion_point(field_add:pb.TInviteGetInfoRsp.InviteNumAchvArr)
  return invitenumachvarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >&
TInviteGetInfoRsp::invitenumachvarr() const {
  // @@protoc_insertion_point(field_list:pb.TInviteGetInfoRsp.InviteNumAchvArr)
  return invitenumachvarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >*
TInviteGetInfoRsp::mutable_invitenumachvarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInviteGetInfoRsp.InviteNumAchvArr)
  return &invitenumachvarr_;
}

// optional uint64 InvitedTime = 6;
inline bool TInviteGetInfoRsp::has_invitedtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TInviteGetInfoRsp::set_has_invitedtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TInviteGetInfoRsp::clear_has_invitedtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TInviteGetInfoRsp::clear_invitedtime() {
  invitedtime_ = GOOGLE_ULONGLONG(0);
  clear_has_invitedtime();
}
inline ::google::protobuf::uint64 TInviteGetInfoRsp::invitedtime() const {
  // @@protoc_insertion_point(field_get:pb.TInviteGetInfoRsp.InvitedTime)
  return invitedtime_;
}
inline void TInviteGetInfoRsp::set_invitedtime(::google::protobuf::uint64 value) {
  set_has_invitedtime();
  invitedtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteGetInfoRsp.InvitedTime)
}

// optional uint64 CanGetInvitePoint = 7;
inline bool TInviteGetInfoRsp::has_cangetinvitepoint() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TInviteGetInfoRsp::set_has_cangetinvitepoint() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TInviteGetInfoRsp::clear_has_cangetinvitepoint() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TInviteGetInfoRsp::clear_cangetinvitepoint() {
  cangetinvitepoint_ = GOOGLE_ULONGLONG(0);
  clear_has_cangetinvitepoint();
}
inline ::google::protobuf::uint64 TInviteGetInfoRsp::cangetinvitepoint() const {
  // @@protoc_insertion_point(field_get:pb.TInviteGetInfoRsp.CanGetInvitePoint)
  return cangetinvitepoint_;
}
inline void TInviteGetInfoRsp::set_cangetinvitepoint(::google::protobuf::uint64 value) {
  set_has_cangetinvitepoint();
  cangetinvitepoint_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteGetInfoRsp.CanGetInvitePoint)
}

// optional uint64 HistoryInvitePoint = 8;
inline bool TInviteGetInfoRsp::has_historyinvitepoint() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TInviteGetInfoRsp::set_has_historyinvitepoint() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TInviteGetInfoRsp::clear_has_historyinvitepoint() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TInviteGetInfoRsp::clear_historyinvitepoint() {
  historyinvitepoint_ = GOOGLE_ULONGLONG(0);
  clear_has_historyinvitepoint();
}
inline ::google::protobuf::uint64 TInviteGetInfoRsp::historyinvitepoint() const {
  // @@protoc_insertion_point(field_get:pb.TInviteGetInfoRsp.HistoryInvitePoint)
  return historyinvitepoint_;
}
inline void TInviteGetInfoRsp::set_historyinvitepoint(::google::protobuf::uint64 value) {
  set_has_historyinvitepoint();
  historyinvitepoint_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteGetInfoRsp.HistoryInvitePoint)
}

// -------------------------------------------------------------------

// TInviteAchvItem

// optional uint32 InviteAchvId = 1;
inline bool TInviteAchvItem::has_inviteachvid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInviteAchvItem::set_has_inviteachvid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInviteAchvItem::clear_has_inviteachvid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInviteAchvItem::clear_inviteachvid() {
  inviteachvid_ = 0u;
  clear_has_inviteachvid();
}
inline ::google::protobuf::uint32 TInviteAchvItem::inviteachvid() const {
  // @@protoc_insertion_point(field_get:pb.TInviteAchvItem.InviteAchvId)
  return inviteachvid_;
}
inline void TInviteAchvItem::set_inviteachvid(::google::protobuf::uint32 value) {
  set_has_inviteachvid();
  inviteachvid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteAchvItem.InviteAchvId)
}

// optional uint32 GetNum = 2;
inline bool TInviteAchvItem::has_getnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInviteAchvItem::set_has_getnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInviteAchvItem::clear_has_getnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInviteAchvItem::clear_getnum() {
  getnum_ = 0u;
  clear_has_getnum();
}
inline ::google::protobuf::uint32 TInviteAchvItem::getnum() const {
  // @@protoc_insertion_point(field_get:pb.TInviteAchvItem.GetNum)
  return getnum_;
}
inline void TInviteAchvItem::set_getnum(::google::protobuf::uint32 value) {
  set_has_getnum();
  getnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteAchvItem.GetNum)
}

// optional uint32 CanGetTimes = 3;
inline bool TInviteAchvItem::has_cangettimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TInviteAchvItem::set_has_cangettimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TInviteAchvItem::clear_has_cangettimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TInviteAchvItem::clear_cangettimes() {
  cangettimes_ = 0u;
  clear_has_cangettimes();
}
inline ::google::protobuf::uint32 TInviteAchvItem::cangettimes() const {
  // @@protoc_insertion_point(field_get:pb.TInviteAchvItem.CanGetTimes)
  return cangettimes_;
}
inline void TInviteAchvItem::set_cangettimes(::google::protobuf::uint32 value) {
  set_has_cangettimes();
  cangettimes_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteAchvItem.CanGetTimes)
}

// -------------------------------------------------------------------

// TInviteGetInviteAchvReq

// optional uint32 InviteAchvId = 1;
inline bool TInviteGetInviteAchvReq::has_inviteachvid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInviteGetInviteAchvReq::set_has_inviteachvid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInviteGetInviteAchvReq::clear_has_inviteachvid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInviteGetInviteAchvReq::clear_inviteachvid() {
  inviteachvid_ = 0u;
  clear_has_inviteachvid();
}
inline ::google::protobuf::uint32 TInviteGetInviteAchvReq::inviteachvid() const {
  // @@protoc_insertion_point(field_get:pb.TInviteGetInviteAchvReq.InviteAchvId)
  return inviteachvid_;
}
inline void TInviteGetInviteAchvReq::set_inviteachvid(::google::protobuf::uint32 value) {
  set_has_inviteachvid();
  inviteachvid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteGetInviteAchvReq.InviteAchvId)
}

// optional uint32 Num = 2;
inline bool TInviteGetInviteAchvReq::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInviteGetInviteAchvReq::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInviteGetInviteAchvReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInviteGetInviteAchvReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TInviteGetInviteAchvReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TInviteGetInviteAchvReq.Num)
  return num_;
}
inline void TInviteGetInviteAchvReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteGetInviteAchvReq.Num)
}

// -------------------------------------------------------------------

// TInviteGetShopPageGetInfoReq

// optional uint32 ShopId = 1;
inline bool TInviteGetShopPageGetInfoReq::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInviteGetShopPageGetInfoReq::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInviteGetShopPageGetInfoReq::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInviteGetShopPageGetInfoReq::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
inline ::google::protobuf::uint32 TInviteGetShopPageGetInfoReq::shopid() const {
  // @@protoc_insertion_point(field_get:pb.TInviteGetShopPageGetInfoReq.ShopId)
  return shopid_;
}
inline void TInviteGetShopPageGetInfoReq::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteGetShopPageGetInfoReq.ShopId)
}

// -------------------------------------------------------------------

// TInviteGetShopPageGetInfoRsp

// optional uint64 RefreshTime = 1;
inline bool TInviteGetShopPageGetInfoRsp::has_refreshtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInviteGetShopPageGetInfoRsp::set_has_refreshtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInviteGetShopPageGetInfoRsp::clear_has_refreshtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInviteGetShopPageGetInfoRsp::clear_refreshtime() {
  refreshtime_ = GOOGLE_ULONGLONG(0);
  clear_has_refreshtime();
}
inline ::google::protobuf::uint64 TInviteGetShopPageGetInfoRsp::refreshtime() const {
  // @@protoc_insertion_point(field_get:pb.TInviteGetShopPageGetInfoRsp.RefreshTime)
  return refreshtime_;
}
inline void TInviteGetShopPageGetInfoRsp::set_refreshtime(::google::protobuf::uint64 value) {
  set_has_refreshtime();
  refreshtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteGetShopPageGetInfoRsp.RefreshTime)
}

// repeated .pb.TInviteShopItem ShopItemInfoArr = 2;
inline int TInviteGetShopPageGetInfoRsp::shopiteminfoarr_size() const {
  return shopiteminfoarr_.size();
}
inline void TInviteGetShopPageGetInfoRsp::clear_shopiteminfoarr() {
  shopiteminfoarr_.Clear();
}
inline const ::pb::TInviteShopItem& TInviteGetShopPageGetInfoRsp::shopiteminfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInviteGetShopPageGetInfoRsp.ShopItemInfoArr)
  return shopiteminfoarr_.Get(index);
}
inline ::pb::TInviteShopItem* TInviteGetShopPageGetInfoRsp::mutable_shopiteminfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInviteGetShopPageGetInfoRsp.ShopItemInfoArr)
  return shopiteminfoarr_.Mutable(index);
}
inline ::pb::TInviteShopItem* TInviteGetShopPageGetInfoRsp::add_shopiteminfoarr() {
  // @@protoc_insertion_point(field_add:pb.TInviteGetShopPageGetInfoRsp.ShopItemInfoArr)
  return shopiteminfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteShopItem >&
TInviteGetShopPageGetInfoRsp::shopiteminfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TInviteGetShopPageGetInfoRsp.ShopItemInfoArr)
  return shopiteminfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteShopItem >*
TInviteGetShopPageGetInfoRsp::mutable_shopiteminfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInviteGetShopPageGetInfoRsp.ShopItemInfoArr)
  return &shopiteminfoarr_;
}

// -------------------------------------------------------------------

// TInviteShopItem

// optional uint32 ShopItemId = 1;
inline bool TInviteShopItem::has_shopitemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInviteShopItem::set_has_shopitemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInviteShopItem::clear_has_shopitemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInviteShopItem::clear_shopitemid() {
  shopitemid_ = 0u;
  clear_has_shopitemid();
}
inline ::google::protobuf::uint32 TInviteShopItem::shopitemid() const {
  // @@protoc_insertion_point(field_get:pb.TInviteShopItem.ShopItemId)
  return shopitemid_;
}
inline void TInviteShopItem::set_shopitemid(::google::protobuf::uint32 value) {
  set_has_shopitemid();
  shopitemid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteShopItem.ShopItemId)
}

// optional uint32 BuyTimes = 2;
inline bool TInviteShopItem::has_buytimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInviteShopItem::set_has_buytimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInviteShopItem::clear_has_buytimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInviteShopItem::clear_buytimes() {
  buytimes_ = 0u;
  clear_has_buytimes();
}
inline ::google::protobuf::uint32 TInviteShopItem::buytimes() const {
  // @@protoc_insertion_point(field_get:pb.TInviteShopItem.BuyTimes)
  return buytimes_;
}
inline void TInviteShopItem::set_buytimes(::google::protobuf::uint32 value) {
  set_has_buytimes();
  buytimes_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteShopItem.BuyTimes)
}

// -------------------------------------------------------------------

// TInviteBuyItemReq

// optional .pb.TInviteShopItem ShopItemInfo = 1;
inline bool TInviteBuyItemReq::has_shopiteminfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInviteBuyItemReq::set_has_shopiteminfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInviteBuyItemReq::clear_has_shopiteminfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInviteBuyItemReq::clear_shopiteminfo() {
  if (shopiteminfo_ != NULL) shopiteminfo_->::pb::TInviteShopItem::Clear();
  clear_has_shopiteminfo();
}
inline const ::pb::TInviteShopItem& TInviteBuyItemReq::shopiteminfo() const {
  // @@protoc_insertion_point(field_get:pb.TInviteBuyItemReq.ShopItemInfo)
  return shopiteminfo_ != NULL ? *shopiteminfo_ : *default_instance_->shopiteminfo_;
}
inline ::pb::TInviteShopItem* TInviteBuyItemReq::mutable_shopiteminfo() {
  set_has_shopiteminfo();
  if (shopiteminfo_ == NULL) shopiteminfo_ = new ::pb::TInviteShopItem;
  // @@protoc_insertion_point(field_mutable:pb.TInviteBuyItemReq.ShopItemInfo)
  return shopiteminfo_;
}
inline ::pb::TInviteShopItem* TInviteBuyItemReq::release_shopiteminfo() {
  clear_has_shopiteminfo();
  ::pb::TInviteShopItem* temp = shopiteminfo_;
  shopiteminfo_ = NULL;
  return temp;
}
inline void TInviteBuyItemReq::set_allocated_shopiteminfo(::pb::TInviteShopItem* shopiteminfo) {
  delete shopiteminfo_;
  shopiteminfo_ = shopiteminfo;
  if (shopiteminfo) {
    set_has_shopiteminfo();
  } else {
    clear_has_shopiteminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInviteBuyItemReq.ShopItemInfo)
}

// -------------------------------------------------------------------

// TInviteBuyItemRsp

// repeated .pb.TCommonReward ShopItemArr = 1;
inline int TInviteBuyItemRsp::shopitemarr_size() const {
  return shopitemarr_.size();
}
inline void TInviteBuyItemRsp::clear_shopitemarr() {
  shopitemarr_.Clear();
}
inline const ::pb::TCommonReward& TInviteBuyItemRsp::shopitemarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInviteBuyItemRsp.ShopItemArr)
  return shopitemarr_.Get(index);
}
inline ::pb::TCommonReward* TInviteBuyItemRsp::mutable_shopitemarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInviteBuyItemRsp.ShopItemArr)
  return shopitemarr_.Mutable(index);
}
inline ::pb::TCommonReward* TInviteBuyItemRsp::add_shopitemarr() {
  // @@protoc_insertion_point(field_add:pb.TInviteBuyItemRsp.ShopItemArr)
  return shopitemarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TInviteBuyItemRsp::shopitemarr() const {
  // @@protoc_insertion_point(field_list:pb.TInviteBuyItemRsp.ShopItemArr)
  return shopitemarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TInviteBuyItemRsp::mutable_shopitemarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInviteBuyItemRsp.ShopItemArr)
  return &shopitemarr_;
}

// -------------------------------------------------------------------

// TInviteInviteByOtherReq

// optional string InviteCode = 1;
inline bool TInviteInviteByOtherReq::has_invitecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInviteInviteByOtherReq::set_has_invitecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInviteInviteByOtherReq::clear_has_invitecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInviteInviteByOtherReq::clear_invitecode() {
  if (invitecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_->clear();
  }
  clear_has_invitecode();
}
inline const ::std::string& TInviteInviteByOtherReq::invitecode() const {
  // @@protoc_insertion_point(field_get:pb.TInviteInviteByOtherReq.InviteCode)
  return *invitecode_;
}
inline void TInviteInviteByOtherReq::set_invitecode(const ::std::string& value) {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  invitecode_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TInviteInviteByOtherReq.InviteCode)
}
inline void TInviteInviteByOtherReq::set_invitecode(const char* value) {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  invitecode_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TInviteInviteByOtherReq.InviteCode)
}
inline void TInviteInviteByOtherReq::set_invitecode(const char* value, size_t size) {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  invitecode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TInviteInviteByOtherReq.InviteCode)
}
inline ::std::string* TInviteInviteByOtherReq::mutable_invitecode() {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TInviteInviteByOtherReq.InviteCode)
  return invitecode_;
}
inline ::std::string* TInviteInviteByOtherReq::release_invitecode() {
  clear_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = invitecode_;
    invitecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TInviteInviteByOtherReq::set_allocated_invitecode(::std::string* invitecode) {
  if (invitecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitecode_;
  }
  if (invitecode) {
    set_has_invitecode();
    invitecode_ = invitecode;
  } else {
    clear_has_invitecode();
    invitecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInviteInviteByOtherReq.InviteCode)
}

// optional uint64 InviteeUid = 2;
inline bool TInviteInviteByOtherReq::has_inviteeuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInviteInviteByOtherReq::set_has_inviteeuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInviteInviteByOtherReq::clear_has_inviteeuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInviteInviteByOtherReq::clear_inviteeuid() {
  inviteeuid_ = GOOGLE_ULONGLONG(0);
  clear_has_inviteeuid();
}
inline ::google::protobuf::uint64 TInviteInviteByOtherReq::inviteeuid() const {
  // @@protoc_insertion_point(field_get:pb.TInviteInviteByOtherReq.InviteeUid)
  return inviteeuid_;
}
inline void TInviteInviteByOtherReq::set_inviteeuid(::google::protobuf::uint64 value) {
  set_has_inviteeuid();
  inviteeuid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteInviteByOtherReq.InviteeUid)
}

// -------------------------------------------------------------------

// TInviteNotify

// optional uint32 InviteNum = 1;
inline bool TInviteNotify::has_invitenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInviteNotify::set_has_invitenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInviteNotify::clear_has_invitenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInviteNotify::clear_invitenum() {
  invitenum_ = 0u;
  clear_has_invitenum();
}
inline ::google::protobuf::uint32 TInviteNotify::invitenum() const {
  // @@protoc_insertion_point(field_get:pb.TInviteNotify.InviteNum)
  return invitenum_;
}
inline void TInviteNotify::set_invitenum(::google::protobuf::uint32 value) {
  set_has_invitenum();
  invitenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteNotify.InviteNum)
}

// repeated .pb.TInviteAchvItem PowerAchvArr = 2;
inline int TInviteNotify::powerachvarr_size() const {
  return powerachvarr_.size();
}
inline void TInviteNotify::clear_powerachvarr() {
  powerachvarr_.Clear();
}
inline const ::pb::TInviteAchvItem& TInviteNotify::powerachvarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInviteNotify.PowerAchvArr)
  return powerachvarr_.Get(index);
}
inline ::pb::TInviteAchvItem* TInviteNotify::mutable_powerachvarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInviteNotify.PowerAchvArr)
  return powerachvarr_.Mutable(index);
}
inline ::pb::TInviteAchvItem* TInviteNotify::add_powerachvarr() {
  // @@protoc_insertion_point(field_add:pb.TInviteNotify.PowerAchvArr)
  return powerachvarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >&
TInviteNotify::powerachvarr() const {
  // @@protoc_insertion_point(field_list:pb.TInviteNotify.PowerAchvArr)
  return powerachvarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >*
TInviteNotify::mutable_powerachvarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInviteNotify.PowerAchvArr)
  return &powerachvarr_;
}

// repeated .pb.TInviteAchvItem VIPAchvArr = 3;
inline int TInviteNotify::vipachvarr_size() const {
  return vipachvarr_.size();
}
inline void TInviteNotify::clear_vipachvarr() {
  vipachvarr_.Clear();
}
inline const ::pb::TInviteAchvItem& TInviteNotify::vipachvarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInviteNotify.VIPAchvArr)
  return vipachvarr_.Get(index);
}
inline ::pb::TInviteAchvItem* TInviteNotify::mutable_vipachvarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInviteNotify.VIPAchvArr)
  return vipachvarr_.Mutable(index);
}
inline ::pb::TInviteAchvItem* TInviteNotify::add_vipachvarr() {
  // @@protoc_insertion_point(field_add:pb.TInviteNotify.VIPAchvArr)
  return vipachvarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >&
TInviteNotify::vipachvarr() const {
  // @@protoc_insertion_point(field_list:pb.TInviteNotify.VIPAchvArr)
  return vipachvarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >*
TInviteNotify::mutable_vipachvarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInviteNotify.VIPAchvArr)
  return &vipachvarr_;
}

// repeated .pb.TInviteAchvItem InviteNumAchvArr = 4;
inline int TInviteNotify::invitenumachvarr_size() const {
  return invitenumachvarr_.size();
}
inline void TInviteNotify::clear_invitenumachvarr() {
  invitenumachvarr_.Clear();
}
inline const ::pb::TInviteAchvItem& TInviteNotify::invitenumachvarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInviteNotify.InviteNumAchvArr)
  return invitenumachvarr_.Get(index);
}
inline ::pb::TInviteAchvItem* TInviteNotify::mutable_invitenumachvarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInviteNotify.InviteNumAchvArr)
  return invitenumachvarr_.Mutable(index);
}
inline ::pb::TInviteAchvItem* TInviteNotify::add_invitenumachvarr() {
  // @@protoc_insertion_point(field_add:pb.TInviteNotify.InviteNumAchvArr)
  return invitenumachvarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >&
TInviteNotify::invitenumachvarr() const {
  // @@protoc_insertion_point(field_list:pb.TInviteNotify.InviteNumAchvArr)
  return invitenumachvarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TInviteAchvItem >*
TInviteNotify::mutable_invitenumachvarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInviteNotify.InviteNumAchvArr)
  return &invitenumachvarr_;
}

// optional uint64 CanGetInvitePoint = 5;
inline bool TInviteNotify::has_cangetinvitepoint() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TInviteNotify::set_has_cangetinvitepoint() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TInviteNotify::clear_has_cangetinvitepoint() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TInviteNotify::clear_cangetinvitepoint() {
  cangetinvitepoint_ = GOOGLE_ULONGLONG(0);
  clear_has_cangetinvitepoint();
}
inline ::google::protobuf::uint64 TInviteNotify::cangetinvitepoint() const {
  // @@protoc_insertion_point(field_get:pb.TInviteNotify.CanGetInvitePoint)
  return cangetinvitepoint_;
}
inline void TInviteNotify::set_cangetinvitepoint(::google::protobuf::uint64 value) {
  set_has_cangetinvitepoint();
  cangetinvitepoint_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteNotify.CanGetInvitePoint)
}

// optional uint64 HistoryInvitePoint = 6;
inline bool TInviteNotify::has_historyinvitepoint() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TInviteNotify::set_has_historyinvitepoint() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TInviteNotify::clear_has_historyinvitepoint() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TInviteNotify::clear_historyinvitepoint() {
  historyinvitepoint_ = GOOGLE_ULONGLONG(0);
  clear_has_historyinvitepoint();
}
inline ::google::protobuf::uint64 TInviteNotify::historyinvitepoint() const {
  // @@protoc_insertion_point(field_get:pb.TInviteNotify.HistoryInvitePoint)
  return historyinvitepoint_;
}
inline void TInviteNotify::set_historyinvitepoint(::google::protobuf::uint64 value) {
  set_has_historyinvitepoint();
  historyinvitepoint_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteNotify.HistoryInvitePoint)
}

// -------------------------------------------------------------------

// TInviteSendInfoToInviterReq

// optional uint64 InviterUid = 1;
inline bool TInviteSendInfoToInviterReq::has_inviteruid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInviteSendInfoToInviterReq::set_has_inviteruid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInviteSendInfoToInviterReq::clear_has_inviteruid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInviteSendInfoToInviterReq::clear_inviteruid() {
  inviteruid_ = GOOGLE_ULONGLONG(0);
  clear_has_inviteruid();
}
inline ::google::protobuf::uint64 TInviteSendInfoToInviterReq::inviteruid() const {
  // @@protoc_insertion_point(field_get:pb.TInviteSendInfoToInviterReq.InviterUid)
  return inviteruid_;
}
inline void TInviteSendInfoToInviterReq::set_inviteruid(::google::protobuf::uint64 value) {
  set_has_inviteruid();
  inviteruid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteSendInfoToInviterReq.InviterUid)
}

// optional uint64 InviteeUid = 2;
inline bool TInviteSendInfoToInviterReq::has_inviteeuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInviteSendInfoToInviterReq::set_has_inviteeuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInviteSendInfoToInviterReq::clear_has_inviteeuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInviteSendInfoToInviterReq::clear_inviteeuid() {
  inviteeuid_ = GOOGLE_ULONGLONG(0);
  clear_has_inviteeuid();
}
inline ::google::protobuf::uint64 TInviteSendInfoToInviterReq::inviteeuid() const {
  // @@protoc_insertion_point(field_get:pb.TInviteSendInfoToInviterReq.InviteeUid)
  return inviteeuid_;
}
inline void TInviteSendInfoToInviterReq::set_inviteeuid(::google::protobuf::uint64 value) {
  set_has_inviteeuid();
  inviteeuid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteSendInfoToInviterReq.InviteeUid)
}

// optional uint64 Power = 3;
inline bool TInviteSendInfoToInviterReq::has_power() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TInviteSendInfoToInviterReq::set_has_power() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TInviteSendInfoToInviterReq::clear_has_power() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TInviteSendInfoToInviterReq::clear_power() {
  power_ = GOOGLE_ULONGLONG(0);
  clear_has_power();
}
inline ::google::protobuf::uint64 TInviteSendInfoToInviterReq::power() const {
  // @@protoc_insertion_point(field_get:pb.TInviteSendInfoToInviterReq.Power)
  return power_;
}
inline void TInviteSendInfoToInviterReq::set_power(::google::protobuf::uint64 value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteSendInfoToInviterReq.Power)
}

// optional uint32 VIP = 4;
inline bool TInviteSendInfoToInviterReq::has_vip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TInviteSendInfoToInviterReq::set_has_vip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TInviteSendInfoToInviterReq::clear_has_vip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TInviteSendInfoToInviterReq::clear_vip() {
  vip_ = 0u;
  clear_has_vip();
}
inline ::google::protobuf::uint32 TInviteSendInfoToInviterReq::vip() const {
  // @@protoc_insertion_point(field_get:pb.TInviteSendInfoToInviterReq.VIP)
  return vip_;
}
inline void TInviteSendInfoToInviterReq::set_vip(::google::protobuf::uint32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteSendInfoToInviterReq.VIP)
}

// optional uint64 Pay = 5;
inline bool TInviteSendInfoToInviterReq::has_pay() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TInviteSendInfoToInviterReq::set_has_pay() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TInviteSendInfoToInviterReq::clear_has_pay() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TInviteSendInfoToInviterReq::clear_pay() {
  pay_ = GOOGLE_ULONGLONG(0);
  clear_has_pay();
}
inline ::google::protobuf::uint64 TInviteSendInfoToInviterReq::pay() const {
  // @@protoc_insertion_point(field_get:pb.TInviteSendInfoToInviterReq.Pay)
  return pay_;
}
inline void TInviteSendInfoToInviterReq::set_pay(::google::protobuf::uint64 value) {
  set_has_pay();
  pay_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteSendInfoToInviterReq.Pay)
}

// optional uint32 CurrLevel = 6;
inline bool TInviteSendInfoToInviterReq::has_currlevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TInviteSendInfoToInviterReq::set_has_currlevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TInviteSendInfoToInviterReq::clear_has_currlevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TInviteSendInfoToInviterReq::clear_currlevel() {
  currlevel_ = 0u;
  clear_has_currlevel();
}
inline ::google::protobuf::uint32 TInviteSendInfoToInviterReq::currlevel() const {
  // @@protoc_insertion_point(field_get:pb.TInviteSendInfoToInviterReq.CurrLevel)
  return currlevel_;
}
inline void TInviteSendInfoToInviterReq::set_currlevel(::google::protobuf::uint32 value) {
  set_has_currlevel();
  currlevel_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteSendInfoToInviterReq.CurrLevel)
}

// -------------------------------------------------------------------

// TInviteSendInfoToInviterRsp

// optional .pb.EInviteErrCode ErrCode = 1;
inline bool TInviteSendInfoToInviterRsp::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInviteSendInfoToInviterRsp::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInviteSendInfoToInviterRsp::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInviteSendInfoToInviterRsp::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::pb::EInviteErrCode TInviteSendInfoToInviterRsp::errcode() const {
  // @@protoc_insertion_point(field_get:pb.TInviteSendInfoToInviterRsp.ErrCode)
  return static_cast< ::pb::EInviteErrCode >(errcode_);
}
inline void TInviteSendInfoToInviterRsp::set_errcode(::pb::EInviteErrCode value) {
  assert(::pb::EInviteErrCode_IsValid(value));
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TInviteSendInfoToInviterRsp.ErrCode)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::EInviteErrCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EInviteErrCode>() {
  return ::pb::EInviteErrCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fInvite_2eproto__INCLUDED
