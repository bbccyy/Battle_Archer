// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/BountyList.proto

#ifndef PROTOBUF_net_2fBountyList_2eproto__INCLUDED
#define PROTOBUF_net_2fBountyList_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fBountyList_2eproto();
void protobuf_AssignDesc_net_2fBountyList_2eproto();
void protobuf_ShutdownFile_net_2fBountyList_2eproto();

class TBountyListBountySingle;
class TBountyListGetBountListInfoRsp;
class TBountyListGetRewardReq;
class TBountyListGetRewardRsp;
class TBountyListGetTotalRewardRsp;
class TBountyListPush;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TBountyListBountySingle</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/BountyList.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBountyListBountySingle : public ::google::protobuf::Message {
 public:
  TBountyListBountySingle();
  virtual ~TBountyListBountySingle();

  TBountyListBountySingle(const TBountyListBountySingle& from);

  inline TBountyListBountySingle& operator=(const TBountyListBountySingle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBountyListBountySingle& default_instance();

  void Swap(TBountyListBountySingle* other);

  // implements Message ----------------------------------------------

  TBountyListBountySingle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBountyListBountySingle& from);
  void MergeFrom(const TBountyListBountySingle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBountyListBountySingle</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 LevelId = 2;
  inline bool has_levelid() const;
  inline void clear_levelid();
  static const int kLevelIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBountyListBountySingle</name>
  	<Function>
  		<name>levelid</name>
  		<replaceName>LevelId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_levelid</name>
  		<replaceName>LevelId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_levelid</name>
  		<replaceName>LevelId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 levelid() const;
  inline void set_levelid(::google::protobuf::uint32 value);

  // optional uint64 ReceiveTime = 3;
  inline bool has_receivetime() const;
  inline void clear_receivetime();
  static const int kReceiveTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBountyListBountySingle</name>
  	<Function>
  		<name>receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 receivetime() const;
  inline void set_receivetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TBountyListBountySingle)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_levelid();
  inline void clear_has_levelid();
  inline void set_has_receivetime();
  inline void clear_has_receivetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 levelid_;
  ::google::protobuf::uint64 receivetime_;
  friend void  protobuf_AddDesc_net_2fBountyList_2eproto();
  friend void protobuf_AssignDesc_net_2fBountyList_2eproto();
  friend void protobuf_ShutdownFile_net_2fBountyList_2eproto();

  void InitAsDefaultInstance();
  static TBountyListBountySingle* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBountyListGetBountListInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/BountyList.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBountyListGetBountListInfoRsp : public ::google::protobuf::Message {
 public:
  TBountyListGetBountListInfoRsp();
  virtual ~TBountyListGetBountListInfoRsp();

  TBountyListGetBountListInfoRsp(const TBountyListGetBountListInfoRsp& from);

  inline TBountyListGetBountListInfoRsp& operator=(const TBountyListGetBountListInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBountyListGetBountListInfoRsp& default_instance();

  void Swap(TBountyListGetBountListInfoRsp* other);

  // implements Message ----------------------------------------------

  TBountyListGetBountListInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBountyListGetBountListInfoRsp& from);
  void MergeFrom(const TBountyListGetBountListInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 OpenTime = 1;
  inline bool has_opentime() const;
  inline void clear_opentime();
  static const int kOpenTimeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetBountListInfoRsp</name>
  	<Function>
  		<name>opentime</name>
  		<replaceName>OpenTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_opentime</name>
  		<replaceName>OpenTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_opentime</name>
  		<replaceName>OpenTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 opentime() const;
  inline void set_opentime(::google::protobuf::uint64 value);

  // optional uint32 TotalScores = 2;
  inline bool has_totalscores() const;
  inline void clear_totalscores();
  static const int kTotalScoresFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetBountListInfoRsp</name>
  	<Function>
  		<name>totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 totalscores() const;
  inline void set_totalscores(::google::protobuf::uint32 value);

  // optional uint64 PayTime = 3;
  inline bool has_paytime() const;
  inline void clear_paytime();
  static const int kPayTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetBountListInfoRsp</name>
  	<Function>
  		<name>paytime</name>
  		<replaceName>PayTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_paytime</name>
  		<replaceName>PayTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_paytime</name>
  		<replaceName>PayTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 paytime() const;
  inline void set_paytime(::google::protobuf::uint64 value);

  // optional uint64 PassChapterTime = 4;
  inline bool has_passchaptertime() const;
  inline void clear_passchaptertime();
  static const int kPassChapterTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetBountListInfoRsp</name>
  	<Function>
  		<name>passchaptertime</name>
  		<replaceName>PassChapterTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_passchaptertime</name>
  		<replaceName>PassChapterTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_passchaptertime</name>
  		<replaceName>PassChapterTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 passchaptertime() const;
  inline void set_passchaptertime(::google::protobuf::uint64 value);

  // repeated .pb.TBountyListBountySingle BountyCommonArr = 5;
  inline int bountycommonarr_size() const;
  inline void clear_bountycommonarr();
  static const int kBountyCommonArrFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetBountListInfoRsp</name>
  	<Function>
  		<name>bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>bountycommonarr_size</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBountyListBountySingle& bountycommonarr(int index) const;
  inline ::pb::TBountyListBountySingle* mutable_bountycommonarr(int index);
  inline ::pb::TBountyListBountySingle* add_bountycommonarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >&
      bountycommonarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >*
      mutable_bountycommonarr();

  // repeated .pb.TBountyListBountySingle BountyAdvanceArr = 6;
  inline int bountyadvancearr_size() const;
  inline void clear_bountyadvancearr();
  static const int kBountyAdvanceArrFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetBountListInfoRsp</name>
  	<Function>
  		<name>bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>bountyadvancearr_size</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBountyListBountySingle& bountyadvancearr(int index) const;
  inline ::pb::TBountyListBountySingle* mutable_bountyadvancearr(int index);
  inline ::pb::TBountyListBountySingle* add_bountyadvancearr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >&
      bountyadvancearr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >*
      mutable_bountyadvancearr();

  // @@protoc_insertion_point(class_scope:pb.TBountyListGetBountListInfoRsp)
 private:
  inline void set_has_opentime();
  inline void clear_has_opentime();
  inline void set_has_totalscores();
  inline void clear_has_totalscores();
  inline void set_has_paytime();
  inline void clear_has_paytime();
  inline void set_has_passchaptertime();
  inline void clear_has_passchaptertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 opentime_;
  ::google::protobuf::uint64 paytime_;
  ::google::protobuf::uint64 passchaptertime_;
  ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle > bountycommonarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle > bountyadvancearr_;
  ::google::protobuf::uint32 totalscores_;
  friend void  protobuf_AddDesc_net_2fBountyList_2eproto();
  friend void protobuf_AssignDesc_net_2fBountyList_2eproto();
  friend void protobuf_ShutdownFile_net_2fBountyList_2eproto();

  void InitAsDefaultInstance();
  static TBountyListGetBountListInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBountyListGetRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/BountyList.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBountyListGetRewardReq : public ::google::protobuf::Message {
 public:
  TBountyListGetRewardReq();
  virtual ~TBountyListGetRewardReq();

  TBountyListGetRewardReq(const TBountyListGetRewardReq& from);

  inline TBountyListGetRewardReq& operator=(const TBountyListGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBountyListGetRewardReq& default_instance();

  void Swap(TBountyListGetRewardReq* other);

  // implements Message ----------------------------------------------

  TBountyListGetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBountyListGetRewardReq& from);
  void MergeFrom(const TBountyListGetRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetRewardReq</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional bool IsAdvance = 2;
  inline bool has_isadvance() const;
  inline void clear_isadvance();
  static const int kIsAdvanceFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetRewardReq</name>
  	<Function>
  		<name>isadvance</name>
  		<replaceName>IsAdvance</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_isadvance</name>
  		<replaceName>IsAdvance</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_isadvance</name>
  		<replaceName>IsAdvance</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool isadvance() const;
  inline void set_isadvance(bool value);

  // @@protoc_insertion_point(class_scope:pb.TBountyListGetRewardReq)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_isadvance();
  inline void clear_has_isadvance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  bool isadvance_;
  friend void  protobuf_AddDesc_net_2fBountyList_2eproto();
  friend void protobuf_AssignDesc_net_2fBountyList_2eproto();
  friend void protobuf_ShutdownFile_net_2fBountyList_2eproto();

  void InitAsDefaultInstance();
  static TBountyListGetRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBountyListGetRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/BountyList.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBountyListGetRewardRsp : public ::google::protobuf::Message {
 public:
  TBountyListGetRewardRsp();
  virtual ~TBountyListGetRewardRsp();

  TBountyListGetRewardRsp(const TBountyListGetRewardRsp& from);

  inline TBountyListGetRewardRsp& operator=(const TBountyListGetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBountyListGetRewardRsp& default_instance();

  void Swap(TBountyListGetRewardRsp* other);

  // implements Message ----------------------------------------------

  TBountyListGetRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBountyListGetRewardRsp& from);
  void MergeFrom(const TBountyListGetRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 IsAdvance = 1;
  inline bool has_isadvance() const;
  inline void clear_isadvance();
  static const int kIsAdvanceFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetRewardRsp</name>
  	<Function>
  		<name>isadvance</name>
  		<replaceName>IsAdvance</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_isadvance</name>
  		<replaceName>IsAdvance</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_isadvance</name>
  		<replaceName>IsAdvance</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 isadvance() const;
  inline void set_isadvance(::google::protobuf::uint32 value);

  // optional .pb.TBountyListBountySingle BountyInfo = 2;
  inline bool has_bountyinfo() const;
  inline void clear_bountyinfo();
  static const int kBountyInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetRewardRsp</name>
  	<Function>
  		<name>bountyinfo</name>
  		<replaceName>BountyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_bountyinfo</name>
  		<replaceName>BountyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_bountyinfo</name>
  		<replaceName>BountyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bountyinfo</name>
  		<replaceName>BountyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBountyListBountySingle& bountyinfo() const;
  inline ::pb::TBountyListBountySingle* mutable_bountyinfo();
  inline ::pb::TBountyListBountySingle* release_bountyinfo();
  inline void set_allocated_bountyinfo(::pb::TBountyListBountySingle* bountyinfo);

  // repeated .pb.TCommonReward RewardArr = 3;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetRewardRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarr(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarr(int index);
  inline ::pb::TCommonReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarr();

  // @@protoc_insertion_point(class_scope:pb.TBountyListGetRewardRsp)
 private:
  inline void set_has_isadvance();
  inline void clear_has_isadvance();
  inline void set_has_bountyinfo();
  inline void clear_has_bountyinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TBountyListBountySingle* bountyinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarr_;
  ::google::protobuf::uint32 isadvance_;
  friend void  protobuf_AddDesc_net_2fBountyList_2eproto();
  friend void protobuf_AssignDesc_net_2fBountyList_2eproto();
  friend void protobuf_ShutdownFile_net_2fBountyList_2eproto();

  void InitAsDefaultInstance();
  static TBountyListGetRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBountyListGetTotalRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/BountyList.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBountyListGetTotalRewardRsp : public ::google::protobuf::Message {
 public:
  TBountyListGetTotalRewardRsp();
  virtual ~TBountyListGetTotalRewardRsp();

  TBountyListGetTotalRewardRsp(const TBountyListGetTotalRewardRsp& from);

  inline TBountyListGetTotalRewardRsp& operator=(const TBountyListGetTotalRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBountyListGetTotalRewardRsp& default_instance();

  void Swap(TBountyListGetTotalRewardRsp* other);

  // implements Message ----------------------------------------------

  TBountyListGetTotalRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBountyListGetTotalRewardRsp& from);
  void MergeFrom(const TBountyListGetTotalRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TBountyListBountySingle BountyCommonArr = 1;
  inline int bountycommonarr_size() const;
  inline void clear_bountycommonarr();
  static const int kBountyCommonArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetTotalRewardRsp</name>
  	<Function>
  		<name>bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>bountycommonarr_size</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBountyListBountySingle& bountycommonarr(int index) const;
  inline ::pb::TBountyListBountySingle* mutable_bountycommonarr(int index);
  inline ::pb::TBountyListBountySingle* add_bountycommonarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >&
      bountycommonarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >*
      mutable_bountycommonarr();

  // repeated .pb.TBountyListBountySingle BountyAdvanceArr = 2;
  inline int bountyadvancearr_size() const;
  inline void clear_bountyadvancearr();
  static const int kBountyAdvanceArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetTotalRewardRsp</name>
  	<Function>
  		<name>bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>bountyadvancearr_size</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBountyListBountySingle& bountyadvancearr(int index) const;
  inline ::pb::TBountyListBountySingle* mutable_bountyadvancearr(int index);
  inline ::pb::TBountyListBountySingle* add_bountyadvancearr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >&
      bountyadvancearr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >*
      mutable_bountyadvancearr();

  // repeated .pb.TCommonReward RewardArr = 3;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBountyListGetTotalRewardRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarr(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarr(int index);
  inline ::pb::TCommonReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarr();

  // @@protoc_insertion_point(class_scope:pb.TBountyListGetTotalRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle > bountycommonarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle > bountyadvancearr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarr_;
  friend void  protobuf_AddDesc_net_2fBountyList_2eproto();
  friend void protobuf_AssignDesc_net_2fBountyList_2eproto();
  friend void protobuf_ShutdownFile_net_2fBountyList_2eproto();

  void InitAsDefaultInstance();
  static TBountyListGetTotalRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBountyListPush</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/BountyList.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBountyListPush : public ::google::protobuf::Message {
 public:
  TBountyListPush();
  virtual ~TBountyListPush();

  TBountyListPush(const TBountyListPush& from);

  inline TBountyListPush& operator=(const TBountyListPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBountyListPush& default_instance();

  void Swap(TBountyListPush* other);

  // implements Message ----------------------------------------------

  TBountyListPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBountyListPush& from);
  void MergeFrom(const TBountyListPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 PayTime = 1;
  inline bool has_paytime() const;
  inline void clear_paytime();
  static const int kPayTimeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBountyListPush</name>
  	<Function>
  		<name>paytime</name>
  		<replaceName>PayTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_paytime</name>
  		<replaceName>PayTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_paytime</name>
  		<replaceName>PayTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 paytime() const;
  inline void set_paytime(::google::protobuf::uint64 value);

  // optional uint64 PassChapterTime = 2;
  inline bool has_passchaptertime() const;
  inline void clear_passchaptertime();
  static const int kPassChapterTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBountyListPush</name>
  	<Function>
  		<name>passchaptertime</name>
  		<replaceName>PassChapterTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_passchaptertime</name>
  		<replaceName>PassChapterTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_passchaptertime</name>
  		<replaceName>PassChapterTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 passchaptertime() const;
  inline void set_passchaptertime(::google::protobuf::uint64 value);

  // optional uint32 TotalScores = 3;
  inline bool has_totalscores() const;
  inline void clear_totalscores();
  static const int kTotalScoresFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBountyListPush</name>
  	<Function>
  		<name>totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 totalscores() const;
  inline void set_totalscores(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TBountyListPush)
 private:
  inline void set_has_paytime();
  inline void clear_has_paytime();
  inline void set_has_passchaptertime();
  inline void clear_has_passchaptertime();
  inline void set_has_totalscores();
  inline void clear_has_totalscores();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 paytime_;
  ::google::protobuf::uint64 passchaptertime_;
  ::google::protobuf::uint32 totalscores_;
  friend void  protobuf_AddDesc_net_2fBountyList_2eproto();
  friend void protobuf_AssignDesc_net_2fBountyList_2eproto();
  friend void protobuf_ShutdownFile_net_2fBountyList_2eproto();

  void InitAsDefaultInstance();
  static TBountyListPush* default_instance_;
};
// ===================================================================


// ===================================================================

// TBountyListBountySingle

// optional uint32 Level = 1;
inline bool TBountyListBountySingle::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBountyListBountySingle::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBountyListBountySingle::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBountyListBountySingle::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TBountyListBountySingle::level() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListBountySingle.Level)
  return level_;
}
inline void TBountyListBountySingle::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListBountySingle.Level)
}

// optional uint32 LevelId = 2;
inline bool TBountyListBountySingle::has_levelid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBountyListBountySingle::set_has_levelid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBountyListBountySingle::clear_has_levelid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBountyListBountySingle::clear_levelid() {
  levelid_ = 0u;
  clear_has_levelid();
}
inline ::google::protobuf::uint32 TBountyListBountySingle::levelid() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListBountySingle.LevelId)
  return levelid_;
}
inline void TBountyListBountySingle::set_levelid(::google::protobuf::uint32 value) {
  set_has_levelid();
  levelid_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListBountySingle.LevelId)
}

// optional uint64 ReceiveTime = 3;
inline bool TBountyListBountySingle::has_receivetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TBountyListBountySingle::set_has_receivetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TBountyListBountySingle::clear_has_receivetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TBountyListBountySingle::clear_receivetime() {
  receivetime_ = GOOGLE_ULONGLONG(0);
  clear_has_receivetime();
}
inline ::google::protobuf::uint64 TBountyListBountySingle::receivetime() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListBountySingle.ReceiveTime)
  return receivetime_;
}
inline void TBountyListBountySingle::set_receivetime(::google::protobuf::uint64 value) {
  set_has_receivetime();
  receivetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListBountySingle.ReceiveTime)
}

// -------------------------------------------------------------------

// TBountyListGetBountListInfoRsp

// optional uint64 OpenTime = 1;
inline bool TBountyListGetBountListInfoRsp::has_opentime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBountyListGetBountListInfoRsp::set_has_opentime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBountyListGetBountListInfoRsp::clear_has_opentime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBountyListGetBountListInfoRsp::clear_opentime() {
  opentime_ = GOOGLE_ULONGLONG(0);
  clear_has_opentime();
}
inline ::google::protobuf::uint64 TBountyListGetBountListInfoRsp::opentime() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetBountListInfoRsp.OpenTime)
  return opentime_;
}
inline void TBountyListGetBountListInfoRsp::set_opentime(::google::protobuf::uint64 value) {
  set_has_opentime();
  opentime_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListGetBountListInfoRsp.OpenTime)
}

// optional uint32 TotalScores = 2;
inline bool TBountyListGetBountListInfoRsp::has_totalscores() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBountyListGetBountListInfoRsp::set_has_totalscores() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBountyListGetBountListInfoRsp::clear_has_totalscores() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBountyListGetBountListInfoRsp::clear_totalscores() {
  totalscores_ = 0u;
  clear_has_totalscores();
}
inline ::google::protobuf::uint32 TBountyListGetBountListInfoRsp::totalscores() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetBountListInfoRsp.TotalScores)
  return totalscores_;
}
inline void TBountyListGetBountListInfoRsp::set_totalscores(::google::protobuf::uint32 value) {
  set_has_totalscores();
  totalscores_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListGetBountListInfoRsp.TotalScores)
}

// optional uint64 PayTime = 3;
inline bool TBountyListGetBountListInfoRsp::has_paytime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TBountyListGetBountListInfoRsp::set_has_paytime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TBountyListGetBountListInfoRsp::clear_has_paytime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TBountyListGetBountListInfoRsp::clear_paytime() {
  paytime_ = GOOGLE_ULONGLONG(0);
  clear_has_paytime();
}
inline ::google::protobuf::uint64 TBountyListGetBountListInfoRsp::paytime() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetBountListInfoRsp.PayTime)
  return paytime_;
}
inline void TBountyListGetBountListInfoRsp::set_paytime(::google::protobuf::uint64 value) {
  set_has_paytime();
  paytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListGetBountListInfoRsp.PayTime)
}

// optional uint64 PassChapterTime = 4;
inline bool TBountyListGetBountListInfoRsp::has_passchaptertime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TBountyListGetBountListInfoRsp::set_has_passchaptertime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TBountyListGetBountListInfoRsp::clear_has_passchaptertime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TBountyListGetBountListInfoRsp::clear_passchaptertime() {
  passchaptertime_ = GOOGLE_ULONGLONG(0);
  clear_has_passchaptertime();
}
inline ::google::protobuf::uint64 TBountyListGetBountListInfoRsp::passchaptertime() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetBountListInfoRsp.PassChapterTime)
  return passchaptertime_;
}
inline void TBountyListGetBountListInfoRsp::set_passchaptertime(::google::protobuf::uint64 value) {
  set_has_passchaptertime();
  passchaptertime_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListGetBountListInfoRsp.PassChapterTime)
}

// repeated .pb.TBountyListBountySingle BountyCommonArr = 5;
inline int TBountyListGetBountListInfoRsp::bountycommonarr_size() const {
  return bountycommonarr_.size();
}
inline void TBountyListGetBountListInfoRsp::clear_bountycommonarr() {
  bountycommonarr_.Clear();
}
inline const ::pb::TBountyListBountySingle& TBountyListGetBountListInfoRsp::bountycommonarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetBountListInfoRsp.BountyCommonArr)
  return bountycommonarr_.Get(index);
}
inline ::pb::TBountyListBountySingle* TBountyListGetBountListInfoRsp::mutable_bountycommonarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBountyListGetBountListInfoRsp.BountyCommonArr)
  return bountycommonarr_.Mutable(index);
}
inline ::pb::TBountyListBountySingle* TBountyListGetBountListInfoRsp::add_bountycommonarr() {
  // @@protoc_insertion_point(field_add:pb.TBountyListGetBountListInfoRsp.BountyCommonArr)
  return bountycommonarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >&
TBountyListGetBountListInfoRsp::bountycommonarr() const {
  // @@protoc_insertion_point(field_list:pb.TBountyListGetBountListInfoRsp.BountyCommonArr)
  return bountycommonarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >*
TBountyListGetBountListInfoRsp::mutable_bountycommonarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBountyListGetBountListInfoRsp.BountyCommonArr)
  return &bountycommonarr_;
}

// repeated .pb.TBountyListBountySingle BountyAdvanceArr = 6;
inline int TBountyListGetBountListInfoRsp::bountyadvancearr_size() const {
  return bountyadvancearr_.size();
}
inline void TBountyListGetBountListInfoRsp::clear_bountyadvancearr() {
  bountyadvancearr_.Clear();
}
inline const ::pb::TBountyListBountySingle& TBountyListGetBountListInfoRsp::bountyadvancearr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetBountListInfoRsp.BountyAdvanceArr)
  return bountyadvancearr_.Get(index);
}
inline ::pb::TBountyListBountySingle* TBountyListGetBountListInfoRsp::mutable_bountyadvancearr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBountyListGetBountListInfoRsp.BountyAdvanceArr)
  return bountyadvancearr_.Mutable(index);
}
inline ::pb::TBountyListBountySingle* TBountyListGetBountListInfoRsp::add_bountyadvancearr() {
  // @@protoc_insertion_point(field_add:pb.TBountyListGetBountListInfoRsp.BountyAdvanceArr)
  return bountyadvancearr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >&
TBountyListGetBountListInfoRsp::bountyadvancearr() const {
  // @@protoc_insertion_point(field_list:pb.TBountyListGetBountListInfoRsp.BountyAdvanceArr)
  return bountyadvancearr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >*
TBountyListGetBountListInfoRsp::mutable_bountyadvancearr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBountyListGetBountListInfoRsp.BountyAdvanceArr)
  return &bountyadvancearr_;
}

// -------------------------------------------------------------------

// TBountyListGetRewardReq

// optional uint32 Level = 1;
inline bool TBountyListGetRewardReq::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBountyListGetRewardReq::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBountyListGetRewardReq::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBountyListGetRewardReq::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TBountyListGetRewardReq::level() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetRewardReq.Level)
  return level_;
}
inline void TBountyListGetRewardReq::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListGetRewardReq.Level)
}

// optional bool IsAdvance = 2;
inline bool TBountyListGetRewardReq::has_isadvance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBountyListGetRewardReq::set_has_isadvance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBountyListGetRewardReq::clear_has_isadvance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBountyListGetRewardReq::clear_isadvance() {
  isadvance_ = false;
  clear_has_isadvance();
}
inline bool TBountyListGetRewardReq::isadvance() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetRewardReq.IsAdvance)
  return isadvance_;
}
inline void TBountyListGetRewardReq::set_isadvance(bool value) {
  set_has_isadvance();
  isadvance_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListGetRewardReq.IsAdvance)
}

// -------------------------------------------------------------------

// TBountyListGetRewardRsp

// optional uint32 IsAdvance = 1;
inline bool TBountyListGetRewardRsp::has_isadvance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBountyListGetRewardRsp::set_has_isadvance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBountyListGetRewardRsp::clear_has_isadvance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBountyListGetRewardRsp::clear_isadvance() {
  isadvance_ = 0u;
  clear_has_isadvance();
}
inline ::google::protobuf::uint32 TBountyListGetRewardRsp::isadvance() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetRewardRsp.IsAdvance)
  return isadvance_;
}
inline void TBountyListGetRewardRsp::set_isadvance(::google::protobuf::uint32 value) {
  set_has_isadvance();
  isadvance_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListGetRewardRsp.IsAdvance)
}

// optional .pb.TBountyListBountySingle BountyInfo = 2;
inline bool TBountyListGetRewardRsp::has_bountyinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBountyListGetRewardRsp::set_has_bountyinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBountyListGetRewardRsp::clear_has_bountyinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBountyListGetRewardRsp::clear_bountyinfo() {
  if (bountyinfo_ != NULL) bountyinfo_->::pb::TBountyListBountySingle::Clear();
  clear_has_bountyinfo();
}
inline const ::pb::TBountyListBountySingle& TBountyListGetRewardRsp::bountyinfo() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetRewardRsp.BountyInfo)
  return bountyinfo_ != NULL ? *bountyinfo_ : *default_instance_->bountyinfo_;
}
inline ::pb::TBountyListBountySingle* TBountyListGetRewardRsp::mutable_bountyinfo() {
  set_has_bountyinfo();
  if (bountyinfo_ == NULL) bountyinfo_ = new ::pb::TBountyListBountySingle;
  // @@protoc_insertion_point(field_mutable:pb.TBountyListGetRewardRsp.BountyInfo)
  return bountyinfo_;
}
inline ::pb::TBountyListBountySingle* TBountyListGetRewardRsp::release_bountyinfo() {
  clear_has_bountyinfo();
  ::pb::TBountyListBountySingle* temp = bountyinfo_;
  bountyinfo_ = NULL;
  return temp;
}
inline void TBountyListGetRewardRsp::set_allocated_bountyinfo(::pb::TBountyListBountySingle* bountyinfo) {
  delete bountyinfo_;
  bountyinfo_ = bountyinfo;
  if (bountyinfo) {
    set_has_bountyinfo();
  } else {
    clear_has_bountyinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TBountyListGetRewardRsp.BountyInfo)
}

// repeated .pb.TCommonReward RewardArr = 3;
inline int TBountyListGetRewardRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TBountyListGetRewardRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TCommonReward& TBountyListGetRewardRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetRewardRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TCommonReward* TBountyListGetRewardRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBountyListGetRewardRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TCommonReward* TBountyListGetRewardRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TBountyListGetRewardRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TBountyListGetRewardRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TBountyListGetRewardRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TBountyListGetRewardRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBountyListGetRewardRsp.RewardArr)
  return &rewardarr_;
}

// -------------------------------------------------------------------

// TBountyListGetTotalRewardRsp

// repeated .pb.TBountyListBountySingle BountyCommonArr = 1;
inline int TBountyListGetTotalRewardRsp::bountycommonarr_size() const {
  return bountycommonarr_.size();
}
inline void TBountyListGetTotalRewardRsp::clear_bountycommonarr() {
  bountycommonarr_.Clear();
}
inline const ::pb::TBountyListBountySingle& TBountyListGetTotalRewardRsp::bountycommonarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetTotalRewardRsp.BountyCommonArr)
  return bountycommonarr_.Get(index);
}
inline ::pb::TBountyListBountySingle* TBountyListGetTotalRewardRsp::mutable_bountycommonarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBountyListGetTotalRewardRsp.BountyCommonArr)
  return bountycommonarr_.Mutable(index);
}
inline ::pb::TBountyListBountySingle* TBountyListGetTotalRewardRsp::add_bountycommonarr() {
  // @@protoc_insertion_point(field_add:pb.TBountyListGetTotalRewardRsp.BountyCommonArr)
  return bountycommonarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >&
TBountyListGetTotalRewardRsp::bountycommonarr() const {
  // @@protoc_insertion_point(field_list:pb.TBountyListGetTotalRewardRsp.BountyCommonArr)
  return bountycommonarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >*
TBountyListGetTotalRewardRsp::mutable_bountycommonarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBountyListGetTotalRewardRsp.BountyCommonArr)
  return &bountycommonarr_;
}

// repeated .pb.TBountyListBountySingle BountyAdvanceArr = 2;
inline int TBountyListGetTotalRewardRsp::bountyadvancearr_size() const {
  return bountyadvancearr_.size();
}
inline void TBountyListGetTotalRewardRsp::clear_bountyadvancearr() {
  bountyadvancearr_.Clear();
}
inline const ::pb::TBountyListBountySingle& TBountyListGetTotalRewardRsp::bountyadvancearr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetTotalRewardRsp.BountyAdvanceArr)
  return bountyadvancearr_.Get(index);
}
inline ::pb::TBountyListBountySingle* TBountyListGetTotalRewardRsp::mutable_bountyadvancearr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBountyListGetTotalRewardRsp.BountyAdvanceArr)
  return bountyadvancearr_.Mutable(index);
}
inline ::pb::TBountyListBountySingle* TBountyListGetTotalRewardRsp::add_bountyadvancearr() {
  // @@protoc_insertion_point(field_add:pb.TBountyListGetTotalRewardRsp.BountyAdvanceArr)
  return bountyadvancearr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >&
TBountyListGetTotalRewardRsp::bountyadvancearr() const {
  // @@protoc_insertion_point(field_list:pb.TBountyListGetTotalRewardRsp.BountyAdvanceArr)
  return bountyadvancearr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListBountySingle >*
TBountyListGetTotalRewardRsp::mutable_bountyadvancearr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBountyListGetTotalRewardRsp.BountyAdvanceArr)
  return &bountyadvancearr_;
}

// repeated .pb.TCommonReward RewardArr = 3;
inline int TBountyListGetTotalRewardRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TBountyListGetTotalRewardRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TCommonReward& TBountyListGetTotalRewardRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBountyListGetTotalRewardRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TCommonReward* TBountyListGetTotalRewardRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBountyListGetTotalRewardRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TCommonReward* TBountyListGetTotalRewardRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TBountyListGetTotalRewardRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TBountyListGetTotalRewardRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TBountyListGetTotalRewardRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TBountyListGetTotalRewardRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBountyListGetTotalRewardRsp.RewardArr)
  return &rewardarr_;
}

// -------------------------------------------------------------------

// TBountyListPush

// optional uint64 PayTime = 1;
inline bool TBountyListPush::has_paytime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBountyListPush::set_has_paytime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBountyListPush::clear_has_paytime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBountyListPush::clear_paytime() {
  paytime_ = GOOGLE_ULONGLONG(0);
  clear_has_paytime();
}
inline ::google::protobuf::uint64 TBountyListPush::paytime() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListPush.PayTime)
  return paytime_;
}
inline void TBountyListPush::set_paytime(::google::protobuf::uint64 value) {
  set_has_paytime();
  paytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListPush.PayTime)
}

// optional uint64 PassChapterTime = 2;
inline bool TBountyListPush::has_passchaptertime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBountyListPush::set_has_passchaptertime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBountyListPush::clear_has_passchaptertime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBountyListPush::clear_passchaptertime() {
  passchaptertime_ = GOOGLE_ULONGLONG(0);
  clear_has_passchaptertime();
}
inline ::google::protobuf::uint64 TBountyListPush::passchaptertime() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListPush.PassChapterTime)
  return passchaptertime_;
}
inline void TBountyListPush::set_passchaptertime(::google::protobuf::uint64 value) {
  set_has_passchaptertime();
  passchaptertime_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListPush.PassChapterTime)
}

// optional uint32 TotalScores = 3;
inline bool TBountyListPush::has_totalscores() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TBountyListPush::set_has_totalscores() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TBountyListPush::clear_has_totalscores() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TBountyListPush::clear_totalscores() {
  totalscores_ = 0u;
  clear_has_totalscores();
}
inline ::google::protobuf::uint32 TBountyListPush::totalscores() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListPush.TotalScores)
  return totalscores_;
}
inline void TBountyListPush::set_totalscores(::google::protobuf::uint32 value) {
  set_has_totalscores();
  totalscores_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListPush.TotalScores)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fBountyList_2eproto__INCLUDED
