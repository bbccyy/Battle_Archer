// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/EInstance.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/EInstance.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TEInstanceChapterDetailInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceChapterDetailInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceChapterInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceChapterInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceChapterInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceChapterInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceChapterInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceChapterInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceArrChapterInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceArrChapterInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceArrChapterInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceArrChapterInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceDoBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceDoBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceDoBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceDoBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceRaidStrongholdReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceRaidStrongholdReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceRaidStrongholdRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceRaidStrongholdRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceReportBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceReportBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceReportBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceReportBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceReceiveStarRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceReceiveStarRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceReceiveStarRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceReceiveStarRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceResetStrongholdReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceResetStrongholdReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceProgressRankInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceProgressRankInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceGetProgressRankReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceGetProgressRankReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceGetProgressRankRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceGetProgressRankRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TEInstanceInfoNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TEInstanceInfoNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fEInstance_2eproto() {
  protobuf_AddDesc_net_2fEInstance_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/EInstance.proto");
  GOOGLE_CHECK(file != NULL);
  TEInstanceChapterDetailInfo_descriptor_ = file->message_type(0);
  static const int TEInstanceChapterDetailInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterDetailInfo, rewardinfoarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterDetailInfo, strongholdarray_),
  };
  TEInstanceChapterDetailInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceChapterDetailInfo_descriptor_,
      TEInstanceChapterDetailInfo::default_instance_,
      TEInstanceChapterDetailInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterDetailInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterDetailInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceChapterDetailInfo));
  TEInstanceChapterInfo_descriptor_ = file->message_type(1);
  static const int TEInstanceChapterInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfo, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfo, starnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfo, ispass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfo, isfirst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfo, receivedstarrewardnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfo, detailinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfo, maxunlockstrongholdid_),
  };
  TEInstanceChapterInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceChapterInfo_descriptor_,
      TEInstanceChapterInfo::default_instance_,
      TEInstanceChapterInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceChapterInfo));
  TEInstanceInfoReq_descriptor_ = file->message_type(2);
  static const int TEInstanceInfoReq_offsets_[1] = {
  };
  TEInstanceInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceInfoReq_descriptor_,
      TEInstanceInfoReq::default_instance_,
      TEInstanceInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceInfoReq));
  TEInstanceInfoRsp_descriptor_ = file->message_type(3);
  static const int TEInstanceInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceInfoRsp, chapterinfoarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceInfoRsp, resetnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceInfoRsp, resettime_),
  };
  TEInstanceInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceInfoRsp_descriptor_,
      TEInstanceInfoRsp::default_instance_,
      TEInstanceInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceInfoRsp));
  TEInstanceChapterInfoReq_descriptor_ = file->message_type(4);
  static const int TEInstanceChapterInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfoReq, chapterid_),
  };
  TEInstanceChapterInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceChapterInfoReq_descriptor_,
      TEInstanceChapterInfoReq::default_instance_,
      TEInstanceChapterInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceChapterInfoReq));
  TEInstanceChapterInfoRsp_descriptor_ = file->message_type(5);
  static const int TEInstanceChapterInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfoRsp, chapterinfo_),
  };
  TEInstanceChapterInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceChapterInfoRsp_descriptor_,
      TEInstanceChapterInfoRsp::default_instance_,
      TEInstanceChapterInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceChapterInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceChapterInfoRsp));
  TEInstanceArrChapterInfoReq_descriptor_ = file->message_type(6);
  static const int TEInstanceArrChapterInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceArrChapterInfoReq, chapteridarray_),
  };
  TEInstanceArrChapterInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceArrChapterInfoReq_descriptor_,
      TEInstanceArrChapterInfoReq::default_instance_,
      TEInstanceArrChapterInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceArrChapterInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceArrChapterInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceArrChapterInfoReq));
  TEInstanceArrChapterInfoRsp_descriptor_ = file->message_type(7);
  static const int TEInstanceArrChapterInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceArrChapterInfoRsp, chapterinfoarray_),
  };
  TEInstanceArrChapterInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceArrChapterInfoRsp_descriptor_,
      TEInstanceArrChapterInfoRsp::default_instance_,
      TEInstanceArrChapterInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceArrChapterInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceArrChapterInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceArrChapterInfoRsp));
  TEInstanceDoBattleReq_descriptor_ = file->message_type(8);
  static const int TEInstanceDoBattleReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceDoBattleReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceDoBattleReq, strongholdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceDoBattleReq, battlecheckparam_),
  };
  TEInstanceDoBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceDoBattleReq_descriptor_,
      TEInstanceDoBattleReq::default_instance_,
      TEInstanceDoBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceDoBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceDoBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceDoBattleReq));
  TEInstanceDoBattleRsp_descriptor_ = file->message_type(9);
  static const int TEInstanceDoBattleRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceDoBattleRsp, droparray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceDoBattleRsp, battleargs_),
  };
  TEInstanceDoBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceDoBattleRsp_descriptor_,
      TEInstanceDoBattleRsp::default_instance_,
      TEInstanceDoBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceDoBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceDoBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceDoBattleRsp));
  TEInstanceRaidStrongholdReq_descriptor_ = file->message_type(10);
  static const int TEInstanceRaidStrongholdReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceRaidStrongholdReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceRaidStrongholdReq, strongholdid_),
  };
  TEInstanceRaidStrongholdReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceRaidStrongholdReq_descriptor_,
      TEInstanceRaidStrongholdReq::default_instance_,
      TEInstanceRaidStrongholdReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceRaidStrongholdReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceRaidStrongholdReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceRaidStrongholdReq));
  TEInstanceRaidStrongholdRsp_descriptor_ = file->message_type(11);
  static const int TEInstanceRaidStrongholdRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceRaidStrongholdRsp, droparray_),
  };
  TEInstanceRaidStrongholdRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceRaidStrongholdRsp_descriptor_,
      TEInstanceRaidStrongholdRsp::default_instance_,
      TEInstanceRaidStrongholdRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceRaidStrongholdRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceRaidStrongholdRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceRaidStrongholdRsp));
  TEInstanceReportBattleReq_descriptor_ = file->message_type(12);
  static const int TEInstanceReportBattleReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReportBattleReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReportBattleReq, strongholdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReportBattleReq, battleret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReportBattleReq, battleresultbytes_),
  };
  TEInstanceReportBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceReportBattleReq_descriptor_,
      TEInstanceReportBattleReq::default_instance_,
      TEInstanceReportBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReportBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReportBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceReportBattleReq));
  TEInstanceReportBattleRsp_descriptor_ = file->message_type(13);
  static const int TEInstanceReportBattleRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReportBattleRsp, droparray_),
  };
  TEInstanceReportBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceReportBattleRsp_descriptor_,
      TEInstanceReportBattleRsp::default_instance_,
      TEInstanceReportBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReportBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReportBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceReportBattleRsp));
  TEInstanceReceiveStarRewardReq_descriptor_ = file->message_type(14);
  static const int TEInstanceReceiveStarRewardReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReceiveStarRewardReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReceiveStarRewardReq, starnum_),
  };
  TEInstanceReceiveStarRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceReceiveStarRewardReq_descriptor_,
      TEInstanceReceiveStarRewardReq::default_instance_,
      TEInstanceReceiveStarRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReceiveStarRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReceiveStarRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceReceiveStarRewardReq));
  TEInstanceReceiveStarRewardRsp_descriptor_ = file->message_type(15);
  static const int TEInstanceReceiveStarRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReceiveStarRewardRsp, rewardarray_),
  };
  TEInstanceReceiveStarRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceReceiveStarRewardRsp_descriptor_,
      TEInstanceReceiveStarRewardRsp::default_instance_,
      TEInstanceReceiveStarRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReceiveStarRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceReceiveStarRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceReceiveStarRewardRsp));
  TEInstanceResetStrongholdReq_descriptor_ = file->message_type(16);
  static const int TEInstanceResetStrongholdReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceResetStrongholdReq, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceResetStrongholdReq, strongholdid_),
  };
  TEInstanceResetStrongholdReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceResetStrongholdReq_descriptor_,
      TEInstanceResetStrongholdReq::default_instance_,
      TEInstanceResetStrongholdReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceResetStrongholdReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceResetStrongholdReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceResetStrongholdReq));
  TEInstanceProgressRankInfo_descriptor_ = file->message_type(17);
  static const int TEInstanceProgressRankInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceProgressRankInfo, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceProgressRankInfo, strongholdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceProgressRankInfo, strongholdtime_),
  };
  TEInstanceProgressRankInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceProgressRankInfo_descriptor_,
      TEInstanceProgressRankInfo::default_instance_,
      TEInstanceProgressRankInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceProgressRankInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceProgressRankInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceProgressRankInfo));
  TEInstanceGetProgressRankReq_descriptor_ = file->message_type(18);
  static const int TEInstanceGetProgressRankReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceGetProgressRankReq, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceGetProgressRankReq, limit_),
  };
  TEInstanceGetProgressRankReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceGetProgressRankReq_descriptor_,
      TEInstanceGetProgressRankReq::default_instance_,
      TEInstanceGetProgressRankReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceGetProgressRankReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceGetProgressRankReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceGetProgressRankReq));
  TEInstanceGetProgressRankRsp_descriptor_ = file->message_type(19);
  static const int TEInstanceGetProgressRankRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceGetProgressRankRsp, rankarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceGetProgressRankRsp, myrank_),
  };
  TEInstanceGetProgressRankRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceGetProgressRankRsp_descriptor_,
      TEInstanceGetProgressRankRsp::default_instance_,
      TEInstanceGetProgressRankRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceGetProgressRankRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceGetProgressRankRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceGetProgressRankRsp));
  TEInstanceInfoNotify_descriptor_ = file->message_type(20);
  static const int TEInstanceInfoNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceInfoNotify, chapterinfoarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceInfoNotify, resetnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceInfoNotify, resettime_),
  };
  TEInstanceInfoNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TEInstanceInfoNotify_descriptor_,
      TEInstanceInfoNotify::default_instance_,
      TEInstanceInfoNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceInfoNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TEInstanceInfoNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TEInstanceInfoNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fEInstance_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceChapterDetailInfo_descriptor_, &TEInstanceChapterDetailInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceChapterInfo_descriptor_, &TEInstanceChapterInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceInfoReq_descriptor_, &TEInstanceInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceInfoRsp_descriptor_, &TEInstanceInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceChapterInfoReq_descriptor_, &TEInstanceChapterInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceChapterInfoRsp_descriptor_, &TEInstanceChapterInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceArrChapterInfoReq_descriptor_, &TEInstanceArrChapterInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceArrChapterInfoRsp_descriptor_, &TEInstanceArrChapterInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceDoBattleReq_descriptor_, &TEInstanceDoBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceDoBattleRsp_descriptor_, &TEInstanceDoBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceRaidStrongholdReq_descriptor_, &TEInstanceRaidStrongholdReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceRaidStrongholdRsp_descriptor_, &TEInstanceRaidStrongholdRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceReportBattleReq_descriptor_, &TEInstanceReportBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceReportBattleRsp_descriptor_, &TEInstanceReportBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceReceiveStarRewardReq_descriptor_, &TEInstanceReceiveStarRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceReceiveStarRewardRsp_descriptor_, &TEInstanceReceiveStarRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceResetStrongholdReq_descriptor_, &TEInstanceResetStrongholdReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceProgressRankInfo_descriptor_, &TEInstanceProgressRankInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceGetProgressRankReq_descriptor_, &TEInstanceGetProgressRankReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceGetProgressRankRsp_descriptor_, &TEInstanceGetProgressRankRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TEInstanceInfoNotify_descriptor_, &TEInstanceInfoNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fEInstance_2eproto() {
  delete TEInstanceChapterDetailInfo::default_instance_;
  delete TEInstanceChapterDetailInfo_reflection_;
  delete TEInstanceChapterInfo::default_instance_;
  delete TEInstanceChapterInfo_reflection_;
  delete TEInstanceInfoReq::default_instance_;
  delete TEInstanceInfoReq_reflection_;
  delete TEInstanceInfoRsp::default_instance_;
  delete TEInstanceInfoRsp_reflection_;
  delete TEInstanceChapterInfoReq::default_instance_;
  delete TEInstanceChapterInfoReq_reflection_;
  delete TEInstanceChapterInfoRsp::default_instance_;
  delete TEInstanceChapterInfoRsp_reflection_;
  delete TEInstanceArrChapterInfoReq::default_instance_;
  delete TEInstanceArrChapterInfoReq_reflection_;
  delete TEInstanceArrChapterInfoRsp::default_instance_;
  delete TEInstanceArrChapterInfoRsp_reflection_;
  delete TEInstanceDoBattleReq::default_instance_;
  delete TEInstanceDoBattleReq_reflection_;
  delete TEInstanceDoBattleRsp::default_instance_;
  delete TEInstanceDoBattleRsp_reflection_;
  delete TEInstanceRaidStrongholdReq::default_instance_;
  delete TEInstanceRaidStrongholdReq_reflection_;
  delete TEInstanceRaidStrongholdRsp::default_instance_;
  delete TEInstanceRaidStrongholdRsp_reflection_;
  delete TEInstanceReportBattleReq::default_instance_;
  delete TEInstanceReportBattleReq_reflection_;
  delete TEInstanceReportBattleRsp::default_instance_;
  delete TEInstanceReportBattleRsp_reflection_;
  delete TEInstanceReceiveStarRewardReq::default_instance_;
  delete TEInstanceReceiveStarRewardReq_reflection_;
  delete TEInstanceReceiveStarRewardRsp::default_instance_;
  delete TEInstanceReceiveStarRewardRsp_reflection_;
  delete TEInstanceResetStrongholdReq::default_instance_;
  delete TEInstanceResetStrongholdReq_reflection_;
  delete TEInstanceProgressRankInfo::default_instance_;
  delete TEInstanceProgressRankInfo_reflection_;
  delete TEInstanceGetProgressRankReq::default_instance_;
  delete TEInstanceGetProgressRankReq_reflection_;
  delete TEInstanceGetProgressRankRsp::default_instance_;
  delete TEInstanceGetProgressRankRsp_reflection_;
  delete TEInstanceInfoNotify::default_instance_;
  delete TEInstanceInfoNotify_reflection_;
}

void protobuf_AddDesc_net_2fEInstance_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::pb::protobuf_AddDesc_net_2fBInstance_2eproto();
  ::pb::protobuf_AddDesc_net_2fBattle_2eproto();
  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023net/EInstance.proto\022\002pb\032\026net/CommonRew"
    "ard.proto\032\023net/BInstance.proto\032\020net/Batt"
    "le.proto\032\016net/User.proto\"\202\001\n\033TEInstanceC"
    "hapterDetailInfo\0224\n\017RewardInfoArray\030\001 \003("
    "\0132\033.pb.TBChapterStarRewardInfo\022-\n\017Strong"
    "holdArray\030\002 \003(\0132\024.pb.TBStrongholdInfo\"\317\001"
    "\n\025TEInstanceChapterInfo\022\021\n\tChapterId\030\001 \001"
    "(\r\022\017\n\007StarNum\030\002 \001(\r\022\016\n\006IsPass\030\003 \001(\010\022\017\n\007I"
    "sFirst\030\004 \001(\010\022\035\n\025ReceivedStarRewardNum\030\005 "
    "\001(\r\0223\n\nDetailInfo\030\006 \001(\0132\037.pb.TEInstanceC"
    "hapterDetailInfo\022\035\n\025MaxUnlockStrongholdI"
    "d\030\007 \001(\r\"\023\n\021TEInstanceInfoReq\"m\n\021TEInstan"
    "ceInfoRsp\0223\n\020ChapterInfoArray\030\001 \003(\0132\031.pb"
    ".TEInstanceChapterInfo\022\020\n\010ResetNum\030\002 \001(\r"
    "\022\021\n\tResetTime\030\003 \001(\004\"-\n\030TEInstanceChapter"
    "InfoReq\022\021\n\tChapterId\030\001 \001(\r\"J\n\030TEInstance"
    "ChapterInfoRsp\022.\n\013ChapterInfo\030\001 \001(\0132\031.pb"
    ".TEInstanceChapterInfo\"5\n\033TEInstanceArrC"
    "hapterInfoReq\022\026\n\016ChapterIdArray\030\001 \003(\r\"R\n"
    "\033TEInstanceArrChapterInfoRsp\0223\n\020ChapterI"
    "nfoArray\030\001 \003(\0132\031.pb.TEInstanceChapterInf"
    "o\"q\n\025TEInstanceDoBattleReq\022\021\n\tChapterId\030"
    "\001 \001(\r\022\024\n\014StrongholdId\030\002 \001(\r\022/\n\020BattleChe"
    "ckParam\030\004 \001(\0132\025.pb.TBattleCheckParam\"b\n\025"
    "TEInstanceDoBattleRsp\022$\n\tDropArray\030\001 \003(\013"
    "2\021.pb.TCommonReward\022#\n\nBattleArgs\030\002 \001(\0132"
    "\017.pb.TBattleArgs\"F\n\033TEInstanceRaidStrong"
    "holdReq\022\021\n\tChapterId\030\001 \001(\r\022\024\n\014Stronghold"
    "Id\030\002 \001(\r\"C\n\033TEInstanceRaidStrongholdRsp\022"
    "$\n\tDropArray\030\001 \003(\0132\021.pb.TCommonReward\"\205\001"
    "\n\031TEInstanceReportBattleReq\022\021\n\tChapterId"
    "\030\001 \001(\r\022\024\n\014StrongholdId\030\002 \001(\r\022$\n\tBattleRe"
    "t\030\003 \001(\0132\021.pb.TBattleResult\022\031\n\021BattleResu"
    "ltBytes\030\004 \001(\014\"A\n\031TEInstanceReportBattleR"
    "sp\022$\n\tDropArray\030\001 \003(\0132\021.pb.TCommonReward"
    "\"D\n\036TEInstanceReceiveStarRewardReq\022\021\n\tCh"
    "apterId\030\001 \001(\r\022\017\n\007StarNum\030\002 \001(\r\"H\n\036TEInst"
    "anceReceiveStarRewardRsp\022&\n\013RewardArray\030"
    "\001 \003(\0132\021.pb.TCommonReward\"G\n\034TEInstanceRe"
    "setStrongholdReq\022\021\n\tChapterId\030\001 \001(\r\022\024\n\014S"
    "trongholdId\030\002 \001(\r\"q\n\032TEInstanceProgressR"
    "ankInfo\022%\n\010UserInfo\030\001 \001(\0132\023.pb.TUserSimp"
    "leInfo\022\024\n\014StrongholdId\030\003 \001(\r\022\026\n\016Strongho"
    "ldTime\030\004 \001(\004\"=\n\034TEInstanceGetProgressRan"
    "kReq\022\016\n\006Offset\030\001 \001(\r\022\r\n\005Limit\030\002 \001(\r\"_\n\034T"
    "EInstanceGetProgressRankRsp\022/\n\007RankArr\030\001"
    " \003(\0132\036.pb.TEInstanceProgressRankInfo\022\016\n\006"
    "MyRank\030\002 \001(\005\"p\n\024TEInstanceInfoNotify\0223\n\020"
    "ChapterInfoArray\030\001 \003(\0132\031.pb.TEInstanceCh"
    "apterInfo\022\020\n\010ResetNum\030\002 \001(\r\022\021\n\tResetTime"
    "\030\003 \001(\004", 2006);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/EInstance.proto", &protobuf_RegisterTypes);
  TEInstanceChapterDetailInfo::default_instance_ = new TEInstanceChapterDetailInfo();
  TEInstanceChapterInfo::default_instance_ = new TEInstanceChapterInfo();
  TEInstanceInfoReq::default_instance_ = new TEInstanceInfoReq();
  TEInstanceInfoRsp::default_instance_ = new TEInstanceInfoRsp();
  TEInstanceChapterInfoReq::default_instance_ = new TEInstanceChapterInfoReq();
  TEInstanceChapterInfoRsp::default_instance_ = new TEInstanceChapterInfoRsp();
  TEInstanceArrChapterInfoReq::default_instance_ = new TEInstanceArrChapterInfoReq();
  TEInstanceArrChapterInfoRsp::default_instance_ = new TEInstanceArrChapterInfoRsp();
  TEInstanceDoBattleReq::default_instance_ = new TEInstanceDoBattleReq();
  TEInstanceDoBattleRsp::default_instance_ = new TEInstanceDoBattleRsp();
  TEInstanceRaidStrongholdReq::default_instance_ = new TEInstanceRaidStrongholdReq();
  TEInstanceRaidStrongholdRsp::default_instance_ = new TEInstanceRaidStrongholdRsp();
  TEInstanceReportBattleReq::default_instance_ = new TEInstanceReportBattleReq();
  TEInstanceReportBattleRsp::default_instance_ = new TEInstanceReportBattleRsp();
  TEInstanceReceiveStarRewardReq::default_instance_ = new TEInstanceReceiveStarRewardReq();
  TEInstanceReceiveStarRewardRsp::default_instance_ = new TEInstanceReceiveStarRewardRsp();
  TEInstanceResetStrongholdReq::default_instance_ = new TEInstanceResetStrongholdReq();
  TEInstanceProgressRankInfo::default_instance_ = new TEInstanceProgressRankInfo();
  TEInstanceGetProgressRankReq::default_instance_ = new TEInstanceGetProgressRankReq();
  TEInstanceGetProgressRankRsp::default_instance_ = new TEInstanceGetProgressRankRsp();
  TEInstanceInfoNotify::default_instance_ = new TEInstanceInfoNotify();
  TEInstanceChapterDetailInfo::default_instance_->InitAsDefaultInstance();
  TEInstanceChapterInfo::default_instance_->InitAsDefaultInstance();
  TEInstanceInfoReq::default_instance_->InitAsDefaultInstance();
  TEInstanceInfoRsp::default_instance_->InitAsDefaultInstance();
  TEInstanceChapterInfoReq::default_instance_->InitAsDefaultInstance();
  TEInstanceChapterInfoRsp::default_instance_->InitAsDefaultInstance();
  TEInstanceArrChapterInfoReq::default_instance_->InitAsDefaultInstance();
  TEInstanceArrChapterInfoRsp::default_instance_->InitAsDefaultInstance();
  TEInstanceDoBattleReq::default_instance_->InitAsDefaultInstance();
  TEInstanceDoBattleRsp::default_instance_->InitAsDefaultInstance();
  TEInstanceRaidStrongholdReq::default_instance_->InitAsDefaultInstance();
  TEInstanceRaidStrongholdRsp::default_instance_->InitAsDefaultInstance();
  TEInstanceReportBattleReq::default_instance_->InitAsDefaultInstance();
  TEInstanceReportBattleRsp::default_instance_->InitAsDefaultInstance();
  TEInstanceReceiveStarRewardReq::default_instance_->InitAsDefaultInstance();
  TEInstanceReceiveStarRewardRsp::default_instance_->InitAsDefaultInstance();
  TEInstanceResetStrongholdReq::default_instance_->InitAsDefaultInstance();
  TEInstanceProgressRankInfo::default_instance_->InitAsDefaultInstance();
  TEInstanceGetProgressRankReq::default_instance_->InitAsDefaultInstance();
  TEInstanceGetProgressRankRsp::default_instance_->InitAsDefaultInstance();
  TEInstanceInfoNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fEInstance_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fEInstance_2eproto {
  StaticDescriptorInitializer_net_2fEInstance_2eproto() {
    protobuf_AddDesc_net_2fEInstance_2eproto();
  }
} static_descriptor_initializer_net_2fEInstance_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TEInstanceChapterDetailInfo::kRewardInfoArrayFieldNumber;
const int TEInstanceChapterDetailInfo::kStrongholdArrayFieldNumber;
#endif  // !_MSC_VER

TEInstanceChapterDetailInfo::TEInstanceChapterDetailInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceChapterDetailInfo)
}

void TEInstanceChapterDetailInfo::InitAsDefaultInstance() {
}

TEInstanceChapterDetailInfo::TEInstanceChapterDetailInfo(const TEInstanceChapterDetailInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceChapterDetailInfo)
}

void TEInstanceChapterDetailInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceChapterDetailInfo::~TEInstanceChapterDetailInfo() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceChapterDetailInfo)
  SharedDtor();
}

void TEInstanceChapterDetailInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceChapterDetailInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceChapterDetailInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceChapterDetailInfo_descriptor_;
}

const TEInstanceChapterDetailInfo& TEInstanceChapterDetailInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceChapterDetailInfo* TEInstanceChapterDetailInfo::default_instance_ = NULL;

TEInstanceChapterDetailInfo* TEInstanceChapterDetailInfo::New() const {
  return new TEInstanceChapterDetailInfo;
}

void TEInstanceChapterDetailInfo::Clear() {
  rewardinfoarray_.Clear();
  strongholdarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceChapterDetailInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceChapterDetailInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TBChapterStarRewardInfo RewardInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardInfoArray;
        if (input->ExpectTag(18)) goto parse_StrongholdArray;
        break;
      }

      // repeated .pb.TBStrongholdInfo StrongholdArray = 2;
      case 2: {
        if (tag == 18) {
         parse_StrongholdArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_strongholdarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_StrongholdArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceChapterDetailInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceChapterDetailInfo)
  return false;
#undef DO_
}

void TEInstanceChapterDetailInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceChapterDetailInfo)
  // repeated .pb.TBChapterStarRewardInfo RewardInfoArray = 1;
  for (int i = 0; i < this->rewardinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardinfoarray(i), output);
  }

  // repeated .pb.TBStrongholdInfo StrongholdArray = 2;
  for (int i = 0; i < this->strongholdarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->strongholdarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceChapterDetailInfo)
}

::google::protobuf::uint8* TEInstanceChapterDetailInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceChapterDetailInfo)
  // repeated .pb.TBChapterStarRewardInfo RewardInfoArray = 1;
  for (int i = 0; i < this->rewardinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardinfoarray(i), target);
  }

  // repeated .pb.TBStrongholdInfo StrongholdArray = 2;
  for (int i = 0; i < this->strongholdarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->strongholdarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceChapterDetailInfo)
  return target;
}

int TEInstanceChapterDetailInfo::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TBChapterStarRewardInfo RewardInfoArray = 1;
  total_size += 1 * this->rewardinfoarray_size();
  for (int i = 0; i < this->rewardinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardinfoarray(i));
  }

  // repeated .pb.TBStrongholdInfo StrongholdArray = 2;
  total_size += 1 * this->strongholdarray_size();
  for (int i = 0; i < this->strongholdarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->strongholdarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceChapterDetailInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceChapterDetailInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceChapterDetailInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceChapterDetailInfo::MergeFrom(const TEInstanceChapterDetailInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardinfoarray_.MergeFrom(from.rewardinfoarray_);
  strongholdarray_.MergeFrom(from.strongholdarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceChapterDetailInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceChapterDetailInfo::CopyFrom(const TEInstanceChapterDetailInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceChapterDetailInfo::IsInitialized() const {

  return true;
}

void TEInstanceChapterDetailInfo::Swap(TEInstanceChapterDetailInfo* other) {
  if (other != this) {
    rewardinfoarray_.Swap(&other->rewardinfoarray_);
    strongholdarray_.Swap(&other->strongholdarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceChapterDetailInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceChapterDetailInfo_descriptor_;
  metadata.reflection = TEInstanceChapterDetailInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceChapterInfo::kChapterIdFieldNumber;
const int TEInstanceChapterInfo::kStarNumFieldNumber;
const int TEInstanceChapterInfo::kIsPassFieldNumber;
const int TEInstanceChapterInfo::kIsFirstFieldNumber;
const int TEInstanceChapterInfo::kReceivedStarRewardNumFieldNumber;
const int TEInstanceChapterInfo::kDetailInfoFieldNumber;
const int TEInstanceChapterInfo::kMaxUnlockStrongholdIdFieldNumber;
#endif  // !_MSC_VER

TEInstanceChapterInfo::TEInstanceChapterInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceChapterInfo)
}

void TEInstanceChapterInfo::InitAsDefaultInstance() {
  detailinfo_ = const_cast< ::pb::TEInstanceChapterDetailInfo*>(&::pb::TEInstanceChapterDetailInfo::default_instance());
}

TEInstanceChapterInfo::TEInstanceChapterInfo(const TEInstanceChapterInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceChapterInfo)
}

void TEInstanceChapterInfo::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  starnum_ = 0u;
  ispass_ = false;
  isfirst_ = false;
  receivedstarrewardnum_ = 0u;
  detailinfo_ = NULL;
  maxunlockstrongholdid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceChapterInfo::~TEInstanceChapterInfo() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceChapterInfo)
  SharedDtor();
}

void TEInstanceChapterInfo::SharedDtor() {
  if (this != default_instance_) {
    delete detailinfo_;
  }
}

void TEInstanceChapterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceChapterInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceChapterInfo_descriptor_;
}

const TEInstanceChapterInfo& TEInstanceChapterInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceChapterInfo* TEInstanceChapterInfo::default_instance_ = NULL;

TEInstanceChapterInfo* TEInstanceChapterInfo::New() const {
  return new TEInstanceChapterInfo;
}

void TEInstanceChapterInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TEInstanceChapterInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(chapterid_, receivedstarrewardnum_);
    if (has_detailinfo()) {
      if (detailinfo_ != NULL) detailinfo_->::pb::TEInstanceChapterDetailInfo::Clear();
    }
    maxunlockstrongholdid_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceChapterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceChapterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StarNum;
        break;
      }

      // optional uint32 StarNum = 2;
      case 2: {
        if (tag == 16) {
         parse_StarNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starnum_)));
          set_has_starnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_IsPass;
        break;
      }

      // optional bool IsPass = 3;
      case 3: {
        if (tag == 24) {
         parse_IsPass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispass_)));
          set_has_ispass();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_IsFirst;
        break;
      }

      // optional bool IsFirst = 4;
      case 4: {
        if (tag == 32) {
         parse_IsFirst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfirst_)));
          set_has_isfirst();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ReceivedStarRewardNum;
        break;
      }

      // optional uint32 ReceivedStarRewardNum = 5;
      case 5: {
        if (tag == 40) {
         parse_ReceivedStarRewardNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receivedstarrewardnum_)));
          set_has_receivedstarrewardnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_DetailInfo;
        break;
      }

      // optional .pb.TEInstanceChapterDetailInfo DetailInfo = 6;
      case 6: {
        if (tag == 50) {
         parse_DetailInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_detailinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_MaxUnlockStrongholdId;
        break;
      }

      // optional uint32 MaxUnlockStrongholdId = 7;
      case 7: {
        if (tag == 56) {
         parse_MaxUnlockStrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxunlockstrongholdid_)));
          set_has_maxunlockstrongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceChapterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceChapterInfo)
  return false;
#undef DO_
}

void TEInstanceChapterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceChapterInfo)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StarNum = 2;
  if (has_starnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->starnum(), output);
  }

  // optional bool IsPass = 3;
  if (has_ispass()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ispass(), output);
  }

  // optional bool IsFirst = 4;
  if (has_isfirst()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isfirst(), output);
  }

  // optional uint32 ReceivedStarRewardNum = 5;
  if (has_receivedstarrewardnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->receivedstarrewardnum(), output);
  }

  // optional .pb.TEInstanceChapterDetailInfo DetailInfo = 6;
  if (has_detailinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->detailinfo(), output);
  }

  // optional uint32 MaxUnlockStrongholdId = 7;
  if (has_maxunlockstrongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->maxunlockstrongholdid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceChapterInfo)
}

::google::protobuf::uint8* TEInstanceChapterInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceChapterInfo)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StarNum = 2;
  if (has_starnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->starnum(), target);
  }

  // optional bool IsPass = 3;
  if (has_ispass()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->ispass(), target);
  }

  // optional bool IsFirst = 4;
  if (has_isfirst()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isfirst(), target);
  }

  // optional uint32 ReceivedStarRewardNum = 5;
  if (has_receivedstarrewardnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->receivedstarrewardnum(), target);
  }

  // optional .pb.TEInstanceChapterDetailInfo DetailInfo = 6;
  if (has_detailinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->detailinfo(), target);
  }

  // optional uint32 MaxUnlockStrongholdId = 7;
  if (has_maxunlockstrongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->maxunlockstrongholdid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceChapterInfo)
  return target;
}

int TEInstanceChapterInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StarNum = 2;
    if (has_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starnum());
    }

    // optional bool IsPass = 3;
    if (has_ispass()) {
      total_size += 1 + 1;
    }

    // optional bool IsFirst = 4;
    if (has_isfirst()) {
      total_size += 1 + 1;
    }

    // optional uint32 ReceivedStarRewardNum = 5;
    if (has_receivedstarrewardnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receivedstarrewardnum());
    }

    // optional .pb.TEInstanceChapterDetailInfo DetailInfo = 6;
    if (has_detailinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->detailinfo());
    }

    // optional uint32 MaxUnlockStrongholdId = 7;
    if (has_maxunlockstrongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxunlockstrongholdid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceChapterInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceChapterInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceChapterInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceChapterInfo::MergeFrom(const TEInstanceChapterInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_starnum()) {
      set_starnum(from.starnum());
    }
    if (from.has_ispass()) {
      set_ispass(from.ispass());
    }
    if (from.has_isfirst()) {
      set_isfirst(from.isfirst());
    }
    if (from.has_receivedstarrewardnum()) {
      set_receivedstarrewardnum(from.receivedstarrewardnum());
    }
    if (from.has_detailinfo()) {
      mutable_detailinfo()->::pb::TEInstanceChapterDetailInfo::MergeFrom(from.detailinfo());
    }
    if (from.has_maxunlockstrongholdid()) {
      set_maxunlockstrongholdid(from.maxunlockstrongholdid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceChapterInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceChapterInfo::CopyFrom(const TEInstanceChapterInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceChapterInfo::IsInitialized() const {

  return true;
}

void TEInstanceChapterInfo::Swap(TEInstanceChapterInfo* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(starnum_, other->starnum_);
    std::swap(ispass_, other->ispass_);
    std::swap(isfirst_, other->isfirst_);
    std::swap(receivedstarrewardnum_, other->receivedstarrewardnum_);
    std::swap(detailinfo_, other->detailinfo_);
    std::swap(maxunlockstrongholdid_, other->maxunlockstrongholdid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceChapterInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceChapterInfo_descriptor_;
  metadata.reflection = TEInstanceChapterInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TEInstanceInfoReq::TEInstanceInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceInfoReq)
}

void TEInstanceInfoReq::InitAsDefaultInstance() {
}

TEInstanceInfoReq::TEInstanceInfoReq(const TEInstanceInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceInfoReq)
}

void TEInstanceInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceInfoReq::~TEInstanceInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceInfoReq)
  SharedDtor();
}

void TEInstanceInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceInfoReq_descriptor_;
}

const TEInstanceInfoReq& TEInstanceInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceInfoReq* TEInstanceInfoReq::default_instance_ = NULL;

TEInstanceInfoReq* TEInstanceInfoReq::New() const {
  return new TEInstanceInfoReq;
}

void TEInstanceInfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceInfoReq)
  return false;
#undef DO_
}

void TEInstanceInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceInfoReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceInfoReq)
}

::google::protobuf::uint8* TEInstanceInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceInfoReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceInfoReq)
  return target;
}

int TEInstanceInfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceInfoReq::MergeFrom(const TEInstanceInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceInfoReq::CopyFrom(const TEInstanceInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceInfoReq::IsInitialized() const {

  return true;
}

void TEInstanceInfoReq::Swap(TEInstanceInfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceInfoReq_descriptor_;
  metadata.reflection = TEInstanceInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceInfoRsp::kChapterInfoArrayFieldNumber;
const int TEInstanceInfoRsp::kResetNumFieldNumber;
const int TEInstanceInfoRsp::kResetTimeFieldNumber;
#endif  // !_MSC_VER

TEInstanceInfoRsp::TEInstanceInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceInfoRsp)
}

void TEInstanceInfoRsp::InitAsDefaultInstance() {
}

TEInstanceInfoRsp::TEInstanceInfoRsp(const TEInstanceInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceInfoRsp)
}

void TEInstanceInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  resetnum_ = 0u;
  resettime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceInfoRsp::~TEInstanceInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceInfoRsp)
  SharedDtor();
}

void TEInstanceInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceInfoRsp_descriptor_;
}

const TEInstanceInfoRsp& TEInstanceInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceInfoRsp* TEInstanceInfoRsp::default_instance_ = NULL;

TEInstanceInfoRsp* TEInstanceInfoRsp::New() const {
  return new TEInstanceInfoRsp;
}

void TEInstanceInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TEInstanceInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(resettime_, resetnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  chapterinfoarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TEInstanceChapterInfo ChapterInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_ChapterInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chapterinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ChapterInfoArray;
        if (input->ExpectTag(16)) goto parse_ResetNum;
        break;
      }

      // optional uint32 ResetNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ResetNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resetnum_)));
          set_has_resetnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ResetTime;
        break;
      }

      // optional uint64 ResetTime = 3;
      case 3: {
        if (tag == 24) {
         parse_ResetTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &resettime_)));
          set_has_resettime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceInfoRsp)
  return false;
#undef DO_
}

void TEInstanceInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceInfoRsp)
  // repeated .pb.TEInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->chapterinfoarray(i), output);
  }

  // optional uint32 ResetNum = 2;
  if (has_resetnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->resetnum(), output);
  }

  // optional uint64 ResetTime = 3;
  if (has_resettime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->resettime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceInfoRsp)
}

::google::protobuf::uint8* TEInstanceInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceInfoRsp)
  // repeated .pb.TEInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->chapterinfoarray(i), target);
  }

  // optional uint32 ResetNum = 2;
  if (has_resetnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->resetnum(), target);
  }

  // optional uint64 ResetTime = 3;
  if (has_resettime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->resettime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceInfoRsp)
  return target;
}

int TEInstanceInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 ResetNum = 2;
    if (has_resetnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->resetnum());
    }

    // optional uint64 ResetTime = 3;
    if (has_resettime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->resettime());
    }

  }
  // repeated .pb.TEInstanceChapterInfo ChapterInfoArray = 1;
  total_size += 1 * this->chapterinfoarray_size();
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chapterinfoarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceInfoRsp::MergeFrom(const TEInstanceInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  chapterinfoarray_.MergeFrom(from.chapterinfoarray_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_resetnum()) {
      set_resetnum(from.resetnum());
    }
    if (from.has_resettime()) {
      set_resettime(from.resettime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceInfoRsp::CopyFrom(const TEInstanceInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceInfoRsp::IsInitialized() const {

  return true;
}

void TEInstanceInfoRsp::Swap(TEInstanceInfoRsp* other) {
  if (other != this) {
    chapterinfoarray_.Swap(&other->chapterinfoarray_);
    std::swap(resetnum_, other->resetnum_);
    std::swap(resettime_, other->resettime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceInfoRsp_descriptor_;
  metadata.reflection = TEInstanceInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceChapterInfoReq::kChapterIdFieldNumber;
#endif  // !_MSC_VER

TEInstanceChapterInfoReq::TEInstanceChapterInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceChapterInfoReq)
}

void TEInstanceChapterInfoReq::InitAsDefaultInstance() {
}

TEInstanceChapterInfoReq::TEInstanceChapterInfoReq(const TEInstanceChapterInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceChapterInfoReq)
}

void TEInstanceChapterInfoReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceChapterInfoReq::~TEInstanceChapterInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceChapterInfoReq)
  SharedDtor();
}

void TEInstanceChapterInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceChapterInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceChapterInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceChapterInfoReq_descriptor_;
}

const TEInstanceChapterInfoReq& TEInstanceChapterInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceChapterInfoReq* TEInstanceChapterInfoReq::default_instance_ = NULL;

TEInstanceChapterInfoReq* TEInstanceChapterInfoReq::New() const {
  return new TEInstanceChapterInfoReq;
}

void TEInstanceChapterInfoReq::Clear() {
  chapterid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceChapterInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceChapterInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceChapterInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceChapterInfoReq)
  return false;
#undef DO_
}

void TEInstanceChapterInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceChapterInfoReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceChapterInfoReq)
}

::google::protobuf::uint8* TEInstanceChapterInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceChapterInfoReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceChapterInfoReq)
  return target;
}

int TEInstanceChapterInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceChapterInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceChapterInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceChapterInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceChapterInfoReq::MergeFrom(const TEInstanceChapterInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceChapterInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceChapterInfoReq::CopyFrom(const TEInstanceChapterInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceChapterInfoReq::IsInitialized() const {

  return true;
}

void TEInstanceChapterInfoReq::Swap(TEInstanceChapterInfoReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceChapterInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceChapterInfoReq_descriptor_;
  metadata.reflection = TEInstanceChapterInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceChapterInfoRsp::kChapterInfoFieldNumber;
#endif  // !_MSC_VER

TEInstanceChapterInfoRsp::TEInstanceChapterInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceChapterInfoRsp)
}

void TEInstanceChapterInfoRsp::InitAsDefaultInstance() {
  chapterinfo_ = const_cast< ::pb::TEInstanceChapterInfo*>(&::pb::TEInstanceChapterInfo::default_instance());
}

TEInstanceChapterInfoRsp::TEInstanceChapterInfoRsp(const TEInstanceChapterInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceChapterInfoRsp)
}

void TEInstanceChapterInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  chapterinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceChapterInfoRsp::~TEInstanceChapterInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceChapterInfoRsp)
  SharedDtor();
}

void TEInstanceChapterInfoRsp::SharedDtor() {
  if (this != default_instance_) {
    delete chapterinfo_;
  }
}

void TEInstanceChapterInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceChapterInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceChapterInfoRsp_descriptor_;
}

const TEInstanceChapterInfoRsp& TEInstanceChapterInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceChapterInfoRsp* TEInstanceChapterInfoRsp::default_instance_ = NULL;

TEInstanceChapterInfoRsp* TEInstanceChapterInfoRsp::New() const {
  return new TEInstanceChapterInfoRsp;
}

void TEInstanceChapterInfoRsp::Clear() {
  if (has_chapterinfo()) {
    if (chapterinfo_ != NULL) chapterinfo_->::pb::TEInstanceChapterInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceChapterInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceChapterInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TEInstanceChapterInfo ChapterInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chapterinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceChapterInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceChapterInfoRsp)
  return false;
#undef DO_
}

void TEInstanceChapterInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceChapterInfoRsp)
  // optional .pb.TEInstanceChapterInfo ChapterInfo = 1;
  if (has_chapterinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->chapterinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceChapterInfoRsp)
}

::google::protobuf::uint8* TEInstanceChapterInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceChapterInfoRsp)
  // optional .pb.TEInstanceChapterInfo ChapterInfo = 1;
  if (has_chapterinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->chapterinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceChapterInfoRsp)
  return target;
}

int TEInstanceChapterInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TEInstanceChapterInfo ChapterInfo = 1;
    if (has_chapterinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->chapterinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceChapterInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceChapterInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceChapterInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceChapterInfoRsp::MergeFrom(const TEInstanceChapterInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterinfo()) {
      mutable_chapterinfo()->::pb::TEInstanceChapterInfo::MergeFrom(from.chapterinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceChapterInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceChapterInfoRsp::CopyFrom(const TEInstanceChapterInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceChapterInfoRsp::IsInitialized() const {

  return true;
}

void TEInstanceChapterInfoRsp::Swap(TEInstanceChapterInfoRsp* other) {
  if (other != this) {
    std::swap(chapterinfo_, other->chapterinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceChapterInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceChapterInfoRsp_descriptor_;
  metadata.reflection = TEInstanceChapterInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceArrChapterInfoReq::kChapterIdArrayFieldNumber;
#endif  // !_MSC_VER

TEInstanceArrChapterInfoReq::TEInstanceArrChapterInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceArrChapterInfoReq)
}

void TEInstanceArrChapterInfoReq::InitAsDefaultInstance() {
}

TEInstanceArrChapterInfoReq::TEInstanceArrChapterInfoReq(const TEInstanceArrChapterInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceArrChapterInfoReq)
}

void TEInstanceArrChapterInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceArrChapterInfoReq::~TEInstanceArrChapterInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceArrChapterInfoReq)
  SharedDtor();
}

void TEInstanceArrChapterInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceArrChapterInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceArrChapterInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceArrChapterInfoReq_descriptor_;
}

const TEInstanceArrChapterInfoReq& TEInstanceArrChapterInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceArrChapterInfoReq* TEInstanceArrChapterInfoReq::default_instance_ = NULL;

TEInstanceArrChapterInfoReq* TEInstanceArrChapterInfoReq::New() const {
  return new TEInstanceArrChapterInfoReq;
}

void TEInstanceArrChapterInfoReq::Clear() {
  chapteridarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceArrChapterInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceArrChapterInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ChapterIdArray = 1;
      case 1: {
        if (tag == 8) {
         parse_ChapterIdArray:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_chapteridarray())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_chapteridarray())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ChapterIdArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceArrChapterInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceArrChapterInfoReq)
  return false;
#undef DO_
}

void TEInstanceArrChapterInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceArrChapterInfoReq)
  // repeated uint32 ChapterIdArray = 1;
  for (int i = 0; i < this->chapteridarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->chapteridarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceArrChapterInfoReq)
}

::google::protobuf::uint8* TEInstanceArrChapterInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceArrChapterInfoReq)
  // repeated uint32 ChapterIdArray = 1;
  for (int i = 0; i < this->chapteridarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->chapteridarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceArrChapterInfoReq)
  return target;
}

int TEInstanceArrChapterInfoReq::ByteSize() const {
  int total_size = 0;

  // repeated uint32 ChapterIdArray = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->chapteridarray_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->chapteridarray(i));
    }
    total_size += 1 * this->chapteridarray_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceArrChapterInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceArrChapterInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceArrChapterInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceArrChapterInfoReq::MergeFrom(const TEInstanceArrChapterInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  chapteridarray_.MergeFrom(from.chapteridarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceArrChapterInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceArrChapterInfoReq::CopyFrom(const TEInstanceArrChapterInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceArrChapterInfoReq::IsInitialized() const {

  return true;
}

void TEInstanceArrChapterInfoReq::Swap(TEInstanceArrChapterInfoReq* other) {
  if (other != this) {
    chapteridarray_.Swap(&other->chapteridarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceArrChapterInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceArrChapterInfoReq_descriptor_;
  metadata.reflection = TEInstanceArrChapterInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceArrChapterInfoRsp::kChapterInfoArrayFieldNumber;
#endif  // !_MSC_VER

TEInstanceArrChapterInfoRsp::TEInstanceArrChapterInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceArrChapterInfoRsp)
}

void TEInstanceArrChapterInfoRsp::InitAsDefaultInstance() {
}

TEInstanceArrChapterInfoRsp::TEInstanceArrChapterInfoRsp(const TEInstanceArrChapterInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceArrChapterInfoRsp)
}

void TEInstanceArrChapterInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceArrChapterInfoRsp::~TEInstanceArrChapterInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceArrChapterInfoRsp)
  SharedDtor();
}

void TEInstanceArrChapterInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceArrChapterInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceArrChapterInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceArrChapterInfoRsp_descriptor_;
}

const TEInstanceArrChapterInfoRsp& TEInstanceArrChapterInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceArrChapterInfoRsp* TEInstanceArrChapterInfoRsp::default_instance_ = NULL;

TEInstanceArrChapterInfoRsp* TEInstanceArrChapterInfoRsp::New() const {
  return new TEInstanceArrChapterInfoRsp;
}

void TEInstanceArrChapterInfoRsp::Clear() {
  chapterinfoarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceArrChapterInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceArrChapterInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TEInstanceChapterInfo ChapterInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_ChapterInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chapterinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ChapterInfoArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceArrChapterInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceArrChapterInfoRsp)
  return false;
#undef DO_
}

void TEInstanceArrChapterInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceArrChapterInfoRsp)
  // repeated .pb.TEInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->chapterinfoarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceArrChapterInfoRsp)
}

::google::protobuf::uint8* TEInstanceArrChapterInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceArrChapterInfoRsp)
  // repeated .pb.TEInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->chapterinfoarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceArrChapterInfoRsp)
  return target;
}

int TEInstanceArrChapterInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TEInstanceChapterInfo ChapterInfoArray = 1;
  total_size += 1 * this->chapterinfoarray_size();
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chapterinfoarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceArrChapterInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceArrChapterInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceArrChapterInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceArrChapterInfoRsp::MergeFrom(const TEInstanceArrChapterInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  chapterinfoarray_.MergeFrom(from.chapterinfoarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceArrChapterInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceArrChapterInfoRsp::CopyFrom(const TEInstanceArrChapterInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceArrChapterInfoRsp::IsInitialized() const {

  return true;
}

void TEInstanceArrChapterInfoRsp::Swap(TEInstanceArrChapterInfoRsp* other) {
  if (other != this) {
    chapterinfoarray_.Swap(&other->chapterinfoarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceArrChapterInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceArrChapterInfoRsp_descriptor_;
  metadata.reflection = TEInstanceArrChapterInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceDoBattleReq::kChapterIdFieldNumber;
const int TEInstanceDoBattleReq::kStrongholdIdFieldNumber;
const int TEInstanceDoBattleReq::kBattleCheckParamFieldNumber;
#endif  // !_MSC_VER

TEInstanceDoBattleReq::TEInstanceDoBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceDoBattleReq)
}

void TEInstanceDoBattleReq::InitAsDefaultInstance() {
  battlecheckparam_ = const_cast< ::pb::TBattleCheckParam*>(&::pb::TBattleCheckParam::default_instance());
}

TEInstanceDoBattleReq::TEInstanceDoBattleReq(const TEInstanceDoBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceDoBattleReq)
}

void TEInstanceDoBattleReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  strongholdid_ = 0u;
  battlecheckparam_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceDoBattleReq::~TEInstanceDoBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceDoBattleReq)
  SharedDtor();
}

void TEInstanceDoBattleReq::SharedDtor() {
  if (this != default_instance_) {
    delete battlecheckparam_;
  }
}

void TEInstanceDoBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceDoBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceDoBattleReq_descriptor_;
}

const TEInstanceDoBattleReq& TEInstanceDoBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceDoBattleReq* TEInstanceDoBattleReq::default_instance_ = NULL;

TEInstanceDoBattleReq* TEInstanceDoBattleReq::New() const {
  return new TEInstanceDoBattleReq;
}

void TEInstanceDoBattleReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TEInstanceDoBattleReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(chapterid_, strongholdid_);
    if (has_battlecheckparam()) {
      if (battlecheckparam_ != NULL) battlecheckparam_->::pb::TBattleCheckParam::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceDoBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceDoBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StrongholdId;
        break;
      }

      // optional uint32 StrongholdId = 2;
      case 2: {
        if (tag == 16) {
         parse_StrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_BattleCheckParam;
        break;
      }

      // optional .pb.TBattleCheckParam BattleCheckParam = 4;
      case 4: {
        if (tag == 34) {
         parse_BattleCheckParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battlecheckparam()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceDoBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceDoBattleReq)
  return false;
#undef DO_
}

void TEInstanceDoBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceDoBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strongholdid(), output);
  }

  // optional .pb.TBattleCheckParam BattleCheckParam = 4;
  if (has_battlecheckparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->battlecheckparam(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceDoBattleReq)
}

::google::protobuf::uint8* TEInstanceDoBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceDoBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strongholdid(), target);
  }

  // optional .pb.TBattleCheckParam BattleCheckParam = 4;
  if (has_battlecheckparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->battlecheckparam(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceDoBattleReq)
  return target;
}

int TEInstanceDoBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StrongholdId = 2;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdid());
    }

    // optional .pb.TBattleCheckParam BattleCheckParam = 4;
    if (has_battlecheckparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battlecheckparam());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceDoBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceDoBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceDoBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceDoBattleReq::MergeFrom(const TEInstanceDoBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
    if (from.has_battlecheckparam()) {
      mutable_battlecheckparam()->::pb::TBattleCheckParam::MergeFrom(from.battlecheckparam());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceDoBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceDoBattleReq::CopyFrom(const TEInstanceDoBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceDoBattleReq::IsInitialized() const {

  return true;
}

void TEInstanceDoBattleReq::Swap(TEInstanceDoBattleReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(battlecheckparam_, other->battlecheckparam_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceDoBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceDoBattleReq_descriptor_;
  metadata.reflection = TEInstanceDoBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceDoBattleRsp::kDropArrayFieldNumber;
const int TEInstanceDoBattleRsp::kBattleArgsFieldNumber;
#endif  // !_MSC_VER

TEInstanceDoBattleRsp::TEInstanceDoBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceDoBattleRsp)
}

void TEInstanceDoBattleRsp::InitAsDefaultInstance() {
  battleargs_ = const_cast< ::pb::TBattleArgs*>(&::pb::TBattleArgs::default_instance());
}

TEInstanceDoBattleRsp::TEInstanceDoBattleRsp(const TEInstanceDoBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceDoBattleRsp)
}

void TEInstanceDoBattleRsp::SharedCtor() {
  _cached_size_ = 0;
  battleargs_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceDoBattleRsp::~TEInstanceDoBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceDoBattleRsp)
  SharedDtor();
}

void TEInstanceDoBattleRsp::SharedDtor() {
  if (this != default_instance_) {
    delete battleargs_;
  }
}

void TEInstanceDoBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceDoBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceDoBattleRsp_descriptor_;
}

const TEInstanceDoBattleRsp& TEInstanceDoBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceDoBattleRsp* TEInstanceDoBattleRsp::default_instance_ = NULL;

TEInstanceDoBattleRsp* TEInstanceDoBattleRsp::New() const {
  return new TEInstanceDoBattleRsp;
}

void TEInstanceDoBattleRsp::Clear() {
  if (has_battleargs()) {
    if (battleargs_ != NULL) battleargs_->::pb::TBattleArgs::Clear();
  }
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceDoBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceDoBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectTag(18)) goto parse_BattleArgs;
        break;
      }

      // optional .pb.TBattleArgs BattleArgs = 2;
      case 2: {
        if (tag == 18) {
         parse_BattleArgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleargs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceDoBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceDoBattleRsp)
  return false;
#undef DO_
}

void TEInstanceDoBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceDoBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  // optional .pb.TBattleArgs BattleArgs = 2;
  if (has_battleargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->battleargs(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceDoBattleRsp)
}

::google::protobuf::uint8* TEInstanceDoBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceDoBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  // optional .pb.TBattleArgs BattleArgs = 2;
  if (has_battleargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->battleargs(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceDoBattleRsp)
  return target;
}

int TEInstanceDoBattleRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .pb.TBattleArgs BattleArgs = 2;
    if (has_battleargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleargs());
    }

  }
  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceDoBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceDoBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceDoBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceDoBattleRsp::MergeFrom(const TEInstanceDoBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_battleargs()) {
      mutable_battleargs()->::pb::TBattleArgs::MergeFrom(from.battleargs());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceDoBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceDoBattleRsp::CopyFrom(const TEInstanceDoBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceDoBattleRsp::IsInitialized() const {

  if (has_battleargs()) {
    if (!this->battleargs().IsInitialized()) return false;
  }
  return true;
}

void TEInstanceDoBattleRsp::Swap(TEInstanceDoBattleRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(battleargs_, other->battleargs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceDoBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceDoBattleRsp_descriptor_;
  metadata.reflection = TEInstanceDoBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceRaidStrongholdReq::kChapterIdFieldNumber;
const int TEInstanceRaidStrongholdReq::kStrongholdIdFieldNumber;
#endif  // !_MSC_VER

TEInstanceRaidStrongholdReq::TEInstanceRaidStrongholdReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceRaidStrongholdReq)
}

void TEInstanceRaidStrongholdReq::InitAsDefaultInstance() {
}

TEInstanceRaidStrongholdReq::TEInstanceRaidStrongholdReq(const TEInstanceRaidStrongholdReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceRaidStrongholdReq)
}

void TEInstanceRaidStrongholdReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  strongholdid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceRaidStrongholdReq::~TEInstanceRaidStrongholdReq() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceRaidStrongholdReq)
  SharedDtor();
}

void TEInstanceRaidStrongholdReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceRaidStrongholdReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceRaidStrongholdReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceRaidStrongholdReq_descriptor_;
}

const TEInstanceRaidStrongholdReq& TEInstanceRaidStrongholdReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceRaidStrongholdReq* TEInstanceRaidStrongholdReq::default_instance_ = NULL;

TEInstanceRaidStrongholdReq* TEInstanceRaidStrongholdReq::New() const {
  return new TEInstanceRaidStrongholdReq;
}

void TEInstanceRaidStrongholdReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TEInstanceRaidStrongholdReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(chapterid_, strongholdid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceRaidStrongholdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceRaidStrongholdReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StrongholdId;
        break;
      }

      // optional uint32 StrongholdId = 2;
      case 2: {
        if (tag == 16) {
         parse_StrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceRaidStrongholdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceRaidStrongholdReq)
  return false;
#undef DO_
}

void TEInstanceRaidStrongholdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceRaidStrongholdReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strongholdid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceRaidStrongholdReq)
}

::google::protobuf::uint8* TEInstanceRaidStrongholdReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceRaidStrongholdReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strongholdid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceRaidStrongholdReq)
  return target;
}

int TEInstanceRaidStrongholdReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StrongholdId = 2;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceRaidStrongholdReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceRaidStrongholdReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceRaidStrongholdReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceRaidStrongholdReq::MergeFrom(const TEInstanceRaidStrongholdReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceRaidStrongholdReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceRaidStrongholdReq::CopyFrom(const TEInstanceRaidStrongholdReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceRaidStrongholdReq::IsInitialized() const {

  return true;
}

void TEInstanceRaidStrongholdReq::Swap(TEInstanceRaidStrongholdReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceRaidStrongholdReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceRaidStrongholdReq_descriptor_;
  metadata.reflection = TEInstanceRaidStrongholdReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceRaidStrongholdRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TEInstanceRaidStrongholdRsp::TEInstanceRaidStrongholdRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceRaidStrongholdRsp)
}

void TEInstanceRaidStrongholdRsp::InitAsDefaultInstance() {
}

TEInstanceRaidStrongholdRsp::TEInstanceRaidStrongholdRsp(const TEInstanceRaidStrongholdRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceRaidStrongholdRsp)
}

void TEInstanceRaidStrongholdRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceRaidStrongholdRsp::~TEInstanceRaidStrongholdRsp() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceRaidStrongholdRsp)
  SharedDtor();
}

void TEInstanceRaidStrongholdRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceRaidStrongholdRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceRaidStrongholdRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceRaidStrongholdRsp_descriptor_;
}

const TEInstanceRaidStrongholdRsp& TEInstanceRaidStrongholdRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceRaidStrongholdRsp* TEInstanceRaidStrongholdRsp::default_instance_ = NULL;

TEInstanceRaidStrongholdRsp* TEInstanceRaidStrongholdRsp::New() const {
  return new TEInstanceRaidStrongholdRsp;
}

void TEInstanceRaidStrongholdRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceRaidStrongholdRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceRaidStrongholdRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceRaidStrongholdRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceRaidStrongholdRsp)
  return false;
#undef DO_
}

void TEInstanceRaidStrongholdRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceRaidStrongholdRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceRaidStrongholdRsp)
}

::google::protobuf::uint8* TEInstanceRaidStrongholdRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceRaidStrongholdRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceRaidStrongholdRsp)
  return target;
}

int TEInstanceRaidStrongholdRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceRaidStrongholdRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceRaidStrongholdRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceRaidStrongholdRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceRaidStrongholdRsp::MergeFrom(const TEInstanceRaidStrongholdRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceRaidStrongholdRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceRaidStrongholdRsp::CopyFrom(const TEInstanceRaidStrongholdRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceRaidStrongholdRsp::IsInitialized() const {

  return true;
}

void TEInstanceRaidStrongholdRsp::Swap(TEInstanceRaidStrongholdRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceRaidStrongholdRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceRaidStrongholdRsp_descriptor_;
  metadata.reflection = TEInstanceRaidStrongholdRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceReportBattleReq::kChapterIdFieldNumber;
const int TEInstanceReportBattleReq::kStrongholdIdFieldNumber;
const int TEInstanceReportBattleReq::kBattleRetFieldNumber;
const int TEInstanceReportBattleReq::kBattleResultBytesFieldNumber;
#endif  // !_MSC_VER

TEInstanceReportBattleReq::TEInstanceReportBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceReportBattleReq)
}

void TEInstanceReportBattleReq::InitAsDefaultInstance() {
  battleret_ = const_cast< ::pb::TBattleResult*>(&::pb::TBattleResult::default_instance());
}

TEInstanceReportBattleReq::TEInstanceReportBattleReq(const TEInstanceReportBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceReportBattleReq)
}

void TEInstanceReportBattleReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  chapterid_ = 0u;
  strongholdid_ = 0u;
  battleret_ = NULL;
  battleresultbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceReportBattleReq::~TEInstanceReportBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceReportBattleReq)
  SharedDtor();
}

void TEInstanceReportBattleReq::SharedDtor() {
  if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleresultbytes_;
  }
  if (this != default_instance_) {
    delete battleret_;
  }
}

void TEInstanceReportBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceReportBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceReportBattleReq_descriptor_;
}

const TEInstanceReportBattleReq& TEInstanceReportBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceReportBattleReq* TEInstanceReportBattleReq::default_instance_ = NULL;

TEInstanceReportBattleReq* TEInstanceReportBattleReq::New() const {
  return new TEInstanceReportBattleReq;
}

void TEInstanceReportBattleReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TEInstanceReportBattleReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(chapterid_, strongholdid_);
    if (has_battleret()) {
      if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
    }
    if (has_battleresultbytes()) {
      if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        battleresultbytes_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceReportBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceReportBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StrongholdId;
        break;
      }

      // optional uint32 StrongholdId = 2;
      case 2: {
        if (tag == 16) {
         parse_StrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BattleRet;
        break;
      }

      // optional .pb.TBattleResult BattleRet = 3;
      case 3: {
        if (tag == 26) {
         parse_BattleRet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleret()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_BattleResultBytes;
        break;
      }

      // optional bytes BattleResultBytes = 4;
      case 4: {
        if (tag == 34) {
         parse_BattleResultBytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_battleresultbytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceReportBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceReportBattleReq)
  return false;
#undef DO_
}

void TEInstanceReportBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceReportBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strongholdid(), output);
  }

  // optional .pb.TBattleResult BattleRet = 3;
  if (has_battleret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->battleret(), output);
  }

  // optional bytes BattleResultBytes = 4;
  if (has_battleresultbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->battleresultbytes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceReportBattleReq)
}

::google::protobuf::uint8* TEInstanceReportBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceReportBattleReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strongholdid(), target);
  }

  // optional .pb.TBattleResult BattleRet = 3;
  if (has_battleret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->battleret(), target);
  }

  // optional bytes BattleResultBytes = 4;
  if (has_battleresultbytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->battleresultbytes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceReportBattleReq)
  return target;
}

int TEInstanceReportBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StrongholdId = 2;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdid());
    }

    // optional .pb.TBattleResult BattleRet = 3;
    if (has_battleret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleret());
    }

    // optional bytes BattleResultBytes = 4;
    if (has_battleresultbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->battleresultbytes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceReportBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceReportBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceReportBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceReportBattleReq::MergeFrom(const TEInstanceReportBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
    if (from.has_battleret()) {
      mutable_battleret()->::pb::TBattleResult::MergeFrom(from.battleret());
    }
    if (from.has_battleresultbytes()) {
      set_battleresultbytes(from.battleresultbytes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceReportBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceReportBattleReq::CopyFrom(const TEInstanceReportBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceReportBattleReq::IsInitialized() const {

  if (has_battleret()) {
    if (!this->battleret().IsInitialized()) return false;
  }
  return true;
}

void TEInstanceReportBattleReq::Swap(TEInstanceReportBattleReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(battleret_, other->battleret_);
    std::swap(battleresultbytes_, other->battleresultbytes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceReportBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceReportBattleReq_descriptor_;
  metadata.reflection = TEInstanceReportBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceReportBattleRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TEInstanceReportBattleRsp::TEInstanceReportBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceReportBattleRsp)
}

void TEInstanceReportBattleRsp::InitAsDefaultInstance() {
}

TEInstanceReportBattleRsp::TEInstanceReportBattleRsp(const TEInstanceReportBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceReportBattleRsp)
}

void TEInstanceReportBattleRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceReportBattleRsp::~TEInstanceReportBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceReportBattleRsp)
  SharedDtor();
}

void TEInstanceReportBattleRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceReportBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceReportBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceReportBattleRsp_descriptor_;
}

const TEInstanceReportBattleRsp& TEInstanceReportBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceReportBattleRsp* TEInstanceReportBattleRsp::default_instance_ = NULL;

TEInstanceReportBattleRsp* TEInstanceReportBattleRsp::New() const {
  return new TEInstanceReportBattleRsp;
}

void TEInstanceReportBattleRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceReportBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceReportBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceReportBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceReportBattleRsp)
  return false;
#undef DO_
}

void TEInstanceReportBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceReportBattleRsp)
}

::google::protobuf::uint8* TEInstanceReportBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceReportBattleRsp)
  return target;
}

int TEInstanceReportBattleRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceReportBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceReportBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceReportBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceReportBattleRsp::MergeFrom(const TEInstanceReportBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceReportBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceReportBattleRsp::CopyFrom(const TEInstanceReportBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceReportBattleRsp::IsInitialized() const {

  return true;
}

void TEInstanceReportBattleRsp::Swap(TEInstanceReportBattleRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceReportBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceReportBattleRsp_descriptor_;
  metadata.reflection = TEInstanceReportBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceReceiveStarRewardReq::kChapterIdFieldNumber;
const int TEInstanceReceiveStarRewardReq::kStarNumFieldNumber;
#endif  // !_MSC_VER

TEInstanceReceiveStarRewardReq::TEInstanceReceiveStarRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceReceiveStarRewardReq)
}

void TEInstanceReceiveStarRewardReq::InitAsDefaultInstance() {
}

TEInstanceReceiveStarRewardReq::TEInstanceReceiveStarRewardReq(const TEInstanceReceiveStarRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceReceiveStarRewardReq)
}

void TEInstanceReceiveStarRewardReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  starnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceReceiveStarRewardReq::~TEInstanceReceiveStarRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceReceiveStarRewardReq)
  SharedDtor();
}

void TEInstanceReceiveStarRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceReceiveStarRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceReceiveStarRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceReceiveStarRewardReq_descriptor_;
}

const TEInstanceReceiveStarRewardReq& TEInstanceReceiveStarRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceReceiveStarRewardReq* TEInstanceReceiveStarRewardReq::default_instance_ = NULL;

TEInstanceReceiveStarRewardReq* TEInstanceReceiveStarRewardReq::New() const {
  return new TEInstanceReceiveStarRewardReq;
}

void TEInstanceReceiveStarRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TEInstanceReceiveStarRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(chapterid_, starnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceReceiveStarRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceReceiveStarRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StarNum;
        break;
      }

      // optional uint32 StarNum = 2;
      case 2: {
        if (tag == 16) {
         parse_StarNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starnum_)));
          set_has_starnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceReceiveStarRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceReceiveStarRewardReq)
  return false;
#undef DO_
}

void TEInstanceReceiveStarRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceReceiveStarRewardReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StarNum = 2;
  if (has_starnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->starnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceReceiveStarRewardReq)
}

::google::protobuf::uint8* TEInstanceReceiveStarRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceReceiveStarRewardReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StarNum = 2;
  if (has_starnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->starnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceReceiveStarRewardReq)
  return target;
}

int TEInstanceReceiveStarRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StarNum = 2;
    if (has_starnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceReceiveStarRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceReceiveStarRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceReceiveStarRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceReceiveStarRewardReq::MergeFrom(const TEInstanceReceiveStarRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_starnum()) {
      set_starnum(from.starnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceReceiveStarRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceReceiveStarRewardReq::CopyFrom(const TEInstanceReceiveStarRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceReceiveStarRewardReq::IsInitialized() const {

  return true;
}

void TEInstanceReceiveStarRewardReq::Swap(TEInstanceReceiveStarRewardReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(starnum_, other->starnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceReceiveStarRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceReceiveStarRewardReq_descriptor_;
  metadata.reflection = TEInstanceReceiveStarRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceReceiveStarRewardRsp::kRewardArrayFieldNumber;
#endif  // !_MSC_VER

TEInstanceReceiveStarRewardRsp::TEInstanceReceiveStarRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceReceiveStarRewardRsp)
}

void TEInstanceReceiveStarRewardRsp::InitAsDefaultInstance() {
}

TEInstanceReceiveStarRewardRsp::TEInstanceReceiveStarRewardRsp(const TEInstanceReceiveStarRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceReceiveStarRewardRsp)
}

void TEInstanceReceiveStarRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceReceiveStarRewardRsp::~TEInstanceReceiveStarRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceReceiveStarRewardRsp)
  SharedDtor();
}

void TEInstanceReceiveStarRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceReceiveStarRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceReceiveStarRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceReceiveStarRewardRsp_descriptor_;
}

const TEInstanceReceiveStarRewardRsp& TEInstanceReceiveStarRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceReceiveStarRewardRsp* TEInstanceReceiveStarRewardRsp::default_instance_ = NULL;

TEInstanceReceiveStarRewardRsp* TEInstanceReceiveStarRewardRsp::New() const {
  return new TEInstanceReceiveStarRewardRsp;
}

void TEInstanceReceiveStarRewardRsp::Clear() {
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceReceiveStarRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceReceiveStarRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceReceiveStarRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceReceiveStarRewardRsp)
  return false;
#undef DO_
}

void TEInstanceReceiveStarRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceReceiveStarRewardRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceReceiveStarRewardRsp)
}

::google::protobuf::uint8* TEInstanceReceiveStarRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceReceiveStarRewardRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceReceiveStarRewardRsp)
  return target;
}

int TEInstanceReceiveStarRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceReceiveStarRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceReceiveStarRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceReceiveStarRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceReceiveStarRewardRsp::MergeFrom(const TEInstanceReceiveStarRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceReceiveStarRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceReceiveStarRewardRsp::CopyFrom(const TEInstanceReceiveStarRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceReceiveStarRewardRsp::IsInitialized() const {

  return true;
}

void TEInstanceReceiveStarRewardRsp::Swap(TEInstanceReceiveStarRewardRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceReceiveStarRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceReceiveStarRewardRsp_descriptor_;
  metadata.reflection = TEInstanceReceiveStarRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceResetStrongholdReq::kChapterIdFieldNumber;
const int TEInstanceResetStrongholdReq::kStrongholdIdFieldNumber;
#endif  // !_MSC_VER

TEInstanceResetStrongholdReq::TEInstanceResetStrongholdReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceResetStrongholdReq)
}

void TEInstanceResetStrongholdReq::InitAsDefaultInstance() {
}

TEInstanceResetStrongholdReq::TEInstanceResetStrongholdReq(const TEInstanceResetStrongholdReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceResetStrongholdReq)
}

void TEInstanceResetStrongholdReq::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  strongholdid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceResetStrongholdReq::~TEInstanceResetStrongholdReq() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceResetStrongholdReq)
  SharedDtor();
}

void TEInstanceResetStrongholdReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceResetStrongholdReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceResetStrongholdReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceResetStrongholdReq_descriptor_;
}

const TEInstanceResetStrongholdReq& TEInstanceResetStrongholdReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceResetStrongholdReq* TEInstanceResetStrongholdReq::default_instance_ = NULL;

TEInstanceResetStrongholdReq* TEInstanceResetStrongholdReq::New() const {
  return new TEInstanceResetStrongholdReq;
}

void TEInstanceResetStrongholdReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TEInstanceResetStrongholdReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(chapterid_, strongholdid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceResetStrongholdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceResetStrongholdReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChapterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StrongholdId;
        break;
      }

      // optional uint32 StrongholdId = 2;
      case 2: {
        if (tag == 16) {
         parse_StrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceResetStrongholdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceResetStrongholdReq)
  return false;
#undef DO_
}

void TEInstanceResetStrongholdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceResetStrongholdReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strongholdid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceResetStrongholdReq)
}

::google::protobuf::uint8* TEInstanceResetStrongholdReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceResetStrongholdReq)
  // optional uint32 ChapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // optional uint32 StrongholdId = 2;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strongholdid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceResetStrongholdReq)
  return target;
}

int TEInstanceResetStrongholdReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // optional uint32 StrongholdId = 2;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceResetStrongholdReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceResetStrongholdReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceResetStrongholdReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceResetStrongholdReq::MergeFrom(const TEInstanceResetStrongholdReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceResetStrongholdReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceResetStrongholdReq::CopyFrom(const TEInstanceResetStrongholdReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceResetStrongholdReq::IsInitialized() const {

  return true;
}

void TEInstanceResetStrongholdReq::Swap(TEInstanceResetStrongholdReq* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceResetStrongholdReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceResetStrongholdReq_descriptor_;
  metadata.reflection = TEInstanceResetStrongholdReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceProgressRankInfo::kUserInfoFieldNumber;
const int TEInstanceProgressRankInfo::kStrongholdIdFieldNumber;
const int TEInstanceProgressRankInfo::kStrongholdTimeFieldNumber;
#endif  // !_MSC_VER

TEInstanceProgressRankInfo::TEInstanceProgressRankInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceProgressRankInfo)
}

void TEInstanceProgressRankInfo::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TEInstanceProgressRankInfo::TEInstanceProgressRankInfo(const TEInstanceProgressRankInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceProgressRankInfo)
}

void TEInstanceProgressRankInfo::SharedCtor() {
  _cached_size_ = 0;
  userinfo_ = NULL;
  strongholdid_ = 0u;
  strongholdtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceProgressRankInfo::~TEInstanceProgressRankInfo() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceProgressRankInfo)
  SharedDtor();
}

void TEInstanceProgressRankInfo::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void TEInstanceProgressRankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceProgressRankInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceProgressRankInfo_descriptor_;
}

const TEInstanceProgressRankInfo& TEInstanceProgressRankInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceProgressRankInfo* TEInstanceProgressRankInfo::default_instance_ = NULL;

TEInstanceProgressRankInfo* TEInstanceProgressRankInfo::New() const {
  return new TEInstanceProgressRankInfo;
}

void TEInstanceProgressRankInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TEInstanceProgressRankInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(strongholdtime_, strongholdid_);
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceProgressRankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceProgressRankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TUserSimpleInfo UserInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_StrongholdId;
        break;
      }

      // optional uint32 StrongholdId = 3;
      case 3: {
        if (tag == 24) {
         parse_StrongholdId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strongholdid_)));
          set_has_strongholdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_StrongholdTime;
        break;
      }

      // optional uint64 StrongholdTime = 4;
      case 4: {
        if (tag == 32) {
         parse_StrongholdTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &strongholdtime_)));
          set_has_strongholdtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceProgressRankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceProgressRankInfo)
  return false;
#undef DO_
}

void TEInstanceProgressRankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceProgressRankInfo)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(), output);
  }

  // optional uint32 StrongholdId = 3;
  if (has_strongholdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->strongholdid(), output);
  }

  // optional uint64 StrongholdTime = 4;
  if (has_strongholdtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->strongholdtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceProgressRankInfo)
}

::google::protobuf::uint8* TEInstanceProgressRankInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceProgressRankInfo)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userinfo(), target);
  }

  // optional uint32 StrongholdId = 3;
  if (has_strongholdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->strongholdid(), target);
  }

  // optional uint64 StrongholdTime = 4;
  if (has_strongholdtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->strongholdtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceProgressRankInfo)
  return target;
}

int TEInstanceProgressRankInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TUserSimpleInfo UserInfo = 1;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }

    // optional uint32 StrongholdId = 3;
    if (has_strongholdid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strongholdid());
    }

    // optional uint64 StrongholdTime = 4;
    if (has_strongholdtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->strongholdtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceProgressRankInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceProgressRankInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceProgressRankInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceProgressRankInfo::MergeFrom(const TEInstanceProgressRankInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userinfo()) {
      mutable_userinfo()->::pb::TUserSimpleInfo::MergeFrom(from.userinfo());
    }
    if (from.has_strongholdid()) {
      set_strongholdid(from.strongholdid());
    }
    if (from.has_strongholdtime()) {
      set_strongholdtime(from.strongholdtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceProgressRankInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceProgressRankInfo::CopyFrom(const TEInstanceProgressRankInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceProgressRankInfo::IsInitialized() const {

  return true;
}

void TEInstanceProgressRankInfo::Swap(TEInstanceProgressRankInfo* other) {
  if (other != this) {
    std::swap(userinfo_, other->userinfo_);
    std::swap(strongholdid_, other->strongholdid_);
    std::swap(strongholdtime_, other->strongholdtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceProgressRankInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceProgressRankInfo_descriptor_;
  metadata.reflection = TEInstanceProgressRankInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceGetProgressRankReq::kOffsetFieldNumber;
const int TEInstanceGetProgressRankReq::kLimitFieldNumber;
#endif  // !_MSC_VER

TEInstanceGetProgressRankReq::TEInstanceGetProgressRankReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceGetProgressRankReq)
}

void TEInstanceGetProgressRankReq::InitAsDefaultInstance() {
}

TEInstanceGetProgressRankReq::TEInstanceGetProgressRankReq(const TEInstanceGetProgressRankReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceGetProgressRankReq)
}

void TEInstanceGetProgressRankReq::SharedCtor() {
  _cached_size_ = 0;
  offset_ = 0u;
  limit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceGetProgressRankReq::~TEInstanceGetProgressRankReq() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceGetProgressRankReq)
  SharedDtor();
}

void TEInstanceGetProgressRankReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceGetProgressRankReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceGetProgressRankReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceGetProgressRankReq_descriptor_;
}

const TEInstanceGetProgressRankReq& TEInstanceGetProgressRankReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceGetProgressRankReq* TEInstanceGetProgressRankReq::default_instance_ = NULL;

TEInstanceGetProgressRankReq* TEInstanceGetProgressRankReq::New() const {
  return new TEInstanceGetProgressRankReq;
}

void TEInstanceGetProgressRankReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TEInstanceGetProgressRankReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(offset_, limit_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceGetProgressRankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceGetProgressRankReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Offset = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Limit;
        break;
      }

      // optional uint32 Limit = 2;
      case 2: {
        if (tag == 16) {
         parse_Limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceGetProgressRankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceGetProgressRankReq)
  return false;
#undef DO_
}

void TEInstanceGetProgressRankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceGetProgressRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->offset(), output);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceGetProgressRankReq)
}

::google::protobuf::uint8* TEInstanceGetProgressRankReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceGetProgressRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->offset(), target);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceGetProgressRankReq)
  return target;
}

int TEInstanceGetProgressRankReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Offset = 1;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 Limit = 2;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceGetProgressRankReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceGetProgressRankReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceGetProgressRankReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceGetProgressRankReq::MergeFrom(const TEInstanceGetProgressRankReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceGetProgressRankReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceGetProgressRankReq::CopyFrom(const TEInstanceGetProgressRankReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceGetProgressRankReq::IsInitialized() const {

  return true;
}

void TEInstanceGetProgressRankReq::Swap(TEInstanceGetProgressRankReq* other) {
  if (other != this) {
    std::swap(offset_, other->offset_);
    std::swap(limit_, other->limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceGetProgressRankReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceGetProgressRankReq_descriptor_;
  metadata.reflection = TEInstanceGetProgressRankReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceGetProgressRankRsp::kRankArrFieldNumber;
const int TEInstanceGetProgressRankRsp::kMyRankFieldNumber;
#endif  // !_MSC_VER

TEInstanceGetProgressRankRsp::TEInstanceGetProgressRankRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceGetProgressRankRsp)
}

void TEInstanceGetProgressRankRsp::InitAsDefaultInstance() {
}

TEInstanceGetProgressRankRsp::TEInstanceGetProgressRankRsp(const TEInstanceGetProgressRankRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceGetProgressRankRsp)
}

void TEInstanceGetProgressRankRsp::SharedCtor() {
  _cached_size_ = 0;
  myrank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceGetProgressRankRsp::~TEInstanceGetProgressRankRsp() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceGetProgressRankRsp)
  SharedDtor();
}

void TEInstanceGetProgressRankRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceGetProgressRankRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceGetProgressRankRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceGetProgressRankRsp_descriptor_;
}

const TEInstanceGetProgressRankRsp& TEInstanceGetProgressRankRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceGetProgressRankRsp* TEInstanceGetProgressRankRsp::default_instance_ = NULL;

TEInstanceGetProgressRankRsp* TEInstanceGetProgressRankRsp::New() const {
  return new TEInstanceGetProgressRankRsp;
}

void TEInstanceGetProgressRankRsp::Clear() {
  myrank_ = 0;
  rankarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceGetProgressRankRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceGetProgressRankRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TEInstanceProgressRankInfo RankArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RankArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rankarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RankArr;
        if (input->ExpectTag(16)) goto parse_MyRank;
        break;
      }

      // optional int32 MyRank = 2;
      case 2: {
        if (tag == 16) {
         parse_MyRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myrank_)));
          set_has_myrank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceGetProgressRankRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceGetProgressRankRsp)
  return false;
#undef DO_
}

void TEInstanceGetProgressRankRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceGetProgressRankRsp)
  // repeated .pb.TEInstanceProgressRankInfo RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rankarr(i), output);
  }

  // optional int32 MyRank = 2;
  if (has_myrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->myrank(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceGetProgressRankRsp)
}

::google::protobuf::uint8* TEInstanceGetProgressRankRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceGetProgressRankRsp)
  // repeated .pb.TEInstanceProgressRankInfo RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rankarr(i), target);
  }

  // optional int32 MyRank = 2;
  if (has_myrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->myrank(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceGetProgressRankRsp)
  return target;
}

int TEInstanceGetProgressRankRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 MyRank = 2;
    if (has_myrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->myrank());
    }

  }
  // repeated .pb.TEInstanceProgressRankInfo RankArr = 1;
  total_size += 1 * this->rankarr_size();
  for (int i = 0; i < this->rankarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rankarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceGetProgressRankRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceGetProgressRankRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceGetProgressRankRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceGetProgressRankRsp::MergeFrom(const TEInstanceGetProgressRankRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rankarr_.MergeFrom(from.rankarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_myrank()) {
      set_myrank(from.myrank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceGetProgressRankRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceGetProgressRankRsp::CopyFrom(const TEInstanceGetProgressRankRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceGetProgressRankRsp::IsInitialized() const {

  return true;
}

void TEInstanceGetProgressRankRsp::Swap(TEInstanceGetProgressRankRsp* other) {
  if (other != this) {
    rankarr_.Swap(&other->rankarr_);
    std::swap(myrank_, other->myrank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceGetProgressRankRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceGetProgressRankRsp_descriptor_;
  metadata.reflection = TEInstanceGetProgressRankRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TEInstanceInfoNotify::kChapterInfoArrayFieldNumber;
const int TEInstanceInfoNotify::kResetNumFieldNumber;
const int TEInstanceInfoNotify::kResetTimeFieldNumber;
#endif  // !_MSC_VER

TEInstanceInfoNotify::TEInstanceInfoNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TEInstanceInfoNotify)
}

void TEInstanceInfoNotify::InitAsDefaultInstance() {
}

TEInstanceInfoNotify::TEInstanceInfoNotify(const TEInstanceInfoNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TEInstanceInfoNotify)
}

void TEInstanceInfoNotify::SharedCtor() {
  _cached_size_ = 0;
  resetnum_ = 0u;
  resettime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TEInstanceInfoNotify::~TEInstanceInfoNotify() {
  // @@protoc_insertion_point(destructor:pb.TEInstanceInfoNotify)
  SharedDtor();
}

void TEInstanceInfoNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TEInstanceInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEInstanceInfoNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEInstanceInfoNotify_descriptor_;
}

const TEInstanceInfoNotify& TEInstanceInfoNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fEInstance_2eproto();
  return *default_instance_;
}

TEInstanceInfoNotify* TEInstanceInfoNotify::default_instance_ = NULL;

TEInstanceInfoNotify* TEInstanceInfoNotify::New() const {
  return new TEInstanceInfoNotify;
}

void TEInstanceInfoNotify::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TEInstanceInfoNotify*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(resettime_, resetnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  chapterinfoarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TEInstanceInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TEInstanceInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TEInstanceChapterInfo ChapterInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_ChapterInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chapterinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ChapterInfoArray;
        if (input->ExpectTag(16)) goto parse_ResetNum;
        break;
      }

      // optional uint32 ResetNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ResetNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resetnum_)));
          set_has_resetnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ResetTime;
        break;
      }

      // optional uint64 ResetTime = 3;
      case 3: {
        if (tag == 24) {
         parse_ResetTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &resettime_)));
          set_has_resettime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TEInstanceInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TEInstanceInfoNotify)
  return false;
#undef DO_
}

void TEInstanceInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TEInstanceInfoNotify)
  // repeated .pb.TEInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->chapterinfoarray(i), output);
  }

  // optional uint32 ResetNum = 2;
  if (has_resetnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->resetnum(), output);
  }

  // optional uint64 ResetTime = 3;
  if (has_resettime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->resettime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TEInstanceInfoNotify)
}

::google::protobuf::uint8* TEInstanceInfoNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TEInstanceInfoNotify)
  // repeated .pb.TEInstanceChapterInfo ChapterInfoArray = 1;
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->chapterinfoarray(i), target);
  }

  // optional uint32 ResetNum = 2;
  if (has_resetnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->resetnum(), target);
  }

  // optional uint64 ResetTime = 3;
  if (has_resettime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->resettime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TEInstanceInfoNotify)
  return target;
}

int TEInstanceInfoNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 ResetNum = 2;
    if (has_resetnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->resetnum());
    }

    // optional uint64 ResetTime = 3;
    if (has_resettime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->resettime());
    }

  }
  // repeated .pb.TEInstanceChapterInfo ChapterInfoArray = 1;
  total_size += 1 * this->chapterinfoarray_size();
  for (int i = 0; i < this->chapterinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chapterinfoarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEInstanceInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TEInstanceInfoNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TEInstanceInfoNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TEInstanceInfoNotify::MergeFrom(const TEInstanceInfoNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  chapterinfoarray_.MergeFrom(from.chapterinfoarray_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_resetnum()) {
      set_resetnum(from.resetnum());
    }
    if (from.has_resettime()) {
      set_resettime(from.resettime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TEInstanceInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEInstanceInfoNotify::CopyFrom(const TEInstanceInfoNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEInstanceInfoNotify::IsInitialized() const {

  return true;
}

void TEInstanceInfoNotify::Swap(TEInstanceInfoNotify* other) {
  if (other != this) {
    chapterinfoarray_.Swap(&other->chapterinfoarray_);
    std::swap(resetnum_, other->resetnum_);
    std::swap(resettime_, other->resettime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TEInstanceInfoNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TEInstanceInfoNotify_descriptor_;
  metadata.reflection = TEInstanceInfoNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
