// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActQuoraRecharge.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActQuoraRecharge.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActQuoraRechargeReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActQuoraRechargeReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActQuoraRechargeKey_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActQuoraRechargeKey_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActQuoraRechargeGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActQuoraRechargeGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActQuoraReceiveRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActQuoraReceiveRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActQuoraReceiveRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActQuoraReceiveRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActQuoraRechargeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActQuoraRechargeNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActQuoraRecharge_2eproto() {
  protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActQuoraRecharge.proto");
  GOOGLE_CHECK(file != NULL);
  TActQuoraRechargeReward_descriptor_ = file->message_type(0);
  static const int TActQuoraRechargeReward_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeReward, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeReward, num_),
  };
  TActQuoraRechargeReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActQuoraRechargeReward_descriptor_,
      TActQuoraRechargeReward::default_instance_,
      TActQuoraRechargeReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActQuoraRechargeReward));
  TActQuoraRechargeKey_descriptor_ = file->message_type(1);
  static const int TActQuoraRechargeKey_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeKey, rechargeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeKey, num_),
  };
  TActQuoraRechargeKey_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActQuoraRechargeKey_descriptor_,
      TActQuoraRechargeKey::default_instance_,
      TActQuoraRechargeKey_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeKey, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeKey, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActQuoraRechargeKey));
  TActQuoraRechargeGetInfoRsp_descriptor_ = file->message_type(2);
  static const int TActQuoraRechargeGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeGetInfoRsp, rewardarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeGetInfoRsp, rechargekeyarr_),
  };
  TActQuoraRechargeGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActQuoraRechargeGetInfoRsp_descriptor_,
      TActQuoraRechargeGetInfoRsp::default_instance_,
      TActQuoraRechargeGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActQuoraRechargeGetInfoRsp));
  TActQuoraReceiveRewardReq_descriptor_ = file->message_type(3);
  static const int TActQuoraReceiveRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraReceiveRewardReq, id_),
  };
  TActQuoraReceiveRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActQuoraReceiveRewardReq_descriptor_,
      TActQuoraReceiveRewardReq::default_instance_,
      TActQuoraReceiveRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraReceiveRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraReceiveRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActQuoraReceiveRewardReq));
  TActQuoraReceiveRewardRsp_descriptor_ = file->message_type(4);
  static const int TActQuoraReceiveRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraReceiveRewardRsp, rewardarr_),
  };
  TActQuoraReceiveRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActQuoraReceiveRewardRsp_descriptor_,
      TActQuoraReceiveRewardRsp::default_instance_,
      TActQuoraReceiveRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraReceiveRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraReceiveRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActQuoraReceiveRewardRsp));
  TActQuoraRechargeNotify_descriptor_ = file->message_type(5);
  static const int TActQuoraRechargeNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeNotify, rechargekeyarr_),
  };
  TActQuoraRechargeNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActQuoraRechargeNotify_descriptor_,
      TActQuoraRechargeNotify::default_instance_,
      TActQuoraRechargeNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActQuoraRechargeNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActQuoraRechargeNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActQuoraRecharge_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActQuoraRechargeReward_descriptor_, &TActQuoraRechargeReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActQuoraRechargeKey_descriptor_, &TActQuoraRechargeKey::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActQuoraRechargeGetInfoRsp_descriptor_, &TActQuoraRechargeGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActQuoraReceiveRewardReq_descriptor_, &TActQuoraReceiveRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActQuoraReceiveRewardRsp_descriptor_, &TActQuoraReceiveRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActQuoraRechargeNotify_descriptor_, &TActQuoraRechargeNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActQuoraRecharge_2eproto() {
  delete TActQuoraRechargeReward::default_instance_;
  delete TActQuoraRechargeReward_reflection_;
  delete TActQuoraRechargeKey::default_instance_;
  delete TActQuoraRechargeKey_reflection_;
  delete TActQuoraRechargeGetInfoRsp::default_instance_;
  delete TActQuoraRechargeGetInfoRsp_reflection_;
  delete TActQuoraReceiveRewardReq::default_instance_;
  delete TActQuoraReceiveRewardReq_reflection_;
  delete TActQuoraReceiveRewardRsp::default_instance_;
  delete TActQuoraReceiveRewardRsp_reflection_;
  delete TActQuoraRechargeNotify::default_instance_;
  delete TActQuoraRechargeNotify_reflection_;
}

void protobuf_AddDesc_net_2fActQuoraRecharge_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032net/ActQuoraRecharge.proto\022\002pb\032\026net/Co"
    "mmonReward.proto\"2\n\027TActQuoraRechargeRew"
    "ard\022\n\n\002Id\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\"7\n\024TActQuor"
    "aRechargeKey\022\022\n\nRechargeId\030\001 \001(\r\022\013\n\003Num\030"
    "\002 \001(\r\"\177\n\033TActQuoraRechargeGetInfoRsp\022.\n\t"
    "RewardArr\030\001 \003(\0132\033.pb.TActQuoraRechargeRe"
    "ward\0220\n\016RechargeKeyArr\030\002 \003(\0132\030.pb.TActQu"
    "oraRechargeKey\"\'\n\031TActQuoraReceiveReward"
    "Req\022\n\n\002Id\030\001 \001(\r\"A\n\031TActQuoraReceiveRewar"
    "dRsp\022$\n\tRewardArr\030\001 \003(\0132\021.pb.TCommonRewa"
    "rd\"K\n\027TActQuoraRechargeNotify\0220\n\016Recharg"
    "eKeyArr\030\001 \003(\0132\030.pb.TActQuoraRechargeKey", 479);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActQuoraRecharge.proto", &protobuf_RegisterTypes);
  TActQuoraRechargeReward::default_instance_ = new TActQuoraRechargeReward();
  TActQuoraRechargeKey::default_instance_ = new TActQuoraRechargeKey();
  TActQuoraRechargeGetInfoRsp::default_instance_ = new TActQuoraRechargeGetInfoRsp();
  TActQuoraReceiveRewardReq::default_instance_ = new TActQuoraReceiveRewardReq();
  TActQuoraReceiveRewardRsp::default_instance_ = new TActQuoraReceiveRewardRsp();
  TActQuoraRechargeNotify::default_instance_ = new TActQuoraRechargeNotify();
  TActQuoraRechargeReward::default_instance_->InitAsDefaultInstance();
  TActQuoraRechargeKey::default_instance_->InitAsDefaultInstance();
  TActQuoraRechargeGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TActQuoraReceiveRewardReq::default_instance_->InitAsDefaultInstance();
  TActQuoraReceiveRewardRsp::default_instance_->InitAsDefaultInstance();
  TActQuoraRechargeNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActQuoraRecharge_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActQuoraRecharge_2eproto {
  StaticDescriptorInitializer_net_2fActQuoraRecharge_2eproto() {
    protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  }
} static_descriptor_initializer_net_2fActQuoraRecharge_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActQuoraRechargeReward::kIdFieldNumber;
const int TActQuoraRechargeReward::kNumFieldNumber;
#endif  // !_MSC_VER

TActQuoraRechargeReward::TActQuoraRechargeReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActQuoraRechargeReward)
}

void TActQuoraRechargeReward::InitAsDefaultInstance() {
}

TActQuoraRechargeReward::TActQuoraRechargeReward(const TActQuoraRechargeReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActQuoraRechargeReward)
}

void TActQuoraRechargeReward::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActQuoraRechargeReward::~TActQuoraRechargeReward() {
  // @@protoc_insertion_point(destructor:pb.TActQuoraRechargeReward)
  SharedDtor();
}

void TActQuoraRechargeReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActQuoraRechargeReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActQuoraRechargeReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActQuoraRechargeReward_descriptor_;
}

const TActQuoraRechargeReward& TActQuoraRechargeReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  return *default_instance_;
}

TActQuoraRechargeReward* TActQuoraRechargeReward::default_instance_ = NULL;

TActQuoraRechargeReward* TActQuoraRechargeReward::New() const {
  return new TActQuoraRechargeReward;
}

void TActQuoraRechargeReward::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActQuoraRechargeReward*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActQuoraRechargeReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActQuoraRechargeReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActQuoraRechargeReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActQuoraRechargeReward)
  return false;
#undef DO_
}

void TActQuoraRechargeReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActQuoraRechargeReward)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActQuoraRechargeReward)
}

::google::protobuf::uint8* TActQuoraRechargeReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActQuoraRechargeReward)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActQuoraRechargeReward)
  return target;
}

int TActQuoraRechargeReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActQuoraRechargeReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActQuoraRechargeReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActQuoraRechargeReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActQuoraRechargeReward::MergeFrom(const TActQuoraRechargeReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActQuoraRechargeReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActQuoraRechargeReward::CopyFrom(const TActQuoraRechargeReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActQuoraRechargeReward::IsInitialized() const {

  return true;
}

void TActQuoraRechargeReward::Swap(TActQuoraRechargeReward* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActQuoraRechargeReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActQuoraRechargeReward_descriptor_;
  metadata.reflection = TActQuoraRechargeReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActQuoraRechargeKey::kRechargeIdFieldNumber;
const int TActQuoraRechargeKey::kNumFieldNumber;
#endif  // !_MSC_VER

TActQuoraRechargeKey::TActQuoraRechargeKey()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActQuoraRechargeKey)
}

void TActQuoraRechargeKey::InitAsDefaultInstance() {
}

TActQuoraRechargeKey::TActQuoraRechargeKey(const TActQuoraRechargeKey& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActQuoraRechargeKey)
}

void TActQuoraRechargeKey::SharedCtor() {
  _cached_size_ = 0;
  rechargeid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActQuoraRechargeKey::~TActQuoraRechargeKey() {
  // @@protoc_insertion_point(destructor:pb.TActQuoraRechargeKey)
  SharedDtor();
}

void TActQuoraRechargeKey::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActQuoraRechargeKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActQuoraRechargeKey::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActQuoraRechargeKey_descriptor_;
}

const TActQuoraRechargeKey& TActQuoraRechargeKey::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  return *default_instance_;
}

TActQuoraRechargeKey* TActQuoraRechargeKey::default_instance_ = NULL;

TActQuoraRechargeKey* TActQuoraRechargeKey::New() const {
  return new TActQuoraRechargeKey;
}

void TActQuoraRechargeKey::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActQuoraRechargeKey*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(rechargeid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActQuoraRechargeKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActQuoraRechargeKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RechargeId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rechargeid_)));
          set_has_rechargeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActQuoraRechargeKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActQuoraRechargeKey)
  return false;
#undef DO_
}

void TActQuoraRechargeKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActQuoraRechargeKey)
  // optional uint32 RechargeId = 1;
  if (has_rechargeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rechargeid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActQuoraRechargeKey)
}

::google::protobuf::uint8* TActQuoraRechargeKey::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActQuoraRechargeKey)
  // optional uint32 RechargeId = 1;
  if (has_rechargeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rechargeid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActQuoraRechargeKey)
  return target;
}

int TActQuoraRechargeKey::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RechargeId = 1;
    if (has_rechargeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rechargeid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActQuoraRechargeKey::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActQuoraRechargeKey* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActQuoraRechargeKey*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActQuoraRechargeKey::MergeFrom(const TActQuoraRechargeKey& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rechargeid()) {
      set_rechargeid(from.rechargeid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActQuoraRechargeKey::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActQuoraRechargeKey::CopyFrom(const TActQuoraRechargeKey& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActQuoraRechargeKey::IsInitialized() const {

  return true;
}

void TActQuoraRechargeKey::Swap(TActQuoraRechargeKey* other) {
  if (other != this) {
    std::swap(rechargeid_, other->rechargeid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActQuoraRechargeKey::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActQuoraRechargeKey_descriptor_;
  metadata.reflection = TActQuoraRechargeKey_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActQuoraRechargeGetInfoRsp::kRewardArrFieldNumber;
const int TActQuoraRechargeGetInfoRsp::kRechargeKeyArrFieldNumber;
#endif  // !_MSC_VER

TActQuoraRechargeGetInfoRsp::TActQuoraRechargeGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActQuoraRechargeGetInfoRsp)
}

void TActQuoraRechargeGetInfoRsp::InitAsDefaultInstance() {
}

TActQuoraRechargeGetInfoRsp::TActQuoraRechargeGetInfoRsp(const TActQuoraRechargeGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActQuoraRechargeGetInfoRsp)
}

void TActQuoraRechargeGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActQuoraRechargeGetInfoRsp::~TActQuoraRechargeGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActQuoraRechargeGetInfoRsp)
  SharedDtor();
}

void TActQuoraRechargeGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActQuoraRechargeGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActQuoraRechargeGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActQuoraRechargeGetInfoRsp_descriptor_;
}

const TActQuoraRechargeGetInfoRsp& TActQuoraRechargeGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  return *default_instance_;
}

TActQuoraRechargeGetInfoRsp* TActQuoraRechargeGetInfoRsp::default_instance_ = NULL;

TActQuoraRechargeGetInfoRsp* TActQuoraRechargeGetInfoRsp::New() const {
  return new TActQuoraRechargeGetInfoRsp;
}

void TActQuoraRechargeGetInfoRsp::Clear() {
  rewardarr_.Clear();
  rechargekeyarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActQuoraRechargeGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActQuoraRechargeGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActQuoraRechargeReward RewardArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArr;
        if (input->ExpectTag(18)) goto parse_RechargeKeyArr;
        break;
      }

      // repeated .pb.TActQuoraRechargeKey RechargeKeyArr = 2;
      case 2: {
        if (tag == 18) {
         parse_RechargeKeyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rechargekeyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RechargeKeyArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActQuoraRechargeGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActQuoraRechargeGetInfoRsp)
  return false;
#undef DO_
}

void TActQuoraRechargeGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActQuoraRechargeGetInfoRsp)
  // repeated .pb.TActQuoraRechargeReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarr(i), output);
  }

  // repeated .pb.TActQuoraRechargeKey RechargeKeyArr = 2;
  for (int i = 0; i < this->rechargekeyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rechargekeyarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActQuoraRechargeGetInfoRsp)
}

::google::protobuf::uint8* TActQuoraRechargeGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActQuoraRechargeGetInfoRsp)
  // repeated .pb.TActQuoraRechargeReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarr(i), target);
  }

  // repeated .pb.TActQuoraRechargeKey RechargeKeyArr = 2;
  for (int i = 0; i < this->rechargekeyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rechargekeyarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActQuoraRechargeGetInfoRsp)
  return target;
}

int TActQuoraRechargeGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActQuoraRechargeReward RewardArr = 1;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  // repeated .pb.TActQuoraRechargeKey RechargeKeyArr = 2;
  total_size += 1 * this->rechargekeyarr_size();
  for (int i = 0; i < this->rechargekeyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rechargekeyarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActQuoraRechargeGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActQuoraRechargeGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActQuoraRechargeGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActQuoraRechargeGetInfoRsp::MergeFrom(const TActQuoraRechargeGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarr_.MergeFrom(from.rewardarr_);
  rechargekeyarr_.MergeFrom(from.rechargekeyarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActQuoraRechargeGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActQuoraRechargeGetInfoRsp::CopyFrom(const TActQuoraRechargeGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActQuoraRechargeGetInfoRsp::IsInitialized() const {

  return true;
}

void TActQuoraRechargeGetInfoRsp::Swap(TActQuoraRechargeGetInfoRsp* other) {
  if (other != this) {
    rewardarr_.Swap(&other->rewardarr_);
    rechargekeyarr_.Swap(&other->rechargekeyarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActQuoraRechargeGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActQuoraRechargeGetInfoRsp_descriptor_;
  metadata.reflection = TActQuoraRechargeGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActQuoraReceiveRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

TActQuoraReceiveRewardReq::TActQuoraReceiveRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActQuoraReceiveRewardReq)
}

void TActQuoraReceiveRewardReq::InitAsDefaultInstance() {
}

TActQuoraReceiveRewardReq::TActQuoraReceiveRewardReq(const TActQuoraReceiveRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActQuoraReceiveRewardReq)
}

void TActQuoraReceiveRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActQuoraReceiveRewardReq::~TActQuoraReceiveRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TActQuoraReceiveRewardReq)
  SharedDtor();
}

void TActQuoraReceiveRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActQuoraReceiveRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActQuoraReceiveRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActQuoraReceiveRewardReq_descriptor_;
}

const TActQuoraReceiveRewardReq& TActQuoraReceiveRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  return *default_instance_;
}

TActQuoraReceiveRewardReq* TActQuoraReceiveRewardReq::default_instance_ = NULL;

TActQuoraReceiveRewardReq* TActQuoraReceiveRewardReq::New() const {
  return new TActQuoraReceiveRewardReq;
}

void TActQuoraReceiveRewardReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActQuoraReceiveRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActQuoraReceiveRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActQuoraReceiveRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActQuoraReceiveRewardReq)
  return false;
#undef DO_
}

void TActQuoraReceiveRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActQuoraReceiveRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActQuoraReceiveRewardReq)
}

::google::protobuf::uint8* TActQuoraReceiveRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActQuoraReceiveRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActQuoraReceiveRewardReq)
  return target;
}

int TActQuoraReceiveRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActQuoraReceiveRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActQuoraReceiveRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActQuoraReceiveRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActQuoraReceiveRewardReq::MergeFrom(const TActQuoraReceiveRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActQuoraReceiveRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActQuoraReceiveRewardReq::CopyFrom(const TActQuoraReceiveRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActQuoraReceiveRewardReq::IsInitialized() const {

  return true;
}

void TActQuoraReceiveRewardReq::Swap(TActQuoraReceiveRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActQuoraReceiveRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActQuoraReceiveRewardReq_descriptor_;
  metadata.reflection = TActQuoraReceiveRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActQuoraReceiveRewardRsp::kRewardArrFieldNumber;
#endif  // !_MSC_VER

TActQuoraReceiveRewardRsp::TActQuoraReceiveRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActQuoraReceiveRewardRsp)
}

void TActQuoraReceiveRewardRsp::InitAsDefaultInstance() {
}

TActQuoraReceiveRewardRsp::TActQuoraReceiveRewardRsp(const TActQuoraReceiveRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActQuoraReceiveRewardRsp)
}

void TActQuoraReceiveRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActQuoraReceiveRewardRsp::~TActQuoraReceiveRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TActQuoraReceiveRewardRsp)
  SharedDtor();
}

void TActQuoraReceiveRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActQuoraReceiveRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActQuoraReceiveRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActQuoraReceiveRewardRsp_descriptor_;
}

const TActQuoraReceiveRewardRsp& TActQuoraReceiveRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  return *default_instance_;
}

TActQuoraReceiveRewardRsp* TActQuoraReceiveRewardRsp::default_instance_ = NULL;

TActQuoraReceiveRewardRsp* TActQuoraReceiveRewardRsp::New() const {
  return new TActQuoraReceiveRewardRsp;
}

void TActQuoraReceiveRewardRsp::Clear() {
  rewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActQuoraReceiveRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActQuoraReceiveRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActQuoraReceiveRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActQuoraReceiveRewardRsp)
  return false;
#undef DO_
}

void TActQuoraReceiveRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActQuoraReceiveRewardRsp)
  // repeated .pb.TCommonReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActQuoraReceiveRewardRsp)
}

::google::protobuf::uint8* TActQuoraReceiveRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActQuoraReceiveRewardRsp)
  // repeated .pb.TCommonReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActQuoraReceiveRewardRsp)
  return target;
}

int TActQuoraReceiveRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArr = 1;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActQuoraReceiveRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActQuoraReceiveRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActQuoraReceiveRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActQuoraReceiveRewardRsp::MergeFrom(const TActQuoraReceiveRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarr_.MergeFrom(from.rewardarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActQuoraReceiveRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActQuoraReceiveRewardRsp::CopyFrom(const TActQuoraReceiveRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActQuoraReceiveRewardRsp::IsInitialized() const {

  return true;
}

void TActQuoraReceiveRewardRsp::Swap(TActQuoraReceiveRewardRsp* other) {
  if (other != this) {
    rewardarr_.Swap(&other->rewardarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActQuoraReceiveRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActQuoraReceiveRewardRsp_descriptor_;
  metadata.reflection = TActQuoraReceiveRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActQuoraRechargeNotify::kRechargeKeyArrFieldNumber;
#endif  // !_MSC_VER

TActQuoraRechargeNotify::TActQuoraRechargeNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActQuoraRechargeNotify)
}

void TActQuoraRechargeNotify::InitAsDefaultInstance() {
}

TActQuoraRechargeNotify::TActQuoraRechargeNotify(const TActQuoraRechargeNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActQuoraRechargeNotify)
}

void TActQuoraRechargeNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActQuoraRechargeNotify::~TActQuoraRechargeNotify() {
  // @@protoc_insertion_point(destructor:pb.TActQuoraRechargeNotify)
  SharedDtor();
}

void TActQuoraRechargeNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActQuoraRechargeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActQuoraRechargeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActQuoraRechargeNotify_descriptor_;
}

const TActQuoraRechargeNotify& TActQuoraRechargeNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActQuoraRecharge_2eproto();
  return *default_instance_;
}

TActQuoraRechargeNotify* TActQuoraRechargeNotify::default_instance_ = NULL;

TActQuoraRechargeNotify* TActQuoraRechargeNotify::New() const {
  return new TActQuoraRechargeNotify;
}

void TActQuoraRechargeNotify::Clear() {
  rechargekeyarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActQuoraRechargeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActQuoraRechargeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActQuoraRechargeKey RechargeKeyArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RechargeKeyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rechargekeyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RechargeKeyArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActQuoraRechargeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActQuoraRechargeNotify)
  return false;
#undef DO_
}

void TActQuoraRechargeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActQuoraRechargeNotify)
  // repeated .pb.TActQuoraRechargeKey RechargeKeyArr = 1;
  for (int i = 0; i < this->rechargekeyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rechargekeyarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActQuoraRechargeNotify)
}

::google::protobuf::uint8* TActQuoraRechargeNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActQuoraRechargeNotify)
  // repeated .pb.TActQuoraRechargeKey RechargeKeyArr = 1;
  for (int i = 0; i < this->rechargekeyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rechargekeyarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActQuoraRechargeNotify)
  return target;
}

int TActQuoraRechargeNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActQuoraRechargeKey RechargeKeyArr = 1;
  total_size += 1 * this->rechargekeyarr_size();
  for (int i = 0; i < this->rechargekeyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rechargekeyarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActQuoraRechargeNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActQuoraRechargeNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActQuoraRechargeNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActQuoraRechargeNotify::MergeFrom(const TActQuoraRechargeNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  rechargekeyarr_.MergeFrom(from.rechargekeyarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActQuoraRechargeNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActQuoraRechargeNotify::CopyFrom(const TActQuoraRechargeNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActQuoraRechargeNotify::IsInitialized() const {

  return true;
}

void TActQuoraRechargeNotify::Swap(TActQuoraRechargeNotify* other) {
  if (other != this) {
    rechargekeyarr_.Swap(&other->rechargekeyarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActQuoraRechargeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActQuoraRechargeNotify_descriptor_;
  metadata.reflection = TActQuoraRechargeNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
