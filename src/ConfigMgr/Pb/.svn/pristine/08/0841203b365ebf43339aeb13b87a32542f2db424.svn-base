// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module/AdventureMapRoom.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "module/AdventureMapRoom.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* AdventureMapRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AdventureMapRoom_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_module_2fAdventureMapRoom_2eproto() {
  protobuf_AddDesc_module_2fAdventureMapRoom_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "module/AdventureMapRoom.proto");
  GOOGLE_CHECK(file != NULL);
  AdventureMapRoom_descriptor_ = file->message_type(0);
  static const int AdventureMapRoom_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdventureMapRoom, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdventureMapRoom, roomname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdventureMapRoom, blockarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdventureMapRoom, objectarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdventureMapRoom, layersize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdventureMapRoom, linkposarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdventureMapRoom, trapposarr_),
  };
  AdventureMapRoom_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AdventureMapRoom_descriptor_,
      AdventureMapRoom::default_instance_,
      AdventureMapRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdventureMapRoom, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdventureMapRoom, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AdventureMapRoom));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_module_2fAdventureMapRoom_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AdventureMapRoom_descriptor_, &AdventureMapRoom::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_module_2fAdventureMapRoom_2eproto() {
  delete AdventureMapRoom::default_instance_;
  delete AdventureMapRoom_reflection_;
}

void protobuf_AddDesc_module_2fAdventureMapRoom_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_module_2fUtil_2eproto();
  ::pb::protobuf_AddDesc_module_2fAdventureMap_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035module/AdventureMapRoom.proto\022\002pb\032\021mod"
    "ule/Util.proto\032\031module/AdventureMap.prot"
    "o\"\363\001\n\020AdventureMapRoom\022\n\n\002Id\030\001 \001(\004\022\020\n\010Ro"
    "omName\030\002 \001(\t\022$\n\010BlockArr\030\003 \003(\0132\022.pb.Adve"
    "ntureBlock\022&\n\tObjectArr\030\004 \003(\0132\023.pb.Adven"
    "tureObject\022$\n\tLayerSize\030\005 \001(\0132\021.pb.PbVec"
    "tor2_Int\022%\n\nLinkPosArr\030\006 \003(\0132\021.pb.PbVect"
    "or2_Int\022&\n\nTrapPosArr\030\007 \003(\0132\022.pb.TrapRes"
    "etPoint", 327);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "module/AdventureMapRoom.proto", &protobuf_RegisterTypes);
  AdventureMapRoom::default_instance_ = new AdventureMapRoom();
  AdventureMapRoom::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_module_2fAdventureMapRoom_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_module_2fAdventureMapRoom_2eproto {
  StaticDescriptorInitializer_module_2fAdventureMapRoom_2eproto() {
    protobuf_AddDesc_module_2fAdventureMapRoom_2eproto();
  }
} static_descriptor_initializer_module_2fAdventureMapRoom_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AdventureMapRoom::kIdFieldNumber;
const int AdventureMapRoom::kRoomNameFieldNumber;
const int AdventureMapRoom::kBlockArrFieldNumber;
const int AdventureMapRoom::kObjectArrFieldNumber;
const int AdventureMapRoom::kLayerSizeFieldNumber;
const int AdventureMapRoom::kLinkPosArrFieldNumber;
const int AdventureMapRoom::kTrapPosArrFieldNumber;
#endif  // !_MSC_VER

AdventureMapRoom::AdventureMapRoom()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.AdventureMapRoom)
}

void AdventureMapRoom::InitAsDefaultInstance() {
  layersize_ = const_cast< ::pb::PbVector2_Int*>(&::pb::PbVector2_Int::default_instance());
}

AdventureMapRoom::AdventureMapRoom(const AdventureMapRoom& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.AdventureMapRoom)
}

void AdventureMapRoom::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  roomname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layersize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AdventureMapRoom::~AdventureMapRoom() {
  // @@protoc_insertion_point(destructor:pb.AdventureMapRoom)
  SharedDtor();
}

void AdventureMapRoom::SharedDtor() {
  if (roomname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete roomname_;
  }
  if (this != default_instance_) {
    delete layersize_;
  }
}

void AdventureMapRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdventureMapRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdventureMapRoom_descriptor_;
}

const AdventureMapRoom& AdventureMapRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fAdventureMapRoom_2eproto();
  return *default_instance_;
}

AdventureMapRoom* AdventureMapRoom::default_instance_ = NULL;

AdventureMapRoom* AdventureMapRoom::New() const {
  return new AdventureMapRoom;
}

void AdventureMapRoom::Clear() {
  if (_has_bits_[0 / 32] & 19) {
    id_ = GOOGLE_ULONGLONG(0);
    if (has_roomname()) {
      if (roomname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        roomname_->clear();
      }
    }
    if (has_layersize()) {
      if (layersize_ != NULL) layersize_->::pb::PbVector2_Int::Clear();
    }
  }
  blockarr_.Clear();
  objectarr_.Clear();
  linkposarr_.Clear();
  trapposarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AdventureMapRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.AdventureMapRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RoomName;
        break;
      }

      // optional string RoomName = 2;
      case 2: {
        if (tag == 18) {
         parse_RoomName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomname().data(), this->roomname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roomname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BlockArr;
        break;
      }

      // repeated .pb.AdventureBlock BlockArr = 3;
      case 3: {
        if (tag == 26) {
         parse_BlockArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blockarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BlockArr;
        if (input->ExpectTag(34)) goto parse_ObjectArr;
        break;
      }

      // repeated .pb.AdventureObject ObjectArr = 4;
      case 4: {
        if (tag == 34) {
         parse_ObjectArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_objectarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ObjectArr;
        if (input->ExpectTag(42)) goto parse_LayerSize;
        break;
      }

      // optional .pb.PbVector2_Int LayerSize = 5;
      case 5: {
        if (tag == 42) {
         parse_LayerSize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_layersize()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_LinkPosArr;
        break;
      }

      // repeated .pb.PbVector2_Int LinkPosArr = 6;
      case 6: {
        if (tag == 50) {
         parse_LinkPosArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_linkposarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_LinkPosArr;
        if (input->ExpectTag(58)) goto parse_TrapPosArr;
        break;
      }

      // repeated .pb.TrapResetPoint TrapPosArr = 7;
      case 7: {
        if (tag == 58) {
         parse_TrapPosArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_trapposarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_TrapPosArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.AdventureMapRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.AdventureMapRoom)
  return false;
#undef DO_
}

void AdventureMapRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.AdventureMapRoom)
  // optional uint64 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional string RoomName = 2;
  if (has_roomname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roomname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->roomname(), output);
  }

  // repeated .pb.AdventureBlock BlockArr = 3;
  for (int i = 0; i < this->blockarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->blockarr(i), output);
  }

  // repeated .pb.AdventureObject ObjectArr = 4;
  for (int i = 0; i < this->objectarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->objectarr(i), output);
  }

  // optional .pb.PbVector2_Int LayerSize = 5;
  if (has_layersize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->layersize(), output);
  }

  // repeated .pb.PbVector2_Int LinkPosArr = 6;
  for (int i = 0; i < this->linkposarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->linkposarr(i), output);
  }

  // repeated .pb.TrapResetPoint TrapPosArr = 7;
  for (int i = 0; i < this->trapposarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->trapposarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.AdventureMapRoom)
}

::google::protobuf::uint8* AdventureMapRoom::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.AdventureMapRoom)
  // optional uint64 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional string RoomName = 2;
  if (has_roomname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roomname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomname(), target);
  }

  // repeated .pb.AdventureBlock BlockArr = 3;
  for (int i = 0; i < this->blockarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->blockarr(i), target);
  }

  // repeated .pb.AdventureObject ObjectArr = 4;
  for (int i = 0; i < this->objectarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->objectarr(i), target);
  }

  // optional .pb.PbVector2_Int LayerSize = 5;
  if (has_layersize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->layersize(), target);
  }

  // repeated .pb.PbVector2_Int LinkPosArr = 6;
  for (int i = 0; i < this->linkposarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->linkposarr(i), target);
  }

  // repeated .pb.TrapResetPoint TrapPosArr = 7;
  for (int i = 0; i < this->trapposarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->trapposarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.AdventureMapRoom)
  return target;
}

int AdventureMapRoom::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional string RoomName = 2;
    if (has_roomname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomname());
    }

    // optional .pb.PbVector2_Int LayerSize = 5;
    if (has_layersize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->layersize());
    }

  }
  // repeated .pb.AdventureBlock BlockArr = 3;
  total_size += 1 * this->blockarr_size();
  for (int i = 0; i < this->blockarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->blockarr(i));
  }

  // repeated .pb.AdventureObject ObjectArr = 4;
  total_size += 1 * this->objectarr_size();
  for (int i = 0; i < this->objectarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objectarr(i));
  }

  // repeated .pb.PbVector2_Int LinkPosArr = 6;
  total_size += 1 * this->linkposarr_size();
  for (int i = 0; i < this->linkposarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->linkposarr(i));
  }

  // repeated .pb.TrapResetPoint TrapPosArr = 7;
  total_size += 1 * this->trapposarr_size();
  for (int i = 0; i < this->trapposarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->trapposarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdventureMapRoom::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AdventureMapRoom* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AdventureMapRoom*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AdventureMapRoom::MergeFrom(const AdventureMapRoom& from) {
  GOOGLE_CHECK_NE(&from, this);
  blockarr_.MergeFrom(from.blockarr_);
  objectarr_.MergeFrom(from.objectarr_);
  linkposarr_.MergeFrom(from.linkposarr_);
  trapposarr_.MergeFrom(from.trapposarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_roomname()) {
      set_roomname(from.roomname());
    }
    if (from.has_layersize()) {
      mutable_layersize()->::pb::PbVector2_Int::MergeFrom(from.layersize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AdventureMapRoom::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdventureMapRoom::CopyFrom(const AdventureMapRoom& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdventureMapRoom::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->objectarr())) return false;
  return true;
}

void AdventureMapRoom::Swap(AdventureMapRoom* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(roomname_, other->roomname_);
    blockarr_.Swap(&other->blockarr_);
    objectarr_.Swap(&other->objectarr_);
    std::swap(layersize_, other->layersize_);
    linkposarr_.Swap(&other->linkposarr_);
    trapposarr_.Swap(&other->trapposarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AdventureMapRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AdventureMapRoom_descriptor_;
  metadata.reflection = AdventureMapRoom_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
