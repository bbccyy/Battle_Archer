// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/City.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/City.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TCityBuildAppoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCityBuildAppoint_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCityBuildAppointSingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCityBuildAppointSingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCityBuildData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCityBuildData_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCityResBuyData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCityResBuyData_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCityGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCityGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCitySetSceneReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCitySetSceneReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCityUpgradeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCityUpgradeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCityItemReduceCDReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCityItemReduceCDReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCityExchangeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCityExchangeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCityBuildArrPush_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCityBuildArrPush_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCityBuildUnlockReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCityBuildUnlockReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCityAppointHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCityAppointHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCityRelieveAppointHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCityRelieveAppointHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TCityBuyResourceReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TCityBuyResourceReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fCity_2eproto() {
  protobuf_AddDesc_net_2fCity_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/City.proto");
  GOOGLE_CHECK(file != NULL);
  TCityBuildAppoint_descriptor_ = file->message_type(0);
  static const int TCityBuildAppoint_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildAppoint, btid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildAppoint, singlearr_),
  };
  TCityBuildAppoint_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCityBuildAppoint_descriptor_,
      TCityBuildAppoint::default_instance_,
      TCityBuildAppoint_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildAppoint, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildAppoint, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCityBuildAppoint));
  TCityBuildAppointSingle_descriptor_ = file->message_type(1);
  static const int TCityBuildAppointSingle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildAppointSingle, appointindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildAppointSingle, hid_),
  };
  TCityBuildAppointSingle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCityBuildAppointSingle_descriptor_,
      TCityBuildAppointSingle::default_instance_,
      TCityBuildAppointSingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildAppointSingle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildAppointSingle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCityBuildAppointSingle));
  TCityBuildData_descriptor_ = file->message_type(2);
  static const int TCityBuildData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildData, buildid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildData, level_),
  };
  TCityBuildData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCityBuildData_descriptor_,
      TCityBuildData::default_instance_,
      TCityBuildData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCityBuildData));
  TCityResBuyData_descriptor_ = file->message_type(3);
  static const int TCityResBuyData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityResBuyData, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityResBuyData, hasbuynum_),
  };
  TCityResBuyData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCityResBuyData_descriptor_,
      TCityResBuyData::default_instance_,
      TCityResBuyData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityResBuyData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityResBuyData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCityResBuyData));
  TCityGetInfoRsp_descriptor_ = file->message_type(4);
  static const int TCityGetInfoRsp_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityGetInfoRsp, buildarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityGetInfoRsp, appointarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityGetInfoRsp, endcdtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityGetInfoRsp, dailyresbuyarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityGetInfoRsp, dailyresbuyrefreshtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityGetInfoRsp, scene_),
  };
  TCityGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCityGetInfoRsp_descriptor_,
      TCityGetInfoRsp::default_instance_,
      TCityGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCityGetInfoRsp));
  TCitySetSceneReq_descriptor_ = file->message_type(5);
  static const int TCitySetSceneReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCitySetSceneReq, scene_),
  };
  TCitySetSceneReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCitySetSceneReq_descriptor_,
      TCitySetSceneReq::default_instance_,
      TCitySetSceneReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCitySetSceneReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCitySetSceneReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCitySetSceneReq));
  TCityUpgradeReq_descriptor_ = file->message_type(6);
  static const int TCityUpgradeReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityUpgradeReq, buildid_),
  };
  TCityUpgradeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCityUpgradeReq_descriptor_,
      TCityUpgradeReq::default_instance_,
      TCityUpgradeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityUpgradeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityUpgradeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCityUpgradeReq));
  TCityItemReduceCDReq_descriptor_ = file->message_type(7);
  static const int TCityItemReduceCDReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityItemReduceCDReq, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityItemReduceCDReq, num_),
  };
  TCityItemReduceCDReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCityItemReduceCDReq_descriptor_,
      TCityItemReduceCDReq::default_instance_,
      TCityItemReduceCDReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityItemReduceCDReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityItemReduceCDReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCityItemReduceCDReq));
  TCityExchangeReq_descriptor_ = file->message_type(8);
  static const int TCityExchangeReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityExchangeReq, resourceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityExchangeReq, resourcenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityExchangeReq, targetresouceid_),
  };
  TCityExchangeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCityExchangeReq_descriptor_,
      TCityExchangeReq::default_instance_,
      TCityExchangeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityExchangeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityExchangeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCityExchangeReq));
  TCityBuildArrPush_descriptor_ = file->message_type(9);
  static const int TCityBuildArrPush_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildArrPush, buildarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildArrPush, appointarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildArrPush, dailyresbuyarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildArrPush, endcdtime_),
  };
  TCityBuildArrPush_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCityBuildArrPush_descriptor_,
      TCityBuildArrPush::default_instance_,
      TCityBuildArrPush_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildArrPush, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildArrPush, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCityBuildArrPush));
  TCityBuildUnlockReq_descriptor_ = file->message_type(10);
  static const int TCityBuildUnlockReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildUnlockReq, buildid_),
  };
  TCityBuildUnlockReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCityBuildUnlockReq_descriptor_,
      TCityBuildUnlockReq::default_instance_,
      TCityBuildUnlockReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildUnlockReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuildUnlockReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCityBuildUnlockReq));
  TCityAppointHeroReq_descriptor_ = file->message_type(11);
  static const int TCityAppointHeroReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityAppointHeroReq, btid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityAppointHeroReq, appointindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityAppointHeroReq, hid_),
  };
  TCityAppointHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCityAppointHeroReq_descriptor_,
      TCityAppointHeroReq::default_instance_,
      TCityAppointHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityAppointHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityAppointHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCityAppointHeroReq));
  TCityRelieveAppointHeroReq_descriptor_ = file->message_type(12);
  static const int TCityRelieveAppointHeroReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityRelieveAppointHeroReq, btid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityRelieveAppointHeroReq, appointindex_),
  };
  TCityRelieveAppointHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCityRelieveAppointHeroReq_descriptor_,
      TCityRelieveAppointHeroReq::default_instance_,
      TCityRelieveAppointHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityRelieveAppointHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityRelieveAppointHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCityRelieveAppointHeroReq));
  TCityBuyResourceReq_descriptor_ = file->message_type(13);
  static const int TCityBuyResourceReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuyResourceReq, resbuytid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuyResourceReq, num_),
  };
  TCityBuyResourceReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TCityBuyResourceReq_descriptor_,
      TCityBuyResourceReq::default_instance_,
      TCityBuyResourceReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuyResourceReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TCityBuyResourceReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TCityBuyResourceReq));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fCity_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCityBuildAppoint_descriptor_, &TCityBuildAppoint::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCityBuildAppointSingle_descriptor_, &TCityBuildAppointSingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCityBuildData_descriptor_, &TCityBuildData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCityResBuyData_descriptor_, &TCityResBuyData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCityGetInfoRsp_descriptor_, &TCityGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCitySetSceneReq_descriptor_, &TCitySetSceneReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCityUpgradeReq_descriptor_, &TCityUpgradeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCityItemReduceCDReq_descriptor_, &TCityItemReduceCDReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCityExchangeReq_descriptor_, &TCityExchangeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCityBuildArrPush_descriptor_, &TCityBuildArrPush::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCityBuildUnlockReq_descriptor_, &TCityBuildUnlockReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCityAppointHeroReq_descriptor_, &TCityAppointHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCityRelieveAppointHeroReq_descriptor_, &TCityRelieveAppointHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TCityBuyResourceReq_descriptor_, &TCityBuyResourceReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fCity_2eproto() {
  delete TCityBuildAppoint::default_instance_;
  delete TCityBuildAppoint_reflection_;
  delete TCityBuildAppointSingle::default_instance_;
  delete TCityBuildAppointSingle_reflection_;
  delete TCityBuildData::default_instance_;
  delete TCityBuildData_reflection_;
  delete TCityResBuyData::default_instance_;
  delete TCityResBuyData_reflection_;
  delete TCityGetInfoRsp::default_instance_;
  delete TCityGetInfoRsp_reflection_;
  delete TCitySetSceneReq::default_instance_;
  delete TCitySetSceneReq_reflection_;
  delete TCityUpgradeReq::default_instance_;
  delete TCityUpgradeReq_reflection_;
  delete TCityItemReduceCDReq::default_instance_;
  delete TCityItemReduceCDReq_reflection_;
  delete TCityExchangeReq::default_instance_;
  delete TCityExchangeReq_reflection_;
  delete TCityBuildArrPush::default_instance_;
  delete TCityBuildArrPush_reflection_;
  delete TCityBuildUnlockReq::default_instance_;
  delete TCityBuildUnlockReq_reflection_;
  delete TCityAppointHeroReq::default_instance_;
  delete TCityAppointHeroReq_reflection_;
  delete TCityRelieveAppointHeroReq::default_instance_;
  delete TCityRelieveAppointHeroReq_reflection_;
  delete TCityBuyResourceReq::default_instance_;
  delete TCityBuyResourceReq_reflection_;
}

void protobuf_AddDesc_net_2fCity_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016net/City.proto\022\002pb\"Q\n\021TCityBuildAppoin"
    "t\022\014\n\004Btid\030\001 \001(\r\022.\n\tSingleArr\030\002 \003(\0132\033.pb."
    "TCityBuildAppointSingle\"<\n\027TCityBuildApp"
    "ointSingle\022\024\n\014AppointIndex\030\001 \001(\r\022\013\n\003Hid\030"
    "\002 \001(\r\"0\n\016TCityBuildData\022\017\n\007BuildId\030\001 \001(\r"
    "\022\r\n\005Level\030\002 \001(\r\"1\n\017TCityResBuyData\022\013\n\003Ti"
    "d\030\001 \001(\r\022\021\n\tHasBuyNum\030\002 \001(\r\"\321\001\n\017TCityGetI"
    "nfoRsp\022$\n\010BuildArr\030\001 \003(\0132\022.pb.TCityBuild"
    "Data\022)\n\nAppointArr\030\002 \003(\0132\025.pb.TCityBuild"
    "Appoint\022\021\n\tEndCdTime\030\003 \001(\003\022+\n\016DailyResBu"
    "yArr\030\004 \003(\0132\023.pb.TCityResBuyData\022\036\n\026Daily"
    "ResBuyRefreshTime\030\005 \001(\003\022\r\n\005Scene\030\006 \001(\t\"!"
    "\n\020TCitySetSceneReq\022\r\n\005Scene\030\001 \001(\t\"\"\n\017TCi"
    "tyUpgradeReq\022\017\n\007BuildId\030\001 \001(\r\"0\n\024TCityIt"
    "emReduceCDReq\022\013\n\003Tid\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\""
    "T\n\020TCityExchangeReq\022\022\n\nResourceId\030\001 \001(\r\022"
    "\023\n\013ResourceNum\030\002 \001(\r\022\027\n\017targetResouceId\030"
    "\003 \001(\r\"\244\001\n\021TCityBuildArrPush\022$\n\010BuildArr\030"
    "\001 \003(\0132\022.pb.TCityBuildData\022)\n\nAppointArr\030"
    "\002 \003(\0132\025.pb.TCityBuildAppoint\022+\n\016DailyRes"
    "BuyArr\030\003 \003(\0132\023.pb.TCityResBuyData\022\021\n\tEnd"
    "CdTime\030\004 \001(\003\"&\n\023TCityBuildUnlockReq\022\017\n\007B"
    "uildId\030\001 \001(\r\"F\n\023TCityAppointHeroReq\022\014\n\004B"
    "tid\030\001 \001(\r\022\024\n\014AppointIndex\030\002 \001(\r\022\013\n\003Hid\030\003"
    " \001(\r\"@\n\032TCityRelieveAppointHeroReq\022\014\n\004Bt"
    "id\030\001 \001(\r\022\024\n\014AppointIndex\030\002 \001(\r\"5\n\023TCityB"
    "uyResourceReq\022\021\n\tResBuyTid\030\001 \001(\r\022\013\n\003Num\030"
    "\002 \001(\r", 1085);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/City.proto", &protobuf_RegisterTypes);
  TCityBuildAppoint::default_instance_ = new TCityBuildAppoint();
  TCityBuildAppointSingle::default_instance_ = new TCityBuildAppointSingle();
  TCityBuildData::default_instance_ = new TCityBuildData();
  TCityResBuyData::default_instance_ = new TCityResBuyData();
  TCityGetInfoRsp::default_instance_ = new TCityGetInfoRsp();
  TCitySetSceneReq::default_instance_ = new TCitySetSceneReq();
  TCityUpgradeReq::default_instance_ = new TCityUpgradeReq();
  TCityItemReduceCDReq::default_instance_ = new TCityItemReduceCDReq();
  TCityExchangeReq::default_instance_ = new TCityExchangeReq();
  TCityBuildArrPush::default_instance_ = new TCityBuildArrPush();
  TCityBuildUnlockReq::default_instance_ = new TCityBuildUnlockReq();
  TCityAppointHeroReq::default_instance_ = new TCityAppointHeroReq();
  TCityRelieveAppointHeroReq::default_instance_ = new TCityRelieveAppointHeroReq();
  TCityBuyResourceReq::default_instance_ = new TCityBuyResourceReq();
  TCityBuildAppoint::default_instance_->InitAsDefaultInstance();
  TCityBuildAppointSingle::default_instance_->InitAsDefaultInstance();
  TCityBuildData::default_instance_->InitAsDefaultInstance();
  TCityResBuyData::default_instance_->InitAsDefaultInstance();
  TCityGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TCitySetSceneReq::default_instance_->InitAsDefaultInstance();
  TCityUpgradeReq::default_instance_->InitAsDefaultInstance();
  TCityItemReduceCDReq::default_instance_->InitAsDefaultInstance();
  TCityExchangeReq::default_instance_->InitAsDefaultInstance();
  TCityBuildArrPush::default_instance_->InitAsDefaultInstance();
  TCityBuildUnlockReq::default_instance_->InitAsDefaultInstance();
  TCityAppointHeroReq::default_instance_->InitAsDefaultInstance();
  TCityRelieveAppointHeroReq::default_instance_->InitAsDefaultInstance();
  TCityBuyResourceReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fCity_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fCity_2eproto {
  StaticDescriptorInitializer_net_2fCity_2eproto() {
    protobuf_AddDesc_net_2fCity_2eproto();
  }
} static_descriptor_initializer_net_2fCity_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TCityBuildAppoint::kBtidFieldNumber;
const int TCityBuildAppoint::kSingleArrFieldNumber;
#endif  // !_MSC_VER

TCityBuildAppoint::TCityBuildAppoint()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCityBuildAppoint)
}

void TCityBuildAppoint::InitAsDefaultInstance() {
}

TCityBuildAppoint::TCityBuildAppoint(const TCityBuildAppoint& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCityBuildAppoint)
}

void TCityBuildAppoint::SharedCtor() {
  _cached_size_ = 0;
  btid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCityBuildAppoint::~TCityBuildAppoint() {
  // @@protoc_insertion_point(destructor:pb.TCityBuildAppoint)
  SharedDtor();
}

void TCityBuildAppoint::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCityBuildAppoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCityBuildAppoint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCityBuildAppoint_descriptor_;
}

const TCityBuildAppoint& TCityBuildAppoint::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCityBuildAppoint* TCityBuildAppoint::default_instance_ = NULL;

TCityBuildAppoint* TCityBuildAppoint::New() const {
  return new TCityBuildAppoint;
}

void TCityBuildAppoint::Clear() {
  btid_ = 0u;
  singlearr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCityBuildAppoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCityBuildAppoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Btid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &btid_)));
          set_has_btid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SingleArr;
        break;
      }

      // repeated .pb.TCityBuildAppointSingle SingleArr = 2;
      case 2: {
        if (tag == 18) {
         parse_SingleArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_singlearr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SingleArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCityBuildAppoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCityBuildAppoint)
  return false;
#undef DO_
}

void TCityBuildAppoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCityBuildAppoint)
  // optional uint32 Btid = 1;
  if (has_btid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->btid(), output);
  }

  // repeated .pb.TCityBuildAppointSingle SingleArr = 2;
  for (int i = 0; i < this->singlearr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->singlearr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCityBuildAppoint)
}

::google::protobuf::uint8* TCityBuildAppoint::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCityBuildAppoint)
  // optional uint32 Btid = 1;
  if (has_btid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->btid(), target);
  }

  // repeated .pb.TCityBuildAppointSingle SingleArr = 2;
  for (int i = 0; i < this->singlearr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->singlearr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCityBuildAppoint)
  return target;
}

int TCityBuildAppoint::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Btid = 1;
    if (has_btid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->btid());
    }

  }
  // repeated .pb.TCityBuildAppointSingle SingleArr = 2;
  total_size += 1 * this->singlearr_size();
  for (int i = 0; i < this->singlearr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->singlearr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCityBuildAppoint::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCityBuildAppoint* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCityBuildAppoint*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCityBuildAppoint::MergeFrom(const TCityBuildAppoint& from) {
  GOOGLE_CHECK_NE(&from, this);
  singlearr_.MergeFrom(from.singlearr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_btid()) {
      set_btid(from.btid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCityBuildAppoint::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCityBuildAppoint::CopyFrom(const TCityBuildAppoint& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCityBuildAppoint::IsInitialized() const {

  return true;
}

void TCityBuildAppoint::Swap(TCityBuildAppoint* other) {
  if (other != this) {
    std::swap(btid_, other->btid_);
    singlearr_.Swap(&other->singlearr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCityBuildAppoint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCityBuildAppoint_descriptor_;
  metadata.reflection = TCityBuildAppoint_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCityBuildAppointSingle::kAppointIndexFieldNumber;
const int TCityBuildAppointSingle::kHidFieldNumber;
#endif  // !_MSC_VER

TCityBuildAppointSingle::TCityBuildAppointSingle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCityBuildAppointSingle)
}

void TCityBuildAppointSingle::InitAsDefaultInstance() {
}

TCityBuildAppointSingle::TCityBuildAppointSingle(const TCityBuildAppointSingle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCityBuildAppointSingle)
}

void TCityBuildAppointSingle::SharedCtor() {
  _cached_size_ = 0;
  appointindex_ = 0u;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCityBuildAppointSingle::~TCityBuildAppointSingle() {
  // @@protoc_insertion_point(destructor:pb.TCityBuildAppointSingle)
  SharedDtor();
}

void TCityBuildAppointSingle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCityBuildAppointSingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCityBuildAppointSingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCityBuildAppointSingle_descriptor_;
}

const TCityBuildAppointSingle& TCityBuildAppointSingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCityBuildAppointSingle* TCityBuildAppointSingle::default_instance_ = NULL;

TCityBuildAppointSingle* TCityBuildAppointSingle::New() const {
  return new TCityBuildAppointSingle;
}

void TCityBuildAppointSingle::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TCityBuildAppointSingle*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(appointindex_, hid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCityBuildAppointSingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCityBuildAppointSingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AppointIndex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appointindex_)));
          set_has_appointindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Hid;
        break;
      }

      // optional uint32 Hid = 2;
      case 2: {
        if (tag == 16) {
         parse_Hid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCityBuildAppointSingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCityBuildAppointSingle)
  return false;
#undef DO_
}

void TCityBuildAppointSingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCityBuildAppointSingle)
  // optional uint32 AppointIndex = 1;
  if (has_appointindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appointindex(), output);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCityBuildAppointSingle)
}

::google::protobuf::uint8* TCityBuildAppointSingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCityBuildAppointSingle)
  // optional uint32 AppointIndex = 1;
  if (has_appointindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appointindex(), target);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCityBuildAppointSingle)
  return target;
}

int TCityBuildAppointSingle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 AppointIndex = 1;
    if (has_appointindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appointindex());
    }

    // optional uint32 Hid = 2;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCityBuildAppointSingle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCityBuildAppointSingle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCityBuildAppointSingle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCityBuildAppointSingle::MergeFrom(const TCityBuildAppointSingle& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_appointindex()) {
      set_appointindex(from.appointindex());
    }
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCityBuildAppointSingle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCityBuildAppointSingle::CopyFrom(const TCityBuildAppointSingle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCityBuildAppointSingle::IsInitialized() const {

  return true;
}

void TCityBuildAppointSingle::Swap(TCityBuildAppointSingle* other) {
  if (other != this) {
    std::swap(appointindex_, other->appointindex_);
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCityBuildAppointSingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCityBuildAppointSingle_descriptor_;
  metadata.reflection = TCityBuildAppointSingle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCityBuildData::kBuildIdFieldNumber;
const int TCityBuildData::kLevelFieldNumber;
#endif  // !_MSC_VER

TCityBuildData::TCityBuildData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCityBuildData)
}

void TCityBuildData::InitAsDefaultInstance() {
}

TCityBuildData::TCityBuildData(const TCityBuildData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCityBuildData)
}

void TCityBuildData::SharedCtor() {
  _cached_size_ = 0;
  buildid_ = 0u;
  level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCityBuildData::~TCityBuildData() {
  // @@protoc_insertion_point(destructor:pb.TCityBuildData)
  SharedDtor();
}

void TCityBuildData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCityBuildData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCityBuildData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCityBuildData_descriptor_;
}

const TCityBuildData& TCityBuildData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCityBuildData* TCityBuildData::default_instance_ = NULL;

TCityBuildData* TCityBuildData::New() const {
  return new TCityBuildData;
}

void TCityBuildData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TCityBuildData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(buildid_, level_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCityBuildData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCityBuildData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BuildId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buildid_)));
          set_has_buildid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 2;
      case 2: {
        if (tag == 16) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCityBuildData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCityBuildData)
  return false;
#undef DO_
}

void TCityBuildData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCityBuildData)
  // optional uint32 BuildId = 1;
  if (has_buildid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->buildid(), output);
  }

  // optional uint32 Level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCityBuildData)
}

::google::protobuf::uint8* TCityBuildData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCityBuildData)
  // optional uint32 BuildId = 1;
  if (has_buildid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->buildid(), target);
  }

  // optional uint32 Level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCityBuildData)
  return target;
}

int TCityBuildData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BuildId = 1;
    if (has_buildid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buildid());
    }

    // optional uint32 Level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCityBuildData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCityBuildData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCityBuildData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCityBuildData::MergeFrom(const TCityBuildData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buildid()) {
      set_buildid(from.buildid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCityBuildData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCityBuildData::CopyFrom(const TCityBuildData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCityBuildData::IsInitialized() const {

  return true;
}

void TCityBuildData::Swap(TCityBuildData* other) {
  if (other != this) {
    std::swap(buildid_, other->buildid_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCityBuildData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCityBuildData_descriptor_;
  metadata.reflection = TCityBuildData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCityResBuyData::kTidFieldNumber;
const int TCityResBuyData::kHasBuyNumFieldNumber;
#endif  // !_MSC_VER

TCityResBuyData::TCityResBuyData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCityResBuyData)
}

void TCityResBuyData::InitAsDefaultInstance() {
}

TCityResBuyData::TCityResBuyData(const TCityResBuyData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCityResBuyData)
}

void TCityResBuyData::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  hasbuynum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCityResBuyData::~TCityResBuyData() {
  // @@protoc_insertion_point(destructor:pb.TCityResBuyData)
  SharedDtor();
}

void TCityResBuyData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCityResBuyData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCityResBuyData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCityResBuyData_descriptor_;
}

const TCityResBuyData& TCityResBuyData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCityResBuyData* TCityResBuyData::default_instance_ = NULL;

TCityResBuyData* TCityResBuyData::New() const {
  return new TCityResBuyData;
}

void TCityResBuyData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TCityResBuyData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tid_, hasbuynum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCityResBuyData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCityResBuyData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_HasBuyNum;
        break;
      }

      // optional uint32 HasBuyNum = 2;
      case 2: {
        if (tag == 16) {
         parse_HasBuyNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hasbuynum_)));
          set_has_hasbuynum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCityResBuyData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCityResBuyData)
  return false;
#undef DO_
}

void TCityResBuyData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCityResBuyData)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 HasBuyNum = 2;
  if (has_hasbuynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hasbuynum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCityResBuyData)
}

::google::protobuf::uint8* TCityResBuyData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCityResBuyData)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 HasBuyNum = 2;
  if (has_hasbuynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hasbuynum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCityResBuyData)
  return target;
}

int TCityResBuyData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 HasBuyNum = 2;
    if (has_hasbuynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hasbuynum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCityResBuyData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCityResBuyData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCityResBuyData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCityResBuyData::MergeFrom(const TCityResBuyData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_hasbuynum()) {
      set_hasbuynum(from.hasbuynum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCityResBuyData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCityResBuyData::CopyFrom(const TCityResBuyData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCityResBuyData::IsInitialized() const {

  return true;
}

void TCityResBuyData::Swap(TCityResBuyData* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(hasbuynum_, other->hasbuynum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCityResBuyData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCityResBuyData_descriptor_;
  metadata.reflection = TCityResBuyData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCityGetInfoRsp::kBuildArrFieldNumber;
const int TCityGetInfoRsp::kAppointArrFieldNumber;
const int TCityGetInfoRsp::kEndCdTimeFieldNumber;
const int TCityGetInfoRsp::kDailyResBuyArrFieldNumber;
const int TCityGetInfoRsp::kDailyResBuyRefreshTimeFieldNumber;
const int TCityGetInfoRsp::kSceneFieldNumber;
#endif  // !_MSC_VER

TCityGetInfoRsp::TCityGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCityGetInfoRsp)
}

void TCityGetInfoRsp::InitAsDefaultInstance() {
}

TCityGetInfoRsp::TCityGetInfoRsp(const TCityGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCityGetInfoRsp)
}

void TCityGetInfoRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  endcdtime_ = GOOGLE_LONGLONG(0);
  dailyresbuyrefreshtime_ = GOOGLE_LONGLONG(0);
  scene_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCityGetInfoRsp::~TCityGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TCityGetInfoRsp)
  SharedDtor();
}

void TCityGetInfoRsp::SharedDtor() {
  if (scene_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scene_;
  }
  if (this != default_instance_) {
  }
}

void TCityGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCityGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCityGetInfoRsp_descriptor_;
}

const TCityGetInfoRsp& TCityGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCityGetInfoRsp* TCityGetInfoRsp::default_instance_ = NULL;

TCityGetInfoRsp* TCityGetInfoRsp::New() const {
  return new TCityGetInfoRsp;
}

void TCityGetInfoRsp::Clear() {
  if (_has_bits_[0 / 32] & 52) {
    endcdtime_ = GOOGLE_LONGLONG(0);
    dailyresbuyrefreshtime_ = GOOGLE_LONGLONG(0);
    if (has_scene()) {
      if (scene_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scene_->clear();
      }
    }
  }
  buildarr_.Clear();
  appointarr_.Clear();
  dailyresbuyarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCityGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCityGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCityBuildData BuildArr = 1;
      case 1: {
        if (tag == 10) {
         parse_BuildArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buildarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_BuildArr;
        if (input->ExpectTag(18)) goto parse_AppointArr;
        break;
      }

      // repeated .pb.TCityBuildAppoint AppointArr = 2;
      case 2: {
        if (tag == 18) {
         parse_AppointArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_appointarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_AppointArr;
        if (input->ExpectTag(24)) goto parse_EndCdTime;
        break;
      }

      // optional int64 EndCdTime = 3;
      case 3: {
        if (tag == 24) {
         parse_EndCdTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endcdtime_)));
          set_has_endcdtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_DailyResBuyArr;
        break;
      }

      // repeated .pb.TCityResBuyData DailyResBuyArr = 4;
      case 4: {
        if (tag == 34) {
         parse_DailyResBuyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dailyresbuyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_DailyResBuyArr;
        if (input->ExpectTag(40)) goto parse_DailyResBuyRefreshTime;
        break;
      }

      // optional int64 DailyResBuyRefreshTime = 5;
      case 5: {
        if (tag == 40) {
         parse_DailyResBuyRefreshTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dailyresbuyrefreshtime_)));
          set_has_dailyresbuyrefreshtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Scene;
        break;
      }

      // optional string Scene = 6;
      case 6: {
        if (tag == 50) {
         parse_Scene:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scene()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scene().data(), this->scene().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scene");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCityGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCityGetInfoRsp)
  return false;
#undef DO_
}

void TCityGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCityGetInfoRsp)
  // repeated .pb.TCityBuildData BuildArr = 1;
  for (int i = 0; i < this->buildarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->buildarr(i), output);
  }

  // repeated .pb.TCityBuildAppoint AppointArr = 2;
  for (int i = 0; i < this->appointarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->appointarr(i), output);
  }

  // optional int64 EndCdTime = 3;
  if (has_endcdtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->endcdtime(), output);
  }

  // repeated .pb.TCityResBuyData DailyResBuyArr = 4;
  for (int i = 0; i < this->dailyresbuyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->dailyresbuyarr(i), output);
  }

  // optional int64 DailyResBuyRefreshTime = 5;
  if (has_dailyresbuyrefreshtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->dailyresbuyrefreshtime(), output);
  }

  // optional string Scene = 6;
  if (has_scene()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scene().data(), this->scene().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scene");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->scene(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCityGetInfoRsp)
}

::google::protobuf::uint8* TCityGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCityGetInfoRsp)
  // repeated .pb.TCityBuildData BuildArr = 1;
  for (int i = 0; i < this->buildarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->buildarr(i), target);
  }

  // repeated .pb.TCityBuildAppoint AppointArr = 2;
  for (int i = 0; i < this->appointarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->appointarr(i), target);
  }

  // optional int64 EndCdTime = 3;
  if (has_endcdtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->endcdtime(), target);
  }

  // repeated .pb.TCityResBuyData DailyResBuyArr = 4;
  for (int i = 0; i < this->dailyresbuyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->dailyresbuyarr(i), target);
  }

  // optional int64 DailyResBuyRefreshTime = 5;
  if (has_dailyresbuyrefreshtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->dailyresbuyrefreshtime(), target);
  }

  // optional string Scene = 6;
  if (has_scene()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scene().data(), this->scene().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scene");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->scene(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCityGetInfoRsp)
  return target;
}

int TCityGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional int64 EndCdTime = 3;
    if (has_endcdtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->endcdtime());
    }

    // optional int64 DailyResBuyRefreshTime = 5;
    if (has_dailyresbuyrefreshtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dailyresbuyrefreshtime());
    }

    // optional string Scene = 6;
    if (has_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scene());
    }

  }
  // repeated .pb.TCityBuildData BuildArr = 1;
  total_size += 1 * this->buildarr_size();
  for (int i = 0; i < this->buildarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buildarr(i));
  }

  // repeated .pb.TCityBuildAppoint AppointArr = 2;
  total_size += 1 * this->appointarr_size();
  for (int i = 0; i < this->appointarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->appointarr(i));
  }

  // repeated .pb.TCityResBuyData DailyResBuyArr = 4;
  total_size += 1 * this->dailyresbuyarr_size();
  for (int i = 0; i < this->dailyresbuyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dailyresbuyarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCityGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCityGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCityGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCityGetInfoRsp::MergeFrom(const TCityGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  buildarr_.MergeFrom(from.buildarr_);
  appointarr_.MergeFrom(from.appointarr_);
  dailyresbuyarr_.MergeFrom(from.dailyresbuyarr_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_endcdtime()) {
      set_endcdtime(from.endcdtime());
    }
    if (from.has_dailyresbuyrefreshtime()) {
      set_dailyresbuyrefreshtime(from.dailyresbuyrefreshtime());
    }
    if (from.has_scene()) {
      set_scene(from.scene());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCityGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCityGetInfoRsp::CopyFrom(const TCityGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCityGetInfoRsp::IsInitialized() const {

  return true;
}

void TCityGetInfoRsp::Swap(TCityGetInfoRsp* other) {
  if (other != this) {
    buildarr_.Swap(&other->buildarr_);
    appointarr_.Swap(&other->appointarr_);
    std::swap(endcdtime_, other->endcdtime_);
    dailyresbuyarr_.Swap(&other->dailyresbuyarr_);
    std::swap(dailyresbuyrefreshtime_, other->dailyresbuyrefreshtime_);
    std::swap(scene_, other->scene_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCityGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCityGetInfoRsp_descriptor_;
  metadata.reflection = TCityGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCitySetSceneReq::kSceneFieldNumber;
#endif  // !_MSC_VER

TCitySetSceneReq::TCitySetSceneReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCitySetSceneReq)
}

void TCitySetSceneReq::InitAsDefaultInstance() {
}

TCitySetSceneReq::TCitySetSceneReq(const TCitySetSceneReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCitySetSceneReq)
}

void TCitySetSceneReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  scene_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCitySetSceneReq::~TCitySetSceneReq() {
  // @@protoc_insertion_point(destructor:pb.TCitySetSceneReq)
  SharedDtor();
}

void TCitySetSceneReq::SharedDtor() {
  if (scene_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scene_;
  }
  if (this != default_instance_) {
  }
}

void TCitySetSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCitySetSceneReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCitySetSceneReq_descriptor_;
}

const TCitySetSceneReq& TCitySetSceneReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCitySetSceneReq* TCitySetSceneReq::default_instance_ = NULL;

TCitySetSceneReq* TCitySetSceneReq::New() const {
  return new TCitySetSceneReq;
}

void TCitySetSceneReq::Clear() {
  if (has_scene()) {
    if (scene_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      scene_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCitySetSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCitySetSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Scene = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scene()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scene().data(), this->scene().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scene");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCitySetSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCitySetSceneReq)
  return false;
#undef DO_
}

void TCitySetSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCitySetSceneReq)
  // optional string Scene = 1;
  if (has_scene()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scene().data(), this->scene().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scene");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->scene(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCitySetSceneReq)
}

::google::protobuf::uint8* TCitySetSceneReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCitySetSceneReq)
  // optional string Scene = 1;
  if (has_scene()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scene().data(), this->scene().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scene");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->scene(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCitySetSceneReq)
  return target;
}

int TCitySetSceneReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Scene = 1;
    if (has_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scene());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCitySetSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCitySetSceneReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCitySetSceneReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCitySetSceneReq::MergeFrom(const TCitySetSceneReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene()) {
      set_scene(from.scene());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCitySetSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCitySetSceneReq::CopyFrom(const TCitySetSceneReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCitySetSceneReq::IsInitialized() const {

  return true;
}

void TCitySetSceneReq::Swap(TCitySetSceneReq* other) {
  if (other != this) {
    std::swap(scene_, other->scene_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCitySetSceneReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCitySetSceneReq_descriptor_;
  metadata.reflection = TCitySetSceneReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCityUpgradeReq::kBuildIdFieldNumber;
#endif  // !_MSC_VER

TCityUpgradeReq::TCityUpgradeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCityUpgradeReq)
}

void TCityUpgradeReq::InitAsDefaultInstance() {
}

TCityUpgradeReq::TCityUpgradeReq(const TCityUpgradeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCityUpgradeReq)
}

void TCityUpgradeReq::SharedCtor() {
  _cached_size_ = 0;
  buildid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCityUpgradeReq::~TCityUpgradeReq() {
  // @@protoc_insertion_point(destructor:pb.TCityUpgradeReq)
  SharedDtor();
}

void TCityUpgradeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCityUpgradeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCityUpgradeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCityUpgradeReq_descriptor_;
}

const TCityUpgradeReq& TCityUpgradeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCityUpgradeReq* TCityUpgradeReq::default_instance_ = NULL;

TCityUpgradeReq* TCityUpgradeReq::New() const {
  return new TCityUpgradeReq;
}

void TCityUpgradeReq::Clear() {
  buildid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCityUpgradeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCityUpgradeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BuildId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buildid_)));
          set_has_buildid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCityUpgradeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCityUpgradeReq)
  return false;
#undef DO_
}

void TCityUpgradeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCityUpgradeReq)
  // optional uint32 BuildId = 1;
  if (has_buildid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->buildid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCityUpgradeReq)
}

::google::protobuf::uint8* TCityUpgradeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCityUpgradeReq)
  // optional uint32 BuildId = 1;
  if (has_buildid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->buildid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCityUpgradeReq)
  return target;
}

int TCityUpgradeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BuildId = 1;
    if (has_buildid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buildid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCityUpgradeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCityUpgradeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCityUpgradeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCityUpgradeReq::MergeFrom(const TCityUpgradeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buildid()) {
      set_buildid(from.buildid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCityUpgradeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCityUpgradeReq::CopyFrom(const TCityUpgradeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCityUpgradeReq::IsInitialized() const {

  return true;
}

void TCityUpgradeReq::Swap(TCityUpgradeReq* other) {
  if (other != this) {
    std::swap(buildid_, other->buildid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCityUpgradeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCityUpgradeReq_descriptor_;
  metadata.reflection = TCityUpgradeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCityItemReduceCDReq::kTidFieldNumber;
const int TCityItemReduceCDReq::kNumFieldNumber;
#endif  // !_MSC_VER

TCityItemReduceCDReq::TCityItemReduceCDReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCityItemReduceCDReq)
}

void TCityItemReduceCDReq::InitAsDefaultInstance() {
}

TCityItemReduceCDReq::TCityItemReduceCDReq(const TCityItemReduceCDReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCityItemReduceCDReq)
}

void TCityItemReduceCDReq::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCityItemReduceCDReq::~TCityItemReduceCDReq() {
  // @@protoc_insertion_point(destructor:pb.TCityItemReduceCDReq)
  SharedDtor();
}

void TCityItemReduceCDReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCityItemReduceCDReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCityItemReduceCDReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCityItemReduceCDReq_descriptor_;
}

const TCityItemReduceCDReq& TCityItemReduceCDReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCityItemReduceCDReq* TCityItemReduceCDReq::default_instance_ = NULL;

TCityItemReduceCDReq* TCityItemReduceCDReq::New() const {
  return new TCityItemReduceCDReq;
}

void TCityItemReduceCDReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TCityItemReduceCDReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCityItemReduceCDReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCityItemReduceCDReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCityItemReduceCDReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCityItemReduceCDReq)
  return false;
#undef DO_
}

void TCityItemReduceCDReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCityItemReduceCDReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCityItemReduceCDReq)
}

::google::protobuf::uint8* TCityItemReduceCDReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCityItemReduceCDReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCityItemReduceCDReq)
  return target;
}

int TCityItemReduceCDReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCityItemReduceCDReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCityItemReduceCDReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCityItemReduceCDReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCityItemReduceCDReq::MergeFrom(const TCityItemReduceCDReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCityItemReduceCDReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCityItemReduceCDReq::CopyFrom(const TCityItemReduceCDReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCityItemReduceCDReq::IsInitialized() const {

  return true;
}

void TCityItemReduceCDReq::Swap(TCityItemReduceCDReq* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCityItemReduceCDReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCityItemReduceCDReq_descriptor_;
  metadata.reflection = TCityItemReduceCDReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCityExchangeReq::kResourceIdFieldNumber;
const int TCityExchangeReq::kResourceNumFieldNumber;
const int TCityExchangeReq::kTargetResouceIdFieldNumber;
#endif  // !_MSC_VER

TCityExchangeReq::TCityExchangeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCityExchangeReq)
}

void TCityExchangeReq::InitAsDefaultInstance() {
}

TCityExchangeReq::TCityExchangeReq(const TCityExchangeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCityExchangeReq)
}

void TCityExchangeReq::SharedCtor() {
  _cached_size_ = 0;
  resourceid_ = 0u;
  resourcenum_ = 0u;
  targetresouceid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCityExchangeReq::~TCityExchangeReq() {
  // @@protoc_insertion_point(destructor:pb.TCityExchangeReq)
  SharedDtor();
}

void TCityExchangeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCityExchangeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCityExchangeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCityExchangeReq_descriptor_;
}

const TCityExchangeReq& TCityExchangeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCityExchangeReq* TCityExchangeReq::default_instance_ = NULL;

TCityExchangeReq* TCityExchangeReq::New() const {
  return new TCityExchangeReq;
}

void TCityExchangeReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TCityExchangeReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(resourceid_, targetresouceid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCityExchangeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCityExchangeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ResourceId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resourceid_)));
          set_has_resourceid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ResourceNum;
        break;
      }

      // optional uint32 ResourceNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ResourceNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resourcenum_)));
          set_has_resourcenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_targetResouceId;
        break;
      }

      // optional uint32 targetResouceId = 3;
      case 3: {
        if (tag == 24) {
         parse_targetResouceId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetresouceid_)));
          set_has_targetresouceid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCityExchangeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCityExchangeReq)
  return false;
#undef DO_
}

void TCityExchangeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCityExchangeReq)
  // optional uint32 ResourceId = 1;
  if (has_resourceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->resourceid(), output);
  }

  // optional uint32 ResourceNum = 2;
  if (has_resourcenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->resourcenum(), output);
  }

  // optional uint32 targetResouceId = 3;
  if (has_targetresouceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->targetresouceid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCityExchangeReq)
}

::google::protobuf::uint8* TCityExchangeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCityExchangeReq)
  // optional uint32 ResourceId = 1;
  if (has_resourceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->resourceid(), target);
  }

  // optional uint32 ResourceNum = 2;
  if (has_resourcenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->resourcenum(), target);
  }

  // optional uint32 targetResouceId = 3;
  if (has_targetresouceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->targetresouceid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCityExchangeReq)
  return target;
}

int TCityExchangeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ResourceId = 1;
    if (has_resourceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->resourceid());
    }

    // optional uint32 ResourceNum = 2;
    if (has_resourcenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->resourcenum());
    }

    // optional uint32 targetResouceId = 3;
    if (has_targetresouceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targetresouceid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCityExchangeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCityExchangeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCityExchangeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCityExchangeReq::MergeFrom(const TCityExchangeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resourceid()) {
      set_resourceid(from.resourceid());
    }
    if (from.has_resourcenum()) {
      set_resourcenum(from.resourcenum());
    }
    if (from.has_targetresouceid()) {
      set_targetresouceid(from.targetresouceid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCityExchangeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCityExchangeReq::CopyFrom(const TCityExchangeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCityExchangeReq::IsInitialized() const {

  return true;
}

void TCityExchangeReq::Swap(TCityExchangeReq* other) {
  if (other != this) {
    std::swap(resourceid_, other->resourceid_);
    std::swap(resourcenum_, other->resourcenum_);
    std::swap(targetresouceid_, other->targetresouceid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCityExchangeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCityExchangeReq_descriptor_;
  metadata.reflection = TCityExchangeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCityBuildArrPush::kBuildArrFieldNumber;
const int TCityBuildArrPush::kAppointArrFieldNumber;
const int TCityBuildArrPush::kDailyResBuyArrFieldNumber;
const int TCityBuildArrPush::kEndCdTimeFieldNumber;
#endif  // !_MSC_VER

TCityBuildArrPush::TCityBuildArrPush()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCityBuildArrPush)
}

void TCityBuildArrPush::InitAsDefaultInstance() {
}

TCityBuildArrPush::TCityBuildArrPush(const TCityBuildArrPush& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCityBuildArrPush)
}

void TCityBuildArrPush::SharedCtor() {
  _cached_size_ = 0;
  endcdtime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCityBuildArrPush::~TCityBuildArrPush() {
  // @@protoc_insertion_point(destructor:pb.TCityBuildArrPush)
  SharedDtor();
}

void TCityBuildArrPush::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCityBuildArrPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCityBuildArrPush::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCityBuildArrPush_descriptor_;
}

const TCityBuildArrPush& TCityBuildArrPush::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCityBuildArrPush* TCityBuildArrPush::default_instance_ = NULL;

TCityBuildArrPush* TCityBuildArrPush::New() const {
  return new TCityBuildArrPush;
}

void TCityBuildArrPush::Clear() {
  endcdtime_ = GOOGLE_LONGLONG(0);
  buildarr_.Clear();
  appointarr_.Clear();
  dailyresbuyarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCityBuildArrPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCityBuildArrPush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCityBuildData BuildArr = 1;
      case 1: {
        if (tag == 10) {
         parse_BuildArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buildarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_BuildArr;
        if (input->ExpectTag(18)) goto parse_AppointArr;
        break;
      }

      // repeated .pb.TCityBuildAppoint AppointArr = 2;
      case 2: {
        if (tag == 18) {
         parse_AppointArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_appointarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_AppointArr;
        if (input->ExpectTag(26)) goto parse_DailyResBuyArr;
        break;
      }

      // repeated .pb.TCityResBuyData DailyResBuyArr = 3;
      case 3: {
        if (tag == 26) {
         parse_DailyResBuyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dailyresbuyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_DailyResBuyArr;
        if (input->ExpectTag(32)) goto parse_EndCdTime;
        break;
      }

      // optional int64 EndCdTime = 4;
      case 4: {
        if (tag == 32) {
         parse_EndCdTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endcdtime_)));
          set_has_endcdtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCityBuildArrPush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCityBuildArrPush)
  return false;
#undef DO_
}

void TCityBuildArrPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCityBuildArrPush)
  // repeated .pb.TCityBuildData BuildArr = 1;
  for (int i = 0; i < this->buildarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->buildarr(i), output);
  }

  // repeated .pb.TCityBuildAppoint AppointArr = 2;
  for (int i = 0; i < this->appointarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->appointarr(i), output);
  }

  // repeated .pb.TCityResBuyData DailyResBuyArr = 3;
  for (int i = 0; i < this->dailyresbuyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dailyresbuyarr(i), output);
  }

  // optional int64 EndCdTime = 4;
  if (has_endcdtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->endcdtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCityBuildArrPush)
}

::google::protobuf::uint8* TCityBuildArrPush::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCityBuildArrPush)
  // repeated .pb.TCityBuildData BuildArr = 1;
  for (int i = 0; i < this->buildarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->buildarr(i), target);
  }

  // repeated .pb.TCityBuildAppoint AppointArr = 2;
  for (int i = 0; i < this->appointarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->appointarr(i), target);
  }

  // repeated .pb.TCityResBuyData DailyResBuyArr = 3;
  for (int i = 0; i < this->dailyresbuyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dailyresbuyarr(i), target);
  }

  // optional int64 EndCdTime = 4;
  if (has_endcdtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->endcdtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCityBuildArrPush)
  return target;
}

int TCityBuildArrPush::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    // optional int64 EndCdTime = 4;
    if (has_endcdtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->endcdtime());
    }

  }
  // repeated .pb.TCityBuildData BuildArr = 1;
  total_size += 1 * this->buildarr_size();
  for (int i = 0; i < this->buildarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buildarr(i));
  }

  // repeated .pb.TCityBuildAppoint AppointArr = 2;
  total_size += 1 * this->appointarr_size();
  for (int i = 0; i < this->appointarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->appointarr(i));
  }

  // repeated .pb.TCityResBuyData DailyResBuyArr = 3;
  total_size += 1 * this->dailyresbuyarr_size();
  for (int i = 0; i < this->dailyresbuyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dailyresbuyarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCityBuildArrPush::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCityBuildArrPush* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCityBuildArrPush*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCityBuildArrPush::MergeFrom(const TCityBuildArrPush& from) {
  GOOGLE_CHECK_NE(&from, this);
  buildarr_.MergeFrom(from.buildarr_);
  appointarr_.MergeFrom(from.appointarr_);
  dailyresbuyarr_.MergeFrom(from.dailyresbuyarr_);
  if (from._has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (from.has_endcdtime()) {
      set_endcdtime(from.endcdtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCityBuildArrPush::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCityBuildArrPush::CopyFrom(const TCityBuildArrPush& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCityBuildArrPush::IsInitialized() const {

  return true;
}

void TCityBuildArrPush::Swap(TCityBuildArrPush* other) {
  if (other != this) {
    buildarr_.Swap(&other->buildarr_);
    appointarr_.Swap(&other->appointarr_);
    dailyresbuyarr_.Swap(&other->dailyresbuyarr_);
    std::swap(endcdtime_, other->endcdtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCityBuildArrPush::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCityBuildArrPush_descriptor_;
  metadata.reflection = TCityBuildArrPush_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCityBuildUnlockReq::kBuildIdFieldNumber;
#endif  // !_MSC_VER

TCityBuildUnlockReq::TCityBuildUnlockReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCityBuildUnlockReq)
}

void TCityBuildUnlockReq::InitAsDefaultInstance() {
}

TCityBuildUnlockReq::TCityBuildUnlockReq(const TCityBuildUnlockReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCityBuildUnlockReq)
}

void TCityBuildUnlockReq::SharedCtor() {
  _cached_size_ = 0;
  buildid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCityBuildUnlockReq::~TCityBuildUnlockReq() {
  // @@protoc_insertion_point(destructor:pb.TCityBuildUnlockReq)
  SharedDtor();
}

void TCityBuildUnlockReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCityBuildUnlockReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCityBuildUnlockReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCityBuildUnlockReq_descriptor_;
}

const TCityBuildUnlockReq& TCityBuildUnlockReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCityBuildUnlockReq* TCityBuildUnlockReq::default_instance_ = NULL;

TCityBuildUnlockReq* TCityBuildUnlockReq::New() const {
  return new TCityBuildUnlockReq;
}

void TCityBuildUnlockReq::Clear() {
  buildid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCityBuildUnlockReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCityBuildUnlockReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BuildId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buildid_)));
          set_has_buildid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCityBuildUnlockReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCityBuildUnlockReq)
  return false;
#undef DO_
}

void TCityBuildUnlockReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCityBuildUnlockReq)
  // optional uint32 BuildId = 1;
  if (has_buildid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->buildid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCityBuildUnlockReq)
}

::google::protobuf::uint8* TCityBuildUnlockReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCityBuildUnlockReq)
  // optional uint32 BuildId = 1;
  if (has_buildid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->buildid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCityBuildUnlockReq)
  return target;
}

int TCityBuildUnlockReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BuildId = 1;
    if (has_buildid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buildid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCityBuildUnlockReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCityBuildUnlockReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCityBuildUnlockReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCityBuildUnlockReq::MergeFrom(const TCityBuildUnlockReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buildid()) {
      set_buildid(from.buildid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCityBuildUnlockReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCityBuildUnlockReq::CopyFrom(const TCityBuildUnlockReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCityBuildUnlockReq::IsInitialized() const {

  return true;
}

void TCityBuildUnlockReq::Swap(TCityBuildUnlockReq* other) {
  if (other != this) {
    std::swap(buildid_, other->buildid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCityBuildUnlockReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCityBuildUnlockReq_descriptor_;
  metadata.reflection = TCityBuildUnlockReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCityAppointHeroReq::kBtidFieldNumber;
const int TCityAppointHeroReq::kAppointIndexFieldNumber;
const int TCityAppointHeroReq::kHidFieldNumber;
#endif  // !_MSC_VER

TCityAppointHeroReq::TCityAppointHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCityAppointHeroReq)
}

void TCityAppointHeroReq::InitAsDefaultInstance() {
}

TCityAppointHeroReq::TCityAppointHeroReq(const TCityAppointHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCityAppointHeroReq)
}

void TCityAppointHeroReq::SharedCtor() {
  _cached_size_ = 0;
  btid_ = 0u;
  appointindex_ = 0u;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCityAppointHeroReq::~TCityAppointHeroReq() {
  // @@protoc_insertion_point(destructor:pb.TCityAppointHeroReq)
  SharedDtor();
}

void TCityAppointHeroReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCityAppointHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCityAppointHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCityAppointHeroReq_descriptor_;
}

const TCityAppointHeroReq& TCityAppointHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCityAppointHeroReq* TCityAppointHeroReq::default_instance_ = NULL;

TCityAppointHeroReq* TCityAppointHeroReq::New() const {
  return new TCityAppointHeroReq;
}

void TCityAppointHeroReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TCityAppointHeroReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(btid_, hid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCityAppointHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCityAppointHeroReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Btid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &btid_)));
          set_has_btid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AppointIndex;
        break;
      }

      // optional uint32 AppointIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_AppointIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appointindex_)));
          set_has_appointindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Hid;
        break;
      }

      // optional uint32 Hid = 3;
      case 3: {
        if (tag == 24) {
         parse_Hid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCityAppointHeroReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCityAppointHeroReq)
  return false;
#undef DO_
}

void TCityAppointHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCityAppointHeroReq)
  // optional uint32 Btid = 1;
  if (has_btid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->btid(), output);
  }

  // optional uint32 AppointIndex = 2;
  if (has_appointindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appointindex(), output);
  }

  // optional uint32 Hid = 3;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCityAppointHeroReq)
}

::google::protobuf::uint8* TCityAppointHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCityAppointHeroReq)
  // optional uint32 Btid = 1;
  if (has_btid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->btid(), target);
  }

  // optional uint32 AppointIndex = 2;
  if (has_appointindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appointindex(), target);
  }

  // optional uint32 Hid = 3;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCityAppointHeroReq)
  return target;
}

int TCityAppointHeroReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Btid = 1;
    if (has_btid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->btid());
    }

    // optional uint32 AppointIndex = 2;
    if (has_appointindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appointindex());
    }

    // optional uint32 Hid = 3;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCityAppointHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCityAppointHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCityAppointHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCityAppointHeroReq::MergeFrom(const TCityAppointHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_btid()) {
      set_btid(from.btid());
    }
    if (from.has_appointindex()) {
      set_appointindex(from.appointindex());
    }
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCityAppointHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCityAppointHeroReq::CopyFrom(const TCityAppointHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCityAppointHeroReq::IsInitialized() const {

  return true;
}

void TCityAppointHeroReq::Swap(TCityAppointHeroReq* other) {
  if (other != this) {
    std::swap(btid_, other->btid_);
    std::swap(appointindex_, other->appointindex_);
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCityAppointHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCityAppointHeroReq_descriptor_;
  metadata.reflection = TCityAppointHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCityRelieveAppointHeroReq::kBtidFieldNumber;
const int TCityRelieveAppointHeroReq::kAppointIndexFieldNumber;
#endif  // !_MSC_VER

TCityRelieveAppointHeroReq::TCityRelieveAppointHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCityRelieveAppointHeroReq)
}

void TCityRelieveAppointHeroReq::InitAsDefaultInstance() {
}

TCityRelieveAppointHeroReq::TCityRelieveAppointHeroReq(const TCityRelieveAppointHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCityRelieveAppointHeroReq)
}

void TCityRelieveAppointHeroReq::SharedCtor() {
  _cached_size_ = 0;
  btid_ = 0u;
  appointindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCityRelieveAppointHeroReq::~TCityRelieveAppointHeroReq() {
  // @@protoc_insertion_point(destructor:pb.TCityRelieveAppointHeroReq)
  SharedDtor();
}

void TCityRelieveAppointHeroReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCityRelieveAppointHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCityRelieveAppointHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCityRelieveAppointHeroReq_descriptor_;
}

const TCityRelieveAppointHeroReq& TCityRelieveAppointHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCityRelieveAppointHeroReq* TCityRelieveAppointHeroReq::default_instance_ = NULL;

TCityRelieveAppointHeroReq* TCityRelieveAppointHeroReq::New() const {
  return new TCityRelieveAppointHeroReq;
}

void TCityRelieveAppointHeroReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TCityRelieveAppointHeroReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(btid_, appointindex_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCityRelieveAppointHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCityRelieveAppointHeroReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Btid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &btid_)));
          set_has_btid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AppointIndex;
        break;
      }

      // optional uint32 AppointIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_AppointIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appointindex_)));
          set_has_appointindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCityRelieveAppointHeroReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCityRelieveAppointHeroReq)
  return false;
#undef DO_
}

void TCityRelieveAppointHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCityRelieveAppointHeroReq)
  // optional uint32 Btid = 1;
  if (has_btid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->btid(), output);
  }

  // optional uint32 AppointIndex = 2;
  if (has_appointindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appointindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCityRelieveAppointHeroReq)
}

::google::protobuf::uint8* TCityRelieveAppointHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCityRelieveAppointHeroReq)
  // optional uint32 Btid = 1;
  if (has_btid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->btid(), target);
  }

  // optional uint32 AppointIndex = 2;
  if (has_appointindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appointindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCityRelieveAppointHeroReq)
  return target;
}

int TCityRelieveAppointHeroReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Btid = 1;
    if (has_btid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->btid());
    }

    // optional uint32 AppointIndex = 2;
    if (has_appointindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appointindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCityRelieveAppointHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCityRelieveAppointHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCityRelieveAppointHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCityRelieveAppointHeroReq::MergeFrom(const TCityRelieveAppointHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_btid()) {
      set_btid(from.btid());
    }
    if (from.has_appointindex()) {
      set_appointindex(from.appointindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCityRelieveAppointHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCityRelieveAppointHeroReq::CopyFrom(const TCityRelieveAppointHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCityRelieveAppointHeroReq::IsInitialized() const {

  return true;
}

void TCityRelieveAppointHeroReq::Swap(TCityRelieveAppointHeroReq* other) {
  if (other != this) {
    std::swap(btid_, other->btid_);
    std::swap(appointindex_, other->appointindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCityRelieveAppointHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCityRelieveAppointHeroReq_descriptor_;
  metadata.reflection = TCityRelieveAppointHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TCityBuyResourceReq::kResBuyTidFieldNumber;
const int TCityBuyResourceReq::kNumFieldNumber;
#endif  // !_MSC_VER

TCityBuyResourceReq::TCityBuyResourceReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TCityBuyResourceReq)
}

void TCityBuyResourceReq::InitAsDefaultInstance() {
}

TCityBuyResourceReq::TCityBuyResourceReq(const TCityBuyResourceReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TCityBuyResourceReq)
}

void TCityBuyResourceReq::SharedCtor() {
  _cached_size_ = 0;
  resbuytid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TCityBuyResourceReq::~TCityBuyResourceReq() {
  // @@protoc_insertion_point(destructor:pb.TCityBuyResourceReq)
  SharedDtor();
}

void TCityBuyResourceReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TCityBuyResourceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCityBuyResourceReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TCityBuyResourceReq_descriptor_;
}

const TCityBuyResourceReq& TCityBuyResourceReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fCity_2eproto();
  return *default_instance_;
}

TCityBuyResourceReq* TCityBuyResourceReq::default_instance_ = NULL;

TCityBuyResourceReq* TCityBuyResourceReq::New() const {
  return new TCityBuyResourceReq;
}

void TCityBuyResourceReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TCityBuyResourceReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(resbuytid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TCityBuyResourceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TCityBuyResourceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ResBuyTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resbuytid_)));
          set_has_resbuytid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TCityBuyResourceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TCityBuyResourceReq)
  return false;
#undef DO_
}

void TCityBuyResourceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TCityBuyResourceReq)
  // optional uint32 ResBuyTid = 1;
  if (has_resbuytid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->resbuytid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TCityBuyResourceReq)
}

::google::protobuf::uint8* TCityBuyResourceReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TCityBuyResourceReq)
  // optional uint32 ResBuyTid = 1;
  if (has_resbuytid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->resbuytid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TCityBuyResourceReq)
  return target;
}

int TCityBuyResourceReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ResBuyTid = 1;
    if (has_resbuytid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->resbuytid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCityBuyResourceReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TCityBuyResourceReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TCityBuyResourceReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TCityBuyResourceReq::MergeFrom(const TCityBuyResourceReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resbuytid()) {
      set_resbuytid(from.resbuytid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TCityBuyResourceReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCityBuyResourceReq::CopyFrom(const TCityBuyResourceReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCityBuyResourceReq::IsInitialized() const {

  return true;
}

void TCityBuyResourceReq::Swap(TCityBuyResourceReq* other) {
  if (other != this) {
    std::swap(resbuytid_, other->resbuytid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TCityBuyResourceReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TCityBuyResourceReq_descriptor_;
  metadata.reflection = TCityBuyResourceReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
