// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/DaySign.proto

#ifndef PROTOBUF_net_2fDaySign_2eproto__INCLUDED
#define PROTOBUF_net_2fDaySign_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fDaySign_2eproto();
void protobuf_AssignDesc_net_2fDaySign_2eproto();
void protobuf_ShutdownFile_net_2fDaySign_2eproto();

class TDaySignGetInfoRsp;
class TDaySignGetRewardReq;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TDaySignGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DaySign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDaySignGetInfoRsp : public ::google::protobuf::Message {
 public:
  TDaySignGetInfoRsp();
  virtual ~TDaySignGetInfoRsp();

  TDaySignGetInfoRsp(const TDaySignGetInfoRsp& from);

  inline TDaySignGetInfoRsp& operator=(const TDaySignGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDaySignGetInfoRsp& default_instance();

  void Swap(TDaySignGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TDaySignGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDaySignGetInfoRsp& from);
  void MergeFrom(const TDaySignGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AccuDayNum = 1;
  inline bool has_accudaynum() const;
  inline void clear_accudaynum();
  static const int kAccuDayNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDaySignGetInfoRsp</name>
  	<Function>
  		<name>accudaynum</name>
  		<replaceName>AccuDayNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_accudaynum</name>
  		<replaceName>AccuDayNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_accudaynum</name>
  		<replaceName>AccuDayNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 accudaynum() const;
  inline void set_accudaynum(::google::protobuf::uint32 value);

  // repeated uint32 arrRewardDay = 2;
  inline int arrrewardday_size() const;
  inline void clear_arrrewardday();
  static const int kArrRewardDayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDaySignGetInfoRsp</name>
  	<Function>
  		<name>arrrewardday</name>
  		<replaceName>arrRewardDay</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrewardday</name>
  		<replaceName>arrRewardDay</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrewardday</name>
  		<replaceName>arrRewardDay</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrewardday</name>
  		<replaceName>arrRewardDay</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrewardday_size</name>
  		<replaceName>arrRewardDay</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 arrrewardday(int index) const;
  inline void set_arrrewardday(int index, ::google::protobuf::uint32 value);
  inline void add_arrrewardday(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arrrewardday() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arrrewardday();

  // @@protoc_insertion_point(class_scope:pb.TDaySignGetInfoRsp)
 private:
  inline void set_has_accudaynum();
  inline void clear_has_accudaynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arrrewardday_;
  ::google::protobuf::uint32 accudaynum_;
  friend void  protobuf_AddDesc_net_2fDaySign_2eproto();
  friend void protobuf_AssignDesc_net_2fDaySign_2eproto();
  friend void protobuf_ShutdownFile_net_2fDaySign_2eproto();

  void InitAsDefaultInstance();
  static TDaySignGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDaySignGetRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DaySign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDaySignGetRewardReq : public ::google::protobuf::Message {
 public:
  TDaySignGetRewardReq();
  virtual ~TDaySignGetRewardReq();

  TDaySignGetRewardReq(const TDaySignGetRewardReq& from);

  inline TDaySignGetRewardReq& operator=(const TDaySignGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDaySignGetRewardReq& default_instance();

  void Swap(TDaySignGetRewardReq* other);

  // implements Message ----------------------------------------------

  TDaySignGetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDaySignGetRewardReq& from);
  void MergeFrom(const TDaySignGetRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDaySignGetRewardReq</name>
  	<Function>
  		<name>day</name>
  		<replaceName>Day</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_day</name>
  		<replaceName>Day</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_day</name>
  		<replaceName>Day</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDaySignGetRewardReq)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 day_;
  friend void  protobuf_AddDesc_net_2fDaySign_2eproto();
  friend void protobuf_AssignDesc_net_2fDaySign_2eproto();
  friend void protobuf_ShutdownFile_net_2fDaySign_2eproto();

  void InitAsDefaultInstance();
  static TDaySignGetRewardReq* default_instance_;
};
// ===================================================================


// ===================================================================

// TDaySignGetInfoRsp

// optional uint32 AccuDayNum = 1;
inline bool TDaySignGetInfoRsp::has_accudaynum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDaySignGetInfoRsp::set_has_accudaynum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDaySignGetInfoRsp::clear_has_accudaynum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDaySignGetInfoRsp::clear_accudaynum() {
  accudaynum_ = 0u;
  clear_has_accudaynum();
}
inline ::google::protobuf::uint32 TDaySignGetInfoRsp::accudaynum() const {
  // @@protoc_insertion_point(field_get:pb.TDaySignGetInfoRsp.AccuDayNum)
  return accudaynum_;
}
inline void TDaySignGetInfoRsp::set_accudaynum(::google::protobuf::uint32 value) {
  set_has_accudaynum();
  accudaynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TDaySignGetInfoRsp.AccuDayNum)
}

// repeated uint32 arrRewardDay = 2;
inline int TDaySignGetInfoRsp::arrrewardday_size() const {
  return arrrewardday_.size();
}
inline void TDaySignGetInfoRsp::clear_arrrewardday() {
  arrrewardday_.Clear();
}
inline ::google::protobuf::uint32 TDaySignGetInfoRsp::arrrewardday(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDaySignGetInfoRsp.arrRewardDay)
  return arrrewardday_.Get(index);
}
inline void TDaySignGetInfoRsp::set_arrrewardday(int index, ::google::protobuf::uint32 value) {
  arrrewardday_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TDaySignGetInfoRsp.arrRewardDay)
}
inline void TDaySignGetInfoRsp::add_arrrewardday(::google::protobuf::uint32 value) {
  arrrewardday_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TDaySignGetInfoRsp.arrRewardDay)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TDaySignGetInfoRsp::arrrewardday() const {
  // @@protoc_insertion_point(field_list:pb.TDaySignGetInfoRsp.arrRewardDay)
  return arrrewardday_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TDaySignGetInfoRsp::mutable_arrrewardday() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDaySignGetInfoRsp.arrRewardDay)
  return &arrrewardday_;
}

// -------------------------------------------------------------------

// TDaySignGetRewardReq

// optional uint32 Day = 1;
inline bool TDaySignGetRewardReq::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDaySignGetRewardReq::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDaySignGetRewardReq::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDaySignGetRewardReq::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 TDaySignGetRewardReq::day() const {
  // @@protoc_insertion_point(field_get:pb.TDaySignGetRewardReq.Day)
  return day_;
}
inline void TDaySignGetRewardReq::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:pb.TDaySignGetRewardReq.Day)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fDaySign_2eproto__INCLUDED
