// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/DailyGift.proto

#ifndef PROTOBUF_net_2fDailyGift_2eproto__INCLUDED
#define PROTOBUF_net_2fDailyGift_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fDailyGift_2eproto();
void protobuf_AssignDesc_net_2fDailyGift_2eproto();
void protobuf_ShutdownFile_net_2fDailyGift_2eproto();

class TDailyGiftItemInfo;
class TDailyGiftShopItemInfo;
class TDailyGiftGetInfoRsp;
class TDailyGiftGetArrGiftRewardReq;
class TDailyGiftGetArrGiftRewardRsp;
class TDailyGiftExchangeRewardReq;
class TDailyGiftExchangeRewardRsp;
class TDailyGiftInfoNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TDailyGiftItemInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DailyGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDailyGiftItemInfo : public ::google::protobuf::Message {
 public:
  TDailyGiftItemInfo();
  virtual ~TDailyGiftItemInfo();

  TDailyGiftItemInfo(const TDailyGiftItemInfo& from);

  inline TDailyGiftItemInfo& operator=(const TDailyGiftItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDailyGiftItemInfo& default_instance();

  void Swap(TDailyGiftItemInfo* other);

  // implements Message ----------------------------------------------

  TDailyGiftItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDailyGiftItemInfo& from);
  void MergeFrom(const TDailyGiftItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftItemInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftItemInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 Status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftItemInfo</name>
  	<Function>
  		<name>status</name>
  		<replaceName>Status</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_status</name>
  		<replaceName>Status</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_status</name>
  		<replaceName>Status</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDailyGiftItemInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_net_2fDailyGift_2eproto();
  friend void protobuf_AssignDesc_net_2fDailyGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fDailyGift_2eproto();

  void InitAsDefaultInstance();
  static TDailyGiftItemInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDailyGiftShopItemInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DailyGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDailyGiftShopItemInfo : public ::google::protobuf::Message {
 public:
  TDailyGiftShopItemInfo();
  virtual ~TDailyGiftShopItemInfo();

  TDailyGiftShopItemInfo(const TDailyGiftShopItemInfo& from);

  inline TDailyGiftShopItemInfo& operator=(const TDailyGiftShopItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDailyGiftShopItemInfo& default_instance();

  void Swap(TDailyGiftShopItemInfo* other);

  // implements Message ----------------------------------------------

  TDailyGiftShopItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDailyGiftShopItemInfo& from);
  void MergeFrom(const TDailyGiftShopItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftShopItemInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftShopItemInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDailyGiftShopItemInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fDailyGift_2eproto();
  friend void protobuf_AssignDesc_net_2fDailyGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fDailyGift_2eproto();

  void InitAsDefaultInstance();
  static TDailyGiftShopItemInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDailyGiftGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DailyGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDailyGiftGetInfoRsp : public ::google::protobuf::Message {
 public:
  TDailyGiftGetInfoRsp();
  virtual ~TDailyGiftGetInfoRsp();

  TDailyGiftGetInfoRsp(const TDailyGiftGetInfoRsp& from);

  inline TDailyGiftGetInfoRsp& operator=(const TDailyGiftGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDailyGiftGetInfoRsp& default_instance();

  void Swap(TDailyGiftGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TDailyGiftGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDailyGiftGetInfoRsp& from);
  void MergeFrom(const TDailyGiftGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TDailyGiftItemInfo ArrGiftItemInfo = 1;
  inline int arrgiftiteminfo_size() const;
  inline void clear_arrgiftiteminfo();
  static const int kArrGiftItemInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftGetInfoRsp</name>
  	<Function>
  		<name>arrgiftiteminfo</name>
  		<replaceName>ArrGiftItemInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrgiftiteminfo</name>
  		<replaceName>ArrGiftItemInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrgiftiteminfo</name>
  		<replaceName>ArrGiftItemInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrgiftiteminfo</name>
  		<replaceName>ArrGiftItemInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrgiftiteminfo_size</name>
  		<replaceName>ArrGiftItemInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TDailyGiftItemInfo& arrgiftiteminfo(int index) const;
  inline ::pb::TDailyGiftItemInfo* mutable_arrgiftiteminfo(int index);
  inline ::pb::TDailyGiftItemInfo* add_arrgiftiteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftItemInfo >&
      arrgiftiteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftItemInfo >*
      mutable_arrgiftiteminfo();

  // repeated .pb.TDailyGiftShopItemInfo ArrShopItemInfo = 2;
  inline int arrshopiteminfo_size() const;
  inline void clear_arrshopiteminfo();
  static const int kArrShopItemInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftGetInfoRsp</name>
  	<Function>
  		<name>arrshopiteminfo</name>
  		<replaceName>ArrShopItemInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrshopiteminfo</name>
  		<replaceName>ArrShopItemInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrshopiteminfo</name>
  		<replaceName>ArrShopItemInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrshopiteminfo</name>
  		<replaceName>ArrShopItemInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrshopiteminfo_size</name>
  		<replaceName>ArrShopItemInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TDailyGiftShopItemInfo& arrshopiteminfo(int index) const;
  inline ::pb::TDailyGiftShopItemInfo* mutable_arrshopiteminfo(int index);
  inline ::pb::TDailyGiftShopItemInfo* add_arrshopiteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftShopItemInfo >&
      arrshopiteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftShopItemInfo >*
      mutable_arrshopiteminfo();

  // optional uint32 GetDay = 3;
  inline bool has_getday() const;
  inline void clear_getday();
  static const int kGetDayFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftGetInfoRsp</name>
  	<Function>
  		<name>getday</name>
  		<replaceName>GetDay</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_getday</name>
  		<replaceName>GetDay</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_getday</name>
  		<replaceName>GetDay</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 getday() const;
  inline void set_getday(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDailyGiftGetInfoRsp)
 private:
  inline void set_has_getday();
  inline void clear_has_getday();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftItemInfo > arrgiftiteminfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftShopItemInfo > arrshopiteminfo_;
  ::google::protobuf::uint32 getday_;
  friend void  protobuf_AddDesc_net_2fDailyGift_2eproto();
  friend void protobuf_AssignDesc_net_2fDailyGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fDailyGift_2eproto();

  void InitAsDefaultInstance();
  static TDailyGiftGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDailyGiftGetArrGiftRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DailyGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDailyGiftGetArrGiftRewardReq : public ::google::protobuf::Message {
 public:
  TDailyGiftGetArrGiftRewardReq();
  virtual ~TDailyGiftGetArrGiftRewardReq();

  TDailyGiftGetArrGiftRewardReq(const TDailyGiftGetArrGiftRewardReq& from);

  inline TDailyGiftGetArrGiftRewardReq& operator=(const TDailyGiftGetArrGiftRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDailyGiftGetArrGiftRewardReq& default_instance();

  void Swap(TDailyGiftGetArrGiftRewardReq* other);

  // implements Message ----------------------------------------------

  TDailyGiftGetArrGiftRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDailyGiftGetArrGiftRewardReq& from);
  void MergeFrom(const TDailyGiftGetArrGiftRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ArrId = 1;
  inline int arrid_size() const;
  inline void clear_arrid();
  static const int kArrIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftGetArrGiftRewardReq</name>
  	<Function>
  		<name>arrid</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrid</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrid</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrid</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrid_size</name>
  		<replaceName>ArrId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 arrid(int index) const;
  inline void set_arrid(int index, ::google::protobuf::uint32 value);
  inline void add_arrid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arrid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arrid();

  // @@protoc_insertion_point(class_scope:pb.TDailyGiftGetArrGiftRewardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arrid_;
  friend void  protobuf_AddDesc_net_2fDailyGift_2eproto();
  friend void protobuf_AssignDesc_net_2fDailyGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fDailyGift_2eproto();

  void InitAsDefaultInstance();
  static TDailyGiftGetArrGiftRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDailyGiftGetArrGiftRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DailyGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDailyGiftGetArrGiftRewardRsp : public ::google::protobuf::Message {
 public:
  TDailyGiftGetArrGiftRewardRsp();
  virtual ~TDailyGiftGetArrGiftRewardRsp();

  TDailyGiftGetArrGiftRewardRsp(const TDailyGiftGetArrGiftRewardRsp& from);

  inline TDailyGiftGetArrGiftRewardRsp& operator=(const TDailyGiftGetArrGiftRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDailyGiftGetArrGiftRewardRsp& default_instance();

  void Swap(TDailyGiftGetArrGiftRewardRsp* other);

  // implements Message ----------------------------------------------

  TDailyGiftGetArrGiftRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDailyGiftGetArrGiftRewardRsp& from);
  void MergeFrom(const TDailyGiftGetArrGiftRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftGetArrGiftRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TDailyGiftGetArrGiftRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fDailyGift_2eproto();
  friend void protobuf_AssignDesc_net_2fDailyGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fDailyGift_2eproto();

  void InitAsDefaultInstance();
  static TDailyGiftGetArrGiftRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDailyGiftExchangeRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DailyGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDailyGiftExchangeRewardReq : public ::google::protobuf::Message {
 public:
  TDailyGiftExchangeRewardReq();
  virtual ~TDailyGiftExchangeRewardReq();

  TDailyGiftExchangeRewardReq(const TDailyGiftExchangeRewardReq& from);

  inline TDailyGiftExchangeRewardReq& operator=(const TDailyGiftExchangeRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDailyGiftExchangeRewardReq& default_instance();

  void Swap(TDailyGiftExchangeRewardReq* other);

  // implements Message ----------------------------------------------

  TDailyGiftExchangeRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDailyGiftExchangeRewardReq& from);
  void MergeFrom(const TDailyGiftExchangeRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftExchangeRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftExchangeRewardReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDailyGiftExchangeRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fDailyGift_2eproto();
  friend void protobuf_AssignDesc_net_2fDailyGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fDailyGift_2eproto();

  void InitAsDefaultInstance();
  static TDailyGiftExchangeRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDailyGiftExchangeRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DailyGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDailyGiftExchangeRewardRsp : public ::google::protobuf::Message {
 public:
  TDailyGiftExchangeRewardRsp();
  virtual ~TDailyGiftExchangeRewardRsp();

  TDailyGiftExchangeRewardRsp(const TDailyGiftExchangeRewardRsp& from);

  inline TDailyGiftExchangeRewardRsp& operator=(const TDailyGiftExchangeRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDailyGiftExchangeRewardRsp& default_instance();

  void Swap(TDailyGiftExchangeRewardRsp* other);

  // implements Message ----------------------------------------------

  TDailyGiftExchangeRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDailyGiftExchangeRewardRsp& from);
  void MergeFrom(const TDailyGiftExchangeRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftExchangeRewardRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TDailyGiftExchangeRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fDailyGift_2eproto();
  friend void protobuf_AssignDesc_net_2fDailyGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fDailyGift_2eproto();

  void InitAsDefaultInstance();
  static TDailyGiftExchangeRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDailyGiftInfoNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DailyGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDailyGiftInfoNotify : public ::google::protobuf::Message {
 public:
  TDailyGiftInfoNotify();
  virtual ~TDailyGiftInfoNotify();

  TDailyGiftInfoNotify(const TDailyGiftInfoNotify& from);

  inline TDailyGiftInfoNotify& operator=(const TDailyGiftInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDailyGiftInfoNotify& default_instance();

  void Swap(TDailyGiftInfoNotify* other);

  // implements Message ----------------------------------------------

  TDailyGiftInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDailyGiftInfoNotify& from);
  void MergeFrom(const TDailyGiftInfoNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TDailyGiftItemInfo ArrGiftInfo = 1;
  inline int arrgiftinfo_size() const;
  inline void clear_arrgiftinfo();
  static const int kArrGiftInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftInfoNotify</name>
  	<Function>
  		<name>arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrgiftinfo</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrgiftinfo_size</name>
  		<replaceName>ArrGiftInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TDailyGiftItemInfo& arrgiftinfo(int index) const;
  inline ::pb::TDailyGiftItemInfo* mutable_arrgiftinfo(int index);
  inline ::pb::TDailyGiftItemInfo* add_arrgiftinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftItemInfo >&
      arrgiftinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftItemInfo >*
      mutable_arrgiftinfo();

  // repeated .pb.TDailyGiftShopItemInfo ArrShopInfo = 2;
  inline int arrshopinfo_size() const;
  inline void clear_arrshopinfo();
  static const int kArrShopInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftInfoNotify</name>
  	<Function>
  		<name>arrshopinfo</name>
  		<replaceName>ArrShopInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrshopinfo</name>
  		<replaceName>ArrShopInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrshopinfo</name>
  		<replaceName>ArrShopInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrshopinfo</name>
  		<replaceName>ArrShopInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrshopinfo_size</name>
  		<replaceName>ArrShopInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TDailyGiftShopItemInfo& arrshopinfo(int index) const;
  inline ::pb::TDailyGiftShopItemInfo* mutable_arrshopinfo(int index);
  inline ::pb::TDailyGiftShopItemInfo* add_arrshopinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftShopItemInfo >&
      arrshopinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftShopItemInfo >*
      mutable_arrshopinfo();

  // optional uint32 GetDay = 3;
  inline bool has_getday() const;
  inline void clear_getday();
  static const int kGetDayFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TDailyGiftInfoNotify</name>
  	<Function>
  		<name>getday</name>
  		<replaceName>GetDay</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_getday</name>
  		<replaceName>GetDay</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_getday</name>
  		<replaceName>GetDay</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 getday() const;
  inline void set_getday(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDailyGiftInfoNotify)
 private:
  inline void set_has_getday();
  inline void clear_has_getday();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftItemInfo > arrgiftinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftShopItemInfo > arrshopinfo_;
  ::google::protobuf::uint32 getday_;
  friend void  protobuf_AddDesc_net_2fDailyGift_2eproto();
  friend void protobuf_AssignDesc_net_2fDailyGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fDailyGift_2eproto();

  void InitAsDefaultInstance();
  static TDailyGiftInfoNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TDailyGiftItemInfo

// optional uint32 Id = 1;
inline bool TDailyGiftItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDailyGiftItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDailyGiftItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDailyGiftItemInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TDailyGiftItemInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftItemInfo.Id)
  return id_;
}
inline void TDailyGiftItemInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TDailyGiftItemInfo.Id)
}

// optional uint32 Num = 2;
inline bool TDailyGiftItemInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDailyGiftItemInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDailyGiftItemInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDailyGiftItemInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TDailyGiftItemInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftItemInfo.Num)
  return num_;
}
inline void TDailyGiftItemInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TDailyGiftItemInfo.Num)
}

// optional uint32 Status = 3;
inline bool TDailyGiftItemInfo::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDailyGiftItemInfo::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDailyGiftItemInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDailyGiftItemInfo::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 TDailyGiftItemInfo::status() const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftItemInfo.Status)
  return status_;
}
inline void TDailyGiftItemInfo::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:pb.TDailyGiftItemInfo.Status)
}

// -------------------------------------------------------------------

// TDailyGiftShopItemInfo

// optional uint32 Id = 1;
inline bool TDailyGiftShopItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDailyGiftShopItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDailyGiftShopItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDailyGiftShopItemInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TDailyGiftShopItemInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftShopItemInfo.Id)
  return id_;
}
inline void TDailyGiftShopItemInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TDailyGiftShopItemInfo.Id)
}

// optional uint32 Num = 2;
inline bool TDailyGiftShopItemInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDailyGiftShopItemInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDailyGiftShopItemInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDailyGiftShopItemInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TDailyGiftShopItemInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftShopItemInfo.Num)
  return num_;
}
inline void TDailyGiftShopItemInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TDailyGiftShopItemInfo.Num)
}

// -------------------------------------------------------------------

// TDailyGiftGetInfoRsp

// repeated .pb.TDailyGiftItemInfo ArrGiftItemInfo = 1;
inline int TDailyGiftGetInfoRsp::arrgiftiteminfo_size() const {
  return arrgiftiteminfo_.size();
}
inline void TDailyGiftGetInfoRsp::clear_arrgiftiteminfo() {
  arrgiftiteminfo_.Clear();
}
inline const ::pb::TDailyGiftItemInfo& TDailyGiftGetInfoRsp::arrgiftiteminfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftGetInfoRsp.ArrGiftItemInfo)
  return arrgiftiteminfo_.Get(index);
}
inline ::pb::TDailyGiftItemInfo* TDailyGiftGetInfoRsp::mutable_arrgiftiteminfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDailyGiftGetInfoRsp.ArrGiftItemInfo)
  return arrgiftiteminfo_.Mutable(index);
}
inline ::pb::TDailyGiftItemInfo* TDailyGiftGetInfoRsp::add_arrgiftiteminfo() {
  // @@protoc_insertion_point(field_add:pb.TDailyGiftGetInfoRsp.ArrGiftItemInfo)
  return arrgiftiteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftItemInfo >&
TDailyGiftGetInfoRsp::arrgiftiteminfo() const {
  // @@protoc_insertion_point(field_list:pb.TDailyGiftGetInfoRsp.ArrGiftItemInfo)
  return arrgiftiteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftItemInfo >*
TDailyGiftGetInfoRsp::mutable_arrgiftiteminfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDailyGiftGetInfoRsp.ArrGiftItemInfo)
  return &arrgiftiteminfo_;
}

// repeated .pb.TDailyGiftShopItemInfo ArrShopItemInfo = 2;
inline int TDailyGiftGetInfoRsp::arrshopiteminfo_size() const {
  return arrshopiteminfo_.size();
}
inline void TDailyGiftGetInfoRsp::clear_arrshopiteminfo() {
  arrshopiteminfo_.Clear();
}
inline const ::pb::TDailyGiftShopItemInfo& TDailyGiftGetInfoRsp::arrshopiteminfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftGetInfoRsp.ArrShopItemInfo)
  return arrshopiteminfo_.Get(index);
}
inline ::pb::TDailyGiftShopItemInfo* TDailyGiftGetInfoRsp::mutable_arrshopiteminfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDailyGiftGetInfoRsp.ArrShopItemInfo)
  return arrshopiteminfo_.Mutable(index);
}
inline ::pb::TDailyGiftShopItemInfo* TDailyGiftGetInfoRsp::add_arrshopiteminfo() {
  // @@protoc_insertion_point(field_add:pb.TDailyGiftGetInfoRsp.ArrShopItemInfo)
  return arrshopiteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftShopItemInfo >&
TDailyGiftGetInfoRsp::arrshopiteminfo() const {
  // @@protoc_insertion_point(field_list:pb.TDailyGiftGetInfoRsp.ArrShopItemInfo)
  return arrshopiteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftShopItemInfo >*
TDailyGiftGetInfoRsp::mutable_arrshopiteminfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDailyGiftGetInfoRsp.ArrShopItemInfo)
  return &arrshopiteminfo_;
}

// optional uint32 GetDay = 3;
inline bool TDailyGiftGetInfoRsp::has_getday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDailyGiftGetInfoRsp::set_has_getday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDailyGiftGetInfoRsp::clear_has_getday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDailyGiftGetInfoRsp::clear_getday() {
  getday_ = 0u;
  clear_has_getday();
}
inline ::google::protobuf::uint32 TDailyGiftGetInfoRsp::getday() const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftGetInfoRsp.GetDay)
  return getday_;
}
inline void TDailyGiftGetInfoRsp::set_getday(::google::protobuf::uint32 value) {
  set_has_getday();
  getday_ = value;
  // @@protoc_insertion_point(field_set:pb.TDailyGiftGetInfoRsp.GetDay)
}

// -------------------------------------------------------------------

// TDailyGiftGetArrGiftRewardReq

// repeated uint32 ArrId = 1;
inline int TDailyGiftGetArrGiftRewardReq::arrid_size() const {
  return arrid_.size();
}
inline void TDailyGiftGetArrGiftRewardReq::clear_arrid() {
  arrid_.Clear();
}
inline ::google::protobuf::uint32 TDailyGiftGetArrGiftRewardReq::arrid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftGetArrGiftRewardReq.ArrId)
  return arrid_.Get(index);
}
inline void TDailyGiftGetArrGiftRewardReq::set_arrid(int index, ::google::protobuf::uint32 value) {
  arrid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TDailyGiftGetArrGiftRewardReq.ArrId)
}
inline void TDailyGiftGetArrGiftRewardReq::add_arrid(::google::protobuf::uint32 value) {
  arrid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TDailyGiftGetArrGiftRewardReq.ArrId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TDailyGiftGetArrGiftRewardReq::arrid() const {
  // @@protoc_insertion_point(field_list:pb.TDailyGiftGetArrGiftRewardReq.ArrId)
  return arrid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TDailyGiftGetArrGiftRewardReq::mutable_arrid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDailyGiftGetArrGiftRewardReq.ArrId)
  return &arrid_;
}

// -------------------------------------------------------------------

// TDailyGiftGetArrGiftRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TDailyGiftGetArrGiftRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TDailyGiftGetArrGiftRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TDailyGiftGetArrGiftRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftGetArrGiftRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TDailyGiftGetArrGiftRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDailyGiftGetArrGiftRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TDailyGiftGetArrGiftRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TDailyGiftGetArrGiftRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TDailyGiftGetArrGiftRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TDailyGiftGetArrGiftRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TDailyGiftGetArrGiftRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDailyGiftGetArrGiftRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TDailyGiftExchangeRewardReq

// optional uint32 Id = 1;
inline bool TDailyGiftExchangeRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDailyGiftExchangeRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDailyGiftExchangeRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDailyGiftExchangeRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TDailyGiftExchangeRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftExchangeRewardReq.Id)
  return id_;
}
inline void TDailyGiftExchangeRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TDailyGiftExchangeRewardReq.Id)
}

// optional uint32 Num = 2;
inline bool TDailyGiftExchangeRewardReq::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDailyGiftExchangeRewardReq::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDailyGiftExchangeRewardReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDailyGiftExchangeRewardReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TDailyGiftExchangeRewardReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftExchangeRewardReq.Num)
  return num_;
}
inline void TDailyGiftExchangeRewardReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TDailyGiftExchangeRewardReq.Num)
}

// -------------------------------------------------------------------

// TDailyGiftExchangeRewardRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TDailyGiftExchangeRewardRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TDailyGiftExchangeRewardRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TDailyGiftExchangeRewardRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftExchangeRewardRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TDailyGiftExchangeRewardRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDailyGiftExchangeRewardRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TDailyGiftExchangeRewardRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TDailyGiftExchangeRewardRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TDailyGiftExchangeRewardRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TDailyGiftExchangeRewardRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TDailyGiftExchangeRewardRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDailyGiftExchangeRewardRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TDailyGiftInfoNotify

// repeated .pb.TDailyGiftItemInfo ArrGiftInfo = 1;
inline int TDailyGiftInfoNotify::arrgiftinfo_size() const {
  return arrgiftinfo_.size();
}
inline void TDailyGiftInfoNotify::clear_arrgiftinfo() {
  arrgiftinfo_.Clear();
}
inline const ::pb::TDailyGiftItemInfo& TDailyGiftInfoNotify::arrgiftinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftInfoNotify.ArrGiftInfo)
  return arrgiftinfo_.Get(index);
}
inline ::pb::TDailyGiftItemInfo* TDailyGiftInfoNotify::mutable_arrgiftinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDailyGiftInfoNotify.ArrGiftInfo)
  return arrgiftinfo_.Mutable(index);
}
inline ::pb::TDailyGiftItemInfo* TDailyGiftInfoNotify::add_arrgiftinfo() {
  // @@protoc_insertion_point(field_add:pb.TDailyGiftInfoNotify.ArrGiftInfo)
  return arrgiftinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftItemInfo >&
TDailyGiftInfoNotify::arrgiftinfo() const {
  // @@protoc_insertion_point(field_list:pb.TDailyGiftInfoNotify.ArrGiftInfo)
  return arrgiftinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftItemInfo >*
TDailyGiftInfoNotify::mutable_arrgiftinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDailyGiftInfoNotify.ArrGiftInfo)
  return &arrgiftinfo_;
}

// repeated .pb.TDailyGiftShopItemInfo ArrShopInfo = 2;
inline int TDailyGiftInfoNotify::arrshopinfo_size() const {
  return arrshopinfo_.size();
}
inline void TDailyGiftInfoNotify::clear_arrshopinfo() {
  arrshopinfo_.Clear();
}
inline const ::pb::TDailyGiftShopItemInfo& TDailyGiftInfoNotify::arrshopinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftInfoNotify.ArrShopInfo)
  return arrshopinfo_.Get(index);
}
inline ::pb::TDailyGiftShopItemInfo* TDailyGiftInfoNotify::mutable_arrshopinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDailyGiftInfoNotify.ArrShopInfo)
  return arrshopinfo_.Mutable(index);
}
inline ::pb::TDailyGiftShopItemInfo* TDailyGiftInfoNotify::add_arrshopinfo() {
  // @@protoc_insertion_point(field_add:pb.TDailyGiftInfoNotify.ArrShopInfo)
  return arrshopinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftShopItemInfo >&
TDailyGiftInfoNotify::arrshopinfo() const {
  // @@protoc_insertion_point(field_list:pb.TDailyGiftInfoNotify.ArrShopInfo)
  return arrshopinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TDailyGiftShopItemInfo >*
TDailyGiftInfoNotify::mutable_arrshopinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDailyGiftInfoNotify.ArrShopInfo)
  return &arrshopinfo_;
}

// optional uint32 GetDay = 3;
inline bool TDailyGiftInfoNotify::has_getday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDailyGiftInfoNotify::set_has_getday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDailyGiftInfoNotify::clear_has_getday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDailyGiftInfoNotify::clear_getday() {
  getday_ = 0u;
  clear_has_getday();
}
inline ::google::protobuf::uint32 TDailyGiftInfoNotify::getday() const {
  // @@protoc_insertion_point(field_get:pb.TDailyGiftInfoNotify.GetDay)
  return getday_;
}
inline void TDailyGiftInfoNotify::set_getday(::google::protobuf::uint32 value) {
  set_has_getday();
  getday_ = value;
  // @@protoc_insertion_point(field_set:pb.TDailyGiftInfoNotify.GetDay)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fDailyGift_2eproto__INCLUDED
