// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/SlgHero.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/SlgHero.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TSlgHeroInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgHeroInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgHeroSyncReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgHeroSyncReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgHeroDelReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgHeroDelReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgHeroGetAllHeroResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgHeroGetAllHeroResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgHeroUpdateDataNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgHeroUpdateDataNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fSlgHero_2eproto() {
  protobuf_AddDesc_net_2fSlgHero_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/SlgHero.proto");
  GOOGLE_CHECK(file != NULL);
  TSlgHeroInfo_descriptor_ = file->message_type(0);
  static const int TSlgHeroInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroInfo, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroInfo, hurtendtime_),
  };
  TSlgHeroInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgHeroInfo_descriptor_,
      TSlgHeroInfo::default_instance_,
      TSlgHeroInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgHeroInfo));
  TSlgHeroSyncReq_descriptor_ = file->message_type(1);
  static const int TSlgHeroSyncReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroSyncReq, propinfo_),
  };
  TSlgHeroSyncReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgHeroSyncReq_descriptor_,
      TSlgHeroSyncReq::default_instance_,
      TSlgHeroSyncReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroSyncReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroSyncReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgHeroSyncReq));
  TSlgHeroDelReq_descriptor_ = file->message_type(2);
  static const int TSlgHeroDelReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroDelReq, hid_),
  };
  TSlgHeroDelReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgHeroDelReq_descriptor_,
      TSlgHeroDelReq::default_instance_,
      TSlgHeroDelReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroDelReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroDelReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgHeroDelReq));
  TSlgHeroGetAllHeroResp_descriptor_ = file->message_type(3);
  static const int TSlgHeroGetAllHeroResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroGetAllHeroResp, heroarr_),
  };
  TSlgHeroGetAllHeroResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgHeroGetAllHeroResp_descriptor_,
      TSlgHeroGetAllHeroResp::default_instance_,
      TSlgHeroGetAllHeroResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroGetAllHeroResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroGetAllHeroResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgHeroGetAllHeroResp));
  TSlgHeroUpdateDataNotify_descriptor_ = file->message_type(4);
  static const int TSlgHeroUpdateDataNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroUpdateDataNotify, heroarr_),
  };
  TSlgHeroUpdateDataNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgHeroUpdateDataNotify_descriptor_,
      TSlgHeroUpdateDataNotify::default_instance_,
      TSlgHeroUpdateDataNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroUpdateDataNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgHeroUpdateDataNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgHeroUpdateDataNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fSlgHero_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgHeroInfo_descriptor_, &TSlgHeroInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgHeroSyncReq_descriptor_, &TSlgHeroSyncReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgHeroDelReq_descriptor_, &TSlgHeroDelReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgHeroGetAllHeroResp_descriptor_, &TSlgHeroGetAllHeroResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgHeroUpdateDataNotify_descriptor_, &TSlgHeroUpdateDataNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fSlgHero_2eproto() {
  delete TSlgHeroInfo::default_instance_;
  delete TSlgHeroInfo_reflection_;
  delete TSlgHeroSyncReq::default_instance_;
  delete TSlgHeroSyncReq_reflection_;
  delete TSlgHeroDelReq::default_instance_;
  delete TSlgHeroDelReq_reflection_;
  delete TSlgHeroGetAllHeroResp::default_instance_;
  delete TSlgHeroGetAllHeroResp_reflection_;
  delete TSlgHeroUpdateDataNotify::default_instance_;
  delete TSlgHeroUpdateDataNotify_reflection_;
}

void protobuf_AddDesc_net_2fSlgHero_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fBattle_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021net/SlgHero.proto\022\002pb\032\020net/Battle.prot"
    "o\"0\n\014TSlgHeroInfo\022\013\n\003Hid\030\001 \001(\r\022\023\n\013HurtEn"
    "dTime\030\002 \001(\004\"2\n\017TSlgHeroSyncReq\022\037\n\010propIn"
    "fo\030\001 \001(\0132\r.pb.TUnitInfo\"\035\n\016TSlgHeroDelRe"
    "q\022\013\n\003hid\030\001 \001(\r\";\n\026TSlgHeroGetAllHeroResp"
    "\022!\n\007HeroArr\030\001 \003(\0132\020.pb.TSlgHeroInfo\"=\n\030T"
    "SlgHeroUpdateDataNotify\022!\n\007HeroArr\030\001 \003(\013"
    "2\020.pb.TSlgHeroInfo", 298);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/SlgHero.proto", &protobuf_RegisterTypes);
  TSlgHeroInfo::default_instance_ = new TSlgHeroInfo();
  TSlgHeroSyncReq::default_instance_ = new TSlgHeroSyncReq();
  TSlgHeroDelReq::default_instance_ = new TSlgHeroDelReq();
  TSlgHeroGetAllHeroResp::default_instance_ = new TSlgHeroGetAllHeroResp();
  TSlgHeroUpdateDataNotify::default_instance_ = new TSlgHeroUpdateDataNotify();
  TSlgHeroInfo::default_instance_->InitAsDefaultInstance();
  TSlgHeroSyncReq::default_instance_->InitAsDefaultInstance();
  TSlgHeroDelReq::default_instance_->InitAsDefaultInstance();
  TSlgHeroGetAllHeroResp::default_instance_->InitAsDefaultInstance();
  TSlgHeroUpdateDataNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fSlgHero_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fSlgHero_2eproto {
  StaticDescriptorInitializer_net_2fSlgHero_2eproto() {
    protobuf_AddDesc_net_2fSlgHero_2eproto();
  }
} static_descriptor_initializer_net_2fSlgHero_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TSlgHeroInfo::kHidFieldNumber;
const int TSlgHeroInfo::kHurtEndTimeFieldNumber;
#endif  // !_MSC_VER

TSlgHeroInfo::TSlgHeroInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgHeroInfo)
}

void TSlgHeroInfo::InitAsDefaultInstance() {
}

TSlgHeroInfo::TSlgHeroInfo(const TSlgHeroInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgHeroInfo)
}

void TSlgHeroInfo::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  hurtendtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgHeroInfo::~TSlgHeroInfo() {
  // @@protoc_insertion_point(destructor:pb.TSlgHeroInfo)
  SharedDtor();
}

void TSlgHeroInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgHeroInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgHeroInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgHeroInfo_descriptor_;
}

const TSlgHeroInfo& TSlgHeroInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgHero_2eproto();
  return *default_instance_;
}

TSlgHeroInfo* TSlgHeroInfo::default_instance_ = NULL;

TSlgHeroInfo* TSlgHeroInfo::New() const {
  return new TSlgHeroInfo;
}

void TSlgHeroInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TSlgHeroInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hurtendtime_, hid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgHeroInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgHeroInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_HurtEndTime;
        break;
      }

      // optional uint64 HurtEndTime = 2;
      case 2: {
        if (tag == 16) {
         parse_HurtEndTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hurtendtime_)));
          set_has_hurtendtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgHeroInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgHeroInfo)
  return false;
#undef DO_
}

void TSlgHeroInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgHeroInfo)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint64 HurtEndTime = 2;
  if (has_hurtendtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->hurtendtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgHeroInfo)
}

::google::protobuf::uint8* TSlgHeroInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgHeroInfo)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint64 HurtEndTime = 2;
  if (has_hurtendtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->hurtendtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgHeroInfo)
  return target;
}

int TSlgHeroInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint64 HurtEndTime = 2;
    if (has_hurtendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->hurtendtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgHeroInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgHeroInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgHeroInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgHeroInfo::MergeFrom(const TSlgHeroInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_hurtendtime()) {
      set_hurtendtime(from.hurtendtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgHeroInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgHeroInfo::CopyFrom(const TSlgHeroInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgHeroInfo::IsInitialized() const {

  return true;
}

void TSlgHeroInfo::Swap(TSlgHeroInfo* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(hurtendtime_, other->hurtendtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgHeroInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgHeroInfo_descriptor_;
  metadata.reflection = TSlgHeroInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgHeroSyncReq::kPropInfoFieldNumber;
#endif  // !_MSC_VER

TSlgHeroSyncReq::TSlgHeroSyncReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgHeroSyncReq)
}

void TSlgHeroSyncReq::InitAsDefaultInstance() {
  propinfo_ = const_cast< ::pb::TUnitInfo*>(&::pb::TUnitInfo::default_instance());
}

TSlgHeroSyncReq::TSlgHeroSyncReq(const TSlgHeroSyncReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgHeroSyncReq)
}

void TSlgHeroSyncReq::SharedCtor() {
  _cached_size_ = 0;
  propinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgHeroSyncReq::~TSlgHeroSyncReq() {
  // @@protoc_insertion_point(destructor:pb.TSlgHeroSyncReq)
  SharedDtor();
}

void TSlgHeroSyncReq::SharedDtor() {
  if (this != default_instance_) {
    delete propinfo_;
  }
}

void TSlgHeroSyncReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgHeroSyncReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgHeroSyncReq_descriptor_;
}

const TSlgHeroSyncReq& TSlgHeroSyncReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgHero_2eproto();
  return *default_instance_;
}

TSlgHeroSyncReq* TSlgHeroSyncReq::default_instance_ = NULL;

TSlgHeroSyncReq* TSlgHeroSyncReq::New() const {
  return new TSlgHeroSyncReq;
}

void TSlgHeroSyncReq::Clear() {
  if (has_propinfo()) {
    if (propinfo_ != NULL) propinfo_->::pb::TUnitInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgHeroSyncReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgHeroSyncReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TUnitInfo propInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_propinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgHeroSyncReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgHeroSyncReq)
  return false;
#undef DO_
}

void TSlgHeroSyncReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgHeroSyncReq)
  // optional .pb.TUnitInfo propInfo = 1;
  if (has_propinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->propinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgHeroSyncReq)
}

::google::protobuf::uint8* TSlgHeroSyncReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgHeroSyncReq)
  // optional .pb.TUnitInfo propInfo = 1;
  if (has_propinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->propinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgHeroSyncReq)
  return target;
}

int TSlgHeroSyncReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TUnitInfo propInfo = 1;
    if (has_propinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->propinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgHeroSyncReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgHeroSyncReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgHeroSyncReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgHeroSyncReq::MergeFrom(const TSlgHeroSyncReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_propinfo()) {
      mutable_propinfo()->::pb::TUnitInfo::MergeFrom(from.propinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgHeroSyncReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgHeroSyncReq::CopyFrom(const TSlgHeroSyncReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgHeroSyncReq::IsInitialized() const {

  if (has_propinfo()) {
    if (!this->propinfo().IsInitialized()) return false;
  }
  return true;
}

void TSlgHeroSyncReq::Swap(TSlgHeroSyncReq* other) {
  if (other != this) {
    std::swap(propinfo_, other->propinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgHeroSyncReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgHeroSyncReq_descriptor_;
  metadata.reflection = TSlgHeroSyncReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgHeroDelReq::kHidFieldNumber;
#endif  // !_MSC_VER

TSlgHeroDelReq::TSlgHeroDelReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgHeroDelReq)
}

void TSlgHeroDelReq::InitAsDefaultInstance() {
}

TSlgHeroDelReq::TSlgHeroDelReq(const TSlgHeroDelReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgHeroDelReq)
}

void TSlgHeroDelReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgHeroDelReq::~TSlgHeroDelReq() {
  // @@protoc_insertion_point(destructor:pb.TSlgHeroDelReq)
  SharedDtor();
}

void TSlgHeroDelReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgHeroDelReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgHeroDelReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgHeroDelReq_descriptor_;
}

const TSlgHeroDelReq& TSlgHeroDelReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgHero_2eproto();
  return *default_instance_;
}

TSlgHeroDelReq* TSlgHeroDelReq::default_instance_ = NULL;

TSlgHeroDelReq* TSlgHeroDelReq::New() const {
  return new TSlgHeroDelReq;
}

void TSlgHeroDelReq::Clear() {
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgHeroDelReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgHeroDelReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgHeroDelReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgHeroDelReq)
  return false;
#undef DO_
}

void TSlgHeroDelReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgHeroDelReq)
  // optional uint32 hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgHeroDelReq)
}

::google::protobuf::uint8* TSlgHeroDelReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgHeroDelReq)
  // optional uint32 hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgHeroDelReq)
  return target;
}

int TSlgHeroDelReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgHeroDelReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgHeroDelReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgHeroDelReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgHeroDelReq::MergeFrom(const TSlgHeroDelReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgHeroDelReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgHeroDelReq::CopyFrom(const TSlgHeroDelReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgHeroDelReq::IsInitialized() const {

  return true;
}

void TSlgHeroDelReq::Swap(TSlgHeroDelReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgHeroDelReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgHeroDelReq_descriptor_;
  metadata.reflection = TSlgHeroDelReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgHeroGetAllHeroResp::kHeroArrFieldNumber;
#endif  // !_MSC_VER

TSlgHeroGetAllHeroResp::TSlgHeroGetAllHeroResp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgHeroGetAllHeroResp)
}

void TSlgHeroGetAllHeroResp::InitAsDefaultInstance() {
}

TSlgHeroGetAllHeroResp::TSlgHeroGetAllHeroResp(const TSlgHeroGetAllHeroResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgHeroGetAllHeroResp)
}

void TSlgHeroGetAllHeroResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgHeroGetAllHeroResp::~TSlgHeroGetAllHeroResp() {
  // @@protoc_insertion_point(destructor:pb.TSlgHeroGetAllHeroResp)
  SharedDtor();
}

void TSlgHeroGetAllHeroResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgHeroGetAllHeroResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgHeroGetAllHeroResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgHeroGetAllHeroResp_descriptor_;
}

const TSlgHeroGetAllHeroResp& TSlgHeroGetAllHeroResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgHero_2eproto();
  return *default_instance_;
}

TSlgHeroGetAllHeroResp* TSlgHeroGetAllHeroResp::default_instance_ = NULL;

TSlgHeroGetAllHeroResp* TSlgHeroGetAllHeroResp::New() const {
  return new TSlgHeroGetAllHeroResp;
}

void TSlgHeroGetAllHeroResp::Clear() {
  heroarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgHeroGetAllHeroResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgHeroGetAllHeroResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TSlgHeroInfo HeroArr = 1;
      case 1: {
        if (tag == 10) {
         parse_HeroArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_heroarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_HeroArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgHeroGetAllHeroResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgHeroGetAllHeroResp)
  return false;
#undef DO_
}

void TSlgHeroGetAllHeroResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgHeroGetAllHeroResp)
  // repeated .pb.TSlgHeroInfo HeroArr = 1;
  for (int i = 0; i < this->heroarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->heroarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgHeroGetAllHeroResp)
}

::google::protobuf::uint8* TSlgHeroGetAllHeroResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgHeroGetAllHeroResp)
  // repeated .pb.TSlgHeroInfo HeroArr = 1;
  for (int i = 0; i < this->heroarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->heroarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgHeroGetAllHeroResp)
  return target;
}

int TSlgHeroGetAllHeroResp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TSlgHeroInfo HeroArr = 1;
  total_size += 1 * this->heroarr_size();
  for (int i = 0; i < this->heroarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->heroarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgHeroGetAllHeroResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgHeroGetAllHeroResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgHeroGetAllHeroResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgHeroGetAllHeroResp::MergeFrom(const TSlgHeroGetAllHeroResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  heroarr_.MergeFrom(from.heroarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgHeroGetAllHeroResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgHeroGetAllHeroResp::CopyFrom(const TSlgHeroGetAllHeroResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgHeroGetAllHeroResp::IsInitialized() const {

  return true;
}

void TSlgHeroGetAllHeroResp::Swap(TSlgHeroGetAllHeroResp* other) {
  if (other != this) {
    heroarr_.Swap(&other->heroarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgHeroGetAllHeroResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgHeroGetAllHeroResp_descriptor_;
  metadata.reflection = TSlgHeroGetAllHeroResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgHeroUpdateDataNotify::kHeroArrFieldNumber;
#endif  // !_MSC_VER

TSlgHeroUpdateDataNotify::TSlgHeroUpdateDataNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgHeroUpdateDataNotify)
}

void TSlgHeroUpdateDataNotify::InitAsDefaultInstance() {
}

TSlgHeroUpdateDataNotify::TSlgHeroUpdateDataNotify(const TSlgHeroUpdateDataNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgHeroUpdateDataNotify)
}

void TSlgHeroUpdateDataNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgHeroUpdateDataNotify::~TSlgHeroUpdateDataNotify() {
  // @@protoc_insertion_point(destructor:pb.TSlgHeroUpdateDataNotify)
  SharedDtor();
}

void TSlgHeroUpdateDataNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgHeroUpdateDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgHeroUpdateDataNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgHeroUpdateDataNotify_descriptor_;
}

const TSlgHeroUpdateDataNotify& TSlgHeroUpdateDataNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgHero_2eproto();
  return *default_instance_;
}

TSlgHeroUpdateDataNotify* TSlgHeroUpdateDataNotify::default_instance_ = NULL;

TSlgHeroUpdateDataNotify* TSlgHeroUpdateDataNotify::New() const {
  return new TSlgHeroUpdateDataNotify;
}

void TSlgHeroUpdateDataNotify::Clear() {
  heroarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgHeroUpdateDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgHeroUpdateDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TSlgHeroInfo HeroArr = 1;
      case 1: {
        if (tag == 10) {
         parse_HeroArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_heroarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_HeroArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgHeroUpdateDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgHeroUpdateDataNotify)
  return false;
#undef DO_
}

void TSlgHeroUpdateDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgHeroUpdateDataNotify)
  // repeated .pb.TSlgHeroInfo HeroArr = 1;
  for (int i = 0; i < this->heroarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->heroarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgHeroUpdateDataNotify)
}

::google::protobuf::uint8* TSlgHeroUpdateDataNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgHeroUpdateDataNotify)
  // repeated .pb.TSlgHeroInfo HeroArr = 1;
  for (int i = 0; i < this->heroarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->heroarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgHeroUpdateDataNotify)
  return target;
}

int TSlgHeroUpdateDataNotify::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TSlgHeroInfo HeroArr = 1;
  total_size += 1 * this->heroarr_size();
  for (int i = 0; i < this->heroarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->heroarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgHeroUpdateDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgHeroUpdateDataNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgHeroUpdateDataNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgHeroUpdateDataNotify::MergeFrom(const TSlgHeroUpdateDataNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  heroarr_.MergeFrom(from.heroarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgHeroUpdateDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgHeroUpdateDataNotify::CopyFrom(const TSlgHeroUpdateDataNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgHeroUpdateDataNotify::IsInitialized() const {

  return true;
}

void TSlgHeroUpdateDataNotify::Swap(TSlgHeroUpdateDataNotify* other) {
  if (other != this) {
    heroarr_.Swap(&other->heroarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgHeroUpdateDataNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgHeroUpdateDataNotify_descriptor_;
  metadata.reflection = TSlgHeroUpdateDataNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
