// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Pub.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/Pub.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TPubCommonRecruitInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubCommonRecruitInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubNationWishList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubNationWishList_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubHotSpotHeroRectNumInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubHotSpotHeroRectNumInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubHotSpotRecruitInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubHotSpotRecruitInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubHotSpotRecruitReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubHotSpotRecruitReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubHotSpotRecruitRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubHotSpotRecruitRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubOpenHotSpotLuckyBoxReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubOpenHotSpotLuckyBoxReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubRecruitReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubRecruitReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubRecruitRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubRecruitRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubRecruitReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubRecruitReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubReceiveScoreRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubReceiveScoreRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubReceiveScoreRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubReceiveScoreRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubBuyRecruitItemReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubBuyRecruitItemReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubSetWishListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubSetWishListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubSetWishListStatusReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubSetWishListStatusReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TPubReceiveHotSpotRecruitRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TPubReceiveHotSpotRecruitRewardReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ERecruitType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fPub_2eproto() {
  protobuf_AddDesc_net_2fPub_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/Pub.proto");
  GOOGLE_CHECK(file != NULL);
  TPubCommonRecruitInfo_descriptor_ = file->message_type(0);
  static const int TPubCommonRecruitInfo_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubCommonRecruitInfo, recruittype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubCommonRecruitInfo, userfreenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubCommonRecruitInfo, freetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubCommonRecruitInfo, recruitnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubCommonRecruitInfo, usergoldnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubCommonRecruitInfo, recruitscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubCommonRecruitInfo, receivearray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubCommonRecruitInfo, campid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubCommonRecruitInfo, buyrecitemnum_),
  };
  TPubCommonRecruitInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubCommonRecruitInfo_descriptor_,
      TPubCommonRecruitInfo::default_instance_,
      TPubCommonRecruitInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubCommonRecruitInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubCommonRecruitInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubCommonRecruitInfo));
  TPubNationWishList_descriptor_ = file->message_type(1);
  static const int TPubNationWishList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubNationWishList, campid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubNationWishList, herotid_),
  };
  TPubNationWishList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubNationWishList_descriptor_,
      TPubNationWishList::default_instance_,
      TPubNationWishList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubNationWishList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubNationWishList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubNationWishList));
  TPubHotSpotHeroRectNumInfo_descriptor_ = file->message_type(2);
  static const int TPubHotSpotHeroRectNumInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotHeroRectNumInfo, hotspotheroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotHeroRectNumInfo, recruitnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotHeroRectNumInfo, rewardindexarr_),
  };
  TPubHotSpotHeroRectNumInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubHotSpotHeroRectNumInfo_descriptor_,
      TPubHotSpotHeroRectNumInfo::default_instance_,
      TPubHotSpotHeroRectNumInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotHeroRectNumInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotHeroRectNumInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubHotSpotHeroRectNumInfo));
  TPubGetInfoRsp_descriptor_ = file->message_type(3);
  static const int TPubGetInfoRsp_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubGetInfoRsp, recruitinfoarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubGetInfoRsp, seniorhalfgoldnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubGetInfoRsp, hotspotrecruitinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubGetInfoRsp, novicerewardtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubGetInfoRsp, wishlistarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubGetInfoRsp, wishlistisopen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubGetInfoRsp, hotspotherorectnumarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubGetInfoRsp, canbuyhotspotrecnum_),
  };
  TPubGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubGetInfoRsp_descriptor_,
      TPubGetInfoRsp::default_instance_,
      TPubGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubGetInfoRsp));
  TPubHotSpotRecruitInfo_descriptor_ = file->message_type(4);
  static const int TPubHotSpotRecruitInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotRecruitInfo, replaceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotRecruitInfo, isonce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotRecruitInfo, roundindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotRecruitInfo, roundstarttime_),
  };
  TPubHotSpotRecruitInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubHotSpotRecruitInfo_descriptor_,
      TPubHotSpotRecruitInfo::default_instance_,
      TPubHotSpotRecruitInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotRecruitInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotRecruitInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubHotSpotRecruitInfo));
  TPubHotSpotRecruitReq_descriptor_ = file->message_type(5);
  static const int TPubHotSpotRecruitReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotRecruitReq, hotspotheroid_),
  };
  TPubHotSpotRecruitReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubHotSpotRecruitReq_descriptor_,
      TPubHotSpotRecruitReq::default_instance_,
      TPubHotSpotRecruitReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotRecruitReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotRecruitReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubHotSpotRecruitReq));
  TPubHotSpotRecruitRsp_descriptor_ = file->message_type(6);
  static const int TPubHotSpotRecruitRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotRecruitRsp, rewardarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotRecruitRsp, artifactleftnum_),
  };
  TPubHotSpotRecruitRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubHotSpotRecruitRsp_descriptor_,
      TPubHotSpotRecruitRsp::default_instance_,
      TPubHotSpotRecruitRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotRecruitRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubHotSpotRecruitRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubHotSpotRecruitRsp));
  TPubOpenHotSpotLuckyBoxReq_descriptor_ = file->message_type(7);
  static const int TPubOpenHotSpotLuckyBoxReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubOpenHotSpotLuckyBoxReq, hotspotheroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubOpenHotSpotLuckyBoxReq, boxindex_),
  };
  TPubOpenHotSpotLuckyBoxReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubOpenHotSpotLuckyBoxReq_descriptor_,
      TPubOpenHotSpotLuckyBoxReq::default_instance_,
      TPubOpenHotSpotLuckyBoxReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubOpenHotSpotLuckyBoxReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubOpenHotSpotLuckyBoxReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubOpenHotSpotLuckyBoxReq));
  TPubRecruitReq_descriptor_ = file->message_type(8);
  static const int TPubRecruitReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitReq, recruittype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitReq, campid_),
  };
  TPubRecruitReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubRecruitReq_descriptor_,
      TPubRecruitReq::default_instance_,
      TPubRecruitReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubRecruitReq));
  TPubRecruitRsp_descriptor_ = file->message_type(9);
  static const int TPubRecruitRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitRsp, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitRsp, boomnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitRsp, rewardarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitRsp, usegoldnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitRsp, artifactleftnum_),
  };
  TPubRecruitRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubRecruitRsp_descriptor_,
      TPubRecruitRsp::default_instance_,
      TPubRecruitRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubRecruitRsp));
  TPubRecruitReward_descriptor_ = file->message_type(10);
  static const int TPubRecruitReward_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitReward, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitReward, critratio_),
  };
  TPubRecruitReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubRecruitReward_descriptor_,
      TPubRecruitReward::default_instance_,
      TPubRecruitReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubRecruitReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubRecruitReward));
  TPubReceiveScoreRewardReq_descriptor_ = file->message_type(11);
  static const int TPubReceiveScoreRewardReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveScoreRewardReq, scoreindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveScoreRewardReq, recruittype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveScoreRewardReq, campid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveScoreRewardReq, herofragid_),
  };
  TPubReceiveScoreRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubReceiveScoreRewardReq_descriptor_,
      TPubReceiveScoreRewardReq::default_instance_,
      TPubReceiveScoreRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveScoreRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveScoreRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubReceiveScoreRewardReq));
  TPubReceiveScoreRewardRsp_descriptor_ = file->message_type(12);
  static const int TPubReceiveScoreRewardRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveScoreRewardRsp, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveScoreRewardRsp, rewardarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveScoreRewardRsp, receivearray_),
  };
  TPubReceiveScoreRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubReceiveScoreRewardRsp_descriptor_,
      TPubReceiveScoreRewardRsp::default_instance_,
      TPubReceiveScoreRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveScoreRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveScoreRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubReceiveScoreRewardRsp));
  TPubBuyRecruitItemReq_descriptor_ = file->message_type(13);
  static const int TPubBuyRecruitItemReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubBuyRecruitItemReq, buynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubBuyRecruitItemReq, recruittype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubBuyRecruitItemReq, campid_),
  };
  TPubBuyRecruitItemReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubBuyRecruitItemReq_descriptor_,
      TPubBuyRecruitItemReq::default_instance_,
      TPubBuyRecruitItemReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubBuyRecruitItemReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubBuyRecruitItemReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubBuyRecruitItemReq));
  TPubSetWishListReq_descriptor_ = file->message_type(14);
  static const int TPubSetWishListReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubSetWishListReq, preherotid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubSetWishListReq, setherotid_),
  };
  TPubSetWishListReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubSetWishListReq_descriptor_,
      TPubSetWishListReq::default_instance_,
      TPubSetWishListReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubSetWishListReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubSetWishListReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubSetWishListReq));
  TPubSetWishListStatusReq_descriptor_ = file->message_type(15);
  static const int TPubSetWishListStatusReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubSetWishListStatusReq, isopen_),
  };
  TPubSetWishListStatusReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubSetWishListStatusReq_descriptor_,
      TPubSetWishListStatusReq::default_instance_,
      TPubSetWishListStatusReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubSetWishListStatusReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubSetWishListStatusReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubSetWishListStatusReq));
  TPubReceiveHotSpotRecruitRewardReq_descriptor_ = file->message_type(16);
  static const int TPubReceiveHotSpotRecruitRewardReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveHotSpotRecruitRewardReq, hotspotheroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveHotSpotRecruitRewardReq, rewardindex_),
  };
  TPubReceiveHotSpotRecruitRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TPubReceiveHotSpotRecruitRewardReq_descriptor_,
      TPubReceiveHotSpotRecruitRewardReq::default_instance_,
      TPubReceiveHotSpotRecruitRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveHotSpotRecruitRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TPubReceiveHotSpotRecruitRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TPubReceiveHotSpotRecruitRewardReq));
  ERecruitType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fPub_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubCommonRecruitInfo_descriptor_, &TPubCommonRecruitInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubNationWishList_descriptor_, &TPubNationWishList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubHotSpotHeroRectNumInfo_descriptor_, &TPubHotSpotHeroRectNumInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubGetInfoRsp_descriptor_, &TPubGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubHotSpotRecruitInfo_descriptor_, &TPubHotSpotRecruitInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubHotSpotRecruitReq_descriptor_, &TPubHotSpotRecruitReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubHotSpotRecruitRsp_descriptor_, &TPubHotSpotRecruitRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubOpenHotSpotLuckyBoxReq_descriptor_, &TPubOpenHotSpotLuckyBoxReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubRecruitReq_descriptor_, &TPubRecruitReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubRecruitRsp_descriptor_, &TPubRecruitRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubRecruitReward_descriptor_, &TPubRecruitReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubReceiveScoreRewardReq_descriptor_, &TPubReceiveScoreRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubReceiveScoreRewardRsp_descriptor_, &TPubReceiveScoreRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubBuyRecruitItemReq_descriptor_, &TPubBuyRecruitItemReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubSetWishListReq_descriptor_, &TPubSetWishListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubSetWishListStatusReq_descriptor_, &TPubSetWishListStatusReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TPubReceiveHotSpotRecruitRewardReq_descriptor_, &TPubReceiveHotSpotRecruitRewardReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fPub_2eproto() {
  delete TPubCommonRecruitInfo::default_instance_;
  delete TPubCommonRecruitInfo_reflection_;
  delete TPubNationWishList::default_instance_;
  delete TPubNationWishList_reflection_;
  delete TPubHotSpotHeroRectNumInfo::default_instance_;
  delete TPubHotSpotHeroRectNumInfo_reflection_;
  delete TPubGetInfoRsp::default_instance_;
  delete TPubGetInfoRsp_reflection_;
  delete TPubHotSpotRecruitInfo::default_instance_;
  delete TPubHotSpotRecruitInfo_reflection_;
  delete TPubHotSpotRecruitReq::default_instance_;
  delete TPubHotSpotRecruitReq_reflection_;
  delete TPubHotSpotRecruitRsp::default_instance_;
  delete TPubHotSpotRecruitRsp_reflection_;
  delete TPubOpenHotSpotLuckyBoxReq::default_instance_;
  delete TPubOpenHotSpotLuckyBoxReq_reflection_;
  delete TPubRecruitReq::default_instance_;
  delete TPubRecruitReq_reflection_;
  delete TPubRecruitRsp::default_instance_;
  delete TPubRecruitRsp_reflection_;
  delete TPubRecruitReward::default_instance_;
  delete TPubRecruitReward_reflection_;
  delete TPubReceiveScoreRewardReq::default_instance_;
  delete TPubReceiveScoreRewardReq_reflection_;
  delete TPubReceiveScoreRewardRsp::default_instance_;
  delete TPubReceiveScoreRewardRsp_reflection_;
  delete TPubBuyRecruitItemReq::default_instance_;
  delete TPubBuyRecruitItemReq_reflection_;
  delete TPubSetWishListReq::default_instance_;
  delete TPubSetWishListReq_reflection_;
  delete TPubSetWishListStatusReq::default_instance_;
  delete TPubSetWishListStatusReq_reflection_;
  delete TPubReceiveHotSpotRecruitRewardReq::default_instance_;
  delete TPubReceiveHotSpotRecruitRewardReq_reflection_;
}

void protobuf_AddDesc_net_2fPub_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rnet/Pub.proto\022\002pb\032\026net/CommonReward.pr"
    "oto\"\341\001\n\025TPubCommonRecruitInfo\022%\n\013Recruit"
    "Type\030\001 \001(\0162\020.pb.ERecruitType\022\023\n\013UserFree"
    "Num\030\002 \001(\r\022\020\n\010FreeTime\030\003 \001(\004\022\022\n\nRecruitNu"
    "m\030\004 \001(\r\022\023\n\013UserGoldNum\030\005 \001(\r\022\024\n\014RecruitS"
    "core\030\006 \001(\r\022\024\n\014ReceiveArray\030\007 \003(\r\022\016\n\006Camp"
    "Id\030\010 \001(\r\022\025\n\rBuyRecItemNum\030\t \001(\r\"5\n\022TPubN"
    "ationWishList\022\016\n\006CampId\030\001 \001(\r\022\017\n\007HeroTid"
    "\030\002 \003(\r\"_\n\032TPubHotSpotHeroRectNumInfo\022\025\n\r"
    "HotSpotHeroId\030\001 \001(\r\022\022\n\nRecruitNum\030\002 \001(\r\022"
    "\026\n\016RewardIndexArr\030\003 \003(\r\"\323\002\n\016TPubGetInfoR"
    "sp\0223\n\020RecruitInfoArray\030\001 \003(\0132\031.pb.TPubCo"
    "mmonRecruitInfo\022\031\n\021SeniorHalfGoldNum\030\002 \001"
    "(\r\0226\n\022HotSpotRecruitInfo\030\003 \001(\0132\032.pb.TPub"
    "HotSpotRecruitInfo\022\030\n\020NoviceRewardTime\030\004"
    " \001(\004\022+\n\013WishListArr\030\005 \003(\0132\026.pb.TPubNatio"
    "nWishList\022\026\n\016WishListIsOpen\030\006 \001(\010\022=\n\025Hot"
    "SpotHeroRectNumArr\030\007 \003(\0132\036.pb.TPubHotSpo"
    "tHeroRectNumInfo\022\033\n\023CanBuyHotSpotRecNum\030"
    "\010 \001(\r\"g\n\026TPubHotSpotRecruitInfo\022\021\n\tRepla"
    "ceId\030\001 \001(\r\022\016\n\006IsOnce\030\002 \001(\010\022\022\n\nRoundIndex"
    "\030\003 \001(\r\022\026\n\016RoundStartTime\030\004 \001(\004\".\n\025TPubHo"
    "tSpotRecruitReq\022\025\n\rHotSpotHeroId\030\001 \001(\r\"Z"
    "\n\025TPubHotSpotRecruitRsp\022(\n\tRewardArr\030\001 \003"
    "(\0132\025.pb.TPubRecruitReward\022\027\n\017ArtifactLef"
    "tNum\030\002 \001(\r\"E\n\032TPubOpenHotSpotLuckyBoxReq"
    "\022\025\n\rHotSpotHeroId\030\001 \001(\r\022\020\n\010BoxIndex\030\002 \001("
    "\r\"G\n\016TPubRecruitReq\022%\n\013RecruitType\030\001 \001(\016"
    "2\020.pb.ERecruitType\022\016\n\006CampId\030\002 \001(\r\"\207\001\n\016T"
    "PubRecruitRsp\022\r\n\005Score\030\001 \001(\r\022\017\n\007BoomNum\030"
    "\002 \001(\r\022(\n\tRewardArr\030\003 \003(\0132\025.pb.TPubRecrui"
    "tReward\022\022\n\nUseGoldNum\030\004 \001(\r\022\027\n\017ArtifactL"
    "eftNum\030\005 \001(\r\"I\n\021TPubRecruitReward\022!\n\006Rew"
    "ard\030\001 \001(\0132\021.pb.TCommonReward\022\021\n\tCritRati"
    "o\030\002 \001(\r\"z\n\031TPubReceiveScoreRewardReq\022\022\n\n"
    "ScoreIndex\030\001 \001(\r\022%\n\013RecruitType\030\002 \001(\0162\020."
    "pb.ERecruitType\022\016\n\006CampId\030\003 \001(\r\022\022\n\nHeroF"
    "ragId\030\004 \001(\r\"h\n\031TPubReceiveScoreRewardRsp"
    "\022\r\n\005Score\030\001 \001(\r\022&\n\013RewardArray\030\002 \003(\0132\021.p"
    "b.TCommonReward\022\024\n\014ReceiveArray\030\003 \003(\r\"^\n"
    "\025TPubBuyRecruitItemReq\022\016\n\006BuyNum\030\001 \001(\r\022%"
    "\n\013RecruitType\030\002 \001(\0162\020.pb.ERecruitType\022\016\n"
    "\006CampId\030\003 \001(\r\"<\n\022TPubSetWishListReq\022\022\n\nP"
    "reHeroTid\030\001 \001(\r\022\022\n\nSetHeroTid\030\002 \001(\r\"*\n\030T"
    "PubSetWishListStatusReq\022\016\n\006IsOPen\030\001 \001(\010\""
    "P\n\"TPubReceiveHotSpotRecruitRewardReq\022\025\n"
    "\rHotSpotHeroId\030\001 \001(\r\022\023\n\013RewardIndex\030\002 \001("
    "\r*=\n\014ERecruitType\022\n\n\006JUNIOR\020\001\022\n\n\006SENIOR\020"
    "\002\022\010\n\004CAMP\020\003\022\013\n\007HOTSPOT\020d", 1944);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/Pub.proto", &protobuf_RegisterTypes);
  TPubCommonRecruitInfo::default_instance_ = new TPubCommonRecruitInfo();
  TPubNationWishList::default_instance_ = new TPubNationWishList();
  TPubHotSpotHeroRectNumInfo::default_instance_ = new TPubHotSpotHeroRectNumInfo();
  TPubGetInfoRsp::default_instance_ = new TPubGetInfoRsp();
  TPubHotSpotRecruitInfo::default_instance_ = new TPubHotSpotRecruitInfo();
  TPubHotSpotRecruitReq::default_instance_ = new TPubHotSpotRecruitReq();
  TPubHotSpotRecruitRsp::default_instance_ = new TPubHotSpotRecruitRsp();
  TPubOpenHotSpotLuckyBoxReq::default_instance_ = new TPubOpenHotSpotLuckyBoxReq();
  TPubRecruitReq::default_instance_ = new TPubRecruitReq();
  TPubRecruitRsp::default_instance_ = new TPubRecruitRsp();
  TPubRecruitReward::default_instance_ = new TPubRecruitReward();
  TPubReceiveScoreRewardReq::default_instance_ = new TPubReceiveScoreRewardReq();
  TPubReceiveScoreRewardRsp::default_instance_ = new TPubReceiveScoreRewardRsp();
  TPubBuyRecruitItemReq::default_instance_ = new TPubBuyRecruitItemReq();
  TPubSetWishListReq::default_instance_ = new TPubSetWishListReq();
  TPubSetWishListStatusReq::default_instance_ = new TPubSetWishListStatusReq();
  TPubReceiveHotSpotRecruitRewardReq::default_instance_ = new TPubReceiveHotSpotRecruitRewardReq();
  TPubCommonRecruitInfo::default_instance_->InitAsDefaultInstance();
  TPubNationWishList::default_instance_->InitAsDefaultInstance();
  TPubHotSpotHeroRectNumInfo::default_instance_->InitAsDefaultInstance();
  TPubGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TPubHotSpotRecruitInfo::default_instance_->InitAsDefaultInstance();
  TPubHotSpotRecruitReq::default_instance_->InitAsDefaultInstance();
  TPubHotSpotRecruitRsp::default_instance_->InitAsDefaultInstance();
  TPubOpenHotSpotLuckyBoxReq::default_instance_->InitAsDefaultInstance();
  TPubRecruitReq::default_instance_->InitAsDefaultInstance();
  TPubRecruitRsp::default_instance_->InitAsDefaultInstance();
  TPubRecruitReward::default_instance_->InitAsDefaultInstance();
  TPubReceiveScoreRewardReq::default_instance_->InitAsDefaultInstance();
  TPubReceiveScoreRewardRsp::default_instance_->InitAsDefaultInstance();
  TPubBuyRecruitItemReq::default_instance_->InitAsDefaultInstance();
  TPubSetWishListReq::default_instance_->InitAsDefaultInstance();
  TPubSetWishListStatusReq::default_instance_->InitAsDefaultInstance();
  TPubReceiveHotSpotRecruitRewardReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fPub_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fPub_2eproto {
  StaticDescriptorInitializer_net_2fPub_2eproto() {
    protobuf_AddDesc_net_2fPub_2eproto();
  }
} static_descriptor_initializer_net_2fPub_2eproto_;
const ::google::protobuf::EnumDescriptor* ERecruitType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ERecruitType_descriptor_;
}
bool ERecruitType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 100:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TPubCommonRecruitInfo::kRecruitTypeFieldNumber;
const int TPubCommonRecruitInfo::kUserFreeNumFieldNumber;
const int TPubCommonRecruitInfo::kFreeTimeFieldNumber;
const int TPubCommonRecruitInfo::kRecruitNumFieldNumber;
const int TPubCommonRecruitInfo::kUserGoldNumFieldNumber;
const int TPubCommonRecruitInfo::kRecruitScoreFieldNumber;
const int TPubCommonRecruitInfo::kReceiveArrayFieldNumber;
const int TPubCommonRecruitInfo::kCampIdFieldNumber;
const int TPubCommonRecruitInfo::kBuyRecItemNumFieldNumber;
#endif  // !_MSC_VER

TPubCommonRecruitInfo::TPubCommonRecruitInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubCommonRecruitInfo)
}

void TPubCommonRecruitInfo::InitAsDefaultInstance() {
}

TPubCommonRecruitInfo::TPubCommonRecruitInfo(const TPubCommonRecruitInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubCommonRecruitInfo)
}

void TPubCommonRecruitInfo::SharedCtor() {
  _cached_size_ = 0;
  recruittype_ = 1;
  userfreenum_ = 0u;
  freetime_ = GOOGLE_ULONGLONG(0);
  recruitnum_ = 0u;
  usergoldnum_ = 0u;
  recruitscore_ = 0u;
  campid_ = 0u;
  buyrecitemnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubCommonRecruitInfo::~TPubCommonRecruitInfo() {
  // @@protoc_insertion_point(destructor:pb.TPubCommonRecruitInfo)
  SharedDtor();
}

void TPubCommonRecruitInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubCommonRecruitInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubCommonRecruitInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubCommonRecruitInfo_descriptor_;
}

const TPubCommonRecruitInfo& TPubCommonRecruitInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubCommonRecruitInfo* TPubCommonRecruitInfo::default_instance_ = NULL;

TPubCommonRecruitInfo* TPubCommonRecruitInfo::New() const {
  return new TPubCommonRecruitInfo;
}

void TPubCommonRecruitInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPubCommonRecruitInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 191) {
    ZR_(userfreenum_, usergoldnum_);
    ZR_(recruitscore_, campid_);
    recruittype_ = 1;
  }
  buyrecitemnum_ = 0u;

#undef OFFSET_OF_FIELD_
#undef ZR_

  receivearray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubCommonRecruitInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubCommonRecruitInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.ERecruitType RecruitType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ERecruitType_IsValid(value)) {
            set_recruittype(static_cast< ::pb::ERecruitType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_UserFreeNum;
        break;
      }

      // optional uint32 UserFreeNum = 2;
      case 2: {
        if (tag == 16) {
         parse_UserFreeNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userfreenum_)));
          set_has_userfreenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_FreeTime;
        break;
      }

      // optional uint64 FreeTime = 3;
      case 3: {
        if (tag == 24) {
         parse_FreeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &freetime_)));
          set_has_freetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_RecruitNum;
        break;
      }

      // optional uint32 RecruitNum = 4;
      case 4: {
        if (tag == 32) {
         parse_RecruitNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recruitnum_)));
          set_has_recruitnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_UserGoldNum;
        break;
      }

      // optional uint32 UserGoldNum = 5;
      case 5: {
        if (tag == 40) {
         parse_UserGoldNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usergoldnum_)));
          set_has_usergoldnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_RecruitScore;
        break;
      }

      // optional uint32 RecruitScore = 6;
      case 6: {
        if (tag == 48) {
         parse_RecruitScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recruitscore_)));
          set_has_recruitscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_ReceiveArray;
        break;
      }

      // repeated uint32 ReceiveArray = 7;
      case 7: {
        if (tag == 56) {
         parse_ReceiveArray:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56, input, this->mutable_receivearray())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_receivearray())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_ReceiveArray;
        if (input->ExpectTag(64)) goto parse_CampId;
        break;
      }

      // optional uint32 CampId = 8;
      case 8: {
        if (tag == 64) {
         parse_CampId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
          set_has_campid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_BuyRecItemNum;
        break;
      }

      // optional uint32 BuyRecItemNum = 9;
      case 9: {
        if (tag == 72) {
         parse_BuyRecItemNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buyrecitemnum_)));
          set_has_buyrecitemnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubCommonRecruitInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubCommonRecruitInfo)
  return false;
#undef DO_
}

void TPubCommonRecruitInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubCommonRecruitInfo)
  // optional .pb.ERecruitType RecruitType = 1;
  if (has_recruittype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->recruittype(), output);
  }

  // optional uint32 UserFreeNum = 2;
  if (has_userfreenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userfreenum(), output);
  }

  // optional uint64 FreeTime = 3;
  if (has_freetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->freetime(), output);
  }

  // optional uint32 RecruitNum = 4;
  if (has_recruitnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->recruitnum(), output);
  }

  // optional uint32 UserGoldNum = 5;
  if (has_usergoldnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->usergoldnum(), output);
  }

  // optional uint32 RecruitScore = 6;
  if (has_recruitscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->recruitscore(), output);
  }

  // repeated uint32 ReceiveArray = 7;
  for (int i = 0; i < this->receivearray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->receivearray(i), output);
  }

  // optional uint32 CampId = 8;
  if (has_campid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->campid(), output);
  }

  // optional uint32 BuyRecItemNum = 9;
  if (has_buyrecitemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->buyrecitemnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubCommonRecruitInfo)
}

::google::protobuf::uint8* TPubCommonRecruitInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubCommonRecruitInfo)
  // optional .pb.ERecruitType RecruitType = 1;
  if (has_recruittype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->recruittype(), target);
  }

  // optional uint32 UserFreeNum = 2;
  if (has_userfreenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userfreenum(), target);
  }

  // optional uint64 FreeTime = 3;
  if (has_freetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->freetime(), target);
  }

  // optional uint32 RecruitNum = 4;
  if (has_recruitnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->recruitnum(), target);
  }

  // optional uint32 UserGoldNum = 5;
  if (has_usergoldnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->usergoldnum(), target);
  }

  // optional uint32 RecruitScore = 6;
  if (has_recruitscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->recruitscore(), target);
  }

  // repeated uint32 ReceiveArray = 7;
  for (int i = 0; i < this->receivearray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(7, this->receivearray(i), target);
  }

  // optional uint32 CampId = 8;
  if (has_campid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->campid(), target);
  }

  // optional uint32 BuyRecItemNum = 9;
  if (has_buyrecitemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->buyrecitemnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubCommonRecruitInfo)
  return target;
}

int TPubCommonRecruitInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.ERecruitType RecruitType = 1;
    if (has_recruittype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->recruittype());
    }

    // optional uint32 UserFreeNum = 2;
    if (has_userfreenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->userfreenum());
    }

    // optional uint64 FreeTime = 3;
    if (has_freetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->freetime());
    }

    // optional uint32 RecruitNum = 4;
    if (has_recruitnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recruitnum());
    }

    // optional uint32 UserGoldNum = 5;
    if (has_usergoldnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->usergoldnum());
    }

    // optional uint32 RecruitScore = 6;
    if (has_recruitscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recruitscore());
    }

    // optional uint32 CampId = 8;
    if (has_campid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->campid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 BuyRecItemNum = 9;
    if (has_buyrecitemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buyrecitemnum());
    }

  }
  // repeated uint32 ReceiveArray = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->receivearray_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->receivearray(i));
    }
    total_size += 1 * this->receivearray_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubCommonRecruitInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubCommonRecruitInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubCommonRecruitInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubCommonRecruitInfo::MergeFrom(const TPubCommonRecruitInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  receivearray_.MergeFrom(from.receivearray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recruittype()) {
      set_recruittype(from.recruittype());
    }
    if (from.has_userfreenum()) {
      set_userfreenum(from.userfreenum());
    }
    if (from.has_freetime()) {
      set_freetime(from.freetime());
    }
    if (from.has_recruitnum()) {
      set_recruitnum(from.recruitnum());
    }
    if (from.has_usergoldnum()) {
      set_usergoldnum(from.usergoldnum());
    }
    if (from.has_recruitscore()) {
      set_recruitscore(from.recruitscore());
    }
    if (from.has_campid()) {
      set_campid(from.campid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_buyrecitemnum()) {
      set_buyrecitemnum(from.buyrecitemnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubCommonRecruitInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubCommonRecruitInfo::CopyFrom(const TPubCommonRecruitInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubCommonRecruitInfo::IsInitialized() const {

  return true;
}

void TPubCommonRecruitInfo::Swap(TPubCommonRecruitInfo* other) {
  if (other != this) {
    std::swap(recruittype_, other->recruittype_);
    std::swap(userfreenum_, other->userfreenum_);
    std::swap(freetime_, other->freetime_);
    std::swap(recruitnum_, other->recruitnum_);
    std::swap(usergoldnum_, other->usergoldnum_);
    std::swap(recruitscore_, other->recruitscore_);
    receivearray_.Swap(&other->receivearray_);
    std::swap(campid_, other->campid_);
    std::swap(buyrecitemnum_, other->buyrecitemnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubCommonRecruitInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubCommonRecruitInfo_descriptor_;
  metadata.reflection = TPubCommonRecruitInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubNationWishList::kCampIdFieldNumber;
const int TPubNationWishList::kHeroTidFieldNumber;
#endif  // !_MSC_VER

TPubNationWishList::TPubNationWishList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubNationWishList)
}

void TPubNationWishList::InitAsDefaultInstance() {
}

TPubNationWishList::TPubNationWishList(const TPubNationWishList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubNationWishList)
}

void TPubNationWishList::SharedCtor() {
  _cached_size_ = 0;
  campid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubNationWishList::~TPubNationWishList() {
  // @@protoc_insertion_point(destructor:pb.TPubNationWishList)
  SharedDtor();
}

void TPubNationWishList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubNationWishList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubNationWishList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubNationWishList_descriptor_;
}

const TPubNationWishList& TPubNationWishList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubNationWishList* TPubNationWishList::default_instance_ = NULL;

TPubNationWishList* TPubNationWishList::New() const {
  return new TPubNationWishList;
}

void TPubNationWishList::Clear() {
  campid_ = 0u;
  herotid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubNationWishList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubNationWishList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CampId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
          set_has_campid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_HeroTid;
        break;
      }

      // repeated uint32 HeroTid = 2;
      case 2: {
        if (tag == 16) {
         parse_HeroTid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_herotid())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_herotid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_HeroTid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubNationWishList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubNationWishList)
  return false;
#undef DO_
}

void TPubNationWishList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubNationWishList)
  // optional uint32 CampId = 1;
  if (has_campid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->campid(), output);
  }

  // repeated uint32 HeroTid = 2;
  for (int i = 0; i < this->herotid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->herotid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubNationWishList)
}

::google::protobuf::uint8* TPubNationWishList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubNationWishList)
  // optional uint32 CampId = 1;
  if (has_campid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->campid(), target);
  }

  // repeated uint32 HeroTid = 2;
  for (int i = 0; i < this->herotid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->herotid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubNationWishList)
  return target;
}

int TPubNationWishList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 CampId = 1;
    if (has_campid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->campid());
    }

  }
  // repeated uint32 HeroTid = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->herotid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->herotid(i));
    }
    total_size += 1 * this->herotid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubNationWishList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubNationWishList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubNationWishList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubNationWishList::MergeFrom(const TPubNationWishList& from) {
  GOOGLE_CHECK_NE(&from, this);
  herotid_.MergeFrom(from.herotid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_campid()) {
      set_campid(from.campid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubNationWishList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubNationWishList::CopyFrom(const TPubNationWishList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubNationWishList::IsInitialized() const {

  return true;
}

void TPubNationWishList::Swap(TPubNationWishList* other) {
  if (other != this) {
    std::swap(campid_, other->campid_);
    herotid_.Swap(&other->herotid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubNationWishList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubNationWishList_descriptor_;
  metadata.reflection = TPubNationWishList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubHotSpotHeroRectNumInfo::kHotSpotHeroIdFieldNumber;
const int TPubHotSpotHeroRectNumInfo::kRecruitNumFieldNumber;
const int TPubHotSpotHeroRectNumInfo::kRewardIndexArrFieldNumber;
#endif  // !_MSC_VER

TPubHotSpotHeroRectNumInfo::TPubHotSpotHeroRectNumInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubHotSpotHeroRectNumInfo)
}

void TPubHotSpotHeroRectNumInfo::InitAsDefaultInstance() {
}

TPubHotSpotHeroRectNumInfo::TPubHotSpotHeroRectNumInfo(const TPubHotSpotHeroRectNumInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubHotSpotHeroRectNumInfo)
}

void TPubHotSpotHeroRectNumInfo::SharedCtor() {
  _cached_size_ = 0;
  hotspotheroid_ = 0u;
  recruitnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubHotSpotHeroRectNumInfo::~TPubHotSpotHeroRectNumInfo() {
  // @@protoc_insertion_point(destructor:pb.TPubHotSpotHeroRectNumInfo)
  SharedDtor();
}

void TPubHotSpotHeroRectNumInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubHotSpotHeroRectNumInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubHotSpotHeroRectNumInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubHotSpotHeroRectNumInfo_descriptor_;
}

const TPubHotSpotHeroRectNumInfo& TPubHotSpotHeroRectNumInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubHotSpotHeroRectNumInfo* TPubHotSpotHeroRectNumInfo::default_instance_ = NULL;

TPubHotSpotHeroRectNumInfo* TPubHotSpotHeroRectNumInfo::New() const {
  return new TPubHotSpotHeroRectNumInfo;
}

void TPubHotSpotHeroRectNumInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPubHotSpotHeroRectNumInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hotspotheroid_, recruitnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  rewardindexarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubHotSpotHeroRectNumInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubHotSpotHeroRectNumInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 HotSpotHeroId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hotspotheroid_)));
          set_has_hotspotheroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RecruitNum;
        break;
      }

      // optional uint32 RecruitNum = 2;
      case 2: {
        if (tag == 16) {
         parse_RecruitNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recruitnum_)));
          set_has_recruitnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RewardIndexArr;
        break;
      }

      // repeated uint32 RewardIndexArr = 3;
      case 3: {
        if (tag == 24) {
         parse_RewardIndexArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_rewardindexarr())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_rewardindexarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RewardIndexArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubHotSpotHeroRectNumInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubHotSpotHeroRectNumInfo)
  return false;
#undef DO_
}

void TPubHotSpotHeroRectNumInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubHotSpotHeroRectNumInfo)
  // optional uint32 HotSpotHeroId = 1;
  if (has_hotspotheroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hotspotheroid(), output);
  }

  // optional uint32 RecruitNum = 2;
  if (has_recruitnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recruitnum(), output);
  }

  // repeated uint32 RewardIndexArr = 3;
  for (int i = 0; i < this->rewardindexarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->rewardindexarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubHotSpotHeroRectNumInfo)
}

::google::protobuf::uint8* TPubHotSpotHeroRectNumInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubHotSpotHeroRectNumInfo)
  // optional uint32 HotSpotHeroId = 1;
  if (has_hotspotheroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hotspotheroid(), target);
  }

  // optional uint32 RecruitNum = 2;
  if (has_recruitnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recruitnum(), target);
  }

  // repeated uint32 RewardIndexArr = 3;
  for (int i = 0; i < this->rewardindexarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->rewardindexarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubHotSpotHeroRectNumInfo)
  return target;
}

int TPubHotSpotHeroRectNumInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 HotSpotHeroId = 1;
    if (has_hotspotheroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hotspotheroid());
    }

    // optional uint32 RecruitNum = 2;
    if (has_recruitnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recruitnum());
    }

  }
  // repeated uint32 RewardIndexArr = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->rewardindexarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->rewardindexarr(i));
    }
    total_size += 1 * this->rewardindexarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubHotSpotHeroRectNumInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubHotSpotHeroRectNumInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubHotSpotHeroRectNumInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubHotSpotHeroRectNumInfo::MergeFrom(const TPubHotSpotHeroRectNumInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardindexarr_.MergeFrom(from.rewardindexarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hotspotheroid()) {
      set_hotspotheroid(from.hotspotheroid());
    }
    if (from.has_recruitnum()) {
      set_recruitnum(from.recruitnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubHotSpotHeroRectNumInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubHotSpotHeroRectNumInfo::CopyFrom(const TPubHotSpotHeroRectNumInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubHotSpotHeroRectNumInfo::IsInitialized() const {

  return true;
}

void TPubHotSpotHeroRectNumInfo::Swap(TPubHotSpotHeroRectNumInfo* other) {
  if (other != this) {
    std::swap(hotspotheroid_, other->hotspotheroid_);
    std::swap(recruitnum_, other->recruitnum_);
    rewardindexarr_.Swap(&other->rewardindexarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubHotSpotHeroRectNumInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubHotSpotHeroRectNumInfo_descriptor_;
  metadata.reflection = TPubHotSpotHeroRectNumInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubGetInfoRsp::kRecruitInfoArrayFieldNumber;
const int TPubGetInfoRsp::kSeniorHalfGoldNumFieldNumber;
const int TPubGetInfoRsp::kHotSpotRecruitInfoFieldNumber;
const int TPubGetInfoRsp::kNoviceRewardTimeFieldNumber;
const int TPubGetInfoRsp::kWishListArrFieldNumber;
const int TPubGetInfoRsp::kWishListIsOpenFieldNumber;
const int TPubGetInfoRsp::kHotSpotHeroRectNumArrFieldNumber;
const int TPubGetInfoRsp::kCanBuyHotSpotRecNumFieldNumber;
#endif  // !_MSC_VER

TPubGetInfoRsp::TPubGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubGetInfoRsp)
}

void TPubGetInfoRsp::InitAsDefaultInstance() {
  hotspotrecruitinfo_ = const_cast< ::pb::TPubHotSpotRecruitInfo*>(&::pb::TPubHotSpotRecruitInfo::default_instance());
}

TPubGetInfoRsp::TPubGetInfoRsp(const TPubGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubGetInfoRsp)
}

void TPubGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  seniorhalfgoldnum_ = 0u;
  hotspotrecruitinfo_ = NULL;
  novicerewardtime_ = GOOGLE_ULONGLONG(0);
  wishlistisopen_ = false;
  canbuyhotspotrecnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubGetInfoRsp::~TPubGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TPubGetInfoRsp)
  SharedDtor();
}

void TPubGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
    delete hotspotrecruitinfo_;
  }
}

void TPubGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubGetInfoRsp_descriptor_;
}

const TPubGetInfoRsp& TPubGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubGetInfoRsp* TPubGetInfoRsp::default_instance_ = NULL;

TPubGetInfoRsp* TPubGetInfoRsp::New() const {
  return new TPubGetInfoRsp;
}

void TPubGetInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPubGetInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 174) {
    ZR_(novicerewardtime_, wishlistisopen_);
    if (has_hotspotrecruitinfo()) {
      if (hotspotrecruitinfo_ != NULL) hotspotrecruitinfo_->::pb::TPubHotSpotRecruitInfo::Clear();
    }
    canbuyhotspotrecnum_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  recruitinfoarray_.Clear();
  wishlistarr_.Clear();
  hotspotherorectnumarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TPubCommonRecruitInfo RecruitInfoArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RecruitInfoArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_recruitinfoarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RecruitInfoArray;
        if (input->ExpectTag(16)) goto parse_SeniorHalfGoldNum;
        break;
      }

      // optional uint32 SeniorHalfGoldNum = 2;
      case 2: {
        if (tag == 16) {
         parse_SeniorHalfGoldNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seniorhalfgoldnum_)));
          set_has_seniorhalfgoldnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_HotSpotRecruitInfo;
        break;
      }

      // optional .pb.TPubHotSpotRecruitInfo HotSpotRecruitInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_HotSpotRecruitInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hotspotrecruitinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_NoviceRewardTime;
        break;
      }

      // optional uint64 NoviceRewardTime = 4;
      case 4: {
        if (tag == 32) {
         parse_NoviceRewardTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &novicerewardtime_)));
          set_has_novicerewardtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_WishListArr;
        break;
      }

      // repeated .pb.TPubNationWishList WishListArr = 5;
      case 5: {
        if (tag == 42) {
         parse_WishListArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wishlistarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_WishListArr;
        if (input->ExpectTag(48)) goto parse_WishListIsOpen;
        break;
      }

      // optional bool WishListIsOpen = 6;
      case 6: {
        if (tag == 48) {
         parse_WishListIsOpen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wishlistisopen_)));
          set_has_wishlistisopen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_HotSpotHeroRectNumArr;
        break;
      }

      // repeated .pb.TPubHotSpotHeroRectNumInfo HotSpotHeroRectNumArr = 7;
      case 7: {
        if (tag == 58) {
         parse_HotSpotHeroRectNumArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hotspotherorectnumarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_HotSpotHeroRectNumArr;
        if (input->ExpectTag(64)) goto parse_CanBuyHotSpotRecNum;
        break;
      }

      // optional uint32 CanBuyHotSpotRecNum = 8;
      case 8: {
        if (tag == 64) {
         parse_CanBuyHotSpotRecNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &canbuyhotspotrecnum_)));
          set_has_canbuyhotspotrecnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubGetInfoRsp)
  return false;
#undef DO_
}

void TPubGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubGetInfoRsp)
  // repeated .pb.TPubCommonRecruitInfo RecruitInfoArray = 1;
  for (int i = 0; i < this->recruitinfoarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->recruitinfoarray(i), output);
  }

  // optional uint32 SeniorHalfGoldNum = 2;
  if (has_seniorhalfgoldnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seniorhalfgoldnum(), output);
  }

  // optional .pb.TPubHotSpotRecruitInfo HotSpotRecruitInfo = 3;
  if (has_hotspotrecruitinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->hotspotrecruitinfo(), output);
  }

  // optional uint64 NoviceRewardTime = 4;
  if (has_novicerewardtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->novicerewardtime(), output);
  }

  // repeated .pb.TPubNationWishList WishListArr = 5;
  for (int i = 0; i < this->wishlistarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->wishlistarr(i), output);
  }

  // optional bool WishListIsOpen = 6;
  if (has_wishlistisopen()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->wishlistisopen(), output);
  }

  // repeated .pb.TPubHotSpotHeroRectNumInfo HotSpotHeroRectNumArr = 7;
  for (int i = 0; i < this->hotspotherorectnumarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->hotspotherorectnumarr(i), output);
  }

  // optional uint32 CanBuyHotSpotRecNum = 8;
  if (has_canbuyhotspotrecnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->canbuyhotspotrecnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubGetInfoRsp)
}

::google::protobuf::uint8* TPubGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubGetInfoRsp)
  // repeated .pb.TPubCommonRecruitInfo RecruitInfoArray = 1;
  for (int i = 0; i < this->recruitinfoarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->recruitinfoarray(i), target);
  }

  // optional uint32 SeniorHalfGoldNum = 2;
  if (has_seniorhalfgoldnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seniorhalfgoldnum(), target);
  }

  // optional .pb.TPubHotSpotRecruitInfo HotSpotRecruitInfo = 3;
  if (has_hotspotrecruitinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->hotspotrecruitinfo(), target);
  }

  // optional uint64 NoviceRewardTime = 4;
  if (has_novicerewardtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->novicerewardtime(), target);
  }

  // repeated .pb.TPubNationWishList WishListArr = 5;
  for (int i = 0; i < this->wishlistarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->wishlistarr(i), target);
  }

  // optional bool WishListIsOpen = 6;
  if (has_wishlistisopen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->wishlistisopen(), target);
  }

  // repeated .pb.TPubHotSpotHeroRectNumInfo HotSpotHeroRectNumArr = 7;
  for (int i = 0; i < this->hotspotherorectnumarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->hotspotherorectnumarr(i), target);
  }

  // optional uint32 CanBuyHotSpotRecNum = 8;
  if (has_canbuyhotspotrecnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->canbuyhotspotrecnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubGetInfoRsp)
  return target;
}

int TPubGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 SeniorHalfGoldNum = 2;
    if (has_seniorhalfgoldnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seniorhalfgoldnum());
    }

    // optional .pb.TPubHotSpotRecruitInfo HotSpotRecruitInfo = 3;
    if (has_hotspotrecruitinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hotspotrecruitinfo());
    }

    // optional uint64 NoviceRewardTime = 4;
    if (has_novicerewardtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->novicerewardtime());
    }

    // optional bool WishListIsOpen = 6;
    if (has_wishlistisopen()) {
      total_size += 1 + 1;
    }

    // optional uint32 CanBuyHotSpotRecNum = 8;
    if (has_canbuyhotspotrecnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->canbuyhotspotrecnum());
    }

  }
  // repeated .pb.TPubCommonRecruitInfo RecruitInfoArray = 1;
  total_size += 1 * this->recruitinfoarray_size();
  for (int i = 0; i < this->recruitinfoarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->recruitinfoarray(i));
  }

  // repeated .pb.TPubNationWishList WishListArr = 5;
  total_size += 1 * this->wishlistarr_size();
  for (int i = 0; i < this->wishlistarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->wishlistarr(i));
  }

  // repeated .pb.TPubHotSpotHeroRectNumInfo HotSpotHeroRectNumArr = 7;
  total_size += 1 * this->hotspotherorectnumarr_size();
  for (int i = 0; i < this->hotspotherorectnumarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hotspotherorectnumarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubGetInfoRsp::MergeFrom(const TPubGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  recruitinfoarray_.MergeFrom(from.recruitinfoarray_);
  wishlistarr_.MergeFrom(from.wishlistarr_);
  hotspotherorectnumarr_.MergeFrom(from.hotspotherorectnumarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_seniorhalfgoldnum()) {
      set_seniorhalfgoldnum(from.seniorhalfgoldnum());
    }
    if (from.has_hotspotrecruitinfo()) {
      mutable_hotspotrecruitinfo()->::pb::TPubHotSpotRecruitInfo::MergeFrom(from.hotspotrecruitinfo());
    }
    if (from.has_novicerewardtime()) {
      set_novicerewardtime(from.novicerewardtime());
    }
    if (from.has_wishlistisopen()) {
      set_wishlistisopen(from.wishlistisopen());
    }
    if (from.has_canbuyhotspotrecnum()) {
      set_canbuyhotspotrecnum(from.canbuyhotspotrecnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubGetInfoRsp::CopyFrom(const TPubGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubGetInfoRsp::IsInitialized() const {

  return true;
}

void TPubGetInfoRsp::Swap(TPubGetInfoRsp* other) {
  if (other != this) {
    recruitinfoarray_.Swap(&other->recruitinfoarray_);
    std::swap(seniorhalfgoldnum_, other->seniorhalfgoldnum_);
    std::swap(hotspotrecruitinfo_, other->hotspotrecruitinfo_);
    std::swap(novicerewardtime_, other->novicerewardtime_);
    wishlistarr_.Swap(&other->wishlistarr_);
    std::swap(wishlistisopen_, other->wishlistisopen_);
    hotspotherorectnumarr_.Swap(&other->hotspotherorectnumarr_);
    std::swap(canbuyhotspotrecnum_, other->canbuyhotspotrecnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubGetInfoRsp_descriptor_;
  metadata.reflection = TPubGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubHotSpotRecruitInfo::kReplaceIdFieldNumber;
const int TPubHotSpotRecruitInfo::kIsOnceFieldNumber;
const int TPubHotSpotRecruitInfo::kRoundIndexFieldNumber;
const int TPubHotSpotRecruitInfo::kRoundStartTimeFieldNumber;
#endif  // !_MSC_VER

TPubHotSpotRecruitInfo::TPubHotSpotRecruitInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubHotSpotRecruitInfo)
}

void TPubHotSpotRecruitInfo::InitAsDefaultInstance() {
}

TPubHotSpotRecruitInfo::TPubHotSpotRecruitInfo(const TPubHotSpotRecruitInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubHotSpotRecruitInfo)
}

void TPubHotSpotRecruitInfo::SharedCtor() {
  _cached_size_ = 0;
  replaceid_ = 0u;
  isonce_ = false;
  roundindex_ = 0u;
  roundstarttime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubHotSpotRecruitInfo::~TPubHotSpotRecruitInfo() {
  // @@protoc_insertion_point(destructor:pb.TPubHotSpotRecruitInfo)
  SharedDtor();
}

void TPubHotSpotRecruitInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubHotSpotRecruitInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubHotSpotRecruitInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubHotSpotRecruitInfo_descriptor_;
}

const TPubHotSpotRecruitInfo& TPubHotSpotRecruitInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubHotSpotRecruitInfo* TPubHotSpotRecruitInfo::default_instance_ = NULL;

TPubHotSpotRecruitInfo* TPubHotSpotRecruitInfo::New() const {
  return new TPubHotSpotRecruitInfo;
}

void TPubHotSpotRecruitInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPubHotSpotRecruitInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(replaceid_, roundindex_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubHotSpotRecruitInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubHotSpotRecruitInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ReplaceId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &replaceid_)));
          set_has_replaceid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_IsOnce;
        break;
      }

      // optional bool IsOnce = 2;
      case 2: {
        if (tag == 16) {
         parse_IsOnce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isonce_)));
          set_has_isonce();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RoundIndex;
        break;
      }

      // optional uint32 RoundIndex = 3;
      case 3: {
        if (tag == 24) {
         parse_RoundIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roundindex_)));
          set_has_roundindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_RoundStartTime;
        break;
      }

      // optional uint64 RoundStartTime = 4;
      case 4: {
        if (tag == 32) {
         parse_RoundStartTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roundstarttime_)));
          set_has_roundstarttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubHotSpotRecruitInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubHotSpotRecruitInfo)
  return false;
#undef DO_
}

void TPubHotSpotRecruitInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubHotSpotRecruitInfo)
  // optional uint32 ReplaceId = 1;
  if (has_replaceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->replaceid(), output);
  }

  // optional bool IsOnce = 2;
  if (has_isonce()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isonce(), output);
  }

  // optional uint32 RoundIndex = 3;
  if (has_roundindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->roundindex(), output);
  }

  // optional uint64 RoundStartTime = 4;
  if (has_roundstarttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->roundstarttime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubHotSpotRecruitInfo)
}

::google::protobuf::uint8* TPubHotSpotRecruitInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubHotSpotRecruitInfo)
  // optional uint32 ReplaceId = 1;
  if (has_replaceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->replaceid(), target);
  }

  // optional bool IsOnce = 2;
  if (has_isonce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isonce(), target);
  }

  // optional uint32 RoundIndex = 3;
  if (has_roundindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->roundindex(), target);
  }

  // optional uint64 RoundStartTime = 4;
  if (has_roundstarttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->roundstarttime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubHotSpotRecruitInfo)
  return target;
}

int TPubHotSpotRecruitInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ReplaceId = 1;
    if (has_replaceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->replaceid());
    }

    // optional bool IsOnce = 2;
    if (has_isonce()) {
      total_size += 1 + 1;
    }

    // optional uint32 RoundIndex = 3;
    if (has_roundindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roundindex());
    }

    // optional uint64 RoundStartTime = 4;
    if (has_roundstarttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roundstarttime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubHotSpotRecruitInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubHotSpotRecruitInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubHotSpotRecruitInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubHotSpotRecruitInfo::MergeFrom(const TPubHotSpotRecruitInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_replaceid()) {
      set_replaceid(from.replaceid());
    }
    if (from.has_isonce()) {
      set_isonce(from.isonce());
    }
    if (from.has_roundindex()) {
      set_roundindex(from.roundindex());
    }
    if (from.has_roundstarttime()) {
      set_roundstarttime(from.roundstarttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubHotSpotRecruitInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubHotSpotRecruitInfo::CopyFrom(const TPubHotSpotRecruitInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubHotSpotRecruitInfo::IsInitialized() const {

  return true;
}

void TPubHotSpotRecruitInfo::Swap(TPubHotSpotRecruitInfo* other) {
  if (other != this) {
    std::swap(replaceid_, other->replaceid_);
    std::swap(isonce_, other->isonce_);
    std::swap(roundindex_, other->roundindex_);
    std::swap(roundstarttime_, other->roundstarttime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubHotSpotRecruitInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubHotSpotRecruitInfo_descriptor_;
  metadata.reflection = TPubHotSpotRecruitInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubHotSpotRecruitReq::kHotSpotHeroIdFieldNumber;
#endif  // !_MSC_VER

TPubHotSpotRecruitReq::TPubHotSpotRecruitReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubHotSpotRecruitReq)
}

void TPubHotSpotRecruitReq::InitAsDefaultInstance() {
}

TPubHotSpotRecruitReq::TPubHotSpotRecruitReq(const TPubHotSpotRecruitReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubHotSpotRecruitReq)
}

void TPubHotSpotRecruitReq::SharedCtor() {
  _cached_size_ = 0;
  hotspotheroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubHotSpotRecruitReq::~TPubHotSpotRecruitReq() {
  // @@protoc_insertion_point(destructor:pb.TPubHotSpotRecruitReq)
  SharedDtor();
}

void TPubHotSpotRecruitReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubHotSpotRecruitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubHotSpotRecruitReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubHotSpotRecruitReq_descriptor_;
}

const TPubHotSpotRecruitReq& TPubHotSpotRecruitReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubHotSpotRecruitReq* TPubHotSpotRecruitReq::default_instance_ = NULL;

TPubHotSpotRecruitReq* TPubHotSpotRecruitReq::New() const {
  return new TPubHotSpotRecruitReq;
}

void TPubHotSpotRecruitReq::Clear() {
  hotspotheroid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubHotSpotRecruitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubHotSpotRecruitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 HotSpotHeroId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hotspotheroid_)));
          set_has_hotspotheroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubHotSpotRecruitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubHotSpotRecruitReq)
  return false;
#undef DO_
}

void TPubHotSpotRecruitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubHotSpotRecruitReq)
  // optional uint32 HotSpotHeroId = 1;
  if (has_hotspotheroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hotspotheroid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubHotSpotRecruitReq)
}

::google::protobuf::uint8* TPubHotSpotRecruitReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubHotSpotRecruitReq)
  // optional uint32 HotSpotHeroId = 1;
  if (has_hotspotheroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hotspotheroid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubHotSpotRecruitReq)
  return target;
}

int TPubHotSpotRecruitReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 HotSpotHeroId = 1;
    if (has_hotspotheroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hotspotheroid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubHotSpotRecruitReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubHotSpotRecruitReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubHotSpotRecruitReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubHotSpotRecruitReq::MergeFrom(const TPubHotSpotRecruitReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hotspotheroid()) {
      set_hotspotheroid(from.hotspotheroid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubHotSpotRecruitReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubHotSpotRecruitReq::CopyFrom(const TPubHotSpotRecruitReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubHotSpotRecruitReq::IsInitialized() const {

  return true;
}

void TPubHotSpotRecruitReq::Swap(TPubHotSpotRecruitReq* other) {
  if (other != this) {
    std::swap(hotspotheroid_, other->hotspotheroid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubHotSpotRecruitReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubHotSpotRecruitReq_descriptor_;
  metadata.reflection = TPubHotSpotRecruitReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubHotSpotRecruitRsp::kRewardArrFieldNumber;
const int TPubHotSpotRecruitRsp::kArtifactLeftNumFieldNumber;
#endif  // !_MSC_VER

TPubHotSpotRecruitRsp::TPubHotSpotRecruitRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubHotSpotRecruitRsp)
}

void TPubHotSpotRecruitRsp::InitAsDefaultInstance() {
}

TPubHotSpotRecruitRsp::TPubHotSpotRecruitRsp(const TPubHotSpotRecruitRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubHotSpotRecruitRsp)
}

void TPubHotSpotRecruitRsp::SharedCtor() {
  _cached_size_ = 0;
  artifactleftnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubHotSpotRecruitRsp::~TPubHotSpotRecruitRsp() {
  // @@protoc_insertion_point(destructor:pb.TPubHotSpotRecruitRsp)
  SharedDtor();
}

void TPubHotSpotRecruitRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubHotSpotRecruitRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubHotSpotRecruitRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubHotSpotRecruitRsp_descriptor_;
}

const TPubHotSpotRecruitRsp& TPubHotSpotRecruitRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubHotSpotRecruitRsp* TPubHotSpotRecruitRsp::default_instance_ = NULL;

TPubHotSpotRecruitRsp* TPubHotSpotRecruitRsp::New() const {
  return new TPubHotSpotRecruitRsp;
}

void TPubHotSpotRecruitRsp::Clear() {
  artifactleftnum_ = 0u;
  rewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubHotSpotRecruitRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubHotSpotRecruitRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TPubRecruitReward RewardArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArr;
        if (input->ExpectTag(16)) goto parse_ArtifactLeftNum;
        break;
      }

      // optional uint32 ArtifactLeftNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ArtifactLeftNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &artifactleftnum_)));
          set_has_artifactleftnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubHotSpotRecruitRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubHotSpotRecruitRsp)
  return false;
#undef DO_
}

void TPubHotSpotRecruitRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubHotSpotRecruitRsp)
  // repeated .pb.TPubRecruitReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarr(i), output);
  }

  // optional uint32 ArtifactLeftNum = 2;
  if (has_artifactleftnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->artifactleftnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubHotSpotRecruitRsp)
}

::google::protobuf::uint8* TPubHotSpotRecruitRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubHotSpotRecruitRsp)
  // repeated .pb.TPubRecruitReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarr(i), target);
  }

  // optional uint32 ArtifactLeftNum = 2;
  if (has_artifactleftnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->artifactleftnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubHotSpotRecruitRsp)
  return target;
}

int TPubHotSpotRecruitRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 ArtifactLeftNum = 2;
    if (has_artifactleftnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->artifactleftnum());
    }

  }
  // repeated .pb.TPubRecruitReward RewardArr = 1;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubHotSpotRecruitRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubHotSpotRecruitRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubHotSpotRecruitRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubHotSpotRecruitRsp::MergeFrom(const TPubHotSpotRecruitRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarr_.MergeFrom(from.rewardarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_artifactleftnum()) {
      set_artifactleftnum(from.artifactleftnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubHotSpotRecruitRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubHotSpotRecruitRsp::CopyFrom(const TPubHotSpotRecruitRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubHotSpotRecruitRsp::IsInitialized() const {

  return true;
}

void TPubHotSpotRecruitRsp::Swap(TPubHotSpotRecruitRsp* other) {
  if (other != this) {
    rewardarr_.Swap(&other->rewardarr_);
    std::swap(artifactleftnum_, other->artifactleftnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubHotSpotRecruitRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubHotSpotRecruitRsp_descriptor_;
  metadata.reflection = TPubHotSpotRecruitRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubOpenHotSpotLuckyBoxReq::kHotSpotHeroIdFieldNumber;
const int TPubOpenHotSpotLuckyBoxReq::kBoxIndexFieldNumber;
#endif  // !_MSC_VER

TPubOpenHotSpotLuckyBoxReq::TPubOpenHotSpotLuckyBoxReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubOpenHotSpotLuckyBoxReq)
}

void TPubOpenHotSpotLuckyBoxReq::InitAsDefaultInstance() {
}

TPubOpenHotSpotLuckyBoxReq::TPubOpenHotSpotLuckyBoxReq(const TPubOpenHotSpotLuckyBoxReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubOpenHotSpotLuckyBoxReq)
}

void TPubOpenHotSpotLuckyBoxReq::SharedCtor() {
  _cached_size_ = 0;
  hotspotheroid_ = 0u;
  boxindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubOpenHotSpotLuckyBoxReq::~TPubOpenHotSpotLuckyBoxReq() {
  // @@protoc_insertion_point(destructor:pb.TPubOpenHotSpotLuckyBoxReq)
  SharedDtor();
}

void TPubOpenHotSpotLuckyBoxReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubOpenHotSpotLuckyBoxReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubOpenHotSpotLuckyBoxReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubOpenHotSpotLuckyBoxReq_descriptor_;
}

const TPubOpenHotSpotLuckyBoxReq& TPubOpenHotSpotLuckyBoxReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubOpenHotSpotLuckyBoxReq* TPubOpenHotSpotLuckyBoxReq::default_instance_ = NULL;

TPubOpenHotSpotLuckyBoxReq* TPubOpenHotSpotLuckyBoxReq::New() const {
  return new TPubOpenHotSpotLuckyBoxReq;
}

void TPubOpenHotSpotLuckyBoxReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPubOpenHotSpotLuckyBoxReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hotspotheroid_, boxindex_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubOpenHotSpotLuckyBoxReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubOpenHotSpotLuckyBoxReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 HotSpotHeroId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hotspotheroid_)));
          set_has_hotspotheroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BoxIndex;
        break;
      }

      // optional uint32 BoxIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_BoxIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &boxindex_)));
          set_has_boxindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubOpenHotSpotLuckyBoxReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubOpenHotSpotLuckyBoxReq)
  return false;
#undef DO_
}

void TPubOpenHotSpotLuckyBoxReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubOpenHotSpotLuckyBoxReq)
  // optional uint32 HotSpotHeroId = 1;
  if (has_hotspotheroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hotspotheroid(), output);
  }

  // optional uint32 BoxIndex = 2;
  if (has_boxindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->boxindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubOpenHotSpotLuckyBoxReq)
}

::google::protobuf::uint8* TPubOpenHotSpotLuckyBoxReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubOpenHotSpotLuckyBoxReq)
  // optional uint32 HotSpotHeroId = 1;
  if (has_hotspotheroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hotspotheroid(), target);
  }

  // optional uint32 BoxIndex = 2;
  if (has_boxindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->boxindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubOpenHotSpotLuckyBoxReq)
  return target;
}

int TPubOpenHotSpotLuckyBoxReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 HotSpotHeroId = 1;
    if (has_hotspotheroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hotspotheroid());
    }

    // optional uint32 BoxIndex = 2;
    if (has_boxindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->boxindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubOpenHotSpotLuckyBoxReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubOpenHotSpotLuckyBoxReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubOpenHotSpotLuckyBoxReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubOpenHotSpotLuckyBoxReq::MergeFrom(const TPubOpenHotSpotLuckyBoxReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hotspotheroid()) {
      set_hotspotheroid(from.hotspotheroid());
    }
    if (from.has_boxindex()) {
      set_boxindex(from.boxindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubOpenHotSpotLuckyBoxReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubOpenHotSpotLuckyBoxReq::CopyFrom(const TPubOpenHotSpotLuckyBoxReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubOpenHotSpotLuckyBoxReq::IsInitialized() const {

  return true;
}

void TPubOpenHotSpotLuckyBoxReq::Swap(TPubOpenHotSpotLuckyBoxReq* other) {
  if (other != this) {
    std::swap(hotspotheroid_, other->hotspotheroid_);
    std::swap(boxindex_, other->boxindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubOpenHotSpotLuckyBoxReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubOpenHotSpotLuckyBoxReq_descriptor_;
  metadata.reflection = TPubOpenHotSpotLuckyBoxReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubRecruitReq::kRecruitTypeFieldNumber;
const int TPubRecruitReq::kCampIdFieldNumber;
#endif  // !_MSC_VER

TPubRecruitReq::TPubRecruitReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubRecruitReq)
}

void TPubRecruitReq::InitAsDefaultInstance() {
}

TPubRecruitReq::TPubRecruitReq(const TPubRecruitReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubRecruitReq)
}

void TPubRecruitReq::SharedCtor() {
  _cached_size_ = 0;
  recruittype_ = 1;
  campid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubRecruitReq::~TPubRecruitReq() {
  // @@protoc_insertion_point(destructor:pb.TPubRecruitReq)
  SharedDtor();
}

void TPubRecruitReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubRecruitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubRecruitReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubRecruitReq_descriptor_;
}

const TPubRecruitReq& TPubRecruitReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubRecruitReq* TPubRecruitReq::default_instance_ = NULL;

TPubRecruitReq* TPubRecruitReq::New() const {
  return new TPubRecruitReq;
}

void TPubRecruitReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    recruittype_ = 1;
    campid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubRecruitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubRecruitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.ERecruitType RecruitType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ERecruitType_IsValid(value)) {
            set_recruittype(static_cast< ::pb::ERecruitType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CampId;
        break;
      }

      // optional uint32 CampId = 2;
      case 2: {
        if (tag == 16) {
         parse_CampId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
          set_has_campid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubRecruitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubRecruitReq)
  return false;
#undef DO_
}

void TPubRecruitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubRecruitReq)
  // optional .pb.ERecruitType RecruitType = 1;
  if (has_recruittype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->recruittype(), output);
  }

  // optional uint32 CampId = 2;
  if (has_campid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->campid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubRecruitReq)
}

::google::protobuf::uint8* TPubRecruitReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubRecruitReq)
  // optional .pb.ERecruitType RecruitType = 1;
  if (has_recruittype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->recruittype(), target);
  }

  // optional uint32 CampId = 2;
  if (has_campid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->campid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubRecruitReq)
  return target;
}

int TPubRecruitReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.ERecruitType RecruitType = 1;
    if (has_recruittype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->recruittype());
    }

    // optional uint32 CampId = 2;
    if (has_campid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->campid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubRecruitReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubRecruitReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubRecruitReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubRecruitReq::MergeFrom(const TPubRecruitReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recruittype()) {
      set_recruittype(from.recruittype());
    }
    if (from.has_campid()) {
      set_campid(from.campid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubRecruitReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubRecruitReq::CopyFrom(const TPubRecruitReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubRecruitReq::IsInitialized() const {

  return true;
}

void TPubRecruitReq::Swap(TPubRecruitReq* other) {
  if (other != this) {
    std::swap(recruittype_, other->recruittype_);
    std::swap(campid_, other->campid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubRecruitReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubRecruitReq_descriptor_;
  metadata.reflection = TPubRecruitReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubRecruitRsp::kScoreFieldNumber;
const int TPubRecruitRsp::kBoomNumFieldNumber;
const int TPubRecruitRsp::kRewardArrFieldNumber;
const int TPubRecruitRsp::kUseGoldNumFieldNumber;
const int TPubRecruitRsp::kArtifactLeftNumFieldNumber;
#endif  // !_MSC_VER

TPubRecruitRsp::TPubRecruitRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubRecruitRsp)
}

void TPubRecruitRsp::InitAsDefaultInstance() {
}

TPubRecruitRsp::TPubRecruitRsp(const TPubRecruitRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubRecruitRsp)
}

void TPubRecruitRsp::SharedCtor() {
  _cached_size_ = 0;
  score_ = 0u;
  boomnum_ = 0u;
  usegoldnum_ = 0u;
  artifactleftnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubRecruitRsp::~TPubRecruitRsp() {
  // @@protoc_insertion_point(destructor:pb.TPubRecruitRsp)
  SharedDtor();
}

void TPubRecruitRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubRecruitRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubRecruitRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubRecruitRsp_descriptor_;
}

const TPubRecruitRsp& TPubRecruitRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubRecruitRsp* TPubRecruitRsp::default_instance_ = NULL;

TPubRecruitRsp* TPubRecruitRsp::New() const {
  return new TPubRecruitRsp;
}

void TPubRecruitRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPubRecruitRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(score_, boomnum_);
  ZR_(usegoldnum_, artifactleftnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  rewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubRecruitRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubRecruitRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Score = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BoomNum;
        break;
      }

      // optional uint32 BoomNum = 2;
      case 2: {
        if (tag == 16) {
         parse_BoomNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &boomnum_)));
          set_has_boomnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RewardArr;
        break;
      }

      // repeated .pb.TPubRecruitReward RewardArr = 3;
      case 3: {
        if (tag == 26) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RewardArr;
        if (input->ExpectTag(32)) goto parse_UseGoldNum;
        break;
      }

      // optional uint32 UseGoldNum = 4;
      case 4: {
        if (tag == 32) {
         parse_UseGoldNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usegoldnum_)));
          set_has_usegoldnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ArtifactLeftNum;
        break;
      }

      // optional uint32 ArtifactLeftNum = 5;
      case 5: {
        if (tag == 40) {
         parse_ArtifactLeftNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &artifactleftnum_)));
          set_has_artifactleftnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubRecruitRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubRecruitRsp)
  return false;
#undef DO_
}

void TPubRecruitRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubRecruitRsp)
  // optional uint32 Score = 1;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->score(), output);
  }

  // optional uint32 BoomNum = 2;
  if (has_boomnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->boomnum(), output);
  }

  // repeated .pb.TPubRecruitReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rewardarr(i), output);
  }

  // optional uint32 UseGoldNum = 4;
  if (has_usegoldnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->usegoldnum(), output);
  }

  // optional uint32 ArtifactLeftNum = 5;
  if (has_artifactleftnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->artifactleftnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubRecruitRsp)
}

::google::protobuf::uint8* TPubRecruitRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubRecruitRsp)
  // optional uint32 Score = 1;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->score(), target);
  }

  // optional uint32 BoomNum = 2;
  if (has_boomnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->boomnum(), target);
  }

  // repeated .pb.TPubRecruitReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rewardarr(i), target);
  }

  // optional uint32 UseGoldNum = 4;
  if (has_usegoldnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->usegoldnum(), target);
  }

  // optional uint32 ArtifactLeftNum = 5;
  if (has_artifactleftnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->artifactleftnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubRecruitRsp)
  return target;
}

int TPubRecruitRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Score = 1;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->score());
    }

    // optional uint32 BoomNum = 2;
    if (has_boomnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->boomnum());
    }

    // optional uint32 UseGoldNum = 4;
    if (has_usegoldnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->usegoldnum());
    }

    // optional uint32 ArtifactLeftNum = 5;
    if (has_artifactleftnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->artifactleftnum());
    }

  }
  // repeated .pb.TPubRecruitReward RewardArr = 3;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubRecruitRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubRecruitRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubRecruitRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubRecruitRsp::MergeFrom(const TPubRecruitRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarr_.MergeFrom(from.rewardarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_boomnum()) {
      set_boomnum(from.boomnum());
    }
    if (from.has_usegoldnum()) {
      set_usegoldnum(from.usegoldnum());
    }
    if (from.has_artifactleftnum()) {
      set_artifactleftnum(from.artifactleftnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubRecruitRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubRecruitRsp::CopyFrom(const TPubRecruitRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubRecruitRsp::IsInitialized() const {

  return true;
}

void TPubRecruitRsp::Swap(TPubRecruitRsp* other) {
  if (other != this) {
    std::swap(score_, other->score_);
    std::swap(boomnum_, other->boomnum_);
    rewardarr_.Swap(&other->rewardarr_);
    std::swap(usegoldnum_, other->usegoldnum_);
    std::swap(artifactleftnum_, other->artifactleftnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubRecruitRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubRecruitRsp_descriptor_;
  metadata.reflection = TPubRecruitRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubRecruitReward::kRewardFieldNumber;
const int TPubRecruitReward::kCritRatioFieldNumber;
#endif  // !_MSC_VER

TPubRecruitReward::TPubRecruitReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubRecruitReward)
}

void TPubRecruitReward::InitAsDefaultInstance() {
  reward_ = const_cast< ::pb::TCommonReward*>(&::pb::TCommonReward::default_instance());
}

TPubRecruitReward::TPubRecruitReward(const TPubRecruitReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubRecruitReward)
}

void TPubRecruitReward::SharedCtor() {
  _cached_size_ = 0;
  reward_ = NULL;
  critratio_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubRecruitReward::~TPubRecruitReward() {
  // @@protoc_insertion_point(destructor:pb.TPubRecruitReward)
  SharedDtor();
}

void TPubRecruitReward::SharedDtor() {
  if (this != default_instance_) {
    delete reward_;
  }
}

void TPubRecruitReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubRecruitReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubRecruitReward_descriptor_;
}

const TPubRecruitReward& TPubRecruitReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubRecruitReward* TPubRecruitReward::default_instance_ = NULL;

TPubRecruitReward* TPubRecruitReward::New() const {
  return new TPubRecruitReward;
}

void TPubRecruitReward::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_reward()) {
      if (reward_ != NULL) reward_->::pb::TCommonReward::Clear();
    }
    critratio_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubRecruitReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubRecruitReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TCommonReward Reward = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CritRatio;
        break;
      }

      // optional uint32 CritRatio = 2;
      case 2: {
        if (tag == 16) {
         parse_CritRatio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &critratio_)));
          set_has_critratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubRecruitReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubRecruitReward)
  return false;
#undef DO_
}

void TPubRecruitReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubRecruitReward)
  // optional .pb.TCommonReward Reward = 1;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->reward(), output);
  }

  // optional uint32 CritRatio = 2;
  if (has_critratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->critratio(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubRecruitReward)
}

::google::protobuf::uint8* TPubRecruitReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubRecruitReward)
  // optional .pb.TCommonReward Reward = 1;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->reward(), target);
  }

  // optional uint32 CritRatio = 2;
  if (has_critratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->critratio(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubRecruitReward)
  return target;
}

int TPubRecruitReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TCommonReward Reward = 1;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward());
    }

    // optional uint32 CritRatio = 2;
    if (has_critratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->critratio());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubRecruitReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubRecruitReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubRecruitReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubRecruitReward::MergeFrom(const TPubRecruitReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward()) {
      mutable_reward()->::pb::TCommonReward::MergeFrom(from.reward());
    }
    if (from.has_critratio()) {
      set_critratio(from.critratio());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubRecruitReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubRecruitReward::CopyFrom(const TPubRecruitReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubRecruitReward::IsInitialized() const {

  return true;
}

void TPubRecruitReward::Swap(TPubRecruitReward* other) {
  if (other != this) {
    std::swap(reward_, other->reward_);
    std::swap(critratio_, other->critratio_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubRecruitReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubRecruitReward_descriptor_;
  metadata.reflection = TPubRecruitReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubReceiveScoreRewardReq::kScoreIndexFieldNumber;
const int TPubReceiveScoreRewardReq::kRecruitTypeFieldNumber;
const int TPubReceiveScoreRewardReq::kCampIdFieldNumber;
const int TPubReceiveScoreRewardReq::kHeroFragIdFieldNumber;
#endif  // !_MSC_VER

TPubReceiveScoreRewardReq::TPubReceiveScoreRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubReceiveScoreRewardReq)
}

void TPubReceiveScoreRewardReq::InitAsDefaultInstance() {
}

TPubReceiveScoreRewardReq::TPubReceiveScoreRewardReq(const TPubReceiveScoreRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubReceiveScoreRewardReq)
}

void TPubReceiveScoreRewardReq::SharedCtor() {
  _cached_size_ = 0;
  scoreindex_ = 0u;
  recruittype_ = 1;
  campid_ = 0u;
  herofragid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubReceiveScoreRewardReq::~TPubReceiveScoreRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TPubReceiveScoreRewardReq)
  SharedDtor();
}

void TPubReceiveScoreRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubReceiveScoreRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubReceiveScoreRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubReceiveScoreRewardReq_descriptor_;
}

const TPubReceiveScoreRewardReq& TPubReceiveScoreRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubReceiveScoreRewardReq* TPubReceiveScoreRewardReq::default_instance_ = NULL;

TPubReceiveScoreRewardReq* TPubReceiveScoreRewardReq::New() const {
  return new TPubReceiveScoreRewardReq;
}

void TPubReceiveScoreRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPubReceiveScoreRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(campid_, herofragid_);
    scoreindex_ = 0u;
    recruittype_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubReceiveScoreRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubReceiveScoreRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ScoreIndex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scoreindex_)));
          set_has_scoreindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RecruitType;
        break;
      }

      // optional .pb.ERecruitType RecruitType = 2;
      case 2: {
        if (tag == 16) {
         parse_RecruitType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ERecruitType_IsValid(value)) {
            set_recruittype(static_cast< ::pb::ERecruitType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CampId;
        break;
      }

      // optional uint32 CampId = 3;
      case 3: {
        if (tag == 24) {
         parse_CampId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
          set_has_campid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_HeroFragId;
        break;
      }

      // optional uint32 HeroFragId = 4;
      case 4: {
        if (tag == 32) {
         parse_HeroFragId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herofragid_)));
          set_has_herofragid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubReceiveScoreRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubReceiveScoreRewardReq)
  return false;
#undef DO_
}

void TPubReceiveScoreRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubReceiveScoreRewardReq)
  // optional uint32 ScoreIndex = 1;
  if (has_scoreindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scoreindex(), output);
  }

  // optional .pb.ERecruitType RecruitType = 2;
  if (has_recruittype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->recruittype(), output);
  }

  // optional uint32 CampId = 3;
  if (has_campid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->campid(), output);
  }

  // optional uint32 HeroFragId = 4;
  if (has_herofragid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->herofragid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubReceiveScoreRewardReq)
}

::google::protobuf::uint8* TPubReceiveScoreRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubReceiveScoreRewardReq)
  // optional uint32 ScoreIndex = 1;
  if (has_scoreindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scoreindex(), target);
  }

  // optional .pb.ERecruitType RecruitType = 2;
  if (has_recruittype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->recruittype(), target);
  }

  // optional uint32 CampId = 3;
  if (has_campid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->campid(), target);
  }

  // optional uint32 HeroFragId = 4;
  if (has_herofragid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->herofragid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubReceiveScoreRewardReq)
  return target;
}

int TPubReceiveScoreRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ScoreIndex = 1;
    if (has_scoreindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scoreindex());
    }

    // optional .pb.ERecruitType RecruitType = 2;
    if (has_recruittype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->recruittype());
    }

    // optional uint32 CampId = 3;
    if (has_campid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->campid());
    }

    // optional uint32 HeroFragId = 4;
    if (has_herofragid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->herofragid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubReceiveScoreRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubReceiveScoreRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubReceiveScoreRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubReceiveScoreRewardReq::MergeFrom(const TPubReceiveScoreRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scoreindex()) {
      set_scoreindex(from.scoreindex());
    }
    if (from.has_recruittype()) {
      set_recruittype(from.recruittype());
    }
    if (from.has_campid()) {
      set_campid(from.campid());
    }
    if (from.has_herofragid()) {
      set_herofragid(from.herofragid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubReceiveScoreRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubReceiveScoreRewardReq::CopyFrom(const TPubReceiveScoreRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubReceiveScoreRewardReq::IsInitialized() const {

  return true;
}

void TPubReceiveScoreRewardReq::Swap(TPubReceiveScoreRewardReq* other) {
  if (other != this) {
    std::swap(scoreindex_, other->scoreindex_);
    std::swap(recruittype_, other->recruittype_);
    std::swap(campid_, other->campid_);
    std::swap(herofragid_, other->herofragid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubReceiveScoreRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubReceiveScoreRewardReq_descriptor_;
  metadata.reflection = TPubReceiveScoreRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubReceiveScoreRewardRsp::kScoreFieldNumber;
const int TPubReceiveScoreRewardRsp::kRewardArrayFieldNumber;
const int TPubReceiveScoreRewardRsp::kReceiveArrayFieldNumber;
#endif  // !_MSC_VER

TPubReceiveScoreRewardRsp::TPubReceiveScoreRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubReceiveScoreRewardRsp)
}

void TPubReceiveScoreRewardRsp::InitAsDefaultInstance() {
}

TPubReceiveScoreRewardRsp::TPubReceiveScoreRewardRsp(const TPubReceiveScoreRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubReceiveScoreRewardRsp)
}

void TPubReceiveScoreRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  score_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubReceiveScoreRewardRsp::~TPubReceiveScoreRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TPubReceiveScoreRewardRsp)
  SharedDtor();
}

void TPubReceiveScoreRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubReceiveScoreRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubReceiveScoreRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubReceiveScoreRewardRsp_descriptor_;
}

const TPubReceiveScoreRewardRsp& TPubReceiveScoreRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubReceiveScoreRewardRsp* TPubReceiveScoreRewardRsp::default_instance_ = NULL;

TPubReceiveScoreRewardRsp* TPubReceiveScoreRewardRsp::New() const {
  return new TPubReceiveScoreRewardRsp;
}

void TPubReceiveScoreRewardRsp::Clear() {
  score_ = 0u;
  rewardarray_.Clear();
  receivearray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubReceiveScoreRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubReceiveScoreRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Score = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RewardArray;
        break;
      }

      // repeated .pb.TCommonReward RewardArray = 2;
      case 2: {
        if (tag == 18) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RewardArray;
        if (input->ExpectTag(24)) goto parse_ReceiveArray;
        break;
      }

      // repeated uint32 ReceiveArray = 3;
      case 3: {
        if (tag == 24) {
         parse_ReceiveArray:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_receivearray())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_receivearray())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ReceiveArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubReceiveScoreRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubReceiveScoreRewardRsp)
  return false;
#undef DO_
}

void TPubReceiveScoreRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubReceiveScoreRewardRsp)
  // optional uint32 Score = 1;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->score(), output);
  }

  // repeated .pb.TCommonReward RewardArray = 2;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rewardarray(i), output);
  }

  // repeated uint32 ReceiveArray = 3;
  for (int i = 0; i < this->receivearray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->receivearray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubReceiveScoreRewardRsp)
}

::google::protobuf::uint8* TPubReceiveScoreRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubReceiveScoreRewardRsp)
  // optional uint32 Score = 1;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->score(), target);
  }

  // repeated .pb.TCommonReward RewardArray = 2;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rewardarray(i), target);
  }

  // repeated uint32 ReceiveArray = 3;
  for (int i = 0; i < this->receivearray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->receivearray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubReceiveScoreRewardRsp)
  return target;
}

int TPubReceiveScoreRewardRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Score = 1;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->score());
    }

  }
  // repeated .pb.TCommonReward RewardArray = 2;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  // repeated uint32 ReceiveArray = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->receivearray_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->receivearray(i));
    }
    total_size += 1 * this->receivearray_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubReceiveScoreRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubReceiveScoreRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubReceiveScoreRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubReceiveScoreRewardRsp::MergeFrom(const TPubReceiveScoreRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  receivearray_.MergeFrom(from.receivearray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubReceiveScoreRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubReceiveScoreRewardRsp::CopyFrom(const TPubReceiveScoreRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubReceiveScoreRewardRsp::IsInitialized() const {

  return true;
}

void TPubReceiveScoreRewardRsp::Swap(TPubReceiveScoreRewardRsp* other) {
  if (other != this) {
    std::swap(score_, other->score_);
    rewardarray_.Swap(&other->rewardarray_);
    receivearray_.Swap(&other->receivearray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubReceiveScoreRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubReceiveScoreRewardRsp_descriptor_;
  metadata.reflection = TPubReceiveScoreRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubBuyRecruitItemReq::kBuyNumFieldNumber;
const int TPubBuyRecruitItemReq::kRecruitTypeFieldNumber;
const int TPubBuyRecruitItemReq::kCampIdFieldNumber;
#endif  // !_MSC_VER

TPubBuyRecruitItemReq::TPubBuyRecruitItemReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubBuyRecruitItemReq)
}

void TPubBuyRecruitItemReq::InitAsDefaultInstance() {
}

TPubBuyRecruitItemReq::TPubBuyRecruitItemReq(const TPubBuyRecruitItemReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubBuyRecruitItemReq)
}

void TPubBuyRecruitItemReq::SharedCtor() {
  _cached_size_ = 0;
  buynum_ = 0u;
  recruittype_ = 1;
  campid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubBuyRecruitItemReq::~TPubBuyRecruitItemReq() {
  // @@protoc_insertion_point(destructor:pb.TPubBuyRecruitItemReq)
  SharedDtor();
}

void TPubBuyRecruitItemReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubBuyRecruitItemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubBuyRecruitItemReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubBuyRecruitItemReq_descriptor_;
}

const TPubBuyRecruitItemReq& TPubBuyRecruitItemReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubBuyRecruitItemReq* TPubBuyRecruitItemReq::default_instance_ = NULL;

TPubBuyRecruitItemReq* TPubBuyRecruitItemReq::New() const {
  return new TPubBuyRecruitItemReq;
}

void TPubBuyRecruitItemReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    buynum_ = 0u;
    recruittype_ = 1;
    campid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubBuyRecruitItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubBuyRecruitItemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BuyNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buynum_)));
          set_has_buynum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RecruitType;
        break;
      }

      // optional .pb.ERecruitType RecruitType = 2;
      case 2: {
        if (tag == 16) {
         parse_RecruitType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ERecruitType_IsValid(value)) {
            set_recruittype(static_cast< ::pb::ERecruitType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CampId;
        break;
      }

      // optional uint32 CampId = 3;
      case 3: {
        if (tag == 24) {
         parse_CampId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
          set_has_campid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubBuyRecruitItemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubBuyRecruitItemReq)
  return false;
#undef DO_
}

void TPubBuyRecruitItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubBuyRecruitItemReq)
  // optional uint32 BuyNum = 1;
  if (has_buynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->buynum(), output);
  }

  // optional .pb.ERecruitType RecruitType = 2;
  if (has_recruittype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->recruittype(), output);
  }

  // optional uint32 CampId = 3;
  if (has_campid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->campid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubBuyRecruitItemReq)
}

::google::protobuf::uint8* TPubBuyRecruitItemReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubBuyRecruitItemReq)
  // optional uint32 BuyNum = 1;
  if (has_buynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->buynum(), target);
  }

  // optional .pb.ERecruitType RecruitType = 2;
  if (has_recruittype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->recruittype(), target);
  }

  // optional uint32 CampId = 3;
  if (has_campid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->campid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubBuyRecruitItemReq)
  return target;
}

int TPubBuyRecruitItemReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BuyNum = 1;
    if (has_buynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buynum());
    }

    // optional .pb.ERecruitType RecruitType = 2;
    if (has_recruittype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->recruittype());
    }

    // optional uint32 CampId = 3;
    if (has_campid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->campid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubBuyRecruitItemReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubBuyRecruitItemReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubBuyRecruitItemReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubBuyRecruitItemReq::MergeFrom(const TPubBuyRecruitItemReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buynum()) {
      set_buynum(from.buynum());
    }
    if (from.has_recruittype()) {
      set_recruittype(from.recruittype());
    }
    if (from.has_campid()) {
      set_campid(from.campid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubBuyRecruitItemReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubBuyRecruitItemReq::CopyFrom(const TPubBuyRecruitItemReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubBuyRecruitItemReq::IsInitialized() const {

  return true;
}

void TPubBuyRecruitItemReq::Swap(TPubBuyRecruitItemReq* other) {
  if (other != this) {
    std::swap(buynum_, other->buynum_);
    std::swap(recruittype_, other->recruittype_);
    std::swap(campid_, other->campid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubBuyRecruitItemReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubBuyRecruitItemReq_descriptor_;
  metadata.reflection = TPubBuyRecruitItemReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubSetWishListReq::kPreHeroTidFieldNumber;
const int TPubSetWishListReq::kSetHeroTidFieldNumber;
#endif  // !_MSC_VER

TPubSetWishListReq::TPubSetWishListReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubSetWishListReq)
}

void TPubSetWishListReq::InitAsDefaultInstance() {
}

TPubSetWishListReq::TPubSetWishListReq(const TPubSetWishListReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubSetWishListReq)
}

void TPubSetWishListReq::SharedCtor() {
  _cached_size_ = 0;
  preherotid_ = 0u;
  setherotid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubSetWishListReq::~TPubSetWishListReq() {
  // @@protoc_insertion_point(destructor:pb.TPubSetWishListReq)
  SharedDtor();
}

void TPubSetWishListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubSetWishListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubSetWishListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubSetWishListReq_descriptor_;
}

const TPubSetWishListReq& TPubSetWishListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubSetWishListReq* TPubSetWishListReq::default_instance_ = NULL;

TPubSetWishListReq* TPubSetWishListReq::New() const {
  return new TPubSetWishListReq;
}

void TPubSetWishListReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPubSetWishListReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(preherotid_, setherotid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubSetWishListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubSetWishListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 PreHeroTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &preherotid_)));
          set_has_preherotid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SetHeroTid;
        break;
      }

      // optional uint32 SetHeroTid = 2;
      case 2: {
        if (tag == 16) {
         parse_SetHeroTid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &setherotid_)));
          set_has_setherotid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubSetWishListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubSetWishListReq)
  return false;
#undef DO_
}

void TPubSetWishListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubSetWishListReq)
  // optional uint32 PreHeroTid = 1;
  if (has_preherotid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->preherotid(), output);
  }

  // optional uint32 SetHeroTid = 2;
  if (has_setherotid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->setherotid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubSetWishListReq)
}

::google::protobuf::uint8* TPubSetWishListReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubSetWishListReq)
  // optional uint32 PreHeroTid = 1;
  if (has_preherotid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->preherotid(), target);
  }

  // optional uint32 SetHeroTid = 2;
  if (has_setherotid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->setherotid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubSetWishListReq)
  return target;
}

int TPubSetWishListReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 PreHeroTid = 1;
    if (has_preherotid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->preherotid());
    }

    // optional uint32 SetHeroTid = 2;
    if (has_setherotid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->setherotid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubSetWishListReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubSetWishListReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubSetWishListReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubSetWishListReq::MergeFrom(const TPubSetWishListReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_preherotid()) {
      set_preherotid(from.preherotid());
    }
    if (from.has_setherotid()) {
      set_setherotid(from.setherotid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubSetWishListReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubSetWishListReq::CopyFrom(const TPubSetWishListReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubSetWishListReq::IsInitialized() const {

  return true;
}

void TPubSetWishListReq::Swap(TPubSetWishListReq* other) {
  if (other != this) {
    std::swap(preherotid_, other->preherotid_);
    std::swap(setherotid_, other->setherotid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubSetWishListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubSetWishListReq_descriptor_;
  metadata.reflection = TPubSetWishListReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubSetWishListStatusReq::kIsOPenFieldNumber;
#endif  // !_MSC_VER

TPubSetWishListStatusReq::TPubSetWishListStatusReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubSetWishListStatusReq)
}

void TPubSetWishListStatusReq::InitAsDefaultInstance() {
}

TPubSetWishListStatusReq::TPubSetWishListStatusReq(const TPubSetWishListStatusReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubSetWishListStatusReq)
}

void TPubSetWishListStatusReq::SharedCtor() {
  _cached_size_ = 0;
  isopen_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubSetWishListStatusReq::~TPubSetWishListStatusReq() {
  // @@protoc_insertion_point(destructor:pb.TPubSetWishListStatusReq)
  SharedDtor();
}

void TPubSetWishListStatusReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubSetWishListStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubSetWishListStatusReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubSetWishListStatusReq_descriptor_;
}

const TPubSetWishListStatusReq& TPubSetWishListStatusReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubSetWishListStatusReq* TPubSetWishListStatusReq::default_instance_ = NULL;

TPubSetWishListStatusReq* TPubSetWishListStatusReq::New() const {
  return new TPubSetWishListStatusReq;
}

void TPubSetWishListStatusReq::Clear() {
  isopen_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubSetWishListStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubSetWishListStatusReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool IsOPen = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isopen_)));
          set_has_isopen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubSetWishListStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubSetWishListStatusReq)
  return false;
#undef DO_
}

void TPubSetWishListStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubSetWishListStatusReq)
  // optional bool IsOPen = 1;
  if (has_isopen()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isopen(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubSetWishListStatusReq)
}

::google::protobuf::uint8* TPubSetWishListStatusReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubSetWishListStatusReq)
  // optional bool IsOPen = 1;
  if (has_isopen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isopen(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubSetWishListStatusReq)
  return target;
}

int TPubSetWishListStatusReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool IsOPen = 1;
    if (has_isopen()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubSetWishListStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubSetWishListStatusReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubSetWishListStatusReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubSetWishListStatusReq::MergeFrom(const TPubSetWishListStatusReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_isopen()) {
      set_isopen(from.isopen());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubSetWishListStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubSetWishListStatusReq::CopyFrom(const TPubSetWishListStatusReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubSetWishListStatusReq::IsInitialized() const {

  return true;
}

void TPubSetWishListStatusReq::Swap(TPubSetWishListStatusReq* other) {
  if (other != this) {
    std::swap(isopen_, other->isopen_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubSetWishListStatusReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubSetWishListStatusReq_descriptor_;
  metadata.reflection = TPubSetWishListStatusReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TPubReceiveHotSpotRecruitRewardReq::kHotSpotHeroIdFieldNumber;
const int TPubReceiveHotSpotRecruitRewardReq::kRewardIndexFieldNumber;
#endif  // !_MSC_VER

TPubReceiveHotSpotRecruitRewardReq::TPubReceiveHotSpotRecruitRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TPubReceiveHotSpotRecruitRewardReq)
}

void TPubReceiveHotSpotRecruitRewardReq::InitAsDefaultInstance() {
}

TPubReceiveHotSpotRecruitRewardReq::TPubReceiveHotSpotRecruitRewardReq(const TPubReceiveHotSpotRecruitRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TPubReceiveHotSpotRecruitRewardReq)
}

void TPubReceiveHotSpotRecruitRewardReq::SharedCtor() {
  _cached_size_ = 0;
  hotspotheroid_ = 0u;
  rewardindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TPubReceiveHotSpotRecruitRewardReq::~TPubReceiveHotSpotRecruitRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TPubReceiveHotSpotRecruitRewardReq)
  SharedDtor();
}

void TPubReceiveHotSpotRecruitRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TPubReceiveHotSpotRecruitRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPubReceiveHotSpotRecruitRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPubReceiveHotSpotRecruitRewardReq_descriptor_;
}

const TPubReceiveHotSpotRecruitRewardReq& TPubReceiveHotSpotRecruitRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fPub_2eproto();
  return *default_instance_;
}

TPubReceiveHotSpotRecruitRewardReq* TPubReceiveHotSpotRecruitRewardReq::default_instance_ = NULL;

TPubReceiveHotSpotRecruitRewardReq* TPubReceiveHotSpotRecruitRewardReq::New() const {
  return new TPubReceiveHotSpotRecruitRewardReq;
}

void TPubReceiveHotSpotRecruitRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TPubReceiveHotSpotRecruitRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hotspotheroid_, rewardindex_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TPubReceiveHotSpotRecruitRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TPubReceiveHotSpotRecruitRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 HotSpotHeroId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hotspotheroid_)));
          set_has_hotspotheroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardIndex;
        break;
      }

      // optional uint32 RewardIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_RewardIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rewardindex_)));
          set_has_rewardindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TPubReceiveHotSpotRecruitRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TPubReceiveHotSpotRecruitRewardReq)
  return false;
#undef DO_
}

void TPubReceiveHotSpotRecruitRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TPubReceiveHotSpotRecruitRewardReq)
  // optional uint32 HotSpotHeroId = 1;
  if (has_hotspotheroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hotspotheroid(), output);
  }

  // optional uint32 RewardIndex = 2;
  if (has_rewardindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rewardindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TPubReceiveHotSpotRecruitRewardReq)
}

::google::protobuf::uint8* TPubReceiveHotSpotRecruitRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TPubReceiveHotSpotRecruitRewardReq)
  // optional uint32 HotSpotHeroId = 1;
  if (has_hotspotheroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hotspotheroid(), target);
  }

  // optional uint32 RewardIndex = 2;
  if (has_rewardindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rewardindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TPubReceiveHotSpotRecruitRewardReq)
  return target;
}

int TPubReceiveHotSpotRecruitRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 HotSpotHeroId = 1;
    if (has_hotspotheroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hotspotheroid());
    }

    // optional uint32 RewardIndex = 2;
    if (has_rewardindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rewardindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPubReceiveHotSpotRecruitRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TPubReceiveHotSpotRecruitRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TPubReceiveHotSpotRecruitRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TPubReceiveHotSpotRecruitRewardReq::MergeFrom(const TPubReceiveHotSpotRecruitRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hotspotheroid()) {
      set_hotspotheroid(from.hotspotheroid());
    }
    if (from.has_rewardindex()) {
      set_rewardindex(from.rewardindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TPubReceiveHotSpotRecruitRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPubReceiveHotSpotRecruitRewardReq::CopyFrom(const TPubReceiveHotSpotRecruitRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPubReceiveHotSpotRecruitRewardReq::IsInitialized() const {

  return true;
}

void TPubReceiveHotSpotRecruitRewardReq::Swap(TPubReceiveHotSpotRecruitRewardReq* other) {
  if (other != this) {
    std::swap(hotspotheroid_, other->hotspotheroid_);
    std::swap(rewardindex_, other->rewardindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TPubReceiveHotSpotRecruitRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TPubReceiveHotSpotRecruitRewardReq_descriptor_;
  metadata.reflection = TPubReceiveHotSpotRecruitRewardReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
