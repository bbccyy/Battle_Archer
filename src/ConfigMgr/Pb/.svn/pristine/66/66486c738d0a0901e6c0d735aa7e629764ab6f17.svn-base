// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Instance.proto

#ifndef PROTOBUF_net_2fInstance_2eproto__INCLUDED
#define PROTOBUF_net_2fInstance_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
#include "net/BInstance.pb.h"
#include "net/Battle.pb.h"
#include "net/Common.pb.h"
#include "net/LocalBattleReport.pb.h"
#include "net/User.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fInstance_2eproto();
void protobuf_AssignDesc_net_2fInstance_2eproto();
void protobuf_ShutdownFile_net_2fInstance_2eproto();

class TInstanceChapterDetailInfo;
class TInstanceChapterInfo;
class TInstanceItemInfo;
class TInstanceTriggerFirstEnterEventReq;
class TInstanceInfoReq;
class TInstanceInfoRsp;
class TInstanceChapterInfoReq;
class TInstanceChapterInfoRsp;
class TInstanceArrChapterInfoReq;
class TInstanceArrChapterInfoRsp;
class TInstanceCloseChapterReq;
class TInstanceDoBattleReq;
class TInstanceDoBattleRsp;
class TInstanceRaidStrongholdReq;
class TInstanceRaidStrongholdSingleDrop;
class TInstanceRaidStrongholdRsp;
class TInstanceReportBattleReq;
class TInstanceReportBattleRsp;
class TInstanceReceiveStarRewardReq;
class TInstanceReceiveStarRewardRsp;
class TInstanceTriggerInstanceItemExtraArgs;
class TInstanceTriggerInstanceItemReq;
class TInstanceTriggerInstanceItemRsp;
class TInstanceProgressRankInfo;
class TInstanceGetProgressRankReq;
class TInstanceGetProgressRankRsp;
class TInstanceGetBattleReportReq;
class TInstanceGetBattleReportRsp;
class TInstanceInfoNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TInstanceChapterDetailInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceChapterDetailInfo : public ::google::protobuf::Message {
 public:
  TInstanceChapterDetailInfo();
  virtual ~TInstanceChapterDetailInfo();

  TInstanceChapterDetailInfo(const TInstanceChapterDetailInfo& from);

  inline TInstanceChapterDetailInfo& operator=(const TInstanceChapterDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceChapterDetailInfo& default_instance();

  void Swap(TInstanceChapterDetailInfo* other);

  // implements Message ----------------------------------------------

  TInstanceChapterDetailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceChapterDetailInfo& from);
  void MergeFrom(const TInstanceChapterDetailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TBChapterStarRewardInfo RewardInfoArray = 1;
  inline int rewardinfoarray_size() const;
  inline void clear_rewardinfoarray();
  static const int kRewardInfoArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterDetailInfo</name>
  	<Function>
  		<name>rewardinfoarray</name>
  		<replaceName>RewardInfoArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardinfoarray</name>
  		<replaceName>RewardInfoArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardinfoarray</name>
  		<replaceName>RewardInfoArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardinfoarray</name>
  		<replaceName>RewardInfoArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardinfoarray_size</name>
  		<replaceName>RewardInfoArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBChapterStarRewardInfo& rewardinfoarray(int index) const;
  inline ::pb::TBChapterStarRewardInfo* mutable_rewardinfoarray(int index);
  inline ::pb::TBChapterStarRewardInfo* add_rewardinfoarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TBChapterStarRewardInfo >&
      rewardinfoarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TBChapterStarRewardInfo >*
      mutable_rewardinfoarray();

  // repeated .pb.TBStrongholdInfo StrongholdArray = 3;
  inline int strongholdarray_size() const;
  inline void clear_strongholdarray();
  static const int kStrongholdArrayFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterDetailInfo</name>
  	<Function>
  		<name>strongholdarray</name>
  		<replaceName>StrongholdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_strongholdarray</name>
  		<replaceName>StrongholdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_strongholdarray</name>
  		<replaceName>StrongholdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_strongholdarray</name>
  		<replaceName>StrongholdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>strongholdarray_size</name>
  		<replaceName>StrongholdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBStrongholdInfo& strongholdarray(int index) const;
  inline ::pb::TBStrongholdInfo* mutable_strongholdarray(int index);
  inline ::pb::TBStrongholdInfo* add_strongholdarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TBStrongholdInfo >&
      strongholdarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TBStrongholdInfo >*
      mutable_strongholdarray();

  // repeated .pb.TInstanceItemInfo InstanceItemArray = 4;
  inline int instanceitemarray_size() const;
  inline void clear_instanceitemarray();
  static const int kInstanceItemArrayFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterDetailInfo</name>
  	<Function>
  		<name>instanceitemarray</name>
  		<replaceName>InstanceItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_instanceitemarray</name>
  		<replaceName>InstanceItemArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_instanceitemarray</name>
  		<replaceName>InstanceItemArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_instanceitemarray</name>
  		<replaceName>InstanceItemArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>instanceitemarray_size</name>
  		<replaceName>InstanceItemArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInstanceItemInfo& instanceitemarray(int index) const;
  inline ::pb::TInstanceItemInfo* mutable_instanceitemarray(int index);
  inline ::pb::TInstanceItemInfo* add_instanceitemarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TInstanceItemInfo >&
      instanceitemarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TInstanceItemInfo >*
      mutable_instanceitemarray();

  // @@protoc_insertion_point(class_scope:pb.TInstanceChapterDetailInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TBChapterStarRewardInfo > rewardinfoarray_;
  ::google::protobuf::RepeatedPtrField< ::pb::TBStrongholdInfo > strongholdarray_;
  ::google::protobuf::RepeatedPtrField< ::pb::TInstanceItemInfo > instanceitemarray_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceChapterDetailInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceChapterInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceChapterInfo : public ::google::protobuf::Message {
 public:
  TInstanceChapterInfo();
  virtual ~TInstanceChapterInfo();

  TInstanceChapterInfo(const TInstanceChapterInfo& from);

  inline TInstanceChapterInfo& operator=(const TInstanceChapterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceChapterInfo& default_instance();

  void Swap(TInstanceChapterInfo* other);

  // implements Message ----------------------------------------------

  TInstanceChapterInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceChapterInfo& from);
  void MergeFrom(const TInstanceChapterInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ChapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterInfo</name>
  	<Function>
  		<name>chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chapterid() const;
  inline void set_chapterid(::google::protobuf::uint32 value);

  // optional uint32 StarNum = 2;
  inline bool has_starnum() const;
  inline void clear_starnum();
  static const int kStarNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterInfo</name>
  	<Function>
  		<name>starnum</name>
  		<replaceName>StarNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_starnum</name>
  		<replaceName>StarNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_starnum</name>
  		<replaceName>StarNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 starnum() const;
  inline void set_starnum(::google::protobuf::uint32 value);

  // optional bool IsPass = 3;
  inline bool has_ispass() const;
  inline void clear_ispass();
  static const int kIsPassFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterInfo</name>
  	<Function>
  		<name>ispass</name>
  		<replaceName>IsPass</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_ispass</name>
  		<replaceName>IsPass</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_ispass</name>
  		<replaceName>IsPass</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool ispass() const;
  inline void set_ispass(bool value);

  // optional uint32 ReceivedStarRewardNum = 4;
  inline bool has_receivedstarrewardnum() const;
  inline void clear_receivedstarrewardnum();
  static const int kReceivedStarRewardNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterInfo</name>
  	<Function>
  		<name>receivedstarrewardnum</name>
  		<replaceName>ReceivedStarRewardNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_receivedstarrewardnum</name>
  		<replaceName>ReceivedStarRewardNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivedstarrewardnum</name>
  		<replaceName>ReceivedStarRewardNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 receivedstarrewardnum() const;
  inline void set_receivedstarrewardnum(::google::protobuf::uint32 value);

  // optional .pb.TInstanceChapterDetailInfo DetailInfo = 5;
  inline bool has_detailinfo() const;
  inline void clear_detailinfo();
  static const int kDetailInfoFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterInfo</name>
  	<Function>
  		<name>detailinfo</name>
  		<replaceName>DetailInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_detailinfo</name>
  		<replaceName>DetailInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_detailinfo</name>
  		<replaceName>DetailInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_detailinfo</name>
  		<replaceName>DetailInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInstanceChapterDetailInfo& detailinfo() const;
  inline ::pb::TInstanceChapterDetailInfo* mutable_detailinfo();
  inline ::pb::TInstanceChapterDetailInfo* release_detailinfo();
  inline void set_allocated_detailinfo(::pb::TInstanceChapterDetailInfo* detailinfo);

  // repeated uint32 PassStrongholdIdArray = 6;
  inline int passstrongholdidarray_size() const;
  inline void clear_passstrongholdidarray();
  static const int kPassStrongholdIdArrayFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterInfo</name>
  	<Function>
  		<name>passstrongholdidarray</name>
  		<replaceName>PassStrongholdIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_passstrongholdidarray</name>
  		<replaceName>PassStrongholdIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_passstrongholdidarray</name>
  		<replaceName>PassStrongholdIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_passstrongholdidarray</name>
  		<replaceName>PassStrongholdIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>passstrongholdidarray_size</name>
  		<replaceName>PassStrongholdIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 passstrongholdidarray(int index) const;
  inline void set_passstrongholdidarray(int index, ::google::protobuf::uint32 value);
  inline void add_passstrongholdidarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      passstrongholdidarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_passstrongholdidarray();

  // optional bool IsTriggeredFirstEnterEvent = 7;
  inline bool has_istriggeredfirstenterevent() const;
  inline void clear_istriggeredfirstenterevent();
  static const int kIsTriggeredFirstEnterEventFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterInfo</name>
  	<Function>
  		<name>istriggeredfirstenterevent</name>
  		<replaceName>IsTriggeredFirstEnterEvent</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_istriggeredfirstenterevent</name>
  		<replaceName>IsTriggeredFirstEnterEvent</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_istriggeredfirstenterevent</name>
  		<replaceName>IsTriggeredFirstEnterEvent</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool istriggeredfirstenterevent() const;
  inline void set_istriggeredfirstenterevent(bool value);

  // optional uint32 TriggeredInstanceItemNum = 8;
  inline bool has_triggeredinstanceitemnum() const;
  inline void clear_triggeredinstanceitemnum();
  static const int kTriggeredInstanceItemNumFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterInfo</name>
  	<Function>
  		<name>triggeredinstanceitemnum</name>
  		<replaceName>TriggeredInstanceItemNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_triggeredinstanceitemnum</name>
  		<replaceName>TriggeredInstanceItemNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_triggeredinstanceitemnum</name>
  		<replaceName>TriggeredInstanceItemNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 triggeredinstanceitemnum() const;
  inline void set_triggeredinstanceitemnum(::google::protobuf::uint32 value);

  // optional uint32 BossStarNum = 9;
  inline bool has_bossstarnum() const;
  inline void clear_bossstarnum();
  static const int kBossStarNumFieldNumber = 9;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterInfo</name>
  	<Function>
  		<name>bossstarnum</name>
  		<replaceName>BossStarNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_bossstarnum</name>
  		<replaceName>BossStarNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bossstarnum</name>
  		<replaceName>BossStarNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 bossstarnum() const;
  inline void set_bossstarnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TInstanceChapterInfo)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_starnum();
  inline void clear_has_starnum();
  inline void set_has_ispass();
  inline void clear_has_ispass();
  inline void set_has_receivedstarrewardnum();
  inline void clear_has_receivedstarrewardnum();
  inline void set_has_detailinfo();
  inline void clear_has_detailinfo();
  inline void set_has_istriggeredfirstenterevent();
  inline void clear_has_istriggeredfirstenterevent();
  inline void set_has_triggeredinstanceitemnum();
  inline void clear_has_triggeredinstanceitemnum();
  inline void set_has_bossstarnum();
  inline void clear_has_bossstarnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapterid_;
  ::google::protobuf::uint32 starnum_;
  ::google::protobuf::uint32 receivedstarrewardnum_;
  bool ispass_;
  bool istriggeredfirstenterevent_;
  ::pb::TInstanceChapterDetailInfo* detailinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > passstrongholdidarray_;
  ::google::protobuf::uint32 triggeredinstanceitemnum_;
  ::google::protobuf::uint32 bossstarnum_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceChapterInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceItemInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceItemInfo : public ::google::protobuf::Message {
 public:
  TInstanceItemInfo();
  virtual ~TInstanceItemInfo();

  TInstanceItemInfo(const TInstanceItemInfo& from);

  inline TInstanceItemInfo& operator=(const TInstanceItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceItemInfo& default_instance();

  void Swap(TInstanceItemInfo* other);

  // implements Message ----------------------------------------------

  TInstanceItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceItemInfo& from);
  void MergeFrom(const TInstanceItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ItemName = 1;
  inline bool has_itemname() const;
  inline void clear_itemname();
  static const int kItemNameFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceItemInfo</name>
  	<Function>
  		<name>itemname</name>
  		<replaceName>ItemName</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemname</name>
  		<replaceName>ItemName</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemname</name>
  		<replaceName>ItemName</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& itemname() const;
  inline void set_itemname(const ::std::string& value);
  inline void set_itemname(const char* value);
  inline void set_itemname(const char* value, size_t size);
  inline ::std::string* mutable_itemname();
  inline ::std::string* release_itemname();
  inline void set_allocated_itemname(::std::string* itemname);

  // optional uint32 ItemType = 2;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceItemInfo</name>
  	<Function>
  		<name>itemtype</name>
  		<replaceName>ItemType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemtype</name>
  		<replaceName>ItemType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemtype</name>
  		<replaceName>ItemType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 itemtype() const;
  inline void set_itemtype(::google::protobuf::uint32 value);

  // optional uint64 TriggerTime = 3;
  inline bool has_triggertime() const;
  inline void clear_triggertime();
  static const int kTriggerTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInstanceItemInfo</name>
  	<Function>
  		<name>triggertime</name>
  		<replaceName>TriggerTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_triggertime</name>
  		<replaceName>TriggerTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_triggertime</name>
  		<replaceName>TriggerTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 triggertime() const;
  inline void set_triggertime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TInstanceItemInfo)
 private:
  inline void set_has_itemname();
  inline void clear_has_itemname();
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  inline void set_has_triggertime();
  inline void clear_has_triggertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* itemname_;
  ::google::protobuf::uint64 triggertime_;
  ::google::protobuf::uint32 itemtype_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceItemInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceTriggerFirstEnterEventReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceTriggerFirstEnterEventReq : public ::google::protobuf::Message {
 public:
  TInstanceTriggerFirstEnterEventReq();
  virtual ~TInstanceTriggerFirstEnterEventReq();

  TInstanceTriggerFirstEnterEventReq(const TInstanceTriggerFirstEnterEventReq& from);

  inline TInstanceTriggerFirstEnterEventReq& operator=(const TInstanceTriggerFirstEnterEventReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceTriggerFirstEnterEventReq& default_instance();

  void Swap(TInstanceTriggerFirstEnterEventReq* other);

  // implements Message ----------------------------------------------

  TInstanceTriggerFirstEnterEventReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceTriggerFirstEnterEventReq& from);
  void MergeFrom(const TInstanceTriggerFirstEnterEventReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ChapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceTriggerFirstEnterEventReq</name>
  	<Function>
  		<name>chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chapterid() const;
  inline void set_chapterid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TInstanceTriggerFirstEnterEventReq)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapterid_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceTriggerFirstEnterEventReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceInfoReq : public ::google::protobuf::Message {
 public:
  TInstanceInfoReq();
  virtual ~TInstanceInfoReq();

  TInstanceInfoReq(const TInstanceInfoReq& from);

  inline TInstanceInfoReq& operator=(const TInstanceInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceInfoReq& default_instance();

  void Swap(TInstanceInfoReq* other);

  // implements Message ----------------------------------------------

  TInstanceInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceInfoReq& from);
  void MergeFrom(const TInstanceInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.TInstanceInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceInfoRsp : public ::google::protobuf::Message {
 public:
  TInstanceInfoRsp();
  virtual ~TInstanceInfoRsp();

  TInstanceInfoRsp(const TInstanceInfoRsp& from);

  inline TInstanceInfoRsp& operator=(const TInstanceInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceInfoRsp& default_instance();

  void Swap(TInstanceInfoRsp* other);

  // implements Message ----------------------------------------------

  TInstanceInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceInfoRsp& from);
  void MergeFrom(const TInstanceInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
  inline int chapterinfoarray_size() const;
  inline void clear_chapterinfoarray();
  static const int kChapterInfoArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceInfoRsp</name>
  	<Function>
  		<name>chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>chapterinfoarray_size</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInstanceChapterInfo& chapterinfoarray(int index) const;
  inline ::pb::TInstanceChapterInfo* mutable_chapterinfoarray(int index);
  inline ::pb::TInstanceChapterInfo* add_chapterinfoarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo >&
      chapterinfoarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo >*
      mutable_chapterinfoarray();

  // optional .pb.TSimpleItem ActiveTreasureItem = 2;
  inline bool has_activetreasureitem() const;
  inline void clear_activetreasureitem();
  static const int kActiveTreasureItemFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceInfoRsp</name>
  	<Function>
  		<name>activetreasureitem</name>
  		<replaceName>ActiveTreasureItem</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_activetreasureitem</name>
  		<replaceName>ActiveTreasureItem</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_activetreasureitem</name>
  		<replaceName>ActiveTreasureItem</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_activetreasureitem</name>
  		<replaceName>ActiveTreasureItem</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleItem& activetreasureitem() const;
  inline ::pb::TSimpleItem* mutable_activetreasureitem();
  inline ::pb::TSimpleItem* release_activetreasureitem();
  inline void set_allocated_activetreasureitem(::pb::TSimpleItem* activetreasureitem);

  // @@protoc_insertion_point(class_scope:pb.TInstanceInfoRsp)
 private:
  inline void set_has_activetreasureitem();
  inline void clear_has_activetreasureitem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo > chapterinfoarray_;
  ::pb::TSimpleItem* activetreasureitem_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceChapterInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceChapterInfoReq : public ::google::protobuf::Message {
 public:
  TInstanceChapterInfoReq();
  virtual ~TInstanceChapterInfoReq();

  TInstanceChapterInfoReq(const TInstanceChapterInfoReq& from);

  inline TInstanceChapterInfoReq& operator=(const TInstanceChapterInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceChapterInfoReq& default_instance();

  void Swap(TInstanceChapterInfoReq* other);

  // implements Message ----------------------------------------------

  TInstanceChapterInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceChapterInfoReq& from);
  void MergeFrom(const TInstanceChapterInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ChapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterInfoReq</name>
  	<Function>
  		<name>chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chapterid() const;
  inline void set_chapterid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TInstanceChapterInfoReq)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapterid_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceChapterInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceChapterInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceChapterInfoRsp : public ::google::protobuf::Message {
 public:
  TInstanceChapterInfoRsp();
  virtual ~TInstanceChapterInfoRsp();

  TInstanceChapterInfoRsp(const TInstanceChapterInfoRsp& from);

  inline TInstanceChapterInfoRsp& operator=(const TInstanceChapterInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceChapterInfoRsp& default_instance();

  void Swap(TInstanceChapterInfoRsp* other);

  // implements Message ----------------------------------------------

  TInstanceChapterInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceChapterInfoRsp& from);
  void MergeFrom(const TInstanceChapterInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TInstanceChapterInfo ChapterInfo = 1;
  inline bool has_chapterinfo() const;
  inline void clear_chapterinfo();
  static const int kChapterInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceChapterInfoRsp</name>
  	<Function>
  		<name>chapterinfo</name>
  		<replaceName>ChapterInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chapterinfo</name>
  		<replaceName>ChapterInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_chapterinfo</name>
  		<replaceName>ChapterInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterinfo</name>
  		<replaceName>ChapterInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInstanceChapterInfo& chapterinfo() const;
  inline ::pb::TInstanceChapterInfo* mutable_chapterinfo();
  inline ::pb::TInstanceChapterInfo* release_chapterinfo();
  inline void set_allocated_chapterinfo(::pb::TInstanceChapterInfo* chapterinfo);

  // @@protoc_insertion_point(class_scope:pb.TInstanceChapterInfoRsp)
 private:
  inline void set_has_chapterinfo();
  inline void clear_has_chapterinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TInstanceChapterInfo* chapterinfo_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceChapterInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceArrChapterInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceArrChapterInfoReq : public ::google::protobuf::Message {
 public:
  TInstanceArrChapterInfoReq();
  virtual ~TInstanceArrChapterInfoReq();

  TInstanceArrChapterInfoReq(const TInstanceArrChapterInfoReq& from);

  inline TInstanceArrChapterInfoReq& operator=(const TInstanceArrChapterInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceArrChapterInfoReq& default_instance();

  void Swap(TInstanceArrChapterInfoReq* other);

  // implements Message ----------------------------------------------

  TInstanceArrChapterInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceArrChapterInfoReq& from);
  void MergeFrom(const TInstanceArrChapterInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ChapterIdArray = 1;
  inline int chapteridarray_size() const;
  inline void clear_chapteridarray();
  static const int kChapterIdArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceArrChapterInfoReq</name>
  	<Function>
  		<name>chapteridarray</name>
  		<replaceName>ChapterIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_chapteridarray</name>
  		<replaceName>ChapterIdArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_chapteridarray</name>
  		<replaceName>ChapterIdArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapteridarray</name>
  		<replaceName>ChapterIdArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>chapteridarray_size</name>
  		<replaceName>ChapterIdArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chapteridarray(int index) const;
  inline void set_chapteridarray(int index, ::google::protobuf::uint32 value);
  inline void add_chapteridarray(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      chapteridarray() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_chapteridarray();

  // @@protoc_insertion_point(class_scope:pb.TInstanceArrChapterInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > chapteridarray_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceArrChapterInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceArrChapterInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceArrChapterInfoRsp : public ::google::protobuf::Message {
 public:
  TInstanceArrChapterInfoRsp();
  virtual ~TInstanceArrChapterInfoRsp();

  TInstanceArrChapterInfoRsp(const TInstanceArrChapterInfoRsp& from);

  inline TInstanceArrChapterInfoRsp& operator=(const TInstanceArrChapterInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceArrChapterInfoRsp& default_instance();

  void Swap(TInstanceArrChapterInfoRsp* other);

  // implements Message ----------------------------------------------

  TInstanceArrChapterInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceArrChapterInfoRsp& from);
  void MergeFrom(const TInstanceArrChapterInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
  inline int chapterinfoarray_size() const;
  inline void clear_chapterinfoarray();
  static const int kChapterInfoArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceArrChapterInfoRsp</name>
  	<Function>
  		<name>chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>chapterinfoarray_size</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInstanceChapterInfo& chapterinfoarray(int index) const;
  inline ::pb::TInstanceChapterInfo* mutable_chapterinfoarray(int index);
  inline ::pb::TInstanceChapterInfo* add_chapterinfoarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo >&
      chapterinfoarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo >*
      mutable_chapterinfoarray();

  // @@protoc_insertion_point(class_scope:pb.TInstanceArrChapterInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo > chapterinfoarray_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceArrChapterInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceCloseChapterReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceCloseChapterReq : public ::google::protobuf::Message {
 public:
  TInstanceCloseChapterReq();
  virtual ~TInstanceCloseChapterReq();

  TInstanceCloseChapterReq(const TInstanceCloseChapterReq& from);

  inline TInstanceCloseChapterReq& operator=(const TInstanceCloseChapterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceCloseChapterReq& default_instance();

  void Swap(TInstanceCloseChapterReq* other);

  // implements Message ----------------------------------------------

  TInstanceCloseChapterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceCloseChapterReq& from);
  void MergeFrom(const TInstanceCloseChapterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.TInstanceCloseChapterReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceCloseChapterReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceDoBattleReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceDoBattleReq : public ::google::protobuf::Message {
 public:
  TInstanceDoBattleReq();
  virtual ~TInstanceDoBattleReq();

  TInstanceDoBattleReq(const TInstanceDoBattleReq& from);

  inline TInstanceDoBattleReq& operator=(const TInstanceDoBattleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceDoBattleReq& default_instance();

  void Swap(TInstanceDoBattleReq* other);

  // implements Message ----------------------------------------------

  TInstanceDoBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceDoBattleReq& from);
  void MergeFrom(const TInstanceDoBattleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ChapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceDoBattleReq</name>
  	<Function>
  		<name>chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chapterid() const;
  inline void set_chapterid(::google::protobuf::uint32 value);

  // optional uint32 StrongholdId = 2;
  inline bool has_strongholdid() const;
  inline void clear_strongholdid();
  static const int kStrongholdIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceDoBattleReq</name>
  	<Function>
  		<name>strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 strongholdid() const;
  inline void set_strongholdid(::google::protobuf::uint32 value);

  // optional uint32 StrongholdBattleId = 3;
  inline bool has_strongholdbattleid() const;
  inline void clear_strongholdbattleid();
  static const int kStrongholdBattleIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInstanceDoBattleReq</name>
  	<Function>
  		<name>strongholdbattleid</name>
  		<replaceName>StrongholdBattleId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_strongholdbattleid</name>
  		<replaceName>StrongholdBattleId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_strongholdbattleid</name>
  		<replaceName>StrongholdBattleId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 strongholdbattleid() const;
  inline void set_strongholdbattleid(::google::protobuf::uint32 value);

  // optional .pb.TBattleCheckParam BattleCheckParam = 4;
  inline bool has_battlecheckparam() const;
  inline void clear_battlecheckparam();
  static const int kBattleCheckParamFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TInstanceDoBattleReq</name>
  	<Function>
  		<name>battlecheckparam</name>
  		<replaceName>BattleCheckParam</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battlecheckparam</name>
  		<replaceName>BattleCheckParam</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_battlecheckparam</name>
  		<replaceName>BattleCheckParam</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battlecheckparam</name>
  		<replaceName>BattleCheckParam</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBattleCheckParam& battlecheckparam() const;
  inline ::pb::TBattleCheckParam* mutable_battlecheckparam();
  inline ::pb::TBattleCheckParam* release_battlecheckparam();
  inline void set_allocated_battlecheckparam(::pb::TBattleCheckParam* battlecheckparam);

  // @@protoc_insertion_point(class_scope:pb.TInstanceDoBattleReq)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_strongholdid();
  inline void clear_has_strongholdid();
  inline void set_has_strongholdbattleid();
  inline void clear_has_strongholdbattleid();
  inline void set_has_battlecheckparam();
  inline void clear_has_battlecheckparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapterid_;
  ::google::protobuf::uint32 strongholdid_;
  ::pb::TBattleCheckParam* battlecheckparam_;
  ::google::protobuf::uint32 strongholdbattleid_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceDoBattleReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceDoBattleRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceDoBattleRsp : public ::google::protobuf::Message {
 public:
  TInstanceDoBattleRsp();
  virtual ~TInstanceDoBattleRsp();

  TInstanceDoBattleRsp(const TInstanceDoBattleRsp& from);

  inline TInstanceDoBattleRsp& operator=(const TInstanceDoBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceDoBattleRsp& default_instance();

  void Swap(TInstanceDoBattleRsp* other);

  // implements Message ----------------------------------------------

  TInstanceDoBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceDoBattleRsp& from);
  void MergeFrom(const TInstanceDoBattleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward DropArray = 1;
  inline int droparray_size() const;
  inline void clear_droparray();
  static const int kDropArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceDoBattleRsp</name>
  	<Function>
  		<name>droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>droparray_size</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& droparray(int index) const;
  inline ::pb::TCommonReward* mutable_droparray(int index);
  inline ::pb::TCommonReward* add_droparray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      droparray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_droparray();

  // optional .pb.TBattleArgs BattleArgs = 2;
  inline bool has_battleargs() const;
  inline void clear_battleargs();
  static const int kBattleArgsFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceDoBattleRsp</name>
  	<Function>
  		<name>battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBattleArgs& battleargs() const;
  inline ::pb::TBattleArgs* mutable_battleargs();
  inline ::pb::TBattleArgs* release_battleargs();
  inline void set_allocated_battleargs(::pb::TBattleArgs* battleargs);

  // @@protoc_insertion_point(class_scope:pb.TInstanceDoBattleRsp)
 private:
  inline void set_has_battleargs();
  inline void clear_has_battleargs();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > droparray_;
  ::pb::TBattleArgs* battleargs_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceDoBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceRaidStrongholdReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceRaidStrongholdReq : public ::google::protobuf::Message {
 public:
  TInstanceRaidStrongholdReq();
  virtual ~TInstanceRaidStrongholdReq();

  TInstanceRaidStrongholdReq(const TInstanceRaidStrongholdReq& from);

  inline TInstanceRaidStrongholdReq& operator=(const TInstanceRaidStrongholdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceRaidStrongholdReq& default_instance();

  void Swap(TInstanceRaidStrongholdReq* other);

  // implements Message ----------------------------------------------

  TInstanceRaidStrongholdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceRaidStrongholdReq& from);
  void MergeFrom(const TInstanceRaidStrongholdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ChapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceRaidStrongholdReq</name>
  	<Function>
  		<name>chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chapterid() const;
  inline void set_chapterid(::google::protobuf::uint32 value);

  // optional uint32 StrongholdId = 2;
  inline bool has_strongholdid() const;
  inline void clear_strongholdid();
  static const int kStrongholdIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceRaidStrongholdReq</name>
  	<Function>
  		<name>strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 strongholdid() const;
  inline void set_strongholdid(::google::protobuf::uint32 value);

  // optional uint32 RaidNum = 3;
  inline bool has_raidnum() const;
  inline void clear_raidnum();
  static const int kRaidNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInstanceRaidStrongholdReq</name>
  	<Function>
  		<name>raidnum</name>
  		<replaceName>RaidNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_raidnum</name>
  		<replaceName>RaidNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_raidnum</name>
  		<replaceName>RaidNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 raidnum() const;
  inline void set_raidnum(::google::protobuf::uint32 value);

  // optional .pb.TCommonReward NeedItemInfo = 4;
  inline bool has_neediteminfo() const;
  inline void clear_neediteminfo();
  static const int kNeedItemInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TInstanceRaidStrongholdReq</name>
  	<Function>
  		<name>neediteminfo</name>
  		<replaceName>NeedItemInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_neediteminfo</name>
  		<replaceName>NeedItemInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_neediteminfo</name>
  		<replaceName>NeedItemInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_neediteminfo</name>
  		<replaceName>NeedItemInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& neediteminfo() const;
  inline ::pb::TCommonReward* mutable_neediteminfo();
  inline ::pb::TCommonReward* release_neediteminfo();
  inline void set_allocated_neediteminfo(::pb::TCommonReward* neediteminfo);

  // @@protoc_insertion_point(class_scope:pb.TInstanceRaidStrongholdReq)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_strongholdid();
  inline void clear_has_strongholdid();
  inline void set_has_raidnum();
  inline void clear_has_raidnum();
  inline void set_has_neediteminfo();
  inline void clear_has_neediteminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapterid_;
  ::google::protobuf::uint32 strongholdid_;
  ::pb::TCommonReward* neediteminfo_;
  ::google::protobuf::uint32 raidnum_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceRaidStrongholdReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceRaidStrongholdSingleDrop</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceRaidStrongholdSingleDrop : public ::google::protobuf::Message {
 public:
  TInstanceRaidStrongholdSingleDrop();
  virtual ~TInstanceRaidStrongholdSingleDrop();

  TInstanceRaidStrongholdSingleDrop(const TInstanceRaidStrongholdSingleDrop& from);

  inline TInstanceRaidStrongholdSingleDrop& operator=(const TInstanceRaidStrongholdSingleDrop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceRaidStrongholdSingleDrop& default_instance();

  void Swap(TInstanceRaidStrongholdSingleDrop* other);

  // implements Message ----------------------------------------------

  TInstanceRaidStrongholdSingleDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceRaidStrongholdSingleDrop& from);
  void MergeFrom(const TInstanceRaidStrongholdSingleDrop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceRaidStrongholdSingleDrop</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // repeated .pb.TCommonReward RewardArray = 2;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceRaidStrongholdSingleDrop</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TInstanceRaidStrongholdSingleDrop)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceRaidStrongholdSingleDrop* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceRaidStrongholdRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceRaidStrongholdRsp : public ::google::protobuf::Message {
 public:
  TInstanceRaidStrongholdRsp();
  virtual ~TInstanceRaidStrongholdRsp();

  TInstanceRaidStrongholdRsp(const TInstanceRaidStrongholdRsp& from);

  inline TInstanceRaidStrongholdRsp& operator=(const TInstanceRaidStrongholdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceRaidStrongholdRsp& default_instance();

  void Swap(TInstanceRaidStrongholdRsp* other);

  // implements Message ----------------------------------------------

  TInstanceRaidStrongholdRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceRaidStrongholdRsp& from);
  void MergeFrom(const TInstanceRaidStrongholdRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TInstanceRaidStrongholdSingleDrop DropArray = 1;
  inline int droparray_size() const;
  inline void clear_droparray();
  static const int kDropArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceRaidStrongholdRsp</name>
  	<Function>
  		<name>droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>droparray_size</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInstanceRaidStrongholdSingleDrop& droparray(int index) const;
  inline ::pb::TInstanceRaidStrongholdSingleDrop* mutable_droparray(int index);
  inline ::pb::TInstanceRaidStrongholdSingleDrop* add_droparray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TInstanceRaidStrongholdSingleDrop >&
      droparray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TInstanceRaidStrongholdSingleDrop >*
      mutable_droparray();

  // @@protoc_insertion_point(class_scope:pb.TInstanceRaidStrongholdRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TInstanceRaidStrongholdSingleDrop > droparray_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceRaidStrongholdRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceReportBattleReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceReportBattleReq : public ::google::protobuf::Message {
 public:
  TInstanceReportBattleReq();
  virtual ~TInstanceReportBattleReq();

  TInstanceReportBattleReq(const TInstanceReportBattleReq& from);

  inline TInstanceReportBattleReq& operator=(const TInstanceReportBattleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceReportBattleReq& default_instance();

  void Swap(TInstanceReportBattleReq* other);

  // implements Message ----------------------------------------------

  TInstanceReportBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceReportBattleReq& from);
  void MergeFrom(const TInstanceReportBattleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ChapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceReportBattleReq</name>
  	<Function>
  		<name>chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chapterid() const;
  inline void set_chapterid(::google::protobuf::uint32 value);

  // optional uint32 StrongholdId = 2;
  inline bool has_strongholdid() const;
  inline void clear_strongholdid();
  static const int kStrongholdIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceReportBattleReq</name>
  	<Function>
  		<name>strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 strongholdid() const;
  inline void set_strongholdid(::google::protobuf::uint32 value);

  // optional uint32 StrongholdBattleId = 3;
  inline bool has_strongholdbattleid() const;
  inline void clear_strongholdbattleid();
  static const int kStrongholdBattleIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInstanceReportBattleReq</name>
  	<Function>
  		<name>strongholdbattleid</name>
  		<replaceName>StrongholdBattleId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_strongholdbattleid</name>
  		<replaceName>StrongholdBattleId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_strongholdbattleid</name>
  		<replaceName>StrongholdBattleId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 strongholdbattleid() const;
  inline void set_strongholdbattleid(::google::protobuf::uint32 value);

  // optional .pb.TBattleResult BattleRet = 4;
  inline bool has_battleret() const;
  inline void clear_battleret();
  static const int kBattleRetFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TInstanceReportBattleReq</name>
  	<Function>
  		<name>battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBattleResult& battleret() const;
  inline ::pb::TBattleResult* mutable_battleret();
  inline ::pb::TBattleResult* release_battleret();
  inline void set_allocated_battleret(::pb::TBattleResult* battleret);

  // optional bytes BattleResultBytes = 5;
  inline bool has_battleresultbytes() const;
  inline void clear_battleresultbytes();
  static const int kBattleResultBytesFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TInstanceReportBattleReq</name>
  	<Function>
  		<name>battleresultbytes</name>
  		<replaceName>BattleResultBytes</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleresultbytes</name>
  		<replaceName>BattleResultBytes</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleresultbytes</name>
  		<replaceName>BattleResultBytes</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& battleresultbytes() const;
  inline void set_battleresultbytes(const ::std::string& value);
  inline void set_battleresultbytes(const char* value);
  inline void set_battleresultbytes(const void* value, size_t size);
  inline ::std::string* mutable_battleresultbytes();
  inline ::std::string* release_battleresultbytes();
  inline void set_allocated_battleresultbytes(::std::string* battleresultbytes);

  // @@protoc_insertion_point(class_scope:pb.TInstanceReportBattleReq)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_strongholdid();
  inline void clear_has_strongholdid();
  inline void set_has_strongholdbattleid();
  inline void clear_has_strongholdbattleid();
  inline void set_has_battleret();
  inline void clear_has_battleret();
  inline void set_has_battleresultbytes();
  inline void clear_has_battleresultbytes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapterid_;
  ::google::protobuf::uint32 strongholdid_;
  ::pb::TBattleResult* battleret_;
  ::std::string* battleresultbytes_;
  ::google::protobuf::uint32 strongholdbattleid_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceReportBattleReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceReportBattleRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceReportBattleRsp : public ::google::protobuf::Message {
 public:
  TInstanceReportBattleRsp();
  virtual ~TInstanceReportBattleRsp();

  TInstanceReportBattleRsp(const TInstanceReportBattleRsp& from);

  inline TInstanceReportBattleRsp& operator=(const TInstanceReportBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceReportBattleRsp& default_instance();

  void Swap(TInstanceReportBattleRsp* other);

  // implements Message ----------------------------------------------

  TInstanceReportBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceReportBattleRsp& from);
  void MergeFrom(const TInstanceReportBattleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward DropArray = 1;
  inline int droparray_size() const;
  inline void clear_droparray();
  static const int kDropArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceReportBattleRsp</name>
  	<Function>
  		<name>droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>droparray_size</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& droparray(int index) const;
  inline ::pb::TCommonReward* mutable_droparray(int index);
  inline ::pb::TCommonReward* add_droparray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      droparray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_droparray();

  // @@protoc_insertion_point(class_scope:pb.TInstanceReportBattleRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > droparray_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceReportBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceReceiveStarRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceReceiveStarRewardReq : public ::google::protobuf::Message {
 public:
  TInstanceReceiveStarRewardReq();
  virtual ~TInstanceReceiveStarRewardReq();

  TInstanceReceiveStarRewardReq(const TInstanceReceiveStarRewardReq& from);

  inline TInstanceReceiveStarRewardReq& operator=(const TInstanceReceiveStarRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceReceiveStarRewardReq& default_instance();

  void Swap(TInstanceReceiveStarRewardReq* other);

  // implements Message ----------------------------------------------

  TInstanceReceiveStarRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceReceiveStarRewardReq& from);
  void MergeFrom(const TInstanceReceiveStarRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ChapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceReceiveStarRewardReq</name>
  	<Function>
  		<name>chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chapterid() const;
  inline void set_chapterid(::google::protobuf::uint32 value);

  // optional uint32 StarNum = 2;
  inline bool has_starnum() const;
  inline void clear_starnum();
  static const int kStarNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceReceiveStarRewardReq</name>
  	<Function>
  		<name>starnum</name>
  		<replaceName>StarNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_starnum</name>
  		<replaceName>StarNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_starnum</name>
  		<replaceName>StarNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 starnum() const;
  inline void set_starnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TInstanceReceiveStarRewardReq)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_starnum();
  inline void clear_has_starnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapterid_;
  ::google::protobuf::uint32 starnum_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceReceiveStarRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceReceiveStarRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceReceiveStarRewardRsp : public ::google::protobuf::Message {
 public:
  TInstanceReceiveStarRewardRsp();
  virtual ~TInstanceReceiveStarRewardRsp();

  TInstanceReceiveStarRewardRsp(const TInstanceReceiveStarRewardRsp& from);

  inline TInstanceReceiveStarRewardRsp& operator=(const TInstanceReceiveStarRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceReceiveStarRewardRsp& default_instance();

  void Swap(TInstanceReceiveStarRewardRsp* other);

  // implements Message ----------------------------------------------

  TInstanceReceiveStarRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceReceiveStarRewardRsp& from);
  void MergeFrom(const TInstanceReceiveStarRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceReceiveStarRewardRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TInstanceReceiveStarRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceReceiveStarRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceTriggerInstanceItemExtraArgs</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceTriggerInstanceItemExtraArgs : public ::google::protobuf::Message {
 public:
  TInstanceTriggerInstanceItemExtraArgs();
  virtual ~TInstanceTriggerInstanceItemExtraArgs();

  TInstanceTriggerInstanceItemExtraArgs(const TInstanceTriggerInstanceItemExtraArgs& from);

  inline TInstanceTriggerInstanceItemExtraArgs& operator=(const TInstanceTriggerInstanceItemExtraArgs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceTriggerInstanceItemExtraArgs& default_instance();

  void Swap(TInstanceTriggerInstanceItemExtraArgs* other);

  // implements Message ----------------------------------------------

  TInstanceTriggerInstanceItemExtraArgs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceTriggerInstanceItemExtraArgs& from);
  void MergeFrom(const TInstanceTriggerInstanceItemExtraArgs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 DialogId = 1;
  inline bool has_dialogid() const;
  inline void clear_dialogid();
  static const int kDialogIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceTriggerInstanceItemExtraArgs</name>
  	<Function>
  		<name>dialogid</name>
  		<replaceName>DialogId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_dialogid</name>
  		<replaceName>DialogId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_dialogid</name>
  		<replaceName>DialogId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 dialogid() const;
  inline void set_dialogid(::google::protobuf::uint32 value);

  // optional .pb.TBattleResult BattleRet = 2;
  inline bool has_battleret() const;
  inline void clear_battleret();
  static const int kBattleRetFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceTriggerInstanceItemExtraArgs</name>
  	<Function>
  		<name>battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBattleResult& battleret() const;
  inline ::pb::TBattleResult* mutable_battleret();
  inline ::pb::TBattleResult* release_battleret();
  inline void set_allocated_battleret(::pb::TBattleResult* battleret);

  // optional bytes BattleResultBytes = 3;
  inline bool has_battleresultbytes() const;
  inline void clear_battleresultbytes();
  static const int kBattleResultBytesFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInstanceTriggerInstanceItemExtraArgs</name>
  	<Function>
  		<name>battleresultbytes</name>
  		<replaceName>BattleResultBytes</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleresultbytes</name>
  		<replaceName>BattleResultBytes</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleresultbytes</name>
  		<replaceName>BattleResultBytes</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& battleresultbytes() const;
  inline void set_battleresultbytes(const ::std::string& value);
  inline void set_battleresultbytes(const char* value);
  inline void set_battleresultbytes(const void* value, size_t size);
  inline ::std::string* mutable_battleresultbytes();
  inline ::std::string* release_battleresultbytes();
  inline void set_allocated_battleresultbytes(::std::string* battleresultbytes);

  // @@protoc_insertion_point(class_scope:pb.TInstanceTriggerInstanceItemExtraArgs)
 private:
  inline void set_has_dialogid();
  inline void clear_has_dialogid();
  inline void set_has_battleret();
  inline void clear_has_battleret();
  inline void set_has_battleresultbytes();
  inline void clear_has_battleresultbytes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TBattleResult* battleret_;
  ::std::string* battleresultbytes_;
  ::google::protobuf::uint32 dialogid_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceTriggerInstanceItemExtraArgs* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceTriggerInstanceItemReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceTriggerInstanceItemReq : public ::google::protobuf::Message {
 public:
  TInstanceTriggerInstanceItemReq();
  virtual ~TInstanceTriggerInstanceItemReq();

  TInstanceTriggerInstanceItemReq(const TInstanceTriggerInstanceItemReq& from);

  inline TInstanceTriggerInstanceItemReq& operator=(const TInstanceTriggerInstanceItemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceTriggerInstanceItemReq& default_instance();

  void Swap(TInstanceTriggerInstanceItemReq* other);

  // implements Message ----------------------------------------------

  TInstanceTriggerInstanceItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceTriggerInstanceItemReq& from);
  void MergeFrom(const TInstanceTriggerInstanceItemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ChapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceTriggerInstanceItemReq</name>
  	<Function>
  		<name>chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chapterid() const;
  inline void set_chapterid(::google::protobuf::uint32 value);

  // optional string ItemName = 2;
  inline bool has_itemname() const;
  inline void clear_itemname();
  static const int kItemNameFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceTriggerInstanceItemReq</name>
  	<Function>
  		<name>itemname</name>
  		<replaceName>ItemName</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_itemname</name>
  		<replaceName>ItemName</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_itemname</name>
  		<replaceName>ItemName</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& itemname() const;
  inline void set_itemname(const ::std::string& value);
  inline void set_itemname(const char* value);
  inline void set_itemname(const char* value, size_t size);
  inline ::std::string* mutable_itemname();
  inline ::std::string* release_itemname();
  inline void set_allocated_itemname(::std::string* itemname);

  // optional .pb.TInstanceTriggerInstanceItemExtraArgs ExtraArg = 3;
  inline bool has_extraarg() const;
  inline void clear_extraarg();
  static const int kExtraArgFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInstanceTriggerInstanceItemReq</name>
  	<Function>
  		<name>extraarg</name>
  		<replaceName>ExtraArg</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_extraarg</name>
  		<replaceName>ExtraArg</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_extraarg</name>
  		<replaceName>ExtraArg</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_extraarg</name>
  		<replaceName>ExtraArg</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInstanceTriggerInstanceItemExtraArgs& extraarg() const;
  inline ::pb::TInstanceTriggerInstanceItemExtraArgs* mutable_extraarg();
  inline ::pb::TInstanceTriggerInstanceItemExtraArgs* release_extraarg();
  inline void set_allocated_extraarg(::pb::TInstanceTriggerInstanceItemExtraArgs* extraarg);

  // @@protoc_insertion_point(class_scope:pb.TInstanceTriggerInstanceItemReq)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_itemname();
  inline void clear_has_itemname();
  inline void set_has_extraarg();
  inline void clear_has_extraarg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* itemname_;
  ::pb::TInstanceTriggerInstanceItemExtraArgs* extraarg_;
  ::google::protobuf::uint32 chapterid_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceTriggerInstanceItemReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceTriggerInstanceItemRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceTriggerInstanceItemRsp : public ::google::protobuf::Message {
 public:
  TInstanceTriggerInstanceItemRsp();
  virtual ~TInstanceTriggerInstanceItemRsp();

  TInstanceTriggerInstanceItemRsp(const TInstanceTriggerInstanceItemRsp& from);

  inline TInstanceTriggerInstanceItemRsp& operator=(const TInstanceTriggerInstanceItemRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceTriggerInstanceItemRsp& default_instance();

  void Swap(TInstanceTriggerInstanceItemRsp* other);

  // implements Message ----------------------------------------------

  TInstanceTriggerInstanceItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceTriggerInstanceItemRsp& from);
  void MergeFrom(const TInstanceTriggerInstanceItemRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceTriggerInstanceItemRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TInstanceTriggerInstanceItemRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceTriggerInstanceItemRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceProgressRankInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceProgressRankInfo : public ::google::protobuf::Message {
 public:
  TInstanceProgressRankInfo();
  virtual ~TInstanceProgressRankInfo();

  TInstanceProgressRankInfo(const TInstanceProgressRankInfo& from);

  inline TInstanceProgressRankInfo& operator=(const TInstanceProgressRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceProgressRankInfo& default_instance();

  void Swap(TInstanceProgressRankInfo* other);

  // implements Message ----------------------------------------------

  TInstanceProgressRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceProgressRankInfo& from);
  void MergeFrom(const TInstanceProgressRankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUserSimpleInfo UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceProgressRankInfo</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // optional uint32 StrongholdId = 2;
  inline bool has_strongholdid() const;
  inline void clear_strongholdid();
  static const int kStrongholdIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceProgressRankInfo</name>
  	<Function>
  		<name>strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 strongholdid() const;
  inline void set_strongholdid(::google::protobuf::uint32 value);

  // optional uint32 PassNum = 3;
  inline bool has_passnum() const;
  inline void clear_passnum();
  static const int kPassNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInstanceProgressRankInfo</name>
  	<Function>
  		<name>passnum</name>
  		<replaceName>PassNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_passnum</name>
  		<replaceName>PassNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_passnum</name>
  		<replaceName>PassNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 passnum() const;
  inline void set_passnum(::google::protobuf::uint32 value);

  // optional uint64 StrongholdTime = 4;
  inline bool has_strongholdtime() const;
  inline void clear_strongholdtime();
  static const int kStrongholdTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TInstanceProgressRankInfo</name>
  	<Function>
  		<name>strongholdtime</name>
  		<replaceName>StrongholdTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_strongholdtime</name>
  		<replaceName>StrongholdTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_strongholdtime</name>
  		<replaceName>StrongholdTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 strongholdtime() const;
  inline void set_strongholdtime(::google::protobuf::uint64 value);

  // optional uint32 StarNum = 5;
  inline bool has_starnum() const;
  inline void clear_starnum();
  static const int kStarNumFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TInstanceProgressRankInfo</name>
  	<Function>
  		<name>starnum</name>
  		<replaceName>StarNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_starnum</name>
  		<replaceName>StarNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_starnum</name>
  		<replaceName>StarNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 starnum() const;
  inline void set_starnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TInstanceProgressRankInfo)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_strongholdid();
  inline void clear_has_strongholdid();
  inline void set_has_passnum();
  inline void clear_has_passnum();
  inline void set_has_strongholdtime();
  inline void clear_has_strongholdtime();
  inline void set_has_starnum();
  inline void clear_has_starnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUserSimpleInfo* userinfo_;
  ::google::protobuf::uint32 strongholdid_;
  ::google::protobuf::uint32 passnum_;
  ::google::protobuf::uint64 strongholdtime_;
  ::google::protobuf::uint32 starnum_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceProgressRankInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceGetProgressRankReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceGetProgressRankReq : public ::google::protobuf::Message {
 public:
  TInstanceGetProgressRankReq();
  virtual ~TInstanceGetProgressRankReq();

  TInstanceGetProgressRankReq(const TInstanceGetProgressRankReq& from);

  inline TInstanceGetProgressRankReq& operator=(const TInstanceGetProgressRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceGetProgressRankReq& default_instance();

  void Swap(TInstanceGetProgressRankReq* other);

  // implements Message ----------------------------------------------

  TInstanceGetProgressRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceGetProgressRankReq& from);
  void MergeFrom(const TInstanceGetProgressRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Offset = 1;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceGetProgressRankReq</name>
  	<Function>
  		<name>offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 Limit = 2;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceGetProgressRankReq</name>
  	<Function>
  		<name>limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TInstanceGetProgressRankReq)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceGetProgressRankReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceGetProgressRankRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceGetProgressRankRsp : public ::google::protobuf::Message {
 public:
  TInstanceGetProgressRankRsp();
  virtual ~TInstanceGetProgressRankRsp();

  TInstanceGetProgressRankRsp(const TInstanceGetProgressRankRsp& from);

  inline TInstanceGetProgressRankRsp& operator=(const TInstanceGetProgressRankRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceGetProgressRankRsp& default_instance();

  void Swap(TInstanceGetProgressRankRsp* other);

  // implements Message ----------------------------------------------

  TInstanceGetProgressRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceGetProgressRankRsp& from);
  void MergeFrom(const TInstanceGetProgressRankRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TInstanceProgressRankInfo RankArr = 1;
  inline int rankarr_size() const;
  inline void clear_rankarr();
  static const int kRankArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceGetProgressRankRsp</name>
  	<Function>
  		<name>rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rankarr_size</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInstanceProgressRankInfo& rankarr(int index) const;
  inline ::pb::TInstanceProgressRankInfo* mutable_rankarr(int index);
  inline ::pb::TInstanceProgressRankInfo* add_rankarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TInstanceProgressRankInfo >&
      rankarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TInstanceProgressRankInfo >*
      mutable_rankarr();

  // optional int32 MyRank = 2;
  inline bool has_myrank() const;
  inline void clear_myrank();
  static const int kMyRankFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceGetProgressRankRsp</name>
  	<Function>
  		<name>myrank</name>
  		<replaceName>MyRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_myrank</name>
  		<replaceName>MyRank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_myrank</name>
  		<replaceName>MyRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 myrank() const;
  inline void set_myrank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.TInstanceGetProgressRankRsp)
 private:
  inline void set_has_myrank();
  inline void clear_has_myrank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TInstanceProgressRankInfo > rankarr_;
  ::google::protobuf::int32 myrank_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceGetProgressRankRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceGetBattleReportReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceGetBattleReportReq : public ::google::protobuf::Message {
 public:
  TInstanceGetBattleReportReq();
  virtual ~TInstanceGetBattleReportReq();

  TInstanceGetBattleReportReq(const TInstanceGetBattleReportReq& from);

  inline TInstanceGetBattleReportReq& operator=(const TInstanceGetBattleReportReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceGetBattleReportReq& default_instance();

  void Swap(TInstanceGetBattleReportReq* other);

  // implements Message ----------------------------------------------

  TInstanceGetBattleReportReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceGetBattleReportReq& from);
  void MergeFrom(const TInstanceGetBattleReportReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 StrongholdId = 1;
  inline bool has_strongholdid() const;
  inline void clear_strongholdid();
  static const int kStrongholdIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceGetBattleReportReq</name>
  	<Function>
  		<name>strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 strongholdid() const;
  inline void set_strongholdid(::google::protobuf::uint32 value);

  // optional uint32 ReportType = 2;
  inline bool has_reporttype() const;
  inline void clear_reporttype();
  static const int kReportTypeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceGetBattleReportReq</name>
  	<Function>
  		<name>reporttype</name>
  		<replaceName>ReportType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_reporttype</name>
  		<replaceName>ReportType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_reporttype</name>
  		<replaceName>ReportType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 reporttype() const;
  inline void set_reporttype(::google::protobuf::uint32 value);

  // optional uint32 CampId = 3;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TInstanceGetBattleReportReq</name>
  	<Function>
  		<name>campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_campid</name>
  		<replaceName>CampId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TInstanceGetBattleReportReq)
 private:
  inline void set_has_strongholdid();
  inline void clear_has_strongholdid();
  inline void set_has_reporttype();
  inline void clear_has_reporttype();
  inline void set_has_campid();
  inline void clear_has_campid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 strongholdid_;
  ::google::protobuf::uint32 reporttype_;
  ::google::protobuf::uint32 campid_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceGetBattleReportReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceGetBattleReportRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceGetBattleReportRsp : public ::google::protobuf::Message {
 public:
  TInstanceGetBattleReportRsp();
  virtual ~TInstanceGetBattleReportRsp();

  TInstanceGetBattleReportRsp(const TInstanceGetBattleReportRsp& from);

  inline TInstanceGetBattleReportRsp& operator=(const TInstanceGetBattleReportRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceGetBattleReportRsp& default_instance();

  void Swap(TInstanceGetBattleReportRsp* other);

  // implements Message ----------------------------------------------

  TInstanceGetBattleReportRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceGetBattleReportRsp& from);
  void MergeFrom(const TInstanceGetBattleReportRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TLocalBattleReportSimpleInfo ReportArr = 1;
  inline int reportarr_size() const;
  inline void clear_reportarr();
  static const int kReportArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceGetBattleReportRsp</name>
  	<Function>
  		<name>reportarr</name>
  		<replaceName>ReportArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_reportarr</name>
  		<replaceName>ReportArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_reportarr</name>
  		<replaceName>ReportArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_reportarr</name>
  		<replaceName>ReportArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>reportarr_size</name>
  		<replaceName>ReportArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TLocalBattleReportSimpleInfo& reportarr(int index) const;
  inline ::pb::TLocalBattleReportSimpleInfo* mutable_reportarr(int index);
  inline ::pb::TLocalBattleReportSimpleInfo* add_reportarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TLocalBattleReportSimpleInfo >&
      reportarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TLocalBattleReportSimpleInfo >*
      mutable_reportarr();

  // @@protoc_insertion_point(class_scope:pb.TInstanceGetBattleReportRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TLocalBattleReportSimpleInfo > reportarr_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceGetBattleReportRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TInstanceInfoNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Instance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TInstanceInfoNotify : public ::google::protobuf::Message {
 public:
  TInstanceInfoNotify();
  virtual ~TInstanceInfoNotify();

  TInstanceInfoNotify(const TInstanceInfoNotify& from);

  inline TInstanceInfoNotify& operator=(const TInstanceInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TInstanceInfoNotify& default_instance();

  void Swap(TInstanceInfoNotify* other);

  // implements Message ----------------------------------------------

  TInstanceInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TInstanceInfoNotify& from);
  void MergeFrom(const TInstanceInfoNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
  inline int chapterinfoarray_size() const;
  inline void clear_chapterinfoarray();
  static const int kChapterInfoArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TInstanceInfoNotify</name>
  	<Function>
  		<name>chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>chapterinfoarray_size</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TInstanceChapterInfo& chapterinfoarray(int index) const;
  inline ::pb::TInstanceChapterInfo* mutable_chapterinfoarray(int index);
  inline ::pb::TInstanceChapterInfo* add_chapterinfoarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo >&
      chapterinfoarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo >*
      mutable_chapterinfoarray();

  // optional .pb.TSimpleItem ActiveTreasureItem = 2;
  inline bool has_activetreasureitem() const;
  inline void clear_activetreasureitem();
  static const int kActiveTreasureItemFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TInstanceInfoNotify</name>
  	<Function>
  		<name>activetreasureitem</name>
  		<replaceName>ActiveTreasureItem</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_activetreasureitem</name>
  		<replaceName>ActiveTreasureItem</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_activetreasureitem</name>
  		<replaceName>ActiveTreasureItem</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_activetreasureitem</name>
  		<replaceName>ActiveTreasureItem</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleItem& activetreasureitem() const;
  inline ::pb::TSimpleItem* mutable_activetreasureitem();
  inline ::pb::TSimpleItem* release_activetreasureitem();
  inline void set_allocated_activetreasureitem(::pb::TSimpleItem* activetreasureitem);

  // @@protoc_insertion_point(class_scope:pb.TInstanceInfoNotify)
 private:
  inline void set_has_activetreasureitem();
  inline void clear_has_activetreasureitem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo > chapterinfoarray_;
  ::pb::TSimpleItem* activetreasureitem_;
  friend void  protobuf_AddDesc_net_2fInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fInstance_2eproto();

  void InitAsDefaultInstance();
  static TInstanceInfoNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TInstanceChapterDetailInfo

// repeated .pb.TBChapterStarRewardInfo RewardInfoArray = 1;
inline int TInstanceChapterDetailInfo::rewardinfoarray_size() const {
  return rewardinfoarray_.size();
}
inline void TInstanceChapterDetailInfo::clear_rewardinfoarray() {
  rewardinfoarray_.Clear();
}
inline const ::pb::TBChapterStarRewardInfo& TInstanceChapterDetailInfo::rewardinfoarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterDetailInfo.RewardInfoArray)
  return rewardinfoarray_.Get(index);
}
inline ::pb::TBChapterStarRewardInfo* TInstanceChapterDetailInfo::mutable_rewardinfoarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceChapterDetailInfo.RewardInfoArray)
  return rewardinfoarray_.Mutable(index);
}
inline ::pb::TBChapterStarRewardInfo* TInstanceChapterDetailInfo::add_rewardinfoarray() {
  // @@protoc_insertion_point(field_add:pb.TInstanceChapterDetailInfo.RewardInfoArray)
  return rewardinfoarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TBChapterStarRewardInfo >&
TInstanceChapterDetailInfo::rewardinfoarray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceChapterDetailInfo.RewardInfoArray)
  return rewardinfoarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TBChapterStarRewardInfo >*
TInstanceChapterDetailInfo::mutable_rewardinfoarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceChapterDetailInfo.RewardInfoArray)
  return &rewardinfoarray_;
}

// repeated .pb.TBStrongholdInfo StrongholdArray = 3;
inline int TInstanceChapterDetailInfo::strongholdarray_size() const {
  return strongholdarray_.size();
}
inline void TInstanceChapterDetailInfo::clear_strongholdarray() {
  strongholdarray_.Clear();
}
inline const ::pb::TBStrongholdInfo& TInstanceChapterDetailInfo::strongholdarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterDetailInfo.StrongholdArray)
  return strongholdarray_.Get(index);
}
inline ::pb::TBStrongholdInfo* TInstanceChapterDetailInfo::mutable_strongholdarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceChapterDetailInfo.StrongholdArray)
  return strongholdarray_.Mutable(index);
}
inline ::pb::TBStrongholdInfo* TInstanceChapterDetailInfo::add_strongholdarray() {
  // @@protoc_insertion_point(field_add:pb.TInstanceChapterDetailInfo.StrongholdArray)
  return strongholdarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TBStrongholdInfo >&
TInstanceChapterDetailInfo::strongholdarray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceChapterDetailInfo.StrongholdArray)
  return strongholdarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TBStrongholdInfo >*
TInstanceChapterDetailInfo::mutable_strongholdarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceChapterDetailInfo.StrongholdArray)
  return &strongholdarray_;
}

// repeated .pb.TInstanceItemInfo InstanceItemArray = 4;
inline int TInstanceChapterDetailInfo::instanceitemarray_size() const {
  return instanceitemarray_.size();
}
inline void TInstanceChapterDetailInfo::clear_instanceitemarray() {
  instanceitemarray_.Clear();
}
inline const ::pb::TInstanceItemInfo& TInstanceChapterDetailInfo::instanceitemarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterDetailInfo.InstanceItemArray)
  return instanceitemarray_.Get(index);
}
inline ::pb::TInstanceItemInfo* TInstanceChapterDetailInfo::mutable_instanceitemarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceChapterDetailInfo.InstanceItemArray)
  return instanceitemarray_.Mutable(index);
}
inline ::pb::TInstanceItemInfo* TInstanceChapterDetailInfo::add_instanceitemarray() {
  // @@protoc_insertion_point(field_add:pb.TInstanceChapterDetailInfo.InstanceItemArray)
  return instanceitemarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TInstanceItemInfo >&
TInstanceChapterDetailInfo::instanceitemarray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceChapterDetailInfo.InstanceItemArray)
  return instanceitemarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TInstanceItemInfo >*
TInstanceChapterDetailInfo::mutable_instanceitemarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceChapterDetailInfo.InstanceItemArray)
  return &instanceitemarray_;
}

// -------------------------------------------------------------------

// TInstanceChapterInfo

// optional uint32 ChapterId = 1;
inline bool TInstanceChapterInfo::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceChapterInfo::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceChapterInfo::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceChapterInfo::clear_chapterid() {
  chapterid_ = 0u;
  clear_has_chapterid();
}
inline ::google::protobuf::uint32 TInstanceChapterInfo::chapterid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterInfo.ChapterId)
  return chapterid_;
}
inline void TInstanceChapterInfo::set_chapterid(::google::protobuf::uint32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceChapterInfo.ChapterId)
}

// optional uint32 StarNum = 2;
inline bool TInstanceChapterInfo::has_starnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceChapterInfo::set_has_starnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceChapterInfo::clear_has_starnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceChapterInfo::clear_starnum() {
  starnum_ = 0u;
  clear_has_starnum();
}
inline ::google::protobuf::uint32 TInstanceChapterInfo::starnum() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterInfo.StarNum)
  return starnum_;
}
inline void TInstanceChapterInfo::set_starnum(::google::protobuf::uint32 value) {
  set_has_starnum();
  starnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceChapterInfo.StarNum)
}

// optional bool IsPass = 3;
inline bool TInstanceChapterInfo::has_ispass() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TInstanceChapterInfo::set_has_ispass() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TInstanceChapterInfo::clear_has_ispass() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TInstanceChapterInfo::clear_ispass() {
  ispass_ = false;
  clear_has_ispass();
}
inline bool TInstanceChapterInfo::ispass() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterInfo.IsPass)
  return ispass_;
}
inline void TInstanceChapterInfo::set_ispass(bool value) {
  set_has_ispass();
  ispass_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceChapterInfo.IsPass)
}

// optional uint32 ReceivedStarRewardNum = 4;
inline bool TInstanceChapterInfo::has_receivedstarrewardnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TInstanceChapterInfo::set_has_receivedstarrewardnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TInstanceChapterInfo::clear_has_receivedstarrewardnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TInstanceChapterInfo::clear_receivedstarrewardnum() {
  receivedstarrewardnum_ = 0u;
  clear_has_receivedstarrewardnum();
}
inline ::google::protobuf::uint32 TInstanceChapterInfo::receivedstarrewardnum() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterInfo.ReceivedStarRewardNum)
  return receivedstarrewardnum_;
}
inline void TInstanceChapterInfo::set_receivedstarrewardnum(::google::protobuf::uint32 value) {
  set_has_receivedstarrewardnum();
  receivedstarrewardnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceChapterInfo.ReceivedStarRewardNum)
}

// optional .pb.TInstanceChapterDetailInfo DetailInfo = 5;
inline bool TInstanceChapterInfo::has_detailinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TInstanceChapterInfo::set_has_detailinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TInstanceChapterInfo::clear_has_detailinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TInstanceChapterInfo::clear_detailinfo() {
  if (detailinfo_ != NULL) detailinfo_->::pb::TInstanceChapterDetailInfo::Clear();
  clear_has_detailinfo();
}
inline const ::pb::TInstanceChapterDetailInfo& TInstanceChapterInfo::detailinfo() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterInfo.DetailInfo)
  return detailinfo_ != NULL ? *detailinfo_ : *default_instance_->detailinfo_;
}
inline ::pb::TInstanceChapterDetailInfo* TInstanceChapterInfo::mutable_detailinfo() {
  set_has_detailinfo();
  if (detailinfo_ == NULL) detailinfo_ = new ::pb::TInstanceChapterDetailInfo;
  // @@protoc_insertion_point(field_mutable:pb.TInstanceChapterInfo.DetailInfo)
  return detailinfo_;
}
inline ::pb::TInstanceChapterDetailInfo* TInstanceChapterInfo::release_detailinfo() {
  clear_has_detailinfo();
  ::pb::TInstanceChapterDetailInfo* temp = detailinfo_;
  detailinfo_ = NULL;
  return temp;
}
inline void TInstanceChapterInfo::set_allocated_detailinfo(::pb::TInstanceChapterDetailInfo* detailinfo) {
  delete detailinfo_;
  detailinfo_ = detailinfo;
  if (detailinfo) {
    set_has_detailinfo();
  } else {
    clear_has_detailinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceChapterInfo.DetailInfo)
}

// repeated uint32 PassStrongholdIdArray = 6;
inline int TInstanceChapterInfo::passstrongholdidarray_size() const {
  return passstrongholdidarray_.size();
}
inline void TInstanceChapterInfo::clear_passstrongholdidarray() {
  passstrongholdidarray_.Clear();
}
inline ::google::protobuf::uint32 TInstanceChapterInfo::passstrongholdidarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterInfo.PassStrongholdIdArray)
  return passstrongholdidarray_.Get(index);
}
inline void TInstanceChapterInfo::set_passstrongholdidarray(int index, ::google::protobuf::uint32 value) {
  passstrongholdidarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TInstanceChapterInfo.PassStrongholdIdArray)
}
inline void TInstanceChapterInfo::add_passstrongholdidarray(::google::protobuf::uint32 value) {
  passstrongholdidarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TInstanceChapterInfo.PassStrongholdIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TInstanceChapterInfo::passstrongholdidarray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceChapterInfo.PassStrongholdIdArray)
  return passstrongholdidarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TInstanceChapterInfo::mutable_passstrongholdidarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceChapterInfo.PassStrongholdIdArray)
  return &passstrongholdidarray_;
}

// optional bool IsTriggeredFirstEnterEvent = 7;
inline bool TInstanceChapterInfo::has_istriggeredfirstenterevent() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TInstanceChapterInfo::set_has_istriggeredfirstenterevent() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TInstanceChapterInfo::clear_has_istriggeredfirstenterevent() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TInstanceChapterInfo::clear_istriggeredfirstenterevent() {
  istriggeredfirstenterevent_ = false;
  clear_has_istriggeredfirstenterevent();
}
inline bool TInstanceChapterInfo::istriggeredfirstenterevent() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterInfo.IsTriggeredFirstEnterEvent)
  return istriggeredfirstenterevent_;
}
inline void TInstanceChapterInfo::set_istriggeredfirstenterevent(bool value) {
  set_has_istriggeredfirstenterevent();
  istriggeredfirstenterevent_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceChapterInfo.IsTriggeredFirstEnterEvent)
}

// optional uint32 TriggeredInstanceItemNum = 8;
inline bool TInstanceChapterInfo::has_triggeredinstanceitemnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TInstanceChapterInfo::set_has_triggeredinstanceitemnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TInstanceChapterInfo::clear_has_triggeredinstanceitemnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TInstanceChapterInfo::clear_triggeredinstanceitemnum() {
  triggeredinstanceitemnum_ = 0u;
  clear_has_triggeredinstanceitemnum();
}
inline ::google::protobuf::uint32 TInstanceChapterInfo::triggeredinstanceitemnum() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterInfo.TriggeredInstanceItemNum)
  return triggeredinstanceitemnum_;
}
inline void TInstanceChapterInfo::set_triggeredinstanceitemnum(::google::protobuf::uint32 value) {
  set_has_triggeredinstanceitemnum();
  triggeredinstanceitemnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceChapterInfo.TriggeredInstanceItemNum)
}

// optional uint32 BossStarNum = 9;
inline bool TInstanceChapterInfo::has_bossstarnum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TInstanceChapterInfo::set_has_bossstarnum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TInstanceChapterInfo::clear_has_bossstarnum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TInstanceChapterInfo::clear_bossstarnum() {
  bossstarnum_ = 0u;
  clear_has_bossstarnum();
}
inline ::google::protobuf::uint32 TInstanceChapterInfo::bossstarnum() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterInfo.BossStarNum)
  return bossstarnum_;
}
inline void TInstanceChapterInfo::set_bossstarnum(::google::protobuf::uint32 value) {
  set_has_bossstarnum();
  bossstarnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceChapterInfo.BossStarNum)
}

// -------------------------------------------------------------------

// TInstanceItemInfo

// optional string ItemName = 1;
inline bool TInstanceItemInfo::has_itemname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceItemInfo::set_has_itemname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceItemInfo::clear_has_itemname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceItemInfo::clear_itemname() {
  if (itemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_->clear();
  }
  clear_has_itemname();
}
inline const ::std::string& TInstanceItemInfo::itemname() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceItemInfo.ItemName)
  return *itemname_;
}
inline void TInstanceItemInfo::set_itemname(const ::std::string& value) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TInstanceItemInfo.ItemName)
}
inline void TInstanceItemInfo::set_itemname(const char* value) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TInstanceItemInfo.ItemName)
}
inline void TInstanceItemInfo::set_itemname(const char* value, size_t size) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TInstanceItemInfo.ItemName)
}
inline ::std::string* TInstanceItemInfo::mutable_itemname() {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TInstanceItemInfo.ItemName)
  return itemname_;
}
inline ::std::string* TInstanceItemInfo::release_itemname() {
  clear_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemname_;
    itemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TInstanceItemInfo::set_allocated_itemname(::std::string* itemname) {
  if (itemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemname_;
  }
  if (itemname) {
    set_has_itemname();
    itemname_ = itemname;
  } else {
    clear_has_itemname();
    itemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceItemInfo.ItemName)
}

// optional uint32 ItemType = 2;
inline bool TInstanceItemInfo::has_itemtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceItemInfo::set_has_itemtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceItemInfo::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceItemInfo::clear_itemtype() {
  itemtype_ = 0u;
  clear_has_itemtype();
}
inline ::google::protobuf::uint32 TInstanceItemInfo::itemtype() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceItemInfo.ItemType)
  return itemtype_;
}
inline void TInstanceItemInfo::set_itemtype(::google::protobuf::uint32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceItemInfo.ItemType)
}

// optional uint64 TriggerTime = 3;
inline bool TInstanceItemInfo::has_triggertime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TInstanceItemInfo::set_has_triggertime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TInstanceItemInfo::clear_has_triggertime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TInstanceItemInfo::clear_triggertime() {
  triggertime_ = GOOGLE_ULONGLONG(0);
  clear_has_triggertime();
}
inline ::google::protobuf::uint64 TInstanceItemInfo::triggertime() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceItemInfo.TriggerTime)
  return triggertime_;
}
inline void TInstanceItemInfo::set_triggertime(::google::protobuf::uint64 value) {
  set_has_triggertime();
  triggertime_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceItemInfo.TriggerTime)
}

// -------------------------------------------------------------------

// TInstanceTriggerFirstEnterEventReq

// optional uint32 ChapterId = 1;
inline bool TInstanceTriggerFirstEnterEventReq::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceTriggerFirstEnterEventReq::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceTriggerFirstEnterEventReq::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceTriggerFirstEnterEventReq::clear_chapterid() {
  chapterid_ = 0u;
  clear_has_chapterid();
}
inline ::google::protobuf::uint32 TInstanceTriggerFirstEnterEventReq::chapterid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceTriggerFirstEnterEventReq.ChapterId)
  return chapterid_;
}
inline void TInstanceTriggerFirstEnterEventReq::set_chapterid(::google::protobuf::uint32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceTriggerFirstEnterEventReq.ChapterId)
}

// -------------------------------------------------------------------

// TInstanceInfoReq

// -------------------------------------------------------------------

// TInstanceInfoRsp

// repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
inline int TInstanceInfoRsp::chapterinfoarray_size() const {
  return chapterinfoarray_.size();
}
inline void TInstanceInfoRsp::clear_chapterinfoarray() {
  chapterinfoarray_.Clear();
}
inline const ::pb::TInstanceChapterInfo& TInstanceInfoRsp::chapterinfoarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceInfoRsp.ChapterInfoArray)
  return chapterinfoarray_.Get(index);
}
inline ::pb::TInstanceChapterInfo* TInstanceInfoRsp::mutable_chapterinfoarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceInfoRsp.ChapterInfoArray)
  return chapterinfoarray_.Mutable(index);
}
inline ::pb::TInstanceChapterInfo* TInstanceInfoRsp::add_chapterinfoarray() {
  // @@protoc_insertion_point(field_add:pb.TInstanceInfoRsp.ChapterInfoArray)
  return chapterinfoarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo >&
TInstanceInfoRsp::chapterinfoarray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceInfoRsp.ChapterInfoArray)
  return chapterinfoarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo >*
TInstanceInfoRsp::mutable_chapterinfoarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceInfoRsp.ChapterInfoArray)
  return &chapterinfoarray_;
}

// optional .pb.TSimpleItem ActiveTreasureItem = 2;
inline bool TInstanceInfoRsp::has_activetreasureitem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceInfoRsp::set_has_activetreasureitem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceInfoRsp::clear_has_activetreasureitem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceInfoRsp::clear_activetreasureitem() {
  if (activetreasureitem_ != NULL) activetreasureitem_->::pb::TSimpleItem::Clear();
  clear_has_activetreasureitem();
}
inline const ::pb::TSimpleItem& TInstanceInfoRsp::activetreasureitem() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceInfoRsp.ActiveTreasureItem)
  return activetreasureitem_ != NULL ? *activetreasureitem_ : *default_instance_->activetreasureitem_;
}
inline ::pb::TSimpleItem* TInstanceInfoRsp::mutable_activetreasureitem() {
  set_has_activetreasureitem();
  if (activetreasureitem_ == NULL) activetreasureitem_ = new ::pb::TSimpleItem;
  // @@protoc_insertion_point(field_mutable:pb.TInstanceInfoRsp.ActiveTreasureItem)
  return activetreasureitem_;
}
inline ::pb::TSimpleItem* TInstanceInfoRsp::release_activetreasureitem() {
  clear_has_activetreasureitem();
  ::pb::TSimpleItem* temp = activetreasureitem_;
  activetreasureitem_ = NULL;
  return temp;
}
inline void TInstanceInfoRsp::set_allocated_activetreasureitem(::pb::TSimpleItem* activetreasureitem) {
  delete activetreasureitem_;
  activetreasureitem_ = activetreasureitem;
  if (activetreasureitem) {
    set_has_activetreasureitem();
  } else {
    clear_has_activetreasureitem();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceInfoRsp.ActiveTreasureItem)
}

// -------------------------------------------------------------------

// TInstanceChapterInfoReq

// optional uint32 ChapterId = 1;
inline bool TInstanceChapterInfoReq::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceChapterInfoReq::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceChapterInfoReq::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceChapterInfoReq::clear_chapterid() {
  chapterid_ = 0u;
  clear_has_chapterid();
}
inline ::google::protobuf::uint32 TInstanceChapterInfoReq::chapterid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterInfoReq.ChapterId)
  return chapterid_;
}
inline void TInstanceChapterInfoReq::set_chapterid(::google::protobuf::uint32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceChapterInfoReq.ChapterId)
}

// -------------------------------------------------------------------

// TInstanceChapterInfoRsp

// optional .pb.TInstanceChapterInfo ChapterInfo = 1;
inline bool TInstanceChapterInfoRsp::has_chapterinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceChapterInfoRsp::set_has_chapterinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceChapterInfoRsp::clear_has_chapterinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceChapterInfoRsp::clear_chapterinfo() {
  if (chapterinfo_ != NULL) chapterinfo_->::pb::TInstanceChapterInfo::Clear();
  clear_has_chapterinfo();
}
inline const ::pb::TInstanceChapterInfo& TInstanceChapterInfoRsp::chapterinfo() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceChapterInfoRsp.ChapterInfo)
  return chapterinfo_ != NULL ? *chapterinfo_ : *default_instance_->chapterinfo_;
}
inline ::pb::TInstanceChapterInfo* TInstanceChapterInfoRsp::mutable_chapterinfo() {
  set_has_chapterinfo();
  if (chapterinfo_ == NULL) chapterinfo_ = new ::pb::TInstanceChapterInfo;
  // @@protoc_insertion_point(field_mutable:pb.TInstanceChapterInfoRsp.ChapterInfo)
  return chapterinfo_;
}
inline ::pb::TInstanceChapterInfo* TInstanceChapterInfoRsp::release_chapterinfo() {
  clear_has_chapterinfo();
  ::pb::TInstanceChapterInfo* temp = chapterinfo_;
  chapterinfo_ = NULL;
  return temp;
}
inline void TInstanceChapterInfoRsp::set_allocated_chapterinfo(::pb::TInstanceChapterInfo* chapterinfo) {
  delete chapterinfo_;
  chapterinfo_ = chapterinfo;
  if (chapterinfo) {
    set_has_chapterinfo();
  } else {
    clear_has_chapterinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceChapterInfoRsp.ChapterInfo)
}

// -------------------------------------------------------------------

// TInstanceArrChapterInfoReq

// repeated uint32 ChapterIdArray = 1;
inline int TInstanceArrChapterInfoReq::chapteridarray_size() const {
  return chapteridarray_.size();
}
inline void TInstanceArrChapterInfoReq::clear_chapteridarray() {
  chapteridarray_.Clear();
}
inline ::google::protobuf::uint32 TInstanceArrChapterInfoReq::chapteridarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceArrChapterInfoReq.ChapterIdArray)
  return chapteridarray_.Get(index);
}
inline void TInstanceArrChapterInfoReq::set_chapteridarray(int index, ::google::protobuf::uint32 value) {
  chapteridarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TInstanceArrChapterInfoReq.ChapterIdArray)
}
inline void TInstanceArrChapterInfoReq::add_chapteridarray(::google::protobuf::uint32 value) {
  chapteridarray_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TInstanceArrChapterInfoReq.ChapterIdArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TInstanceArrChapterInfoReq::chapteridarray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceArrChapterInfoReq.ChapterIdArray)
  return chapteridarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TInstanceArrChapterInfoReq::mutable_chapteridarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceArrChapterInfoReq.ChapterIdArray)
  return &chapteridarray_;
}

// -------------------------------------------------------------------

// TInstanceArrChapterInfoRsp

// repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
inline int TInstanceArrChapterInfoRsp::chapterinfoarray_size() const {
  return chapterinfoarray_.size();
}
inline void TInstanceArrChapterInfoRsp::clear_chapterinfoarray() {
  chapterinfoarray_.Clear();
}
inline const ::pb::TInstanceChapterInfo& TInstanceArrChapterInfoRsp::chapterinfoarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceArrChapterInfoRsp.ChapterInfoArray)
  return chapterinfoarray_.Get(index);
}
inline ::pb::TInstanceChapterInfo* TInstanceArrChapterInfoRsp::mutable_chapterinfoarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceArrChapterInfoRsp.ChapterInfoArray)
  return chapterinfoarray_.Mutable(index);
}
inline ::pb::TInstanceChapterInfo* TInstanceArrChapterInfoRsp::add_chapterinfoarray() {
  // @@protoc_insertion_point(field_add:pb.TInstanceArrChapterInfoRsp.ChapterInfoArray)
  return chapterinfoarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo >&
TInstanceArrChapterInfoRsp::chapterinfoarray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceArrChapterInfoRsp.ChapterInfoArray)
  return chapterinfoarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo >*
TInstanceArrChapterInfoRsp::mutable_chapterinfoarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceArrChapterInfoRsp.ChapterInfoArray)
  return &chapterinfoarray_;
}

// -------------------------------------------------------------------

// TInstanceCloseChapterReq

// -------------------------------------------------------------------

// TInstanceDoBattleReq

// optional uint32 ChapterId = 1;
inline bool TInstanceDoBattleReq::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceDoBattleReq::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceDoBattleReq::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceDoBattleReq::clear_chapterid() {
  chapterid_ = 0u;
  clear_has_chapterid();
}
inline ::google::protobuf::uint32 TInstanceDoBattleReq::chapterid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceDoBattleReq.ChapterId)
  return chapterid_;
}
inline void TInstanceDoBattleReq::set_chapterid(::google::protobuf::uint32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceDoBattleReq.ChapterId)
}

// optional uint32 StrongholdId = 2;
inline bool TInstanceDoBattleReq::has_strongholdid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceDoBattleReq::set_has_strongholdid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceDoBattleReq::clear_has_strongholdid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceDoBattleReq::clear_strongholdid() {
  strongholdid_ = 0u;
  clear_has_strongholdid();
}
inline ::google::protobuf::uint32 TInstanceDoBattleReq::strongholdid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceDoBattleReq.StrongholdId)
  return strongholdid_;
}
inline void TInstanceDoBattleReq::set_strongholdid(::google::protobuf::uint32 value) {
  set_has_strongholdid();
  strongholdid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceDoBattleReq.StrongholdId)
}

// optional uint32 StrongholdBattleId = 3;
inline bool TInstanceDoBattleReq::has_strongholdbattleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TInstanceDoBattleReq::set_has_strongholdbattleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TInstanceDoBattleReq::clear_has_strongholdbattleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TInstanceDoBattleReq::clear_strongholdbattleid() {
  strongholdbattleid_ = 0u;
  clear_has_strongholdbattleid();
}
inline ::google::protobuf::uint32 TInstanceDoBattleReq::strongholdbattleid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceDoBattleReq.StrongholdBattleId)
  return strongholdbattleid_;
}
inline void TInstanceDoBattleReq::set_strongholdbattleid(::google::protobuf::uint32 value) {
  set_has_strongholdbattleid();
  strongholdbattleid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceDoBattleReq.StrongholdBattleId)
}

// optional .pb.TBattleCheckParam BattleCheckParam = 4;
inline bool TInstanceDoBattleReq::has_battlecheckparam() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TInstanceDoBattleReq::set_has_battlecheckparam() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TInstanceDoBattleReq::clear_has_battlecheckparam() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TInstanceDoBattleReq::clear_battlecheckparam() {
  if (battlecheckparam_ != NULL) battlecheckparam_->::pb::TBattleCheckParam::Clear();
  clear_has_battlecheckparam();
}
inline const ::pb::TBattleCheckParam& TInstanceDoBattleReq::battlecheckparam() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceDoBattleReq.BattleCheckParam)
  return battlecheckparam_ != NULL ? *battlecheckparam_ : *default_instance_->battlecheckparam_;
}
inline ::pb::TBattleCheckParam* TInstanceDoBattleReq::mutable_battlecheckparam() {
  set_has_battlecheckparam();
  if (battlecheckparam_ == NULL) battlecheckparam_ = new ::pb::TBattleCheckParam;
  // @@protoc_insertion_point(field_mutable:pb.TInstanceDoBattleReq.BattleCheckParam)
  return battlecheckparam_;
}
inline ::pb::TBattleCheckParam* TInstanceDoBattleReq::release_battlecheckparam() {
  clear_has_battlecheckparam();
  ::pb::TBattleCheckParam* temp = battlecheckparam_;
  battlecheckparam_ = NULL;
  return temp;
}
inline void TInstanceDoBattleReq::set_allocated_battlecheckparam(::pb::TBattleCheckParam* battlecheckparam) {
  delete battlecheckparam_;
  battlecheckparam_ = battlecheckparam;
  if (battlecheckparam) {
    set_has_battlecheckparam();
  } else {
    clear_has_battlecheckparam();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceDoBattleReq.BattleCheckParam)
}

// -------------------------------------------------------------------

// TInstanceDoBattleRsp

// repeated .pb.TCommonReward DropArray = 1;
inline int TInstanceDoBattleRsp::droparray_size() const {
  return droparray_.size();
}
inline void TInstanceDoBattleRsp::clear_droparray() {
  droparray_.Clear();
}
inline const ::pb::TCommonReward& TInstanceDoBattleRsp::droparray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceDoBattleRsp.DropArray)
  return droparray_.Get(index);
}
inline ::pb::TCommonReward* TInstanceDoBattleRsp::mutable_droparray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceDoBattleRsp.DropArray)
  return droparray_.Mutable(index);
}
inline ::pb::TCommonReward* TInstanceDoBattleRsp::add_droparray() {
  // @@protoc_insertion_point(field_add:pb.TInstanceDoBattleRsp.DropArray)
  return droparray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TInstanceDoBattleRsp::droparray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceDoBattleRsp.DropArray)
  return droparray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TInstanceDoBattleRsp::mutable_droparray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceDoBattleRsp.DropArray)
  return &droparray_;
}

// optional .pb.TBattleArgs BattleArgs = 2;
inline bool TInstanceDoBattleRsp::has_battleargs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceDoBattleRsp::set_has_battleargs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceDoBattleRsp::clear_has_battleargs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceDoBattleRsp::clear_battleargs() {
  if (battleargs_ != NULL) battleargs_->::pb::TBattleArgs::Clear();
  clear_has_battleargs();
}
inline const ::pb::TBattleArgs& TInstanceDoBattleRsp::battleargs() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceDoBattleRsp.BattleArgs)
  return battleargs_ != NULL ? *battleargs_ : *default_instance_->battleargs_;
}
inline ::pb::TBattleArgs* TInstanceDoBattleRsp::mutable_battleargs() {
  set_has_battleargs();
  if (battleargs_ == NULL) battleargs_ = new ::pb::TBattleArgs;
  // @@protoc_insertion_point(field_mutable:pb.TInstanceDoBattleRsp.BattleArgs)
  return battleargs_;
}
inline ::pb::TBattleArgs* TInstanceDoBattleRsp::release_battleargs() {
  clear_has_battleargs();
  ::pb::TBattleArgs* temp = battleargs_;
  battleargs_ = NULL;
  return temp;
}
inline void TInstanceDoBattleRsp::set_allocated_battleargs(::pb::TBattleArgs* battleargs) {
  delete battleargs_;
  battleargs_ = battleargs;
  if (battleargs) {
    set_has_battleargs();
  } else {
    clear_has_battleargs();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceDoBattleRsp.BattleArgs)
}

// -------------------------------------------------------------------

// TInstanceRaidStrongholdReq

// optional uint32 ChapterId = 1;
inline bool TInstanceRaidStrongholdReq::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceRaidStrongholdReq::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceRaidStrongholdReq::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceRaidStrongholdReq::clear_chapterid() {
  chapterid_ = 0u;
  clear_has_chapterid();
}
inline ::google::protobuf::uint32 TInstanceRaidStrongholdReq::chapterid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceRaidStrongholdReq.ChapterId)
  return chapterid_;
}
inline void TInstanceRaidStrongholdReq::set_chapterid(::google::protobuf::uint32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceRaidStrongholdReq.ChapterId)
}

// optional uint32 StrongholdId = 2;
inline bool TInstanceRaidStrongholdReq::has_strongholdid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceRaidStrongholdReq::set_has_strongholdid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceRaidStrongholdReq::clear_has_strongholdid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceRaidStrongholdReq::clear_strongholdid() {
  strongholdid_ = 0u;
  clear_has_strongholdid();
}
inline ::google::protobuf::uint32 TInstanceRaidStrongholdReq::strongholdid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceRaidStrongholdReq.StrongholdId)
  return strongholdid_;
}
inline void TInstanceRaidStrongholdReq::set_strongholdid(::google::protobuf::uint32 value) {
  set_has_strongholdid();
  strongholdid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceRaidStrongholdReq.StrongholdId)
}

// optional uint32 RaidNum = 3;
inline bool TInstanceRaidStrongholdReq::has_raidnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TInstanceRaidStrongholdReq::set_has_raidnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TInstanceRaidStrongholdReq::clear_has_raidnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TInstanceRaidStrongholdReq::clear_raidnum() {
  raidnum_ = 0u;
  clear_has_raidnum();
}
inline ::google::protobuf::uint32 TInstanceRaidStrongholdReq::raidnum() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceRaidStrongholdReq.RaidNum)
  return raidnum_;
}
inline void TInstanceRaidStrongholdReq::set_raidnum(::google::protobuf::uint32 value) {
  set_has_raidnum();
  raidnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceRaidStrongholdReq.RaidNum)
}

// optional .pb.TCommonReward NeedItemInfo = 4;
inline bool TInstanceRaidStrongholdReq::has_neediteminfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TInstanceRaidStrongholdReq::set_has_neediteminfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TInstanceRaidStrongholdReq::clear_has_neediteminfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TInstanceRaidStrongholdReq::clear_neediteminfo() {
  if (neediteminfo_ != NULL) neediteminfo_->::pb::TCommonReward::Clear();
  clear_has_neediteminfo();
}
inline const ::pb::TCommonReward& TInstanceRaidStrongholdReq::neediteminfo() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceRaidStrongholdReq.NeedItemInfo)
  return neediteminfo_ != NULL ? *neediteminfo_ : *default_instance_->neediteminfo_;
}
inline ::pb::TCommonReward* TInstanceRaidStrongholdReq::mutable_neediteminfo() {
  set_has_neediteminfo();
  if (neediteminfo_ == NULL) neediteminfo_ = new ::pb::TCommonReward;
  // @@protoc_insertion_point(field_mutable:pb.TInstanceRaidStrongholdReq.NeedItemInfo)
  return neediteminfo_;
}
inline ::pb::TCommonReward* TInstanceRaidStrongholdReq::release_neediteminfo() {
  clear_has_neediteminfo();
  ::pb::TCommonReward* temp = neediteminfo_;
  neediteminfo_ = NULL;
  return temp;
}
inline void TInstanceRaidStrongholdReq::set_allocated_neediteminfo(::pb::TCommonReward* neediteminfo) {
  delete neediteminfo_;
  neediteminfo_ = neediteminfo;
  if (neediteminfo) {
    set_has_neediteminfo();
  } else {
    clear_has_neediteminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceRaidStrongholdReq.NeedItemInfo)
}

// -------------------------------------------------------------------

// TInstanceRaidStrongholdSingleDrop

// optional uint32 Num = 1;
inline bool TInstanceRaidStrongholdSingleDrop::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceRaidStrongholdSingleDrop::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceRaidStrongholdSingleDrop::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceRaidStrongholdSingleDrop::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TInstanceRaidStrongholdSingleDrop::num() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceRaidStrongholdSingleDrop.Num)
  return num_;
}
inline void TInstanceRaidStrongholdSingleDrop::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceRaidStrongholdSingleDrop.Num)
}

// repeated .pb.TCommonReward RewardArray = 2;
inline int TInstanceRaidStrongholdSingleDrop::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TInstanceRaidStrongholdSingleDrop::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TInstanceRaidStrongholdSingleDrop::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceRaidStrongholdSingleDrop.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TInstanceRaidStrongholdSingleDrop::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceRaidStrongholdSingleDrop.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TInstanceRaidStrongholdSingleDrop::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TInstanceRaidStrongholdSingleDrop.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TInstanceRaidStrongholdSingleDrop::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceRaidStrongholdSingleDrop.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TInstanceRaidStrongholdSingleDrop::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceRaidStrongholdSingleDrop.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TInstanceRaidStrongholdRsp

// repeated .pb.TInstanceRaidStrongholdSingleDrop DropArray = 1;
inline int TInstanceRaidStrongholdRsp::droparray_size() const {
  return droparray_.size();
}
inline void TInstanceRaidStrongholdRsp::clear_droparray() {
  droparray_.Clear();
}
inline const ::pb::TInstanceRaidStrongholdSingleDrop& TInstanceRaidStrongholdRsp::droparray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceRaidStrongholdRsp.DropArray)
  return droparray_.Get(index);
}
inline ::pb::TInstanceRaidStrongholdSingleDrop* TInstanceRaidStrongholdRsp::mutable_droparray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceRaidStrongholdRsp.DropArray)
  return droparray_.Mutable(index);
}
inline ::pb::TInstanceRaidStrongholdSingleDrop* TInstanceRaidStrongholdRsp::add_droparray() {
  // @@protoc_insertion_point(field_add:pb.TInstanceRaidStrongholdRsp.DropArray)
  return droparray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TInstanceRaidStrongholdSingleDrop >&
TInstanceRaidStrongholdRsp::droparray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceRaidStrongholdRsp.DropArray)
  return droparray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TInstanceRaidStrongholdSingleDrop >*
TInstanceRaidStrongholdRsp::mutable_droparray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceRaidStrongholdRsp.DropArray)
  return &droparray_;
}

// -------------------------------------------------------------------

// TInstanceReportBattleReq

// optional uint32 ChapterId = 1;
inline bool TInstanceReportBattleReq::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceReportBattleReq::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceReportBattleReq::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceReportBattleReq::clear_chapterid() {
  chapterid_ = 0u;
  clear_has_chapterid();
}
inline ::google::protobuf::uint32 TInstanceReportBattleReq::chapterid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceReportBattleReq.ChapterId)
  return chapterid_;
}
inline void TInstanceReportBattleReq::set_chapterid(::google::protobuf::uint32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceReportBattleReq.ChapterId)
}

// optional uint32 StrongholdId = 2;
inline bool TInstanceReportBattleReq::has_strongholdid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceReportBattleReq::set_has_strongholdid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceReportBattleReq::clear_has_strongholdid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceReportBattleReq::clear_strongholdid() {
  strongholdid_ = 0u;
  clear_has_strongholdid();
}
inline ::google::protobuf::uint32 TInstanceReportBattleReq::strongholdid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceReportBattleReq.StrongholdId)
  return strongholdid_;
}
inline void TInstanceReportBattleReq::set_strongholdid(::google::protobuf::uint32 value) {
  set_has_strongholdid();
  strongholdid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceReportBattleReq.StrongholdId)
}

// optional uint32 StrongholdBattleId = 3;
inline bool TInstanceReportBattleReq::has_strongholdbattleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TInstanceReportBattleReq::set_has_strongholdbattleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TInstanceReportBattleReq::clear_has_strongholdbattleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TInstanceReportBattleReq::clear_strongholdbattleid() {
  strongholdbattleid_ = 0u;
  clear_has_strongholdbattleid();
}
inline ::google::protobuf::uint32 TInstanceReportBattleReq::strongholdbattleid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceReportBattleReq.StrongholdBattleId)
  return strongholdbattleid_;
}
inline void TInstanceReportBattleReq::set_strongholdbattleid(::google::protobuf::uint32 value) {
  set_has_strongholdbattleid();
  strongholdbattleid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceReportBattleReq.StrongholdBattleId)
}

// optional .pb.TBattleResult BattleRet = 4;
inline bool TInstanceReportBattleReq::has_battleret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TInstanceReportBattleReq::set_has_battleret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TInstanceReportBattleReq::clear_has_battleret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TInstanceReportBattleReq::clear_battleret() {
  if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
  clear_has_battleret();
}
inline const ::pb::TBattleResult& TInstanceReportBattleReq::battleret() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceReportBattleReq.BattleRet)
  return battleret_ != NULL ? *battleret_ : *default_instance_->battleret_;
}
inline ::pb::TBattleResult* TInstanceReportBattleReq::mutable_battleret() {
  set_has_battleret();
  if (battleret_ == NULL) battleret_ = new ::pb::TBattleResult;
  // @@protoc_insertion_point(field_mutable:pb.TInstanceReportBattleReq.BattleRet)
  return battleret_;
}
inline ::pb::TBattleResult* TInstanceReportBattleReq::release_battleret() {
  clear_has_battleret();
  ::pb::TBattleResult* temp = battleret_;
  battleret_ = NULL;
  return temp;
}
inline void TInstanceReportBattleReq::set_allocated_battleret(::pb::TBattleResult* battleret) {
  delete battleret_;
  battleret_ = battleret;
  if (battleret) {
    set_has_battleret();
  } else {
    clear_has_battleret();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceReportBattleReq.BattleRet)
}

// optional bytes BattleResultBytes = 5;
inline bool TInstanceReportBattleReq::has_battleresultbytes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TInstanceReportBattleReq::set_has_battleresultbytes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TInstanceReportBattleReq::clear_has_battleresultbytes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TInstanceReportBattleReq::clear_battleresultbytes() {
  if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_->clear();
  }
  clear_has_battleresultbytes();
}
inline const ::std::string& TInstanceReportBattleReq::battleresultbytes() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceReportBattleReq.BattleResultBytes)
  return *battleresultbytes_;
}
inline void TInstanceReportBattleReq::set_battleresultbytes(const ::std::string& value) {
  set_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_ = new ::std::string;
  }
  battleresultbytes_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TInstanceReportBattleReq.BattleResultBytes)
}
inline void TInstanceReportBattleReq::set_battleresultbytes(const char* value) {
  set_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_ = new ::std::string;
  }
  battleresultbytes_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TInstanceReportBattleReq.BattleResultBytes)
}
inline void TInstanceReportBattleReq::set_battleresultbytes(const void* value, size_t size) {
  set_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_ = new ::std::string;
  }
  battleresultbytes_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TInstanceReportBattleReq.BattleResultBytes)
}
inline ::std::string* TInstanceReportBattleReq::mutable_battleresultbytes() {
  set_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TInstanceReportBattleReq.BattleResultBytes)
  return battleresultbytes_;
}
inline ::std::string* TInstanceReportBattleReq::release_battleresultbytes() {
  clear_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = battleresultbytes_;
    battleresultbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TInstanceReportBattleReq::set_allocated_battleresultbytes(::std::string* battleresultbytes) {
  if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleresultbytes_;
  }
  if (battleresultbytes) {
    set_has_battleresultbytes();
    battleresultbytes_ = battleresultbytes;
  } else {
    clear_has_battleresultbytes();
    battleresultbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceReportBattleReq.BattleResultBytes)
}

// -------------------------------------------------------------------

// TInstanceReportBattleRsp

// repeated .pb.TCommonReward DropArray = 1;
inline int TInstanceReportBattleRsp::droparray_size() const {
  return droparray_.size();
}
inline void TInstanceReportBattleRsp::clear_droparray() {
  droparray_.Clear();
}
inline const ::pb::TCommonReward& TInstanceReportBattleRsp::droparray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceReportBattleRsp.DropArray)
  return droparray_.Get(index);
}
inline ::pb::TCommonReward* TInstanceReportBattleRsp::mutable_droparray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceReportBattleRsp.DropArray)
  return droparray_.Mutable(index);
}
inline ::pb::TCommonReward* TInstanceReportBattleRsp::add_droparray() {
  // @@protoc_insertion_point(field_add:pb.TInstanceReportBattleRsp.DropArray)
  return droparray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TInstanceReportBattleRsp::droparray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceReportBattleRsp.DropArray)
  return droparray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TInstanceReportBattleRsp::mutable_droparray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceReportBattleRsp.DropArray)
  return &droparray_;
}

// -------------------------------------------------------------------

// TInstanceReceiveStarRewardReq

// optional uint32 ChapterId = 1;
inline bool TInstanceReceiveStarRewardReq::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceReceiveStarRewardReq::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceReceiveStarRewardReq::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceReceiveStarRewardReq::clear_chapterid() {
  chapterid_ = 0u;
  clear_has_chapterid();
}
inline ::google::protobuf::uint32 TInstanceReceiveStarRewardReq::chapterid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceReceiveStarRewardReq.ChapterId)
  return chapterid_;
}
inline void TInstanceReceiveStarRewardReq::set_chapterid(::google::protobuf::uint32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceReceiveStarRewardReq.ChapterId)
}

// optional uint32 StarNum = 2;
inline bool TInstanceReceiveStarRewardReq::has_starnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceReceiveStarRewardReq::set_has_starnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceReceiveStarRewardReq::clear_has_starnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceReceiveStarRewardReq::clear_starnum() {
  starnum_ = 0u;
  clear_has_starnum();
}
inline ::google::protobuf::uint32 TInstanceReceiveStarRewardReq::starnum() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceReceiveStarRewardReq.StarNum)
  return starnum_;
}
inline void TInstanceReceiveStarRewardReq::set_starnum(::google::protobuf::uint32 value) {
  set_has_starnum();
  starnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceReceiveStarRewardReq.StarNum)
}

// -------------------------------------------------------------------

// TInstanceReceiveStarRewardRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TInstanceReceiveStarRewardRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TInstanceReceiveStarRewardRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TInstanceReceiveStarRewardRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceReceiveStarRewardRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TInstanceReceiveStarRewardRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceReceiveStarRewardRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TInstanceReceiveStarRewardRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TInstanceReceiveStarRewardRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TInstanceReceiveStarRewardRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceReceiveStarRewardRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TInstanceReceiveStarRewardRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceReceiveStarRewardRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TInstanceTriggerInstanceItemExtraArgs

// optional uint32 DialogId = 1;
inline bool TInstanceTriggerInstanceItemExtraArgs::has_dialogid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceTriggerInstanceItemExtraArgs::set_has_dialogid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceTriggerInstanceItemExtraArgs::clear_has_dialogid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceTriggerInstanceItemExtraArgs::clear_dialogid() {
  dialogid_ = 0u;
  clear_has_dialogid();
}
inline ::google::protobuf::uint32 TInstanceTriggerInstanceItemExtraArgs::dialogid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceTriggerInstanceItemExtraArgs.DialogId)
  return dialogid_;
}
inline void TInstanceTriggerInstanceItemExtraArgs::set_dialogid(::google::protobuf::uint32 value) {
  set_has_dialogid();
  dialogid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceTriggerInstanceItemExtraArgs.DialogId)
}

// optional .pb.TBattleResult BattleRet = 2;
inline bool TInstanceTriggerInstanceItemExtraArgs::has_battleret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceTriggerInstanceItemExtraArgs::set_has_battleret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceTriggerInstanceItemExtraArgs::clear_has_battleret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceTriggerInstanceItemExtraArgs::clear_battleret() {
  if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
  clear_has_battleret();
}
inline const ::pb::TBattleResult& TInstanceTriggerInstanceItemExtraArgs::battleret() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceTriggerInstanceItemExtraArgs.BattleRet)
  return battleret_ != NULL ? *battleret_ : *default_instance_->battleret_;
}
inline ::pb::TBattleResult* TInstanceTriggerInstanceItemExtraArgs::mutable_battleret() {
  set_has_battleret();
  if (battleret_ == NULL) battleret_ = new ::pb::TBattleResult;
  // @@protoc_insertion_point(field_mutable:pb.TInstanceTriggerInstanceItemExtraArgs.BattleRet)
  return battleret_;
}
inline ::pb::TBattleResult* TInstanceTriggerInstanceItemExtraArgs::release_battleret() {
  clear_has_battleret();
  ::pb::TBattleResult* temp = battleret_;
  battleret_ = NULL;
  return temp;
}
inline void TInstanceTriggerInstanceItemExtraArgs::set_allocated_battleret(::pb::TBattleResult* battleret) {
  delete battleret_;
  battleret_ = battleret;
  if (battleret) {
    set_has_battleret();
  } else {
    clear_has_battleret();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceTriggerInstanceItemExtraArgs.BattleRet)
}

// optional bytes BattleResultBytes = 3;
inline bool TInstanceTriggerInstanceItemExtraArgs::has_battleresultbytes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TInstanceTriggerInstanceItemExtraArgs::set_has_battleresultbytes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TInstanceTriggerInstanceItemExtraArgs::clear_has_battleresultbytes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TInstanceTriggerInstanceItemExtraArgs::clear_battleresultbytes() {
  if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_->clear();
  }
  clear_has_battleresultbytes();
}
inline const ::std::string& TInstanceTriggerInstanceItemExtraArgs::battleresultbytes() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceTriggerInstanceItemExtraArgs.BattleResultBytes)
  return *battleresultbytes_;
}
inline void TInstanceTriggerInstanceItemExtraArgs::set_battleresultbytes(const ::std::string& value) {
  set_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_ = new ::std::string;
  }
  battleresultbytes_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TInstanceTriggerInstanceItemExtraArgs.BattleResultBytes)
}
inline void TInstanceTriggerInstanceItemExtraArgs::set_battleresultbytes(const char* value) {
  set_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_ = new ::std::string;
  }
  battleresultbytes_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TInstanceTriggerInstanceItemExtraArgs.BattleResultBytes)
}
inline void TInstanceTriggerInstanceItemExtraArgs::set_battleresultbytes(const void* value, size_t size) {
  set_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_ = new ::std::string;
  }
  battleresultbytes_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TInstanceTriggerInstanceItemExtraArgs.BattleResultBytes)
}
inline ::std::string* TInstanceTriggerInstanceItemExtraArgs::mutable_battleresultbytes() {
  set_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleresultbytes_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TInstanceTriggerInstanceItemExtraArgs.BattleResultBytes)
  return battleresultbytes_;
}
inline ::std::string* TInstanceTriggerInstanceItemExtraArgs::release_battleresultbytes() {
  clear_has_battleresultbytes();
  if (battleresultbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = battleresultbytes_;
    battleresultbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TInstanceTriggerInstanceItemExtraArgs::set_allocated_battleresultbytes(::std::string* battleresultbytes) {
  if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleresultbytes_;
  }
  if (battleresultbytes) {
    set_has_battleresultbytes();
    battleresultbytes_ = battleresultbytes;
  } else {
    clear_has_battleresultbytes();
    battleresultbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceTriggerInstanceItemExtraArgs.BattleResultBytes)
}

// -------------------------------------------------------------------

// TInstanceTriggerInstanceItemReq

// optional uint32 ChapterId = 1;
inline bool TInstanceTriggerInstanceItemReq::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceTriggerInstanceItemReq::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceTriggerInstanceItemReq::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceTriggerInstanceItemReq::clear_chapterid() {
  chapterid_ = 0u;
  clear_has_chapterid();
}
inline ::google::protobuf::uint32 TInstanceTriggerInstanceItemReq::chapterid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceTriggerInstanceItemReq.ChapterId)
  return chapterid_;
}
inline void TInstanceTriggerInstanceItemReq::set_chapterid(::google::protobuf::uint32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceTriggerInstanceItemReq.ChapterId)
}

// optional string ItemName = 2;
inline bool TInstanceTriggerInstanceItemReq::has_itemname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceTriggerInstanceItemReq::set_has_itemname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceTriggerInstanceItemReq::clear_has_itemname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceTriggerInstanceItemReq::clear_itemname() {
  if (itemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_->clear();
  }
  clear_has_itemname();
}
inline const ::std::string& TInstanceTriggerInstanceItemReq::itemname() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceTriggerInstanceItemReq.ItemName)
  return *itemname_;
}
inline void TInstanceTriggerInstanceItemReq::set_itemname(const ::std::string& value) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TInstanceTriggerInstanceItemReq.ItemName)
}
inline void TInstanceTriggerInstanceItemReq::set_itemname(const char* value) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TInstanceTriggerInstanceItemReq.ItemName)
}
inline void TInstanceTriggerInstanceItemReq::set_itemname(const char* value, size_t size) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TInstanceTriggerInstanceItemReq.ItemName)
}
inline ::std::string* TInstanceTriggerInstanceItemReq::mutable_itemname() {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TInstanceTriggerInstanceItemReq.ItemName)
  return itemname_;
}
inline ::std::string* TInstanceTriggerInstanceItemReq::release_itemname() {
  clear_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemname_;
    itemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TInstanceTriggerInstanceItemReq::set_allocated_itemname(::std::string* itemname) {
  if (itemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemname_;
  }
  if (itemname) {
    set_has_itemname();
    itemname_ = itemname;
  } else {
    clear_has_itemname();
    itemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceTriggerInstanceItemReq.ItemName)
}

// optional .pb.TInstanceTriggerInstanceItemExtraArgs ExtraArg = 3;
inline bool TInstanceTriggerInstanceItemReq::has_extraarg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TInstanceTriggerInstanceItemReq::set_has_extraarg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TInstanceTriggerInstanceItemReq::clear_has_extraarg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TInstanceTriggerInstanceItemReq::clear_extraarg() {
  if (extraarg_ != NULL) extraarg_->::pb::TInstanceTriggerInstanceItemExtraArgs::Clear();
  clear_has_extraarg();
}
inline const ::pb::TInstanceTriggerInstanceItemExtraArgs& TInstanceTriggerInstanceItemReq::extraarg() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceTriggerInstanceItemReq.ExtraArg)
  return extraarg_ != NULL ? *extraarg_ : *default_instance_->extraarg_;
}
inline ::pb::TInstanceTriggerInstanceItemExtraArgs* TInstanceTriggerInstanceItemReq::mutable_extraarg() {
  set_has_extraarg();
  if (extraarg_ == NULL) extraarg_ = new ::pb::TInstanceTriggerInstanceItemExtraArgs;
  // @@protoc_insertion_point(field_mutable:pb.TInstanceTriggerInstanceItemReq.ExtraArg)
  return extraarg_;
}
inline ::pb::TInstanceTriggerInstanceItemExtraArgs* TInstanceTriggerInstanceItemReq::release_extraarg() {
  clear_has_extraarg();
  ::pb::TInstanceTriggerInstanceItemExtraArgs* temp = extraarg_;
  extraarg_ = NULL;
  return temp;
}
inline void TInstanceTriggerInstanceItemReq::set_allocated_extraarg(::pb::TInstanceTriggerInstanceItemExtraArgs* extraarg) {
  delete extraarg_;
  extraarg_ = extraarg;
  if (extraarg) {
    set_has_extraarg();
  } else {
    clear_has_extraarg();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceTriggerInstanceItemReq.ExtraArg)
}

// -------------------------------------------------------------------

// TInstanceTriggerInstanceItemRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TInstanceTriggerInstanceItemRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TInstanceTriggerInstanceItemRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TInstanceTriggerInstanceItemRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceTriggerInstanceItemRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TInstanceTriggerInstanceItemRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceTriggerInstanceItemRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TInstanceTriggerInstanceItemRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TInstanceTriggerInstanceItemRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TInstanceTriggerInstanceItemRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceTriggerInstanceItemRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TInstanceTriggerInstanceItemRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceTriggerInstanceItemRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TInstanceProgressRankInfo

// optional .pb.TUserSimpleInfo UserInfo = 1;
inline bool TInstanceProgressRankInfo::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceProgressRankInfo::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceProgressRankInfo::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceProgressRankInfo::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TInstanceProgressRankInfo::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceProgressRankInfo.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TInstanceProgressRankInfo::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TInstanceProgressRankInfo.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TInstanceProgressRankInfo::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TInstanceProgressRankInfo::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceProgressRankInfo.UserInfo)
}

// optional uint32 StrongholdId = 2;
inline bool TInstanceProgressRankInfo::has_strongholdid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceProgressRankInfo::set_has_strongholdid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceProgressRankInfo::clear_has_strongholdid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceProgressRankInfo::clear_strongholdid() {
  strongholdid_ = 0u;
  clear_has_strongholdid();
}
inline ::google::protobuf::uint32 TInstanceProgressRankInfo::strongholdid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceProgressRankInfo.StrongholdId)
  return strongholdid_;
}
inline void TInstanceProgressRankInfo::set_strongholdid(::google::protobuf::uint32 value) {
  set_has_strongholdid();
  strongholdid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceProgressRankInfo.StrongholdId)
}

// optional uint32 PassNum = 3;
inline bool TInstanceProgressRankInfo::has_passnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TInstanceProgressRankInfo::set_has_passnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TInstanceProgressRankInfo::clear_has_passnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TInstanceProgressRankInfo::clear_passnum() {
  passnum_ = 0u;
  clear_has_passnum();
}
inline ::google::protobuf::uint32 TInstanceProgressRankInfo::passnum() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceProgressRankInfo.PassNum)
  return passnum_;
}
inline void TInstanceProgressRankInfo::set_passnum(::google::protobuf::uint32 value) {
  set_has_passnum();
  passnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceProgressRankInfo.PassNum)
}

// optional uint64 StrongholdTime = 4;
inline bool TInstanceProgressRankInfo::has_strongholdtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TInstanceProgressRankInfo::set_has_strongholdtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TInstanceProgressRankInfo::clear_has_strongholdtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TInstanceProgressRankInfo::clear_strongholdtime() {
  strongholdtime_ = GOOGLE_ULONGLONG(0);
  clear_has_strongholdtime();
}
inline ::google::protobuf::uint64 TInstanceProgressRankInfo::strongholdtime() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceProgressRankInfo.StrongholdTime)
  return strongholdtime_;
}
inline void TInstanceProgressRankInfo::set_strongholdtime(::google::protobuf::uint64 value) {
  set_has_strongholdtime();
  strongholdtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceProgressRankInfo.StrongholdTime)
}

// optional uint32 StarNum = 5;
inline bool TInstanceProgressRankInfo::has_starnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TInstanceProgressRankInfo::set_has_starnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TInstanceProgressRankInfo::clear_has_starnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TInstanceProgressRankInfo::clear_starnum() {
  starnum_ = 0u;
  clear_has_starnum();
}
inline ::google::protobuf::uint32 TInstanceProgressRankInfo::starnum() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceProgressRankInfo.StarNum)
  return starnum_;
}
inline void TInstanceProgressRankInfo::set_starnum(::google::protobuf::uint32 value) {
  set_has_starnum();
  starnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceProgressRankInfo.StarNum)
}

// -------------------------------------------------------------------

// TInstanceGetProgressRankReq

// optional uint32 Offset = 1;
inline bool TInstanceGetProgressRankReq::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceGetProgressRankReq::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceGetProgressRankReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceGetProgressRankReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 TInstanceGetProgressRankReq::offset() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceGetProgressRankReq.Offset)
  return offset_;
}
inline void TInstanceGetProgressRankReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceGetProgressRankReq.Offset)
}

// optional uint32 Limit = 2;
inline bool TInstanceGetProgressRankReq::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceGetProgressRankReq::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceGetProgressRankReq::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceGetProgressRankReq::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 TInstanceGetProgressRankReq::limit() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceGetProgressRankReq.Limit)
  return limit_;
}
inline void TInstanceGetProgressRankReq::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceGetProgressRankReq.Limit)
}

// -------------------------------------------------------------------

// TInstanceGetProgressRankRsp

// repeated .pb.TInstanceProgressRankInfo RankArr = 1;
inline int TInstanceGetProgressRankRsp::rankarr_size() const {
  return rankarr_.size();
}
inline void TInstanceGetProgressRankRsp::clear_rankarr() {
  rankarr_.Clear();
}
inline const ::pb::TInstanceProgressRankInfo& TInstanceGetProgressRankRsp::rankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceGetProgressRankRsp.RankArr)
  return rankarr_.Get(index);
}
inline ::pb::TInstanceProgressRankInfo* TInstanceGetProgressRankRsp::mutable_rankarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceGetProgressRankRsp.RankArr)
  return rankarr_.Mutable(index);
}
inline ::pb::TInstanceProgressRankInfo* TInstanceGetProgressRankRsp::add_rankarr() {
  // @@protoc_insertion_point(field_add:pb.TInstanceGetProgressRankRsp.RankArr)
  return rankarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TInstanceProgressRankInfo >&
TInstanceGetProgressRankRsp::rankarr() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceGetProgressRankRsp.RankArr)
  return rankarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TInstanceProgressRankInfo >*
TInstanceGetProgressRankRsp::mutable_rankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceGetProgressRankRsp.RankArr)
  return &rankarr_;
}

// optional int32 MyRank = 2;
inline bool TInstanceGetProgressRankRsp::has_myrank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceGetProgressRankRsp::set_has_myrank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceGetProgressRankRsp::clear_has_myrank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceGetProgressRankRsp::clear_myrank() {
  myrank_ = 0;
  clear_has_myrank();
}
inline ::google::protobuf::int32 TInstanceGetProgressRankRsp::myrank() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceGetProgressRankRsp.MyRank)
  return myrank_;
}
inline void TInstanceGetProgressRankRsp::set_myrank(::google::protobuf::int32 value) {
  set_has_myrank();
  myrank_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceGetProgressRankRsp.MyRank)
}

// -------------------------------------------------------------------

// TInstanceGetBattleReportReq

// optional uint32 StrongholdId = 1;
inline bool TInstanceGetBattleReportReq::has_strongholdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TInstanceGetBattleReportReq::set_has_strongholdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TInstanceGetBattleReportReq::clear_has_strongholdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TInstanceGetBattleReportReq::clear_strongholdid() {
  strongholdid_ = 0u;
  clear_has_strongholdid();
}
inline ::google::protobuf::uint32 TInstanceGetBattleReportReq::strongholdid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceGetBattleReportReq.StrongholdId)
  return strongholdid_;
}
inline void TInstanceGetBattleReportReq::set_strongholdid(::google::protobuf::uint32 value) {
  set_has_strongholdid();
  strongholdid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceGetBattleReportReq.StrongholdId)
}

// optional uint32 ReportType = 2;
inline bool TInstanceGetBattleReportReq::has_reporttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceGetBattleReportReq::set_has_reporttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceGetBattleReportReq::clear_has_reporttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceGetBattleReportReq::clear_reporttype() {
  reporttype_ = 0u;
  clear_has_reporttype();
}
inline ::google::protobuf::uint32 TInstanceGetBattleReportReq::reporttype() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceGetBattleReportReq.ReportType)
  return reporttype_;
}
inline void TInstanceGetBattleReportReq::set_reporttype(::google::protobuf::uint32 value) {
  set_has_reporttype();
  reporttype_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceGetBattleReportReq.ReportType)
}

// optional uint32 CampId = 3;
inline bool TInstanceGetBattleReportReq::has_campid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TInstanceGetBattleReportReq::set_has_campid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TInstanceGetBattleReportReq::clear_has_campid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TInstanceGetBattleReportReq::clear_campid() {
  campid_ = 0u;
  clear_has_campid();
}
inline ::google::protobuf::uint32 TInstanceGetBattleReportReq::campid() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceGetBattleReportReq.CampId)
  return campid_;
}
inline void TInstanceGetBattleReportReq::set_campid(::google::protobuf::uint32 value) {
  set_has_campid();
  campid_ = value;
  // @@protoc_insertion_point(field_set:pb.TInstanceGetBattleReportReq.CampId)
}

// -------------------------------------------------------------------

// TInstanceGetBattleReportRsp

// repeated .pb.TLocalBattleReportSimpleInfo ReportArr = 1;
inline int TInstanceGetBattleReportRsp::reportarr_size() const {
  return reportarr_.size();
}
inline void TInstanceGetBattleReportRsp::clear_reportarr() {
  reportarr_.Clear();
}
inline const ::pb::TLocalBattleReportSimpleInfo& TInstanceGetBattleReportRsp::reportarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceGetBattleReportRsp.ReportArr)
  return reportarr_.Get(index);
}
inline ::pb::TLocalBattleReportSimpleInfo* TInstanceGetBattleReportRsp::mutable_reportarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceGetBattleReportRsp.ReportArr)
  return reportarr_.Mutable(index);
}
inline ::pb::TLocalBattleReportSimpleInfo* TInstanceGetBattleReportRsp::add_reportarr() {
  // @@protoc_insertion_point(field_add:pb.TInstanceGetBattleReportRsp.ReportArr)
  return reportarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TLocalBattleReportSimpleInfo >&
TInstanceGetBattleReportRsp::reportarr() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceGetBattleReportRsp.ReportArr)
  return reportarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TLocalBattleReportSimpleInfo >*
TInstanceGetBattleReportRsp::mutable_reportarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceGetBattleReportRsp.ReportArr)
  return &reportarr_;
}

// -------------------------------------------------------------------

// TInstanceInfoNotify

// repeated .pb.TInstanceChapterInfo ChapterInfoArray = 1;
inline int TInstanceInfoNotify::chapterinfoarray_size() const {
  return chapterinfoarray_.size();
}
inline void TInstanceInfoNotify::clear_chapterinfoarray() {
  chapterinfoarray_.Clear();
}
inline const ::pb::TInstanceChapterInfo& TInstanceInfoNotify::chapterinfoarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TInstanceInfoNotify.ChapterInfoArray)
  return chapterinfoarray_.Get(index);
}
inline ::pb::TInstanceChapterInfo* TInstanceInfoNotify::mutable_chapterinfoarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TInstanceInfoNotify.ChapterInfoArray)
  return chapterinfoarray_.Mutable(index);
}
inline ::pb::TInstanceChapterInfo* TInstanceInfoNotify::add_chapterinfoarray() {
  // @@protoc_insertion_point(field_add:pb.TInstanceInfoNotify.ChapterInfoArray)
  return chapterinfoarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo >&
TInstanceInfoNotify::chapterinfoarray() const {
  // @@protoc_insertion_point(field_list:pb.TInstanceInfoNotify.ChapterInfoArray)
  return chapterinfoarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TInstanceChapterInfo >*
TInstanceInfoNotify::mutable_chapterinfoarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TInstanceInfoNotify.ChapterInfoArray)
  return &chapterinfoarray_;
}

// optional .pb.TSimpleItem ActiveTreasureItem = 2;
inline bool TInstanceInfoNotify::has_activetreasureitem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TInstanceInfoNotify::set_has_activetreasureitem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TInstanceInfoNotify::clear_has_activetreasureitem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TInstanceInfoNotify::clear_activetreasureitem() {
  if (activetreasureitem_ != NULL) activetreasureitem_->::pb::TSimpleItem::Clear();
  clear_has_activetreasureitem();
}
inline const ::pb::TSimpleItem& TInstanceInfoNotify::activetreasureitem() const {
  // @@protoc_insertion_point(field_get:pb.TInstanceInfoNotify.ActiveTreasureItem)
  return activetreasureitem_ != NULL ? *activetreasureitem_ : *default_instance_->activetreasureitem_;
}
inline ::pb::TSimpleItem* TInstanceInfoNotify::mutable_activetreasureitem() {
  set_has_activetreasureitem();
  if (activetreasureitem_ == NULL) activetreasureitem_ = new ::pb::TSimpleItem;
  // @@protoc_insertion_point(field_mutable:pb.TInstanceInfoNotify.ActiveTreasureItem)
  return activetreasureitem_;
}
inline ::pb::TSimpleItem* TInstanceInfoNotify::release_activetreasureitem() {
  clear_has_activetreasureitem();
  ::pb::TSimpleItem* temp = activetreasureitem_;
  activetreasureitem_ = NULL;
  return temp;
}
inline void TInstanceInfoNotify::set_allocated_activetreasureitem(::pb::TSimpleItem* activetreasureitem) {
  delete activetreasureitem_;
  activetreasureitem_ = activetreasureitem;
  if (activetreasureitem) {
    set_has_activetreasureitem();
  } else {
    clear_has_activetreasureitem();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TInstanceInfoNotify.ActiveTreasureItem)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fInstance_2eproto__INCLUDED
