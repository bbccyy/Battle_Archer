// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module/SkillBaseData2.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "module/SkillBaseData2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* SkillLevelSubSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillLevelSubSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* SkillLevelSubBuff_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillLevelSubBuff_reflection_ = NULL;
const ::google::protobuf::Descriptor* SkillLevelProbSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillLevelProbSkill_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_module_2fSkillBaseData2_2eproto() {
  protobuf_AddDesc_module_2fSkillBaseData2_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "module/SkillBaseData2.proto");
  GOOGLE_CHECK(file != NULL);
  SkillLevelSubSkill_descriptor_ = file->message_type(0);
  static const int SkillLevelSubSkill_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelSubSkill, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelSubSkill, id_),
  };
  SkillLevelSubSkill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillLevelSubSkill_descriptor_,
      SkillLevelSubSkill::default_instance_,
      SkillLevelSubSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelSubSkill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelSubSkill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillLevelSubSkill));
  SkillLevelSubBuff_descriptor_ = file->message_type(1);
  static const int SkillLevelSubBuff_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelSubBuff, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelSubBuff, id_),
  };
  SkillLevelSubBuff_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillLevelSubBuff_descriptor_,
      SkillLevelSubBuff::default_instance_,
      SkillLevelSubBuff_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelSubBuff, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelSubBuff, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillLevelSubBuff));
  SkillLevelProbSkill_descriptor_ = file->message_type(2);
  static const int SkillLevelProbSkill_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelProbSkill, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelProbSkill, probabilisticparams_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelProbSkill, probabilisticskills_),
  };
  SkillLevelProbSkill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillLevelProbSkill_descriptor_,
      SkillLevelProbSkill::default_instance_,
      SkillLevelProbSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelProbSkill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelProbSkill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillLevelProbSkill));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_module_2fSkillBaseData2_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillLevelSubSkill_descriptor_, &SkillLevelSubSkill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillLevelSubBuff_descriptor_, &SkillLevelSubBuff::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillLevelProbSkill_descriptor_, &SkillLevelProbSkill::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_module_2fSkillBaseData2_2eproto() {
  delete SkillLevelSubSkill::default_instance_;
  delete SkillLevelSubSkill_reflection_;
  delete SkillLevelSubBuff::default_instance_;
  delete SkillLevelSubBuff_reflection_;
  delete SkillLevelProbSkill::default_instance_;
  delete SkillLevelProbSkill_reflection_;
}

void protobuf_AddDesc_module_2fSkillBaseData2_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033module/SkillBaseData2.proto\022\002pb\"/\n\022Ski"
    "llLevelSubSkill\022\r\n\005Level\030\001 \001(\005\022\n\n\002ID\030\002 \003"
    "(\005\".\n\021SkillLevelSubBuff\022\r\n\005Level\030\001 \001(\005\022\n"
    "\n\002ID\030\002 \003(\005\"^\n\023SkillLevelProbSkill\022\r\n\005Lev"
    "el\030\001 \001(\005\022\033\n\023ProbabilisticParams\030\002 \003(\005\022\033\n"
    "\023ProbabilisticSkills\030\003 \003(\005", 226);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "module/SkillBaseData2.proto", &protobuf_RegisterTypes);
  SkillLevelSubSkill::default_instance_ = new SkillLevelSubSkill();
  SkillLevelSubBuff::default_instance_ = new SkillLevelSubBuff();
  SkillLevelProbSkill::default_instance_ = new SkillLevelProbSkill();
  SkillLevelSubSkill::default_instance_->InitAsDefaultInstance();
  SkillLevelSubBuff::default_instance_->InitAsDefaultInstance();
  SkillLevelProbSkill::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_module_2fSkillBaseData2_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_module_2fSkillBaseData2_2eproto {
  StaticDescriptorInitializer_module_2fSkillBaseData2_2eproto() {
    protobuf_AddDesc_module_2fSkillBaseData2_2eproto();
  }
} static_descriptor_initializer_module_2fSkillBaseData2_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SkillLevelSubSkill::kLevelFieldNumber;
const int SkillLevelSubSkill::kIDFieldNumber;
#endif  // !_MSC_VER

SkillLevelSubSkill::SkillLevelSubSkill()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.SkillLevelSubSkill)
}

void SkillLevelSubSkill::InitAsDefaultInstance() {
}

SkillLevelSubSkill::SkillLevelSubSkill(const SkillLevelSubSkill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.SkillLevelSubSkill)
}

void SkillLevelSubSkill::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillLevelSubSkill::~SkillLevelSubSkill() {
  // @@protoc_insertion_point(destructor:pb.SkillLevelSubSkill)
  SharedDtor();
}

void SkillLevelSubSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillLevelSubSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillLevelSubSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillLevelSubSkill_descriptor_;
}

const SkillLevelSubSkill& SkillLevelSubSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fSkillBaseData2_2eproto();
  return *default_instance_;
}

SkillLevelSubSkill* SkillLevelSubSkill::default_instance_ = NULL;

SkillLevelSubSkill* SkillLevelSubSkill::New() const {
  return new SkillLevelSubSkill;
}

void SkillLevelSubSkill::Clear() {
  level_ = 0;
  id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillLevelSubSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.SkillLevelSubSkill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ID;
        break;
      }

      // repeated int32 ID = 2;
      case 2: {
        if (tag == 16) {
         parse_ID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_id())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ID;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.SkillLevelSubSkill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.SkillLevelSubSkill)
  return false;
#undef DO_
}

void SkillLevelSubSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.SkillLevelSubSkill)
  // optional int32 Level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // repeated int32 ID = 2;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.SkillLevelSubSkill)
}

::google::protobuf::uint8* SkillLevelSubSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SkillLevelSubSkill)
  // optional int32 Level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // repeated int32 ID = 2;
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SkillLevelSubSkill)
  return target;
}

int SkillLevelSubSkill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  // repeated int32 ID = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->id(i));
    }
    total_size += 1 * this->id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillLevelSubSkill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillLevelSubSkill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillLevelSubSkill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillLevelSubSkill::MergeFrom(const SkillLevelSubSkill& from) {
  GOOGLE_CHECK_NE(&from, this);
  id_.MergeFrom(from.id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillLevelSubSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillLevelSubSkill::CopyFrom(const SkillLevelSubSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillLevelSubSkill::IsInitialized() const {

  return true;
}

void SkillLevelSubSkill::Swap(SkillLevelSubSkill* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    id_.Swap(&other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillLevelSubSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillLevelSubSkill_descriptor_;
  metadata.reflection = SkillLevelSubSkill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SkillLevelSubBuff::kLevelFieldNumber;
const int SkillLevelSubBuff::kIDFieldNumber;
#endif  // !_MSC_VER

SkillLevelSubBuff::SkillLevelSubBuff()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.SkillLevelSubBuff)
}

void SkillLevelSubBuff::InitAsDefaultInstance() {
}

SkillLevelSubBuff::SkillLevelSubBuff(const SkillLevelSubBuff& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.SkillLevelSubBuff)
}

void SkillLevelSubBuff::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillLevelSubBuff::~SkillLevelSubBuff() {
  // @@protoc_insertion_point(destructor:pb.SkillLevelSubBuff)
  SharedDtor();
}

void SkillLevelSubBuff::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillLevelSubBuff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillLevelSubBuff::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillLevelSubBuff_descriptor_;
}

const SkillLevelSubBuff& SkillLevelSubBuff::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fSkillBaseData2_2eproto();
  return *default_instance_;
}

SkillLevelSubBuff* SkillLevelSubBuff::default_instance_ = NULL;

SkillLevelSubBuff* SkillLevelSubBuff::New() const {
  return new SkillLevelSubBuff;
}

void SkillLevelSubBuff::Clear() {
  level_ = 0;
  id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillLevelSubBuff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.SkillLevelSubBuff)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ID;
        break;
      }

      // repeated int32 ID = 2;
      case 2: {
        if (tag == 16) {
         parse_ID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_id())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ID;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.SkillLevelSubBuff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.SkillLevelSubBuff)
  return false;
#undef DO_
}

void SkillLevelSubBuff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.SkillLevelSubBuff)
  // optional int32 Level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // repeated int32 ID = 2;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.SkillLevelSubBuff)
}

::google::protobuf::uint8* SkillLevelSubBuff::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SkillLevelSubBuff)
  // optional int32 Level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // repeated int32 ID = 2;
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SkillLevelSubBuff)
  return target;
}

int SkillLevelSubBuff::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  // repeated int32 ID = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->id(i));
    }
    total_size += 1 * this->id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillLevelSubBuff::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillLevelSubBuff* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillLevelSubBuff*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillLevelSubBuff::MergeFrom(const SkillLevelSubBuff& from) {
  GOOGLE_CHECK_NE(&from, this);
  id_.MergeFrom(from.id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillLevelSubBuff::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillLevelSubBuff::CopyFrom(const SkillLevelSubBuff& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillLevelSubBuff::IsInitialized() const {

  return true;
}

void SkillLevelSubBuff::Swap(SkillLevelSubBuff* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    id_.Swap(&other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillLevelSubBuff::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillLevelSubBuff_descriptor_;
  metadata.reflection = SkillLevelSubBuff_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SkillLevelProbSkill::kLevelFieldNumber;
const int SkillLevelProbSkill::kProbabilisticParamsFieldNumber;
const int SkillLevelProbSkill::kProbabilisticSkillsFieldNumber;
#endif  // !_MSC_VER

SkillLevelProbSkill::SkillLevelProbSkill()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.SkillLevelProbSkill)
}

void SkillLevelProbSkill::InitAsDefaultInstance() {
}

SkillLevelProbSkill::SkillLevelProbSkill(const SkillLevelProbSkill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.SkillLevelProbSkill)
}

void SkillLevelProbSkill::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillLevelProbSkill::~SkillLevelProbSkill() {
  // @@protoc_insertion_point(destructor:pb.SkillLevelProbSkill)
  SharedDtor();
}

void SkillLevelProbSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillLevelProbSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillLevelProbSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillLevelProbSkill_descriptor_;
}

const SkillLevelProbSkill& SkillLevelProbSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fSkillBaseData2_2eproto();
  return *default_instance_;
}

SkillLevelProbSkill* SkillLevelProbSkill::default_instance_ = NULL;

SkillLevelProbSkill* SkillLevelProbSkill::New() const {
  return new SkillLevelProbSkill;
}

void SkillLevelProbSkill::Clear() {
  level_ = 0;
  probabilisticparams_.Clear();
  probabilisticskills_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillLevelProbSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.SkillLevelProbSkill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ProbabilisticParams;
        break;
      }

      // repeated int32 ProbabilisticParams = 2;
      case 2: {
        if (tag == 16) {
         parse_ProbabilisticParams:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_probabilisticparams())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_probabilisticparams())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ProbabilisticParams;
        if (input->ExpectTag(24)) goto parse_ProbabilisticSkills;
        break;
      }

      // repeated int32 ProbabilisticSkills = 3;
      case 3: {
        if (tag == 24) {
         parse_ProbabilisticSkills:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_probabilisticskills())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_probabilisticskills())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ProbabilisticSkills;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.SkillLevelProbSkill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.SkillLevelProbSkill)
  return false;
#undef DO_
}

void SkillLevelProbSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.SkillLevelProbSkill)
  // optional int32 Level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // repeated int32 ProbabilisticParams = 2;
  for (int i = 0; i < this->probabilisticparams_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->probabilisticparams(i), output);
  }

  // repeated int32 ProbabilisticSkills = 3;
  for (int i = 0; i < this->probabilisticskills_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->probabilisticskills(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.SkillLevelProbSkill)
}

::google::protobuf::uint8* SkillLevelProbSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SkillLevelProbSkill)
  // optional int32 Level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // repeated int32 ProbabilisticParams = 2;
  for (int i = 0; i < this->probabilisticparams_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->probabilisticparams(i), target);
  }

  // repeated int32 ProbabilisticSkills = 3;
  for (int i = 0; i < this->probabilisticskills_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->probabilisticskills(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SkillLevelProbSkill)
  return target;
}

int SkillLevelProbSkill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  // repeated int32 ProbabilisticParams = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->probabilisticparams_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->probabilisticparams(i));
    }
    total_size += 1 * this->probabilisticparams_size() + data_size;
  }

  // repeated int32 ProbabilisticSkills = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->probabilisticskills_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->probabilisticskills(i));
    }
    total_size += 1 * this->probabilisticskills_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillLevelProbSkill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillLevelProbSkill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillLevelProbSkill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillLevelProbSkill::MergeFrom(const SkillLevelProbSkill& from) {
  GOOGLE_CHECK_NE(&from, this);
  probabilisticparams_.MergeFrom(from.probabilisticparams_);
  probabilisticskills_.MergeFrom(from.probabilisticskills_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillLevelProbSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillLevelProbSkill::CopyFrom(const SkillLevelProbSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillLevelProbSkill::IsInitialized() const {

  return true;
}

void SkillLevelProbSkill::Swap(SkillLevelProbSkill* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    probabilisticparams_.Swap(&other->probabilisticparams_);
    probabilisticskills_.Swap(&other->probabilisticskills_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillLevelProbSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillLevelProbSkill_descriptor_;
  metadata.reflection = SkillLevelProbSkill_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
