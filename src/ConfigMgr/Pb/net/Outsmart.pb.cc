// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Outsmart.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/Outsmart.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TOutsmartHidPosInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartHidPosInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartFmtInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartFmtInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartSiteInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartSiteInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartSetFormationReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartSetFormationReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartGetBattleArgsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartGetBattleArgsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartGetBattleArgsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartGetBattleArgsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartReportBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartReportBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartReportBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartReportBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartChooseBuffReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartChooseBuffReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartBuyChallengeNumReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartBuyChallengeNumReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartReceiveSettleRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartReceiveSettleRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartGarrisonReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartGarrisonReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartSweepReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartSweepReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartSweepRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartSweepRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartGarrisonInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartGarrisonInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TOutsmartOneKeyGarrisonReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TOutsmartOneKeyGarrisonReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fOutsmart_2eproto() {
  protobuf_AddDesc_net_2fOutsmart_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/Outsmart.proto");
  GOOGLE_CHECK(file != NULL);
  TOutsmartHidPosInfo_descriptor_ = file->message_type(0);
  static const int TOutsmartHidPosInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartHidPosInfo, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartHidPosInfo, pos_),
  };
  TOutsmartHidPosInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartHidPosInfo_descriptor_,
      TOutsmartHidPosInfo::default_instance_,
      TOutsmartHidPosInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartHidPosInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartHidPosInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartHidPosInfo));
  TOutsmartFmtInfo_descriptor_ = file->message_type(1);
  static const int TOutsmartFmtInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartFmtInfo, formationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartFmtInfo, hidposarr_),
  };
  TOutsmartFmtInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartFmtInfo_descriptor_,
      TOutsmartFmtInfo::default_instance_,
      TOutsmartFmtInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartFmtInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartFmtInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartFmtInfo));
  TOutsmartSiteInfo_descriptor_ = file->message_type(2);
  static const int TOutsmartSiteInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSiteInfo, siteid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSiteInfo, monsterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSiteInfo, buffid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSiteInfo, firstpasstime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSiteInfo, buffidarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSiteInfo, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSiteInfo, failnum_),
  };
  TOutsmartSiteInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartSiteInfo_descriptor_,
      TOutsmartSiteInfo::default_instance_,
      TOutsmartSiteInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSiteInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSiteInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartSiteInfo));
  TOutsmartGetInfoRsp_descriptor_ = file->message_type(3);
  static const int TOutsmartGetInfoRsp_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetInfoRsp, challengenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetInfoRsp, buychallengenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetInfoRsp, refreshtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetInfoRsp, fmtarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetInfoRsp, siteinfoarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetInfoRsp, buffidarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetInfoRsp, rewardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetInfoRsp, settletime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetInfoRsp, rewardarr_),
  };
  TOutsmartGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartGetInfoRsp_descriptor_,
      TOutsmartGetInfoRsp::default_instance_,
      TOutsmartGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartGetInfoRsp));
  TOutsmartSetFormationReq_descriptor_ = file->message_type(4);
  static const int TOutsmartSetFormationReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSetFormationReq, formationarr_),
  };
  TOutsmartSetFormationReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartSetFormationReq_descriptor_,
      TOutsmartSetFormationReq::default_instance_,
      TOutsmartSetFormationReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSetFormationReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSetFormationReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartSetFormationReq));
  TOutsmartGetBattleArgsReq_descriptor_ = file->message_type(5);
  static const int TOutsmartGetBattleArgsReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetBattleArgsReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetBattleArgsReq, refreshtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetBattleArgsReq, battlecheckparam_),
  };
  TOutsmartGetBattleArgsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartGetBattleArgsReq_descriptor_,
      TOutsmartGetBattleArgsReq::default_instance_,
      TOutsmartGetBattleArgsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetBattleArgsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetBattleArgsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartGetBattleArgsReq));
  TOutsmartGetBattleArgsRsp_descriptor_ = file->message_type(6);
  static const int TOutsmartGetBattleArgsRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetBattleArgsRsp, battleargsarr_),
  };
  TOutsmartGetBattleArgsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartGetBattleArgsRsp_descriptor_,
      TOutsmartGetBattleArgsRsp::default_instance_,
      TOutsmartGetBattleArgsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetBattleArgsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGetBattleArgsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartGetBattleArgsRsp));
  TOutsmartReportBattleReq_descriptor_ = file->message_type(7);
  static const int TOutsmartReportBattleReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReportBattleReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReportBattleReq, refreshtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReportBattleReq, battleretarr_),
  };
  TOutsmartReportBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartReportBattleReq_descriptor_,
      TOutsmartReportBattleReq::default_instance_,
      TOutsmartReportBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReportBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReportBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartReportBattleReq));
  TOutsmartReportBattleRsp_descriptor_ = file->message_type(8);
  static const int TOutsmartReportBattleRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReportBattleRsp, iswin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReportBattleRsp, isfirst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReportBattleRsp, rewardarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReportBattleRsp, buffidarr_),
  };
  TOutsmartReportBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartReportBattleRsp_descriptor_,
      TOutsmartReportBattleRsp::default_instance_,
      TOutsmartReportBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReportBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReportBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartReportBattleRsp));
  TOutsmartChooseBuffReq_descriptor_ = file->message_type(9);
  static const int TOutsmartChooseBuffReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartChooseBuffReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartChooseBuffReq, refreshtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartChooseBuffReq, buffid_),
  };
  TOutsmartChooseBuffReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartChooseBuffReq_descriptor_,
      TOutsmartChooseBuffReq::default_instance_,
      TOutsmartChooseBuffReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartChooseBuffReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartChooseBuffReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartChooseBuffReq));
  TOutsmartBuyChallengeNumReq_descriptor_ = file->message_type(10);
  static const int TOutsmartBuyChallengeNumReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartBuyChallengeNumReq, num_),
  };
  TOutsmartBuyChallengeNumReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartBuyChallengeNumReq_descriptor_,
      TOutsmartBuyChallengeNumReq::default_instance_,
      TOutsmartBuyChallengeNumReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartBuyChallengeNumReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartBuyChallengeNumReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartBuyChallengeNumReq));
  TOutsmartReceiveSettleRewardRsp_descriptor_ = file->message_type(11);
  static const int TOutsmartReceiveSettleRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReceiveSettleRewardRsp, rewardarr_),
  };
  TOutsmartReceiveSettleRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartReceiveSettleRewardRsp_descriptor_,
      TOutsmartReceiveSettleRewardRsp::default_instance_,
      TOutsmartReceiveSettleRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReceiveSettleRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartReceiveSettleRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartReceiveSettleRewardRsp));
  TOutsmartGarrisonReq_descriptor_ = file->message_type(12);
  static const int TOutsmartGarrisonReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGarrisonReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGarrisonReq, hid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGarrisonReq, oriid_),
  };
  TOutsmartGarrisonReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartGarrisonReq_descriptor_,
      TOutsmartGarrisonReq::default_instance_,
      TOutsmartGarrisonReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGarrisonReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGarrisonReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartGarrisonReq));
  TOutsmartSweepReq_descriptor_ = file->message_type(13);
  static const int TOutsmartSweepReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSweepReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSweepReq, refreshtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSweepReq, swtype_),
  };
  TOutsmartSweepReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartSweepReq_descriptor_,
      TOutsmartSweepReq::default_instance_,
      TOutsmartSweepReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSweepReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSweepReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartSweepReq));
  TOutsmartSweepRsp_descriptor_ = file->message_type(14);
  static const int TOutsmartSweepRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSweepRsp, rewardarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSweepRsp, buffidarr_),
  };
  TOutsmartSweepRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartSweepRsp_descriptor_,
      TOutsmartSweepRsp::default_instance_,
      TOutsmartSweepRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSweepRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartSweepRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartSweepRsp));
  TOutsmartGarrisonInfo_descriptor_ = file->message_type(15);
  static const int TOutsmartGarrisonInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGarrisonInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGarrisonInfo, hid_),
  };
  TOutsmartGarrisonInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartGarrisonInfo_descriptor_,
      TOutsmartGarrisonInfo::default_instance_,
      TOutsmartGarrisonInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGarrisonInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartGarrisonInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartGarrisonInfo));
  TOutsmartOneKeyGarrisonReq_descriptor_ = file->message_type(16);
  static const int TOutsmartOneKeyGarrisonReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartOneKeyGarrisonReq, garrisoninfoarr_),
  };
  TOutsmartOneKeyGarrisonReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TOutsmartOneKeyGarrisonReq_descriptor_,
      TOutsmartOneKeyGarrisonReq::default_instance_,
      TOutsmartOneKeyGarrisonReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartOneKeyGarrisonReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TOutsmartOneKeyGarrisonReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TOutsmartOneKeyGarrisonReq));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fOutsmart_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartHidPosInfo_descriptor_, &TOutsmartHidPosInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartFmtInfo_descriptor_, &TOutsmartFmtInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartSiteInfo_descriptor_, &TOutsmartSiteInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartGetInfoRsp_descriptor_, &TOutsmartGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartSetFormationReq_descriptor_, &TOutsmartSetFormationReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartGetBattleArgsReq_descriptor_, &TOutsmartGetBattleArgsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartGetBattleArgsRsp_descriptor_, &TOutsmartGetBattleArgsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartReportBattleReq_descriptor_, &TOutsmartReportBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartReportBattleRsp_descriptor_, &TOutsmartReportBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartChooseBuffReq_descriptor_, &TOutsmartChooseBuffReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartBuyChallengeNumReq_descriptor_, &TOutsmartBuyChallengeNumReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartReceiveSettleRewardRsp_descriptor_, &TOutsmartReceiveSettleRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartGarrisonReq_descriptor_, &TOutsmartGarrisonReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartSweepReq_descriptor_, &TOutsmartSweepReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartSweepRsp_descriptor_, &TOutsmartSweepRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartGarrisonInfo_descriptor_, &TOutsmartGarrisonInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TOutsmartOneKeyGarrisonReq_descriptor_, &TOutsmartOneKeyGarrisonReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fOutsmart_2eproto() {
  delete TOutsmartHidPosInfo::default_instance_;
  delete TOutsmartHidPosInfo_reflection_;
  delete TOutsmartFmtInfo::default_instance_;
  delete TOutsmartFmtInfo_reflection_;
  delete TOutsmartSiteInfo::default_instance_;
  delete TOutsmartSiteInfo_reflection_;
  delete TOutsmartGetInfoRsp::default_instance_;
  delete TOutsmartGetInfoRsp_reflection_;
  delete TOutsmartSetFormationReq::default_instance_;
  delete TOutsmartSetFormationReq_reflection_;
  delete TOutsmartGetBattleArgsReq::default_instance_;
  delete TOutsmartGetBattleArgsReq_reflection_;
  delete TOutsmartGetBattleArgsRsp::default_instance_;
  delete TOutsmartGetBattleArgsRsp_reflection_;
  delete TOutsmartReportBattleReq::default_instance_;
  delete TOutsmartReportBattleReq_reflection_;
  delete TOutsmartReportBattleRsp::default_instance_;
  delete TOutsmartReportBattleRsp_reflection_;
  delete TOutsmartChooseBuffReq::default_instance_;
  delete TOutsmartChooseBuffReq_reflection_;
  delete TOutsmartBuyChallengeNumReq::default_instance_;
  delete TOutsmartBuyChallengeNumReq_reflection_;
  delete TOutsmartReceiveSettleRewardRsp::default_instance_;
  delete TOutsmartReceiveSettleRewardRsp_reflection_;
  delete TOutsmartGarrisonReq::default_instance_;
  delete TOutsmartGarrisonReq_reflection_;
  delete TOutsmartSweepReq::default_instance_;
  delete TOutsmartSweepReq_reflection_;
  delete TOutsmartSweepRsp::default_instance_;
  delete TOutsmartSweepRsp_reflection_;
  delete TOutsmartGarrisonInfo::default_instance_;
  delete TOutsmartGarrisonInfo_reflection_;
  delete TOutsmartOneKeyGarrisonReq::default_instance_;
  delete TOutsmartOneKeyGarrisonReq_reflection_;
}

void protobuf_AddDesc_net_2fOutsmart_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fBattle_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022net/Outsmart.proto\022\002pb\032\020net/Battle.pro"
    "to\032\026net/CommonReward.proto\"/\n\023TOutsmartH"
    "idPosInfo\022\013\n\003Hid\030\001 \001(\r\022\013\n\003Pos\030\002 \001(\r\"S\n\020T"
    "OutsmartFmtInfo\022\023\n\013FormationId\030\001 \001(\r\022*\n\t"
    "HidPosArr\030\002 \003(\0132\027.pb.TOutsmartHidPosInfo"
    "\"\216\001\n\021TOutsmartSiteInfo\022\016\n\006SiteId\030\001 \001(\r\022\021"
    "\n\tMonsterId\030\002 \003(\r\022\016\n\006BuffId\030\003 \001(\r\022\025\n\rFir"
    "stPassTime\030\004 \001(\004\022\021\n\tBuffIdArr\030\005 \003(\r\022\013\n\003H"
    "id\030\006 \001(\r\022\017\n\007FailNum\030\007 \001(\r\"\212\002\n\023TOutsmartG"
    "etInfoRsp\022\024\n\014ChallengeNum\030\001 \001(\r\022\027\n\017BuyCh"
    "allengeNum\030\002 \001(\r\022\023\n\013RefreshTime\030\003 \001(\004\022$\n"
    "\006FmtArr\030\004 \003(\0132\024.pb.TOutsmartFmtInfo\022*\n\013S"
    "iteInfoArr\030\005 \003(\0132\025.pb.TOutsmartSiteInfo\022"
    "\021\n\tBuffIdArr\030\006 \003(\r\022\020\n\010RewardId\030\007 \001(\r\022\022\n\n"
    "SettleTime\030\010 \001(\004\022$\n\tRewardArr\030\t \003(\0132\021.pb"
    ".TCommonReward\"F\n\030TOutsmartSetFormationR"
    "eq\022*\n\014FormationArr\030\001 \003(\0132\024.pb.TOutsmartF"
    "mtInfo\"m\n\031TOutsmartGetBattleArgsReq\022\n\n\002I"
    "d\030\001 \001(\r\022\023\n\013RefreshTime\030\002 \001(\004\022/\n\020BattleCh"
    "eckParam\030\003 \001(\0132\025.pb.TBattleCheckParam\"C\n"
    "\031TOutsmartGetBattleArgsRsp\022&\n\rBattleArgs"
    "Arr\030\001 \003(\0132\017.pb.TBattleArgs\"Q\n\030TOutsmartR"
    "eportBattleReq\022\n\n\002Id\030\001 \001(\r\022\023\n\013RefreshTim"
    "e\030\002 \001(\004\022\024\n\014BattleRetArr\030\003 \003(\014\"s\n\030TOutsma"
    "rtReportBattleRsp\022\r\n\005IsWin\030\001 \001(\010\022\017\n\007IsFi"
    "rst\030\002 \001(\010\022$\n\tRewardArr\030\003 \003(\0132\021.pb.TCommo"
    "nReward\022\021\n\tBuffIdArr\030\004 \003(\r\"I\n\026TOutsmartC"
    "hooseBuffReq\022\n\n\002Id\030\001 \001(\r\022\023\n\013RefreshTime\030"
    "\002 \001(\004\022\016\n\006BuffId\030\003 \001(\r\"*\n\033TOutsmartBuyCha"
    "llengeNumReq\022\013\n\003Num\030\001 \001(\r\"G\n\037TOutsmartRe"
    "ceiveSettleRewardRsp\022$\n\tRewardArr\030\001 \003(\0132"
    "\021.pb.TCommonReward\">\n\024TOutsmartGarrisonR"
    "eq\022\n\n\002Id\030\001 \001(\r\022\013\n\003Hid\030\002 \001(\r\022\r\n\005OriId\030\003 \001"
    "(\r\"D\n\021TOutsmartSweepReq\022\n\n\002Id\030\001 \001(\r\022\023\n\013R"
    "efreshTime\030\002 \001(\004\022\016\n\006SwType\030\003 \001(\r\"L\n\021TOut"
    "smartSweepRsp\022$\n\tRewardArr\030\001 \003(\0132\021.pb.TC"
    "ommonReward\022\021\n\tBuffIdArr\030\002 \003(\r\"0\n\025TOutsm"
    "artGarrisonInfo\022\n\n\002Id\030\001 \001(\r\022\013\n\003Hid\030\002 \001(\r"
    "\"P\n\032TOutsmartOneKeyGarrisonReq\0222\n\017Garris"
    "onInfoArr\030\001 \003(\0132\031.pb.TOutsmartGarrisonIn"
    "fo", 1602);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/Outsmart.proto", &protobuf_RegisterTypes);
  TOutsmartHidPosInfo::default_instance_ = new TOutsmartHidPosInfo();
  TOutsmartFmtInfo::default_instance_ = new TOutsmartFmtInfo();
  TOutsmartSiteInfo::default_instance_ = new TOutsmartSiteInfo();
  TOutsmartGetInfoRsp::default_instance_ = new TOutsmartGetInfoRsp();
  TOutsmartSetFormationReq::default_instance_ = new TOutsmartSetFormationReq();
  TOutsmartGetBattleArgsReq::default_instance_ = new TOutsmartGetBattleArgsReq();
  TOutsmartGetBattleArgsRsp::default_instance_ = new TOutsmartGetBattleArgsRsp();
  TOutsmartReportBattleReq::default_instance_ = new TOutsmartReportBattleReq();
  TOutsmartReportBattleRsp::default_instance_ = new TOutsmartReportBattleRsp();
  TOutsmartChooseBuffReq::default_instance_ = new TOutsmartChooseBuffReq();
  TOutsmartBuyChallengeNumReq::default_instance_ = new TOutsmartBuyChallengeNumReq();
  TOutsmartReceiveSettleRewardRsp::default_instance_ = new TOutsmartReceiveSettleRewardRsp();
  TOutsmartGarrisonReq::default_instance_ = new TOutsmartGarrisonReq();
  TOutsmartSweepReq::default_instance_ = new TOutsmartSweepReq();
  TOutsmartSweepRsp::default_instance_ = new TOutsmartSweepRsp();
  TOutsmartGarrisonInfo::default_instance_ = new TOutsmartGarrisonInfo();
  TOutsmartOneKeyGarrisonReq::default_instance_ = new TOutsmartOneKeyGarrisonReq();
  TOutsmartHidPosInfo::default_instance_->InitAsDefaultInstance();
  TOutsmartFmtInfo::default_instance_->InitAsDefaultInstance();
  TOutsmartSiteInfo::default_instance_->InitAsDefaultInstance();
  TOutsmartGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TOutsmartSetFormationReq::default_instance_->InitAsDefaultInstance();
  TOutsmartGetBattleArgsReq::default_instance_->InitAsDefaultInstance();
  TOutsmartGetBattleArgsRsp::default_instance_->InitAsDefaultInstance();
  TOutsmartReportBattleReq::default_instance_->InitAsDefaultInstance();
  TOutsmartReportBattleRsp::default_instance_->InitAsDefaultInstance();
  TOutsmartChooseBuffReq::default_instance_->InitAsDefaultInstance();
  TOutsmartBuyChallengeNumReq::default_instance_->InitAsDefaultInstance();
  TOutsmartReceiveSettleRewardRsp::default_instance_->InitAsDefaultInstance();
  TOutsmartGarrisonReq::default_instance_->InitAsDefaultInstance();
  TOutsmartSweepReq::default_instance_->InitAsDefaultInstance();
  TOutsmartSweepRsp::default_instance_->InitAsDefaultInstance();
  TOutsmartGarrisonInfo::default_instance_->InitAsDefaultInstance();
  TOutsmartOneKeyGarrisonReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fOutsmart_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fOutsmart_2eproto {
  StaticDescriptorInitializer_net_2fOutsmart_2eproto() {
    protobuf_AddDesc_net_2fOutsmart_2eproto();
  }
} static_descriptor_initializer_net_2fOutsmart_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TOutsmartHidPosInfo::kHidFieldNumber;
const int TOutsmartHidPosInfo::kPosFieldNumber;
#endif  // !_MSC_VER

TOutsmartHidPosInfo::TOutsmartHidPosInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartHidPosInfo)
}

void TOutsmartHidPosInfo::InitAsDefaultInstance() {
}

TOutsmartHidPosInfo::TOutsmartHidPosInfo(const TOutsmartHidPosInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartHidPosInfo)
}

void TOutsmartHidPosInfo::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  pos_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartHidPosInfo::~TOutsmartHidPosInfo() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartHidPosInfo)
  SharedDtor();
}

void TOutsmartHidPosInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartHidPosInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartHidPosInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartHidPosInfo_descriptor_;
}

const TOutsmartHidPosInfo& TOutsmartHidPosInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartHidPosInfo* TOutsmartHidPosInfo::default_instance_ = NULL;

TOutsmartHidPosInfo* TOutsmartHidPosInfo::New() const {
  return new TOutsmartHidPosInfo;
}

void TOutsmartHidPosInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOutsmartHidPosInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hid_, pos_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartHidPosInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartHidPosInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Pos;
        break;
      }

      // optional uint32 Pos = 2;
      case 2: {
        if (tag == 16) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartHidPosInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartHidPosInfo)
  return false;
#undef DO_
}

void TOutsmartHidPosInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartHidPosInfo)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  // optional uint32 Pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartHidPosInfo)
}

::google::protobuf::uint8* TOutsmartHidPosInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartHidPosInfo)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  // optional uint32 Pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartHidPosInfo)
  return target;
}

int TOutsmartHidPosInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 Pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartHidPosInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartHidPosInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartHidPosInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartHidPosInfo::MergeFrom(const TOutsmartHidPosInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartHidPosInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartHidPosInfo::CopyFrom(const TOutsmartHidPosInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartHidPosInfo::IsInitialized() const {

  return true;
}

void TOutsmartHidPosInfo::Swap(TOutsmartHidPosInfo* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartHidPosInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartHidPosInfo_descriptor_;
  metadata.reflection = TOutsmartHidPosInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartFmtInfo::kFormationIdFieldNumber;
const int TOutsmartFmtInfo::kHidPosArrFieldNumber;
#endif  // !_MSC_VER

TOutsmartFmtInfo::TOutsmartFmtInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartFmtInfo)
}

void TOutsmartFmtInfo::InitAsDefaultInstance() {
}

TOutsmartFmtInfo::TOutsmartFmtInfo(const TOutsmartFmtInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartFmtInfo)
}

void TOutsmartFmtInfo::SharedCtor() {
  _cached_size_ = 0;
  formationid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartFmtInfo::~TOutsmartFmtInfo() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartFmtInfo)
  SharedDtor();
}

void TOutsmartFmtInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartFmtInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartFmtInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartFmtInfo_descriptor_;
}

const TOutsmartFmtInfo& TOutsmartFmtInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartFmtInfo* TOutsmartFmtInfo::default_instance_ = NULL;

TOutsmartFmtInfo* TOutsmartFmtInfo::New() const {
  return new TOutsmartFmtInfo;
}

void TOutsmartFmtInfo::Clear() {
  formationid_ = 0u;
  hidposarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartFmtInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartFmtInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FormationId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &formationid_)));
          set_has_formationid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_HidPosArr;
        break;
      }

      // repeated .pb.TOutsmartHidPosInfo HidPosArr = 2;
      case 2: {
        if (tag == 18) {
         parse_HidPosArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hidposarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_HidPosArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartFmtInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartFmtInfo)
  return false;
#undef DO_
}

void TOutsmartFmtInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartFmtInfo)
  // optional uint32 FormationId = 1;
  if (has_formationid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->formationid(), output);
  }

  // repeated .pb.TOutsmartHidPosInfo HidPosArr = 2;
  for (int i = 0; i < this->hidposarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hidposarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartFmtInfo)
}

::google::protobuf::uint8* TOutsmartFmtInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartFmtInfo)
  // optional uint32 FormationId = 1;
  if (has_formationid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->formationid(), target);
  }

  // repeated .pb.TOutsmartHidPosInfo HidPosArr = 2;
  for (int i = 0; i < this->hidposarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hidposarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartFmtInfo)
  return target;
}

int TOutsmartFmtInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FormationId = 1;
    if (has_formationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->formationid());
    }

  }
  // repeated .pb.TOutsmartHidPosInfo HidPosArr = 2;
  total_size += 1 * this->hidposarr_size();
  for (int i = 0; i < this->hidposarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hidposarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartFmtInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartFmtInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartFmtInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartFmtInfo::MergeFrom(const TOutsmartFmtInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  hidposarr_.MergeFrom(from.hidposarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_formationid()) {
      set_formationid(from.formationid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartFmtInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartFmtInfo::CopyFrom(const TOutsmartFmtInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartFmtInfo::IsInitialized() const {

  return true;
}

void TOutsmartFmtInfo::Swap(TOutsmartFmtInfo* other) {
  if (other != this) {
    std::swap(formationid_, other->formationid_);
    hidposarr_.Swap(&other->hidposarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartFmtInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartFmtInfo_descriptor_;
  metadata.reflection = TOutsmartFmtInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartSiteInfo::kSiteIdFieldNumber;
const int TOutsmartSiteInfo::kMonsterIdFieldNumber;
const int TOutsmartSiteInfo::kBuffIdFieldNumber;
const int TOutsmartSiteInfo::kFirstPassTimeFieldNumber;
const int TOutsmartSiteInfo::kBuffIdArrFieldNumber;
const int TOutsmartSiteInfo::kHidFieldNumber;
const int TOutsmartSiteInfo::kFailNumFieldNumber;
#endif  // !_MSC_VER

TOutsmartSiteInfo::TOutsmartSiteInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartSiteInfo)
}

void TOutsmartSiteInfo::InitAsDefaultInstance() {
}

TOutsmartSiteInfo::TOutsmartSiteInfo(const TOutsmartSiteInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartSiteInfo)
}

void TOutsmartSiteInfo::SharedCtor() {
  _cached_size_ = 0;
  siteid_ = 0u;
  buffid_ = 0u;
  firstpasstime_ = GOOGLE_ULONGLONG(0);
  hid_ = 0u;
  failnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartSiteInfo::~TOutsmartSiteInfo() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartSiteInfo)
  SharedDtor();
}

void TOutsmartSiteInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartSiteInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartSiteInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartSiteInfo_descriptor_;
}

const TOutsmartSiteInfo& TOutsmartSiteInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartSiteInfo* TOutsmartSiteInfo::default_instance_ = NULL;

TOutsmartSiteInfo* TOutsmartSiteInfo::New() const {
  return new TOutsmartSiteInfo;
}

void TOutsmartSiteInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOutsmartSiteInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 109) {
    ZR_(siteid_, firstpasstime_);
    ZR_(hid_, failnum_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  monsterid_.Clear();
  buffidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartSiteInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartSiteInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 SiteId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &siteid_)));
          set_has_siteid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MonsterId;
        break;
      }

      // repeated uint32 MonsterId = 2;
      case 2: {
        if (tag == 16) {
         parse_MonsterId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_monsterid())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_monsterid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MonsterId;
        if (input->ExpectTag(24)) goto parse_BuffId;
        break;
      }

      // optional uint32 BuffId = 3;
      case 3: {
        if (tag == 24) {
         parse_BuffId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buffid_)));
          set_has_buffid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_FirstPassTime;
        break;
      }

      // optional uint64 FirstPassTime = 4;
      case 4: {
        if (tag == 32) {
         parse_FirstPassTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &firstpasstime_)));
          set_has_firstpasstime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_BuffIdArr;
        break;
      }

      // repeated uint32 BuffIdArr = 5;
      case 5: {
        if (tag == 40) {
         parse_BuffIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_buffidarr())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_buffidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_BuffIdArr;
        if (input->ExpectTag(48)) goto parse_Hid;
        break;
      }

      // optional uint32 Hid = 6;
      case 6: {
        if (tag == 48) {
         parse_Hid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_FailNum;
        break;
      }

      // optional uint32 FailNum = 7;
      case 7: {
        if (tag == 56) {
         parse_FailNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &failnum_)));
          set_has_failnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartSiteInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartSiteInfo)
  return false;
#undef DO_
}

void TOutsmartSiteInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartSiteInfo)
  // optional uint32 SiteId = 1;
  if (has_siteid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->siteid(), output);
  }

  // repeated uint32 MonsterId = 2;
  for (int i = 0; i < this->monsterid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->monsterid(i), output);
  }

  // optional uint32 BuffId = 3;
  if (has_buffid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->buffid(), output);
  }

  // optional uint64 FirstPassTime = 4;
  if (has_firstpasstime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->firstpasstime(), output);
  }

  // repeated uint32 BuffIdArr = 5;
  for (int i = 0; i < this->buffidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->buffidarr(i), output);
  }

  // optional uint32 Hid = 6;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->hid(), output);
  }

  // optional uint32 FailNum = 7;
  if (has_failnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->failnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartSiteInfo)
}

::google::protobuf::uint8* TOutsmartSiteInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartSiteInfo)
  // optional uint32 SiteId = 1;
  if (has_siteid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->siteid(), target);
  }

  // repeated uint32 MonsterId = 2;
  for (int i = 0; i < this->monsterid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->monsterid(i), target);
  }

  // optional uint32 BuffId = 3;
  if (has_buffid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->buffid(), target);
  }

  // optional uint64 FirstPassTime = 4;
  if (has_firstpasstime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->firstpasstime(), target);
  }

  // repeated uint32 BuffIdArr = 5;
  for (int i = 0; i < this->buffidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->buffidarr(i), target);
  }

  // optional uint32 Hid = 6;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->hid(), target);
  }

  // optional uint32 FailNum = 7;
  if (has_failnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->failnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartSiteInfo)
  return target;
}

int TOutsmartSiteInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 SiteId = 1;
    if (has_siteid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->siteid());
    }

    // optional uint32 BuffId = 3;
    if (has_buffid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buffid());
    }

    // optional uint64 FirstPassTime = 4;
    if (has_firstpasstime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->firstpasstime());
    }

    // optional uint32 Hid = 6;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 FailNum = 7;
    if (has_failnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->failnum());
    }

  }
  // repeated uint32 MonsterId = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->monsterid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->monsterid(i));
    }
    total_size += 1 * this->monsterid_size() + data_size;
  }

  // repeated uint32 BuffIdArr = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->buffidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->buffidarr(i));
    }
    total_size += 1 * this->buffidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartSiteInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartSiteInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartSiteInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartSiteInfo::MergeFrom(const TOutsmartSiteInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  monsterid_.MergeFrom(from.monsterid_);
  buffidarr_.MergeFrom(from.buffidarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_siteid()) {
      set_siteid(from.siteid());
    }
    if (from.has_buffid()) {
      set_buffid(from.buffid());
    }
    if (from.has_firstpasstime()) {
      set_firstpasstime(from.firstpasstime());
    }
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_failnum()) {
      set_failnum(from.failnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartSiteInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartSiteInfo::CopyFrom(const TOutsmartSiteInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartSiteInfo::IsInitialized() const {

  return true;
}

void TOutsmartSiteInfo::Swap(TOutsmartSiteInfo* other) {
  if (other != this) {
    std::swap(siteid_, other->siteid_);
    monsterid_.Swap(&other->monsterid_);
    std::swap(buffid_, other->buffid_);
    std::swap(firstpasstime_, other->firstpasstime_);
    buffidarr_.Swap(&other->buffidarr_);
    std::swap(hid_, other->hid_);
    std::swap(failnum_, other->failnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartSiteInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartSiteInfo_descriptor_;
  metadata.reflection = TOutsmartSiteInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartGetInfoRsp::kChallengeNumFieldNumber;
const int TOutsmartGetInfoRsp::kBuyChallengeNumFieldNumber;
const int TOutsmartGetInfoRsp::kRefreshTimeFieldNumber;
const int TOutsmartGetInfoRsp::kFmtArrFieldNumber;
const int TOutsmartGetInfoRsp::kSiteInfoArrFieldNumber;
const int TOutsmartGetInfoRsp::kBuffIdArrFieldNumber;
const int TOutsmartGetInfoRsp::kRewardIdFieldNumber;
const int TOutsmartGetInfoRsp::kSettleTimeFieldNumber;
const int TOutsmartGetInfoRsp::kRewardArrFieldNumber;
#endif  // !_MSC_VER

TOutsmartGetInfoRsp::TOutsmartGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartGetInfoRsp)
}

void TOutsmartGetInfoRsp::InitAsDefaultInstance() {
}

TOutsmartGetInfoRsp::TOutsmartGetInfoRsp(const TOutsmartGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartGetInfoRsp)
}

void TOutsmartGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  challengenum_ = 0u;
  buychallengenum_ = 0u;
  refreshtime_ = GOOGLE_ULONGLONG(0);
  rewardid_ = 0u;
  settletime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartGetInfoRsp::~TOutsmartGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartGetInfoRsp)
  SharedDtor();
}

void TOutsmartGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartGetInfoRsp_descriptor_;
}

const TOutsmartGetInfoRsp& TOutsmartGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartGetInfoRsp* TOutsmartGetInfoRsp::default_instance_ = NULL;

TOutsmartGetInfoRsp* TOutsmartGetInfoRsp::New() const {
  return new TOutsmartGetInfoRsp;
}

void TOutsmartGetInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOutsmartGetInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 199) {
    ZR_(challengenum_, refreshtime_);
    rewardid_ = 0u;
    settletime_ = GOOGLE_ULONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  fmtarr_.Clear();
  siteinfoarr_.Clear();
  buffidarr_.Clear();
  rewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChallengeNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &challengenum_)));
          set_has_challengenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BuyChallengeNum;
        break;
      }

      // optional uint32 BuyChallengeNum = 2;
      case 2: {
        if (tag == 16) {
         parse_BuyChallengeNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buychallengenum_)));
          set_has_buychallengenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RefreshTime;
        break;
      }

      // optional uint64 RefreshTime = 3;
      case 3: {
        if (tag == 24) {
         parse_RefreshTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &refreshtime_)));
          set_has_refreshtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_FmtArr;
        break;
      }

      // repeated .pb.TOutsmartFmtInfo FmtArr = 4;
      case 4: {
        if (tag == 34) {
         parse_FmtArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fmtarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_FmtArr;
        if (input->ExpectTag(42)) goto parse_SiteInfoArr;
        break;
      }

      // repeated .pb.TOutsmartSiteInfo SiteInfoArr = 5;
      case 5: {
        if (tag == 42) {
         parse_SiteInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_siteinfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_SiteInfoArr;
        if (input->ExpectTag(48)) goto parse_BuffIdArr;
        break;
      }

      // repeated uint32 BuffIdArr = 6;
      case 6: {
        if (tag == 48) {
         parse_BuffIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_buffidarr())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_buffidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_BuffIdArr;
        if (input->ExpectTag(56)) goto parse_RewardId;
        break;
      }

      // optional uint32 RewardId = 7;
      case 7: {
        if (tag == 56) {
         parse_RewardId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rewardid_)));
          set_has_rewardid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_SettleTime;
        break;
      }

      // optional uint64 SettleTime = 8;
      case 8: {
        if (tag == 64) {
         parse_SettleTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &settletime_)));
          set_has_settletime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_RewardArr;
        break;
      }

      // repeated .pb.TCommonReward RewardArr = 9;
      case 9: {
        if (tag == 74) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_RewardArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartGetInfoRsp)
  return false;
#undef DO_
}

void TOutsmartGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartGetInfoRsp)
  // optional uint32 ChallengeNum = 1;
  if (has_challengenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->challengenum(), output);
  }

  // optional uint32 BuyChallengeNum = 2;
  if (has_buychallengenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->buychallengenum(), output);
  }

  // optional uint64 RefreshTime = 3;
  if (has_refreshtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->refreshtime(), output);
  }

  // repeated .pb.TOutsmartFmtInfo FmtArr = 4;
  for (int i = 0; i < this->fmtarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->fmtarr(i), output);
  }

  // repeated .pb.TOutsmartSiteInfo SiteInfoArr = 5;
  for (int i = 0; i < this->siteinfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->siteinfoarr(i), output);
  }

  // repeated uint32 BuffIdArr = 6;
  for (int i = 0; i < this->buffidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->buffidarr(i), output);
  }

  // optional uint32 RewardId = 7;
  if (has_rewardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->rewardid(), output);
  }

  // optional uint64 SettleTime = 8;
  if (has_settletime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->settletime(), output);
  }

  // repeated .pb.TCommonReward RewardArr = 9;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->rewardarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartGetInfoRsp)
}

::google::protobuf::uint8* TOutsmartGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartGetInfoRsp)
  // optional uint32 ChallengeNum = 1;
  if (has_challengenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->challengenum(), target);
  }

  // optional uint32 BuyChallengeNum = 2;
  if (has_buychallengenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->buychallengenum(), target);
  }

  // optional uint64 RefreshTime = 3;
  if (has_refreshtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->refreshtime(), target);
  }

  // repeated .pb.TOutsmartFmtInfo FmtArr = 4;
  for (int i = 0; i < this->fmtarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->fmtarr(i), target);
  }

  // repeated .pb.TOutsmartSiteInfo SiteInfoArr = 5;
  for (int i = 0; i < this->siteinfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->siteinfoarr(i), target);
  }

  // repeated uint32 BuffIdArr = 6;
  for (int i = 0; i < this->buffidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->buffidarr(i), target);
  }

  // optional uint32 RewardId = 7;
  if (has_rewardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->rewardid(), target);
  }

  // optional uint64 SettleTime = 8;
  if (has_settletime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->settletime(), target);
  }

  // repeated .pb.TCommonReward RewardArr = 9;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->rewardarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartGetInfoRsp)
  return target;
}

int TOutsmartGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ChallengeNum = 1;
    if (has_challengenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->challengenum());
    }

    // optional uint32 BuyChallengeNum = 2;
    if (has_buychallengenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buychallengenum());
    }

    // optional uint64 RefreshTime = 3;
    if (has_refreshtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->refreshtime());
    }

    // optional uint32 RewardId = 7;
    if (has_rewardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rewardid());
    }

    // optional uint64 SettleTime = 8;
    if (has_settletime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->settletime());
    }

  }
  // repeated .pb.TOutsmartFmtInfo FmtArr = 4;
  total_size += 1 * this->fmtarr_size();
  for (int i = 0; i < this->fmtarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fmtarr(i));
  }

  // repeated .pb.TOutsmartSiteInfo SiteInfoArr = 5;
  total_size += 1 * this->siteinfoarr_size();
  for (int i = 0; i < this->siteinfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->siteinfoarr(i));
  }

  // repeated uint32 BuffIdArr = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->buffidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->buffidarr(i));
    }
    total_size += 1 * this->buffidarr_size() + data_size;
  }

  // repeated .pb.TCommonReward RewardArr = 9;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartGetInfoRsp::MergeFrom(const TOutsmartGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  fmtarr_.MergeFrom(from.fmtarr_);
  siteinfoarr_.MergeFrom(from.siteinfoarr_);
  buffidarr_.MergeFrom(from.buffidarr_);
  rewardarr_.MergeFrom(from.rewardarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_challengenum()) {
      set_challengenum(from.challengenum());
    }
    if (from.has_buychallengenum()) {
      set_buychallengenum(from.buychallengenum());
    }
    if (from.has_refreshtime()) {
      set_refreshtime(from.refreshtime());
    }
    if (from.has_rewardid()) {
      set_rewardid(from.rewardid());
    }
    if (from.has_settletime()) {
      set_settletime(from.settletime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartGetInfoRsp::CopyFrom(const TOutsmartGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartGetInfoRsp::IsInitialized() const {

  return true;
}

void TOutsmartGetInfoRsp::Swap(TOutsmartGetInfoRsp* other) {
  if (other != this) {
    std::swap(challengenum_, other->challengenum_);
    std::swap(buychallengenum_, other->buychallengenum_);
    std::swap(refreshtime_, other->refreshtime_);
    fmtarr_.Swap(&other->fmtarr_);
    siteinfoarr_.Swap(&other->siteinfoarr_);
    buffidarr_.Swap(&other->buffidarr_);
    std::swap(rewardid_, other->rewardid_);
    std::swap(settletime_, other->settletime_);
    rewardarr_.Swap(&other->rewardarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartGetInfoRsp_descriptor_;
  metadata.reflection = TOutsmartGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartSetFormationReq::kFormationArrFieldNumber;
#endif  // !_MSC_VER

TOutsmartSetFormationReq::TOutsmartSetFormationReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartSetFormationReq)
}

void TOutsmartSetFormationReq::InitAsDefaultInstance() {
}

TOutsmartSetFormationReq::TOutsmartSetFormationReq(const TOutsmartSetFormationReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartSetFormationReq)
}

void TOutsmartSetFormationReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartSetFormationReq::~TOutsmartSetFormationReq() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartSetFormationReq)
  SharedDtor();
}

void TOutsmartSetFormationReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartSetFormationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartSetFormationReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartSetFormationReq_descriptor_;
}

const TOutsmartSetFormationReq& TOutsmartSetFormationReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartSetFormationReq* TOutsmartSetFormationReq::default_instance_ = NULL;

TOutsmartSetFormationReq* TOutsmartSetFormationReq::New() const {
  return new TOutsmartSetFormationReq;
}

void TOutsmartSetFormationReq::Clear() {
  formationarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartSetFormationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartSetFormationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TOutsmartFmtInfo FormationArr = 1;
      case 1: {
        if (tag == 10) {
         parse_FormationArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_formationarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_FormationArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartSetFormationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartSetFormationReq)
  return false;
#undef DO_
}

void TOutsmartSetFormationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartSetFormationReq)
  // repeated .pb.TOutsmartFmtInfo FormationArr = 1;
  for (int i = 0; i < this->formationarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->formationarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartSetFormationReq)
}

::google::protobuf::uint8* TOutsmartSetFormationReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartSetFormationReq)
  // repeated .pb.TOutsmartFmtInfo FormationArr = 1;
  for (int i = 0; i < this->formationarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->formationarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartSetFormationReq)
  return target;
}

int TOutsmartSetFormationReq::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TOutsmartFmtInfo FormationArr = 1;
  total_size += 1 * this->formationarr_size();
  for (int i = 0; i < this->formationarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->formationarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartSetFormationReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartSetFormationReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartSetFormationReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartSetFormationReq::MergeFrom(const TOutsmartSetFormationReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  formationarr_.MergeFrom(from.formationarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartSetFormationReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartSetFormationReq::CopyFrom(const TOutsmartSetFormationReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartSetFormationReq::IsInitialized() const {

  return true;
}

void TOutsmartSetFormationReq::Swap(TOutsmartSetFormationReq* other) {
  if (other != this) {
    formationarr_.Swap(&other->formationarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartSetFormationReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartSetFormationReq_descriptor_;
  metadata.reflection = TOutsmartSetFormationReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartGetBattleArgsReq::kIdFieldNumber;
const int TOutsmartGetBattleArgsReq::kRefreshTimeFieldNumber;
const int TOutsmartGetBattleArgsReq::kBattleCheckParamFieldNumber;
#endif  // !_MSC_VER

TOutsmartGetBattleArgsReq::TOutsmartGetBattleArgsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartGetBattleArgsReq)
}

void TOutsmartGetBattleArgsReq::InitAsDefaultInstance() {
  battlecheckparam_ = const_cast< ::pb::TBattleCheckParam*>(&::pb::TBattleCheckParam::default_instance());
}

TOutsmartGetBattleArgsReq::TOutsmartGetBattleArgsReq(const TOutsmartGetBattleArgsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartGetBattleArgsReq)
}

void TOutsmartGetBattleArgsReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  refreshtime_ = GOOGLE_ULONGLONG(0);
  battlecheckparam_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartGetBattleArgsReq::~TOutsmartGetBattleArgsReq() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartGetBattleArgsReq)
  SharedDtor();
}

void TOutsmartGetBattleArgsReq::SharedDtor() {
  if (this != default_instance_) {
    delete battlecheckparam_;
  }
}

void TOutsmartGetBattleArgsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartGetBattleArgsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartGetBattleArgsReq_descriptor_;
}

const TOutsmartGetBattleArgsReq& TOutsmartGetBattleArgsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartGetBattleArgsReq* TOutsmartGetBattleArgsReq::default_instance_ = NULL;

TOutsmartGetBattleArgsReq* TOutsmartGetBattleArgsReq::New() const {
  return new TOutsmartGetBattleArgsReq;
}

void TOutsmartGetBattleArgsReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    id_ = 0u;
    refreshtime_ = GOOGLE_ULONGLONG(0);
    if (has_battlecheckparam()) {
      if (battlecheckparam_ != NULL) battlecheckparam_->::pb::TBattleCheckParam::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartGetBattleArgsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartGetBattleArgsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RefreshTime;
        break;
      }

      // optional uint64 RefreshTime = 2;
      case 2: {
        if (tag == 16) {
         parse_RefreshTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &refreshtime_)));
          set_has_refreshtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BattleCheckParam;
        break;
      }

      // optional .pb.TBattleCheckParam BattleCheckParam = 3;
      case 3: {
        if (tag == 26) {
         parse_BattleCheckParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battlecheckparam()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartGetBattleArgsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartGetBattleArgsReq)
  return false;
#undef DO_
}

void TOutsmartGetBattleArgsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartGetBattleArgsReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 RefreshTime = 2;
  if (has_refreshtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->refreshtime(), output);
  }

  // optional .pb.TBattleCheckParam BattleCheckParam = 3;
  if (has_battlecheckparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->battlecheckparam(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartGetBattleArgsReq)
}

::google::protobuf::uint8* TOutsmartGetBattleArgsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartGetBattleArgsReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 RefreshTime = 2;
  if (has_refreshtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->refreshtime(), target);
  }

  // optional .pb.TBattleCheckParam BattleCheckParam = 3;
  if (has_battlecheckparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->battlecheckparam(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartGetBattleArgsReq)
  return target;
}

int TOutsmartGetBattleArgsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 RefreshTime = 2;
    if (has_refreshtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->refreshtime());
    }

    // optional .pb.TBattleCheckParam BattleCheckParam = 3;
    if (has_battlecheckparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battlecheckparam());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartGetBattleArgsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartGetBattleArgsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartGetBattleArgsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartGetBattleArgsReq::MergeFrom(const TOutsmartGetBattleArgsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_refreshtime()) {
      set_refreshtime(from.refreshtime());
    }
    if (from.has_battlecheckparam()) {
      mutable_battlecheckparam()->::pb::TBattleCheckParam::MergeFrom(from.battlecheckparam());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartGetBattleArgsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartGetBattleArgsReq::CopyFrom(const TOutsmartGetBattleArgsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartGetBattleArgsReq::IsInitialized() const {

  return true;
}

void TOutsmartGetBattleArgsReq::Swap(TOutsmartGetBattleArgsReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(refreshtime_, other->refreshtime_);
    std::swap(battlecheckparam_, other->battlecheckparam_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartGetBattleArgsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartGetBattleArgsReq_descriptor_;
  metadata.reflection = TOutsmartGetBattleArgsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartGetBattleArgsRsp::kBattleArgsArrFieldNumber;
#endif  // !_MSC_VER

TOutsmartGetBattleArgsRsp::TOutsmartGetBattleArgsRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartGetBattleArgsRsp)
}

void TOutsmartGetBattleArgsRsp::InitAsDefaultInstance() {
}

TOutsmartGetBattleArgsRsp::TOutsmartGetBattleArgsRsp(const TOutsmartGetBattleArgsRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartGetBattleArgsRsp)
}

void TOutsmartGetBattleArgsRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartGetBattleArgsRsp::~TOutsmartGetBattleArgsRsp() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartGetBattleArgsRsp)
  SharedDtor();
}

void TOutsmartGetBattleArgsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartGetBattleArgsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartGetBattleArgsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartGetBattleArgsRsp_descriptor_;
}

const TOutsmartGetBattleArgsRsp& TOutsmartGetBattleArgsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartGetBattleArgsRsp* TOutsmartGetBattleArgsRsp::default_instance_ = NULL;

TOutsmartGetBattleArgsRsp* TOutsmartGetBattleArgsRsp::New() const {
  return new TOutsmartGetBattleArgsRsp;
}

void TOutsmartGetBattleArgsRsp::Clear() {
  battleargsarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartGetBattleArgsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartGetBattleArgsRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TBattleArgs BattleArgsArr = 1;
      case 1: {
        if (tag == 10) {
         parse_BattleArgsArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_battleargsarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_BattleArgsArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartGetBattleArgsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartGetBattleArgsRsp)
  return false;
#undef DO_
}

void TOutsmartGetBattleArgsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartGetBattleArgsRsp)
  // repeated .pb.TBattleArgs BattleArgsArr = 1;
  for (int i = 0; i < this->battleargsarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->battleargsarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartGetBattleArgsRsp)
}

::google::protobuf::uint8* TOutsmartGetBattleArgsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartGetBattleArgsRsp)
  // repeated .pb.TBattleArgs BattleArgsArr = 1;
  for (int i = 0; i < this->battleargsarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->battleargsarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartGetBattleArgsRsp)
  return target;
}

int TOutsmartGetBattleArgsRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TBattleArgs BattleArgsArr = 1;
  total_size += 1 * this->battleargsarr_size();
  for (int i = 0; i < this->battleargsarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->battleargsarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartGetBattleArgsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartGetBattleArgsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartGetBattleArgsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartGetBattleArgsRsp::MergeFrom(const TOutsmartGetBattleArgsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  battleargsarr_.MergeFrom(from.battleargsarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartGetBattleArgsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartGetBattleArgsRsp::CopyFrom(const TOutsmartGetBattleArgsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartGetBattleArgsRsp::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->battleargsarr())) return false;
  return true;
}

void TOutsmartGetBattleArgsRsp::Swap(TOutsmartGetBattleArgsRsp* other) {
  if (other != this) {
    battleargsarr_.Swap(&other->battleargsarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartGetBattleArgsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartGetBattleArgsRsp_descriptor_;
  metadata.reflection = TOutsmartGetBattleArgsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartReportBattleReq::kIdFieldNumber;
const int TOutsmartReportBattleReq::kRefreshTimeFieldNumber;
const int TOutsmartReportBattleReq::kBattleRetArrFieldNumber;
#endif  // !_MSC_VER

TOutsmartReportBattleReq::TOutsmartReportBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartReportBattleReq)
}

void TOutsmartReportBattleReq::InitAsDefaultInstance() {
}

TOutsmartReportBattleReq::TOutsmartReportBattleReq(const TOutsmartReportBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartReportBattleReq)
}

void TOutsmartReportBattleReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  refreshtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartReportBattleReq::~TOutsmartReportBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartReportBattleReq)
  SharedDtor();
}

void TOutsmartReportBattleReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartReportBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartReportBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartReportBattleReq_descriptor_;
}

const TOutsmartReportBattleReq& TOutsmartReportBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartReportBattleReq* TOutsmartReportBattleReq::default_instance_ = NULL;

TOutsmartReportBattleReq* TOutsmartReportBattleReq::New() const {
  return new TOutsmartReportBattleReq;
}

void TOutsmartReportBattleReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    id_ = 0u;
    refreshtime_ = GOOGLE_ULONGLONG(0);
  }
  battleretarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartReportBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartReportBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RefreshTime;
        break;
      }

      // optional uint64 RefreshTime = 2;
      case 2: {
        if (tag == 16) {
         parse_RefreshTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &refreshtime_)));
          set_has_refreshtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BattleRetArr;
        break;
      }

      // repeated bytes BattleRetArr = 3;
      case 3: {
        if (tag == 26) {
         parse_BattleRetArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_battleretarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BattleRetArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartReportBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartReportBattleReq)
  return false;
#undef DO_
}

void TOutsmartReportBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartReportBattleReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 RefreshTime = 2;
  if (has_refreshtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->refreshtime(), output);
  }

  // repeated bytes BattleRetArr = 3;
  for (int i = 0; i < this->battleretarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->battleretarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartReportBattleReq)
}

::google::protobuf::uint8* TOutsmartReportBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartReportBattleReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 RefreshTime = 2;
  if (has_refreshtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->refreshtime(), target);
  }

  // repeated bytes BattleRetArr = 3;
  for (int i = 0; i < this->battleretarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->battleretarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartReportBattleReq)
  return target;
}

int TOutsmartReportBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 RefreshTime = 2;
    if (has_refreshtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->refreshtime());
    }

  }
  // repeated bytes BattleRetArr = 3;
  total_size += 1 * this->battleretarr_size();
  for (int i = 0; i < this->battleretarr_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->battleretarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartReportBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartReportBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartReportBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartReportBattleReq::MergeFrom(const TOutsmartReportBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  battleretarr_.MergeFrom(from.battleretarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_refreshtime()) {
      set_refreshtime(from.refreshtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartReportBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartReportBattleReq::CopyFrom(const TOutsmartReportBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartReportBattleReq::IsInitialized() const {

  return true;
}

void TOutsmartReportBattleReq::Swap(TOutsmartReportBattleReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(refreshtime_, other->refreshtime_);
    battleretarr_.Swap(&other->battleretarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartReportBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartReportBattleReq_descriptor_;
  metadata.reflection = TOutsmartReportBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartReportBattleRsp::kIsWinFieldNumber;
const int TOutsmartReportBattleRsp::kIsFirstFieldNumber;
const int TOutsmartReportBattleRsp::kRewardArrFieldNumber;
const int TOutsmartReportBattleRsp::kBuffIdArrFieldNumber;
#endif  // !_MSC_VER

TOutsmartReportBattleRsp::TOutsmartReportBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartReportBattleRsp)
}

void TOutsmartReportBattleRsp::InitAsDefaultInstance() {
}

TOutsmartReportBattleRsp::TOutsmartReportBattleRsp(const TOutsmartReportBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartReportBattleRsp)
}

void TOutsmartReportBattleRsp::SharedCtor() {
  _cached_size_ = 0;
  iswin_ = false;
  isfirst_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartReportBattleRsp::~TOutsmartReportBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartReportBattleRsp)
  SharedDtor();
}

void TOutsmartReportBattleRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartReportBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartReportBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartReportBattleRsp_descriptor_;
}

const TOutsmartReportBattleRsp& TOutsmartReportBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartReportBattleRsp* TOutsmartReportBattleRsp::default_instance_ = NULL;

TOutsmartReportBattleRsp* TOutsmartReportBattleRsp::New() const {
  return new TOutsmartReportBattleRsp;
}

void TOutsmartReportBattleRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOutsmartReportBattleRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(iswin_, isfirst_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  rewardarr_.Clear();
  buffidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartReportBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartReportBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool IsWin = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iswin_)));
          set_has_iswin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_IsFirst;
        break;
      }

      // optional bool IsFirst = 2;
      case 2: {
        if (tag == 16) {
         parse_IsFirst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfirst_)));
          set_has_isfirst();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RewardArr;
        break;
      }

      // repeated .pb.TCommonReward RewardArr = 3;
      case 3: {
        if (tag == 26) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RewardArr;
        if (input->ExpectTag(32)) goto parse_BuffIdArr;
        break;
      }

      // repeated uint32 BuffIdArr = 4;
      case 4: {
        if (tag == 32) {
         parse_BuffIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_buffidarr())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_buffidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_BuffIdArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartReportBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartReportBattleRsp)
  return false;
#undef DO_
}

void TOutsmartReportBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartReportBattleRsp)
  // optional bool IsWin = 1;
  if (has_iswin()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->iswin(), output);
  }

  // optional bool IsFirst = 2;
  if (has_isfirst()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isfirst(), output);
  }

  // repeated .pb.TCommonReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rewardarr(i), output);
  }

  // repeated uint32 BuffIdArr = 4;
  for (int i = 0; i < this->buffidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->buffidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartReportBattleRsp)
}

::google::protobuf::uint8* TOutsmartReportBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartReportBattleRsp)
  // optional bool IsWin = 1;
  if (has_iswin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->iswin(), target);
  }

  // optional bool IsFirst = 2;
  if (has_isfirst()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isfirst(), target);
  }

  // repeated .pb.TCommonReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rewardarr(i), target);
  }

  // repeated uint32 BuffIdArr = 4;
  for (int i = 0; i < this->buffidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->buffidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartReportBattleRsp)
  return target;
}

int TOutsmartReportBattleRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool IsWin = 1;
    if (has_iswin()) {
      total_size += 1 + 1;
    }

    // optional bool IsFirst = 2;
    if (has_isfirst()) {
      total_size += 1 + 1;
    }

  }
  // repeated .pb.TCommonReward RewardArr = 3;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  // repeated uint32 BuffIdArr = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->buffidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->buffidarr(i));
    }
    total_size += 1 * this->buffidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartReportBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartReportBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartReportBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartReportBattleRsp::MergeFrom(const TOutsmartReportBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarr_.MergeFrom(from.rewardarr_);
  buffidarr_.MergeFrom(from.buffidarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_iswin()) {
      set_iswin(from.iswin());
    }
    if (from.has_isfirst()) {
      set_isfirst(from.isfirst());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartReportBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartReportBattleRsp::CopyFrom(const TOutsmartReportBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartReportBattleRsp::IsInitialized() const {

  return true;
}

void TOutsmartReportBattleRsp::Swap(TOutsmartReportBattleRsp* other) {
  if (other != this) {
    std::swap(iswin_, other->iswin_);
    std::swap(isfirst_, other->isfirst_);
    rewardarr_.Swap(&other->rewardarr_);
    buffidarr_.Swap(&other->buffidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartReportBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartReportBattleRsp_descriptor_;
  metadata.reflection = TOutsmartReportBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartChooseBuffReq::kIdFieldNumber;
const int TOutsmartChooseBuffReq::kRefreshTimeFieldNumber;
const int TOutsmartChooseBuffReq::kBuffIdFieldNumber;
#endif  // !_MSC_VER

TOutsmartChooseBuffReq::TOutsmartChooseBuffReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartChooseBuffReq)
}

void TOutsmartChooseBuffReq::InitAsDefaultInstance() {
}

TOutsmartChooseBuffReq::TOutsmartChooseBuffReq(const TOutsmartChooseBuffReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartChooseBuffReq)
}

void TOutsmartChooseBuffReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  refreshtime_ = GOOGLE_ULONGLONG(0);
  buffid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartChooseBuffReq::~TOutsmartChooseBuffReq() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartChooseBuffReq)
  SharedDtor();
}

void TOutsmartChooseBuffReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartChooseBuffReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartChooseBuffReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartChooseBuffReq_descriptor_;
}

const TOutsmartChooseBuffReq& TOutsmartChooseBuffReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartChooseBuffReq* TOutsmartChooseBuffReq::default_instance_ = NULL;

TOutsmartChooseBuffReq* TOutsmartChooseBuffReq::New() const {
  return new TOutsmartChooseBuffReq;
}

void TOutsmartChooseBuffReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOutsmartChooseBuffReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(refreshtime_, buffid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartChooseBuffReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartChooseBuffReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RefreshTime;
        break;
      }

      // optional uint64 RefreshTime = 2;
      case 2: {
        if (tag == 16) {
         parse_RefreshTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &refreshtime_)));
          set_has_refreshtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BuffId;
        break;
      }

      // optional uint32 BuffId = 3;
      case 3: {
        if (tag == 24) {
         parse_BuffId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buffid_)));
          set_has_buffid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartChooseBuffReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartChooseBuffReq)
  return false;
#undef DO_
}

void TOutsmartChooseBuffReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartChooseBuffReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 RefreshTime = 2;
  if (has_refreshtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->refreshtime(), output);
  }

  // optional uint32 BuffId = 3;
  if (has_buffid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->buffid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartChooseBuffReq)
}

::google::protobuf::uint8* TOutsmartChooseBuffReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartChooseBuffReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 RefreshTime = 2;
  if (has_refreshtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->refreshtime(), target);
  }

  // optional uint32 BuffId = 3;
  if (has_buffid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->buffid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartChooseBuffReq)
  return target;
}

int TOutsmartChooseBuffReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 RefreshTime = 2;
    if (has_refreshtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->refreshtime());
    }

    // optional uint32 BuffId = 3;
    if (has_buffid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buffid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartChooseBuffReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartChooseBuffReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartChooseBuffReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartChooseBuffReq::MergeFrom(const TOutsmartChooseBuffReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_refreshtime()) {
      set_refreshtime(from.refreshtime());
    }
    if (from.has_buffid()) {
      set_buffid(from.buffid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartChooseBuffReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartChooseBuffReq::CopyFrom(const TOutsmartChooseBuffReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartChooseBuffReq::IsInitialized() const {

  return true;
}

void TOutsmartChooseBuffReq::Swap(TOutsmartChooseBuffReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(refreshtime_, other->refreshtime_);
    std::swap(buffid_, other->buffid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartChooseBuffReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartChooseBuffReq_descriptor_;
  metadata.reflection = TOutsmartChooseBuffReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartBuyChallengeNumReq::kNumFieldNumber;
#endif  // !_MSC_VER

TOutsmartBuyChallengeNumReq::TOutsmartBuyChallengeNumReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartBuyChallengeNumReq)
}

void TOutsmartBuyChallengeNumReq::InitAsDefaultInstance() {
}

TOutsmartBuyChallengeNumReq::TOutsmartBuyChallengeNumReq(const TOutsmartBuyChallengeNumReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartBuyChallengeNumReq)
}

void TOutsmartBuyChallengeNumReq::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartBuyChallengeNumReq::~TOutsmartBuyChallengeNumReq() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartBuyChallengeNumReq)
  SharedDtor();
}

void TOutsmartBuyChallengeNumReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartBuyChallengeNumReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartBuyChallengeNumReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartBuyChallengeNumReq_descriptor_;
}

const TOutsmartBuyChallengeNumReq& TOutsmartBuyChallengeNumReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartBuyChallengeNumReq* TOutsmartBuyChallengeNumReq::default_instance_ = NULL;

TOutsmartBuyChallengeNumReq* TOutsmartBuyChallengeNumReq::New() const {
  return new TOutsmartBuyChallengeNumReq;
}

void TOutsmartBuyChallengeNumReq::Clear() {
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartBuyChallengeNumReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartBuyChallengeNumReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartBuyChallengeNumReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartBuyChallengeNumReq)
  return false;
#undef DO_
}

void TOutsmartBuyChallengeNumReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartBuyChallengeNumReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartBuyChallengeNumReq)
}

::google::protobuf::uint8* TOutsmartBuyChallengeNumReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartBuyChallengeNumReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartBuyChallengeNumReq)
  return target;
}

int TOutsmartBuyChallengeNumReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartBuyChallengeNumReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartBuyChallengeNumReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartBuyChallengeNumReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartBuyChallengeNumReq::MergeFrom(const TOutsmartBuyChallengeNumReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartBuyChallengeNumReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartBuyChallengeNumReq::CopyFrom(const TOutsmartBuyChallengeNumReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartBuyChallengeNumReq::IsInitialized() const {

  return true;
}

void TOutsmartBuyChallengeNumReq::Swap(TOutsmartBuyChallengeNumReq* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartBuyChallengeNumReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartBuyChallengeNumReq_descriptor_;
  metadata.reflection = TOutsmartBuyChallengeNumReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartReceiveSettleRewardRsp::kRewardArrFieldNumber;
#endif  // !_MSC_VER

TOutsmartReceiveSettleRewardRsp::TOutsmartReceiveSettleRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartReceiveSettleRewardRsp)
}

void TOutsmartReceiveSettleRewardRsp::InitAsDefaultInstance() {
}

TOutsmartReceiveSettleRewardRsp::TOutsmartReceiveSettleRewardRsp(const TOutsmartReceiveSettleRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartReceiveSettleRewardRsp)
}

void TOutsmartReceiveSettleRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartReceiveSettleRewardRsp::~TOutsmartReceiveSettleRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartReceiveSettleRewardRsp)
  SharedDtor();
}

void TOutsmartReceiveSettleRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartReceiveSettleRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartReceiveSettleRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartReceiveSettleRewardRsp_descriptor_;
}

const TOutsmartReceiveSettleRewardRsp& TOutsmartReceiveSettleRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartReceiveSettleRewardRsp* TOutsmartReceiveSettleRewardRsp::default_instance_ = NULL;

TOutsmartReceiveSettleRewardRsp* TOutsmartReceiveSettleRewardRsp::New() const {
  return new TOutsmartReceiveSettleRewardRsp;
}

void TOutsmartReceiveSettleRewardRsp::Clear() {
  rewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartReceiveSettleRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartReceiveSettleRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartReceiveSettleRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartReceiveSettleRewardRsp)
  return false;
#undef DO_
}

void TOutsmartReceiveSettleRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartReceiveSettleRewardRsp)
  // repeated .pb.TCommonReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartReceiveSettleRewardRsp)
}

::google::protobuf::uint8* TOutsmartReceiveSettleRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartReceiveSettleRewardRsp)
  // repeated .pb.TCommonReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartReceiveSettleRewardRsp)
  return target;
}

int TOutsmartReceiveSettleRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArr = 1;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartReceiveSettleRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartReceiveSettleRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartReceiveSettleRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartReceiveSettleRewardRsp::MergeFrom(const TOutsmartReceiveSettleRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarr_.MergeFrom(from.rewardarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartReceiveSettleRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartReceiveSettleRewardRsp::CopyFrom(const TOutsmartReceiveSettleRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartReceiveSettleRewardRsp::IsInitialized() const {

  return true;
}

void TOutsmartReceiveSettleRewardRsp::Swap(TOutsmartReceiveSettleRewardRsp* other) {
  if (other != this) {
    rewardarr_.Swap(&other->rewardarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartReceiveSettleRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartReceiveSettleRewardRsp_descriptor_;
  metadata.reflection = TOutsmartReceiveSettleRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartGarrisonReq::kIdFieldNumber;
const int TOutsmartGarrisonReq::kHidFieldNumber;
const int TOutsmartGarrisonReq::kOriIdFieldNumber;
#endif  // !_MSC_VER

TOutsmartGarrisonReq::TOutsmartGarrisonReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartGarrisonReq)
}

void TOutsmartGarrisonReq::InitAsDefaultInstance() {
}

TOutsmartGarrisonReq::TOutsmartGarrisonReq(const TOutsmartGarrisonReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartGarrisonReq)
}

void TOutsmartGarrisonReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  hid_ = 0u;
  oriid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartGarrisonReq::~TOutsmartGarrisonReq() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartGarrisonReq)
  SharedDtor();
}

void TOutsmartGarrisonReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartGarrisonReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartGarrisonReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartGarrisonReq_descriptor_;
}

const TOutsmartGarrisonReq& TOutsmartGarrisonReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartGarrisonReq* TOutsmartGarrisonReq::default_instance_ = NULL;

TOutsmartGarrisonReq* TOutsmartGarrisonReq::New() const {
  return new TOutsmartGarrisonReq;
}

void TOutsmartGarrisonReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOutsmartGarrisonReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, oriid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartGarrisonReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartGarrisonReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Hid;
        break;
      }

      // optional uint32 Hid = 2;
      case 2: {
        if (tag == 16) {
         parse_Hid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_OriId;
        break;
      }

      // optional uint32 OriId = 3;
      case 3: {
        if (tag == 24) {
         parse_OriId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oriid_)));
          set_has_oriid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartGarrisonReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartGarrisonReq)
  return false;
#undef DO_
}

void TOutsmartGarrisonReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartGarrisonReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hid(), output);
  }

  // optional uint32 OriId = 3;
  if (has_oriid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->oriid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartGarrisonReq)
}

::google::protobuf::uint8* TOutsmartGarrisonReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartGarrisonReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hid(), target);
  }

  // optional uint32 OriId = 3;
  if (has_oriid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->oriid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartGarrisonReq)
  return target;
}

int TOutsmartGarrisonReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Hid = 2;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

    // optional uint32 OriId = 3;
    if (has_oriid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oriid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartGarrisonReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartGarrisonReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartGarrisonReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartGarrisonReq::MergeFrom(const TOutsmartGarrisonReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_hid()) {
      set_hid(from.hid());
    }
    if (from.has_oriid()) {
      set_oriid(from.oriid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartGarrisonReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartGarrisonReq::CopyFrom(const TOutsmartGarrisonReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartGarrisonReq::IsInitialized() const {

  return true;
}

void TOutsmartGarrisonReq::Swap(TOutsmartGarrisonReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(hid_, other->hid_);
    std::swap(oriid_, other->oriid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartGarrisonReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartGarrisonReq_descriptor_;
  metadata.reflection = TOutsmartGarrisonReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartSweepReq::kIdFieldNumber;
const int TOutsmartSweepReq::kRefreshTimeFieldNumber;
const int TOutsmartSweepReq::kSwTypeFieldNumber;
#endif  // !_MSC_VER

TOutsmartSweepReq::TOutsmartSweepReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartSweepReq)
}

void TOutsmartSweepReq::InitAsDefaultInstance() {
}

TOutsmartSweepReq::TOutsmartSweepReq(const TOutsmartSweepReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartSweepReq)
}

void TOutsmartSweepReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  refreshtime_ = GOOGLE_ULONGLONG(0);
  swtype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartSweepReq::~TOutsmartSweepReq() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartSweepReq)
  SharedDtor();
}

void TOutsmartSweepReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartSweepReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartSweepReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartSweepReq_descriptor_;
}

const TOutsmartSweepReq& TOutsmartSweepReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartSweepReq* TOutsmartSweepReq::default_instance_ = NULL;

TOutsmartSweepReq* TOutsmartSweepReq::New() const {
  return new TOutsmartSweepReq;
}

void TOutsmartSweepReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOutsmartSweepReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(refreshtime_, swtype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartSweepReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartSweepReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RefreshTime;
        break;
      }

      // optional uint64 RefreshTime = 2;
      case 2: {
        if (tag == 16) {
         parse_RefreshTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &refreshtime_)));
          set_has_refreshtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SwType;
        break;
      }

      // optional uint32 SwType = 3;
      case 3: {
        if (tag == 24) {
         parse_SwType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &swtype_)));
          set_has_swtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartSweepReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartSweepReq)
  return false;
#undef DO_
}

void TOutsmartSweepReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartSweepReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 RefreshTime = 2;
  if (has_refreshtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->refreshtime(), output);
  }

  // optional uint32 SwType = 3;
  if (has_swtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->swtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartSweepReq)
}

::google::protobuf::uint8* TOutsmartSweepReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartSweepReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 RefreshTime = 2;
  if (has_refreshtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->refreshtime(), target);
  }

  // optional uint32 SwType = 3;
  if (has_swtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->swtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartSweepReq)
  return target;
}

int TOutsmartSweepReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 RefreshTime = 2;
    if (has_refreshtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->refreshtime());
    }

    // optional uint32 SwType = 3;
    if (has_swtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->swtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartSweepReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartSweepReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartSweepReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartSweepReq::MergeFrom(const TOutsmartSweepReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_refreshtime()) {
      set_refreshtime(from.refreshtime());
    }
    if (from.has_swtype()) {
      set_swtype(from.swtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartSweepReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartSweepReq::CopyFrom(const TOutsmartSweepReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartSweepReq::IsInitialized() const {

  return true;
}

void TOutsmartSweepReq::Swap(TOutsmartSweepReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(refreshtime_, other->refreshtime_);
    std::swap(swtype_, other->swtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartSweepReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartSweepReq_descriptor_;
  metadata.reflection = TOutsmartSweepReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartSweepRsp::kRewardArrFieldNumber;
const int TOutsmartSweepRsp::kBuffIdArrFieldNumber;
#endif  // !_MSC_VER

TOutsmartSweepRsp::TOutsmartSweepRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartSweepRsp)
}

void TOutsmartSweepRsp::InitAsDefaultInstance() {
}

TOutsmartSweepRsp::TOutsmartSweepRsp(const TOutsmartSweepRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartSweepRsp)
}

void TOutsmartSweepRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartSweepRsp::~TOutsmartSweepRsp() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartSweepRsp)
  SharedDtor();
}

void TOutsmartSweepRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartSweepRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartSweepRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartSweepRsp_descriptor_;
}

const TOutsmartSweepRsp& TOutsmartSweepRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartSweepRsp* TOutsmartSweepRsp::default_instance_ = NULL;

TOutsmartSweepRsp* TOutsmartSweepRsp::New() const {
  return new TOutsmartSweepRsp;
}

void TOutsmartSweepRsp::Clear() {
  rewardarr_.Clear();
  buffidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartSweepRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartSweepRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArr;
        if (input->ExpectTag(16)) goto parse_BuffIdArr;
        break;
      }

      // repeated uint32 BuffIdArr = 2;
      case 2: {
        if (tag == 16) {
         parse_BuffIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_buffidarr())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_buffidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BuffIdArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartSweepRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartSweepRsp)
  return false;
#undef DO_
}

void TOutsmartSweepRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartSweepRsp)
  // repeated .pb.TCommonReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarr(i), output);
  }

  // repeated uint32 BuffIdArr = 2;
  for (int i = 0; i < this->buffidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->buffidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartSweepRsp)
}

::google::protobuf::uint8* TOutsmartSweepRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartSweepRsp)
  // repeated .pb.TCommonReward RewardArr = 1;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarr(i), target);
  }

  // repeated uint32 BuffIdArr = 2;
  for (int i = 0; i < this->buffidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->buffidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartSweepRsp)
  return target;
}

int TOutsmartSweepRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArr = 1;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  // repeated uint32 BuffIdArr = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->buffidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->buffidarr(i));
    }
    total_size += 1 * this->buffidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartSweepRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartSweepRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartSweepRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartSweepRsp::MergeFrom(const TOutsmartSweepRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarr_.MergeFrom(from.rewardarr_);
  buffidarr_.MergeFrom(from.buffidarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartSweepRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartSweepRsp::CopyFrom(const TOutsmartSweepRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartSweepRsp::IsInitialized() const {

  return true;
}

void TOutsmartSweepRsp::Swap(TOutsmartSweepRsp* other) {
  if (other != this) {
    rewardarr_.Swap(&other->rewardarr_);
    buffidarr_.Swap(&other->buffidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartSweepRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartSweepRsp_descriptor_;
  metadata.reflection = TOutsmartSweepRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartGarrisonInfo::kIdFieldNumber;
const int TOutsmartGarrisonInfo::kHidFieldNumber;
#endif  // !_MSC_VER

TOutsmartGarrisonInfo::TOutsmartGarrisonInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartGarrisonInfo)
}

void TOutsmartGarrisonInfo::InitAsDefaultInstance() {
}

TOutsmartGarrisonInfo::TOutsmartGarrisonInfo(const TOutsmartGarrisonInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartGarrisonInfo)
}

void TOutsmartGarrisonInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartGarrisonInfo::~TOutsmartGarrisonInfo() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartGarrisonInfo)
  SharedDtor();
}

void TOutsmartGarrisonInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartGarrisonInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartGarrisonInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartGarrisonInfo_descriptor_;
}

const TOutsmartGarrisonInfo& TOutsmartGarrisonInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartGarrisonInfo* TOutsmartGarrisonInfo::default_instance_ = NULL;

TOutsmartGarrisonInfo* TOutsmartGarrisonInfo::New() const {
  return new TOutsmartGarrisonInfo;
}

void TOutsmartGarrisonInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TOutsmartGarrisonInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, hid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartGarrisonInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartGarrisonInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Hid;
        break;
      }

      // optional uint32 Hid = 2;
      case 2: {
        if (tag == 16) {
         parse_Hid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartGarrisonInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartGarrisonInfo)
  return false;
#undef DO_
}

void TOutsmartGarrisonInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartGarrisonInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartGarrisonInfo)
}

::google::protobuf::uint8* TOutsmartGarrisonInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartGarrisonInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartGarrisonInfo)
  return target;
}

int TOutsmartGarrisonInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Hid = 2;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartGarrisonInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartGarrisonInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartGarrisonInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartGarrisonInfo::MergeFrom(const TOutsmartGarrisonInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartGarrisonInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartGarrisonInfo::CopyFrom(const TOutsmartGarrisonInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartGarrisonInfo::IsInitialized() const {

  return true;
}

void TOutsmartGarrisonInfo::Swap(TOutsmartGarrisonInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartGarrisonInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartGarrisonInfo_descriptor_;
  metadata.reflection = TOutsmartGarrisonInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TOutsmartOneKeyGarrisonReq::kGarrisonInfoArrFieldNumber;
#endif  // !_MSC_VER

TOutsmartOneKeyGarrisonReq::TOutsmartOneKeyGarrisonReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TOutsmartOneKeyGarrisonReq)
}

void TOutsmartOneKeyGarrisonReq::InitAsDefaultInstance() {
}

TOutsmartOneKeyGarrisonReq::TOutsmartOneKeyGarrisonReq(const TOutsmartOneKeyGarrisonReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TOutsmartOneKeyGarrisonReq)
}

void TOutsmartOneKeyGarrisonReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TOutsmartOneKeyGarrisonReq::~TOutsmartOneKeyGarrisonReq() {
  // @@protoc_insertion_point(destructor:pb.TOutsmartOneKeyGarrisonReq)
  SharedDtor();
}

void TOutsmartOneKeyGarrisonReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TOutsmartOneKeyGarrisonReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TOutsmartOneKeyGarrisonReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOutsmartOneKeyGarrisonReq_descriptor_;
}

const TOutsmartOneKeyGarrisonReq& TOutsmartOneKeyGarrisonReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fOutsmart_2eproto();
  return *default_instance_;
}

TOutsmartOneKeyGarrisonReq* TOutsmartOneKeyGarrisonReq::default_instance_ = NULL;

TOutsmartOneKeyGarrisonReq* TOutsmartOneKeyGarrisonReq::New() const {
  return new TOutsmartOneKeyGarrisonReq;
}

void TOutsmartOneKeyGarrisonReq::Clear() {
  garrisoninfoarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TOutsmartOneKeyGarrisonReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TOutsmartOneKeyGarrisonReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TOutsmartGarrisonInfo GarrisonInfoArr = 1;
      case 1: {
        if (tag == 10) {
         parse_GarrisonInfoArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_garrisoninfoarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_GarrisonInfoArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TOutsmartOneKeyGarrisonReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TOutsmartOneKeyGarrisonReq)
  return false;
#undef DO_
}

void TOutsmartOneKeyGarrisonReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TOutsmartOneKeyGarrisonReq)
  // repeated .pb.TOutsmartGarrisonInfo GarrisonInfoArr = 1;
  for (int i = 0; i < this->garrisoninfoarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->garrisoninfoarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TOutsmartOneKeyGarrisonReq)
}

::google::protobuf::uint8* TOutsmartOneKeyGarrisonReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TOutsmartOneKeyGarrisonReq)
  // repeated .pb.TOutsmartGarrisonInfo GarrisonInfoArr = 1;
  for (int i = 0; i < this->garrisoninfoarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->garrisoninfoarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TOutsmartOneKeyGarrisonReq)
  return target;
}

int TOutsmartOneKeyGarrisonReq::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TOutsmartGarrisonInfo GarrisonInfoArr = 1;
  total_size += 1 * this->garrisoninfoarr_size();
  for (int i = 0; i < this->garrisoninfoarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->garrisoninfoarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TOutsmartOneKeyGarrisonReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TOutsmartOneKeyGarrisonReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TOutsmartOneKeyGarrisonReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TOutsmartOneKeyGarrisonReq::MergeFrom(const TOutsmartOneKeyGarrisonReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  garrisoninfoarr_.MergeFrom(from.garrisoninfoarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TOutsmartOneKeyGarrisonReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TOutsmartOneKeyGarrisonReq::CopyFrom(const TOutsmartOneKeyGarrisonReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOutsmartOneKeyGarrisonReq::IsInitialized() const {

  return true;
}

void TOutsmartOneKeyGarrisonReq::Swap(TOutsmartOneKeyGarrisonReq* other) {
  if (other != this) {
    garrisoninfoarr_.Swap(&other->garrisoninfoarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TOutsmartOneKeyGarrisonReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TOutsmartOneKeyGarrisonReq_descriptor_;
  metadata.reflection = TOutsmartOneKeyGarrisonReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
