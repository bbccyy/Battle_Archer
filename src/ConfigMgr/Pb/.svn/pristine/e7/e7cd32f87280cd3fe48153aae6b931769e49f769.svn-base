// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/SlgSmithy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/SlgSmithy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TSlgSmithySmithReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgSmithySmithReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgSmithySynthesisReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgSmithySynthesisReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fSlgSmithy_2eproto() {
  protobuf_AddDesc_net_2fSlgSmithy_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/SlgSmithy.proto");
  GOOGLE_CHECK(file != NULL);
  TSlgSmithySmithReq_descriptor_ = file->message_type(0);
  static const int TSlgSmithySmithReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgSmithySmithReq, targetarmtid_),
  };
  TSlgSmithySmithReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgSmithySmithReq_descriptor_,
      TSlgSmithySmithReq::default_instance_,
      TSlgSmithySmithReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgSmithySmithReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgSmithySmithReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgSmithySmithReq));
  TSlgSmithySynthesisReq_descriptor_ = file->message_type(1);
  static const int TSlgSmithySynthesisReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgSmithySynthesisReq, targetarmtid_),
  };
  TSlgSmithySynthesisReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgSmithySynthesisReq_descriptor_,
      TSlgSmithySynthesisReq::default_instance_,
      TSlgSmithySynthesisReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgSmithySynthesisReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgSmithySynthesisReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgSmithySynthesisReq));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fSlgSmithy_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgSmithySmithReq_descriptor_, &TSlgSmithySmithReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgSmithySynthesisReq_descriptor_, &TSlgSmithySynthesisReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fSlgSmithy_2eproto() {
  delete TSlgSmithySmithReq::default_instance_;
  delete TSlgSmithySmithReq_reflection_;
  delete TSlgSmithySynthesisReq::default_instance_;
  delete TSlgSmithySynthesisReq_reflection_;
}

void protobuf_AddDesc_net_2fSlgSmithy_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023net/SlgSmithy.proto\022\002pb\"*\n\022TSlgSmithyS"
    "mithReq\022\024\n\014TargetArmTid\030\001 \001(\r\".\n\026TSlgSmi"
    "thySynthesisReq\022\024\n\014TargetArmTid\030\001 \001(\r", 117);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/SlgSmithy.proto", &protobuf_RegisterTypes);
  TSlgSmithySmithReq::default_instance_ = new TSlgSmithySmithReq();
  TSlgSmithySynthesisReq::default_instance_ = new TSlgSmithySynthesisReq();
  TSlgSmithySmithReq::default_instance_->InitAsDefaultInstance();
  TSlgSmithySynthesisReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fSlgSmithy_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fSlgSmithy_2eproto {
  StaticDescriptorInitializer_net_2fSlgSmithy_2eproto() {
    protobuf_AddDesc_net_2fSlgSmithy_2eproto();
  }
} static_descriptor_initializer_net_2fSlgSmithy_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TSlgSmithySmithReq::kTargetArmTidFieldNumber;
#endif  // !_MSC_VER

TSlgSmithySmithReq::TSlgSmithySmithReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgSmithySmithReq)
}

void TSlgSmithySmithReq::InitAsDefaultInstance() {
}

TSlgSmithySmithReq::TSlgSmithySmithReq(const TSlgSmithySmithReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgSmithySmithReq)
}

void TSlgSmithySmithReq::SharedCtor() {
  _cached_size_ = 0;
  targetarmtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgSmithySmithReq::~TSlgSmithySmithReq() {
  // @@protoc_insertion_point(destructor:pb.TSlgSmithySmithReq)
  SharedDtor();
}

void TSlgSmithySmithReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgSmithySmithReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgSmithySmithReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgSmithySmithReq_descriptor_;
}

const TSlgSmithySmithReq& TSlgSmithySmithReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgSmithy_2eproto();
  return *default_instance_;
}

TSlgSmithySmithReq* TSlgSmithySmithReq::default_instance_ = NULL;

TSlgSmithySmithReq* TSlgSmithySmithReq::New() const {
  return new TSlgSmithySmithReq;
}

void TSlgSmithySmithReq::Clear() {
  targetarmtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgSmithySmithReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgSmithySmithReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TargetArmTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetarmtid_)));
          set_has_targetarmtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgSmithySmithReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgSmithySmithReq)
  return false;
#undef DO_
}

void TSlgSmithySmithReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgSmithySmithReq)
  // optional uint32 TargetArmTid = 1;
  if (has_targetarmtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->targetarmtid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgSmithySmithReq)
}

::google::protobuf::uint8* TSlgSmithySmithReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgSmithySmithReq)
  // optional uint32 TargetArmTid = 1;
  if (has_targetarmtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->targetarmtid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgSmithySmithReq)
  return target;
}

int TSlgSmithySmithReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TargetArmTid = 1;
    if (has_targetarmtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targetarmtid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgSmithySmithReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgSmithySmithReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgSmithySmithReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgSmithySmithReq::MergeFrom(const TSlgSmithySmithReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_targetarmtid()) {
      set_targetarmtid(from.targetarmtid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgSmithySmithReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgSmithySmithReq::CopyFrom(const TSlgSmithySmithReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgSmithySmithReq::IsInitialized() const {

  return true;
}

void TSlgSmithySmithReq::Swap(TSlgSmithySmithReq* other) {
  if (other != this) {
    std::swap(targetarmtid_, other->targetarmtid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgSmithySmithReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgSmithySmithReq_descriptor_;
  metadata.reflection = TSlgSmithySmithReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgSmithySynthesisReq::kTargetArmTidFieldNumber;
#endif  // !_MSC_VER

TSlgSmithySynthesisReq::TSlgSmithySynthesisReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgSmithySynthesisReq)
}

void TSlgSmithySynthesisReq::InitAsDefaultInstance() {
}

TSlgSmithySynthesisReq::TSlgSmithySynthesisReq(const TSlgSmithySynthesisReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgSmithySynthesisReq)
}

void TSlgSmithySynthesisReq::SharedCtor() {
  _cached_size_ = 0;
  targetarmtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgSmithySynthesisReq::~TSlgSmithySynthesisReq() {
  // @@protoc_insertion_point(destructor:pb.TSlgSmithySynthesisReq)
  SharedDtor();
}

void TSlgSmithySynthesisReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgSmithySynthesisReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgSmithySynthesisReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgSmithySynthesisReq_descriptor_;
}

const TSlgSmithySynthesisReq& TSlgSmithySynthesisReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgSmithy_2eproto();
  return *default_instance_;
}

TSlgSmithySynthesisReq* TSlgSmithySynthesisReq::default_instance_ = NULL;

TSlgSmithySynthesisReq* TSlgSmithySynthesisReq::New() const {
  return new TSlgSmithySynthesisReq;
}

void TSlgSmithySynthesisReq::Clear() {
  targetarmtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgSmithySynthesisReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgSmithySynthesisReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TargetArmTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetarmtid_)));
          set_has_targetarmtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgSmithySynthesisReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgSmithySynthesisReq)
  return false;
#undef DO_
}

void TSlgSmithySynthesisReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgSmithySynthesisReq)
  // optional uint32 TargetArmTid = 1;
  if (has_targetarmtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->targetarmtid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgSmithySynthesisReq)
}

::google::protobuf::uint8* TSlgSmithySynthesisReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgSmithySynthesisReq)
  // optional uint32 TargetArmTid = 1;
  if (has_targetarmtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->targetarmtid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgSmithySynthesisReq)
  return target;
}

int TSlgSmithySynthesisReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TargetArmTid = 1;
    if (has_targetarmtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targetarmtid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgSmithySynthesisReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgSmithySynthesisReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgSmithySynthesisReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgSmithySynthesisReq::MergeFrom(const TSlgSmithySynthesisReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_targetarmtid()) {
      set_targetarmtid(from.targetarmtid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgSmithySynthesisReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgSmithySynthesisReq::CopyFrom(const TSlgSmithySynthesisReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgSmithySynthesisReq::IsInitialized() const {

  return true;
}

void TSlgSmithySynthesisReq::Swap(TSlgSmithySynthesisReq* other) {
  if (other != this) {
    std::swap(targetarmtid_, other->targetarmtid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgSmithySynthesisReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgSmithySynthesisReq_descriptor_;
  metadata.reflection = TSlgSmithySynthesisReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
