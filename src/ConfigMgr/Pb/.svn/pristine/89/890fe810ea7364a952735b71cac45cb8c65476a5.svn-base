// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActUnionRechargeBack.proto

#ifndef PROTOBUF_net_2fActUnionRechargeBack_2eproto__INCLUDED
#define PROTOBUF_net_2fActUnionRechargeBack_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/User.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
void protobuf_AssignDesc_net_2fActUnionRechargeBack_2eproto();
void protobuf_ShutdownFile_net_2fActUnionRechargeBack_2eproto();

class TActUnionRechargeBackUserReward;
class TActUnionRechargeBackAllyReward;
class TActUnionRechargeBackGetUserInfoRsp;
class TActUnionRechargeBackReceiveRewardReq;
class TActUnionRechargeBackGetAllyInfoRsp;
class TActUnionRechargeBackRank;
class TActUnionRechargeBackGetRankInfoRsp;
class TActUnionRechargeBackAllyChangeNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActUnionRechargeBackUserReward</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnionRechargeBack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnionRechargeBackUserReward : public ::google::protobuf::Message {
 public:
  TActUnionRechargeBackUserReward();
  virtual ~TActUnionRechargeBackUserReward();

  TActUnionRechargeBackUserReward(const TActUnionRechargeBackUserReward& from);

  inline TActUnionRechargeBackUserReward& operator=(const TActUnionRechargeBackUserReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnionRechargeBackUserReward& default_instance();

  void Swap(TActUnionRechargeBackUserReward* other);

  // implements Message ----------------------------------------------

  TActUnionRechargeBackUserReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnionRechargeBackUserReward& from);
  void MergeFrom(const TActUnionRechargeBackUserReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackUserReward</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackUserReward</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 CanNum = 3;
  inline bool has_cannum() const;
  inline void clear_cannum();
  static const int kCanNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackUserReward</name>
  	<Function>
  		<name>cannum</name>
  		<replaceName>CanNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_cannum</name>
  		<replaceName>CanNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_cannum</name>
  		<replaceName>CanNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 cannum() const;
  inline void set_cannum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnionRechargeBackUserReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_cannum();
  inline void clear_has_cannum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 cannum_;
  friend void  protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnionRechargeBack_2eproto();

  void InitAsDefaultInstance();
  static TActUnionRechargeBackUserReward* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnionRechargeBackAllyReward</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnionRechargeBack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnionRechargeBackAllyReward : public ::google::protobuf::Message {
 public:
  TActUnionRechargeBackAllyReward();
  virtual ~TActUnionRechargeBackAllyReward();

  TActUnionRechargeBackAllyReward(const TActUnionRechargeBackAllyReward& from);

  inline TActUnionRechargeBackAllyReward& operator=(const TActUnionRechargeBackAllyReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnionRechargeBackAllyReward& default_instance();

  void Swap(TActUnionRechargeBackAllyReward* other);

  // implements Message ----------------------------------------------

  TActUnionRechargeBackAllyReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnionRechargeBackAllyReward& from);
  void MergeFrom(const TActUnionRechargeBackAllyReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackAllyReward</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackAllyReward</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 CanNum = 3;
  inline bool has_cannum() const;
  inline void clear_cannum();
  static const int kCanNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackAllyReward</name>
  	<Function>
  		<name>cannum</name>
  		<replaceName>CanNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_cannum</name>
  		<replaceName>CanNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_cannum</name>
  		<replaceName>CanNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 cannum() const;
  inline void set_cannum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnionRechargeBackAllyReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_cannum();
  inline void clear_has_cannum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 cannum_;
  friend void  protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnionRechargeBack_2eproto();

  void InitAsDefaultInstance();
  static TActUnionRechargeBackAllyReward* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnionRechargeBackGetUserInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnionRechargeBack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnionRechargeBackGetUserInfoRsp : public ::google::protobuf::Message {
 public:
  TActUnionRechargeBackGetUserInfoRsp();
  virtual ~TActUnionRechargeBackGetUserInfoRsp();

  TActUnionRechargeBackGetUserInfoRsp(const TActUnionRechargeBackGetUserInfoRsp& from);

  inline TActUnionRechargeBackGetUserInfoRsp& operator=(const TActUnionRechargeBackGetUserInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnionRechargeBackGetUserInfoRsp& default_instance();

  void Swap(TActUnionRechargeBackGetUserInfoRsp* other);

  // implements Message ----------------------------------------------

  TActUnionRechargeBackGetUserInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnionRechargeBackGetUserInfoRsp& from);
  void MergeFrom(const TActUnionRechargeBackGetUserInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackGetUserInfoRsp</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // repeated .pb.TActUnionRechargeBackUserReward UserRewardArr = 2;
  inline int userrewardarr_size() const;
  inline void clear_userrewardarr();
  static const int kUserRewardArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackGetUserInfoRsp</name>
  	<Function>
  		<name>userrewardarr</name>
  		<replaceName>UserRewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_userrewardarr</name>
  		<replaceName>UserRewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_userrewardarr</name>
  		<replaceName>UserRewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userrewardarr</name>
  		<replaceName>UserRewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>userrewardarr_size</name>
  		<replaceName>UserRewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActUnionRechargeBackUserReward& userrewardarr(int index) const;
  inline ::pb::TActUnionRechargeBackUserReward* mutable_userrewardarr(int index);
  inline ::pb::TActUnionRechargeBackUserReward* add_userrewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackUserReward >&
      userrewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackUserReward >*
      mutable_userrewardarr();

  // repeated .pb.TActUnionRechargeBackAllyReward AllyRewardArr = 3;
  inline int allyrewardarr_size() const;
  inline void clear_allyrewardarr();
  static const int kAllyRewardArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackGetUserInfoRsp</name>
  	<Function>
  		<name>allyrewardarr</name>
  		<replaceName>AllyRewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_allyrewardarr</name>
  		<replaceName>AllyRewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_allyrewardarr</name>
  		<replaceName>AllyRewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_allyrewardarr</name>
  		<replaceName>AllyRewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>allyrewardarr_size</name>
  		<replaceName>AllyRewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActUnionRechargeBackAllyReward& allyrewardarr(int index) const;
  inline ::pb::TActUnionRechargeBackAllyReward* mutable_allyrewardarr(int index);
  inline ::pb::TActUnionRechargeBackAllyReward* add_allyrewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackAllyReward >&
      allyrewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackAllyReward >*
      mutable_allyrewardarr();

  // optional uint32 UserAllyScore = 4;
  inline bool has_userallyscore() const;
  inline void clear_userallyscore();
  static const int kUserAllyScoreFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackGetUserInfoRsp</name>
  	<Function>
  		<name>userallyscore</name>
  		<replaceName>UserAllyScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userallyscore</name>
  		<replaceName>UserAllyScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userallyscore</name>
  		<replaceName>UserAllyScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 userallyscore() const;
  inline void set_userallyscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnionRechargeBackGetUserInfoRsp)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_userallyscore();
  inline void clear_has_userallyscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackUserReward > userrewardarr_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 userallyscore_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackAllyReward > allyrewardarr_;
  friend void  protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnionRechargeBack_2eproto();

  void InitAsDefaultInstance();
  static TActUnionRechargeBackGetUserInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnionRechargeBackReceiveRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnionRechargeBack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnionRechargeBackReceiveRewardReq : public ::google::protobuf::Message {
 public:
  TActUnionRechargeBackReceiveRewardReq();
  virtual ~TActUnionRechargeBackReceiveRewardReq();

  TActUnionRechargeBackReceiveRewardReq(const TActUnionRechargeBackReceiveRewardReq& from);

  inline TActUnionRechargeBackReceiveRewardReq& operator=(const TActUnionRechargeBackReceiveRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnionRechargeBackReceiveRewardReq& default_instance();

  void Swap(TActUnionRechargeBackReceiveRewardReq* other);

  // implements Message ----------------------------------------------

  TActUnionRechargeBackReceiveRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnionRechargeBackReceiveRewardReq& from);
  void MergeFrom(const TActUnionRechargeBackReceiveRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackReceiveRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnionRechargeBackReceiveRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnionRechargeBack_2eproto();

  void InitAsDefaultInstance();
  static TActUnionRechargeBackReceiveRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnionRechargeBackGetAllyInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnionRechargeBack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnionRechargeBackGetAllyInfoRsp : public ::google::protobuf::Message {
 public:
  TActUnionRechargeBackGetAllyInfoRsp();
  virtual ~TActUnionRechargeBackGetAllyInfoRsp();

  TActUnionRechargeBackGetAllyInfoRsp(const TActUnionRechargeBackGetAllyInfoRsp& from);

  inline TActUnionRechargeBackGetAllyInfoRsp& operator=(const TActUnionRechargeBackGetAllyInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnionRechargeBackGetAllyInfoRsp& default_instance();

  void Swap(TActUnionRechargeBackGetAllyInfoRsp* other);

  // implements Message ----------------------------------------------

  TActUnionRechargeBackGetAllyInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnionRechargeBackGetAllyInfoRsp& from);
  void MergeFrom(const TActUnionRechargeBackGetAllyInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackGetAllyInfoRsp</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnionRechargeBackGetAllyInfoRsp)
 private:
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 score_;
  friend void  protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnionRechargeBack_2eproto();

  void InitAsDefaultInstance();
  static TActUnionRechargeBackGetAllyInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnionRechargeBackRank</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnionRechargeBack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnionRechargeBackRank : public ::google::protobuf::Message {
 public:
  TActUnionRechargeBackRank();
  virtual ~TActUnionRechargeBackRank();

  TActUnionRechargeBackRank(const TActUnionRechargeBackRank& from);

  inline TActUnionRechargeBackRank& operator=(const TActUnionRechargeBackRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnionRechargeBackRank& default_instance();

  void Swap(TActUnionRechargeBackRank* other);

  // implements Message ----------------------------------------------

  TActUnionRechargeBackRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnionRechargeBackRank& from);
  void MergeFrom(const TActUnionRechargeBackRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUserSimpleInfo UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackRank</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // optional uint32 Score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackRank</name>
  	<Function>
  		<name>score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_score</name>
  		<replaceName>Score</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnionRechargeBackRank)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUserSimpleInfo* userinfo_;
  ::google::protobuf::uint32 score_;
  friend void  protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnionRechargeBack_2eproto();

  void InitAsDefaultInstance();
  static TActUnionRechargeBackRank* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnionRechargeBackGetRankInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnionRechargeBack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnionRechargeBackGetRankInfoRsp : public ::google::protobuf::Message {
 public:
  TActUnionRechargeBackGetRankInfoRsp();
  virtual ~TActUnionRechargeBackGetRankInfoRsp();

  TActUnionRechargeBackGetRankInfoRsp(const TActUnionRechargeBackGetRankInfoRsp& from);

  inline TActUnionRechargeBackGetRankInfoRsp& operator=(const TActUnionRechargeBackGetRankInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnionRechargeBackGetRankInfoRsp& default_instance();

  void Swap(TActUnionRechargeBackGetRankInfoRsp* other);

  // implements Message ----------------------------------------------

  TActUnionRechargeBackGetRankInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnionRechargeBackGetRankInfoRsp& from);
  void MergeFrom(const TActUnionRechargeBackGetRankInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TActUnionRechargeBackRank RankArr = 1;
  inline int rankarr_size() const;
  inline void clear_rankarr();
  static const int kRankArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackGetRankInfoRsp</name>
  	<Function>
  		<name>rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rankarr</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rankarr_size</name>
  		<replaceName>RankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TActUnionRechargeBackRank& rankarr(int index) const;
  inline ::pb::TActUnionRechargeBackRank* mutable_rankarr(int index);
  inline ::pb::TActUnionRechargeBackRank* add_rankarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackRank >&
      rankarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackRank >*
      mutable_rankarr();

  // @@protoc_insertion_point(class_scope:pb.TActUnionRechargeBackGetRankInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackRank > rankarr_;
  friend void  protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnionRechargeBack_2eproto();

  void InitAsDefaultInstance();
  static TActUnionRechargeBackGetRankInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActUnionRechargeBackAllyChangeNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActUnionRechargeBack.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActUnionRechargeBackAllyChangeNotify : public ::google::protobuf::Message {
 public:
  TActUnionRechargeBackAllyChangeNotify();
  virtual ~TActUnionRechargeBackAllyChangeNotify();

  TActUnionRechargeBackAllyChangeNotify(const TActUnionRechargeBackAllyChangeNotify& from);

  inline TActUnionRechargeBackAllyChangeNotify& operator=(const TActUnionRechargeBackAllyChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActUnionRechargeBackAllyChangeNotify& default_instance();

  void Swap(TActUnionRechargeBackAllyChangeNotify* other);

  // implements Message ----------------------------------------------

  TActUnionRechargeBackAllyChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActUnionRechargeBackAllyChangeNotify& from);
  void MergeFrom(const TActUnionRechargeBackAllyChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 AllyScore = 1;
  inline bool has_allyscore() const;
  inline void clear_allyscore();
  static const int kAllyScoreFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActUnionRechargeBackAllyChangeNotify</name>
  	<Function>
  		<name>allyscore</name>
  		<replaceName>AllyScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allyscore</name>
  		<replaceName>AllyScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_allyscore</name>
  		<replaceName>AllyScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 allyscore() const;
  inline void set_allyscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActUnionRechargeBackAllyChangeNotify)
 private:
  inline void set_has_allyscore();
  inline void clear_has_allyscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 allyscore_;
  friend void  protobuf_AddDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_AssignDesc_net_2fActUnionRechargeBack_2eproto();
  friend void protobuf_ShutdownFile_net_2fActUnionRechargeBack_2eproto();

  void InitAsDefaultInstance();
  static TActUnionRechargeBackAllyChangeNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TActUnionRechargeBackUserReward

// optional uint32 Id = 1;
inline bool TActUnionRechargeBackUserReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnionRechargeBackUserReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnionRechargeBackUserReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnionRechargeBackUserReward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActUnionRechargeBackUserReward::id() const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackUserReward.Id)
  return id_;
}
inline void TActUnionRechargeBackUserReward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnionRechargeBackUserReward.Id)
}

// optional uint32 Num = 2;
inline bool TActUnionRechargeBackUserReward::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActUnionRechargeBackUserReward::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActUnionRechargeBackUserReward::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActUnionRechargeBackUserReward::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActUnionRechargeBackUserReward::num() const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackUserReward.Num)
  return num_;
}
inline void TActUnionRechargeBackUserReward::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnionRechargeBackUserReward.Num)
}

// optional uint32 CanNum = 3;
inline bool TActUnionRechargeBackUserReward::has_cannum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActUnionRechargeBackUserReward::set_has_cannum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActUnionRechargeBackUserReward::clear_has_cannum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActUnionRechargeBackUserReward::clear_cannum() {
  cannum_ = 0u;
  clear_has_cannum();
}
inline ::google::protobuf::uint32 TActUnionRechargeBackUserReward::cannum() const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackUserReward.CanNum)
  return cannum_;
}
inline void TActUnionRechargeBackUserReward::set_cannum(::google::protobuf::uint32 value) {
  set_has_cannum();
  cannum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnionRechargeBackUserReward.CanNum)
}

// -------------------------------------------------------------------

// TActUnionRechargeBackAllyReward

// optional uint32 Id = 1;
inline bool TActUnionRechargeBackAllyReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnionRechargeBackAllyReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnionRechargeBackAllyReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnionRechargeBackAllyReward::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActUnionRechargeBackAllyReward::id() const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackAllyReward.Id)
  return id_;
}
inline void TActUnionRechargeBackAllyReward::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnionRechargeBackAllyReward.Id)
}

// optional uint32 Num = 2;
inline bool TActUnionRechargeBackAllyReward::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActUnionRechargeBackAllyReward::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActUnionRechargeBackAllyReward::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActUnionRechargeBackAllyReward::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TActUnionRechargeBackAllyReward::num() const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackAllyReward.Num)
  return num_;
}
inline void TActUnionRechargeBackAllyReward::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnionRechargeBackAllyReward.Num)
}

// optional uint32 CanNum = 3;
inline bool TActUnionRechargeBackAllyReward::has_cannum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TActUnionRechargeBackAllyReward::set_has_cannum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TActUnionRechargeBackAllyReward::clear_has_cannum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TActUnionRechargeBackAllyReward::clear_cannum() {
  cannum_ = 0u;
  clear_has_cannum();
}
inline ::google::protobuf::uint32 TActUnionRechargeBackAllyReward::cannum() const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackAllyReward.CanNum)
  return cannum_;
}
inline void TActUnionRechargeBackAllyReward::set_cannum(::google::protobuf::uint32 value) {
  set_has_cannum();
  cannum_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnionRechargeBackAllyReward.CanNum)
}

// -------------------------------------------------------------------

// TActUnionRechargeBackGetUserInfoRsp

// optional uint32 Score = 1;
inline bool TActUnionRechargeBackGetUserInfoRsp::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnionRechargeBackGetUserInfoRsp::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnionRechargeBackGetUserInfoRsp::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnionRechargeBackGetUserInfoRsp::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 TActUnionRechargeBackGetUserInfoRsp::score() const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackGetUserInfoRsp.Score)
  return score_;
}
inline void TActUnionRechargeBackGetUserInfoRsp::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnionRechargeBackGetUserInfoRsp.Score)
}

// repeated .pb.TActUnionRechargeBackUserReward UserRewardArr = 2;
inline int TActUnionRechargeBackGetUserInfoRsp::userrewardarr_size() const {
  return userrewardarr_.size();
}
inline void TActUnionRechargeBackGetUserInfoRsp::clear_userrewardarr() {
  userrewardarr_.Clear();
}
inline const ::pb::TActUnionRechargeBackUserReward& TActUnionRechargeBackGetUserInfoRsp::userrewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackGetUserInfoRsp.UserRewardArr)
  return userrewardarr_.Get(index);
}
inline ::pb::TActUnionRechargeBackUserReward* TActUnionRechargeBackGetUserInfoRsp::mutable_userrewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActUnionRechargeBackGetUserInfoRsp.UserRewardArr)
  return userrewardarr_.Mutable(index);
}
inline ::pb::TActUnionRechargeBackUserReward* TActUnionRechargeBackGetUserInfoRsp::add_userrewardarr() {
  // @@protoc_insertion_point(field_add:pb.TActUnionRechargeBackGetUserInfoRsp.UserRewardArr)
  return userrewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackUserReward >&
TActUnionRechargeBackGetUserInfoRsp::userrewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TActUnionRechargeBackGetUserInfoRsp.UserRewardArr)
  return userrewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackUserReward >*
TActUnionRechargeBackGetUserInfoRsp::mutable_userrewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnionRechargeBackGetUserInfoRsp.UserRewardArr)
  return &userrewardarr_;
}

// repeated .pb.TActUnionRechargeBackAllyReward AllyRewardArr = 3;
inline int TActUnionRechargeBackGetUserInfoRsp::allyrewardarr_size() const {
  return allyrewardarr_.size();
}
inline void TActUnionRechargeBackGetUserInfoRsp::clear_allyrewardarr() {
  allyrewardarr_.Clear();
}
inline const ::pb::TActUnionRechargeBackAllyReward& TActUnionRechargeBackGetUserInfoRsp::allyrewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackGetUserInfoRsp.AllyRewardArr)
  return allyrewardarr_.Get(index);
}
inline ::pb::TActUnionRechargeBackAllyReward* TActUnionRechargeBackGetUserInfoRsp::mutable_allyrewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActUnionRechargeBackGetUserInfoRsp.AllyRewardArr)
  return allyrewardarr_.Mutable(index);
}
inline ::pb::TActUnionRechargeBackAllyReward* TActUnionRechargeBackGetUserInfoRsp::add_allyrewardarr() {
  // @@protoc_insertion_point(field_add:pb.TActUnionRechargeBackGetUserInfoRsp.AllyRewardArr)
  return allyrewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackAllyReward >&
TActUnionRechargeBackGetUserInfoRsp::allyrewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TActUnionRechargeBackGetUserInfoRsp.AllyRewardArr)
  return allyrewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackAllyReward >*
TActUnionRechargeBackGetUserInfoRsp::mutable_allyrewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnionRechargeBackGetUserInfoRsp.AllyRewardArr)
  return &allyrewardarr_;
}

// optional uint32 UserAllyScore = 4;
inline bool TActUnionRechargeBackGetUserInfoRsp::has_userallyscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TActUnionRechargeBackGetUserInfoRsp::set_has_userallyscore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TActUnionRechargeBackGetUserInfoRsp::clear_has_userallyscore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TActUnionRechargeBackGetUserInfoRsp::clear_userallyscore() {
  userallyscore_ = 0u;
  clear_has_userallyscore();
}
inline ::google::protobuf::uint32 TActUnionRechargeBackGetUserInfoRsp::userallyscore() const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackGetUserInfoRsp.UserAllyScore)
  return userallyscore_;
}
inline void TActUnionRechargeBackGetUserInfoRsp::set_userallyscore(::google::protobuf::uint32 value) {
  set_has_userallyscore();
  userallyscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnionRechargeBackGetUserInfoRsp.UserAllyScore)
}

// -------------------------------------------------------------------

// TActUnionRechargeBackReceiveRewardReq

// optional uint32 Id = 1;
inline bool TActUnionRechargeBackReceiveRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnionRechargeBackReceiveRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnionRechargeBackReceiveRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnionRechargeBackReceiveRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TActUnionRechargeBackReceiveRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackReceiveRewardReq.Id)
  return id_;
}
inline void TActUnionRechargeBackReceiveRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnionRechargeBackReceiveRewardReq.Id)
}

// -------------------------------------------------------------------

// TActUnionRechargeBackGetAllyInfoRsp

// optional uint32 Score = 1;
inline bool TActUnionRechargeBackGetAllyInfoRsp::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnionRechargeBackGetAllyInfoRsp::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnionRechargeBackGetAllyInfoRsp::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnionRechargeBackGetAllyInfoRsp::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 TActUnionRechargeBackGetAllyInfoRsp::score() const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackGetAllyInfoRsp.Score)
  return score_;
}
inline void TActUnionRechargeBackGetAllyInfoRsp::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnionRechargeBackGetAllyInfoRsp.Score)
}

// -------------------------------------------------------------------

// TActUnionRechargeBackRank

// optional .pb.TUserSimpleInfo UserInfo = 1;
inline bool TActUnionRechargeBackRank::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnionRechargeBackRank::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnionRechargeBackRank::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnionRechargeBackRank::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TActUnionRechargeBackRank::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackRank.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TActUnionRechargeBackRank::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TActUnionRechargeBackRank.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TActUnionRechargeBackRank::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TActUnionRechargeBackRank::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TActUnionRechargeBackRank.UserInfo)
}

// optional uint32 Score = 2;
inline bool TActUnionRechargeBackRank::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TActUnionRechargeBackRank::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TActUnionRechargeBackRank::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TActUnionRechargeBackRank::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 TActUnionRechargeBackRank::score() const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackRank.Score)
  return score_;
}
inline void TActUnionRechargeBackRank::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnionRechargeBackRank.Score)
}

// -------------------------------------------------------------------

// TActUnionRechargeBackGetRankInfoRsp

// repeated .pb.TActUnionRechargeBackRank RankArr = 1;
inline int TActUnionRechargeBackGetRankInfoRsp::rankarr_size() const {
  return rankarr_.size();
}
inline void TActUnionRechargeBackGetRankInfoRsp::clear_rankarr() {
  rankarr_.Clear();
}
inline const ::pb::TActUnionRechargeBackRank& TActUnionRechargeBackGetRankInfoRsp::rankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackGetRankInfoRsp.RankArr)
  return rankarr_.Get(index);
}
inline ::pb::TActUnionRechargeBackRank* TActUnionRechargeBackGetRankInfoRsp::mutable_rankarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TActUnionRechargeBackGetRankInfoRsp.RankArr)
  return rankarr_.Mutable(index);
}
inline ::pb::TActUnionRechargeBackRank* TActUnionRechargeBackGetRankInfoRsp::add_rankarr() {
  // @@protoc_insertion_point(field_add:pb.TActUnionRechargeBackGetRankInfoRsp.RankArr)
  return rankarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackRank >&
TActUnionRechargeBackGetRankInfoRsp::rankarr() const {
  // @@protoc_insertion_point(field_list:pb.TActUnionRechargeBackGetRankInfoRsp.RankArr)
  return rankarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TActUnionRechargeBackRank >*
TActUnionRechargeBackGetRankInfoRsp::mutable_rankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActUnionRechargeBackGetRankInfoRsp.RankArr)
  return &rankarr_;
}

// -------------------------------------------------------------------

// TActUnionRechargeBackAllyChangeNotify

// optional uint32 AllyScore = 1;
inline bool TActUnionRechargeBackAllyChangeNotify::has_allyscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActUnionRechargeBackAllyChangeNotify::set_has_allyscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActUnionRechargeBackAllyChangeNotify::clear_has_allyscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActUnionRechargeBackAllyChangeNotify::clear_allyscore() {
  allyscore_ = 0u;
  clear_has_allyscore();
}
inline ::google::protobuf::uint32 TActUnionRechargeBackAllyChangeNotify::allyscore() const {
  // @@protoc_insertion_point(field_get:pb.TActUnionRechargeBackAllyChangeNotify.AllyScore)
  return allyscore_;
}
inline void TActUnionRechargeBackAllyChangeNotify::set_allyscore(::google::protobuf::uint32 value) {
  set_has_allyscore();
  allyscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TActUnionRechargeBackAllyChangeNotify.AllyScore)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActUnionRechargeBack_2eproto__INCLUDED
