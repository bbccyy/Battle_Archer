// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/WorldBossNew.proto

#ifndef PROTOBUF_net_2fWorldBossNew_2eproto__INCLUDED
#define PROTOBUF_net_2fWorldBossNew_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/Battle.pb.h"
#include "net/User.pb.h"
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

class TWorldBossNewUserDamageSingle;
class TWorldBossNewUserRankType;
class TWorldBossNewGetBossInfoRsp;
class TWorldBossNewGetAboveRankRsp;
class TWorldBossNewGetRankInfoReq;
class TWorldBossNewGetRankInfoRsp;
class TWorldBossNewEnterBattleReq;
class TWorldBossNewEnterBattleRsp;
class TWorldBossNewReportBattleReq;
class TWorldBossNewReportBattleRsp;
class TWorldBossNewBuyAtkNumRsp;
class TWorldBossNewServerPush;
class TWorldBossNewReceiveDamageRewardReq;
class TWorldBossNewReceiveDamageRewardRsp;
class TWorldBossNewAutoReceiveDamageRewardRsp;
class TWorldBossNewUnit;
class TWorldBossNewBattleRecord;
class TWorldBossNewGetBattleRecordRsp;
class TWorldBossNewGetRankInfoByLimitReq;
class TWorldBossNewGetRankInfoByLimitRsp;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TWorldBossNewUserDamageSingle</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewUserDamageSingle : public ::google::protobuf::Message {
 public:
  TWorldBossNewUserDamageSingle();
  virtual ~TWorldBossNewUserDamageSingle();

  TWorldBossNewUserDamageSingle(const TWorldBossNewUserDamageSingle& from);

  inline TWorldBossNewUserDamageSingle& operator=(const TWorldBossNewUserDamageSingle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewUserDamageSingle& default_instance();

  void Swap(TWorldBossNewUserDamageSingle* other);

  // implements Message ----------------------------------------------

  TWorldBossNewUserDamageSingle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewUserDamageSingle& from);
  void MergeFrom(const TWorldBossNewUserDamageSingle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUserSimpleInfo UserSimple = 1;
  inline bool has_usersimple() const;
  inline void clear_usersimple();
  static const int kUserSimpleFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUserDamageSingle</name>
  	<Function>
  		<name>usersimple</name>
  		<replaceName>UserSimple</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_usersimple</name>
  		<replaceName>UserSimple</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_usersimple</name>
  		<replaceName>UserSimple</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_usersimple</name>
  		<replaceName>UserSimple</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& usersimple() const;
  inline ::pb::TUserSimpleInfo* mutable_usersimple();
  inline ::pb::TUserSimpleInfo* release_usersimple();
  inline void set_allocated_usersimple(::pb::TUserSimpleInfo* usersimple);

  // optional uint64 TotalDamage = 2;
  inline bool has_totaldamage() const;
  inline void clear_totaldamage();
  static const int kTotalDamageFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUserDamageSingle</name>
  	<Function>
  		<name>totaldamage</name>
  		<replaceName>TotalDamage</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totaldamage</name>
  		<replaceName>TotalDamage</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totaldamage</name>
  		<replaceName>TotalDamage</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 totaldamage() const;
  inline void set_totaldamage(::google::protobuf::uint64 value);

  // optional uint64 MaxDamage = 3;
  inline bool has_maxdamage() const;
  inline void clear_maxdamage();
  static const int kMaxDamageFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUserDamageSingle</name>
  	<Function>
  		<name>maxdamage</name>
  		<replaceName>MaxDamage</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_maxdamage</name>
  		<replaceName>MaxDamage</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_maxdamage</name>
  		<replaceName>MaxDamage</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 maxdamage() const;
  inline void set_maxdamage(::google::protobuf::uint64 value);

  // optional uint32 Rank = 4;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUserDamageSingle</name>
  	<Function>
  		<name>rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint64 LastChangeTime = 5;
  inline bool has_lastchangetime() const;
  inline void clear_lastchangetime();
  static const int kLastChangeTimeFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUserDamageSingle</name>
  	<Function>
  		<name>lastchangetime</name>
  		<replaceName>LastChangeTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_lastchangetime</name>
  		<replaceName>LastChangeTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_lastchangetime</name>
  		<replaceName>LastChangeTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 lastchangetime() const;
  inline void set_lastchangetime(::google::protobuf::uint64 value);

  // optional uint64 ReportId = 6;
  inline bool has_reportid() const;
  inline void clear_reportid();
  static const int kReportIdFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUserDamageSingle</name>
  	<Function>
  		<name>reportid</name>
  		<replaceName>ReportId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_reportid</name>
  		<replaceName>ReportId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_reportid</name>
  		<replaceName>ReportId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 reportid() const;
  inline void set_reportid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewUserDamageSingle)
 private:
  inline void set_has_usersimple();
  inline void clear_has_usersimple();
  inline void set_has_totaldamage();
  inline void clear_has_totaldamage();
  inline void set_has_maxdamage();
  inline void clear_has_maxdamage();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_lastchangetime();
  inline void clear_has_lastchangetime();
  inline void set_has_reportid();
  inline void clear_has_reportid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUserSimpleInfo* usersimple_;
  ::google::protobuf::uint64 totaldamage_;
  ::google::protobuf::uint64 maxdamage_;
  ::google::protobuf::uint64 lastchangetime_;
  ::google::protobuf::uint64 reportid_;
  ::google::protobuf::uint32 rank_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewUserDamageSingle* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewUserRankType</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewUserRankType : public ::google::protobuf::Message {
 public:
  TWorldBossNewUserRankType();
  virtual ~TWorldBossNewUserRankType();

  TWorldBossNewUserRankType(const TWorldBossNewUserRankType& from);

  inline TWorldBossNewUserRankType& operator=(const TWorldBossNewUserRankType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewUserRankType& default_instance();

  void Swap(TWorldBossNewUserRankType* other);

  // implements Message ----------------------------------------------

  TWorldBossNewUserRankType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewUserRankType& from);
  void MergeFrom(const TWorldBossNewUserRankType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RankId = 1;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUserRankType</name>
  	<Function>
  		<name>rankid</name>
  		<replaceName>RankId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rankid</name>
  		<replaceName>RankId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rankid</name>
  		<replaceName>RankId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rankid() const;
  inline void set_rankid(::google::protobuf::uint32 value);

  // optional uint32 UserNum = 2;
  inline bool has_usernum() const;
  inline void clear_usernum();
  static const int kUserNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUserRankType</name>
  	<Function>
  		<name>usernum</name>
  		<replaceName>UserNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_usernum</name>
  		<replaceName>UserNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_usernum</name>
  		<replaceName>UserNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 usernum() const;
  inline void set_usernum(::google::protobuf::uint32 value);

  // optional uint64 DamageMin = 3;
  inline bool has_damagemin() const;
  inline void clear_damagemin();
  static const int kDamageMinFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUserRankType</name>
  	<Function>
  		<name>damagemin</name>
  		<replaceName>DamageMin</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_damagemin</name>
  		<replaceName>DamageMin</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_damagemin</name>
  		<replaceName>DamageMin</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 damagemin() const;
  inline void set_damagemin(::google::protobuf::uint64 value);

  // repeated .pb.TWorldBossNewUserDamageSingle UserRankArr = 4;
  inline int userrankarr_size() const;
  inline void clear_userrankarr();
  static const int kUserRankArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUserRankType</name>
  	<Function>
  		<name>userrankarr</name>
  		<replaceName>UserRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_userrankarr</name>
  		<replaceName>UserRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_userrankarr</name>
  		<replaceName>UserRankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userrankarr</name>
  		<replaceName>UserRankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>userrankarr_size</name>
  		<replaceName>UserRankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWorldBossNewUserDamageSingle& userrankarr(int index) const;
  inline ::pb::TWorldBossNewUserDamageSingle* mutable_userrankarr(int index);
  inline ::pb::TWorldBossNewUserDamageSingle* add_userrankarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >&
      userrankarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >*
      mutable_userrankarr();

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewUserRankType)
 private:
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_usernum();
  inline void clear_has_usernum();
  inline void set_has_damagemin();
  inline void clear_has_damagemin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::uint32 usernum_;
  ::google::protobuf::uint64 damagemin_;
  ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle > userrankarr_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewUserRankType* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewGetBossInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewGetBossInfoRsp : public ::google::protobuf::Message {
 public:
  TWorldBossNewGetBossInfoRsp();
  virtual ~TWorldBossNewGetBossInfoRsp();

  TWorldBossNewGetBossInfoRsp(const TWorldBossNewGetBossInfoRsp& from);

  inline TWorldBossNewGetBossInfoRsp& operator=(const TWorldBossNewGetBossInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewGetBossInfoRsp& default_instance();

  void Swap(TWorldBossNewGetBossInfoRsp* other);

  // implements Message ----------------------------------------------

  TWorldBossNewGetBossInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewGetBossInfoRsp& from);
  void MergeFrom(const TWorldBossNewGetBossInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 BossId = 1;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetBossInfoRsp</name>
  	<Function>
  		<name>bossid</name>
  		<replaceName>BossId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_bossid</name>
  		<replaceName>BossId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bossid</name>
  		<replaceName>BossId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 bossid() const;
  inline void set_bossid(::google::protobuf::uint32 value);

  // optional uint64 OpenTime = 2;
  inline bool has_opentime() const;
  inline void clear_opentime();
  static const int kOpenTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetBossInfoRsp</name>
  	<Function>
  		<name>opentime</name>
  		<replaceName>OpenTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_opentime</name>
  		<replaceName>OpenTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_opentime</name>
  		<replaceName>OpenTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 opentime() const;
  inline void set_opentime(::google::protobuf::uint64 value);

  // optional uint32 UsedAtkNum = 3;
  inline bool has_usedatknum() const;
  inline void clear_usedatknum();
  static const int kUsedAtkNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetBossInfoRsp</name>
  	<Function>
  		<name>usedatknum</name>
  		<replaceName>UsedAtkNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_usedatknum</name>
  		<replaceName>UsedAtkNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_usedatknum</name>
  		<replaceName>UsedAtkNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 usedatknum() const;
  inline void set_usedatknum(::google::protobuf::uint32 value);

  // optional .pb.TWorldBossNewUserDamageSingle MyRankInfo = 4;
  inline bool has_myrankinfo() const;
  inline void clear_myrankinfo();
  static const int kMyRankInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetBossInfoRsp</name>
  	<Function>
  		<name>myrankinfo</name>
  		<replaceName>MyRankInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_myrankinfo</name>
  		<replaceName>MyRankInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_myrankinfo</name>
  		<replaceName>MyRankInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_myrankinfo</name>
  		<replaceName>MyRankInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWorldBossNewUserDamageSingle& myrankinfo() const;
  inline ::pb::TWorldBossNewUserDamageSingle* mutable_myrankinfo();
  inline ::pb::TWorldBossNewUserDamageSingle* release_myrankinfo();
  inline void set_allocated_myrankinfo(::pb::TWorldBossNewUserDamageSingle* myrankinfo);

  // repeated .pb.TWorldBossNewUserRankType RankTypeArr = 5;
  inline int ranktypearr_size() const;
  inline void clear_ranktypearr();
  static const int kRankTypeArrFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetBossInfoRsp</name>
  	<Function>
  		<name>ranktypearr</name>
  		<replaceName>RankTypeArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_ranktypearr</name>
  		<replaceName>RankTypeArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_ranktypearr</name>
  		<replaceName>RankTypeArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_ranktypearr</name>
  		<replaceName>RankTypeArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>ranktypearr_size</name>
  		<replaceName>RankTypeArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWorldBossNewUserRankType& ranktypearr(int index) const;
  inline ::pb::TWorldBossNewUserRankType* mutable_ranktypearr(int index);
  inline ::pb::TWorldBossNewUserRankType* add_ranktypearr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserRankType >&
      ranktypearr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserRankType >*
      mutable_ranktypearr();

  // optional uint32 BuyNum = 6;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuyNumFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetBossInfoRsp</name>
  	<Function>
  		<name>buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buynum() const;
  inline void set_buynum(::google::protobuf::uint32 value);

  // optional uint32 BuyAtkNum = 7;
  inline bool has_buyatknum() const;
  inline void clear_buyatknum();
  static const int kBuyAtkNumFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetBossInfoRsp</name>
  	<Function>
  		<name>buyatknum</name>
  		<replaceName>BuyAtkNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buyatknum</name>
  		<replaceName>BuyAtkNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buyatknum</name>
  		<replaceName>BuyAtkNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buyatknum() const;
  inline void set_buyatknum(::google::protobuf::uint32 value);

  // repeated uint32 ReceivedDamageRewardTidArr = 8;
  inline int receiveddamagerewardtidarr_size() const;
  inline void clear_receiveddamagerewardtidarr();
  static const int kReceivedDamageRewardTidArrFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetBossInfoRsp</name>
  	<Function>
  		<name>receiveddamagerewardtidarr</name>
  		<replaceName>ReceivedDamageRewardTidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_receiveddamagerewardtidarr</name>
  		<replaceName>ReceivedDamageRewardTidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_receiveddamagerewardtidarr</name>
  		<replaceName>ReceivedDamageRewardTidArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receiveddamagerewardtidarr</name>
  		<replaceName>ReceivedDamageRewardTidArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>receiveddamagerewardtidarr_size</name>
  		<replaceName>ReceivedDamageRewardTidArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 receiveddamagerewardtidarr(int index) const;
  inline void set_receiveddamagerewardtidarr(int index, ::google::protobuf::uint32 value);
  inline void add_receiveddamagerewardtidarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      receiveddamagerewardtidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_receiveddamagerewardtidarr();

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewGetBossInfoRsp)
 private:
  inline void set_has_bossid();
  inline void clear_has_bossid();
  inline void set_has_opentime();
  inline void clear_has_opentime();
  inline void set_has_usedatknum();
  inline void clear_has_usedatknum();
  inline void set_has_myrankinfo();
  inline void clear_has_myrankinfo();
  inline void set_has_buynum();
  inline void clear_has_buynum();
  inline void set_has_buyatknum();
  inline void clear_has_buyatknum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 opentime_;
  ::google::protobuf::uint32 bossid_;
  ::google::protobuf::uint32 usedatknum_;
  ::pb::TWorldBossNewUserDamageSingle* myrankinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserRankType > ranktypearr_;
  ::google::protobuf::uint32 buynum_;
  ::google::protobuf::uint32 buyatknum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > receiveddamagerewardtidarr_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewGetBossInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewGetAboveRankRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewGetAboveRankRsp : public ::google::protobuf::Message {
 public:
  TWorldBossNewGetAboveRankRsp();
  virtual ~TWorldBossNewGetAboveRankRsp();

  TWorldBossNewGetAboveRankRsp(const TWorldBossNewGetAboveRankRsp& from);

  inline TWorldBossNewGetAboveRankRsp& operator=(const TWorldBossNewGetAboveRankRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewGetAboveRankRsp& default_instance();

  void Swap(TWorldBossNewGetAboveRankRsp* other);

  // implements Message ----------------------------------------------

  TWorldBossNewGetAboveRankRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewGetAboveRankRsp& from);
  void MergeFrom(const TWorldBossNewGetAboveRankRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TWorldBossNewUserDamageSingle AboveRankArr = 1;
  inline int aboverankarr_size() const;
  inline void clear_aboverankarr();
  static const int kAboveRankArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetAboveRankRsp</name>
  	<Function>
  		<name>aboverankarr</name>
  		<replaceName>AboveRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_aboverankarr</name>
  		<replaceName>AboveRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_aboverankarr</name>
  		<replaceName>AboveRankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_aboverankarr</name>
  		<replaceName>AboveRankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>aboverankarr_size</name>
  		<replaceName>AboveRankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWorldBossNewUserDamageSingle& aboverankarr(int index) const;
  inline ::pb::TWorldBossNewUserDamageSingle* mutable_aboverankarr(int index);
  inline ::pb::TWorldBossNewUserDamageSingle* add_aboverankarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >&
      aboverankarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >*
      mutable_aboverankarr();

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewGetAboveRankRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle > aboverankarr_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewGetAboveRankRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewGetRankInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewGetRankInfoReq : public ::google::protobuf::Message {
 public:
  TWorldBossNewGetRankInfoReq();
  virtual ~TWorldBossNewGetRankInfoReq();

  TWorldBossNewGetRankInfoReq(const TWorldBossNewGetRankInfoReq& from);

  inline TWorldBossNewGetRankInfoReq& operator=(const TWorldBossNewGetRankInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewGetRankInfoReq& default_instance();

  void Swap(TWorldBossNewGetRankInfoReq* other);

  // implements Message ----------------------------------------------

  TWorldBossNewGetRankInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewGetRankInfoReq& from);
  void MergeFrom(const TWorldBossNewGetRankInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RankId = 1;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetRankInfoReq</name>
  	<Function>
  		<name>rankid</name>
  		<replaceName>RankId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rankid</name>
  		<replaceName>RankId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rankid</name>
  		<replaceName>RankId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rankid() const;
  inline void set_rankid(::google::protobuf::uint32 value);

  // optional uint32 Offset = 2;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetRankInfoReq</name>
  	<Function>
  		<name>offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 Limit = 3;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetRankInfoReq</name>
  	<Function>
  		<name>limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewGetRankInfoReq)
 private:
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewGetRankInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewGetRankInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewGetRankInfoRsp : public ::google::protobuf::Message {
 public:
  TWorldBossNewGetRankInfoRsp();
  virtual ~TWorldBossNewGetRankInfoRsp();

  TWorldBossNewGetRankInfoRsp(const TWorldBossNewGetRankInfoRsp& from);

  inline TWorldBossNewGetRankInfoRsp& operator=(const TWorldBossNewGetRankInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewGetRankInfoRsp& default_instance();

  void Swap(TWorldBossNewGetRankInfoRsp* other);

  // implements Message ----------------------------------------------

  TWorldBossNewGetRankInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewGetRankInfoRsp& from);
  void MergeFrom(const TWorldBossNewGetRankInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TWorldBossNewUserDamageSingle UserRankArr = 1;
  inline int userrankarr_size() const;
  inline void clear_userrankarr();
  static const int kUserRankArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetRankInfoRsp</name>
  	<Function>
  		<name>userrankarr</name>
  		<replaceName>UserRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_userrankarr</name>
  		<replaceName>UserRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_userrankarr</name>
  		<replaceName>UserRankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userrankarr</name>
  		<replaceName>UserRankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>userrankarr_size</name>
  		<replaceName>UserRankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWorldBossNewUserDamageSingle& userrankarr(int index) const;
  inline ::pb::TWorldBossNewUserDamageSingle* mutable_userrankarr(int index);
  inline ::pb::TWorldBossNewUserDamageSingle* add_userrankarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >&
      userrankarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >*
      mutable_userrankarr();

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewGetRankInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle > userrankarr_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewGetRankInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewEnterBattleReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewEnterBattleReq : public ::google::protobuf::Message {
 public:
  TWorldBossNewEnterBattleReq();
  virtual ~TWorldBossNewEnterBattleReq();

  TWorldBossNewEnterBattleReq(const TWorldBossNewEnterBattleReq& from);

  inline TWorldBossNewEnterBattleReq& operator=(const TWorldBossNewEnterBattleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewEnterBattleReq& default_instance();

  void Swap(TWorldBossNewEnterBattleReq* other);

  // implements Message ----------------------------------------------

  TWorldBossNewEnterBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewEnterBattleReq& from);
  void MergeFrom(const TWorldBossNewEnterBattleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 BossId = 1;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewEnterBattleReq</name>
  	<Function>
  		<name>bossid</name>
  		<replaceName>BossId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_bossid</name>
  		<replaceName>BossId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bossid</name>
  		<replaceName>BossId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 bossid() const;
  inline void set_bossid(::google::protobuf::uint32 value);

  // optional .pb.TBattleCheckParam BattleCheckParam = 2;
  inline bool has_battlecheckparam() const;
  inline void clear_battlecheckparam();
  static const int kBattleCheckParamFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewEnterBattleReq</name>
  	<Function>
  		<name>battlecheckparam</name>
  		<replaceName>BattleCheckParam</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battlecheckparam</name>
  		<replaceName>BattleCheckParam</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_battlecheckparam</name>
  		<replaceName>BattleCheckParam</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battlecheckparam</name>
  		<replaceName>BattleCheckParam</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBattleCheckParam& battlecheckparam() const;
  inline ::pb::TBattleCheckParam* mutable_battlecheckparam();
  inline ::pb::TBattleCheckParam* release_battlecheckparam();
  inline void set_allocated_battlecheckparam(::pb::TBattleCheckParam* battlecheckparam);

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewEnterBattleReq)
 private:
  inline void set_has_bossid();
  inline void clear_has_bossid();
  inline void set_has_battlecheckparam();
  inline void clear_has_battlecheckparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TBattleCheckParam* battlecheckparam_;
  ::google::protobuf::uint32 bossid_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewEnterBattleReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewEnterBattleRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewEnterBattleRsp : public ::google::protobuf::Message {
 public:
  TWorldBossNewEnterBattleRsp();
  virtual ~TWorldBossNewEnterBattleRsp();

  TWorldBossNewEnterBattleRsp(const TWorldBossNewEnterBattleRsp& from);

  inline TWorldBossNewEnterBattleRsp& operator=(const TWorldBossNewEnterBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewEnterBattleRsp& default_instance();

  void Swap(TWorldBossNewEnterBattleRsp* other);

  // implements Message ----------------------------------------------

  TWorldBossNewEnterBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewEnterBattleRsp& from);
  void MergeFrom(const TWorldBossNewEnterBattleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TBattleArgs BattleArgs = 1;
  inline bool has_battleargs() const;
  inline void clear_battleargs();
  static const int kBattleArgsFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewEnterBattleRsp</name>
  	<Function>
  		<name>battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBattleArgs& battleargs() const;
  inline ::pb::TBattleArgs* mutable_battleargs();
  inline ::pb::TBattleArgs* release_battleargs();
  inline void set_allocated_battleargs(::pb::TBattleArgs* battleargs);

  // optional uint32 UsedAtkNum = 2;
  inline bool has_usedatknum() const;
  inline void clear_usedatknum();
  static const int kUsedAtkNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewEnterBattleRsp</name>
  	<Function>
  		<name>usedatknum</name>
  		<replaceName>UsedAtkNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_usedatknum</name>
  		<replaceName>UsedAtkNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_usedatknum</name>
  		<replaceName>UsedAtkNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 usedatknum() const;
  inline void set_usedatknum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewEnterBattleRsp)
 private:
  inline void set_has_battleargs();
  inline void clear_has_battleargs();
  inline void set_has_usedatknum();
  inline void clear_has_usedatknum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TBattleArgs* battleargs_;
  ::google::protobuf::uint32 usedatknum_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewEnterBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewReportBattleReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewReportBattleReq : public ::google::protobuf::Message {
 public:
  TWorldBossNewReportBattleReq();
  virtual ~TWorldBossNewReportBattleReq();

  TWorldBossNewReportBattleReq(const TWorldBossNewReportBattleReq& from);

  inline TWorldBossNewReportBattleReq& operator=(const TWorldBossNewReportBattleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewReportBattleReq& default_instance();

  void Swap(TWorldBossNewReportBattleReq* other);

  // implements Message ----------------------------------------------

  TWorldBossNewReportBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewReportBattleReq& from);
  void MergeFrom(const TWorldBossNewReportBattleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 BossId = 1;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewReportBattleReq</name>
  	<Function>
  		<name>bossid</name>
  		<replaceName>BossId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_bossid</name>
  		<replaceName>BossId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bossid</name>
  		<replaceName>BossId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 bossid() const;
  inline void set_bossid(::google::protobuf::uint32 value);

  // optional bytes BattleRet = 2;
  inline bool has_battleret() const;
  inline void clear_battleret();
  static const int kBattleRetFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewReportBattleReq</name>
  	<Function>
  		<name>battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& battleret() const;
  inline void set_battleret(const ::std::string& value);
  inline void set_battleret(const char* value);
  inline void set_battleret(const void* value, size_t size);
  inline ::std::string* mutable_battleret();
  inline ::std::string* release_battleret();
  inline void set_allocated_battleret(::std::string* battleret);

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewReportBattleReq)
 private:
  inline void set_has_bossid();
  inline void clear_has_bossid();
  inline void set_has_battleret();
  inline void clear_has_battleret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* battleret_;
  ::google::protobuf::uint32 bossid_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewReportBattleReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewReportBattleRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewReportBattleRsp : public ::google::protobuf::Message {
 public:
  TWorldBossNewReportBattleRsp();
  virtual ~TWorldBossNewReportBattleRsp();

  TWorldBossNewReportBattleRsp(const TWorldBossNewReportBattleRsp& from);

  inline TWorldBossNewReportBattleRsp& operator=(const TWorldBossNewReportBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewReportBattleRsp& default_instance();

  void Swap(TWorldBossNewReportBattleRsp* other);

  // implements Message ----------------------------------------------

  TWorldBossNewReportBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewReportBattleRsp& from);
  void MergeFrom(const TWorldBossNewReportBattleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 UsedAtkNum = 1;
  inline bool has_usedatknum() const;
  inline void clear_usedatknum();
  static const int kUsedAtkNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewReportBattleRsp</name>
  	<Function>
  		<name>usedatknum</name>
  		<replaceName>UsedAtkNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_usedatknum</name>
  		<replaceName>UsedAtkNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_usedatknum</name>
  		<replaceName>UsedAtkNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 usedatknum() const;
  inline void set_usedatknum(::google::protobuf::uint32 value);

  // optional .pb.TWorldBossNewUserDamageSingle MyUserRank = 2;
  inline bool has_myuserrank() const;
  inline void clear_myuserrank();
  static const int kMyUserRankFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewReportBattleRsp</name>
  	<Function>
  		<name>myuserrank</name>
  		<replaceName>MyUserRank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_myuserrank</name>
  		<replaceName>MyUserRank</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_myuserrank</name>
  		<replaceName>MyUserRank</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_myuserrank</name>
  		<replaceName>MyUserRank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWorldBossNewUserDamageSingle& myuserrank() const;
  inline ::pb::TWorldBossNewUserDamageSingle* mutable_myuserrank();
  inline ::pb::TWorldBossNewUserDamageSingle* release_myuserrank();
  inline void set_allocated_myuserrank(::pb::TWorldBossNewUserDamageSingle* myuserrank);

  // optional bool IsNewRecord = 3;
  inline bool has_isnewrecord() const;
  inline void clear_isnewrecord();
  static const int kIsNewRecordFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewReportBattleRsp</name>
  	<Function>
  		<name>isnewrecord</name>
  		<replaceName>IsNewRecord</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_isnewrecord</name>
  		<replaceName>IsNewRecord</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_isnewrecord</name>
  		<replaceName>IsNewRecord</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool isnewrecord() const;
  inline void set_isnewrecord(bool value);

  // repeated .pb.TCommonReward DropArray = 4;
  inline int droparray_size() const;
  inline void clear_droparray();
  static const int kDropArrayFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewReportBattleRsp</name>
  	<Function>
  		<name>droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>droparray_size</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& droparray(int index) const;
  inline ::pb::TCommonReward* mutable_droparray(int index);
  inline ::pb::TCommonReward* add_droparray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      droparray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_droparray();

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewReportBattleRsp)
 private:
  inline void set_has_usedatknum();
  inline void clear_has_usedatknum();
  inline void set_has_myuserrank();
  inline void clear_has_myuserrank();
  inline void set_has_isnewrecord();
  inline void clear_has_isnewrecord();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TWorldBossNewUserDamageSingle* myuserrank_;
  ::google::protobuf::uint32 usedatknum_;
  bool isnewrecord_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > droparray_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewReportBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewBuyAtkNumRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewBuyAtkNumRsp : public ::google::protobuf::Message {
 public:
  TWorldBossNewBuyAtkNumRsp();
  virtual ~TWorldBossNewBuyAtkNumRsp();

  TWorldBossNewBuyAtkNumRsp(const TWorldBossNewBuyAtkNumRsp& from);

  inline TWorldBossNewBuyAtkNumRsp& operator=(const TWorldBossNewBuyAtkNumRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewBuyAtkNumRsp& default_instance();

  void Swap(TWorldBossNewBuyAtkNumRsp* other);

  // implements Message ----------------------------------------------

  TWorldBossNewBuyAtkNumRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewBuyAtkNumRsp& from);
  void MergeFrom(const TWorldBossNewBuyAtkNumRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 BuyNum = 1;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuyNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewBuyAtkNumRsp</name>
  	<Function>
  		<name>buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buynum</name>
  		<replaceName>BuyNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buynum() const;
  inline void set_buynum(::google::protobuf::uint32 value);

  // optional uint32 BuyAtkNum = 2;
  inline bool has_buyatknum() const;
  inline void clear_buyatknum();
  static const int kBuyAtkNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewBuyAtkNumRsp</name>
  	<Function>
  		<name>buyatknum</name>
  		<replaceName>BuyAtkNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buyatknum</name>
  		<replaceName>BuyAtkNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buyatknum</name>
  		<replaceName>BuyAtkNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buyatknum() const;
  inline void set_buyatknum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewBuyAtkNumRsp)
 private:
  inline void set_has_buynum();
  inline void clear_has_buynum();
  inline void set_has_buyatknum();
  inline void clear_has_buyatknum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 buynum_;
  ::google::protobuf::uint32 buyatknum_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewBuyAtkNumRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewServerPush</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewServerPush : public ::google::protobuf::Message {
 public:
  TWorldBossNewServerPush();
  virtual ~TWorldBossNewServerPush();

  TWorldBossNewServerPush(const TWorldBossNewServerPush& from);

  inline TWorldBossNewServerPush& operator=(const TWorldBossNewServerPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewServerPush& default_instance();

  void Swap(TWorldBossNewServerPush* other);

  // implements Message ----------------------------------------------

  TWorldBossNewServerPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewServerPush& from);
  void MergeFrom(const TWorldBossNewServerPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TWorldBossNewUserRankType RankTypeArr = 1;
  inline int ranktypearr_size() const;
  inline void clear_ranktypearr();
  static const int kRankTypeArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewServerPush</name>
  	<Function>
  		<name>ranktypearr</name>
  		<replaceName>RankTypeArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_ranktypearr</name>
  		<replaceName>RankTypeArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_ranktypearr</name>
  		<replaceName>RankTypeArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_ranktypearr</name>
  		<replaceName>RankTypeArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>ranktypearr_size</name>
  		<replaceName>RankTypeArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWorldBossNewUserRankType& ranktypearr(int index) const;
  inline ::pb::TWorldBossNewUserRankType* mutable_ranktypearr(int index);
  inline ::pb::TWorldBossNewUserRankType* add_ranktypearr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserRankType >&
      ranktypearr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserRankType >*
      mutable_ranktypearr();

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewServerPush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserRankType > ranktypearr_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewServerPush* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewReceiveDamageRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewReceiveDamageRewardReq : public ::google::protobuf::Message {
 public:
  TWorldBossNewReceiveDamageRewardReq();
  virtual ~TWorldBossNewReceiveDamageRewardReq();

  TWorldBossNewReceiveDamageRewardReq(const TWorldBossNewReceiveDamageRewardReq& from);

  inline TWorldBossNewReceiveDamageRewardReq& operator=(const TWorldBossNewReceiveDamageRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewReceiveDamageRewardReq& default_instance();

  void Swap(TWorldBossNewReceiveDamageRewardReq* other);

  // implements Message ----------------------------------------------

  TWorldBossNewReceiveDamageRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewReceiveDamageRewardReq& from);
  void MergeFrom(const TWorldBossNewReceiveDamageRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 DamageRewardTid = 1;
  inline bool has_damagerewardtid() const;
  inline void clear_damagerewardtid();
  static const int kDamageRewardTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewReceiveDamageRewardReq</name>
  	<Function>
  		<name>damagerewardtid</name>
  		<replaceName>DamageRewardTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_damagerewardtid</name>
  		<replaceName>DamageRewardTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_damagerewardtid</name>
  		<replaceName>DamageRewardTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 damagerewardtid() const;
  inline void set_damagerewardtid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewReceiveDamageRewardReq)
 private:
  inline void set_has_damagerewardtid();
  inline void clear_has_damagerewardtid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 damagerewardtid_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewReceiveDamageRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewReceiveDamageRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewReceiveDamageRewardRsp : public ::google::protobuf::Message {
 public:
  TWorldBossNewReceiveDamageRewardRsp();
  virtual ~TWorldBossNewReceiveDamageRewardRsp();

  TWorldBossNewReceiveDamageRewardRsp(const TWorldBossNewReceiveDamageRewardRsp& from);

  inline TWorldBossNewReceiveDamageRewardRsp& operator=(const TWorldBossNewReceiveDamageRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewReceiveDamageRewardRsp& default_instance();

  void Swap(TWorldBossNewReceiveDamageRewardRsp* other);

  // implements Message ----------------------------------------------

  TWorldBossNewReceiveDamageRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewReceiveDamageRewardRsp& from);
  void MergeFrom(const TWorldBossNewReceiveDamageRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArr = 1;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewReceiveDamageRewardRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarr(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarr(int index);
  inline ::pb::TCommonReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarr();

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewReceiveDamageRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarr_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewReceiveDamageRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewAutoReceiveDamageRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewAutoReceiveDamageRewardRsp : public ::google::protobuf::Message {
 public:
  TWorldBossNewAutoReceiveDamageRewardRsp();
  virtual ~TWorldBossNewAutoReceiveDamageRewardRsp();

  TWorldBossNewAutoReceiveDamageRewardRsp(const TWorldBossNewAutoReceiveDamageRewardRsp& from);

  inline TWorldBossNewAutoReceiveDamageRewardRsp& operator=(const TWorldBossNewAutoReceiveDamageRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewAutoReceiveDamageRewardRsp& default_instance();

  void Swap(TWorldBossNewAutoReceiveDamageRewardRsp* other);

  // implements Message ----------------------------------------------

  TWorldBossNewAutoReceiveDamageRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewAutoReceiveDamageRewardRsp& from);
  void MergeFrom(const TWorldBossNewAutoReceiveDamageRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ReceivedDamageRewardTidArr = 1;
  inline int receiveddamagerewardtidarr_size() const;
  inline void clear_receiveddamagerewardtidarr();
  static const int kReceivedDamageRewardTidArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewAutoReceiveDamageRewardRsp</name>
  	<Function>
  		<name>receiveddamagerewardtidarr</name>
  		<replaceName>ReceivedDamageRewardTidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_receiveddamagerewardtidarr</name>
  		<replaceName>ReceivedDamageRewardTidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_receiveddamagerewardtidarr</name>
  		<replaceName>ReceivedDamageRewardTidArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receiveddamagerewardtidarr</name>
  		<replaceName>ReceivedDamageRewardTidArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>receiveddamagerewardtidarr_size</name>
  		<replaceName>ReceivedDamageRewardTidArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 receiveddamagerewardtidarr(int index) const;
  inline void set_receiveddamagerewardtidarr(int index, ::google::protobuf::uint32 value);
  inline void add_receiveddamagerewardtidarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      receiveddamagerewardtidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_receiveddamagerewardtidarr();

  // repeated .pb.TCommonReward RewardArr = 2;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewAutoReceiveDamageRewardRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarr(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarr(int index);
  inline ::pb::TCommonReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarr();

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewAutoReceiveDamageRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > receiveddamagerewardtidarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarr_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewAutoReceiveDamageRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewUnit</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewUnit : public ::google::protobuf::Message {
 public:
  TWorldBossNewUnit();
  virtual ~TWorldBossNewUnit();

  TWorldBossNewUnit(const TWorldBossNewUnit& from);

  inline TWorldBossNewUnit& operator=(const TWorldBossNewUnit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewUnit& default_instance();

  void Swap(TWorldBossNewUnit* other);

  // implements Message ----------------------------------------------

  TWorldBossNewUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewUnit& from);
  void MergeFrom(const TWorldBossNewUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUnit</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // optional uint32 Pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUnit</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional uint32 StarLv = 3;
  inline bool has_starlv() const;
  inline void clear_starlv();
  static const int kStarLvFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUnit</name>
  	<Function>
  		<name>starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_starlv</name>
  		<replaceName>StarLv</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 starlv() const;
  inline void set_starlv(::google::protobuf::uint32 value);

  // optional uint32 Level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewUnit</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewUnit)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_starlv();
  inline void clear_has_starlv();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 starlv_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewUnit* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewBattleRecord</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewBattleRecord : public ::google::protobuf::Message {
 public:
  TWorldBossNewBattleRecord();
  virtual ~TWorldBossNewBattleRecord();

  TWorldBossNewBattleRecord(const TWorldBossNewBattleRecord& from);

  inline TWorldBossNewBattleRecord& operator=(const TWorldBossNewBattleRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewBattleRecord& default_instance();

  void Swap(TWorldBossNewBattleRecord* other);

  // implements Message ----------------------------------------------

  TWorldBossNewBattleRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewBattleRecord& from);
  void MergeFrom(const TWorldBossNewBattleRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ReportId = 1;
  inline bool has_reportid() const;
  inline void clear_reportid();
  static const int kReportIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewBattleRecord</name>
  	<Function>
  		<name>reportid</name>
  		<replaceName>ReportId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_reportid</name>
  		<replaceName>ReportId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_reportid</name>
  		<replaceName>ReportId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 reportid() const;
  inline void set_reportid(::google::protobuf::uint64 value);

  // optional uint64 Time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewBattleRecord</name>
  	<Function>
  		<name>time</name>
  		<replaceName>Time</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_time</name>
  		<replaceName>Time</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_time</name>
  		<replaceName>Time</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // optional uint64 Damage = 3;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewBattleRecord</name>
  	<Function>
  		<name>damage</name>
  		<replaceName>Damage</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_damage</name>
  		<replaceName>Damage</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_damage</name>
  		<replaceName>Damage</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 damage() const;
  inline void set_damage(::google::protobuf::uint64 value);

  // repeated .pb.TWorldBossNewUnit UnitArr = 4;
  inline int unitarr_size() const;
  inline void clear_unitarr();
  static const int kUnitArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewBattleRecord</name>
  	<Function>
  		<name>unitarr</name>
  		<replaceName>UnitArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_unitarr</name>
  		<replaceName>UnitArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_unitarr</name>
  		<replaceName>UnitArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_unitarr</name>
  		<replaceName>UnitArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>unitarr_size</name>
  		<replaceName>UnitArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWorldBossNewUnit& unitarr(int index) const;
  inline ::pb::TWorldBossNewUnit* mutable_unitarr(int index);
  inline ::pb::TWorldBossNewUnit* add_unitarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUnit >&
      unitarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUnit >*
      mutable_unitarr();

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewBattleRecord)
 private:
  inline void set_has_reportid();
  inline void clear_has_reportid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_damage();
  inline void clear_has_damage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 reportid_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint64 damage_;
  ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUnit > unitarr_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewBattleRecord* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewGetBattleRecordRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewGetBattleRecordRsp : public ::google::protobuf::Message {
 public:
  TWorldBossNewGetBattleRecordRsp();
  virtual ~TWorldBossNewGetBattleRecordRsp();

  TWorldBossNewGetBattleRecordRsp(const TWorldBossNewGetBattleRecordRsp& from);

  inline TWorldBossNewGetBattleRecordRsp& operator=(const TWorldBossNewGetBattleRecordRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewGetBattleRecordRsp& default_instance();

  void Swap(TWorldBossNewGetBattleRecordRsp* other);

  // implements Message ----------------------------------------------

  TWorldBossNewGetBattleRecordRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewGetBattleRecordRsp& from);
  void MergeFrom(const TWorldBossNewGetBattleRecordRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TWorldBossNewBattleRecord RecordArr = 1;
  inline int recordarr_size() const;
  inline void clear_recordarr();
  static const int kRecordArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetBattleRecordRsp</name>
  	<Function>
  		<name>recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>recordarr_size</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWorldBossNewBattleRecord& recordarr(int index) const;
  inline ::pb::TWorldBossNewBattleRecord* mutable_recordarr(int index);
  inline ::pb::TWorldBossNewBattleRecord* add_recordarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewBattleRecord >&
      recordarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewBattleRecord >*
      mutable_recordarr();

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewGetBattleRecordRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewBattleRecord > recordarr_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewGetBattleRecordRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewGetRankInfoByLimitReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewGetRankInfoByLimitReq : public ::google::protobuf::Message {
 public:
  TWorldBossNewGetRankInfoByLimitReq();
  virtual ~TWorldBossNewGetRankInfoByLimitReq();

  TWorldBossNewGetRankInfoByLimitReq(const TWorldBossNewGetRankInfoByLimitReq& from);

  inline TWorldBossNewGetRankInfoByLimitReq& operator=(const TWorldBossNewGetRankInfoByLimitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewGetRankInfoByLimitReq& default_instance();

  void Swap(TWorldBossNewGetRankInfoByLimitReq* other);

  // implements Message ----------------------------------------------

  TWorldBossNewGetRankInfoByLimitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewGetRankInfoByLimitReq& from);
  void MergeFrom(const TWorldBossNewGetRankInfoByLimitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Offset = 1;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetRankInfoByLimitReq</name>
  	<Function>
  		<name>offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 Limit = 2;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetRankInfoByLimitReq</name>
  	<Function>
  		<name>limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_limit</name>
  		<replaceName>Limit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewGetRankInfoByLimitReq)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewGetRankInfoByLimitReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TWorldBossNewGetRankInfoByLimitRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/WorldBossNew.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TWorldBossNewGetRankInfoByLimitRsp : public ::google::protobuf::Message {
 public:
  TWorldBossNewGetRankInfoByLimitRsp();
  virtual ~TWorldBossNewGetRankInfoByLimitRsp();

  TWorldBossNewGetRankInfoByLimitRsp(const TWorldBossNewGetRankInfoByLimitRsp& from);

  inline TWorldBossNewGetRankInfoByLimitRsp& operator=(const TWorldBossNewGetRankInfoByLimitRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TWorldBossNewGetRankInfoByLimitRsp& default_instance();

  void Swap(TWorldBossNewGetRankInfoByLimitRsp* other);

  // implements Message ----------------------------------------------

  TWorldBossNewGetRankInfoByLimitRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TWorldBossNewGetRankInfoByLimitRsp& from);
  void MergeFrom(const TWorldBossNewGetRankInfoByLimitRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TWorldBossNewUserDamageSingle DamageRankArr = 1;
  inline int damagerankarr_size() const;
  inline void clear_damagerankarr();
  static const int kDamageRankArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetRankInfoByLimitRsp</name>
  	<Function>
  		<name>damagerankarr</name>
  		<replaceName>DamageRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_damagerankarr</name>
  		<replaceName>DamageRankArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_damagerankarr</name>
  		<replaceName>DamageRankArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_damagerankarr</name>
  		<replaceName>DamageRankArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>damagerankarr_size</name>
  		<replaceName>DamageRankArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWorldBossNewUserDamageSingle& damagerankarr(int index) const;
  inline ::pb::TWorldBossNewUserDamageSingle* mutable_damagerankarr(int index);
  inline ::pb::TWorldBossNewUserDamageSingle* add_damagerankarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >&
      damagerankarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >*
      mutable_damagerankarr();

  // optional .pb.TWorldBossNewUserDamageSingle MyRankInfo = 2;
  inline bool has_myrankinfo() const;
  inline void clear_myrankinfo();
  static const int kMyRankInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TWorldBossNewGetRankInfoByLimitRsp</name>
  	<Function>
  		<name>myrankinfo</name>
  		<replaceName>MyRankInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_myrankinfo</name>
  		<replaceName>MyRankInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_myrankinfo</name>
  		<replaceName>MyRankInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_myrankinfo</name>
  		<replaceName>MyRankInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TWorldBossNewUserDamageSingle& myrankinfo() const;
  inline ::pb::TWorldBossNewUserDamageSingle* mutable_myrankinfo();
  inline ::pb::TWorldBossNewUserDamageSingle* release_myrankinfo();
  inline void set_allocated_myrankinfo(::pb::TWorldBossNewUserDamageSingle* myrankinfo);

  // @@protoc_insertion_point(class_scope:pb.TWorldBossNewGetRankInfoByLimitRsp)
 private:
  inline void set_has_myrankinfo();
  inline void clear_has_myrankinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle > damagerankarr_;
  ::pb::TWorldBossNewUserDamageSingle* myrankinfo_;
  friend void  protobuf_AddDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_AssignDesc_net_2fWorldBossNew_2eproto();
  friend void protobuf_ShutdownFile_net_2fWorldBossNew_2eproto();

  void InitAsDefaultInstance();
  static TWorldBossNewGetRankInfoByLimitRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TWorldBossNewUserDamageSingle

// optional .pb.TUserSimpleInfo UserSimple = 1;
inline bool TWorldBossNewUserDamageSingle::has_usersimple() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWorldBossNewUserDamageSingle::set_has_usersimple() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWorldBossNewUserDamageSingle::clear_has_usersimple() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWorldBossNewUserDamageSingle::clear_usersimple() {
  if (usersimple_ != NULL) usersimple_->::pb::TUserSimpleInfo::Clear();
  clear_has_usersimple();
}
inline const ::pb::TUserSimpleInfo& TWorldBossNewUserDamageSingle::usersimple() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUserDamageSingle.UserSimple)
  return usersimple_ != NULL ? *usersimple_ : *default_instance_->usersimple_;
}
inline ::pb::TUserSimpleInfo* TWorldBossNewUserDamageSingle::mutable_usersimple() {
  set_has_usersimple();
  if (usersimple_ == NULL) usersimple_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewUserDamageSingle.UserSimple)
  return usersimple_;
}
inline ::pb::TUserSimpleInfo* TWorldBossNewUserDamageSingle::release_usersimple() {
  clear_has_usersimple();
  ::pb::TUserSimpleInfo* temp = usersimple_;
  usersimple_ = NULL;
  return temp;
}
inline void TWorldBossNewUserDamageSingle::set_allocated_usersimple(::pb::TUserSimpleInfo* usersimple) {
  delete usersimple_;
  usersimple_ = usersimple;
  if (usersimple) {
    set_has_usersimple();
  } else {
    clear_has_usersimple();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TWorldBossNewUserDamageSingle.UserSimple)
}

// optional uint64 TotalDamage = 2;
inline bool TWorldBossNewUserDamageSingle::has_totaldamage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWorldBossNewUserDamageSingle::set_has_totaldamage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWorldBossNewUserDamageSingle::clear_has_totaldamage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWorldBossNewUserDamageSingle::clear_totaldamage() {
  totaldamage_ = GOOGLE_ULONGLONG(0);
  clear_has_totaldamage();
}
inline ::google::protobuf::uint64 TWorldBossNewUserDamageSingle::totaldamage() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUserDamageSingle.TotalDamage)
  return totaldamage_;
}
inline void TWorldBossNewUserDamageSingle::set_totaldamage(::google::protobuf::uint64 value) {
  set_has_totaldamage();
  totaldamage_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewUserDamageSingle.TotalDamage)
}

// optional uint64 MaxDamage = 3;
inline bool TWorldBossNewUserDamageSingle::has_maxdamage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TWorldBossNewUserDamageSingle::set_has_maxdamage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TWorldBossNewUserDamageSingle::clear_has_maxdamage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TWorldBossNewUserDamageSingle::clear_maxdamage() {
  maxdamage_ = GOOGLE_ULONGLONG(0);
  clear_has_maxdamage();
}
inline ::google::protobuf::uint64 TWorldBossNewUserDamageSingle::maxdamage() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUserDamageSingle.MaxDamage)
  return maxdamage_;
}
inline void TWorldBossNewUserDamageSingle::set_maxdamage(::google::protobuf::uint64 value) {
  set_has_maxdamage();
  maxdamage_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewUserDamageSingle.MaxDamage)
}

// optional uint32 Rank = 4;
inline bool TWorldBossNewUserDamageSingle::has_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TWorldBossNewUserDamageSingle::set_has_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TWorldBossNewUserDamageSingle::clear_has_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TWorldBossNewUserDamageSingle::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 TWorldBossNewUserDamageSingle::rank() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUserDamageSingle.Rank)
  return rank_;
}
inline void TWorldBossNewUserDamageSingle::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewUserDamageSingle.Rank)
}

// optional uint64 LastChangeTime = 5;
inline bool TWorldBossNewUserDamageSingle::has_lastchangetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TWorldBossNewUserDamageSingle::set_has_lastchangetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TWorldBossNewUserDamageSingle::clear_has_lastchangetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TWorldBossNewUserDamageSingle::clear_lastchangetime() {
  lastchangetime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastchangetime();
}
inline ::google::protobuf::uint64 TWorldBossNewUserDamageSingle::lastchangetime() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUserDamageSingle.LastChangeTime)
  return lastchangetime_;
}
inline void TWorldBossNewUserDamageSingle::set_lastchangetime(::google::protobuf::uint64 value) {
  set_has_lastchangetime();
  lastchangetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewUserDamageSingle.LastChangeTime)
}

// optional uint64 ReportId = 6;
inline bool TWorldBossNewUserDamageSingle::has_reportid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TWorldBossNewUserDamageSingle::set_has_reportid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TWorldBossNewUserDamageSingle::clear_has_reportid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TWorldBossNewUserDamageSingle::clear_reportid() {
  reportid_ = GOOGLE_ULONGLONG(0);
  clear_has_reportid();
}
inline ::google::protobuf::uint64 TWorldBossNewUserDamageSingle::reportid() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUserDamageSingle.ReportId)
  return reportid_;
}
inline void TWorldBossNewUserDamageSingle::set_reportid(::google::protobuf::uint64 value) {
  set_has_reportid();
  reportid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewUserDamageSingle.ReportId)
}

// -------------------------------------------------------------------

// TWorldBossNewUserRankType

// optional uint32 RankId = 1;
inline bool TWorldBossNewUserRankType::has_rankid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWorldBossNewUserRankType::set_has_rankid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWorldBossNewUserRankType::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWorldBossNewUserRankType::clear_rankid() {
  rankid_ = 0u;
  clear_has_rankid();
}
inline ::google::protobuf::uint32 TWorldBossNewUserRankType::rankid() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUserRankType.RankId)
  return rankid_;
}
inline void TWorldBossNewUserRankType::set_rankid(::google::protobuf::uint32 value) {
  set_has_rankid();
  rankid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewUserRankType.RankId)
}

// optional uint32 UserNum = 2;
inline bool TWorldBossNewUserRankType::has_usernum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWorldBossNewUserRankType::set_has_usernum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWorldBossNewUserRankType::clear_has_usernum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWorldBossNewUserRankType::clear_usernum() {
  usernum_ = 0u;
  clear_has_usernum();
}
inline ::google::protobuf::uint32 TWorldBossNewUserRankType::usernum() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUserRankType.UserNum)
  return usernum_;
}
inline void TWorldBossNewUserRankType::set_usernum(::google::protobuf::uint32 value) {
  set_has_usernum();
  usernum_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewUserRankType.UserNum)
}

// optional uint64 DamageMin = 3;
inline bool TWorldBossNewUserRankType::has_damagemin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TWorldBossNewUserRankType::set_has_damagemin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TWorldBossNewUserRankType::clear_has_damagemin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TWorldBossNewUserRankType::clear_damagemin() {
  damagemin_ = GOOGLE_ULONGLONG(0);
  clear_has_damagemin();
}
inline ::google::protobuf::uint64 TWorldBossNewUserRankType::damagemin() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUserRankType.DamageMin)
  return damagemin_;
}
inline void TWorldBossNewUserRankType::set_damagemin(::google::protobuf::uint64 value) {
  set_has_damagemin();
  damagemin_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewUserRankType.DamageMin)
}

// repeated .pb.TWorldBossNewUserDamageSingle UserRankArr = 4;
inline int TWorldBossNewUserRankType::userrankarr_size() const {
  return userrankarr_.size();
}
inline void TWorldBossNewUserRankType::clear_userrankarr() {
  userrankarr_.Clear();
}
inline const ::pb::TWorldBossNewUserDamageSingle& TWorldBossNewUserRankType::userrankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUserRankType.UserRankArr)
  return userrankarr_.Get(index);
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewUserRankType::mutable_userrankarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewUserRankType.UserRankArr)
  return userrankarr_.Mutable(index);
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewUserRankType::add_userrankarr() {
  // @@protoc_insertion_point(field_add:pb.TWorldBossNewUserRankType.UserRankArr)
  return userrankarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >&
TWorldBossNewUserRankType::userrankarr() const {
  // @@protoc_insertion_point(field_list:pb.TWorldBossNewUserRankType.UserRankArr)
  return userrankarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >*
TWorldBossNewUserRankType::mutable_userrankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWorldBossNewUserRankType.UserRankArr)
  return &userrankarr_;
}

// -------------------------------------------------------------------

// TWorldBossNewGetBossInfoRsp

// optional uint32 BossId = 1;
inline bool TWorldBossNewGetBossInfoRsp::has_bossid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWorldBossNewGetBossInfoRsp::set_has_bossid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWorldBossNewGetBossInfoRsp::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWorldBossNewGetBossInfoRsp::clear_bossid() {
  bossid_ = 0u;
  clear_has_bossid();
}
inline ::google::protobuf::uint32 TWorldBossNewGetBossInfoRsp::bossid() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetBossInfoRsp.BossId)
  return bossid_;
}
inline void TWorldBossNewGetBossInfoRsp::set_bossid(::google::protobuf::uint32 value) {
  set_has_bossid();
  bossid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewGetBossInfoRsp.BossId)
}

// optional uint64 OpenTime = 2;
inline bool TWorldBossNewGetBossInfoRsp::has_opentime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWorldBossNewGetBossInfoRsp::set_has_opentime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWorldBossNewGetBossInfoRsp::clear_has_opentime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWorldBossNewGetBossInfoRsp::clear_opentime() {
  opentime_ = GOOGLE_ULONGLONG(0);
  clear_has_opentime();
}
inline ::google::protobuf::uint64 TWorldBossNewGetBossInfoRsp::opentime() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetBossInfoRsp.OpenTime)
  return opentime_;
}
inline void TWorldBossNewGetBossInfoRsp::set_opentime(::google::protobuf::uint64 value) {
  set_has_opentime();
  opentime_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewGetBossInfoRsp.OpenTime)
}

// optional uint32 UsedAtkNum = 3;
inline bool TWorldBossNewGetBossInfoRsp::has_usedatknum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TWorldBossNewGetBossInfoRsp::set_has_usedatknum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TWorldBossNewGetBossInfoRsp::clear_has_usedatknum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TWorldBossNewGetBossInfoRsp::clear_usedatknum() {
  usedatknum_ = 0u;
  clear_has_usedatknum();
}
inline ::google::protobuf::uint32 TWorldBossNewGetBossInfoRsp::usedatknum() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetBossInfoRsp.UsedAtkNum)
  return usedatknum_;
}
inline void TWorldBossNewGetBossInfoRsp::set_usedatknum(::google::protobuf::uint32 value) {
  set_has_usedatknum();
  usedatknum_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewGetBossInfoRsp.UsedAtkNum)
}

// optional .pb.TWorldBossNewUserDamageSingle MyRankInfo = 4;
inline bool TWorldBossNewGetBossInfoRsp::has_myrankinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TWorldBossNewGetBossInfoRsp::set_has_myrankinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TWorldBossNewGetBossInfoRsp::clear_has_myrankinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TWorldBossNewGetBossInfoRsp::clear_myrankinfo() {
  if (myrankinfo_ != NULL) myrankinfo_->::pb::TWorldBossNewUserDamageSingle::Clear();
  clear_has_myrankinfo();
}
inline const ::pb::TWorldBossNewUserDamageSingle& TWorldBossNewGetBossInfoRsp::myrankinfo() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetBossInfoRsp.MyRankInfo)
  return myrankinfo_ != NULL ? *myrankinfo_ : *default_instance_->myrankinfo_;
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewGetBossInfoRsp::mutable_myrankinfo() {
  set_has_myrankinfo();
  if (myrankinfo_ == NULL) myrankinfo_ = new ::pb::TWorldBossNewUserDamageSingle;
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewGetBossInfoRsp.MyRankInfo)
  return myrankinfo_;
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewGetBossInfoRsp::release_myrankinfo() {
  clear_has_myrankinfo();
  ::pb::TWorldBossNewUserDamageSingle* temp = myrankinfo_;
  myrankinfo_ = NULL;
  return temp;
}
inline void TWorldBossNewGetBossInfoRsp::set_allocated_myrankinfo(::pb::TWorldBossNewUserDamageSingle* myrankinfo) {
  delete myrankinfo_;
  myrankinfo_ = myrankinfo;
  if (myrankinfo) {
    set_has_myrankinfo();
  } else {
    clear_has_myrankinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TWorldBossNewGetBossInfoRsp.MyRankInfo)
}

// repeated .pb.TWorldBossNewUserRankType RankTypeArr = 5;
inline int TWorldBossNewGetBossInfoRsp::ranktypearr_size() const {
  return ranktypearr_.size();
}
inline void TWorldBossNewGetBossInfoRsp::clear_ranktypearr() {
  ranktypearr_.Clear();
}
inline const ::pb::TWorldBossNewUserRankType& TWorldBossNewGetBossInfoRsp::ranktypearr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetBossInfoRsp.RankTypeArr)
  return ranktypearr_.Get(index);
}
inline ::pb::TWorldBossNewUserRankType* TWorldBossNewGetBossInfoRsp::mutable_ranktypearr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewGetBossInfoRsp.RankTypeArr)
  return ranktypearr_.Mutable(index);
}
inline ::pb::TWorldBossNewUserRankType* TWorldBossNewGetBossInfoRsp::add_ranktypearr() {
  // @@protoc_insertion_point(field_add:pb.TWorldBossNewGetBossInfoRsp.RankTypeArr)
  return ranktypearr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserRankType >&
TWorldBossNewGetBossInfoRsp::ranktypearr() const {
  // @@protoc_insertion_point(field_list:pb.TWorldBossNewGetBossInfoRsp.RankTypeArr)
  return ranktypearr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserRankType >*
TWorldBossNewGetBossInfoRsp::mutable_ranktypearr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWorldBossNewGetBossInfoRsp.RankTypeArr)
  return &ranktypearr_;
}

// optional uint32 BuyNum = 6;
inline bool TWorldBossNewGetBossInfoRsp::has_buynum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TWorldBossNewGetBossInfoRsp::set_has_buynum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TWorldBossNewGetBossInfoRsp::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TWorldBossNewGetBossInfoRsp::clear_buynum() {
  buynum_ = 0u;
  clear_has_buynum();
}
inline ::google::protobuf::uint32 TWorldBossNewGetBossInfoRsp::buynum() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetBossInfoRsp.BuyNum)
  return buynum_;
}
inline void TWorldBossNewGetBossInfoRsp::set_buynum(::google::protobuf::uint32 value) {
  set_has_buynum();
  buynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewGetBossInfoRsp.BuyNum)
}

// optional uint32 BuyAtkNum = 7;
inline bool TWorldBossNewGetBossInfoRsp::has_buyatknum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TWorldBossNewGetBossInfoRsp::set_has_buyatknum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TWorldBossNewGetBossInfoRsp::clear_has_buyatknum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TWorldBossNewGetBossInfoRsp::clear_buyatknum() {
  buyatknum_ = 0u;
  clear_has_buyatknum();
}
inline ::google::protobuf::uint32 TWorldBossNewGetBossInfoRsp::buyatknum() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetBossInfoRsp.BuyAtkNum)
  return buyatknum_;
}
inline void TWorldBossNewGetBossInfoRsp::set_buyatknum(::google::protobuf::uint32 value) {
  set_has_buyatknum();
  buyatknum_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewGetBossInfoRsp.BuyAtkNum)
}

// repeated uint32 ReceivedDamageRewardTidArr = 8;
inline int TWorldBossNewGetBossInfoRsp::receiveddamagerewardtidarr_size() const {
  return receiveddamagerewardtidarr_.size();
}
inline void TWorldBossNewGetBossInfoRsp::clear_receiveddamagerewardtidarr() {
  receiveddamagerewardtidarr_.Clear();
}
inline ::google::protobuf::uint32 TWorldBossNewGetBossInfoRsp::receiveddamagerewardtidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetBossInfoRsp.ReceivedDamageRewardTidArr)
  return receiveddamagerewardtidarr_.Get(index);
}
inline void TWorldBossNewGetBossInfoRsp::set_receiveddamagerewardtidarr(int index, ::google::protobuf::uint32 value) {
  receiveddamagerewardtidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewGetBossInfoRsp.ReceivedDamageRewardTidArr)
}
inline void TWorldBossNewGetBossInfoRsp::add_receiveddamagerewardtidarr(::google::protobuf::uint32 value) {
  receiveddamagerewardtidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TWorldBossNewGetBossInfoRsp.ReceivedDamageRewardTidArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TWorldBossNewGetBossInfoRsp::receiveddamagerewardtidarr() const {
  // @@protoc_insertion_point(field_list:pb.TWorldBossNewGetBossInfoRsp.ReceivedDamageRewardTidArr)
  return receiveddamagerewardtidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TWorldBossNewGetBossInfoRsp::mutable_receiveddamagerewardtidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWorldBossNewGetBossInfoRsp.ReceivedDamageRewardTidArr)
  return &receiveddamagerewardtidarr_;
}

// -------------------------------------------------------------------

// TWorldBossNewGetAboveRankRsp

// repeated .pb.TWorldBossNewUserDamageSingle AboveRankArr = 1;
inline int TWorldBossNewGetAboveRankRsp::aboverankarr_size() const {
  return aboverankarr_.size();
}
inline void TWorldBossNewGetAboveRankRsp::clear_aboverankarr() {
  aboverankarr_.Clear();
}
inline const ::pb::TWorldBossNewUserDamageSingle& TWorldBossNewGetAboveRankRsp::aboverankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetAboveRankRsp.AboveRankArr)
  return aboverankarr_.Get(index);
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewGetAboveRankRsp::mutable_aboverankarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewGetAboveRankRsp.AboveRankArr)
  return aboverankarr_.Mutable(index);
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewGetAboveRankRsp::add_aboverankarr() {
  // @@protoc_insertion_point(field_add:pb.TWorldBossNewGetAboveRankRsp.AboveRankArr)
  return aboverankarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >&
TWorldBossNewGetAboveRankRsp::aboverankarr() const {
  // @@protoc_insertion_point(field_list:pb.TWorldBossNewGetAboveRankRsp.AboveRankArr)
  return aboverankarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >*
TWorldBossNewGetAboveRankRsp::mutable_aboverankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWorldBossNewGetAboveRankRsp.AboveRankArr)
  return &aboverankarr_;
}

// -------------------------------------------------------------------

// TWorldBossNewGetRankInfoReq

// optional uint32 RankId = 1;
inline bool TWorldBossNewGetRankInfoReq::has_rankid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWorldBossNewGetRankInfoReq::set_has_rankid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWorldBossNewGetRankInfoReq::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWorldBossNewGetRankInfoReq::clear_rankid() {
  rankid_ = 0u;
  clear_has_rankid();
}
inline ::google::protobuf::uint32 TWorldBossNewGetRankInfoReq::rankid() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetRankInfoReq.RankId)
  return rankid_;
}
inline void TWorldBossNewGetRankInfoReq::set_rankid(::google::protobuf::uint32 value) {
  set_has_rankid();
  rankid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewGetRankInfoReq.RankId)
}

// optional uint32 Offset = 2;
inline bool TWorldBossNewGetRankInfoReq::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWorldBossNewGetRankInfoReq::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWorldBossNewGetRankInfoReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWorldBossNewGetRankInfoReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 TWorldBossNewGetRankInfoReq::offset() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetRankInfoReq.Offset)
  return offset_;
}
inline void TWorldBossNewGetRankInfoReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewGetRankInfoReq.Offset)
}

// optional uint32 Limit = 3;
inline bool TWorldBossNewGetRankInfoReq::has_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TWorldBossNewGetRankInfoReq::set_has_limit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TWorldBossNewGetRankInfoReq::clear_has_limit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TWorldBossNewGetRankInfoReq::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 TWorldBossNewGetRankInfoReq::limit() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetRankInfoReq.Limit)
  return limit_;
}
inline void TWorldBossNewGetRankInfoReq::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewGetRankInfoReq.Limit)
}

// -------------------------------------------------------------------

// TWorldBossNewGetRankInfoRsp

// repeated .pb.TWorldBossNewUserDamageSingle UserRankArr = 1;
inline int TWorldBossNewGetRankInfoRsp::userrankarr_size() const {
  return userrankarr_.size();
}
inline void TWorldBossNewGetRankInfoRsp::clear_userrankarr() {
  userrankarr_.Clear();
}
inline const ::pb::TWorldBossNewUserDamageSingle& TWorldBossNewGetRankInfoRsp::userrankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetRankInfoRsp.UserRankArr)
  return userrankarr_.Get(index);
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewGetRankInfoRsp::mutable_userrankarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewGetRankInfoRsp.UserRankArr)
  return userrankarr_.Mutable(index);
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewGetRankInfoRsp::add_userrankarr() {
  // @@protoc_insertion_point(field_add:pb.TWorldBossNewGetRankInfoRsp.UserRankArr)
  return userrankarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >&
TWorldBossNewGetRankInfoRsp::userrankarr() const {
  // @@protoc_insertion_point(field_list:pb.TWorldBossNewGetRankInfoRsp.UserRankArr)
  return userrankarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >*
TWorldBossNewGetRankInfoRsp::mutable_userrankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWorldBossNewGetRankInfoRsp.UserRankArr)
  return &userrankarr_;
}

// -------------------------------------------------------------------

// TWorldBossNewEnterBattleReq

// optional uint32 BossId = 1;
inline bool TWorldBossNewEnterBattleReq::has_bossid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWorldBossNewEnterBattleReq::set_has_bossid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWorldBossNewEnterBattleReq::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWorldBossNewEnterBattleReq::clear_bossid() {
  bossid_ = 0u;
  clear_has_bossid();
}
inline ::google::protobuf::uint32 TWorldBossNewEnterBattleReq::bossid() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewEnterBattleReq.BossId)
  return bossid_;
}
inline void TWorldBossNewEnterBattleReq::set_bossid(::google::protobuf::uint32 value) {
  set_has_bossid();
  bossid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewEnterBattleReq.BossId)
}

// optional .pb.TBattleCheckParam BattleCheckParam = 2;
inline bool TWorldBossNewEnterBattleReq::has_battlecheckparam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWorldBossNewEnterBattleReq::set_has_battlecheckparam() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWorldBossNewEnterBattleReq::clear_has_battlecheckparam() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWorldBossNewEnterBattleReq::clear_battlecheckparam() {
  if (battlecheckparam_ != NULL) battlecheckparam_->::pb::TBattleCheckParam::Clear();
  clear_has_battlecheckparam();
}
inline const ::pb::TBattleCheckParam& TWorldBossNewEnterBattleReq::battlecheckparam() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewEnterBattleReq.BattleCheckParam)
  return battlecheckparam_ != NULL ? *battlecheckparam_ : *default_instance_->battlecheckparam_;
}
inline ::pb::TBattleCheckParam* TWorldBossNewEnterBattleReq::mutable_battlecheckparam() {
  set_has_battlecheckparam();
  if (battlecheckparam_ == NULL) battlecheckparam_ = new ::pb::TBattleCheckParam;
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewEnterBattleReq.BattleCheckParam)
  return battlecheckparam_;
}
inline ::pb::TBattleCheckParam* TWorldBossNewEnterBattleReq::release_battlecheckparam() {
  clear_has_battlecheckparam();
  ::pb::TBattleCheckParam* temp = battlecheckparam_;
  battlecheckparam_ = NULL;
  return temp;
}
inline void TWorldBossNewEnterBattleReq::set_allocated_battlecheckparam(::pb::TBattleCheckParam* battlecheckparam) {
  delete battlecheckparam_;
  battlecheckparam_ = battlecheckparam;
  if (battlecheckparam) {
    set_has_battlecheckparam();
  } else {
    clear_has_battlecheckparam();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TWorldBossNewEnterBattleReq.BattleCheckParam)
}

// -------------------------------------------------------------------

// TWorldBossNewEnterBattleRsp

// optional .pb.TBattleArgs BattleArgs = 1;
inline bool TWorldBossNewEnterBattleRsp::has_battleargs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWorldBossNewEnterBattleRsp::set_has_battleargs() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWorldBossNewEnterBattleRsp::clear_has_battleargs() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWorldBossNewEnterBattleRsp::clear_battleargs() {
  if (battleargs_ != NULL) battleargs_->::pb::TBattleArgs::Clear();
  clear_has_battleargs();
}
inline const ::pb::TBattleArgs& TWorldBossNewEnterBattleRsp::battleargs() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewEnterBattleRsp.BattleArgs)
  return battleargs_ != NULL ? *battleargs_ : *default_instance_->battleargs_;
}
inline ::pb::TBattleArgs* TWorldBossNewEnterBattleRsp::mutable_battleargs() {
  set_has_battleargs();
  if (battleargs_ == NULL) battleargs_ = new ::pb::TBattleArgs;
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewEnterBattleRsp.BattleArgs)
  return battleargs_;
}
inline ::pb::TBattleArgs* TWorldBossNewEnterBattleRsp::release_battleargs() {
  clear_has_battleargs();
  ::pb::TBattleArgs* temp = battleargs_;
  battleargs_ = NULL;
  return temp;
}
inline void TWorldBossNewEnterBattleRsp::set_allocated_battleargs(::pb::TBattleArgs* battleargs) {
  delete battleargs_;
  battleargs_ = battleargs;
  if (battleargs) {
    set_has_battleargs();
  } else {
    clear_has_battleargs();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TWorldBossNewEnterBattleRsp.BattleArgs)
}

// optional uint32 UsedAtkNum = 2;
inline bool TWorldBossNewEnterBattleRsp::has_usedatknum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWorldBossNewEnterBattleRsp::set_has_usedatknum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWorldBossNewEnterBattleRsp::clear_has_usedatknum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWorldBossNewEnterBattleRsp::clear_usedatknum() {
  usedatknum_ = 0u;
  clear_has_usedatknum();
}
inline ::google::protobuf::uint32 TWorldBossNewEnterBattleRsp::usedatknum() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewEnterBattleRsp.UsedAtkNum)
  return usedatknum_;
}
inline void TWorldBossNewEnterBattleRsp::set_usedatknum(::google::protobuf::uint32 value) {
  set_has_usedatknum();
  usedatknum_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewEnterBattleRsp.UsedAtkNum)
}

// -------------------------------------------------------------------

// TWorldBossNewReportBattleReq

// optional uint32 BossId = 1;
inline bool TWorldBossNewReportBattleReq::has_bossid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWorldBossNewReportBattleReq::set_has_bossid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWorldBossNewReportBattleReq::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWorldBossNewReportBattleReq::clear_bossid() {
  bossid_ = 0u;
  clear_has_bossid();
}
inline ::google::protobuf::uint32 TWorldBossNewReportBattleReq::bossid() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewReportBattleReq.BossId)
  return bossid_;
}
inline void TWorldBossNewReportBattleReq::set_bossid(::google::protobuf::uint32 value) {
  set_has_bossid();
  bossid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewReportBattleReq.BossId)
}

// optional bytes BattleRet = 2;
inline bool TWorldBossNewReportBattleReq::has_battleret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWorldBossNewReportBattleReq::set_has_battleret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWorldBossNewReportBattleReq::clear_has_battleret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWorldBossNewReportBattleReq::clear_battleret() {
  if (battleret_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleret_->clear();
  }
  clear_has_battleret();
}
inline const ::std::string& TWorldBossNewReportBattleReq::battleret() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewReportBattleReq.BattleRet)
  return *battleret_;
}
inline void TWorldBossNewReportBattleReq::set_battleret(const ::std::string& value) {
  set_has_battleret();
  if (battleret_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleret_ = new ::std::string;
  }
  battleret_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewReportBattleReq.BattleRet)
}
inline void TWorldBossNewReportBattleReq::set_battleret(const char* value) {
  set_has_battleret();
  if (battleret_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleret_ = new ::std::string;
  }
  battleret_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TWorldBossNewReportBattleReq.BattleRet)
}
inline void TWorldBossNewReportBattleReq::set_battleret(const void* value, size_t size) {
  set_has_battleret();
  if (battleret_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleret_ = new ::std::string;
  }
  battleret_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TWorldBossNewReportBattleReq.BattleRet)
}
inline ::std::string* TWorldBossNewReportBattleReq::mutable_battleret() {
  set_has_battleret();
  if (battleret_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    battleret_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewReportBattleReq.BattleRet)
  return battleret_;
}
inline ::std::string* TWorldBossNewReportBattleReq::release_battleret() {
  clear_has_battleret();
  if (battleret_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = battleret_;
    battleret_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TWorldBossNewReportBattleReq::set_allocated_battleret(::std::string* battleret) {
  if (battleret_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleret_;
  }
  if (battleret) {
    set_has_battleret();
    battleret_ = battleret;
  } else {
    clear_has_battleret();
    battleret_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TWorldBossNewReportBattleReq.BattleRet)
}

// -------------------------------------------------------------------

// TWorldBossNewReportBattleRsp

// optional uint32 UsedAtkNum = 1;
inline bool TWorldBossNewReportBattleRsp::has_usedatknum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWorldBossNewReportBattleRsp::set_has_usedatknum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWorldBossNewReportBattleRsp::clear_has_usedatknum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWorldBossNewReportBattleRsp::clear_usedatknum() {
  usedatknum_ = 0u;
  clear_has_usedatknum();
}
inline ::google::protobuf::uint32 TWorldBossNewReportBattleRsp::usedatknum() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewReportBattleRsp.UsedAtkNum)
  return usedatknum_;
}
inline void TWorldBossNewReportBattleRsp::set_usedatknum(::google::protobuf::uint32 value) {
  set_has_usedatknum();
  usedatknum_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewReportBattleRsp.UsedAtkNum)
}

// optional .pb.TWorldBossNewUserDamageSingle MyUserRank = 2;
inline bool TWorldBossNewReportBattleRsp::has_myuserrank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWorldBossNewReportBattleRsp::set_has_myuserrank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWorldBossNewReportBattleRsp::clear_has_myuserrank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWorldBossNewReportBattleRsp::clear_myuserrank() {
  if (myuserrank_ != NULL) myuserrank_->::pb::TWorldBossNewUserDamageSingle::Clear();
  clear_has_myuserrank();
}
inline const ::pb::TWorldBossNewUserDamageSingle& TWorldBossNewReportBattleRsp::myuserrank() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewReportBattleRsp.MyUserRank)
  return myuserrank_ != NULL ? *myuserrank_ : *default_instance_->myuserrank_;
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewReportBattleRsp::mutable_myuserrank() {
  set_has_myuserrank();
  if (myuserrank_ == NULL) myuserrank_ = new ::pb::TWorldBossNewUserDamageSingle;
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewReportBattleRsp.MyUserRank)
  return myuserrank_;
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewReportBattleRsp::release_myuserrank() {
  clear_has_myuserrank();
  ::pb::TWorldBossNewUserDamageSingle* temp = myuserrank_;
  myuserrank_ = NULL;
  return temp;
}
inline void TWorldBossNewReportBattleRsp::set_allocated_myuserrank(::pb::TWorldBossNewUserDamageSingle* myuserrank) {
  delete myuserrank_;
  myuserrank_ = myuserrank;
  if (myuserrank) {
    set_has_myuserrank();
  } else {
    clear_has_myuserrank();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TWorldBossNewReportBattleRsp.MyUserRank)
}

// optional bool IsNewRecord = 3;
inline bool TWorldBossNewReportBattleRsp::has_isnewrecord() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TWorldBossNewReportBattleRsp::set_has_isnewrecord() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TWorldBossNewReportBattleRsp::clear_has_isnewrecord() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TWorldBossNewReportBattleRsp::clear_isnewrecord() {
  isnewrecord_ = false;
  clear_has_isnewrecord();
}
inline bool TWorldBossNewReportBattleRsp::isnewrecord() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewReportBattleRsp.IsNewRecord)
  return isnewrecord_;
}
inline void TWorldBossNewReportBattleRsp::set_isnewrecord(bool value) {
  set_has_isnewrecord();
  isnewrecord_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewReportBattleRsp.IsNewRecord)
}

// repeated .pb.TCommonReward DropArray = 4;
inline int TWorldBossNewReportBattleRsp::droparray_size() const {
  return droparray_.size();
}
inline void TWorldBossNewReportBattleRsp::clear_droparray() {
  droparray_.Clear();
}
inline const ::pb::TCommonReward& TWorldBossNewReportBattleRsp::droparray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewReportBattleRsp.DropArray)
  return droparray_.Get(index);
}
inline ::pb::TCommonReward* TWorldBossNewReportBattleRsp::mutable_droparray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewReportBattleRsp.DropArray)
  return droparray_.Mutable(index);
}
inline ::pb::TCommonReward* TWorldBossNewReportBattleRsp::add_droparray() {
  // @@protoc_insertion_point(field_add:pb.TWorldBossNewReportBattleRsp.DropArray)
  return droparray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TWorldBossNewReportBattleRsp::droparray() const {
  // @@protoc_insertion_point(field_list:pb.TWorldBossNewReportBattleRsp.DropArray)
  return droparray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TWorldBossNewReportBattleRsp::mutable_droparray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWorldBossNewReportBattleRsp.DropArray)
  return &droparray_;
}

// -------------------------------------------------------------------

// TWorldBossNewBuyAtkNumRsp

// optional uint32 BuyNum = 1;
inline bool TWorldBossNewBuyAtkNumRsp::has_buynum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWorldBossNewBuyAtkNumRsp::set_has_buynum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWorldBossNewBuyAtkNumRsp::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWorldBossNewBuyAtkNumRsp::clear_buynum() {
  buynum_ = 0u;
  clear_has_buynum();
}
inline ::google::protobuf::uint32 TWorldBossNewBuyAtkNumRsp::buynum() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewBuyAtkNumRsp.BuyNum)
  return buynum_;
}
inline void TWorldBossNewBuyAtkNumRsp::set_buynum(::google::protobuf::uint32 value) {
  set_has_buynum();
  buynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewBuyAtkNumRsp.BuyNum)
}

// optional uint32 BuyAtkNum = 2;
inline bool TWorldBossNewBuyAtkNumRsp::has_buyatknum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWorldBossNewBuyAtkNumRsp::set_has_buyatknum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWorldBossNewBuyAtkNumRsp::clear_has_buyatknum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWorldBossNewBuyAtkNumRsp::clear_buyatknum() {
  buyatknum_ = 0u;
  clear_has_buyatknum();
}
inline ::google::protobuf::uint32 TWorldBossNewBuyAtkNumRsp::buyatknum() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewBuyAtkNumRsp.BuyAtkNum)
  return buyatknum_;
}
inline void TWorldBossNewBuyAtkNumRsp::set_buyatknum(::google::protobuf::uint32 value) {
  set_has_buyatknum();
  buyatknum_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewBuyAtkNumRsp.BuyAtkNum)
}

// -------------------------------------------------------------------

// TWorldBossNewServerPush

// repeated .pb.TWorldBossNewUserRankType RankTypeArr = 1;
inline int TWorldBossNewServerPush::ranktypearr_size() const {
  return ranktypearr_.size();
}
inline void TWorldBossNewServerPush::clear_ranktypearr() {
  ranktypearr_.Clear();
}
inline const ::pb::TWorldBossNewUserRankType& TWorldBossNewServerPush::ranktypearr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewServerPush.RankTypeArr)
  return ranktypearr_.Get(index);
}
inline ::pb::TWorldBossNewUserRankType* TWorldBossNewServerPush::mutable_ranktypearr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewServerPush.RankTypeArr)
  return ranktypearr_.Mutable(index);
}
inline ::pb::TWorldBossNewUserRankType* TWorldBossNewServerPush::add_ranktypearr() {
  // @@protoc_insertion_point(field_add:pb.TWorldBossNewServerPush.RankTypeArr)
  return ranktypearr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserRankType >&
TWorldBossNewServerPush::ranktypearr() const {
  // @@protoc_insertion_point(field_list:pb.TWorldBossNewServerPush.RankTypeArr)
  return ranktypearr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserRankType >*
TWorldBossNewServerPush::mutable_ranktypearr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWorldBossNewServerPush.RankTypeArr)
  return &ranktypearr_;
}

// -------------------------------------------------------------------

// TWorldBossNewReceiveDamageRewardReq

// optional uint32 DamageRewardTid = 1;
inline bool TWorldBossNewReceiveDamageRewardReq::has_damagerewardtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWorldBossNewReceiveDamageRewardReq::set_has_damagerewardtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWorldBossNewReceiveDamageRewardReq::clear_has_damagerewardtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWorldBossNewReceiveDamageRewardReq::clear_damagerewardtid() {
  damagerewardtid_ = 0u;
  clear_has_damagerewardtid();
}
inline ::google::protobuf::uint32 TWorldBossNewReceiveDamageRewardReq::damagerewardtid() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewReceiveDamageRewardReq.DamageRewardTid)
  return damagerewardtid_;
}
inline void TWorldBossNewReceiveDamageRewardReq::set_damagerewardtid(::google::protobuf::uint32 value) {
  set_has_damagerewardtid();
  damagerewardtid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewReceiveDamageRewardReq.DamageRewardTid)
}

// -------------------------------------------------------------------

// TWorldBossNewReceiveDamageRewardRsp

// repeated .pb.TCommonReward RewardArr = 1;
inline int TWorldBossNewReceiveDamageRewardRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TWorldBossNewReceiveDamageRewardRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TCommonReward& TWorldBossNewReceiveDamageRewardRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewReceiveDamageRewardRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TCommonReward* TWorldBossNewReceiveDamageRewardRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewReceiveDamageRewardRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TCommonReward* TWorldBossNewReceiveDamageRewardRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TWorldBossNewReceiveDamageRewardRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TWorldBossNewReceiveDamageRewardRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TWorldBossNewReceiveDamageRewardRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TWorldBossNewReceiveDamageRewardRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWorldBossNewReceiveDamageRewardRsp.RewardArr)
  return &rewardarr_;
}

// -------------------------------------------------------------------

// TWorldBossNewAutoReceiveDamageRewardRsp

// repeated uint32 ReceivedDamageRewardTidArr = 1;
inline int TWorldBossNewAutoReceiveDamageRewardRsp::receiveddamagerewardtidarr_size() const {
  return receiveddamagerewardtidarr_.size();
}
inline void TWorldBossNewAutoReceiveDamageRewardRsp::clear_receiveddamagerewardtidarr() {
  receiveddamagerewardtidarr_.Clear();
}
inline ::google::protobuf::uint32 TWorldBossNewAutoReceiveDamageRewardRsp::receiveddamagerewardtidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewAutoReceiveDamageRewardRsp.ReceivedDamageRewardTidArr)
  return receiveddamagerewardtidarr_.Get(index);
}
inline void TWorldBossNewAutoReceiveDamageRewardRsp::set_receiveddamagerewardtidarr(int index, ::google::protobuf::uint32 value) {
  receiveddamagerewardtidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewAutoReceiveDamageRewardRsp.ReceivedDamageRewardTidArr)
}
inline void TWorldBossNewAutoReceiveDamageRewardRsp::add_receiveddamagerewardtidarr(::google::protobuf::uint32 value) {
  receiveddamagerewardtidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TWorldBossNewAutoReceiveDamageRewardRsp.ReceivedDamageRewardTidArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TWorldBossNewAutoReceiveDamageRewardRsp::receiveddamagerewardtidarr() const {
  // @@protoc_insertion_point(field_list:pb.TWorldBossNewAutoReceiveDamageRewardRsp.ReceivedDamageRewardTidArr)
  return receiveddamagerewardtidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TWorldBossNewAutoReceiveDamageRewardRsp::mutable_receiveddamagerewardtidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWorldBossNewAutoReceiveDamageRewardRsp.ReceivedDamageRewardTidArr)
  return &receiveddamagerewardtidarr_;
}

// repeated .pb.TCommonReward RewardArr = 2;
inline int TWorldBossNewAutoReceiveDamageRewardRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TWorldBossNewAutoReceiveDamageRewardRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TCommonReward& TWorldBossNewAutoReceiveDamageRewardRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewAutoReceiveDamageRewardRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TCommonReward* TWorldBossNewAutoReceiveDamageRewardRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewAutoReceiveDamageRewardRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TCommonReward* TWorldBossNewAutoReceiveDamageRewardRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TWorldBossNewAutoReceiveDamageRewardRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TWorldBossNewAutoReceiveDamageRewardRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TWorldBossNewAutoReceiveDamageRewardRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TWorldBossNewAutoReceiveDamageRewardRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWorldBossNewAutoReceiveDamageRewardRsp.RewardArr)
  return &rewardarr_;
}

// -------------------------------------------------------------------

// TWorldBossNewUnit

// optional uint32 Hid = 1;
inline bool TWorldBossNewUnit::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWorldBossNewUnit::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWorldBossNewUnit::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWorldBossNewUnit::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TWorldBossNewUnit::hid() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUnit.Hid)
  return hid_;
}
inline void TWorldBossNewUnit::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewUnit.Hid)
}

// optional uint32 Pos = 2;
inline bool TWorldBossNewUnit::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWorldBossNewUnit::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWorldBossNewUnit::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWorldBossNewUnit::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TWorldBossNewUnit::pos() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUnit.Pos)
  return pos_;
}
inline void TWorldBossNewUnit::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewUnit.Pos)
}

// optional uint32 StarLv = 3;
inline bool TWorldBossNewUnit::has_starlv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TWorldBossNewUnit::set_has_starlv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TWorldBossNewUnit::clear_has_starlv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TWorldBossNewUnit::clear_starlv() {
  starlv_ = 0u;
  clear_has_starlv();
}
inline ::google::protobuf::uint32 TWorldBossNewUnit::starlv() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUnit.StarLv)
  return starlv_;
}
inline void TWorldBossNewUnit::set_starlv(::google::protobuf::uint32 value) {
  set_has_starlv();
  starlv_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewUnit.StarLv)
}

// optional uint32 Level = 4;
inline bool TWorldBossNewUnit::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TWorldBossNewUnit::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TWorldBossNewUnit::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TWorldBossNewUnit::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TWorldBossNewUnit::level() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewUnit.Level)
  return level_;
}
inline void TWorldBossNewUnit::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewUnit.Level)
}

// -------------------------------------------------------------------

// TWorldBossNewBattleRecord

// optional uint64 ReportId = 1;
inline bool TWorldBossNewBattleRecord::has_reportid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWorldBossNewBattleRecord::set_has_reportid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWorldBossNewBattleRecord::clear_has_reportid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWorldBossNewBattleRecord::clear_reportid() {
  reportid_ = GOOGLE_ULONGLONG(0);
  clear_has_reportid();
}
inline ::google::protobuf::uint64 TWorldBossNewBattleRecord::reportid() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewBattleRecord.ReportId)
  return reportid_;
}
inline void TWorldBossNewBattleRecord::set_reportid(::google::protobuf::uint64 value) {
  set_has_reportid();
  reportid_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewBattleRecord.ReportId)
}

// optional uint64 Time = 2;
inline bool TWorldBossNewBattleRecord::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWorldBossNewBattleRecord::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWorldBossNewBattleRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWorldBossNewBattleRecord::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 TWorldBossNewBattleRecord::time() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewBattleRecord.Time)
  return time_;
}
inline void TWorldBossNewBattleRecord::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewBattleRecord.Time)
}

// optional uint64 Damage = 3;
inline bool TWorldBossNewBattleRecord::has_damage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TWorldBossNewBattleRecord::set_has_damage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TWorldBossNewBattleRecord::clear_has_damage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TWorldBossNewBattleRecord::clear_damage() {
  damage_ = GOOGLE_ULONGLONG(0);
  clear_has_damage();
}
inline ::google::protobuf::uint64 TWorldBossNewBattleRecord::damage() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewBattleRecord.Damage)
  return damage_;
}
inline void TWorldBossNewBattleRecord::set_damage(::google::protobuf::uint64 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewBattleRecord.Damage)
}

// repeated .pb.TWorldBossNewUnit UnitArr = 4;
inline int TWorldBossNewBattleRecord::unitarr_size() const {
  return unitarr_.size();
}
inline void TWorldBossNewBattleRecord::clear_unitarr() {
  unitarr_.Clear();
}
inline const ::pb::TWorldBossNewUnit& TWorldBossNewBattleRecord::unitarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewBattleRecord.UnitArr)
  return unitarr_.Get(index);
}
inline ::pb::TWorldBossNewUnit* TWorldBossNewBattleRecord::mutable_unitarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewBattleRecord.UnitArr)
  return unitarr_.Mutable(index);
}
inline ::pb::TWorldBossNewUnit* TWorldBossNewBattleRecord::add_unitarr() {
  // @@protoc_insertion_point(field_add:pb.TWorldBossNewBattleRecord.UnitArr)
  return unitarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUnit >&
TWorldBossNewBattleRecord::unitarr() const {
  // @@protoc_insertion_point(field_list:pb.TWorldBossNewBattleRecord.UnitArr)
  return unitarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUnit >*
TWorldBossNewBattleRecord::mutable_unitarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWorldBossNewBattleRecord.UnitArr)
  return &unitarr_;
}

// -------------------------------------------------------------------

// TWorldBossNewGetBattleRecordRsp

// repeated .pb.TWorldBossNewBattleRecord RecordArr = 1;
inline int TWorldBossNewGetBattleRecordRsp::recordarr_size() const {
  return recordarr_.size();
}
inline void TWorldBossNewGetBattleRecordRsp::clear_recordarr() {
  recordarr_.Clear();
}
inline const ::pb::TWorldBossNewBattleRecord& TWorldBossNewGetBattleRecordRsp::recordarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetBattleRecordRsp.RecordArr)
  return recordarr_.Get(index);
}
inline ::pb::TWorldBossNewBattleRecord* TWorldBossNewGetBattleRecordRsp::mutable_recordarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewGetBattleRecordRsp.RecordArr)
  return recordarr_.Mutable(index);
}
inline ::pb::TWorldBossNewBattleRecord* TWorldBossNewGetBattleRecordRsp::add_recordarr() {
  // @@protoc_insertion_point(field_add:pb.TWorldBossNewGetBattleRecordRsp.RecordArr)
  return recordarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewBattleRecord >&
TWorldBossNewGetBattleRecordRsp::recordarr() const {
  // @@protoc_insertion_point(field_list:pb.TWorldBossNewGetBattleRecordRsp.RecordArr)
  return recordarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewBattleRecord >*
TWorldBossNewGetBattleRecordRsp::mutable_recordarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWorldBossNewGetBattleRecordRsp.RecordArr)
  return &recordarr_;
}

// -------------------------------------------------------------------

// TWorldBossNewGetRankInfoByLimitReq

// optional uint32 Offset = 1;
inline bool TWorldBossNewGetRankInfoByLimitReq::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TWorldBossNewGetRankInfoByLimitReq::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TWorldBossNewGetRankInfoByLimitReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TWorldBossNewGetRankInfoByLimitReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 TWorldBossNewGetRankInfoByLimitReq::offset() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetRankInfoByLimitReq.Offset)
  return offset_;
}
inline void TWorldBossNewGetRankInfoByLimitReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewGetRankInfoByLimitReq.Offset)
}

// optional uint32 Limit = 2;
inline bool TWorldBossNewGetRankInfoByLimitReq::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWorldBossNewGetRankInfoByLimitReq::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWorldBossNewGetRankInfoByLimitReq::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWorldBossNewGetRankInfoByLimitReq::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 TWorldBossNewGetRankInfoByLimitReq::limit() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetRankInfoByLimitReq.Limit)
  return limit_;
}
inline void TWorldBossNewGetRankInfoByLimitReq::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:pb.TWorldBossNewGetRankInfoByLimitReq.Limit)
}

// -------------------------------------------------------------------

// TWorldBossNewGetRankInfoByLimitRsp

// repeated .pb.TWorldBossNewUserDamageSingle DamageRankArr = 1;
inline int TWorldBossNewGetRankInfoByLimitRsp::damagerankarr_size() const {
  return damagerankarr_.size();
}
inline void TWorldBossNewGetRankInfoByLimitRsp::clear_damagerankarr() {
  damagerankarr_.Clear();
}
inline const ::pb::TWorldBossNewUserDamageSingle& TWorldBossNewGetRankInfoByLimitRsp::damagerankarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetRankInfoByLimitRsp.DamageRankArr)
  return damagerankarr_.Get(index);
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewGetRankInfoByLimitRsp::mutable_damagerankarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewGetRankInfoByLimitRsp.DamageRankArr)
  return damagerankarr_.Mutable(index);
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewGetRankInfoByLimitRsp::add_damagerankarr() {
  // @@protoc_insertion_point(field_add:pb.TWorldBossNewGetRankInfoByLimitRsp.DamageRankArr)
  return damagerankarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >&
TWorldBossNewGetRankInfoByLimitRsp::damagerankarr() const {
  // @@protoc_insertion_point(field_list:pb.TWorldBossNewGetRankInfoByLimitRsp.DamageRankArr)
  return damagerankarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TWorldBossNewUserDamageSingle >*
TWorldBossNewGetRankInfoByLimitRsp::mutable_damagerankarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TWorldBossNewGetRankInfoByLimitRsp.DamageRankArr)
  return &damagerankarr_;
}

// optional .pb.TWorldBossNewUserDamageSingle MyRankInfo = 2;
inline bool TWorldBossNewGetRankInfoByLimitRsp::has_myrankinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TWorldBossNewGetRankInfoByLimitRsp::set_has_myrankinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TWorldBossNewGetRankInfoByLimitRsp::clear_has_myrankinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TWorldBossNewGetRankInfoByLimitRsp::clear_myrankinfo() {
  if (myrankinfo_ != NULL) myrankinfo_->::pb::TWorldBossNewUserDamageSingle::Clear();
  clear_has_myrankinfo();
}
inline const ::pb::TWorldBossNewUserDamageSingle& TWorldBossNewGetRankInfoByLimitRsp::myrankinfo() const {
  // @@protoc_insertion_point(field_get:pb.TWorldBossNewGetRankInfoByLimitRsp.MyRankInfo)
  return myrankinfo_ != NULL ? *myrankinfo_ : *default_instance_->myrankinfo_;
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewGetRankInfoByLimitRsp::mutable_myrankinfo() {
  set_has_myrankinfo();
  if (myrankinfo_ == NULL) myrankinfo_ = new ::pb::TWorldBossNewUserDamageSingle;
  // @@protoc_insertion_point(field_mutable:pb.TWorldBossNewGetRankInfoByLimitRsp.MyRankInfo)
  return myrankinfo_;
}
inline ::pb::TWorldBossNewUserDamageSingle* TWorldBossNewGetRankInfoByLimitRsp::release_myrankinfo() {
  clear_has_myrankinfo();
  ::pb::TWorldBossNewUserDamageSingle* temp = myrankinfo_;
  myrankinfo_ = NULL;
  return temp;
}
inline void TWorldBossNewGetRankInfoByLimitRsp::set_allocated_myrankinfo(::pb::TWorldBossNewUserDamageSingle* myrankinfo) {
  delete myrankinfo_;
  myrankinfo_ = myrankinfo;
  if (myrankinfo) {
    set_has_myrankinfo();
  } else {
    clear_has_myrankinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TWorldBossNewGetRankInfoByLimitRsp.MyRankInfo)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fWorldBossNew_2eproto__INCLUDED
