// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/BountyList.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/BountyList.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TBountyListBountySingle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBountyListBountySingle_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBountyListGetBountListInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBountyListGetBountListInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBountyListGetRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBountyListGetRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBountyListGetRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBountyListGetRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBountyListGetTotalRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBountyListGetTotalRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBountyListPush_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBountyListPush_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fBountyList_2eproto() {
  protobuf_AddDesc_net_2fBountyList_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/BountyList.proto");
  GOOGLE_CHECK(file != NULL);
  TBountyListBountySingle_descriptor_ = file->message_type(0);
  static const int TBountyListBountySingle_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListBountySingle, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListBountySingle, levelid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListBountySingle, receivetime_),
  };
  TBountyListBountySingle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBountyListBountySingle_descriptor_,
      TBountyListBountySingle::default_instance_,
      TBountyListBountySingle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListBountySingle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListBountySingle, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBountyListBountySingle));
  TBountyListGetBountListInfoRsp_descriptor_ = file->message_type(1);
  static const int TBountyListGetBountListInfoRsp_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetBountListInfoRsp, opentime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetBountListInfoRsp, totalscores_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetBountListInfoRsp, paytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetBountListInfoRsp, passchaptertime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetBountListInfoRsp, bountycommonarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetBountListInfoRsp, bountyadvancearr_),
  };
  TBountyListGetBountListInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBountyListGetBountListInfoRsp_descriptor_,
      TBountyListGetBountListInfoRsp::default_instance_,
      TBountyListGetBountListInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetBountListInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetBountListInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBountyListGetBountListInfoRsp));
  TBountyListGetRewardReq_descriptor_ = file->message_type(2);
  static const int TBountyListGetRewardReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetRewardReq, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetRewardReq, isadvance_),
  };
  TBountyListGetRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBountyListGetRewardReq_descriptor_,
      TBountyListGetRewardReq::default_instance_,
      TBountyListGetRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBountyListGetRewardReq));
  TBountyListGetRewardRsp_descriptor_ = file->message_type(3);
  static const int TBountyListGetRewardRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetRewardRsp, isadvance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetRewardRsp, bountyinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetRewardRsp, rewardarr_),
  };
  TBountyListGetRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBountyListGetRewardRsp_descriptor_,
      TBountyListGetRewardRsp::default_instance_,
      TBountyListGetRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBountyListGetRewardRsp));
  TBountyListGetTotalRewardRsp_descriptor_ = file->message_type(4);
  static const int TBountyListGetTotalRewardRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetTotalRewardRsp, bountycommonarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetTotalRewardRsp, bountyadvancearr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetTotalRewardRsp, rewardarr_),
  };
  TBountyListGetTotalRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBountyListGetTotalRewardRsp_descriptor_,
      TBountyListGetTotalRewardRsp::default_instance_,
      TBountyListGetTotalRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetTotalRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListGetTotalRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBountyListGetTotalRewardRsp));
  TBountyListPush_descriptor_ = file->message_type(5);
  static const int TBountyListPush_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListPush, paytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListPush, passchaptertime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListPush, totalscores_),
  };
  TBountyListPush_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBountyListPush_descriptor_,
      TBountyListPush::default_instance_,
      TBountyListPush_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListPush, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBountyListPush, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBountyListPush));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fBountyList_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBountyListBountySingle_descriptor_, &TBountyListBountySingle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBountyListGetBountListInfoRsp_descriptor_, &TBountyListGetBountListInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBountyListGetRewardReq_descriptor_, &TBountyListGetRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBountyListGetRewardRsp_descriptor_, &TBountyListGetRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBountyListGetTotalRewardRsp_descriptor_, &TBountyListGetTotalRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBountyListPush_descriptor_, &TBountyListPush::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fBountyList_2eproto() {
  delete TBountyListBountySingle::default_instance_;
  delete TBountyListBountySingle_reflection_;
  delete TBountyListGetBountListInfoRsp::default_instance_;
  delete TBountyListGetBountListInfoRsp_reflection_;
  delete TBountyListGetRewardReq::default_instance_;
  delete TBountyListGetRewardReq_reflection_;
  delete TBountyListGetRewardRsp::default_instance_;
  delete TBountyListGetRewardRsp_reflection_;
  delete TBountyListGetTotalRewardRsp::default_instance_;
  delete TBountyListGetTotalRewardRsp_reflection_;
  delete TBountyListPush::default_instance_;
  delete TBountyListPush_reflection_;
}

void protobuf_AddDesc_net_2fBountyList_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024net/BountyList.proto\022\002pb\032\026net/CommonRe"
    "ward.proto\"N\n\027TBountyListBountySingle\022\r\n"
    "\005Level\030\001 \001(\r\022\017\n\007LevelId\030\002 \001(\r\022\023\n\013Receive"
    "Time\030\003 \001(\004\"\336\001\n\036TBountyListGetBountListIn"
    "foRsp\022\020\n\010OpenTime\030\001 \001(\004\022\023\n\013TotalScores\030\002"
    " \001(\r\022\017\n\007PayTime\030\003 \001(\004\022\027\n\017PassChapterTime"
    "\030\004 \001(\004\0224\n\017BountyCommonArr\030\005 \003(\0132\033.pb.TBo"
    "untyListBountySingle\0225\n\020BountyAdvanceArr"
    "\030\006 \003(\0132\033.pb.TBountyListBountySingle\";\n\027T"
    "BountyListGetRewardReq\022\r\n\005Level\030\001 \001(\r\022\021\n"
    "\tIsAdvance\030\002 \001(\010\"\203\001\n\027TBountyListGetRewar"
    "dRsp\022\021\n\tIsAdvance\030\001 \001(\r\022/\n\nBountyInfo\030\002 "
    "\001(\0132\033.pb.TBountyListBountySingle\022$\n\tRewa"
    "rdArr\030\003 \003(\0132\021.pb.TCommonReward\"\261\001\n\034TBoun"
    "tyListGetTotalRewardRsp\0224\n\017BountyCommonA"
    "rr\030\001 \003(\0132\033.pb.TBountyListBountySingle\0225\n"
    "\020BountyAdvanceArr\030\002 \003(\0132\033.pb.TBountyList"
    "BountySingle\022$\n\tRewardArr\030\003 \003(\0132\021.pb.TCo"
    "mmonReward\"P\n\017TBountyListPush\022\017\n\007PayTime"
    "\030\001 \001(\004\022\027\n\017PassChapterTime\030\002 \001(\004\022\023\n\013Total"
    "Scores\030\003 \001(\r", 812);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/BountyList.proto", &protobuf_RegisterTypes);
  TBountyListBountySingle::default_instance_ = new TBountyListBountySingle();
  TBountyListGetBountListInfoRsp::default_instance_ = new TBountyListGetBountListInfoRsp();
  TBountyListGetRewardReq::default_instance_ = new TBountyListGetRewardReq();
  TBountyListGetRewardRsp::default_instance_ = new TBountyListGetRewardRsp();
  TBountyListGetTotalRewardRsp::default_instance_ = new TBountyListGetTotalRewardRsp();
  TBountyListPush::default_instance_ = new TBountyListPush();
  TBountyListBountySingle::default_instance_->InitAsDefaultInstance();
  TBountyListGetBountListInfoRsp::default_instance_->InitAsDefaultInstance();
  TBountyListGetRewardReq::default_instance_->InitAsDefaultInstance();
  TBountyListGetRewardRsp::default_instance_->InitAsDefaultInstance();
  TBountyListGetTotalRewardRsp::default_instance_->InitAsDefaultInstance();
  TBountyListPush::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fBountyList_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fBountyList_2eproto {
  StaticDescriptorInitializer_net_2fBountyList_2eproto() {
    protobuf_AddDesc_net_2fBountyList_2eproto();
  }
} static_descriptor_initializer_net_2fBountyList_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TBountyListBountySingle::kLevelFieldNumber;
const int TBountyListBountySingle::kLevelIdFieldNumber;
const int TBountyListBountySingle::kReceiveTimeFieldNumber;
#endif  // !_MSC_VER

TBountyListBountySingle::TBountyListBountySingle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBountyListBountySingle)
}

void TBountyListBountySingle::InitAsDefaultInstance() {
}

TBountyListBountySingle::TBountyListBountySingle(const TBountyListBountySingle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBountyListBountySingle)
}

void TBountyListBountySingle::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  levelid_ = 0u;
  receivetime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBountyListBountySingle::~TBountyListBountySingle() {
  // @@protoc_insertion_point(destructor:pb.TBountyListBountySingle)
  SharedDtor();
}

void TBountyListBountySingle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBountyListBountySingle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBountyListBountySingle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBountyListBountySingle_descriptor_;
}

const TBountyListBountySingle& TBountyListBountySingle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBountyList_2eproto();
  return *default_instance_;
}

TBountyListBountySingle* TBountyListBountySingle::default_instance_ = NULL;

TBountyListBountySingle* TBountyListBountySingle::New() const {
  return new TBountyListBountySingle;
}

void TBountyListBountySingle::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBountyListBountySingle*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(level_, receivetime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBountyListBountySingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBountyListBountySingle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_LevelId;
        break;
      }

      // optional uint32 LevelId = 2;
      case 2: {
        if (tag == 16) {
         parse_LevelId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &levelid_)));
          set_has_levelid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ReceiveTime;
        break;
      }

      // optional uint64 ReceiveTime = 3;
      case 3: {
        if (tag == 24) {
         parse_ReceiveTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &receivetime_)));
          set_has_receivetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBountyListBountySingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBountyListBountySingle)
  return false;
#undef DO_
}

void TBountyListBountySingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBountyListBountySingle)
  // optional uint32 Level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // optional uint32 LevelId = 2;
  if (has_levelid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->levelid(), output);
  }

  // optional uint64 ReceiveTime = 3;
  if (has_receivetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->receivetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBountyListBountySingle)
}

::google::protobuf::uint8* TBountyListBountySingle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBountyListBountySingle)
  // optional uint32 Level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // optional uint32 LevelId = 2;
  if (has_levelid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->levelid(), target);
  }

  // optional uint64 ReceiveTime = 3;
  if (has_receivetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->receivetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBountyListBountySingle)
  return target;
}

int TBountyListBountySingle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 LevelId = 2;
    if (has_levelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->levelid());
    }

    // optional uint64 ReceiveTime = 3;
    if (has_receivetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->receivetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBountyListBountySingle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBountyListBountySingle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBountyListBountySingle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBountyListBountySingle::MergeFrom(const TBountyListBountySingle& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_levelid()) {
      set_levelid(from.levelid());
    }
    if (from.has_receivetime()) {
      set_receivetime(from.receivetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBountyListBountySingle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBountyListBountySingle::CopyFrom(const TBountyListBountySingle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBountyListBountySingle::IsInitialized() const {

  return true;
}

void TBountyListBountySingle::Swap(TBountyListBountySingle* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(levelid_, other->levelid_);
    std::swap(receivetime_, other->receivetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBountyListBountySingle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBountyListBountySingle_descriptor_;
  metadata.reflection = TBountyListBountySingle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBountyListGetBountListInfoRsp::kOpenTimeFieldNumber;
const int TBountyListGetBountListInfoRsp::kTotalScoresFieldNumber;
const int TBountyListGetBountListInfoRsp::kPayTimeFieldNumber;
const int TBountyListGetBountListInfoRsp::kPassChapterTimeFieldNumber;
const int TBountyListGetBountListInfoRsp::kBountyCommonArrFieldNumber;
const int TBountyListGetBountListInfoRsp::kBountyAdvanceArrFieldNumber;
#endif  // !_MSC_VER

TBountyListGetBountListInfoRsp::TBountyListGetBountListInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBountyListGetBountListInfoRsp)
}

void TBountyListGetBountListInfoRsp::InitAsDefaultInstance() {
}

TBountyListGetBountListInfoRsp::TBountyListGetBountListInfoRsp(const TBountyListGetBountListInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBountyListGetBountListInfoRsp)
}

void TBountyListGetBountListInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  opentime_ = GOOGLE_ULONGLONG(0);
  totalscores_ = 0u;
  paytime_ = GOOGLE_ULONGLONG(0);
  passchaptertime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBountyListGetBountListInfoRsp::~TBountyListGetBountListInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TBountyListGetBountListInfoRsp)
  SharedDtor();
}

void TBountyListGetBountListInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBountyListGetBountListInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBountyListGetBountListInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBountyListGetBountListInfoRsp_descriptor_;
}

const TBountyListGetBountListInfoRsp& TBountyListGetBountListInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBountyList_2eproto();
  return *default_instance_;
}

TBountyListGetBountListInfoRsp* TBountyListGetBountListInfoRsp::default_instance_ = NULL;

TBountyListGetBountListInfoRsp* TBountyListGetBountListInfoRsp::New() const {
  return new TBountyListGetBountListInfoRsp;
}

void TBountyListGetBountListInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBountyListGetBountListInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(opentime_, passchaptertime_);
    totalscores_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  bountycommonarr_.Clear();
  bountyadvancearr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBountyListGetBountListInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBountyListGetBountListInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 OpenTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &opentime_)));
          set_has_opentime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TotalScores;
        break;
      }

      // optional uint32 TotalScores = 2;
      case 2: {
        if (tag == 16) {
         parse_TotalScores:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalscores_)));
          set_has_totalscores();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PayTime;
        break;
      }

      // optional uint64 PayTime = 3;
      case 3: {
        if (tag == 24) {
         parse_PayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &paytime_)));
          set_has_paytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_PassChapterTime;
        break;
      }

      // optional uint64 PassChapterTime = 4;
      case 4: {
        if (tag == 32) {
         parse_PassChapterTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &passchaptertime_)));
          set_has_passchaptertime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_BountyCommonArr;
        break;
      }

      // repeated .pb.TBountyListBountySingle BountyCommonArr = 5;
      case 5: {
        if (tag == 42) {
         parse_BountyCommonArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bountycommonarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_BountyCommonArr;
        if (input->ExpectTag(50)) goto parse_BountyAdvanceArr;
        break;
      }

      // repeated .pb.TBountyListBountySingle BountyAdvanceArr = 6;
      case 6: {
        if (tag == 50) {
         parse_BountyAdvanceArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bountyadvancearr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_BountyAdvanceArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBountyListGetBountListInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBountyListGetBountListInfoRsp)
  return false;
#undef DO_
}

void TBountyListGetBountListInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBountyListGetBountListInfoRsp)
  // optional uint64 OpenTime = 1;
  if (has_opentime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->opentime(), output);
  }

  // optional uint32 TotalScores = 2;
  if (has_totalscores()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->totalscores(), output);
  }

  // optional uint64 PayTime = 3;
  if (has_paytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->paytime(), output);
  }

  // optional uint64 PassChapterTime = 4;
  if (has_passchaptertime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->passchaptertime(), output);
  }

  // repeated .pb.TBountyListBountySingle BountyCommonArr = 5;
  for (int i = 0; i < this->bountycommonarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->bountycommonarr(i), output);
  }

  // repeated .pb.TBountyListBountySingle BountyAdvanceArr = 6;
  for (int i = 0; i < this->bountyadvancearr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->bountyadvancearr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBountyListGetBountListInfoRsp)
}

::google::protobuf::uint8* TBountyListGetBountListInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBountyListGetBountListInfoRsp)
  // optional uint64 OpenTime = 1;
  if (has_opentime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->opentime(), target);
  }

  // optional uint32 TotalScores = 2;
  if (has_totalscores()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->totalscores(), target);
  }

  // optional uint64 PayTime = 3;
  if (has_paytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->paytime(), target);
  }

  // optional uint64 PassChapterTime = 4;
  if (has_passchaptertime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->passchaptertime(), target);
  }

  // repeated .pb.TBountyListBountySingle BountyCommonArr = 5;
  for (int i = 0; i < this->bountycommonarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->bountycommonarr(i), target);
  }

  // repeated .pb.TBountyListBountySingle BountyAdvanceArr = 6;
  for (int i = 0; i < this->bountyadvancearr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->bountyadvancearr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBountyListGetBountListInfoRsp)
  return target;
}

int TBountyListGetBountListInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 OpenTime = 1;
    if (has_opentime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->opentime());
    }

    // optional uint32 TotalScores = 2;
    if (has_totalscores()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->totalscores());
    }

    // optional uint64 PayTime = 3;
    if (has_paytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->paytime());
    }

    // optional uint64 PassChapterTime = 4;
    if (has_passchaptertime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->passchaptertime());
    }

  }
  // repeated .pb.TBountyListBountySingle BountyCommonArr = 5;
  total_size += 1 * this->bountycommonarr_size();
  for (int i = 0; i < this->bountycommonarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bountycommonarr(i));
  }

  // repeated .pb.TBountyListBountySingle BountyAdvanceArr = 6;
  total_size += 1 * this->bountyadvancearr_size();
  for (int i = 0; i < this->bountyadvancearr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bountyadvancearr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBountyListGetBountListInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBountyListGetBountListInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBountyListGetBountListInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBountyListGetBountListInfoRsp::MergeFrom(const TBountyListGetBountListInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  bountycommonarr_.MergeFrom(from.bountycommonarr_);
  bountyadvancearr_.MergeFrom(from.bountyadvancearr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_opentime()) {
      set_opentime(from.opentime());
    }
    if (from.has_totalscores()) {
      set_totalscores(from.totalscores());
    }
    if (from.has_paytime()) {
      set_paytime(from.paytime());
    }
    if (from.has_passchaptertime()) {
      set_passchaptertime(from.passchaptertime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBountyListGetBountListInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBountyListGetBountListInfoRsp::CopyFrom(const TBountyListGetBountListInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBountyListGetBountListInfoRsp::IsInitialized() const {

  return true;
}

void TBountyListGetBountListInfoRsp::Swap(TBountyListGetBountListInfoRsp* other) {
  if (other != this) {
    std::swap(opentime_, other->opentime_);
    std::swap(totalscores_, other->totalscores_);
    std::swap(paytime_, other->paytime_);
    std::swap(passchaptertime_, other->passchaptertime_);
    bountycommonarr_.Swap(&other->bountycommonarr_);
    bountyadvancearr_.Swap(&other->bountyadvancearr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBountyListGetBountListInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBountyListGetBountListInfoRsp_descriptor_;
  metadata.reflection = TBountyListGetBountListInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBountyListGetRewardReq::kLevelFieldNumber;
const int TBountyListGetRewardReq::kIsAdvanceFieldNumber;
#endif  // !_MSC_VER

TBountyListGetRewardReq::TBountyListGetRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBountyListGetRewardReq)
}

void TBountyListGetRewardReq::InitAsDefaultInstance() {
}

TBountyListGetRewardReq::TBountyListGetRewardReq(const TBountyListGetRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBountyListGetRewardReq)
}

void TBountyListGetRewardReq::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  isadvance_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBountyListGetRewardReq::~TBountyListGetRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TBountyListGetRewardReq)
  SharedDtor();
}

void TBountyListGetRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBountyListGetRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBountyListGetRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBountyListGetRewardReq_descriptor_;
}

const TBountyListGetRewardReq& TBountyListGetRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBountyList_2eproto();
  return *default_instance_;
}

TBountyListGetRewardReq* TBountyListGetRewardReq::default_instance_ = NULL;

TBountyListGetRewardReq* TBountyListGetRewardReq::New() const {
  return new TBountyListGetRewardReq;
}

void TBountyListGetRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBountyListGetRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(level_, isadvance_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBountyListGetRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBountyListGetRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_IsAdvance;
        break;
      }

      // optional bool IsAdvance = 2;
      case 2: {
        if (tag == 16) {
         parse_IsAdvance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isadvance_)));
          set_has_isadvance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBountyListGetRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBountyListGetRewardReq)
  return false;
#undef DO_
}

void TBountyListGetRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBountyListGetRewardReq)
  // optional uint32 Level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // optional bool IsAdvance = 2;
  if (has_isadvance()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isadvance(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBountyListGetRewardReq)
}

::google::protobuf::uint8* TBountyListGetRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBountyListGetRewardReq)
  // optional uint32 Level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // optional bool IsAdvance = 2;
  if (has_isadvance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isadvance(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBountyListGetRewardReq)
  return target;
}

int TBountyListGetRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional bool IsAdvance = 2;
    if (has_isadvance()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBountyListGetRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBountyListGetRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBountyListGetRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBountyListGetRewardReq::MergeFrom(const TBountyListGetRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_isadvance()) {
      set_isadvance(from.isadvance());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBountyListGetRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBountyListGetRewardReq::CopyFrom(const TBountyListGetRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBountyListGetRewardReq::IsInitialized() const {

  return true;
}

void TBountyListGetRewardReq::Swap(TBountyListGetRewardReq* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(isadvance_, other->isadvance_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBountyListGetRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBountyListGetRewardReq_descriptor_;
  metadata.reflection = TBountyListGetRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBountyListGetRewardRsp::kIsAdvanceFieldNumber;
const int TBountyListGetRewardRsp::kBountyInfoFieldNumber;
const int TBountyListGetRewardRsp::kRewardArrFieldNumber;
#endif  // !_MSC_VER

TBountyListGetRewardRsp::TBountyListGetRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBountyListGetRewardRsp)
}

void TBountyListGetRewardRsp::InitAsDefaultInstance() {
  bountyinfo_ = const_cast< ::pb::TBountyListBountySingle*>(&::pb::TBountyListBountySingle::default_instance());
}

TBountyListGetRewardRsp::TBountyListGetRewardRsp(const TBountyListGetRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBountyListGetRewardRsp)
}

void TBountyListGetRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  isadvance_ = 0u;
  bountyinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBountyListGetRewardRsp::~TBountyListGetRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TBountyListGetRewardRsp)
  SharedDtor();
}

void TBountyListGetRewardRsp::SharedDtor() {
  if (this != default_instance_) {
    delete bountyinfo_;
  }
}

void TBountyListGetRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBountyListGetRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBountyListGetRewardRsp_descriptor_;
}

const TBountyListGetRewardRsp& TBountyListGetRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBountyList_2eproto();
  return *default_instance_;
}

TBountyListGetRewardRsp* TBountyListGetRewardRsp::default_instance_ = NULL;

TBountyListGetRewardRsp* TBountyListGetRewardRsp::New() const {
  return new TBountyListGetRewardRsp;
}

void TBountyListGetRewardRsp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    isadvance_ = 0u;
    if (has_bountyinfo()) {
      if (bountyinfo_ != NULL) bountyinfo_->::pb::TBountyListBountySingle::Clear();
    }
  }
  rewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBountyListGetRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBountyListGetRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 IsAdvance = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &isadvance_)));
          set_has_isadvance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BountyInfo;
        break;
      }

      // optional .pb.TBountyListBountySingle BountyInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_BountyInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bountyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RewardArr;
        break;
      }

      // repeated .pb.TCommonReward RewardArr = 3;
      case 3: {
        if (tag == 26) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RewardArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBountyListGetRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBountyListGetRewardRsp)
  return false;
#undef DO_
}

void TBountyListGetRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBountyListGetRewardRsp)
  // optional uint32 IsAdvance = 1;
  if (has_isadvance()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->isadvance(), output);
  }

  // optional .pb.TBountyListBountySingle BountyInfo = 2;
  if (has_bountyinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bountyinfo(), output);
  }

  // repeated .pb.TCommonReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rewardarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBountyListGetRewardRsp)
}

::google::protobuf::uint8* TBountyListGetRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBountyListGetRewardRsp)
  // optional uint32 IsAdvance = 1;
  if (has_isadvance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->isadvance(), target);
  }

  // optional .pb.TBountyListBountySingle BountyInfo = 2;
  if (has_bountyinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bountyinfo(), target);
  }

  // repeated .pb.TCommonReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rewardarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBountyListGetRewardRsp)
  return target;
}

int TBountyListGetRewardRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 IsAdvance = 1;
    if (has_isadvance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->isadvance());
    }

    // optional .pb.TBountyListBountySingle BountyInfo = 2;
    if (has_bountyinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bountyinfo());
    }

  }
  // repeated .pb.TCommonReward RewardArr = 3;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBountyListGetRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBountyListGetRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBountyListGetRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBountyListGetRewardRsp::MergeFrom(const TBountyListGetRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarr_.MergeFrom(from.rewardarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_isadvance()) {
      set_isadvance(from.isadvance());
    }
    if (from.has_bountyinfo()) {
      mutable_bountyinfo()->::pb::TBountyListBountySingle::MergeFrom(from.bountyinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBountyListGetRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBountyListGetRewardRsp::CopyFrom(const TBountyListGetRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBountyListGetRewardRsp::IsInitialized() const {

  return true;
}

void TBountyListGetRewardRsp::Swap(TBountyListGetRewardRsp* other) {
  if (other != this) {
    std::swap(isadvance_, other->isadvance_);
    std::swap(bountyinfo_, other->bountyinfo_);
    rewardarr_.Swap(&other->rewardarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBountyListGetRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBountyListGetRewardRsp_descriptor_;
  metadata.reflection = TBountyListGetRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBountyListGetTotalRewardRsp::kBountyCommonArrFieldNumber;
const int TBountyListGetTotalRewardRsp::kBountyAdvanceArrFieldNumber;
const int TBountyListGetTotalRewardRsp::kRewardArrFieldNumber;
#endif  // !_MSC_VER

TBountyListGetTotalRewardRsp::TBountyListGetTotalRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBountyListGetTotalRewardRsp)
}

void TBountyListGetTotalRewardRsp::InitAsDefaultInstance() {
}

TBountyListGetTotalRewardRsp::TBountyListGetTotalRewardRsp(const TBountyListGetTotalRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBountyListGetTotalRewardRsp)
}

void TBountyListGetTotalRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBountyListGetTotalRewardRsp::~TBountyListGetTotalRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TBountyListGetTotalRewardRsp)
  SharedDtor();
}

void TBountyListGetTotalRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBountyListGetTotalRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBountyListGetTotalRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBountyListGetTotalRewardRsp_descriptor_;
}

const TBountyListGetTotalRewardRsp& TBountyListGetTotalRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBountyList_2eproto();
  return *default_instance_;
}

TBountyListGetTotalRewardRsp* TBountyListGetTotalRewardRsp::default_instance_ = NULL;

TBountyListGetTotalRewardRsp* TBountyListGetTotalRewardRsp::New() const {
  return new TBountyListGetTotalRewardRsp;
}

void TBountyListGetTotalRewardRsp::Clear() {
  bountycommonarr_.Clear();
  bountyadvancearr_.Clear();
  rewardarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBountyListGetTotalRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBountyListGetTotalRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TBountyListBountySingle BountyCommonArr = 1;
      case 1: {
        if (tag == 10) {
         parse_BountyCommonArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bountycommonarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_BountyCommonArr;
        if (input->ExpectTag(18)) goto parse_BountyAdvanceArr;
        break;
      }

      // repeated .pb.TBountyListBountySingle BountyAdvanceArr = 2;
      case 2: {
        if (tag == 18) {
         parse_BountyAdvanceArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bountyadvancearr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BountyAdvanceArr;
        if (input->ExpectTag(26)) goto parse_RewardArr;
        break;
      }

      // repeated .pb.TCommonReward RewardArr = 3;
      case 3: {
        if (tag == 26) {
         parse_RewardArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RewardArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBountyListGetTotalRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBountyListGetTotalRewardRsp)
  return false;
#undef DO_
}

void TBountyListGetTotalRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBountyListGetTotalRewardRsp)
  // repeated .pb.TBountyListBountySingle BountyCommonArr = 1;
  for (int i = 0; i < this->bountycommonarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bountycommonarr(i), output);
  }

  // repeated .pb.TBountyListBountySingle BountyAdvanceArr = 2;
  for (int i = 0; i < this->bountyadvancearr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bountyadvancearr(i), output);
  }

  // repeated .pb.TCommonReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rewardarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBountyListGetTotalRewardRsp)
}

::google::protobuf::uint8* TBountyListGetTotalRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBountyListGetTotalRewardRsp)
  // repeated .pb.TBountyListBountySingle BountyCommonArr = 1;
  for (int i = 0; i < this->bountycommonarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bountycommonarr(i), target);
  }

  // repeated .pb.TBountyListBountySingle BountyAdvanceArr = 2;
  for (int i = 0; i < this->bountyadvancearr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bountyadvancearr(i), target);
  }

  // repeated .pb.TCommonReward RewardArr = 3;
  for (int i = 0; i < this->rewardarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rewardarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBountyListGetTotalRewardRsp)
  return target;
}

int TBountyListGetTotalRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TBountyListBountySingle BountyCommonArr = 1;
  total_size += 1 * this->bountycommonarr_size();
  for (int i = 0; i < this->bountycommonarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bountycommonarr(i));
  }

  // repeated .pb.TBountyListBountySingle BountyAdvanceArr = 2;
  total_size += 1 * this->bountyadvancearr_size();
  for (int i = 0; i < this->bountyadvancearr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bountyadvancearr(i));
  }

  // repeated .pb.TCommonReward RewardArr = 3;
  total_size += 1 * this->rewardarr_size();
  for (int i = 0; i < this->rewardarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBountyListGetTotalRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBountyListGetTotalRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBountyListGetTotalRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBountyListGetTotalRewardRsp::MergeFrom(const TBountyListGetTotalRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  bountycommonarr_.MergeFrom(from.bountycommonarr_);
  bountyadvancearr_.MergeFrom(from.bountyadvancearr_);
  rewardarr_.MergeFrom(from.rewardarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBountyListGetTotalRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBountyListGetTotalRewardRsp::CopyFrom(const TBountyListGetTotalRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBountyListGetTotalRewardRsp::IsInitialized() const {

  return true;
}

void TBountyListGetTotalRewardRsp::Swap(TBountyListGetTotalRewardRsp* other) {
  if (other != this) {
    bountycommonarr_.Swap(&other->bountycommonarr_);
    bountyadvancearr_.Swap(&other->bountyadvancearr_);
    rewardarr_.Swap(&other->rewardarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBountyListGetTotalRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBountyListGetTotalRewardRsp_descriptor_;
  metadata.reflection = TBountyListGetTotalRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBountyListPush::kPayTimeFieldNumber;
const int TBountyListPush::kPassChapterTimeFieldNumber;
const int TBountyListPush::kTotalScoresFieldNumber;
#endif  // !_MSC_VER

TBountyListPush::TBountyListPush()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBountyListPush)
}

void TBountyListPush::InitAsDefaultInstance() {
}

TBountyListPush::TBountyListPush(const TBountyListPush& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBountyListPush)
}

void TBountyListPush::SharedCtor() {
  _cached_size_ = 0;
  paytime_ = GOOGLE_ULONGLONG(0);
  passchaptertime_ = GOOGLE_ULONGLONG(0);
  totalscores_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBountyListPush::~TBountyListPush() {
  // @@protoc_insertion_point(destructor:pb.TBountyListPush)
  SharedDtor();
}

void TBountyListPush::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBountyListPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBountyListPush::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBountyListPush_descriptor_;
}

const TBountyListPush& TBountyListPush::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fBountyList_2eproto();
  return *default_instance_;
}

TBountyListPush* TBountyListPush::default_instance_ = NULL;

TBountyListPush* TBountyListPush::New() const {
  return new TBountyListPush;
}

void TBountyListPush::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TBountyListPush*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(paytime_, totalscores_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBountyListPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBountyListPush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 PayTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &paytime_)));
          set_has_paytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PassChapterTime;
        break;
      }

      // optional uint64 PassChapterTime = 2;
      case 2: {
        if (tag == 16) {
         parse_PassChapterTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &passchaptertime_)));
          set_has_passchaptertime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_TotalScores;
        break;
      }

      // optional uint32 TotalScores = 3;
      case 3: {
        if (tag == 24) {
         parse_TotalScores:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalscores_)));
          set_has_totalscores();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBountyListPush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBountyListPush)
  return false;
#undef DO_
}

void TBountyListPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBountyListPush)
  // optional uint64 PayTime = 1;
  if (has_paytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->paytime(), output);
  }

  // optional uint64 PassChapterTime = 2;
  if (has_passchaptertime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->passchaptertime(), output);
  }

  // optional uint32 TotalScores = 3;
  if (has_totalscores()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->totalscores(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBountyListPush)
}

::google::protobuf::uint8* TBountyListPush::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBountyListPush)
  // optional uint64 PayTime = 1;
  if (has_paytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->paytime(), target);
  }

  // optional uint64 PassChapterTime = 2;
  if (has_passchaptertime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->passchaptertime(), target);
  }

  // optional uint32 TotalScores = 3;
  if (has_totalscores()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->totalscores(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBountyListPush)
  return target;
}

int TBountyListPush::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 PayTime = 1;
    if (has_paytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->paytime());
    }

    // optional uint64 PassChapterTime = 2;
    if (has_passchaptertime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->passchaptertime());
    }

    // optional uint32 TotalScores = 3;
    if (has_totalscores()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->totalscores());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBountyListPush::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBountyListPush* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBountyListPush*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBountyListPush::MergeFrom(const TBountyListPush& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_paytime()) {
      set_paytime(from.paytime());
    }
    if (from.has_passchaptertime()) {
      set_passchaptertime(from.passchaptertime());
    }
    if (from.has_totalscores()) {
      set_totalscores(from.totalscores());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBountyListPush::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBountyListPush::CopyFrom(const TBountyListPush& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBountyListPush::IsInitialized() const {

  return true;
}

void TBountyListPush::Swap(TBountyListPush* other) {
  if (other != this) {
    std::swap(paytime_, other->paytime_);
    std::swap(passchaptertime_, other->passchaptertime_);
    std::swap(totalscores_, other->totalscores_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBountyListPush::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBountyListPush_descriptor_;
  metadata.reflection = TBountyListPush_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
