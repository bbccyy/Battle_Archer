// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/TowerDefensePro.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/TowerDefensePro.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TTowerDefenseProSimpleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProSimpleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProGetSimpleInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProGetSimpleInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProSetPlotEndRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProSetPlotEndRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProGetHangRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProGetHangRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProGetHangRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProGetHangRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProGetQuickHangRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProGetQuickHangRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProSetFormationReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProSetFormationReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProDoBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProDoBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProDoBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProDoBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProReportBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProReportBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProReportBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProReportBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProRoundRankInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProRoundRankInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProGetRoundRankReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProGetRoundRankReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseProGetRoundRankRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseProGetRoundRankRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fTowerDefensePro_2eproto() {
  protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/TowerDefensePro.proto");
  GOOGLE_CHECK(file != NULL);
  TTowerDefenseProSimpleInfo_descriptor_ = file->message_type(0);
  static const int TTowerDefenseProSimpleInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSimpleInfo, curroundid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSimpleInfo, maxroundid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSimpleInfo, plotendtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSimpleInfo, hangbegintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSimpleInfo, receivetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSimpleInfo, settletime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSimpleInfo, hangduration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSimpleInfo, quicknum_),
  };
  TTowerDefenseProSimpleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProSimpleInfo_descriptor_,
      TTowerDefenseProSimpleInfo::default_instance_,
      TTowerDefenseProSimpleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSimpleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSimpleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProSimpleInfo));
  TTowerDefenseProGetSimpleInfoRsp_descriptor_ = file->message_type(1);
  static const int TTowerDefenseProGetSimpleInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetSimpleInfoRsp, simpleinfo_),
  };
  TTowerDefenseProGetSimpleInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProGetSimpleInfoRsp_descriptor_,
      TTowerDefenseProGetSimpleInfoRsp::default_instance_,
      TTowerDefenseProGetSimpleInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetSimpleInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetSimpleInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProGetSimpleInfoRsp));
  TTowerDefenseProGetInfoRsp_descriptor_ = file->message_type(2);
  static const int TTowerDefenseProGetInfoRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetInfoRsp, simpleinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetInfoRsp, wavenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetInfoRsp, battleargsdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetInfoRsp, arrhangreward_),
  };
  TTowerDefenseProGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProGetInfoRsp_descriptor_,
      TTowerDefenseProGetInfoRsp::default_instance_,
      TTowerDefenseProGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProGetInfoRsp));
  TTowerDefenseProSetPlotEndRsp_descriptor_ = file->message_type(3);
  static const int TTowerDefenseProSetPlotEndRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSetPlotEndRsp, battleargsdata_),
  };
  TTowerDefenseProSetPlotEndRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProSetPlotEndRsp_descriptor_,
      TTowerDefenseProSetPlotEndRsp::default_instance_,
      TTowerDefenseProSetPlotEndRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSetPlotEndRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSetPlotEndRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProSetPlotEndRsp));
  TTowerDefenseProGetHangRewardReq_descriptor_ = file->message_type(4);
  static const int TTowerDefenseProGetHangRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetHangRewardReq, ispreview_),
  };
  TTowerDefenseProGetHangRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProGetHangRewardReq_descriptor_,
      TTowerDefenseProGetHangRewardReq::default_instance_,
      TTowerDefenseProGetHangRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetHangRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetHangRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProGetHangRewardReq));
  TTowerDefenseProGetHangRewardRsp_descriptor_ = file->message_type(5);
  static const int TTowerDefenseProGetHangRewardRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetHangRewardRsp, hangbegintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetHangRewardRsp, receivetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetHangRewardRsp, arrhangreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetHangRewardRsp, settletime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetHangRewardRsp, hangduration_),
  };
  TTowerDefenseProGetHangRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProGetHangRewardRsp_descriptor_,
      TTowerDefenseProGetHangRewardRsp::default_instance_,
      TTowerDefenseProGetHangRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetHangRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetHangRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProGetHangRewardRsp));
  TTowerDefenseProGetQuickHangRewardRsp_descriptor_ = file->message_type(6);
  static const int TTowerDefenseProGetQuickHangRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetQuickHangRewardRsp, arrhangreward_),
  };
  TTowerDefenseProGetQuickHangRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProGetQuickHangRewardRsp_descriptor_,
      TTowerDefenseProGetQuickHangRewardRsp::default_instance_,
      TTowerDefenseProGetQuickHangRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetQuickHangRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetQuickHangRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProGetQuickHangRewardRsp));
  TTowerDefenseProSetFormationReq_descriptor_ = file->message_type(7);
  static const int TTowerDefenseProSetFormationReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSetFormationReq, arrformation_),
  };
  TTowerDefenseProSetFormationReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProSetFormationReq_descriptor_,
      TTowerDefenseProSetFormationReq::default_instance_,
      TTowerDefenseProSetFormationReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSetFormationReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProSetFormationReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProSetFormationReq));
  TTowerDefenseProDoBattleReq_descriptor_ = file->message_type(8);
  static const int TTowerDefenseProDoBattleReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProDoBattleReq, roundid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProDoBattleReq, battlecheckparam_),
  };
  TTowerDefenseProDoBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProDoBattleReq_descriptor_,
      TTowerDefenseProDoBattleReq::default_instance_,
      TTowerDefenseProDoBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProDoBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProDoBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProDoBattleReq));
  TTowerDefenseProDoBattleRsp_descriptor_ = file->message_type(9);
  static const int TTowerDefenseProDoBattleRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProDoBattleRsp, battleargsdata_),
  };
  TTowerDefenseProDoBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProDoBattleRsp_descriptor_,
      TTowerDefenseProDoBattleRsp::default_instance_,
      TTowerDefenseProDoBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProDoBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProDoBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProDoBattleRsp));
  TTowerDefenseProReportBattleReq_descriptor_ = file->message_type(10);
  static const int TTowerDefenseProReportBattleReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProReportBattleReq, roundid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProReportBattleReq, battleresultbytes_),
  };
  TTowerDefenseProReportBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProReportBattleReq_descriptor_,
      TTowerDefenseProReportBattleReq::default_instance_,
      TTowerDefenseProReportBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProReportBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProReportBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProReportBattleReq));
  TTowerDefenseProReportBattleRsp_descriptor_ = file->message_type(11);
  static const int TTowerDefenseProReportBattleRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProReportBattleRsp, droparray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProReportBattleRsp, battleargsdata_),
  };
  TTowerDefenseProReportBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProReportBattleRsp_descriptor_,
      TTowerDefenseProReportBattleRsp::default_instance_,
      TTowerDefenseProReportBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProReportBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProReportBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProReportBattleRsp));
  TTowerDefenseProRoundRankInfo_descriptor_ = file->message_type(12);
  static const int TTowerDefenseProRoundRankInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProRoundRankInfo, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProRoundRankInfo, roundid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProRoundRankInfo, updatetime_),
  };
  TTowerDefenseProRoundRankInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProRoundRankInfo_descriptor_,
      TTowerDefenseProRoundRankInfo::default_instance_,
      TTowerDefenseProRoundRankInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProRoundRankInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProRoundRankInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProRoundRankInfo));
  TTowerDefenseProGetRoundRankReq_descriptor_ = file->message_type(13);
  static const int TTowerDefenseProGetRoundRankReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetRoundRankReq, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetRoundRankReq, limit_),
  };
  TTowerDefenseProGetRoundRankReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProGetRoundRankReq_descriptor_,
      TTowerDefenseProGetRoundRankReq::default_instance_,
      TTowerDefenseProGetRoundRankReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetRoundRankReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetRoundRankReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProGetRoundRankReq));
  TTowerDefenseProGetRoundRankRsp_descriptor_ = file->message_type(14);
  static const int TTowerDefenseProGetRoundRankRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetRoundRankRsp, rankarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetRoundRankRsp, myrank_),
  };
  TTowerDefenseProGetRoundRankRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseProGetRoundRankRsp_descriptor_,
      TTowerDefenseProGetRoundRankRsp::default_instance_,
      TTowerDefenseProGetRoundRankRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetRoundRankRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseProGetRoundRankRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseProGetRoundRankRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fTowerDefensePro_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProSimpleInfo_descriptor_, &TTowerDefenseProSimpleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProGetSimpleInfoRsp_descriptor_, &TTowerDefenseProGetSimpleInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProGetInfoRsp_descriptor_, &TTowerDefenseProGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProSetPlotEndRsp_descriptor_, &TTowerDefenseProSetPlotEndRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProGetHangRewardReq_descriptor_, &TTowerDefenseProGetHangRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProGetHangRewardRsp_descriptor_, &TTowerDefenseProGetHangRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProGetQuickHangRewardRsp_descriptor_, &TTowerDefenseProGetQuickHangRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProSetFormationReq_descriptor_, &TTowerDefenseProSetFormationReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProDoBattleReq_descriptor_, &TTowerDefenseProDoBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProDoBattleRsp_descriptor_, &TTowerDefenseProDoBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProReportBattleReq_descriptor_, &TTowerDefenseProReportBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProReportBattleRsp_descriptor_, &TTowerDefenseProReportBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProRoundRankInfo_descriptor_, &TTowerDefenseProRoundRankInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProGetRoundRankReq_descriptor_, &TTowerDefenseProGetRoundRankReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseProGetRoundRankRsp_descriptor_, &TTowerDefenseProGetRoundRankRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fTowerDefensePro_2eproto() {
  delete TTowerDefenseProSimpleInfo::default_instance_;
  delete TTowerDefenseProSimpleInfo_reflection_;
  delete TTowerDefenseProGetSimpleInfoRsp::default_instance_;
  delete TTowerDefenseProGetSimpleInfoRsp_reflection_;
  delete TTowerDefenseProGetInfoRsp::default_instance_;
  delete TTowerDefenseProGetInfoRsp_reflection_;
  delete TTowerDefenseProSetPlotEndRsp::default_instance_;
  delete TTowerDefenseProSetPlotEndRsp_reflection_;
  delete TTowerDefenseProGetHangRewardReq::default_instance_;
  delete TTowerDefenseProGetHangRewardReq_reflection_;
  delete TTowerDefenseProGetHangRewardRsp::default_instance_;
  delete TTowerDefenseProGetHangRewardRsp_reflection_;
  delete TTowerDefenseProGetQuickHangRewardRsp::default_instance_;
  delete TTowerDefenseProGetQuickHangRewardRsp_reflection_;
  delete TTowerDefenseProSetFormationReq::default_instance_;
  delete TTowerDefenseProSetFormationReq_reflection_;
  delete TTowerDefenseProDoBattleReq::default_instance_;
  delete TTowerDefenseProDoBattleReq_reflection_;
  delete TTowerDefenseProDoBattleRsp::default_instance_;
  delete TTowerDefenseProDoBattleRsp_reflection_;
  delete TTowerDefenseProReportBattleReq::default_instance_;
  delete TTowerDefenseProReportBattleReq_reflection_;
  delete TTowerDefenseProReportBattleRsp::default_instance_;
  delete TTowerDefenseProReportBattleRsp_reflection_;
  delete TTowerDefenseProRoundRankInfo::default_instance_;
  delete TTowerDefenseProRoundRankInfo_reflection_;
  delete TTowerDefenseProGetRoundRankReq::default_instance_;
  delete TTowerDefenseProGetRoundRankReq_reflection_;
  delete TTowerDefenseProGetRoundRankRsp::default_instance_;
  delete TTowerDefenseProGetRoundRankRsp_reflection_;
}

void protobuf_AddDesc_net_2fTowerDefensePro_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fBattle_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031net/TowerDefensePro.proto\022\002pb\032\020net/Bat"
    "tle.proto\032\026net/CommonReward.proto\032\016net/U"
    "ser.proto\"\301\001\n\032TTowerDefenseProSimpleInfo"
    "\022\022\n\nCurRoundId\030\001 \001(\r\022\022\n\nMaxRoundId\030\002 \001(\r"
    "\022\023\n\013PlotEndTime\030\003 \001(\004\022\025\n\rHangBeginTime\030\004"
    " \001(\004\022\023\n\013ReceiveTime\030\005 \001(\004\022\022\n\nSettleTime\030"
    "\006 \001(\004\022\024\n\014HangDuration\030\007 \001(\004\022\020\n\010QuickNum\030"
    "\010 \001(\r\"V\n TTowerDefenseProGetSimpleInfoRs"
    "p\0222\n\nSimpleInfo\030\001 \001(\0132\036.pb.TTowerDefense"
    "ProSimpleInfo\"\243\001\n\032TTowerDefenseProGetInf"
    "oRsp\0222\n\nSimpleInfo\030\001 \001(\0132\036.pb.TTowerDefe"
    "nseProSimpleInfo\022\017\n\007WaveNum\030\002 \001(\r\022\026\n\016Bat"
    "tleArgsData\030\003 \001(\014\022(\n\rArrHangReward\030\004 \003(\013"
    "2\021.pb.TCommonReward\"7\n\035TTowerDefenseProS"
    "etPlotEndRsp\022\026\n\016BattleArgsData\030\001 \001(\014\"5\n "
    "TTowerDefenseProGetHangRewardReq\022\021\n\tIsPr"
    "eview\030\001 \001(\010\"\242\001\n TTowerDefenseProGetHangR"
    "ewardRsp\022\025\n\rHangBeginTime\030\001 \001(\004\022\023\n\013Recei"
    "veTime\030\002 \001(\004\022(\n\rArrHangReward\030\003 \003(\0132\021.pb"
    ".TCommonReward\022\022\n\nSettleTime\030\004 \001(\004\022\024\n\014Ha"
    "ngDuration\030\005 \001(\004\"Q\n%TTowerDefenseProGetQ"
    "uickHangRewardRsp\022(\n\rArrHangReward\030\001 \003(\013"
    "2\021.pb.TCommonReward\"K\n\037TTowerDefenseProS"
    "etFormationReq\022(\n\014ArrFormation\030\001 \003(\0132\022.p"
    "b.TUnitFormation\"_\n\033TTowerDefenseProDoBa"
    "ttleReq\022\017\n\007RoundId\030\001 \001(\r\022/\n\020BattleCheckP"
    "aram\030\002 \001(\0132\025.pb.TBattleCheckParam\"5\n\033TTo"
    "werDefenseProDoBattleRsp\022\026\n\016BattleArgsDa"
    "ta\030\001 \001(\014\"M\n\037TTowerDefenseProReportBattle"
    "Req\022\017\n\007RoundId\030\001 \001(\r\022\031\n\021BattleResultByte"
    "s\030\002 \001(\014\"_\n\037TTowerDefenseProReportBattleR"
    "sp\022$\n\tDropArray\030\001 \003(\0132\021.pb.TCommonReward"
    "\022\026\n\016BattleArgsData\030\002 \001(\014\"k\n\035TTowerDefens"
    "eProRoundRankInfo\022%\n\010UserInfo\030\001 \001(\0132\023.pb"
    ".TUserSimpleInfo\022\017\n\007RoundId\030\002 \001(\r\022\022\n\nUpd"
    "ateTime\030\003 \001(\004\"@\n\037TTowerDefenseProGetRoun"
    "dRankReq\022\016\n\006Offset\030\001 \001(\r\022\r\n\005Limit\030\002 \001(\r\""
    "e\n\037TTowerDefenseProGetRoundRankRsp\0222\n\007Ra"
    "nkArr\030\001 \003(\0132!.pb.TTowerDefenseProRoundRa"
    "nkInfo\022\016\n\006MyRank\030\002 \001(\005", 1582);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/TowerDefensePro.proto", &protobuf_RegisterTypes);
  TTowerDefenseProSimpleInfo::default_instance_ = new TTowerDefenseProSimpleInfo();
  TTowerDefenseProGetSimpleInfoRsp::default_instance_ = new TTowerDefenseProGetSimpleInfoRsp();
  TTowerDefenseProGetInfoRsp::default_instance_ = new TTowerDefenseProGetInfoRsp();
  TTowerDefenseProSetPlotEndRsp::default_instance_ = new TTowerDefenseProSetPlotEndRsp();
  TTowerDefenseProGetHangRewardReq::default_instance_ = new TTowerDefenseProGetHangRewardReq();
  TTowerDefenseProGetHangRewardRsp::default_instance_ = new TTowerDefenseProGetHangRewardRsp();
  TTowerDefenseProGetQuickHangRewardRsp::default_instance_ = new TTowerDefenseProGetQuickHangRewardRsp();
  TTowerDefenseProSetFormationReq::default_instance_ = new TTowerDefenseProSetFormationReq();
  TTowerDefenseProDoBattleReq::default_instance_ = new TTowerDefenseProDoBattleReq();
  TTowerDefenseProDoBattleRsp::default_instance_ = new TTowerDefenseProDoBattleRsp();
  TTowerDefenseProReportBattleReq::default_instance_ = new TTowerDefenseProReportBattleReq();
  TTowerDefenseProReportBattleRsp::default_instance_ = new TTowerDefenseProReportBattleRsp();
  TTowerDefenseProRoundRankInfo::default_instance_ = new TTowerDefenseProRoundRankInfo();
  TTowerDefenseProGetRoundRankReq::default_instance_ = new TTowerDefenseProGetRoundRankReq();
  TTowerDefenseProGetRoundRankRsp::default_instance_ = new TTowerDefenseProGetRoundRankRsp();
  TTowerDefenseProSimpleInfo::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProGetSimpleInfoRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProSetPlotEndRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProGetHangRewardReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProGetHangRewardRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProGetQuickHangRewardRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProSetFormationReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProDoBattleReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProDoBattleRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProReportBattleReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProReportBattleRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProRoundRankInfo::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProGetRoundRankReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseProGetRoundRankRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fTowerDefensePro_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fTowerDefensePro_2eproto {
  StaticDescriptorInitializer_net_2fTowerDefensePro_2eproto() {
    protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  }
} static_descriptor_initializer_net_2fTowerDefensePro_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProSimpleInfo::kCurRoundIdFieldNumber;
const int TTowerDefenseProSimpleInfo::kMaxRoundIdFieldNumber;
const int TTowerDefenseProSimpleInfo::kPlotEndTimeFieldNumber;
const int TTowerDefenseProSimpleInfo::kHangBeginTimeFieldNumber;
const int TTowerDefenseProSimpleInfo::kReceiveTimeFieldNumber;
const int TTowerDefenseProSimpleInfo::kSettleTimeFieldNumber;
const int TTowerDefenseProSimpleInfo::kHangDurationFieldNumber;
const int TTowerDefenseProSimpleInfo::kQuickNumFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProSimpleInfo::TTowerDefenseProSimpleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProSimpleInfo)
}

void TTowerDefenseProSimpleInfo::InitAsDefaultInstance() {
}

TTowerDefenseProSimpleInfo::TTowerDefenseProSimpleInfo(const TTowerDefenseProSimpleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProSimpleInfo)
}

void TTowerDefenseProSimpleInfo::SharedCtor() {
  _cached_size_ = 0;
  curroundid_ = 0u;
  maxroundid_ = 0u;
  plotendtime_ = GOOGLE_ULONGLONG(0);
  hangbegintime_ = GOOGLE_ULONGLONG(0);
  receivetime_ = GOOGLE_ULONGLONG(0);
  settletime_ = GOOGLE_ULONGLONG(0);
  hangduration_ = GOOGLE_ULONGLONG(0);
  quicknum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProSimpleInfo::~TTowerDefenseProSimpleInfo() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProSimpleInfo)
  SharedDtor();
}

void TTowerDefenseProSimpleInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseProSimpleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProSimpleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProSimpleInfo_descriptor_;
}

const TTowerDefenseProSimpleInfo& TTowerDefenseProSimpleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProSimpleInfo* TTowerDefenseProSimpleInfo::default_instance_ = NULL;

TTowerDefenseProSimpleInfo* TTowerDefenseProSimpleInfo::New() const {
  return new TTowerDefenseProSimpleInfo;
}

void TTowerDefenseProSimpleInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseProSimpleInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(curroundid_, quicknum_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProSimpleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProSimpleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CurRoundId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curroundid_)));
          set_has_curroundid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MaxRoundId;
        break;
      }

      // optional uint32 MaxRoundId = 2;
      case 2: {
        if (tag == 16) {
         parse_MaxRoundId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxroundid_)));
          set_has_maxroundid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PlotEndTime;
        break;
      }

      // optional uint64 PlotEndTime = 3;
      case 3: {
        if (tag == 24) {
         parse_PlotEndTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &plotendtime_)));
          set_has_plotendtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_HangBeginTime;
        break;
      }

      // optional uint64 HangBeginTime = 4;
      case 4: {
        if (tag == 32) {
         parse_HangBeginTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hangbegintime_)));
          set_has_hangbegintime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ReceiveTime;
        break;
      }

      // optional uint64 ReceiveTime = 5;
      case 5: {
        if (tag == 40) {
         parse_ReceiveTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &receivetime_)));
          set_has_receivetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_SettleTime;
        break;
      }

      // optional uint64 SettleTime = 6;
      case 6: {
        if (tag == 48) {
         parse_SettleTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &settletime_)));
          set_has_settletime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_HangDuration;
        break;
      }

      // optional uint64 HangDuration = 7;
      case 7: {
        if (tag == 56) {
         parse_HangDuration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hangduration_)));
          set_has_hangduration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_QuickNum;
        break;
      }

      // optional uint32 QuickNum = 8;
      case 8: {
        if (tag == 64) {
         parse_QuickNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quicknum_)));
          set_has_quicknum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProSimpleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProSimpleInfo)
  return false;
#undef DO_
}

void TTowerDefenseProSimpleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProSimpleInfo)
  // optional uint32 CurRoundId = 1;
  if (has_curroundid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->curroundid(), output);
  }

  // optional uint32 MaxRoundId = 2;
  if (has_maxroundid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxroundid(), output);
  }

  // optional uint64 PlotEndTime = 3;
  if (has_plotendtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->plotendtime(), output);
  }

  // optional uint64 HangBeginTime = 4;
  if (has_hangbegintime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->hangbegintime(), output);
  }

  // optional uint64 ReceiveTime = 5;
  if (has_receivetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->receivetime(), output);
  }

  // optional uint64 SettleTime = 6;
  if (has_settletime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->settletime(), output);
  }

  // optional uint64 HangDuration = 7;
  if (has_hangduration()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->hangduration(), output);
  }

  // optional uint32 QuickNum = 8;
  if (has_quicknum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->quicknum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProSimpleInfo)
}

::google::protobuf::uint8* TTowerDefenseProSimpleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProSimpleInfo)
  // optional uint32 CurRoundId = 1;
  if (has_curroundid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->curroundid(), target);
  }

  // optional uint32 MaxRoundId = 2;
  if (has_maxroundid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxroundid(), target);
  }

  // optional uint64 PlotEndTime = 3;
  if (has_plotendtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->plotendtime(), target);
  }

  // optional uint64 HangBeginTime = 4;
  if (has_hangbegintime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->hangbegintime(), target);
  }

  // optional uint64 ReceiveTime = 5;
  if (has_receivetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->receivetime(), target);
  }

  // optional uint64 SettleTime = 6;
  if (has_settletime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->settletime(), target);
  }

  // optional uint64 HangDuration = 7;
  if (has_hangduration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->hangduration(), target);
  }

  // optional uint32 QuickNum = 8;
  if (has_quicknum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->quicknum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProSimpleInfo)
  return target;
}

int TTowerDefenseProSimpleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 CurRoundId = 1;
    if (has_curroundid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->curroundid());
    }

    // optional uint32 MaxRoundId = 2;
    if (has_maxroundid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxroundid());
    }

    // optional uint64 PlotEndTime = 3;
    if (has_plotendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->plotendtime());
    }

    // optional uint64 HangBeginTime = 4;
    if (has_hangbegintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->hangbegintime());
    }

    // optional uint64 ReceiveTime = 5;
    if (has_receivetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->receivetime());
    }

    // optional uint64 SettleTime = 6;
    if (has_settletime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->settletime());
    }

    // optional uint64 HangDuration = 7;
    if (has_hangduration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->hangduration());
    }

    // optional uint32 QuickNum = 8;
    if (has_quicknum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quicknum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProSimpleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProSimpleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProSimpleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProSimpleInfo::MergeFrom(const TTowerDefenseProSimpleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_curroundid()) {
      set_curroundid(from.curroundid());
    }
    if (from.has_maxroundid()) {
      set_maxroundid(from.maxroundid());
    }
    if (from.has_plotendtime()) {
      set_plotendtime(from.plotendtime());
    }
    if (from.has_hangbegintime()) {
      set_hangbegintime(from.hangbegintime());
    }
    if (from.has_receivetime()) {
      set_receivetime(from.receivetime());
    }
    if (from.has_settletime()) {
      set_settletime(from.settletime());
    }
    if (from.has_hangduration()) {
      set_hangduration(from.hangduration());
    }
    if (from.has_quicknum()) {
      set_quicknum(from.quicknum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProSimpleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProSimpleInfo::CopyFrom(const TTowerDefenseProSimpleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProSimpleInfo::IsInitialized() const {

  return true;
}

void TTowerDefenseProSimpleInfo::Swap(TTowerDefenseProSimpleInfo* other) {
  if (other != this) {
    std::swap(curroundid_, other->curroundid_);
    std::swap(maxroundid_, other->maxroundid_);
    std::swap(plotendtime_, other->plotendtime_);
    std::swap(hangbegintime_, other->hangbegintime_);
    std::swap(receivetime_, other->receivetime_);
    std::swap(settletime_, other->settletime_);
    std::swap(hangduration_, other->hangduration_);
    std::swap(quicknum_, other->quicknum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProSimpleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProSimpleInfo_descriptor_;
  metadata.reflection = TTowerDefenseProSimpleInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProGetSimpleInfoRsp::kSimpleInfoFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProGetSimpleInfoRsp::TTowerDefenseProGetSimpleInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProGetSimpleInfoRsp)
}

void TTowerDefenseProGetSimpleInfoRsp::InitAsDefaultInstance() {
  simpleinfo_ = const_cast< ::pb::TTowerDefenseProSimpleInfo*>(&::pb::TTowerDefenseProSimpleInfo::default_instance());
}

TTowerDefenseProGetSimpleInfoRsp::TTowerDefenseProGetSimpleInfoRsp(const TTowerDefenseProGetSimpleInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProGetSimpleInfoRsp)
}

void TTowerDefenseProGetSimpleInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  simpleinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProGetSimpleInfoRsp::~TTowerDefenseProGetSimpleInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProGetSimpleInfoRsp)
  SharedDtor();
}

void TTowerDefenseProGetSimpleInfoRsp::SharedDtor() {
  if (this != default_instance_) {
    delete simpleinfo_;
  }
}

void TTowerDefenseProGetSimpleInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProGetSimpleInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProGetSimpleInfoRsp_descriptor_;
}

const TTowerDefenseProGetSimpleInfoRsp& TTowerDefenseProGetSimpleInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProGetSimpleInfoRsp* TTowerDefenseProGetSimpleInfoRsp::default_instance_ = NULL;

TTowerDefenseProGetSimpleInfoRsp* TTowerDefenseProGetSimpleInfoRsp::New() const {
  return new TTowerDefenseProGetSimpleInfoRsp;
}

void TTowerDefenseProGetSimpleInfoRsp::Clear() {
  if (has_simpleinfo()) {
    if (simpleinfo_ != NULL) simpleinfo_->::pb::TTowerDefenseProSimpleInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProGetSimpleInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProGetSimpleInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TTowerDefenseProSimpleInfo SimpleInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_simpleinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProGetSimpleInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProGetSimpleInfoRsp)
  return false;
#undef DO_
}

void TTowerDefenseProGetSimpleInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProGetSimpleInfoRsp)
  // optional .pb.TTowerDefenseProSimpleInfo SimpleInfo = 1;
  if (has_simpleinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->simpleinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProGetSimpleInfoRsp)
}

::google::protobuf::uint8* TTowerDefenseProGetSimpleInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProGetSimpleInfoRsp)
  // optional .pb.TTowerDefenseProSimpleInfo SimpleInfo = 1;
  if (has_simpleinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->simpleinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProGetSimpleInfoRsp)
  return target;
}

int TTowerDefenseProGetSimpleInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TTowerDefenseProSimpleInfo SimpleInfo = 1;
    if (has_simpleinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->simpleinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProGetSimpleInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProGetSimpleInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProGetSimpleInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProGetSimpleInfoRsp::MergeFrom(const TTowerDefenseProGetSimpleInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_simpleinfo()) {
      mutable_simpleinfo()->::pb::TTowerDefenseProSimpleInfo::MergeFrom(from.simpleinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProGetSimpleInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProGetSimpleInfoRsp::CopyFrom(const TTowerDefenseProGetSimpleInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProGetSimpleInfoRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseProGetSimpleInfoRsp::Swap(TTowerDefenseProGetSimpleInfoRsp* other) {
  if (other != this) {
    std::swap(simpleinfo_, other->simpleinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProGetSimpleInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProGetSimpleInfoRsp_descriptor_;
  metadata.reflection = TTowerDefenseProGetSimpleInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProGetInfoRsp::kSimpleInfoFieldNumber;
const int TTowerDefenseProGetInfoRsp::kWaveNumFieldNumber;
const int TTowerDefenseProGetInfoRsp::kBattleArgsDataFieldNumber;
const int TTowerDefenseProGetInfoRsp::kArrHangRewardFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProGetInfoRsp::TTowerDefenseProGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProGetInfoRsp)
}

void TTowerDefenseProGetInfoRsp::InitAsDefaultInstance() {
  simpleinfo_ = const_cast< ::pb::TTowerDefenseProSimpleInfo*>(&::pb::TTowerDefenseProSimpleInfo::default_instance());
}

TTowerDefenseProGetInfoRsp::TTowerDefenseProGetInfoRsp(const TTowerDefenseProGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProGetInfoRsp)
}

void TTowerDefenseProGetInfoRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  simpleinfo_ = NULL;
  wavenum_ = 0u;
  battleargsdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProGetInfoRsp::~TTowerDefenseProGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProGetInfoRsp)
  SharedDtor();
}

void TTowerDefenseProGetInfoRsp::SharedDtor() {
  if (battleargsdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleargsdata_;
  }
  if (this != default_instance_) {
    delete simpleinfo_;
  }
}

void TTowerDefenseProGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProGetInfoRsp_descriptor_;
}

const TTowerDefenseProGetInfoRsp& TTowerDefenseProGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProGetInfoRsp* TTowerDefenseProGetInfoRsp::default_instance_ = NULL;

TTowerDefenseProGetInfoRsp* TTowerDefenseProGetInfoRsp::New() const {
  return new TTowerDefenseProGetInfoRsp;
}

void TTowerDefenseProGetInfoRsp::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_simpleinfo()) {
      if (simpleinfo_ != NULL) simpleinfo_->::pb::TTowerDefenseProSimpleInfo::Clear();
    }
    wavenum_ = 0u;
    if (has_battleargsdata()) {
      if (battleargsdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        battleargsdata_->clear();
      }
    }
  }
  arrhangreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TTowerDefenseProSimpleInfo SimpleInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_simpleinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_WaveNum;
        break;
      }

      // optional uint32 WaveNum = 2;
      case 2: {
        if (tag == 16) {
         parse_WaveNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wavenum_)));
          set_has_wavenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BattleArgsData;
        break;
      }

      // optional bytes BattleArgsData = 3;
      case 3: {
        if (tag == 26) {
         parse_BattleArgsData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_battleargsdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrHangReward;
        break;
      }

      // repeated .pb.TCommonReward ArrHangReward = 4;
      case 4: {
        if (tag == 34) {
         parse_ArrHangReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrhangreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrHangReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProGetInfoRsp)
  return false;
#undef DO_
}

void TTowerDefenseProGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProGetInfoRsp)
  // optional .pb.TTowerDefenseProSimpleInfo SimpleInfo = 1;
  if (has_simpleinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->simpleinfo(), output);
  }

  // optional uint32 WaveNum = 2;
  if (has_wavenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->wavenum(), output);
  }

  // optional bytes BattleArgsData = 3;
  if (has_battleargsdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->battleargsdata(), output);
  }

  // repeated .pb.TCommonReward ArrHangReward = 4;
  for (int i = 0; i < this->arrhangreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->arrhangreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProGetInfoRsp)
}

::google::protobuf::uint8* TTowerDefenseProGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProGetInfoRsp)
  // optional .pb.TTowerDefenseProSimpleInfo SimpleInfo = 1;
  if (has_simpleinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->simpleinfo(), target);
  }

  // optional uint32 WaveNum = 2;
  if (has_wavenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->wavenum(), target);
  }

  // optional bytes BattleArgsData = 3;
  if (has_battleargsdata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->battleargsdata(), target);
  }

  // repeated .pb.TCommonReward ArrHangReward = 4;
  for (int i = 0; i < this->arrhangreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->arrhangreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProGetInfoRsp)
  return target;
}

int TTowerDefenseProGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TTowerDefenseProSimpleInfo SimpleInfo = 1;
    if (has_simpleinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->simpleinfo());
    }

    // optional uint32 WaveNum = 2;
    if (has_wavenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wavenum());
    }

    // optional bytes BattleArgsData = 3;
    if (has_battleargsdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->battleargsdata());
    }

  }
  // repeated .pb.TCommonReward ArrHangReward = 4;
  total_size += 1 * this->arrhangreward_size();
  for (int i = 0; i < this->arrhangreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrhangreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProGetInfoRsp::MergeFrom(const TTowerDefenseProGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrhangreward_.MergeFrom(from.arrhangreward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_simpleinfo()) {
      mutable_simpleinfo()->::pb::TTowerDefenseProSimpleInfo::MergeFrom(from.simpleinfo());
    }
    if (from.has_wavenum()) {
      set_wavenum(from.wavenum());
    }
    if (from.has_battleargsdata()) {
      set_battleargsdata(from.battleargsdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProGetInfoRsp::CopyFrom(const TTowerDefenseProGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProGetInfoRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseProGetInfoRsp::Swap(TTowerDefenseProGetInfoRsp* other) {
  if (other != this) {
    std::swap(simpleinfo_, other->simpleinfo_);
    std::swap(wavenum_, other->wavenum_);
    std::swap(battleargsdata_, other->battleargsdata_);
    arrhangreward_.Swap(&other->arrhangreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProGetInfoRsp_descriptor_;
  metadata.reflection = TTowerDefenseProGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProSetPlotEndRsp::kBattleArgsDataFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProSetPlotEndRsp::TTowerDefenseProSetPlotEndRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProSetPlotEndRsp)
}

void TTowerDefenseProSetPlotEndRsp::InitAsDefaultInstance() {
}

TTowerDefenseProSetPlotEndRsp::TTowerDefenseProSetPlotEndRsp(const TTowerDefenseProSetPlotEndRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProSetPlotEndRsp)
}

void TTowerDefenseProSetPlotEndRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  battleargsdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProSetPlotEndRsp::~TTowerDefenseProSetPlotEndRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProSetPlotEndRsp)
  SharedDtor();
}

void TTowerDefenseProSetPlotEndRsp::SharedDtor() {
  if (battleargsdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleargsdata_;
  }
  if (this != default_instance_) {
  }
}

void TTowerDefenseProSetPlotEndRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProSetPlotEndRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProSetPlotEndRsp_descriptor_;
}

const TTowerDefenseProSetPlotEndRsp& TTowerDefenseProSetPlotEndRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProSetPlotEndRsp* TTowerDefenseProSetPlotEndRsp::default_instance_ = NULL;

TTowerDefenseProSetPlotEndRsp* TTowerDefenseProSetPlotEndRsp::New() const {
  return new TTowerDefenseProSetPlotEndRsp;
}

void TTowerDefenseProSetPlotEndRsp::Clear() {
  if (has_battleargsdata()) {
    if (battleargsdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      battleargsdata_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProSetPlotEndRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProSetPlotEndRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes BattleArgsData = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_battleargsdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProSetPlotEndRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProSetPlotEndRsp)
  return false;
#undef DO_
}

void TTowerDefenseProSetPlotEndRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProSetPlotEndRsp)
  // optional bytes BattleArgsData = 1;
  if (has_battleargsdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->battleargsdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProSetPlotEndRsp)
}

::google::protobuf::uint8* TTowerDefenseProSetPlotEndRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProSetPlotEndRsp)
  // optional bytes BattleArgsData = 1;
  if (has_battleargsdata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->battleargsdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProSetPlotEndRsp)
  return target;
}

int TTowerDefenseProSetPlotEndRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes BattleArgsData = 1;
    if (has_battleargsdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->battleargsdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProSetPlotEndRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProSetPlotEndRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProSetPlotEndRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProSetPlotEndRsp::MergeFrom(const TTowerDefenseProSetPlotEndRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_battleargsdata()) {
      set_battleargsdata(from.battleargsdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProSetPlotEndRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProSetPlotEndRsp::CopyFrom(const TTowerDefenseProSetPlotEndRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProSetPlotEndRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseProSetPlotEndRsp::Swap(TTowerDefenseProSetPlotEndRsp* other) {
  if (other != this) {
    std::swap(battleargsdata_, other->battleargsdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProSetPlotEndRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProSetPlotEndRsp_descriptor_;
  metadata.reflection = TTowerDefenseProSetPlotEndRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProGetHangRewardReq::kIsPreviewFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProGetHangRewardReq::TTowerDefenseProGetHangRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProGetHangRewardReq)
}

void TTowerDefenseProGetHangRewardReq::InitAsDefaultInstance() {
}

TTowerDefenseProGetHangRewardReq::TTowerDefenseProGetHangRewardReq(const TTowerDefenseProGetHangRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProGetHangRewardReq)
}

void TTowerDefenseProGetHangRewardReq::SharedCtor() {
  _cached_size_ = 0;
  ispreview_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProGetHangRewardReq::~TTowerDefenseProGetHangRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProGetHangRewardReq)
  SharedDtor();
}

void TTowerDefenseProGetHangRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseProGetHangRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProGetHangRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProGetHangRewardReq_descriptor_;
}

const TTowerDefenseProGetHangRewardReq& TTowerDefenseProGetHangRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProGetHangRewardReq* TTowerDefenseProGetHangRewardReq::default_instance_ = NULL;

TTowerDefenseProGetHangRewardReq* TTowerDefenseProGetHangRewardReq::New() const {
  return new TTowerDefenseProGetHangRewardReq;
}

void TTowerDefenseProGetHangRewardReq::Clear() {
  ispreview_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProGetHangRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProGetHangRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool IsPreview = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispreview_)));
          set_has_ispreview();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProGetHangRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProGetHangRewardReq)
  return false;
#undef DO_
}

void TTowerDefenseProGetHangRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProGetHangRewardReq)
  // optional bool IsPreview = 1;
  if (has_ispreview()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ispreview(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProGetHangRewardReq)
}

::google::protobuf::uint8* TTowerDefenseProGetHangRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProGetHangRewardReq)
  // optional bool IsPreview = 1;
  if (has_ispreview()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ispreview(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProGetHangRewardReq)
  return target;
}

int TTowerDefenseProGetHangRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool IsPreview = 1;
    if (has_ispreview()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProGetHangRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProGetHangRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProGetHangRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProGetHangRewardReq::MergeFrom(const TTowerDefenseProGetHangRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ispreview()) {
      set_ispreview(from.ispreview());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProGetHangRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProGetHangRewardReq::CopyFrom(const TTowerDefenseProGetHangRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProGetHangRewardReq::IsInitialized() const {

  return true;
}

void TTowerDefenseProGetHangRewardReq::Swap(TTowerDefenseProGetHangRewardReq* other) {
  if (other != this) {
    std::swap(ispreview_, other->ispreview_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProGetHangRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProGetHangRewardReq_descriptor_;
  metadata.reflection = TTowerDefenseProGetHangRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProGetHangRewardRsp::kHangBeginTimeFieldNumber;
const int TTowerDefenseProGetHangRewardRsp::kReceiveTimeFieldNumber;
const int TTowerDefenseProGetHangRewardRsp::kArrHangRewardFieldNumber;
const int TTowerDefenseProGetHangRewardRsp::kSettleTimeFieldNumber;
const int TTowerDefenseProGetHangRewardRsp::kHangDurationFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProGetHangRewardRsp::TTowerDefenseProGetHangRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProGetHangRewardRsp)
}

void TTowerDefenseProGetHangRewardRsp::InitAsDefaultInstance() {
}

TTowerDefenseProGetHangRewardRsp::TTowerDefenseProGetHangRewardRsp(const TTowerDefenseProGetHangRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProGetHangRewardRsp)
}

void TTowerDefenseProGetHangRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  hangbegintime_ = GOOGLE_ULONGLONG(0);
  receivetime_ = GOOGLE_ULONGLONG(0);
  settletime_ = GOOGLE_ULONGLONG(0);
  hangduration_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProGetHangRewardRsp::~TTowerDefenseProGetHangRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProGetHangRewardRsp)
  SharedDtor();
}

void TTowerDefenseProGetHangRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseProGetHangRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProGetHangRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProGetHangRewardRsp_descriptor_;
}

const TTowerDefenseProGetHangRewardRsp& TTowerDefenseProGetHangRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProGetHangRewardRsp* TTowerDefenseProGetHangRewardRsp::default_instance_ = NULL;

TTowerDefenseProGetHangRewardRsp* TTowerDefenseProGetHangRewardRsp::New() const {
  return new TTowerDefenseProGetHangRewardRsp;
}

void TTowerDefenseProGetHangRewardRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseProGetHangRewardRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(hangbegintime_, receivetime_);
  ZR_(settletime_, hangduration_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrhangreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProGetHangRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProGetHangRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 HangBeginTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hangbegintime_)));
          set_has_hangbegintime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ReceiveTime;
        break;
      }

      // optional uint64 ReceiveTime = 2;
      case 2: {
        if (tag == 16) {
         parse_ReceiveTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &receivetime_)));
          set_has_receivetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrHangReward;
        break;
      }

      // repeated .pb.TCommonReward ArrHangReward = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrHangReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrhangreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrHangReward;
        if (input->ExpectTag(32)) goto parse_SettleTime;
        break;
      }

      // optional uint64 SettleTime = 4;
      case 4: {
        if (tag == 32) {
         parse_SettleTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &settletime_)));
          set_has_settletime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_HangDuration;
        break;
      }

      // optional uint64 HangDuration = 5;
      case 5: {
        if (tag == 40) {
         parse_HangDuration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hangduration_)));
          set_has_hangduration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProGetHangRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProGetHangRewardRsp)
  return false;
#undef DO_
}

void TTowerDefenseProGetHangRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProGetHangRewardRsp)
  // optional uint64 HangBeginTime = 1;
  if (has_hangbegintime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->hangbegintime(), output);
  }

  // optional uint64 ReceiveTime = 2;
  if (has_receivetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->receivetime(), output);
  }

  // repeated .pb.TCommonReward ArrHangReward = 3;
  for (int i = 0; i < this->arrhangreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arrhangreward(i), output);
  }

  // optional uint64 SettleTime = 4;
  if (has_settletime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->settletime(), output);
  }

  // optional uint64 HangDuration = 5;
  if (has_hangduration()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->hangduration(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProGetHangRewardRsp)
}

::google::protobuf::uint8* TTowerDefenseProGetHangRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProGetHangRewardRsp)
  // optional uint64 HangBeginTime = 1;
  if (has_hangbegintime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->hangbegintime(), target);
  }

  // optional uint64 ReceiveTime = 2;
  if (has_receivetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->receivetime(), target);
  }

  // repeated .pb.TCommonReward ArrHangReward = 3;
  for (int i = 0; i < this->arrhangreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arrhangreward(i), target);
  }

  // optional uint64 SettleTime = 4;
  if (has_settletime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->settletime(), target);
  }

  // optional uint64 HangDuration = 5;
  if (has_hangduration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->hangduration(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProGetHangRewardRsp)
  return target;
}

int TTowerDefenseProGetHangRewardRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 HangBeginTime = 1;
    if (has_hangbegintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->hangbegintime());
    }

    // optional uint64 ReceiveTime = 2;
    if (has_receivetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->receivetime());
    }

    // optional uint64 SettleTime = 4;
    if (has_settletime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->settletime());
    }

    // optional uint64 HangDuration = 5;
    if (has_hangduration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->hangduration());
    }

  }
  // repeated .pb.TCommonReward ArrHangReward = 3;
  total_size += 1 * this->arrhangreward_size();
  for (int i = 0; i < this->arrhangreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrhangreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProGetHangRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProGetHangRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProGetHangRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProGetHangRewardRsp::MergeFrom(const TTowerDefenseProGetHangRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrhangreward_.MergeFrom(from.arrhangreward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hangbegintime()) {
      set_hangbegintime(from.hangbegintime());
    }
    if (from.has_receivetime()) {
      set_receivetime(from.receivetime());
    }
    if (from.has_settletime()) {
      set_settletime(from.settletime());
    }
    if (from.has_hangduration()) {
      set_hangduration(from.hangduration());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProGetHangRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProGetHangRewardRsp::CopyFrom(const TTowerDefenseProGetHangRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProGetHangRewardRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseProGetHangRewardRsp::Swap(TTowerDefenseProGetHangRewardRsp* other) {
  if (other != this) {
    std::swap(hangbegintime_, other->hangbegintime_);
    std::swap(receivetime_, other->receivetime_);
    arrhangreward_.Swap(&other->arrhangreward_);
    std::swap(settletime_, other->settletime_);
    std::swap(hangduration_, other->hangduration_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProGetHangRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProGetHangRewardRsp_descriptor_;
  metadata.reflection = TTowerDefenseProGetHangRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProGetQuickHangRewardRsp::kArrHangRewardFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProGetQuickHangRewardRsp::TTowerDefenseProGetQuickHangRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProGetQuickHangRewardRsp)
}

void TTowerDefenseProGetQuickHangRewardRsp::InitAsDefaultInstance() {
}

TTowerDefenseProGetQuickHangRewardRsp::TTowerDefenseProGetQuickHangRewardRsp(const TTowerDefenseProGetQuickHangRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProGetQuickHangRewardRsp)
}

void TTowerDefenseProGetQuickHangRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProGetQuickHangRewardRsp::~TTowerDefenseProGetQuickHangRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProGetQuickHangRewardRsp)
  SharedDtor();
}

void TTowerDefenseProGetQuickHangRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseProGetQuickHangRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProGetQuickHangRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProGetQuickHangRewardRsp_descriptor_;
}

const TTowerDefenseProGetQuickHangRewardRsp& TTowerDefenseProGetQuickHangRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProGetQuickHangRewardRsp* TTowerDefenseProGetQuickHangRewardRsp::default_instance_ = NULL;

TTowerDefenseProGetQuickHangRewardRsp* TTowerDefenseProGetQuickHangRewardRsp::New() const {
  return new TTowerDefenseProGetQuickHangRewardRsp;
}

void TTowerDefenseProGetQuickHangRewardRsp::Clear() {
  arrhangreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProGetQuickHangRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProGetQuickHangRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrHangReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrHangReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrhangreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrHangReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProGetQuickHangRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProGetQuickHangRewardRsp)
  return false;
#undef DO_
}

void TTowerDefenseProGetQuickHangRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProGetQuickHangRewardRsp)
  // repeated .pb.TCommonReward ArrHangReward = 1;
  for (int i = 0; i < this->arrhangreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrhangreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProGetQuickHangRewardRsp)
}

::google::protobuf::uint8* TTowerDefenseProGetQuickHangRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProGetQuickHangRewardRsp)
  // repeated .pb.TCommonReward ArrHangReward = 1;
  for (int i = 0; i < this->arrhangreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrhangreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProGetQuickHangRewardRsp)
  return target;
}

int TTowerDefenseProGetQuickHangRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrHangReward = 1;
  total_size += 1 * this->arrhangreward_size();
  for (int i = 0; i < this->arrhangreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrhangreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProGetQuickHangRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProGetQuickHangRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProGetQuickHangRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProGetQuickHangRewardRsp::MergeFrom(const TTowerDefenseProGetQuickHangRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrhangreward_.MergeFrom(from.arrhangreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProGetQuickHangRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProGetQuickHangRewardRsp::CopyFrom(const TTowerDefenseProGetQuickHangRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProGetQuickHangRewardRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseProGetQuickHangRewardRsp::Swap(TTowerDefenseProGetQuickHangRewardRsp* other) {
  if (other != this) {
    arrhangreward_.Swap(&other->arrhangreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProGetQuickHangRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProGetQuickHangRewardRsp_descriptor_;
  metadata.reflection = TTowerDefenseProGetQuickHangRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProSetFormationReq::kArrFormationFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProSetFormationReq::TTowerDefenseProSetFormationReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProSetFormationReq)
}

void TTowerDefenseProSetFormationReq::InitAsDefaultInstance() {
}

TTowerDefenseProSetFormationReq::TTowerDefenseProSetFormationReq(const TTowerDefenseProSetFormationReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProSetFormationReq)
}

void TTowerDefenseProSetFormationReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProSetFormationReq::~TTowerDefenseProSetFormationReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProSetFormationReq)
  SharedDtor();
}

void TTowerDefenseProSetFormationReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseProSetFormationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProSetFormationReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProSetFormationReq_descriptor_;
}

const TTowerDefenseProSetFormationReq& TTowerDefenseProSetFormationReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProSetFormationReq* TTowerDefenseProSetFormationReq::default_instance_ = NULL;

TTowerDefenseProSetFormationReq* TTowerDefenseProSetFormationReq::New() const {
  return new TTowerDefenseProSetFormationReq;
}

void TTowerDefenseProSetFormationReq::Clear() {
  arrformation_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProSetFormationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProSetFormationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TUnitFormation ArrFormation = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrFormation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrformation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrFormation;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProSetFormationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProSetFormationReq)
  return false;
#undef DO_
}

void TTowerDefenseProSetFormationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProSetFormationReq)
  // repeated .pb.TUnitFormation ArrFormation = 1;
  for (int i = 0; i < this->arrformation_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrformation(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProSetFormationReq)
}

::google::protobuf::uint8* TTowerDefenseProSetFormationReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProSetFormationReq)
  // repeated .pb.TUnitFormation ArrFormation = 1;
  for (int i = 0; i < this->arrformation_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrformation(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProSetFormationReq)
  return target;
}

int TTowerDefenseProSetFormationReq::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TUnitFormation ArrFormation = 1;
  total_size += 1 * this->arrformation_size();
  for (int i = 0; i < this->arrformation_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrformation(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProSetFormationReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProSetFormationReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProSetFormationReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProSetFormationReq::MergeFrom(const TTowerDefenseProSetFormationReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrformation_.MergeFrom(from.arrformation_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProSetFormationReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProSetFormationReq::CopyFrom(const TTowerDefenseProSetFormationReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProSetFormationReq::IsInitialized() const {

  return true;
}

void TTowerDefenseProSetFormationReq::Swap(TTowerDefenseProSetFormationReq* other) {
  if (other != this) {
    arrformation_.Swap(&other->arrformation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProSetFormationReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProSetFormationReq_descriptor_;
  metadata.reflection = TTowerDefenseProSetFormationReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProDoBattleReq::kRoundIdFieldNumber;
const int TTowerDefenseProDoBattleReq::kBattleCheckParamFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProDoBattleReq::TTowerDefenseProDoBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProDoBattleReq)
}

void TTowerDefenseProDoBattleReq::InitAsDefaultInstance() {
  battlecheckparam_ = const_cast< ::pb::TBattleCheckParam*>(&::pb::TBattleCheckParam::default_instance());
}

TTowerDefenseProDoBattleReq::TTowerDefenseProDoBattleReq(const TTowerDefenseProDoBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProDoBattleReq)
}

void TTowerDefenseProDoBattleReq::SharedCtor() {
  _cached_size_ = 0;
  roundid_ = 0u;
  battlecheckparam_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProDoBattleReq::~TTowerDefenseProDoBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProDoBattleReq)
  SharedDtor();
}

void TTowerDefenseProDoBattleReq::SharedDtor() {
  if (this != default_instance_) {
    delete battlecheckparam_;
  }
}

void TTowerDefenseProDoBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProDoBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProDoBattleReq_descriptor_;
}

const TTowerDefenseProDoBattleReq& TTowerDefenseProDoBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProDoBattleReq* TTowerDefenseProDoBattleReq::default_instance_ = NULL;

TTowerDefenseProDoBattleReq* TTowerDefenseProDoBattleReq::New() const {
  return new TTowerDefenseProDoBattleReq;
}

void TTowerDefenseProDoBattleReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    roundid_ = 0u;
    if (has_battlecheckparam()) {
      if (battlecheckparam_ != NULL) battlecheckparam_->::pb::TBattleCheckParam::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProDoBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProDoBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RoundId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roundid_)));
          set_has_roundid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BattleCheckParam;
        break;
      }

      // optional .pb.TBattleCheckParam BattleCheckParam = 2;
      case 2: {
        if (tag == 18) {
         parse_BattleCheckParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battlecheckparam()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProDoBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProDoBattleReq)
  return false;
#undef DO_
}

void TTowerDefenseProDoBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProDoBattleReq)
  // optional uint32 RoundId = 1;
  if (has_roundid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roundid(), output);
  }

  // optional .pb.TBattleCheckParam BattleCheckParam = 2;
  if (has_battlecheckparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->battlecheckparam(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProDoBattleReq)
}

::google::protobuf::uint8* TTowerDefenseProDoBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProDoBattleReq)
  // optional uint32 RoundId = 1;
  if (has_roundid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roundid(), target);
  }

  // optional .pb.TBattleCheckParam BattleCheckParam = 2;
  if (has_battlecheckparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->battlecheckparam(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProDoBattleReq)
  return target;
}

int TTowerDefenseProDoBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RoundId = 1;
    if (has_roundid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roundid());
    }

    // optional .pb.TBattleCheckParam BattleCheckParam = 2;
    if (has_battlecheckparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battlecheckparam());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProDoBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProDoBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProDoBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProDoBattleReq::MergeFrom(const TTowerDefenseProDoBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roundid()) {
      set_roundid(from.roundid());
    }
    if (from.has_battlecheckparam()) {
      mutable_battlecheckparam()->::pb::TBattleCheckParam::MergeFrom(from.battlecheckparam());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProDoBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProDoBattleReq::CopyFrom(const TTowerDefenseProDoBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProDoBattleReq::IsInitialized() const {

  return true;
}

void TTowerDefenseProDoBattleReq::Swap(TTowerDefenseProDoBattleReq* other) {
  if (other != this) {
    std::swap(roundid_, other->roundid_);
    std::swap(battlecheckparam_, other->battlecheckparam_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProDoBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProDoBattleReq_descriptor_;
  metadata.reflection = TTowerDefenseProDoBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProDoBattleRsp::kBattleArgsDataFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProDoBattleRsp::TTowerDefenseProDoBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProDoBattleRsp)
}

void TTowerDefenseProDoBattleRsp::InitAsDefaultInstance() {
}

TTowerDefenseProDoBattleRsp::TTowerDefenseProDoBattleRsp(const TTowerDefenseProDoBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProDoBattleRsp)
}

void TTowerDefenseProDoBattleRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  battleargsdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProDoBattleRsp::~TTowerDefenseProDoBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProDoBattleRsp)
  SharedDtor();
}

void TTowerDefenseProDoBattleRsp::SharedDtor() {
  if (battleargsdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleargsdata_;
  }
  if (this != default_instance_) {
  }
}

void TTowerDefenseProDoBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProDoBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProDoBattleRsp_descriptor_;
}

const TTowerDefenseProDoBattleRsp& TTowerDefenseProDoBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProDoBattleRsp* TTowerDefenseProDoBattleRsp::default_instance_ = NULL;

TTowerDefenseProDoBattleRsp* TTowerDefenseProDoBattleRsp::New() const {
  return new TTowerDefenseProDoBattleRsp;
}

void TTowerDefenseProDoBattleRsp::Clear() {
  if (has_battleargsdata()) {
    if (battleargsdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      battleargsdata_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProDoBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProDoBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes BattleArgsData = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_battleargsdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProDoBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProDoBattleRsp)
  return false;
#undef DO_
}

void TTowerDefenseProDoBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProDoBattleRsp)
  // optional bytes BattleArgsData = 1;
  if (has_battleargsdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->battleargsdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProDoBattleRsp)
}

::google::protobuf::uint8* TTowerDefenseProDoBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProDoBattleRsp)
  // optional bytes BattleArgsData = 1;
  if (has_battleargsdata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->battleargsdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProDoBattleRsp)
  return target;
}

int TTowerDefenseProDoBattleRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes BattleArgsData = 1;
    if (has_battleargsdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->battleargsdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProDoBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProDoBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProDoBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProDoBattleRsp::MergeFrom(const TTowerDefenseProDoBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_battleargsdata()) {
      set_battleargsdata(from.battleargsdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProDoBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProDoBattleRsp::CopyFrom(const TTowerDefenseProDoBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProDoBattleRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseProDoBattleRsp::Swap(TTowerDefenseProDoBattleRsp* other) {
  if (other != this) {
    std::swap(battleargsdata_, other->battleargsdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProDoBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProDoBattleRsp_descriptor_;
  metadata.reflection = TTowerDefenseProDoBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProReportBattleReq::kRoundIdFieldNumber;
const int TTowerDefenseProReportBattleReq::kBattleResultBytesFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProReportBattleReq::TTowerDefenseProReportBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProReportBattleReq)
}

void TTowerDefenseProReportBattleReq::InitAsDefaultInstance() {
}

TTowerDefenseProReportBattleReq::TTowerDefenseProReportBattleReq(const TTowerDefenseProReportBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProReportBattleReq)
}

void TTowerDefenseProReportBattleReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roundid_ = 0u;
  battleresultbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProReportBattleReq::~TTowerDefenseProReportBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProReportBattleReq)
  SharedDtor();
}

void TTowerDefenseProReportBattleReq::SharedDtor() {
  if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleresultbytes_;
  }
  if (this != default_instance_) {
  }
}

void TTowerDefenseProReportBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProReportBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProReportBattleReq_descriptor_;
}

const TTowerDefenseProReportBattleReq& TTowerDefenseProReportBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProReportBattleReq* TTowerDefenseProReportBattleReq::default_instance_ = NULL;

TTowerDefenseProReportBattleReq* TTowerDefenseProReportBattleReq::New() const {
  return new TTowerDefenseProReportBattleReq;
}

void TTowerDefenseProReportBattleReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    roundid_ = 0u;
    if (has_battleresultbytes()) {
      if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        battleresultbytes_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProReportBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProReportBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RoundId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roundid_)));
          set_has_roundid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BattleResultBytes;
        break;
      }

      // optional bytes BattleResultBytes = 2;
      case 2: {
        if (tag == 18) {
         parse_BattleResultBytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_battleresultbytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProReportBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProReportBattleReq)
  return false;
#undef DO_
}

void TTowerDefenseProReportBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProReportBattleReq)
  // optional uint32 RoundId = 1;
  if (has_roundid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roundid(), output);
  }

  // optional bytes BattleResultBytes = 2;
  if (has_battleresultbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->battleresultbytes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProReportBattleReq)
}

::google::protobuf::uint8* TTowerDefenseProReportBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProReportBattleReq)
  // optional uint32 RoundId = 1;
  if (has_roundid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roundid(), target);
  }

  // optional bytes BattleResultBytes = 2;
  if (has_battleresultbytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->battleresultbytes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProReportBattleReq)
  return target;
}

int TTowerDefenseProReportBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RoundId = 1;
    if (has_roundid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roundid());
    }

    // optional bytes BattleResultBytes = 2;
    if (has_battleresultbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->battleresultbytes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProReportBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProReportBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProReportBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProReportBattleReq::MergeFrom(const TTowerDefenseProReportBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roundid()) {
      set_roundid(from.roundid());
    }
    if (from.has_battleresultbytes()) {
      set_battleresultbytes(from.battleresultbytes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProReportBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProReportBattleReq::CopyFrom(const TTowerDefenseProReportBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProReportBattleReq::IsInitialized() const {

  return true;
}

void TTowerDefenseProReportBattleReq::Swap(TTowerDefenseProReportBattleReq* other) {
  if (other != this) {
    std::swap(roundid_, other->roundid_);
    std::swap(battleresultbytes_, other->battleresultbytes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProReportBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProReportBattleReq_descriptor_;
  metadata.reflection = TTowerDefenseProReportBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProReportBattleRsp::kDropArrayFieldNumber;
const int TTowerDefenseProReportBattleRsp::kBattleArgsDataFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProReportBattleRsp::TTowerDefenseProReportBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProReportBattleRsp)
}

void TTowerDefenseProReportBattleRsp::InitAsDefaultInstance() {
}

TTowerDefenseProReportBattleRsp::TTowerDefenseProReportBattleRsp(const TTowerDefenseProReportBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProReportBattleRsp)
}

void TTowerDefenseProReportBattleRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  battleargsdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProReportBattleRsp::~TTowerDefenseProReportBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProReportBattleRsp)
  SharedDtor();
}

void TTowerDefenseProReportBattleRsp::SharedDtor() {
  if (battleargsdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleargsdata_;
  }
  if (this != default_instance_) {
  }
}

void TTowerDefenseProReportBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProReportBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProReportBattleRsp_descriptor_;
}

const TTowerDefenseProReportBattleRsp& TTowerDefenseProReportBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProReportBattleRsp* TTowerDefenseProReportBattleRsp::default_instance_ = NULL;

TTowerDefenseProReportBattleRsp* TTowerDefenseProReportBattleRsp::New() const {
  return new TTowerDefenseProReportBattleRsp;
}

void TTowerDefenseProReportBattleRsp::Clear() {
  if (has_battleargsdata()) {
    if (battleargsdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      battleargsdata_->clear();
    }
  }
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProReportBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProReportBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectTag(18)) goto parse_BattleArgsData;
        break;
      }

      // optional bytes BattleArgsData = 2;
      case 2: {
        if (tag == 18) {
         parse_BattleArgsData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_battleargsdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProReportBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProReportBattleRsp)
  return false;
#undef DO_
}

void TTowerDefenseProReportBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  // optional bytes BattleArgsData = 2;
  if (has_battleargsdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->battleargsdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProReportBattleRsp)
}

::google::protobuf::uint8* TTowerDefenseProReportBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  // optional bytes BattleArgsData = 2;
  if (has_battleargsdata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->battleargsdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProReportBattleRsp)
  return target;
}

int TTowerDefenseProReportBattleRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional bytes BattleArgsData = 2;
    if (has_battleargsdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->battleargsdata());
    }

  }
  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProReportBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProReportBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProReportBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProReportBattleRsp::MergeFrom(const TTowerDefenseProReportBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_battleargsdata()) {
      set_battleargsdata(from.battleargsdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProReportBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProReportBattleRsp::CopyFrom(const TTowerDefenseProReportBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProReportBattleRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseProReportBattleRsp::Swap(TTowerDefenseProReportBattleRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(battleargsdata_, other->battleargsdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProReportBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProReportBattleRsp_descriptor_;
  metadata.reflection = TTowerDefenseProReportBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProRoundRankInfo::kUserInfoFieldNumber;
const int TTowerDefenseProRoundRankInfo::kRoundIdFieldNumber;
const int TTowerDefenseProRoundRankInfo::kUpdateTimeFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProRoundRankInfo::TTowerDefenseProRoundRankInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProRoundRankInfo)
}

void TTowerDefenseProRoundRankInfo::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TTowerDefenseProRoundRankInfo::TTowerDefenseProRoundRankInfo(const TTowerDefenseProRoundRankInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProRoundRankInfo)
}

void TTowerDefenseProRoundRankInfo::SharedCtor() {
  _cached_size_ = 0;
  userinfo_ = NULL;
  roundid_ = 0u;
  updatetime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProRoundRankInfo::~TTowerDefenseProRoundRankInfo() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProRoundRankInfo)
  SharedDtor();
}

void TTowerDefenseProRoundRankInfo::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void TTowerDefenseProRoundRankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProRoundRankInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProRoundRankInfo_descriptor_;
}

const TTowerDefenseProRoundRankInfo& TTowerDefenseProRoundRankInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProRoundRankInfo* TTowerDefenseProRoundRankInfo::default_instance_ = NULL;

TTowerDefenseProRoundRankInfo* TTowerDefenseProRoundRankInfo::New() const {
  return new TTowerDefenseProRoundRankInfo;
}

void TTowerDefenseProRoundRankInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseProRoundRankInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(updatetime_, roundid_);
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProRoundRankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProRoundRankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TUserSimpleInfo UserInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoundId;
        break;
      }

      // optional uint32 RoundId = 2;
      case 2: {
        if (tag == 16) {
         parse_RoundId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roundid_)));
          set_has_roundid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_UpdateTime;
        break;
      }

      // optional uint64 UpdateTime = 3;
      case 3: {
        if (tag == 24) {
         parse_UpdateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updatetime_)));
          set_has_updatetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProRoundRankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProRoundRankInfo)
  return false;
#undef DO_
}

void TTowerDefenseProRoundRankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProRoundRankInfo)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(), output);
  }

  // optional uint32 RoundId = 2;
  if (has_roundid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->roundid(), output);
  }

  // optional uint64 UpdateTime = 3;
  if (has_updatetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->updatetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProRoundRankInfo)
}

::google::protobuf::uint8* TTowerDefenseProRoundRankInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProRoundRankInfo)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userinfo(), target);
  }

  // optional uint32 RoundId = 2;
  if (has_roundid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->roundid(), target);
  }

  // optional uint64 UpdateTime = 3;
  if (has_updatetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->updatetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProRoundRankInfo)
  return target;
}

int TTowerDefenseProRoundRankInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TUserSimpleInfo UserInfo = 1;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }

    // optional uint32 RoundId = 2;
    if (has_roundid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roundid());
    }

    // optional uint64 UpdateTime = 3;
    if (has_updatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->updatetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProRoundRankInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProRoundRankInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProRoundRankInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProRoundRankInfo::MergeFrom(const TTowerDefenseProRoundRankInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userinfo()) {
      mutable_userinfo()->::pb::TUserSimpleInfo::MergeFrom(from.userinfo());
    }
    if (from.has_roundid()) {
      set_roundid(from.roundid());
    }
    if (from.has_updatetime()) {
      set_updatetime(from.updatetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProRoundRankInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProRoundRankInfo::CopyFrom(const TTowerDefenseProRoundRankInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProRoundRankInfo::IsInitialized() const {

  return true;
}

void TTowerDefenseProRoundRankInfo::Swap(TTowerDefenseProRoundRankInfo* other) {
  if (other != this) {
    std::swap(userinfo_, other->userinfo_);
    std::swap(roundid_, other->roundid_);
    std::swap(updatetime_, other->updatetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProRoundRankInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProRoundRankInfo_descriptor_;
  metadata.reflection = TTowerDefenseProRoundRankInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProGetRoundRankReq::kOffsetFieldNumber;
const int TTowerDefenseProGetRoundRankReq::kLimitFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProGetRoundRankReq::TTowerDefenseProGetRoundRankReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProGetRoundRankReq)
}

void TTowerDefenseProGetRoundRankReq::InitAsDefaultInstance() {
}

TTowerDefenseProGetRoundRankReq::TTowerDefenseProGetRoundRankReq(const TTowerDefenseProGetRoundRankReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProGetRoundRankReq)
}

void TTowerDefenseProGetRoundRankReq::SharedCtor() {
  _cached_size_ = 0;
  offset_ = 0u;
  limit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProGetRoundRankReq::~TTowerDefenseProGetRoundRankReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProGetRoundRankReq)
  SharedDtor();
}

void TTowerDefenseProGetRoundRankReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseProGetRoundRankReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProGetRoundRankReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProGetRoundRankReq_descriptor_;
}

const TTowerDefenseProGetRoundRankReq& TTowerDefenseProGetRoundRankReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProGetRoundRankReq* TTowerDefenseProGetRoundRankReq::default_instance_ = NULL;

TTowerDefenseProGetRoundRankReq* TTowerDefenseProGetRoundRankReq::New() const {
  return new TTowerDefenseProGetRoundRankReq;
}

void TTowerDefenseProGetRoundRankReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseProGetRoundRankReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(offset_, limit_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProGetRoundRankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProGetRoundRankReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Offset = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Limit;
        break;
      }

      // optional uint32 Limit = 2;
      case 2: {
        if (tag == 16) {
         parse_Limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProGetRoundRankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProGetRoundRankReq)
  return false;
#undef DO_
}

void TTowerDefenseProGetRoundRankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProGetRoundRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->offset(), output);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProGetRoundRankReq)
}

::google::protobuf::uint8* TTowerDefenseProGetRoundRankReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProGetRoundRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->offset(), target);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProGetRoundRankReq)
  return target;
}

int TTowerDefenseProGetRoundRankReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Offset = 1;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 Limit = 2;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProGetRoundRankReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProGetRoundRankReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProGetRoundRankReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProGetRoundRankReq::MergeFrom(const TTowerDefenseProGetRoundRankReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProGetRoundRankReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProGetRoundRankReq::CopyFrom(const TTowerDefenseProGetRoundRankReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProGetRoundRankReq::IsInitialized() const {

  return true;
}

void TTowerDefenseProGetRoundRankReq::Swap(TTowerDefenseProGetRoundRankReq* other) {
  if (other != this) {
    std::swap(offset_, other->offset_);
    std::swap(limit_, other->limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProGetRoundRankReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProGetRoundRankReq_descriptor_;
  metadata.reflection = TTowerDefenseProGetRoundRankReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseProGetRoundRankRsp::kRankArrFieldNumber;
const int TTowerDefenseProGetRoundRankRsp::kMyRankFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseProGetRoundRankRsp::TTowerDefenseProGetRoundRankRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseProGetRoundRankRsp)
}

void TTowerDefenseProGetRoundRankRsp::InitAsDefaultInstance() {
}

TTowerDefenseProGetRoundRankRsp::TTowerDefenseProGetRoundRankRsp(const TTowerDefenseProGetRoundRankRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseProGetRoundRankRsp)
}

void TTowerDefenseProGetRoundRankRsp::SharedCtor() {
  _cached_size_ = 0;
  myrank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseProGetRoundRankRsp::~TTowerDefenseProGetRoundRankRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseProGetRoundRankRsp)
  SharedDtor();
}

void TTowerDefenseProGetRoundRankRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseProGetRoundRankRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseProGetRoundRankRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseProGetRoundRankRsp_descriptor_;
}

const TTowerDefenseProGetRoundRankRsp& TTowerDefenseProGetRoundRankRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefensePro_2eproto();
  return *default_instance_;
}

TTowerDefenseProGetRoundRankRsp* TTowerDefenseProGetRoundRankRsp::default_instance_ = NULL;

TTowerDefenseProGetRoundRankRsp* TTowerDefenseProGetRoundRankRsp::New() const {
  return new TTowerDefenseProGetRoundRankRsp;
}

void TTowerDefenseProGetRoundRankRsp::Clear() {
  myrank_ = 0;
  rankarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseProGetRoundRankRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseProGetRoundRankRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TTowerDefenseProRoundRankInfo RankArr = 1;
      case 1: {
        if (tag == 10) {
         parse_RankArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rankarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RankArr;
        if (input->ExpectTag(16)) goto parse_MyRank;
        break;
      }

      // optional int32 MyRank = 2;
      case 2: {
        if (tag == 16) {
         parse_MyRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myrank_)));
          set_has_myrank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseProGetRoundRankRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseProGetRoundRankRsp)
  return false;
#undef DO_
}

void TTowerDefenseProGetRoundRankRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseProGetRoundRankRsp)
  // repeated .pb.TTowerDefenseProRoundRankInfo RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rankarr(i), output);
  }

  // optional int32 MyRank = 2;
  if (has_myrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->myrank(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseProGetRoundRankRsp)
}

::google::protobuf::uint8* TTowerDefenseProGetRoundRankRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseProGetRoundRankRsp)
  // repeated .pb.TTowerDefenseProRoundRankInfo RankArr = 1;
  for (int i = 0; i < this->rankarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rankarr(i), target);
  }

  // optional int32 MyRank = 2;
  if (has_myrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->myrank(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseProGetRoundRankRsp)
  return target;
}

int TTowerDefenseProGetRoundRankRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 MyRank = 2;
    if (has_myrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->myrank());
    }

  }
  // repeated .pb.TTowerDefenseProRoundRankInfo RankArr = 1;
  total_size += 1 * this->rankarr_size();
  for (int i = 0; i < this->rankarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rankarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseProGetRoundRankRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseProGetRoundRankRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseProGetRoundRankRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseProGetRoundRankRsp::MergeFrom(const TTowerDefenseProGetRoundRankRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rankarr_.MergeFrom(from.rankarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_myrank()) {
      set_myrank(from.myrank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseProGetRoundRankRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseProGetRoundRankRsp::CopyFrom(const TTowerDefenseProGetRoundRankRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseProGetRoundRankRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseProGetRoundRankRsp::Swap(TTowerDefenseProGetRoundRankRsp* other) {
  if (other != this) {
    rankarr_.Swap(&other->rankarr_);
    std::swap(myrank_, other->myrank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseProGetRoundRankRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseProGetRoundRankRsp_descriptor_;
  metadata.reflection = TTowerDefenseProGetRoundRankRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
