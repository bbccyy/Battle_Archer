// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/SlgResource.proto

#ifndef PROTOBUF_net_2fSlgResource_2eproto__INCLUDED
#define PROTOBUF_net_2fSlgResource_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fSlgResource_2eproto();
void protobuf_AssignDesc_net_2fSlgResource_2eproto();
void protobuf_ShutdownFile_net_2fSlgResource_2eproto();

class TSlgResourceProduceSpeed;
class TSlgResourceBuildingRecord;
class TSlgResourceGetSlgResourceInfoRsp;
class TSlgResourceCollectReq;
class TSlgResourceCollectRsp;
class TSlgResourceNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TSlgResourceProduceSpeed</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgResource.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgResourceProduceSpeed : public ::google::protobuf::Message {
 public:
  TSlgResourceProduceSpeed();
  virtual ~TSlgResourceProduceSpeed();

  TSlgResourceProduceSpeed(const TSlgResourceProduceSpeed& from);

  inline TSlgResourceProduceSpeed& operator=(const TSlgResourceProduceSpeed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgResourceProduceSpeed& default_instance();

  void Swap(TSlgResourceProduceSpeed* other);

  // implements Message ----------------------------------------------

  TSlgResourceProduceSpeed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgResourceProduceSpeed& from);
  void MergeFrom(const TSlgResourceProduceSpeed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ProduceSpeed = 1;
  inline bool has_producespeed() const;
  inline void clear_producespeed();
  static const int kProduceSpeedFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgResourceProduceSpeed</name>
  	<Function>
  		<name>producespeed</name>
  		<replaceName>ProduceSpeed</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_producespeed</name>
  		<replaceName>ProduceSpeed</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_producespeed</name>
  		<replaceName>ProduceSpeed</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 producespeed() const;
  inline void set_producespeed(::google::protobuf::uint32 value);

  // optional int64 StartTime = 2;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSlgResourceProduceSpeed</name>
  	<Function>
  		<name>starttime</name>
  		<replaceName>StartTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_starttime</name>
  		<replaceName>StartTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_starttime</name>
  		<replaceName>StartTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int64 starttime() const;
  inline void set_starttime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pb.TSlgResourceProduceSpeed)
 private:
  inline void set_has_producespeed();
  inline void clear_has_producespeed();
  inline void set_has_starttime();
  inline void clear_has_starttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::uint32 producespeed_;
  friend void  protobuf_AddDesc_net_2fSlgResource_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgResource_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgResource_2eproto();

  void InitAsDefaultInstance();
  static TSlgResourceProduceSpeed* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgResourceBuildingRecord</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgResource.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgResourceBuildingRecord : public ::google::protobuf::Message {
 public:
  TSlgResourceBuildingRecord();
  virtual ~TSlgResourceBuildingRecord();

  TSlgResourceBuildingRecord(const TSlgResourceBuildingRecord& from);

  inline TSlgResourceBuildingRecord& operator=(const TSlgResourceBuildingRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgResourceBuildingRecord& default_instance();

  void Swap(TSlgResourceBuildingRecord* other);

  // implements Message ----------------------------------------------

  TSlgResourceBuildingRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgResourceBuildingRecord& from);
  void MergeFrom(const TSlgResourceBuildingRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 FoundationTid = 1;
  inline bool has_foundationtid() const;
  inline void clear_foundationtid();
  static const int kFoundationTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgResourceBuildingRecord</name>
  	<Function>
  		<name>foundationtid</name>
  		<replaceName>FoundationTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_foundationtid</name>
  		<replaceName>FoundationTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_foundationtid</name>
  		<replaceName>FoundationTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 foundationtid() const;
  inline void set_foundationtid(::google::protobuf::uint32 value);

  // optional int64 ProduceStarttTime = 2;
  inline bool has_producestartttime() const;
  inline void clear_producestartttime();
  static const int kProduceStarttTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSlgResourceBuildingRecord</name>
  	<Function>
  		<name>producestartttime</name>
  		<replaceName>ProduceStarttTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_producestartttime</name>
  		<replaceName>ProduceStarttTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_producestartttime</name>
  		<replaceName>ProduceStarttTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int64 producestartttime() const;
  inline void set_producestartttime(::google::protobuf::int64 value);

  // repeated .pb.TSlgResourceProduceSpeed ProduceSpeedArr = 3;
  inline int producespeedarr_size() const;
  inline void clear_producespeedarr();
  static const int kProduceSpeedArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TSlgResourceBuildingRecord</name>
  	<Function>
  		<name>producespeedarr</name>
  		<replaceName>ProduceSpeedArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_producespeedarr</name>
  		<replaceName>ProduceSpeedArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_producespeedarr</name>
  		<replaceName>ProduceSpeedArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_producespeedarr</name>
  		<replaceName>ProduceSpeedArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>producespeedarr_size</name>
  		<replaceName>ProduceSpeedArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgResourceProduceSpeed& producespeedarr(int index) const;
  inline ::pb::TSlgResourceProduceSpeed* mutable_producespeedarr(int index);
  inline ::pb::TSlgResourceProduceSpeed* add_producespeedarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceProduceSpeed >&
      producespeedarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceProduceSpeed >*
      mutable_producespeedarr();

  // @@protoc_insertion_point(class_scope:pb.TSlgResourceBuildingRecord)
 private:
  inline void set_has_foundationtid();
  inline void clear_has_foundationtid();
  inline void set_has_producestartttime();
  inline void clear_has_producestartttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 producestartttime_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceProduceSpeed > producespeedarr_;
  ::google::protobuf::uint32 foundationtid_;
  friend void  protobuf_AddDesc_net_2fSlgResource_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgResource_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgResource_2eproto();

  void InitAsDefaultInstance();
  static TSlgResourceBuildingRecord* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgResourceGetSlgResourceInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgResource.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgResourceGetSlgResourceInfoRsp : public ::google::protobuf::Message {
 public:
  TSlgResourceGetSlgResourceInfoRsp();
  virtual ~TSlgResourceGetSlgResourceInfoRsp();

  TSlgResourceGetSlgResourceInfoRsp(const TSlgResourceGetSlgResourceInfoRsp& from);

  inline TSlgResourceGetSlgResourceInfoRsp& operator=(const TSlgResourceGetSlgResourceInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgResourceGetSlgResourceInfoRsp& default_instance();

  void Swap(TSlgResourceGetSlgResourceInfoRsp* other);

  // implements Message ----------------------------------------------

  TSlgResourceGetSlgResourceInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgResourceGetSlgResourceInfoRsp& from);
  void MergeFrom(const TSlgResourceGetSlgResourceInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
  inline int recordarr_size() const;
  inline void clear_recordarr();
  static const int kRecordArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgResourceGetSlgResourceInfoRsp</name>
  	<Function>
  		<name>recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>recordarr_size</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgResourceBuildingRecord& recordarr(int index) const;
  inline ::pb::TSlgResourceBuildingRecord* mutable_recordarr(int index);
  inline ::pb::TSlgResourceBuildingRecord* add_recordarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord >&
      recordarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord >*
      mutable_recordarr();

  // @@protoc_insertion_point(class_scope:pb.TSlgResourceGetSlgResourceInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord > recordarr_;
  friend void  protobuf_AddDesc_net_2fSlgResource_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgResource_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgResource_2eproto();

  void InitAsDefaultInstance();
  static TSlgResourceGetSlgResourceInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgResourceCollectReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgResource.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgResourceCollectReq : public ::google::protobuf::Message {
 public:
  TSlgResourceCollectReq();
  virtual ~TSlgResourceCollectReq();

  TSlgResourceCollectReq(const TSlgResourceCollectReq& from);

  inline TSlgResourceCollectReq& operator=(const TSlgResourceCollectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgResourceCollectReq& default_instance();

  void Swap(TSlgResourceCollectReq* other);

  // implements Message ----------------------------------------------

  TSlgResourceCollectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgResourceCollectReq& from);
  void MergeFrom(const TSlgResourceCollectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 BuildingTid = 1;
  inline bool has_buildingtid() const;
  inline void clear_buildingtid();
  static const int kBuildingTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgResourceCollectReq</name>
  	<Function>
  		<name>buildingtid</name>
  		<replaceName>BuildingTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buildingtid</name>
  		<replaceName>BuildingTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buildingtid</name>
  		<replaceName>BuildingTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 buildingtid() const;
  inline void set_buildingtid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TSlgResourceCollectReq)
 private:
  inline void set_has_buildingtid();
  inline void clear_has_buildingtid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 buildingtid_;
  friend void  protobuf_AddDesc_net_2fSlgResource_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgResource_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgResource_2eproto();

  void InitAsDefaultInstance();
  static TSlgResourceCollectReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgResourceCollectRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgResource.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgResourceCollectRsp : public ::google::protobuf::Message {
 public:
  TSlgResourceCollectRsp();
  virtual ~TSlgResourceCollectRsp();

  TSlgResourceCollectRsp(const TSlgResourceCollectRsp& from);

  inline TSlgResourceCollectRsp& operator=(const TSlgResourceCollectRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgResourceCollectRsp& default_instance();

  void Swap(TSlgResourceCollectRsp* other);

  // implements Message ----------------------------------------------

  TSlgResourceCollectRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgResourceCollectRsp& from);
  void MergeFrom(const TSlgResourceCollectRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
  inline int recordarr_size() const;
  inline void clear_recordarr();
  static const int kRecordArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgResourceCollectRsp</name>
  	<Function>
  		<name>recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>recordarr_size</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgResourceBuildingRecord& recordarr(int index) const;
  inline ::pb::TSlgResourceBuildingRecord* mutable_recordarr(int index);
  inline ::pb::TSlgResourceBuildingRecord* add_recordarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord >&
      recordarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord >*
      mutable_recordarr();

  // @@protoc_insertion_point(class_scope:pb.TSlgResourceCollectRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord > recordarr_;
  friend void  protobuf_AddDesc_net_2fSlgResource_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgResource_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgResource_2eproto();

  void InitAsDefaultInstance();
  static TSlgResourceCollectRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgResourceNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgResource.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgResourceNotify : public ::google::protobuf::Message {
 public:
  TSlgResourceNotify();
  virtual ~TSlgResourceNotify();

  TSlgResourceNotify(const TSlgResourceNotify& from);

  inline TSlgResourceNotify& operator=(const TSlgResourceNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgResourceNotify& default_instance();

  void Swap(TSlgResourceNotify* other);

  // implements Message ----------------------------------------------

  TSlgResourceNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgResourceNotify& from);
  void MergeFrom(const TSlgResourceNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
  inline int recordarr_size() const;
  inline void clear_recordarr();
  static const int kRecordArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgResourceNotify</name>
  	<Function>
  		<name>recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recordarr</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>recordarr_size</name>
  		<replaceName>RecordArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgResourceBuildingRecord& recordarr(int index) const;
  inline ::pb::TSlgResourceBuildingRecord* mutable_recordarr(int index);
  inline ::pb::TSlgResourceBuildingRecord* add_recordarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord >&
      recordarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord >*
      mutable_recordarr();

  // @@protoc_insertion_point(class_scope:pb.TSlgResourceNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord > recordarr_;
  friend void  protobuf_AddDesc_net_2fSlgResource_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgResource_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgResource_2eproto();

  void InitAsDefaultInstance();
  static TSlgResourceNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TSlgResourceProduceSpeed

// optional uint32 ProduceSpeed = 1;
inline bool TSlgResourceProduceSpeed::has_producespeed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgResourceProduceSpeed::set_has_producespeed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgResourceProduceSpeed::clear_has_producespeed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgResourceProduceSpeed::clear_producespeed() {
  producespeed_ = 0u;
  clear_has_producespeed();
}
inline ::google::protobuf::uint32 TSlgResourceProduceSpeed::producespeed() const {
  // @@protoc_insertion_point(field_get:pb.TSlgResourceProduceSpeed.ProduceSpeed)
  return producespeed_;
}
inline void TSlgResourceProduceSpeed::set_producespeed(::google::protobuf::uint32 value) {
  set_has_producespeed();
  producespeed_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgResourceProduceSpeed.ProduceSpeed)
}

// optional int64 StartTime = 2;
inline bool TSlgResourceProduceSpeed::has_starttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSlgResourceProduceSpeed::set_has_starttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSlgResourceProduceSpeed::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSlgResourceProduceSpeed::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::int64 TSlgResourceProduceSpeed::starttime() const {
  // @@protoc_insertion_point(field_get:pb.TSlgResourceProduceSpeed.StartTime)
  return starttime_;
}
inline void TSlgResourceProduceSpeed::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgResourceProduceSpeed.StartTime)
}

// -------------------------------------------------------------------

// TSlgResourceBuildingRecord

// optional uint32 FoundationTid = 1;
inline bool TSlgResourceBuildingRecord::has_foundationtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgResourceBuildingRecord::set_has_foundationtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgResourceBuildingRecord::clear_has_foundationtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgResourceBuildingRecord::clear_foundationtid() {
  foundationtid_ = 0u;
  clear_has_foundationtid();
}
inline ::google::protobuf::uint32 TSlgResourceBuildingRecord::foundationtid() const {
  // @@protoc_insertion_point(field_get:pb.TSlgResourceBuildingRecord.FoundationTid)
  return foundationtid_;
}
inline void TSlgResourceBuildingRecord::set_foundationtid(::google::protobuf::uint32 value) {
  set_has_foundationtid();
  foundationtid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgResourceBuildingRecord.FoundationTid)
}

// optional int64 ProduceStarttTime = 2;
inline bool TSlgResourceBuildingRecord::has_producestartttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSlgResourceBuildingRecord::set_has_producestartttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSlgResourceBuildingRecord::clear_has_producestartttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSlgResourceBuildingRecord::clear_producestartttime() {
  producestartttime_ = GOOGLE_LONGLONG(0);
  clear_has_producestartttime();
}
inline ::google::protobuf::int64 TSlgResourceBuildingRecord::producestartttime() const {
  // @@protoc_insertion_point(field_get:pb.TSlgResourceBuildingRecord.ProduceStarttTime)
  return producestartttime_;
}
inline void TSlgResourceBuildingRecord::set_producestartttime(::google::protobuf::int64 value) {
  set_has_producestartttime();
  producestartttime_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgResourceBuildingRecord.ProduceStarttTime)
}

// repeated .pb.TSlgResourceProduceSpeed ProduceSpeedArr = 3;
inline int TSlgResourceBuildingRecord::producespeedarr_size() const {
  return producespeedarr_.size();
}
inline void TSlgResourceBuildingRecord::clear_producespeedarr() {
  producespeedarr_.Clear();
}
inline const ::pb::TSlgResourceProduceSpeed& TSlgResourceBuildingRecord::producespeedarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgResourceBuildingRecord.ProduceSpeedArr)
  return producespeedarr_.Get(index);
}
inline ::pb::TSlgResourceProduceSpeed* TSlgResourceBuildingRecord::mutable_producespeedarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgResourceBuildingRecord.ProduceSpeedArr)
  return producespeedarr_.Mutable(index);
}
inline ::pb::TSlgResourceProduceSpeed* TSlgResourceBuildingRecord::add_producespeedarr() {
  // @@protoc_insertion_point(field_add:pb.TSlgResourceBuildingRecord.ProduceSpeedArr)
  return producespeedarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceProduceSpeed >&
TSlgResourceBuildingRecord::producespeedarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgResourceBuildingRecord.ProduceSpeedArr)
  return producespeedarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceProduceSpeed >*
TSlgResourceBuildingRecord::mutable_producespeedarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgResourceBuildingRecord.ProduceSpeedArr)
  return &producespeedarr_;
}

// -------------------------------------------------------------------

// TSlgResourceGetSlgResourceInfoRsp

// repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
inline int TSlgResourceGetSlgResourceInfoRsp::recordarr_size() const {
  return recordarr_.size();
}
inline void TSlgResourceGetSlgResourceInfoRsp::clear_recordarr() {
  recordarr_.Clear();
}
inline const ::pb::TSlgResourceBuildingRecord& TSlgResourceGetSlgResourceInfoRsp::recordarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgResourceGetSlgResourceInfoRsp.RecordArr)
  return recordarr_.Get(index);
}
inline ::pb::TSlgResourceBuildingRecord* TSlgResourceGetSlgResourceInfoRsp::mutable_recordarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgResourceGetSlgResourceInfoRsp.RecordArr)
  return recordarr_.Mutable(index);
}
inline ::pb::TSlgResourceBuildingRecord* TSlgResourceGetSlgResourceInfoRsp::add_recordarr() {
  // @@protoc_insertion_point(field_add:pb.TSlgResourceGetSlgResourceInfoRsp.RecordArr)
  return recordarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord >&
TSlgResourceGetSlgResourceInfoRsp::recordarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgResourceGetSlgResourceInfoRsp.RecordArr)
  return recordarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord >*
TSlgResourceGetSlgResourceInfoRsp::mutable_recordarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgResourceGetSlgResourceInfoRsp.RecordArr)
  return &recordarr_;
}

// -------------------------------------------------------------------

// TSlgResourceCollectReq

// optional uint32 BuildingTid = 1;
inline bool TSlgResourceCollectReq::has_buildingtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgResourceCollectReq::set_has_buildingtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgResourceCollectReq::clear_has_buildingtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgResourceCollectReq::clear_buildingtid() {
  buildingtid_ = 0u;
  clear_has_buildingtid();
}
inline ::google::protobuf::uint32 TSlgResourceCollectReq::buildingtid() const {
  // @@protoc_insertion_point(field_get:pb.TSlgResourceCollectReq.BuildingTid)
  return buildingtid_;
}
inline void TSlgResourceCollectReq::set_buildingtid(::google::protobuf::uint32 value) {
  set_has_buildingtid();
  buildingtid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgResourceCollectReq.BuildingTid)
}

// -------------------------------------------------------------------

// TSlgResourceCollectRsp

// repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
inline int TSlgResourceCollectRsp::recordarr_size() const {
  return recordarr_.size();
}
inline void TSlgResourceCollectRsp::clear_recordarr() {
  recordarr_.Clear();
}
inline const ::pb::TSlgResourceBuildingRecord& TSlgResourceCollectRsp::recordarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgResourceCollectRsp.RecordArr)
  return recordarr_.Get(index);
}
inline ::pb::TSlgResourceBuildingRecord* TSlgResourceCollectRsp::mutable_recordarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgResourceCollectRsp.RecordArr)
  return recordarr_.Mutable(index);
}
inline ::pb::TSlgResourceBuildingRecord* TSlgResourceCollectRsp::add_recordarr() {
  // @@protoc_insertion_point(field_add:pb.TSlgResourceCollectRsp.RecordArr)
  return recordarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord >&
TSlgResourceCollectRsp::recordarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgResourceCollectRsp.RecordArr)
  return recordarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord >*
TSlgResourceCollectRsp::mutable_recordarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgResourceCollectRsp.RecordArr)
  return &recordarr_;
}

// -------------------------------------------------------------------

// TSlgResourceNotify

// repeated .pb.TSlgResourceBuildingRecord RecordArr = 1;
inline int TSlgResourceNotify::recordarr_size() const {
  return recordarr_.size();
}
inline void TSlgResourceNotify::clear_recordarr() {
  recordarr_.Clear();
}
inline const ::pb::TSlgResourceBuildingRecord& TSlgResourceNotify::recordarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgResourceNotify.RecordArr)
  return recordarr_.Get(index);
}
inline ::pb::TSlgResourceBuildingRecord* TSlgResourceNotify::mutable_recordarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgResourceNotify.RecordArr)
  return recordarr_.Mutable(index);
}
inline ::pb::TSlgResourceBuildingRecord* TSlgResourceNotify::add_recordarr() {
  // @@protoc_insertion_point(field_add:pb.TSlgResourceNotify.RecordArr)
  return recordarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord >&
TSlgResourceNotify::recordarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgResourceNotify.RecordArr)
  return recordarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgResourceBuildingRecord >*
TSlgResourceNotify::mutable_recordarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgResourceNotify.RecordArr)
  return &recordarr_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fSlgResource_2eproto__INCLUDED
