// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/LevyTeamInstance.proto

#ifndef PROTOBUF_net_2fLevyTeamInstance_2eproto__INCLUDED
#define PROTOBUF_net_2fLevyTeamInstance_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/User.pb.h"
#include "net/CommonReward.pb.h"
#include "net/Battle.pb.h"
#include "net/CommonTeam.pb.h"
#include "net/Team.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

class TSimpleLevyInstanceTeamInfo;
class TLevyTeamInstanceMemberInfo;
class TLevyInstanceTeamInfo;
class TLevyTeamInstanceGetInfoRsp;
class TLevyTeamInstanceGetTeamArrReq;
class TLevyTeamInstanceGetTeamArrRsp;
class TLevyTeamInstanceCreateTeamReq;
class TLevyTeamInstanceCreateTeamRsp;
class TLevyTeamInstanceJoinTeamReq;
class TLevyTeamInstanceJoinTeamRsp;
class TLevyTeamInstanceKickReq;
class TLevyTeamInstanceQuitTeamReq;
class TLevyTeamInstanceKickOrQuitTeamRsp;
class TLevyTeamInstanceChangeTeamModeReq;
class TLevyTeamInstanceChangeTeamModeRsp;
class TLevyTeamInstanceSetTeamMemberStatusReq;
class TLevyTeamInstanceSetTeamMemberStatusRsp;
class TLevyTeamInstanceSetTeamStatusReq;
class TLevyTeamInstanceSetTeamStatusRsp;
class TLevyTeamInstanceTeamStartReq;
class TLevyTeamInstanceBattleRecordNotify;
class TLevyTeamInstanceBattleEndNotify;
class TLevyTeamInstanceAbortNotify;
class TLevyTeamInstanceGetInviteListReq;
class TLevyTeamInstanceGetInviteListRsp;
class TLevyTeamInstanceTeamInviteReq;
class TLevyTeamInstanceInviteNotify;
class TLevyTeamInstanceAtkInfo;
class TLevyTeamInstanceGetAtkListReq;
class TLevyTeamInstanceGetAtkListRsp;
class TLevyTeamInstanceGetBattleRecordReq;
class TLevyTeamInstanceRewardInfo;
class TLevyTeamInstanceGetBattleRecordRsp;
class TLevyTeamInstanceHallMemberInfoData;
class TLevyTeamInstanceTeamSpecificInfo;
class TLevyTeamInstanceQuickMatchReq;
class TLevyTeamInstanceQuickMatchRsp;

enum EJoinLevyInstanceTeamErrorCode {
  LEVY_TEAM_ERROR_CODE_OK = 0,
  LEVY_TEAM_ERROR_CODE_FULL = 1,
  LEVY_TEAM_ERROR_CODE_NOTEXIST = 2,
  LEVY_TEAM_ERROR_CODE_INTEAM = 3,
  LEVY_TEAM_ERROR_CODE_NOTOPEN = 4,
  LEVY_TEAM_ERROR_CODE_LVNOTMATCH = 5,
  LEVY_TEAM_ERROR_CODE_PRIVATETEAM = 6
};
bool EJoinLevyInstanceTeamErrorCode_IsValid(int value);
const EJoinLevyInstanceTeamErrorCode EJoinLevyInstanceTeamErrorCode_MIN = LEVY_TEAM_ERROR_CODE_OK;
const EJoinLevyInstanceTeamErrorCode EJoinLevyInstanceTeamErrorCode_MAX = LEVY_TEAM_ERROR_CODE_PRIVATETEAM;
const int EJoinLevyInstanceTeamErrorCode_ARRAYSIZE = EJoinLevyInstanceTeamErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* EJoinLevyInstanceTeamErrorCode_descriptor();
inline const ::std::string& EJoinLevyInstanceTeamErrorCode_Name(EJoinLevyInstanceTeamErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    EJoinLevyInstanceTeamErrorCode_descriptor(), value);
}
inline bool EJoinLevyInstanceTeamErrorCode_Parse(
    const ::std::string& name, EJoinLevyInstanceTeamErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EJoinLevyInstanceTeamErrorCode>(
    EJoinLevyInstanceTeamErrorCode_descriptor(), name, value);
}
enum ELevyTeamInstanceGetListType {
  LEVY_TEAM_GETLIST_TYPE_ALL = 1,
  LEVY_TEAM_GETLIST_TYPE_GUILD = 2,
  LEVY_TEAM_GETLIST_TYPE_FRIEND = 3
};
bool ELevyTeamInstanceGetListType_IsValid(int value);
const ELevyTeamInstanceGetListType ELevyTeamInstanceGetListType_MIN = LEVY_TEAM_GETLIST_TYPE_ALL;
const ELevyTeamInstanceGetListType ELevyTeamInstanceGetListType_MAX = LEVY_TEAM_GETLIST_TYPE_FRIEND;
const int ELevyTeamInstanceGetListType_ARRAYSIZE = ELevyTeamInstanceGetListType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ELevyTeamInstanceGetListType_descriptor();
inline const ::std::string& ELevyTeamInstanceGetListType_Name(ELevyTeamInstanceGetListType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ELevyTeamInstanceGetListType_descriptor(), value);
}
inline bool ELevyTeamInstanceGetListType_Parse(
    const ::std::string& name, ELevyTeamInstanceGetListType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ELevyTeamInstanceGetListType>(
    ELevyTeamInstanceGetListType_descriptor(), name, value);
}
enum ELevyTeamKickOrQuitTeamRetCode {
  LevyTeamKQRET_CODE_OK = 0,
  LevyTeamKQRET_CODE_TEAMNOTEXIST = 1,
  LevyTeamKQRET_CODE_NOTINTEAM = 2
};
bool ELevyTeamKickOrQuitTeamRetCode_IsValid(int value);
const ELevyTeamKickOrQuitTeamRetCode ELevyTeamKickOrQuitTeamRetCode_MIN = LevyTeamKQRET_CODE_OK;
const ELevyTeamKickOrQuitTeamRetCode ELevyTeamKickOrQuitTeamRetCode_MAX = LevyTeamKQRET_CODE_NOTINTEAM;
const int ELevyTeamKickOrQuitTeamRetCode_ARRAYSIZE = ELevyTeamKickOrQuitTeamRetCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ELevyTeamKickOrQuitTeamRetCode_descriptor();
inline const ::std::string& ELevyTeamKickOrQuitTeamRetCode_Name(ELevyTeamKickOrQuitTeamRetCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ELevyTeamKickOrQuitTeamRetCode_descriptor(), value);
}
inline bool ELevyTeamKickOrQuitTeamRetCode_Parse(
    const ::std::string& name, ELevyTeamKickOrQuitTeamRetCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ELevyTeamKickOrQuitTeamRetCode>(
    ELevyTeamKickOrQuitTeamRetCode_descriptor(), name, value);
}
enum ELevyTeamInstanceBattleResult {
  LevyTeamInstanceBattleResult_FAIL = 0,
  LevyTeamInstanceBattleResult_WIN = 1
};
bool ELevyTeamInstanceBattleResult_IsValid(int value);
const ELevyTeamInstanceBattleResult ELevyTeamInstanceBattleResult_MIN = LevyTeamInstanceBattleResult_FAIL;
const ELevyTeamInstanceBattleResult ELevyTeamInstanceBattleResult_MAX = LevyTeamInstanceBattleResult_WIN;
const int ELevyTeamInstanceBattleResult_ARRAYSIZE = ELevyTeamInstanceBattleResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* ELevyTeamInstanceBattleResult_descriptor();
inline const ::std::string& ELevyTeamInstanceBattleResult_Name(ELevyTeamInstanceBattleResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    ELevyTeamInstanceBattleResult_descriptor(), value);
}
inline bool ELevyTeamInstanceBattleResult_Parse(
    const ::std::string& name, ELevyTeamInstanceBattleResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ELevyTeamInstanceBattleResult>(
    ELevyTeamInstanceBattleResult_descriptor(), name, value);
}
enum ELevyTeamInstanceAbortReason {
  LTI_ABORT_BATTLE_FAIL = 1,
  LTI_ABORT_INITTEAM_FAIL = 2,
  LTI_ABORT_MEMEND_FAIL = 3
};
bool ELevyTeamInstanceAbortReason_IsValid(int value);
const ELevyTeamInstanceAbortReason ELevyTeamInstanceAbortReason_MIN = LTI_ABORT_BATTLE_FAIL;
const ELevyTeamInstanceAbortReason ELevyTeamInstanceAbortReason_MAX = LTI_ABORT_MEMEND_FAIL;
const int ELevyTeamInstanceAbortReason_ARRAYSIZE = ELevyTeamInstanceAbortReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* ELevyTeamInstanceAbortReason_descriptor();
inline const ::std::string& ELevyTeamInstanceAbortReason_Name(ELevyTeamInstanceAbortReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    ELevyTeamInstanceAbortReason_descriptor(), value);
}
inline bool ELevyTeamInstanceAbortReason_Parse(
    const ::std::string& name, ELevyTeamInstanceAbortReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ELevyTeamInstanceAbortReason>(
    ELevyTeamInstanceAbortReason_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TSimpleLevyInstanceTeamInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSimpleLevyInstanceTeamInfo : public ::google::protobuf::Message {
 public:
  TSimpleLevyInstanceTeamInfo();
  virtual ~TSimpleLevyInstanceTeamInfo();

  TSimpleLevyInstanceTeamInfo(const TSimpleLevyInstanceTeamInfo& from);

  inline TSimpleLevyInstanceTeamInfo& operator=(const TSimpleLevyInstanceTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSimpleLevyInstanceTeamInfo& default_instance();

  void Swap(TSimpleLevyInstanceTeamInfo* other);

  // implements Message ----------------------------------------------

  TSimpleLevyInstanceTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSimpleLevyInstanceTeamInfo& from);
  void MergeFrom(const TSimpleLevyInstanceTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSimpleLevyInstanceTeamInfo</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSimpleLevyInstanceTeamInfo</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.TUserSimpleInfo LeaderUserInfo = 3;
  inline bool has_leaderuserinfo() const;
  inline void clear_leaderuserinfo();
  static const int kLeaderUserInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TSimpleLevyInstanceTeamInfo</name>
  	<Function>
  		<name>leaderuserinfo</name>
  		<replaceName>LeaderUserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_leaderuserinfo</name>
  		<replaceName>LeaderUserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_leaderuserinfo</name>
  		<replaceName>LeaderUserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_leaderuserinfo</name>
  		<replaceName>LeaderUserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& leaderuserinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_leaderuserinfo();
  inline ::pb::TUserSimpleInfo* release_leaderuserinfo();
  inline void set_allocated_leaderuserinfo(::pb::TUserSimpleInfo* leaderuserinfo);

  // optional uint32 TeamUserNum = 4;
  inline bool has_teamusernum() const;
  inline void clear_teamusernum();
  static const int kTeamUserNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TSimpleLevyInstanceTeamInfo</name>
  	<Function>
  		<name>teamusernum</name>
  		<replaceName>TeamUserNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamusernum</name>
  		<replaceName>TeamUserNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamusernum</name>
  		<replaceName>TeamUserNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 teamusernum() const;
  inline void set_teamusernum(::google::protobuf::uint32 value);

  // optional uint32 InstanceId = 5;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TSimpleLevyInstanceTeamInfo</name>
  	<Function>
  		<name>instanceid</name>
  		<replaceName>InstanceId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_instanceid</name>
  		<replaceName>InstanceId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_instanceid</name>
  		<replaceName>InstanceId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TSimpleLevyInstanceTeamInfo)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_leaderuserinfo();
  inline void clear_has_leaderuserinfo();
  inline void set_has_teamusernum();
  inline void clear_has_teamusernum();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  ::pb::TUserSimpleInfo* leaderuserinfo_;
  ::google::protobuf::uint32 teamusernum_;
  ::google::protobuf::uint32 instanceid_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TSimpleLevyInstanceTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceMemberInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceMemberInfo : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceMemberInfo();
  virtual ~TLevyTeamInstanceMemberInfo();

  TLevyTeamInstanceMemberInfo(const TLevyTeamInstanceMemberInfo& from);

  inline TLevyTeamInstanceMemberInfo& operator=(const TLevyTeamInstanceMemberInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceMemberInfo& default_instance();

  void Swap(TLevyTeamInstanceMemberInfo* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceMemberInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceMemberInfo& from);
  void MergeFrom(const TLevyTeamInstanceMemberInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUserSimpleInfo UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceMemberInfo</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // optional uint32 SquadNum = 2;
  inline bool has_squadnum() const;
  inline void clear_squadnum();
  static const int kSquadNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceMemberInfo</name>
  	<Function>
  		<name>squadnum</name>
  		<replaceName>SquadNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_squadnum</name>
  		<replaceName>SquadNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_squadnum</name>
  		<replaceName>SquadNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 squadnum() const;
  inline void set_squadnum(::google::protobuf::uint32 value);

  // optional uint64 TotalFightForce = 3;
  inline bool has_totalfightforce() const;
  inline void clear_totalfightforce();
  static const int kTotalFightForceFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceMemberInfo</name>
  	<Function>
  		<name>totalfightforce</name>
  		<replaceName>TotalFightForce</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totalfightforce</name>
  		<replaceName>TotalFightForce</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totalfightforce</name>
  		<replaceName>TotalFightForce</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 totalfightforce() const;
  inline void set_totalfightforce(::google::protobuf::uint64 value);

  // optional .pb.ECommonTeamMode TeamMode = 4;
  inline bool has_teammode() const;
  inline void clear_teammode();
  static const int kTeamModeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceMemberInfo</name>
  	<Function>
  		<name>teammode</name>
  		<replaceName>TeamMode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teammode</name>
  		<replaceName>TeamMode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teammode</name>
  		<replaceName>TeamMode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ECommonTeamMode teammode() const;
  inline void set_teammode(::pb::ECommonTeamMode value);

  // optional .pb.EHallMemberReadyStatus MemberStatus = 5;
  inline bool has_memberstatus() const;
  inline void clear_memberstatus();
  static const int kMemberStatusFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceMemberInfo</name>
  	<Function>
  		<name>memberstatus</name>
  		<replaceName>MemberStatus</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_memberstatus</name>
  		<replaceName>MemberStatus</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_memberstatus</name>
  		<replaceName>MemberStatus</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EHallMemberReadyStatus memberstatus() const;
  inline void set_memberstatus(::pb::EHallMemberReadyStatus value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceMemberInfo)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_squadnum();
  inline void clear_has_squadnum();
  inline void set_has_totalfightforce();
  inline void clear_has_totalfightforce();
  inline void set_has_teammode();
  inline void clear_has_teammode();
  inline void set_has_memberstatus();
  inline void clear_has_memberstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUserSimpleInfo* userinfo_;
  ::google::protobuf::uint64 totalfightforce_;
  ::google::protobuf::uint32 squadnum_;
  int teammode_;
  int memberstatus_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceMemberInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyInstanceTeamInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyInstanceTeamInfo : public ::google::protobuf::Message {
 public:
  TLevyInstanceTeamInfo();
  virtual ~TLevyInstanceTeamInfo();

  TLevyInstanceTeamInfo(const TLevyInstanceTeamInfo& from);

  inline TLevyInstanceTeamInfo& operator=(const TLevyInstanceTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyInstanceTeamInfo& default_instance();

  void Swap(TLevyInstanceTeamInfo* other);

  // implements Message ----------------------------------------------

  TLevyInstanceTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyInstanceTeamInfo& from);
  void MergeFrom(const TLevyInstanceTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyInstanceTeamInfo</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyInstanceTeamInfo</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint64 LeaderUid = 3;
  inline bool has_leaderuid() const;
  inline void clear_leaderuid();
  static const int kLeaderUidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyInstanceTeamInfo</name>
  	<Function>
  		<name>leaderuid</name>
  		<replaceName>LeaderUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_leaderuid</name>
  		<replaceName>LeaderUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_leaderuid</name>
  		<replaceName>LeaderUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 leaderuid() const;
  inline void set_leaderuid(::google::protobuf::uint64 value);

  // repeated .pb.TLevyTeamInstanceMemberInfo TeamUserArr = 4;
  inline int teamuserarr_size() const;
  inline void clear_teamuserarr();
  static const int kTeamUserArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TLevyInstanceTeamInfo</name>
  	<Function>
  		<name>teamuserarr</name>
  		<replaceName>TeamUserArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_teamuserarr</name>
  		<replaceName>TeamUserArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_teamuserarr</name>
  		<replaceName>TeamUserArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamuserarr</name>
  		<replaceName>TeamUserArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>teamuserarr_size</name>
  		<replaceName>TeamUserArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TLevyTeamInstanceMemberInfo& teamuserarr(int index) const;
  inline ::pb::TLevyTeamInstanceMemberInfo* mutable_teamuserarr(int index);
  inline ::pb::TLevyTeamInstanceMemberInfo* add_teamuserarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TLevyTeamInstanceMemberInfo >&
      teamuserarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TLevyTeamInstanceMemberInfo >*
      mutable_teamuserarr();

  // optional uint32 InstanceId = 5;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TLevyInstanceTeamInfo</name>
  	<Function>
  		<name>instanceid</name>
  		<replaceName>InstanceId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_instanceid</name>
  		<replaceName>InstanceId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_instanceid</name>
  		<replaceName>InstanceId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint32 value);

  // optional .pb.EHallTeamType TeamPrivateType = 6;
  inline bool has_teamprivatetype() const;
  inline void clear_teamprivatetype();
  static const int kTeamPrivateTypeFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TLevyInstanceTeamInfo</name>
  	<Function>
  		<name>teamprivatetype</name>
  		<replaceName>TeamPrivateType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamprivatetype</name>
  		<replaceName>TeamPrivateType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamprivatetype</name>
  		<replaceName>TeamPrivateType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EHallTeamType teamprivatetype() const;
  inline void set_teamprivatetype(::pb::EHallTeamType value);

  // @@protoc_insertion_point(class_scope:pb.TLevyInstanceTeamInfo)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_leaderuid();
  inline void clear_has_leaderuid();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_teamprivatetype();
  inline void clear_has_teamprivatetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 leaderuid_;
  ::google::protobuf::RepeatedPtrField< ::pb::TLevyTeamInstanceMemberInfo > teamuserarr_;
  ::google::protobuf::uint32 instanceid_;
  int teamprivatetype_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyInstanceTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceGetInfoRsp : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceGetInfoRsp();
  virtual ~TLevyTeamInstanceGetInfoRsp();

  TLevyTeamInstanceGetInfoRsp(const TLevyTeamInstanceGetInfoRsp& from);

  inline TLevyTeamInstanceGetInfoRsp& operator=(const TLevyTeamInstanceGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceGetInfoRsp& default_instance();

  void Swap(TLevyTeamInstanceGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceGetInfoRsp& from);
  void MergeFrom(const TLevyTeamInstanceGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 MonsterId = 1;
  inline int monsterid_size() const;
  inline void clear_monsterid();
  static const int kMonsterIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetInfoRsp</name>
  	<Function>
  		<name>monsterid</name>
  		<replaceName>MonsterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_monsterid</name>
  		<replaceName>MonsterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_monsterid</name>
  		<replaceName>MonsterId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_monsterid</name>
  		<replaceName>MonsterId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>monsterid_size</name>
  		<replaceName>MonsterId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 monsterid(int index) const;
  inline void set_monsterid(int index, ::google::protobuf::uint32 value);
  inline void add_monsterid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      monsterid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_monsterid();

  // optional uint32 AtkInstanceNum = 2;
  inline bool has_atkinstancenum() const;
  inline void clear_atkinstancenum();
  static const int kAtkInstanceNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetInfoRsp</name>
  	<Function>
  		<name>atkinstancenum</name>
  		<replaceName>AtkInstanceNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_atkinstancenum</name>
  		<replaceName>AtkInstanceNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_atkinstancenum</name>
  		<replaceName>AtkInstanceNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 atkinstancenum() const;
  inline void set_atkinstancenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceGetInfoRsp)
 private:
  inline void set_has_atkinstancenum();
  inline void clear_has_atkinstancenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > monsterid_;
  ::google::protobuf::uint32 atkinstancenum_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceGetTeamArrReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceGetTeamArrReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceGetTeamArrReq();
  virtual ~TLevyTeamInstanceGetTeamArrReq();

  TLevyTeamInstanceGetTeamArrReq(const TLevyTeamInstanceGetTeamArrReq& from);

  inline TLevyTeamInstanceGetTeamArrReq& operator=(const TLevyTeamInstanceGetTeamArrReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceGetTeamArrReq& default_instance();

  void Swap(TLevyTeamInstanceGetTeamArrReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceGetTeamArrReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceGetTeamArrReq& from);
  void MergeFrom(const TLevyTeamInstanceGetTeamArrReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.ELevyTeamInstanceGetListType SelectType = 1;
  inline bool has_selecttype() const;
  inline void clear_selecttype();
  static const int kSelectTypeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetTeamArrReq</name>
  	<Function>
  		<name>selecttype</name>
  		<replaceName>SelectType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_selecttype</name>
  		<replaceName>SelectType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_selecttype</name>
  		<replaceName>SelectType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ELevyTeamInstanceGetListType selecttype() const;
  inline void set_selecttype(::pb::ELevyTeamInstanceGetListType value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetTeamArrReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceGetTeamArrReq)
 private:
  inline void set_has_selecttype();
  inline void clear_has_selecttype();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int selecttype_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceGetTeamArrReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceGetTeamArrRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceGetTeamArrRsp : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceGetTeamArrRsp();
  virtual ~TLevyTeamInstanceGetTeamArrRsp();

  TLevyTeamInstanceGetTeamArrRsp(const TLevyTeamInstanceGetTeamArrRsp& from);

  inline TLevyTeamInstanceGetTeamArrRsp& operator=(const TLevyTeamInstanceGetTeamArrRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceGetTeamArrRsp& default_instance();

  void Swap(TLevyTeamInstanceGetTeamArrRsp* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceGetTeamArrRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceGetTeamArrRsp& from);
  void MergeFrom(const TLevyTeamInstanceGetTeamArrRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSimpleLevyInstanceTeamInfo TeamArr = 1;
  inline int teamarr_size() const;
  inline void clear_teamarr();
  static const int kTeamArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetTeamArrRsp</name>
  	<Function>
  		<name>teamarr</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_teamarr</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_teamarr</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamarr</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>teamarr_size</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleLevyInstanceTeamInfo& teamarr(int index) const;
  inline ::pb::TSimpleLevyInstanceTeamInfo* mutable_teamarr(int index);
  inline ::pb::TSimpleLevyInstanceTeamInfo* add_teamarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleLevyInstanceTeamInfo >&
      teamarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleLevyInstanceTeamInfo >*
      mutable_teamarr();

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceGetTeamArrRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSimpleLevyInstanceTeamInfo > teamarr_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceGetTeamArrRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceCreateTeamReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceCreateTeamReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceCreateTeamReq();
  virtual ~TLevyTeamInstanceCreateTeamReq();

  TLevyTeamInstanceCreateTeamReq(const TLevyTeamInstanceCreateTeamReq& from);

  inline TLevyTeamInstanceCreateTeamReq& operator=(const TLevyTeamInstanceCreateTeamReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceCreateTeamReq& default_instance();

  void Swap(TLevyTeamInstanceCreateTeamReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceCreateTeamReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceCreateTeamReq& from);
  void MergeFrom(const TLevyTeamInstanceCreateTeamReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 InstanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceCreateTeamReq</name>
  	<Function>
  		<name>instanceid</name>
  		<replaceName>InstanceId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_instanceid</name>
  		<replaceName>InstanceId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_instanceid</name>
  		<replaceName>InstanceId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint32 value);

  // optional .pb.EHallTeamType TeamPrivateType = 2;
  inline bool has_teamprivatetype() const;
  inline void clear_teamprivatetype();
  static const int kTeamPrivateTypeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceCreateTeamReq</name>
  	<Function>
  		<name>teamprivatetype</name>
  		<replaceName>TeamPrivateType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamprivatetype</name>
  		<replaceName>TeamPrivateType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamprivatetype</name>
  		<replaceName>TeamPrivateType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EHallTeamType teamprivatetype() const;
  inline void set_teamprivatetype(::pb::EHallTeamType value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceCreateTeamReq)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_teamprivatetype();
  inline void clear_has_teamprivatetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 instanceid_;
  int teamprivatetype_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceCreateTeamReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceCreateTeamRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceCreateTeamRsp : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceCreateTeamRsp();
  virtual ~TLevyTeamInstanceCreateTeamRsp();

  TLevyTeamInstanceCreateTeamRsp(const TLevyTeamInstanceCreateTeamRsp& from);

  inline TLevyTeamInstanceCreateTeamRsp& operator=(const TLevyTeamInstanceCreateTeamRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceCreateTeamRsp& default_instance();

  void Swap(TLevyTeamInstanceCreateTeamRsp* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceCreateTeamRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceCreateTeamRsp& from);
  void MergeFrom(const TLevyTeamInstanceCreateTeamRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TLevyInstanceTeamInfo TeamInfo = 1;
  inline bool has_teaminfo() const;
  inline void clear_teaminfo();
  static const int kTeamInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceCreateTeamRsp</name>
  	<Function>
  		<name>teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TLevyInstanceTeamInfo& teaminfo() const;
  inline ::pb::TLevyInstanceTeamInfo* mutable_teaminfo();
  inline ::pb::TLevyInstanceTeamInfo* release_teaminfo();
  inline void set_allocated_teaminfo(::pb::TLevyInstanceTeamInfo* teaminfo);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceCreateTeamRsp)
 private:
  inline void set_has_teaminfo();
  inline void clear_has_teaminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TLevyInstanceTeamInfo* teaminfo_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceCreateTeamRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceJoinTeamReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceJoinTeamReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceJoinTeamReq();
  virtual ~TLevyTeamInstanceJoinTeamReq();

  TLevyTeamInstanceJoinTeamReq(const TLevyTeamInstanceJoinTeamReq& from);

  inline TLevyTeamInstanceJoinTeamReq& operator=(const TLevyTeamInstanceJoinTeamReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceJoinTeamReq& default_instance();

  void Swap(TLevyTeamInstanceJoinTeamReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceJoinTeamReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceJoinTeamReq& from);
  void MergeFrom(const TLevyTeamInstanceJoinTeamReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceJoinTeamReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceJoinTeamReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.ECommonTeamMode JoinMode = 3;
  inline bool has_joinmode() const;
  inline void clear_joinmode();
  static const int kJoinModeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceJoinTeamReq</name>
  	<Function>
  		<name>joinmode</name>
  		<replaceName>JoinMode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_joinmode</name>
  		<replaceName>JoinMode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_joinmode</name>
  		<replaceName>JoinMode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ECommonTeamMode joinmode() const;
  inline void set_joinmode(::pb::ECommonTeamMode value);

  // optional bool CheckPrivate = 4;
  inline bool has_checkprivate() const;
  inline void clear_checkprivate();
  static const int kCheckPrivateFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceJoinTeamReq</name>
  	<Function>
  		<name>checkprivate</name>
  		<replaceName>CheckPrivate</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_checkprivate</name>
  		<replaceName>CheckPrivate</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_checkprivate</name>
  		<replaceName>CheckPrivate</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool checkprivate() const;
  inline void set_checkprivate(bool value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceJoinTeamReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_joinmode();
  inline void clear_has_joinmode();
  inline void set_has_checkprivate();
  inline void clear_has_checkprivate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  int joinmode_;
  bool checkprivate_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceJoinTeamReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceJoinTeamRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceJoinTeamRsp : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceJoinTeamRsp();
  virtual ~TLevyTeamInstanceJoinTeamRsp();

  TLevyTeamInstanceJoinTeamRsp(const TLevyTeamInstanceJoinTeamRsp& from);

  inline TLevyTeamInstanceJoinTeamRsp& operator=(const TLevyTeamInstanceJoinTeamRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceJoinTeamRsp& default_instance();

  void Swap(TLevyTeamInstanceJoinTeamRsp* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceJoinTeamRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceJoinTeamRsp& from);
  void MergeFrom(const TLevyTeamInstanceJoinTeamRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.EJoinLevyInstanceTeamErrorCode ErrorCode = 1;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceJoinTeamRsp</name>
  	<Function>
  		<name>errorcode</name>
  		<replaceName>ErrorCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_errorcode</name>
  		<replaceName>ErrorCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_errorcode</name>
  		<replaceName>ErrorCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EJoinLevyInstanceTeamErrorCode errorcode() const;
  inline void set_errorcode(::pb::EJoinLevyInstanceTeamErrorCode value);

  // optional .pb.TLevyInstanceTeamInfo TeamInfo = 2;
  inline bool has_teaminfo() const;
  inline void clear_teaminfo();
  static const int kTeamInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceJoinTeamRsp</name>
  	<Function>
  		<name>teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TLevyInstanceTeamInfo& teaminfo() const;
  inline ::pb::TLevyInstanceTeamInfo* mutable_teaminfo();
  inline ::pb::TLevyInstanceTeamInfo* release_teaminfo();
  inline void set_allocated_teaminfo(::pb::TLevyInstanceTeamInfo* teaminfo);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceJoinTeamRsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_teaminfo();
  inline void clear_has_teaminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TLevyInstanceTeamInfo* teaminfo_;
  int errorcode_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceJoinTeamRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceKickReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceKickReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceKickReq();
  virtual ~TLevyTeamInstanceKickReq();

  TLevyTeamInstanceKickReq(const TLevyTeamInstanceKickReq& from);

  inline TLevyTeamInstanceKickReq& operator=(const TLevyTeamInstanceKickReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceKickReq& default_instance();

  void Swap(TLevyTeamInstanceKickReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceKickReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceKickReq& from);
  void MergeFrom(const TLevyTeamInstanceKickReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceKickReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceKickReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint64 KickUid = 3;
  inline bool has_kickuid() const;
  inline void clear_kickuid();
  static const int kKickUidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceKickReq</name>
  	<Function>
  		<name>kickuid</name>
  		<replaceName>KickUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_kickuid</name>
  		<replaceName>KickUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_kickuid</name>
  		<replaceName>KickUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 kickuid() const;
  inline void set_kickuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceKickReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_kickuid();
  inline void clear_has_kickuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 kickuid_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceKickReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceQuitTeamReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceQuitTeamReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceQuitTeamReq();
  virtual ~TLevyTeamInstanceQuitTeamReq();

  TLevyTeamInstanceQuitTeamReq(const TLevyTeamInstanceQuitTeamReq& from);

  inline TLevyTeamInstanceQuitTeamReq& operator=(const TLevyTeamInstanceQuitTeamReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceQuitTeamReq& default_instance();

  void Swap(TLevyTeamInstanceQuitTeamReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceQuitTeamReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceQuitTeamReq& from);
  void MergeFrom(const TLevyTeamInstanceQuitTeamReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceQuitTeamReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceQuitTeamReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceQuitTeamReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceQuitTeamReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceKickOrQuitTeamRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceKickOrQuitTeamRsp : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceKickOrQuitTeamRsp();
  virtual ~TLevyTeamInstanceKickOrQuitTeamRsp();

  TLevyTeamInstanceKickOrQuitTeamRsp(const TLevyTeamInstanceKickOrQuitTeamRsp& from);

  inline TLevyTeamInstanceKickOrQuitTeamRsp& operator=(const TLevyTeamInstanceKickOrQuitTeamRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceKickOrQuitTeamRsp& default_instance();

  void Swap(TLevyTeamInstanceKickOrQuitTeamRsp* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceKickOrQuitTeamRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceKickOrQuitTeamRsp& from);
  void MergeFrom(const TLevyTeamInstanceKickOrQuitTeamRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.ELevyTeamKickOrQuitTeamRetCode RetCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceKickOrQuitTeamRsp</name>
  	<Function>
  		<name>retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ELevyTeamKickOrQuitTeamRetCode retcode() const;
  inline void set_retcode(::pb::ELevyTeamKickOrQuitTeamRetCode value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceKickOrQuitTeamRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int retcode_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceKickOrQuitTeamRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceChangeTeamModeReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceChangeTeamModeReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceChangeTeamModeReq();
  virtual ~TLevyTeamInstanceChangeTeamModeReq();

  TLevyTeamInstanceChangeTeamModeReq(const TLevyTeamInstanceChangeTeamModeReq& from);

  inline TLevyTeamInstanceChangeTeamModeReq& operator=(const TLevyTeamInstanceChangeTeamModeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceChangeTeamModeReq& default_instance();

  void Swap(TLevyTeamInstanceChangeTeamModeReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceChangeTeamModeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceChangeTeamModeReq& from);
  void MergeFrom(const TLevyTeamInstanceChangeTeamModeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceChangeTeamModeReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceChangeTeamModeReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.ECommonTeamMode TeamMode = 3;
  inline bool has_teammode() const;
  inline void clear_teammode();
  static const int kTeamModeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceChangeTeamModeReq</name>
  	<Function>
  		<name>teammode</name>
  		<replaceName>TeamMode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teammode</name>
  		<replaceName>TeamMode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teammode</name>
  		<replaceName>TeamMode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ECommonTeamMode teammode() const;
  inline void set_teammode(::pb::ECommonTeamMode value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceChangeTeamModeReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_teammode();
  inline void clear_has_teammode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  int teammode_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceChangeTeamModeReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceChangeTeamModeRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceChangeTeamModeRsp : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceChangeTeamModeRsp();
  virtual ~TLevyTeamInstanceChangeTeamModeRsp();

  TLevyTeamInstanceChangeTeamModeRsp(const TLevyTeamInstanceChangeTeamModeRsp& from);

  inline TLevyTeamInstanceChangeTeamModeRsp& operator=(const TLevyTeamInstanceChangeTeamModeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceChangeTeamModeRsp& default_instance();

  void Swap(TLevyTeamInstanceChangeTeamModeRsp* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceChangeTeamModeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceChangeTeamModeRsp& from);
  void MergeFrom(const TLevyTeamInstanceChangeTeamModeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.ECommonChangeTeamRetCode RetCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceChangeTeamModeRsp</name>
  	<Function>
  		<name>retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ECommonChangeTeamRetCode retcode() const;
  inline void set_retcode(::pb::ECommonChangeTeamRetCode value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceChangeTeamModeRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int retcode_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceChangeTeamModeRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceSetTeamMemberStatusReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceSetTeamMemberStatusReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceSetTeamMemberStatusReq();
  virtual ~TLevyTeamInstanceSetTeamMemberStatusReq();

  TLevyTeamInstanceSetTeamMemberStatusReq(const TLevyTeamInstanceSetTeamMemberStatusReq& from);

  inline TLevyTeamInstanceSetTeamMemberStatusReq& operator=(const TLevyTeamInstanceSetTeamMemberStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceSetTeamMemberStatusReq& default_instance();

  void Swap(TLevyTeamInstanceSetTeamMemberStatusReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceSetTeamMemberStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceSetTeamMemberStatusReq& from);
  void MergeFrom(const TLevyTeamInstanceSetTeamMemberStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceSetTeamMemberStatusReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceSetTeamMemberStatusReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.EHallMemberReadyStatus MemberStatus = 3;
  inline bool has_memberstatus() const;
  inline void clear_memberstatus();
  static const int kMemberStatusFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceSetTeamMemberStatusReq</name>
  	<Function>
  		<name>memberstatus</name>
  		<replaceName>MemberStatus</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_memberstatus</name>
  		<replaceName>MemberStatus</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_memberstatus</name>
  		<replaceName>MemberStatus</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EHallMemberReadyStatus memberstatus() const;
  inline void set_memberstatus(::pb::EHallMemberReadyStatus value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceSetTeamMemberStatusReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_memberstatus();
  inline void clear_has_memberstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  int memberstatus_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceSetTeamMemberStatusReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceSetTeamMemberStatusRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceSetTeamMemberStatusRsp : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceSetTeamMemberStatusRsp();
  virtual ~TLevyTeamInstanceSetTeamMemberStatusRsp();

  TLevyTeamInstanceSetTeamMemberStatusRsp(const TLevyTeamInstanceSetTeamMemberStatusRsp& from);

  inline TLevyTeamInstanceSetTeamMemberStatusRsp& operator=(const TLevyTeamInstanceSetTeamMemberStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceSetTeamMemberStatusRsp& default_instance();

  void Swap(TLevyTeamInstanceSetTeamMemberStatusRsp* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceSetTeamMemberStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceSetTeamMemberStatusRsp& from);
  void MergeFrom(const TLevyTeamInstanceSetTeamMemberStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.ECommonChangeTeamRetCode RetCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceSetTeamMemberStatusRsp</name>
  	<Function>
  		<name>retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ECommonChangeTeamRetCode retcode() const;
  inline void set_retcode(::pb::ECommonChangeTeamRetCode value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceSetTeamMemberStatusRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int retcode_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceSetTeamMemberStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceSetTeamStatusReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceSetTeamStatusReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceSetTeamStatusReq();
  virtual ~TLevyTeamInstanceSetTeamStatusReq();

  TLevyTeamInstanceSetTeamStatusReq(const TLevyTeamInstanceSetTeamStatusReq& from);

  inline TLevyTeamInstanceSetTeamStatusReq& operator=(const TLevyTeamInstanceSetTeamStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceSetTeamStatusReq& default_instance();

  void Swap(TLevyTeamInstanceSetTeamStatusReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceSetTeamStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceSetTeamStatusReq& from);
  void MergeFrom(const TLevyTeamInstanceSetTeamStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceSetTeamStatusReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceSetTeamStatusReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.EHallTeamType TeamStatus = 3;
  inline bool has_teamstatus() const;
  inline void clear_teamstatus();
  static const int kTeamStatusFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceSetTeamStatusReq</name>
  	<Function>
  		<name>teamstatus</name>
  		<replaceName>TeamStatus</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamstatus</name>
  		<replaceName>TeamStatus</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamstatus</name>
  		<replaceName>TeamStatus</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EHallTeamType teamstatus() const;
  inline void set_teamstatus(::pb::EHallTeamType value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceSetTeamStatusReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_teamstatus();
  inline void clear_has_teamstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  int teamstatus_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceSetTeamStatusReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceSetTeamStatusRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceSetTeamStatusRsp : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceSetTeamStatusRsp();
  virtual ~TLevyTeamInstanceSetTeamStatusRsp();

  TLevyTeamInstanceSetTeamStatusRsp(const TLevyTeamInstanceSetTeamStatusRsp& from);

  inline TLevyTeamInstanceSetTeamStatusRsp& operator=(const TLevyTeamInstanceSetTeamStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceSetTeamStatusRsp& default_instance();

  void Swap(TLevyTeamInstanceSetTeamStatusRsp* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceSetTeamStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceSetTeamStatusRsp& from);
  void MergeFrom(const TLevyTeamInstanceSetTeamStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.ECommonChangeTeamRetCode RetCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceSetTeamStatusRsp</name>
  	<Function>
  		<name>retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ECommonChangeTeamRetCode retcode() const;
  inline void set_retcode(::pb::ECommonChangeTeamRetCode value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceSetTeamStatusRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int retcode_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceSetTeamStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceTeamStartReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceTeamStartReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceTeamStartReq();
  virtual ~TLevyTeamInstanceTeamStartReq();

  TLevyTeamInstanceTeamStartReq(const TLevyTeamInstanceTeamStartReq& from);

  inline TLevyTeamInstanceTeamStartReq& operator=(const TLevyTeamInstanceTeamStartReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceTeamStartReq& default_instance();

  void Swap(TLevyTeamInstanceTeamStartReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceTeamStartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceTeamStartReq& from);
  void MergeFrom(const TLevyTeamInstanceTeamStartReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceTeamStartReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceTeamStartReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceTeamStartReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceTeamStartReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceBattleRecordNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceBattleRecordNotify : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceBattleRecordNotify();
  virtual ~TLevyTeamInstanceBattleRecordNotify();

  TLevyTeamInstanceBattleRecordNotify(const TLevyTeamInstanceBattleRecordNotify& from);

  inline TLevyTeamInstanceBattleRecordNotify& operator=(const TLevyTeamInstanceBattleRecordNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceBattleRecordNotify& default_instance();

  void Swap(TLevyTeamInstanceBattleRecordNotify* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceBattleRecordNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceBattleRecordNotify& from);
  void MergeFrom(const TLevyTeamInstanceBattleRecordNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 BattleIndex = 1;
  inline bool has_battleindex() const;
  inline void clear_battleindex();
  static const int kBattleIndexFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceBattleRecordNotify</name>
  	<Function>
  		<name>battleindex</name>
  		<replaceName>BattleIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleindex</name>
  		<replaceName>BattleIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleindex</name>
  		<replaceName>BattleIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 battleindex() const;
  inline void set_battleindex(::google::protobuf::uint32 value);

  // optional .pb.TBattleResult BattleResult = 2;
  inline bool has_battleresult() const;
  inline void clear_battleresult();
  static const int kBattleResultFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceBattleRecordNotify</name>
  	<Function>
  		<name>battleresult</name>
  		<replaceName>BattleResult</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleresult</name>
  		<replaceName>BattleResult</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_battleresult</name>
  		<replaceName>BattleResult</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleresult</name>
  		<replaceName>BattleResult</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBattleResult& battleresult() const;
  inline ::pb::TBattleResult* mutable_battleresult();
  inline ::pb::TBattleResult* release_battleresult();
  inline void set_allocated_battleresult(::pb::TBattleResult* battleresult);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceBattleRecordNotify)
 private:
  inline void set_has_battleindex();
  inline void clear_has_battleindex();
  inline void set_has_battleresult();
  inline void clear_has_battleresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TBattleResult* battleresult_;
  ::google::protobuf::uint32 battleindex_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceBattleRecordNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceBattleEndNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceBattleEndNotify : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceBattleEndNotify();
  virtual ~TLevyTeamInstanceBattleEndNotify();

  TLevyTeamInstanceBattleEndNotify(const TLevyTeamInstanceBattleEndNotify& from);

  inline TLevyTeamInstanceBattleEndNotify& operator=(const TLevyTeamInstanceBattleEndNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceBattleEndNotify& default_instance();

  void Swap(TLevyTeamInstanceBattleEndNotify* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceBattleEndNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceBattleEndNotify& from);
  void MergeFrom(const TLevyTeamInstanceBattleEndNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.ELevyTeamInstanceBattleResult BattleRes = 1;
  inline bool has_battleres() const;
  inline void clear_battleres();
  static const int kBattleResFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceBattleEndNotify</name>
  	<Function>
  		<name>battleres</name>
  		<replaceName>BattleRes</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleres</name>
  		<replaceName>BattleRes</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleres</name>
  		<replaceName>BattleRes</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ELevyTeamInstanceBattleResult battleres() const;
  inline void set_battleres(::pb::ELevyTeamInstanceBattleResult value);

  // optional uint32 BattleNum = 2;
  inline bool has_battlenum() const;
  inline void clear_battlenum();
  static const int kBattleNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceBattleEndNotify</name>
  	<Function>
  		<name>battlenum</name>
  		<replaceName>BattleNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battlenum</name>
  		<replaceName>BattleNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battlenum</name>
  		<replaceName>BattleNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 battlenum() const;
  inline void set_battlenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceBattleEndNotify)
 private:
  inline void set_has_battleres();
  inline void clear_has_battleres();
  inline void set_has_battlenum();
  inline void clear_has_battlenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int battleres_;
  ::google::protobuf::uint32 battlenum_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceBattleEndNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceAbortNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceAbortNotify : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceAbortNotify();
  virtual ~TLevyTeamInstanceAbortNotify();

  TLevyTeamInstanceAbortNotify(const TLevyTeamInstanceAbortNotify& from);

  inline TLevyTeamInstanceAbortNotify& operator=(const TLevyTeamInstanceAbortNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceAbortNotify& default_instance();

  void Swap(TLevyTeamInstanceAbortNotify* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceAbortNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceAbortNotify& from);
  void MergeFrom(const TLevyTeamInstanceAbortNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 TeamId = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceAbortNotify</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.ELevyTeamInstanceAbortReason AbortReason = 2;
  inline bool has_abortreason() const;
  inline void clear_abortreason();
  static const int kAbortReasonFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceAbortNotify</name>
  	<Function>
  		<name>abortreason</name>
  		<replaceName>AbortReason</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_abortreason</name>
  		<replaceName>AbortReason</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_abortreason</name>
  		<replaceName>AbortReason</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ELevyTeamInstanceAbortReason abortreason() const;
  inline void set_abortreason(::pb::ELevyTeamInstanceAbortReason value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceAbortNotify)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_abortreason();
  inline void clear_has_abortreason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 teamid_;
  int abortreason_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceAbortNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceGetInviteListReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceGetInviteListReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceGetInviteListReq();
  virtual ~TLevyTeamInstanceGetInviteListReq();

  TLevyTeamInstanceGetInviteListReq(const TLevyTeamInstanceGetInviteListReq& from);

  inline TLevyTeamInstanceGetInviteListReq& operator=(const TLevyTeamInstanceGetInviteListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceGetInviteListReq& default_instance();

  void Swap(TLevyTeamInstanceGetInviteListReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceGetInviteListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceGetInviteListReq& from);
  void MergeFrom(const TLevyTeamInstanceGetInviteListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetInviteListReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetInviteListReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.ELevyTeamInstanceGetListType InviteType = 3;
  inline bool has_invitetype() const;
  inline void clear_invitetype();
  static const int kInviteTypeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetInviteListReq</name>
  	<Function>
  		<name>invitetype</name>
  		<replaceName>InviteType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_invitetype</name>
  		<replaceName>InviteType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_invitetype</name>
  		<replaceName>InviteType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ELevyTeamInstanceGetListType invitetype() const;
  inline void set_invitetype(::pb::ELevyTeamInstanceGetListType value);

  // optional uint32 Num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetInviteListReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 Offset = 5;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetInviteListReq</name>
  	<Function>
  		<name>offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceGetInviteListReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_invitetype();
  inline void clear_has_invitetype();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_offset();
  inline void clear_has_offset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  int invitetype_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 offset_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceGetInviteListReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceGetInviteListRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceGetInviteListRsp : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceGetInviteListRsp();
  virtual ~TLevyTeamInstanceGetInviteListRsp();

  TLevyTeamInstanceGetInviteListRsp(const TLevyTeamInstanceGetInviteListRsp& from);

  inline TLevyTeamInstanceGetInviteListRsp& operator=(const TLevyTeamInstanceGetInviteListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceGetInviteListRsp& default_instance();

  void Swap(TLevyTeamInstanceGetInviteListRsp* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceGetInviteListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceGetInviteListRsp& from);
  void MergeFrom(const TLevyTeamInstanceGetInviteListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TUserSimpleInfo UserArr = 1;
  inline int userarr_size() const;
  inline void clear_userarr();
  static const int kUserArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetInviteListRsp</name>
  	<Function>
  		<name>userarr</name>
  		<replaceName>UserArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_userarr</name>
  		<replaceName>UserArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_userarr</name>
  		<replaceName>UserArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userarr</name>
  		<replaceName>UserArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>userarr_size</name>
  		<replaceName>UserArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userarr(int index) const;
  inline ::pb::TUserSimpleInfo* mutable_userarr(int index);
  inline ::pb::TUserSimpleInfo* add_userarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >&
      userarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >*
      mutable_userarr();

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceGetInviteListRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo > userarr_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceGetInviteListRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceTeamInviteReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceTeamInviteReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceTeamInviteReq();
  virtual ~TLevyTeamInstanceTeamInviteReq();

  TLevyTeamInstanceTeamInviteReq(const TLevyTeamInstanceTeamInviteReq& from);

  inline TLevyTeamInstanceTeamInviteReq& operator=(const TLevyTeamInstanceTeamInviteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceTeamInviteReq& default_instance();

  void Swap(TLevyTeamInstanceTeamInviteReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceTeamInviteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceTeamInviteReq& from);
  void MergeFrom(const TLevyTeamInstanceTeamInviteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceTeamInviteReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceTeamInviteReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // repeated uint64 UidArr = 3;
  inline int uidarr_size() const;
  inline void clear_uidarr();
  static const int kUidArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceTeamInviteReq</name>
  	<Function>
  		<name>uidarr</name>
  		<replaceName>UidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_uidarr</name>
  		<replaceName>UidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_uidarr</name>
  		<replaceName>UidArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uidarr</name>
  		<replaceName>UidArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>uidarr_size</name>
  		<replaceName>UidArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uidarr(int index) const;
  inline void set_uidarr(int index, ::google::protobuf::uint64 value);
  inline void add_uidarr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      uidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_uidarr();

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceTeamInviteReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > uidarr_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceTeamInviteReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceInviteNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceInviteNotify : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceInviteNotify();
  virtual ~TLevyTeamInstanceInviteNotify();

  TLevyTeamInstanceInviteNotify(const TLevyTeamInstanceInviteNotify& from);

  inline TLevyTeamInstanceInviteNotify& operator=(const TLevyTeamInstanceInviteNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceInviteNotify& default_instance();

  void Swap(TLevyTeamInstanceInviteNotify* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceInviteNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceInviteNotify& from);
  void MergeFrom(const TLevyTeamInstanceInviteNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceInviteNotify</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceInviteNotify</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.TSimpleLevyInstanceTeamInfo TeamInfo = 3;
  inline bool has_teaminfo() const;
  inline void clear_teaminfo();
  static const int kTeamInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceInviteNotify</name>
  	<Function>
  		<name>teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSimpleLevyInstanceTeamInfo& teaminfo() const;
  inline ::pb::TSimpleLevyInstanceTeamInfo* mutable_teaminfo();
  inline ::pb::TSimpleLevyInstanceTeamInfo* release_teaminfo();
  inline void set_allocated_teaminfo(::pb::TSimpleLevyInstanceTeamInfo* teaminfo);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceInviteNotify)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_teaminfo();
  inline void clear_has_teaminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  ::pb::TSimpleLevyInstanceTeamInfo* teaminfo_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceInviteNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceAtkInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceAtkInfo : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceAtkInfo();
  virtual ~TLevyTeamInstanceAtkInfo();

  TLevyTeamInstanceAtkInfo(const TLevyTeamInstanceAtkInfo& from);

  inline TLevyTeamInstanceAtkInfo& operator=(const TLevyTeamInstanceAtkInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceAtkInfo& default_instance();

  void Swap(TLevyTeamInstanceAtkInfo* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceAtkInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceAtkInfo& from);
  void MergeFrom(const TLevyTeamInstanceAtkInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 TeamId = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceAtkInfo</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.ELevyTeamInstanceBattleResult BattleRes = 2;
  inline bool has_battleres() const;
  inline void clear_battleres();
  static const int kBattleResFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceAtkInfo</name>
  	<Function>
  		<name>battleres</name>
  		<replaceName>BattleRes</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleres</name>
  		<replaceName>BattleRes</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleres</name>
  		<replaceName>BattleRes</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ELevyTeamInstanceBattleResult battleres() const;
  inline void set_battleres(::pb::ELevyTeamInstanceBattleResult value);

  // optional uint64 AtkTime = 3;
  inline bool has_atktime() const;
  inline void clear_atktime();
  static const int kAtkTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceAtkInfo</name>
  	<Function>
  		<name>atktime</name>
  		<replaceName>AtkTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_atktime</name>
  		<replaceName>AtkTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_atktime</name>
  		<replaceName>AtkTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 atktime() const;
  inline void set_atktime(::google::protobuf::uint64 value);

  // repeated .pb.TUserSimpleInfo MemArr = 4;
  inline int memarr_size() const;
  inline void clear_memarr();
  static const int kMemArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceAtkInfo</name>
  	<Function>
  		<name>memarr</name>
  		<replaceName>MemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_memarr</name>
  		<replaceName>MemArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_memarr</name>
  		<replaceName>MemArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_memarr</name>
  		<replaceName>MemArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>memarr_size</name>
  		<replaceName>MemArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& memarr(int index) const;
  inline ::pb::TUserSimpleInfo* mutable_memarr(int index);
  inline ::pb::TUserSimpleInfo* add_memarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >&
      memarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >*
      mutable_memarr();

  // optional uint32 BattleNum = 5;
  inline bool has_battlenum() const;
  inline void clear_battlenum();
  static const int kBattleNumFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceAtkInfo</name>
  	<Function>
  		<name>battlenum</name>
  		<replaceName>BattleNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battlenum</name>
  		<replaceName>BattleNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battlenum</name>
  		<replaceName>BattleNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 battlenum() const;
  inline void set_battlenum(::google::protobuf::uint32 value);

  // optional .pb.ECommonTeamMode TeamMode = 6;
  inline bool has_teammode() const;
  inline void clear_teammode();
  static const int kTeamModeFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceAtkInfo</name>
  	<Function>
  		<name>teammode</name>
  		<replaceName>TeamMode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teammode</name>
  		<replaceName>TeamMode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teammode</name>
  		<replaceName>TeamMode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ECommonTeamMode teammode() const;
  inline void set_teammode(::pb::ECommonTeamMode value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceAtkInfo)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_battleres();
  inline void clear_has_battleres();
  inline void set_has_atktime();
  inline void clear_has_atktime();
  inline void set_has_battlenum();
  inline void clear_has_battlenum();
  inline void set_has_teammode();
  inline void clear_has_teammode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 atktime_;
  int battleres_;
  ::google::protobuf::uint32 battlenum_;
  ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo > memarr_;
  int teammode_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceAtkInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceGetAtkListReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceGetAtkListReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceGetAtkListReq();
  virtual ~TLevyTeamInstanceGetAtkListReq();

  TLevyTeamInstanceGetAtkListReq(const TLevyTeamInstanceGetAtkListReq& from);

  inline TLevyTeamInstanceGetAtkListReq& operator=(const TLevyTeamInstanceGetAtkListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceGetAtkListReq& default_instance();

  void Swap(TLevyTeamInstanceGetAtkListReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceGetAtkListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceGetAtkListReq& from);
  void MergeFrom(const TLevyTeamInstanceGetAtkListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetAtkListReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 Offset = 2;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetAtkListReq</name>
  	<Function>
  		<name>offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceGetAtkListReq)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_offset();
  inline void clear_has_offset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 offset_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceGetAtkListReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceGetAtkListRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceGetAtkListRsp : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceGetAtkListRsp();
  virtual ~TLevyTeamInstanceGetAtkListRsp();

  TLevyTeamInstanceGetAtkListRsp(const TLevyTeamInstanceGetAtkListRsp& from);

  inline TLevyTeamInstanceGetAtkListRsp& operator=(const TLevyTeamInstanceGetAtkListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceGetAtkListRsp& default_instance();

  void Swap(TLevyTeamInstanceGetAtkListRsp* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceGetAtkListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceGetAtkListRsp& from);
  void MergeFrom(const TLevyTeamInstanceGetAtkListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TLevyTeamInstanceAtkInfo AtkList = 1;
  inline int atklist_size() const;
  inline void clear_atklist();
  static const int kAtkListFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetAtkListRsp</name>
  	<Function>
  		<name>atklist</name>
  		<replaceName>AtkList</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_atklist</name>
  		<replaceName>AtkList</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_atklist</name>
  		<replaceName>AtkList</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_atklist</name>
  		<replaceName>AtkList</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>atklist_size</name>
  		<replaceName>AtkList</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TLevyTeamInstanceAtkInfo& atklist(int index) const;
  inline ::pb::TLevyTeamInstanceAtkInfo* mutable_atklist(int index);
  inline ::pb::TLevyTeamInstanceAtkInfo* add_atklist();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TLevyTeamInstanceAtkInfo >&
      atklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TLevyTeamInstanceAtkInfo >*
      mutable_atklist();

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceGetAtkListRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TLevyTeamInstanceAtkInfo > atklist_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceGetAtkListRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceGetBattleRecordReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceGetBattleRecordReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceGetBattleRecordReq();
  virtual ~TLevyTeamInstanceGetBattleRecordReq();

  TLevyTeamInstanceGetBattleRecordReq(const TLevyTeamInstanceGetBattleRecordReq& from);

  inline TLevyTeamInstanceGetBattleRecordReq& operator=(const TLevyTeamInstanceGetBattleRecordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceGetBattleRecordReq& default_instance();

  void Swap(TLevyTeamInstanceGetBattleRecordReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceGetBattleRecordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceGetBattleRecordReq& from);
  void MergeFrom(const TLevyTeamInstanceGetBattleRecordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 TeamId = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetBattleRecordReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint32 RecordNum = 2;
  inline bool has_recordnum() const;
  inline void clear_recordnum();
  static const int kRecordNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetBattleRecordReq</name>
  	<Function>
  		<name>recordnum</name>
  		<replaceName>RecordNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recordnum</name>
  		<replaceName>RecordNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recordnum</name>
  		<replaceName>RecordNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recordnum() const;
  inline void set_recordnum(::google::protobuf::uint32 value);

  // optional uint32 RecordOffset = 3;
  inline bool has_recordoffset() const;
  inline void clear_recordoffset();
  static const int kRecordOffsetFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetBattleRecordReq</name>
  	<Function>
  		<name>recordoffset</name>
  		<replaceName>RecordOffset</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_recordoffset</name>
  		<replaceName>RecordOffset</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_recordoffset</name>
  		<replaceName>RecordOffset</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 recordoffset() const;
  inline void set_recordoffset(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceGetBattleRecordReq)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_recordnum();
  inline void clear_has_recordnum();
  inline void set_has_recordoffset();
  inline void clear_has_recordoffset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint32 recordnum_;
  ::google::protobuf::uint32 recordoffset_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceGetBattleRecordReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceRewardInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceRewardInfo : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceRewardInfo();
  virtual ~TLevyTeamInstanceRewardInfo();

  TLevyTeamInstanceRewardInfo(const TLevyTeamInstanceRewardInfo& from);

  inline TLevyTeamInstanceRewardInfo& operator=(const TLevyTeamInstanceRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceRewardInfo& default_instance();

  void Swap(TLevyTeamInstanceRewardInfo* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceRewardInfo& from);
  void MergeFrom(const TLevyTeamInstanceRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArr = 1;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceRewardInfo</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarr(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarr(int index);
  inline ::pb::TCommonReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarr();

  // optional uint32 CrossLevyScore = 2;
  inline bool has_crosslevyscore() const;
  inline void clear_crosslevyscore();
  static const int kCrossLevyScoreFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceRewardInfo</name>
  	<Function>
  		<name>crosslevyscore</name>
  		<replaceName>CrossLevyScore</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_crosslevyscore</name>
  		<replaceName>CrossLevyScore</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_crosslevyscore</name>
  		<replaceName>CrossLevyScore</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 crosslevyscore() const;
  inline void set_crosslevyscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceRewardInfo)
 private:
  inline void set_has_crosslevyscore();
  inline void clear_has_crosslevyscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarr_;
  ::google::protobuf::uint32 crosslevyscore_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceGetBattleRecordRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceGetBattleRecordRsp : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceGetBattleRecordRsp();
  virtual ~TLevyTeamInstanceGetBattleRecordRsp();

  TLevyTeamInstanceGetBattleRecordRsp(const TLevyTeamInstanceGetBattleRecordRsp& from);

  inline TLevyTeamInstanceGetBattleRecordRsp& operator=(const TLevyTeamInstanceGetBattleRecordRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceGetBattleRecordRsp& default_instance();

  void Swap(TLevyTeamInstanceGetBattleRecordRsp* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceGetBattleRecordRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceGetBattleRecordRsp& from);
  void MergeFrom(const TLevyTeamInstanceGetBattleRecordRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.ELevyTeamInstanceBattleResult BattleRes = 1;
  inline bool has_battleres() const;
  inline void clear_battleres();
  static const int kBattleResFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetBattleRecordRsp</name>
  	<Function>
  		<name>battleres</name>
  		<replaceName>BattleRes</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleres</name>
  		<replaceName>BattleRes</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleres</name>
  		<replaceName>BattleRes</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ELevyTeamInstanceBattleResult battleres() const;
  inline void set_battleres(::pb::ELevyTeamInstanceBattleResult value);

  // optional .pb.TLevyTeamInstanceRewardInfo RewardInfo = 2;
  inline bool has_rewardinfo() const;
  inline void clear_rewardinfo();
  static const int kRewardInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetBattleRecordRsp</name>
  	<Function>
  		<name>rewardinfo</name>
  		<replaceName>RewardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rewardinfo</name>
  		<replaceName>RewardInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_rewardinfo</name>
  		<replaceName>RewardInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardinfo</name>
  		<replaceName>RewardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TLevyTeamInstanceRewardInfo& rewardinfo() const;
  inline ::pb::TLevyTeamInstanceRewardInfo* mutable_rewardinfo();
  inline ::pb::TLevyTeamInstanceRewardInfo* release_rewardinfo();
  inline void set_allocated_rewardinfo(::pb::TLevyTeamInstanceRewardInfo* rewardinfo);

  // repeated .pb.TBattleResult ResultArr = 3;
  inline int resultarr_size() const;
  inline void clear_resultarr();
  static const int kResultArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceGetBattleRecordRsp</name>
  	<Function>
  		<name>resultarr</name>
  		<replaceName>ResultArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_resultarr</name>
  		<replaceName>ResultArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_resultarr</name>
  		<replaceName>ResultArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_resultarr</name>
  		<replaceName>ResultArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>resultarr_size</name>
  		<replaceName>ResultArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBattleResult& resultarr(int index) const;
  inline ::pb::TBattleResult* mutable_resultarr(int index);
  inline ::pb::TBattleResult* add_resultarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TBattleResult >&
      resultarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TBattleResult >*
      mutable_resultarr();

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceGetBattleRecordRsp)
 private:
  inline void set_has_battleres();
  inline void clear_has_battleres();
  inline void set_has_rewardinfo();
  inline void clear_has_rewardinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TLevyTeamInstanceRewardInfo* rewardinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TBattleResult > resultarr_;
  int battleres_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceGetBattleRecordRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceHallMemberInfoData</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceHallMemberInfoData : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceHallMemberInfoData();
  virtual ~TLevyTeamInstanceHallMemberInfoData();

  TLevyTeamInstanceHallMemberInfoData(const TLevyTeamInstanceHallMemberInfoData& from);

  inline TLevyTeamInstanceHallMemberInfoData& operator=(const TLevyTeamInstanceHallMemberInfoData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceHallMemberInfoData& default_instance();

  void Swap(TLevyTeamInstanceHallMemberInfoData* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceHallMemberInfoData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceHallMemberInfoData& from);
  void MergeFrom(const TLevyTeamInstanceHallMemberInfoData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUserSimpleInfo UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceHallMemberInfoData</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // optional .pb.ECommonTeamMode MemMode = 2;
  inline bool has_memmode() const;
  inline void clear_memmode();
  static const int kMemModeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceHallMemberInfoData</name>
  	<Function>
  		<name>memmode</name>
  		<replaceName>MemMode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_memmode</name>
  		<replaceName>MemMode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_memmode</name>
  		<replaceName>MemMode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ECommonTeamMode memmode() const;
  inline void set_memmode(::pb::ECommonTeamMode value);

  // optional uint32 SquadNum = 3;
  inline bool has_squadnum() const;
  inline void clear_squadnum();
  static const int kSquadNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceHallMemberInfoData</name>
  	<Function>
  		<name>squadnum</name>
  		<replaceName>SquadNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_squadnum</name>
  		<replaceName>SquadNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_squadnum</name>
  		<replaceName>SquadNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 squadnum() const;
  inline void set_squadnum(::google::protobuf::uint32 value);

  // optional uint64 TotalFightForce = 4;
  inline bool has_totalfightforce() const;
  inline void clear_totalfightforce();
  static const int kTotalFightForceFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceHallMemberInfoData</name>
  	<Function>
  		<name>totalfightforce</name>
  		<replaceName>TotalFightForce</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totalfightforce</name>
  		<replaceName>TotalFightForce</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totalfightforce</name>
  		<replaceName>TotalFightForce</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 totalfightforce() const;
  inline void set_totalfightforce(::google::protobuf::uint64 value);

  // optional uint64 TeamOrder = 5;
  inline bool has_teamorder() const;
  inline void clear_teamorder();
  static const int kTeamOrderFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceHallMemberInfoData</name>
  	<Function>
  		<name>teamorder</name>
  		<replaceName>TeamOrder</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamorder</name>
  		<replaceName>TeamOrder</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamorder</name>
  		<replaceName>TeamOrder</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamorder() const;
  inline void set_teamorder(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceHallMemberInfoData)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_memmode();
  inline void clear_has_memmode();
  inline void set_has_squadnum();
  inline void clear_has_squadnum();
  inline void set_has_totalfightforce();
  inline void clear_has_totalfightforce();
  inline void set_has_teamorder();
  inline void clear_has_teamorder();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUserSimpleInfo* userinfo_;
  int memmode_;
  ::google::protobuf::uint32 squadnum_;
  ::google::protobuf::uint64 totalfightforce_;
  ::google::protobuf::uint64 teamorder_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceHallMemberInfoData* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceTeamSpecificInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceTeamSpecificInfo : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceTeamSpecificInfo();
  virtual ~TLevyTeamInstanceTeamSpecificInfo();

  TLevyTeamInstanceTeamSpecificInfo(const TLevyTeamInstanceTeamSpecificInfo& from);

  inline TLevyTeamInstanceTeamSpecificInfo& operator=(const TLevyTeamInstanceTeamSpecificInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceTeamSpecificInfo& default_instance();

  void Swap(TLevyTeamInstanceTeamSpecificInfo* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceTeamSpecificInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceTeamSpecificInfo& from);
  void MergeFrom(const TLevyTeamInstanceTeamSpecificInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 InstanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceTeamSpecificInfo</name>
  	<Function>
  		<name>instanceid</name>
  		<replaceName>InstanceId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_instanceid</name>
  		<replaceName>InstanceId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_instanceid</name>
  		<replaceName>InstanceId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint32 value);

  // repeated uint32 MonsterIdArr = 2;
  inline int monsteridarr_size() const;
  inline void clear_monsteridarr();
  static const int kMonsterIdArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceTeamSpecificInfo</name>
  	<Function>
  		<name>monsteridarr</name>
  		<replaceName>MonsterIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_monsteridarr</name>
  		<replaceName>MonsterIdArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_monsteridarr</name>
  		<replaceName>MonsterIdArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_monsteridarr</name>
  		<replaceName>MonsterIdArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>monsteridarr_size</name>
  		<replaceName>MonsterIdArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 monsteridarr(int index) const;
  inline void set_monsteridarr(int index, ::google::protobuf::uint32 value);
  inline void add_monsteridarr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      monsteridarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_monsteridarr();

  // optional uint32 DayIndex = 3;
  inline bool has_dayindex() const;
  inline void clear_dayindex();
  static const int kDayIndexFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceTeamSpecificInfo</name>
  	<Function>
  		<name>dayindex</name>
  		<replaceName>DayIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_dayindex</name>
  		<replaceName>DayIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_dayindex</name>
  		<replaceName>DayIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 dayindex() const;
  inline void set_dayindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceTeamSpecificInfo)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_dayindex();
  inline void clear_has_dayindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > monsteridarr_;
  ::google::protobuf::uint32 instanceid_;
  ::google::protobuf::uint32 dayindex_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceTeamSpecificInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceQuickMatchReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceQuickMatchReq : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceQuickMatchReq();
  virtual ~TLevyTeamInstanceQuickMatchReq();

  TLevyTeamInstanceQuickMatchReq(const TLevyTeamInstanceQuickMatchReq& from);

  inline TLevyTeamInstanceQuickMatchReq& operator=(const TLevyTeamInstanceQuickMatchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceQuickMatchReq& default_instance();

  void Swap(TLevyTeamInstanceQuickMatchReq* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceQuickMatchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceQuickMatchReq& from);
  void MergeFrom(const TLevyTeamInstanceQuickMatchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceQuickMatchReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceQuickMatchReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceQuickMatchReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceQuickMatchReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TLevyTeamInstanceQuickMatchRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/LevyTeamInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TLevyTeamInstanceQuickMatchRsp : public ::google::protobuf::Message {
 public:
  TLevyTeamInstanceQuickMatchRsp();
  virtual ~TLevyTeamInstanceQuickMatchRsp();

  TLevyTeamInstanceQuickMatchRsp(const TLevyTeamInstanceQuickMatchRsp& from);

  inline TLevyTeamInstanceQuickMatchRsp& operator=(const TLevyTeamInstanceQuickMatchRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TLevyTeamInstanceQuickMatchRsp& default_instance();

  void Swap(TLevyTeamInstanceQuickMatchRsp* other);

  // implements Message ----------------------------------------------

  TLevyTeamInstanceQuickMatchRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TLevyTeamInstanceQuickMatchRsp& from);
  void MergeFrom(const TLevyTeamInstanceQuickMatchRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.EJoinLevyInstanceTeamErrorCode ErrorCode = 1;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceQuickMatchRsp</name>
  	<Function>
  		<name>errorcode</name>
  		<replaceName>ErrorCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_errorcode</name>
  		<replaceName>ErrorCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_errorcode</name>
  		<replaceName>ErrorCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EJoinLevyInstanceTeamErrorCode errorcode() const;
  inline void set_errorcode(::pb::EJoinLevyInstanceTeamErrorCode value);

  // optional .pb.TLevyInstanceTeamInfo TeamInfo = 2;
  inline bool has_teaminfo() const;
  inline void clear_teaminfo();
  static const int kTeamInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TLevyTeamInstanceQuickMatchRsp</name>
  	<Function>
  		<name>teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TLevyInstanceTeamInfo& teaminfo() const;
  inline ::pb::TLevyInstanceTeamInfo* mutable_teaminfo();
  inline ::pb::TLevyInstanceTeamInfo* release_teaminfo();
  inline void set_allocated_teaminfo(::pb::TLevyInstanceTeamInfo* teaminfo);

  // @@protoc_insertion_point(class_scope:pb.TLevyTeamInstanceQuickMatchRsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_teaminfo();
  inline void clear_has_teaminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TLevyInstanceTeamInfo* teaminfo_;
  int errorcode_;
  friend void  protobuf_AddDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fLevyTeamInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fLevyTeamInstance_2eproto();

  void InitAsDefaultInstance();
  static TLevyTeamInstanceQuickMatchRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TSimpleLevyInstanceTeamInfo

// optional uint64 RoomId = 1;
inline bool TSimpleLevyInstanceTeamInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSimpleLevyInstanceTeamInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSimpleLevyInstanceTeamInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSimpleLevyInstanceTeamInfo::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TSimpleLevyInstanceTeamInfo::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TSimpleLevyInstanceTeamInfo.RoomId)
  return roomid_;
}
inline void TSimpleLevyInstanceTeamInfo::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSimpleLevyInstanceTeamInfo.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TSimpleLevyInstanceTeamInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSimpleLevyInstanceTeamInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSimpleLevyInstanceTeamInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSimpleLevyInstanceTeamInfo::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TSimpleLevyInstanceTeamInfo::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TSimpleLevyInstanceTeamInfo.TeamId)
  return teamid_;
}
inline void TSimpleLevyInstanceTeamInfo::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSimpleLevyInstanceTeamInfo.TeamId)
}

// optional .pb.TUserSimpleInfo LeaderUserInfo = 3;
inline bool TSimpleLevyInstanceTeamInfo::has_leaderuserinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TSimpleLevyInstanceTeamInfo::set_has_leaderuserinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TSimpleLevyInstanceTeamInfo::clear_has_leaderuserinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TSimpleLevyInstanceTeamInfo::clear_leaderuserinfo() {
  if (leaderuserinfo_ != NULL) leaderuserinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_leaderuserinfo();
}
inline const ::pb::TUserSimpleInfo& TSimpleLevyInstanceTeamInfo::leaderuserinfo() const {
  // @@protoc_insertion_point(field_get:pb.TSimpleLevyInstanceTeamInfo.LeaderUserInfo)
  return leaderuserinfo_ != NULL ? *leaderuserinfo_ : *default_instance_->leaderuserinfo_;
}
inline ::pb::TUserSimpleInfo* TSimpleLevyInstanceTeamInfo::mutable_leaderuserinfo() {
  set_has_leaderuserinfo();
  if (leaderuserinfo_ == NULL) leaderuserinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TSimpleLevyInstanceTeamInfo.LeaderUserInfo)
  return leaderuserinfo_;
}
inline ::pb::TUserSimpleInfo* TSimpleLevyInstanceTeamInfo::release_leaderuserinfo() {
  clear_has_leaderuserinfo();
  ::pb::TUserSimpleInfo* temp = leaderuserinfo_;
  leaderuserinfo_ = NULL;
  return temp;
}
inline void TSimpleLevyInstanceTeamInfo::set_allocated_leaderuserinfo(::pb::TUserSimpleInfo* leaderuserinfo) {
  delete leaderuserinfo_;
  leaderuserinfo_ = leaderuserinfo;
  if (leaderuserinfo) {
    set_has_leaderuserinfo();
  } else {
    clear_has_leaderuserinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TSimpleLevyInstanceTeamInfo.LeaderUserInfo)
}

// optional uint32 TeamUserNum = 4;
inline bool TSimpleLevyInstanceTeamInfo::has_teamusernum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TSimpleLevyInstanceTeamInfo::set_has_teamusernum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TSimpleLevyInstanceTeamInfo::clear_has_teamusernum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TSimpleLevyInstanceTeamInfo::clear_teamusernum() {
  teamusernum_ = 0u;
  clear_has_teamusernum();
}
inline ::google::protobuf::uint32 TSimpleLevyInstanceTeamInfo::teamusernum() const {
  // @@protoc_insertion_point(field_get:pb.TSimpleLevyInstanceTeamInfo.TeamUserNum)
  return teamusernum_;
}
inline void TSimpleLevyInstanceTeamInfo::set_teamusernum(::google::protobuf::uint32 value) {
  set_has_teamusernum();
  teamusernum_ = value;
  // @@protoc_insertion_point(field_set:pb.TSimpleLevyInstanceTeamInfo.TeamUserNum)
}

// optional uint32 InstanceId = 5;
inline bool TSimpleLevyInstanceTeamInfo::has_instanceid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TSimpleLevyInstanceTeamInfo::set_has_instanceid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TSimpleLevyInstanceTeamInfo::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TSimpleLevyInstanceTeamInfo::clear_instanceid() {
  instanceid_ = 0u;
  clear_has_instanceid();
}
inline ::google::protobuf::uint32 TSimpleLevyInstanceTeamInfo::instanceid() const {
  // @@protoc_insertion_point(field_get:pb.TSimpleLevyInstanceTeamInfo.InstanceId)
  return instanceid_;
}
inline void TSimpleLevyInstanceTeamInfo::set_instanceid(::google::protobuf::uint32 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSimpleLevyInstanceTeamInfo.InstanceId)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceMemberInfo

// optional .pb.TUserSimpleInfo UserInfo = 1;
inline bool TLevyTeamInstanceMemberInfo::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceMemberInfo::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceMemberInfo::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceMemberInfo::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TLevyTeamInstanceMemberInfo::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceMemberInfo.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TLevyTeamInstanceMemberInfo::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceMemberInfo.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TLevyTeamInstanceMemberInfo::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TLevyTeamInstanceMemberInfo::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TLevyTeamInstanceMemberInfo.UserInfo)
}

// optional uint32 SquadNum = 2;
inline bool TLevyTeamInstanceMemberInfo::has_squadnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceMemberInfo::set_has_squadnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceMemberInfo::clear_has_squadnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceMemberInfo::clear_squadnum() {
  squadnum_ = 0u;
  clear_has_squadnum();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceMemberInfo::squadnum() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceMemberInfo.SquadNum)
  return squadnum_;
}
inline void TLevyTeamInstanceMemberInfo::set_squadnum(::google::protobuf::uint32 value) {
  set_has_squadnum();
  squadnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceMemberInfo.SquadNum)
}

// optional uint64 TotalFightForce = 3;
inline bool TLevyTeamInstanceMemberInfo::has_totalfightforce() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevyTeamInstanceMemberInfo::set_has_totalfightforce() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevyTeamInstanceMemberInfo::clear_has_totalfightforce() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevyTeamInstanceMemberInfo::clear_totalfightforce() {
  totalfightforce_ = GOOGLE_ULONGLONG(0);
  clear_has_totalfightforce();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceMemberInfo::totalfightforce() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceMemberInfo.TotalFightForce)
  return totalfightforce_;
}
inline void TLevyTeamInstanceMemberInfo::set_totalfightforce(::google::protobuf::uint64 value) {
  set_has_totalfightforce();
  totalfightforce_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceMemberInfo.TotalFightForce)
}

// optional .pb.ECommonTeamMode TeamMode = 4;
inline bool TLevyTeamInstanceMemberInfo::has_teammode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TLevyTeamInstanceMemberInfo::set_has_teammode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TLevyTeamInstanceMemberInfo::clear_has_teammode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TLevyTeamInstanceMemberInfo::clear_teammode() {
  teammode_ = 0;
  clear_has_teammode();
}
inline ::pb::ECommonTeamMode TLevyTeamInstanceMemberInfo::teammode() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceMemberInfo.TeamMode)
  return static_cast< ::pb::ECommonTeamMode >(teammode_);
}
inline void TLevyTeamInstanceMemberInfo::set_teammode(::pb::ECommonTeamMode value) {
  assert(::pb::ECommonTeamMode_IsValid(value));
  set_has_teammode();
  teammode_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceMemberInfo.TeamMode)
}

// optional .pb.EHallMemberReadyStatus MemberStatus = 5;
inline bool TLevyTeamInstanceMemberInfo::has_memberstatus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TLevyTeamInstanceMemberInfo::set_has_memberstatus() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TLevyTeamInstanceMemberInfo::clear_has_memberstatus() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TLevyTeamInstanceMemberInfo::clear_memberstatus() {
  memberstatus_ = 1;
  clear_has_memberstatus();
}
inline ::pb::EHallMemberReadyStatus TLevyTeamInstanceMemberInfo::memberstatus() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceMemberInfo.MemberStatus)
  return static_cast< ::pb::EHallMemberReadyStatus >(memberstatus_);
}
inline void TLevyTeamInstanceMemberInfo::set_memberstatus(::pb::EHallMemberReadyStatus value) {
  assert(::pb::EHallMemberReadyStatus_IsValid(value));
  set_has_memberstatus();
  memberstatus_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceMemberInfo.MemberStatus)
}

// -------------------------------------------------------------------

// TLevyInstanceTeamInfo

// optional uint64 RoomId = 1;
inline bool TLevyInstanceTeamInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyInstanceTeamInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyInstanceTeamInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyInstanceTeamInfo::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TLevyInstanceTeamInfo::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyInstanceTeamInfo.RoomId)
  return roomid_;
}
inline void TLevyInstanceTeamInfo::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyInstanceTeamInfo.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TLevyInstanceTeamInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyInstanceTeamInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyInstanceTeamInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyInstanceTeamInfo::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyInstanceTeamInfo::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyInstanceTeamInfo.TeamId)
  return teamid_;
}
inline void TLevyInstanceTeamInfo::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyInstanceTeamInfo.TeamId)
}

// optional uint64 LeaderUid = 3;
inline bool TLevyInstanceTeamInfo::has_leaderuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevyInstanceTeamInfo::set_has_leaderuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevyInstanceTeamInfo::clear_has_leaderuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevyInstanceTeamInfo::clear_leaderuid() {
  leaderuid_ = GOOGLE_ULONGLONG(0);
  clear_has_leaderuid();
}
inline ::google::protobuf::uint64 TLevyInstanceTeamInfo::leaderuid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyInstanceTeamInfo.LeaderUid)
  return leaderuid_;
}
inline void TLevyInstanceTeamInfo::set_leaderuid(::google::protobuf::uint64 value) {
  set_has_leaderuid();
  leaderuid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyInstanceTeamInfo.LeaderUid)
}

// repeated .pb.TLevyTeamInstanceMemberInfo TeamUserArr = 4;
inline int TLevyInstanceTeamInfo::teamuserarr_size() const {
  return teamuserarr_.size();
}
inline void TLevyInstanceTeamInfo::clear_teamuserarr() {
  teamuserarr_.Clear();
}
inline const ::pb::TLevyTeamInstanceMemberInfo& TLevyInstanceTeamInfo::teamuserarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TLevyInstanceTeamInfo.TeamUserArr)
  return teamuserarr_.Get(index);
}
inline ::pb::TLevyTeamInstanceMemberInfo* TLevyInstanceTeamInfo::mutable_teamuserarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TLevyInstanceTeamInfo.TeamUserArr)
  return teamuserarr_.Mutable(index);
}
inline ::pb::TLevyTeamInstanceMemberInfo* TLevyInstanceTeamInfo::add_teamuserarr() {
  // @@protoc_insertion_point(field_add:pb.TLevyInstanceTeamInfo.TeamUserArr)
  return teamuserarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TLevyTeamInstanceMemberInfo >&
TLevyInstanceTeamInfo::teamuserarr() const {
  // @@protoc_insertion_point(field_list:pb.TLevyInstanceTeamInfo.TeamUserArr)
  return teamuserarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TLevyTeamInstanceMemberInfo >*
TLevyInstanceTeamInfo::mutable_teamuserarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TLevyInstanceTeamInfo.TeamUserArr)
  return &teamuserarr_;
}

// optional uint32 InstanceId = 5;
inline bool TLevyInstanceTeamInfo::has_instanceid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TLevyInstanceTeamInfo::set_has_instanceid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TLevyInstanceTeamInfo::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TLevyInstanceTeamInfo::clear_instanceid() {
  instanceid_ = 0u;
  clear_has_instanceid();
}
inline ::google::protobuf::uint32 TLevyInstanceTeamInfo::instanceid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyInstanceTeamInfo.InstanceId)
  return instanceid_;
}
inline void TLevyInstanceTeamInfo::set_instanceid(::google::protobuf::uint32 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyInstanceTeamInfo.InstanceId)
}

// optional .pb.EHallTeamType TeamPrivateType = 6;
inline bool TLevyInstanceTeamInfo::has_teamprivatetype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TLevyInstanceTeamInfo::set_has_teamprivatetype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TLevyInstanceTeamInfo::clear_has_teamprivatetype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TLevyInstanceTeamInfo::clear_teamprivatetype() {
  teamprivatetype_ = 1;
  clear_has_teamprivatetype();
}
inline ::pb::EHallTeamType TLevyInstanceTeamInfo::teamprivatetype() const {
  // @@protoc_insertion_point(field_get:pb.TLevyInstanceTeamInfo.TeamPrivateType)
  return static_cast< ::pb::EHallTeamType >(teamprivatetype_);
}
inline void TLevyInstanceTeamInfo::set_teamprivatetype(::pb::EHallTeamType value) {
  assert(::pb::EHallTeamType_IsValid(value));
  set_has_teamprivatetype();
  teamprivatetype_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyInstanceTeamInfo.TeamPrivateType)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceGetInfoRsp

// repeated uint32 MonsterId = 1;
inline int TLevyTeamInstanceGetInfoRsp::monsterid_size() const {
  return monsterid_.size();
}
inline void TLevyTeamInstanceGetInfoRsp::clear_monsterid() {
  monsterid_.Clear();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceGetInfoRsp::monsterid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetInfoRsp.MonsterId)
  return monsterid_.Get(index);
}
inline void TLevyTeamInstanceGetInfoRsp::set_monsterid(int index, ::google::protobuf::uint32 value) {
  monsterid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetInfoRsp.MonsterId)
}
inline void TLevyTeamInstanceGetInfoRsp::add_monsterid(::google::protobuf::uint32 value) {
  monsterid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TLevyTeamInstanceGetInfoRsp.MonsterId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TLevyTeamInstanceGetInfoRsp::monsterid() const {
  // @@protoc_insertion_point(field_list:pb.TLevyTeamInstanceGetInfoRsp.MonsterId)
  return monsterid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TLevyTeamInstanceGetInfoRsp::mutable_monsterid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TLevyTeamInstanceGetInfoRsp.MonsterId)
  return &monsterid_;
}

// optional uint32 AtkInstanceNum = 2;
inline bool TLevyTeamInstanceGetInfoRsp::has_atkinstancenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceGetInfoRsp::set_has_atkinstancenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceGetInfoRsp::clear_has_atkinstancenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceGetInfoRsp::clear_atkinstancenum() {
  atkinstancenum_ = 0u;
  clear_has_atkinstancenum();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceGetInfoRsp::atkinstancenum() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetInfoRsp.AtkInstanceNum)
  return atkinstancenum_;
}
inline void TLevyTeamInstanceGetInfoRsp::set_atkinstancenum(::google::protobuf::uint32 value) {
  set_has_atkinstancenum();
  atkinstancenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetInfoRsp.AtkInstanceNum)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceGetTeamArrReq

// optional .pb.ELevyTeamInstanceGetListType SelectType = 1;
inline bool TLevyTeamInstanceGetTeamArrReq::has_selecttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceGetTeamArrReq::set_has_selecttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceGetTeamArrReq::clear_has_selecttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceGetTeamArrReq::clear_selecttype() {
  selecttype_ = 1;
  clear_has_selecttype();
}
inline ::pb::ELevyTeamInstanceGetListType TLevyTeamInstanceGetTeamArrReq::selecttype() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetTeamArrReq.SelectType)
  return static_cast< ::pb::ELevyTeamInstanceGetListType >(selecttype_);
}
inline void TLevyTeamInstanceGetTeamArrReq::set_selecttype(::pb::ELevyTeamInstanceGetListType value) {
  assert(::pb::ELevyTeamInstanceGetListType_IsValid(value));
  set_has_selecttype();
  selecttype_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetTeamArrReq.SelectType)
}

// optional uint32 Num = 2;
inline bool TLevyTeamInstanceGetTeamArrReq::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceGetTeamArrReq::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceGetTeamArrReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceGetTeamArrReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceGetTeamArrReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetTeamArrReq.Num)
  return num_;
}
inline void TLevyTeamInstanceGetTeamArrReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetTeamArrReq.Num)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceGetTeamArrRsp

// repeated .pb.TSimpleLevyInstanceTeamInfo TeamArr = 1;
inline int TLevyTeamInstanceGetTeamArrRsp::teamarr_size() const {
  return teamarr_.size();
}
inline void TLevyTeamInstanceGetTeamArrRsp::clear_teamarr() {
  teamarr_.Clear();
}
inline const ::pb::TSimpleLevyInstanceTeamInfo& TLevyTeamInstanceGetTeamArrRsp::teamarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetTeamArrRsp.TeamArr)
  return teamarr_.Get(index);
}
inline ::pb::TSimpleLevyInstanceTeamInfo* TLevyTeamInstanceGetTeamArrRsp::mutable_teamarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceGetTeamArrRsp.TeamArr)
  return teamarr_.Mutable(index);
}
inline ::pb::TSimpleLevyInstanceTeamInfo* TLevyTeamInstanceGetTeamArrRsp::add_teamarr() {
  // @@protoc_insertion_point(field_add:pb.TLevyTeamInstanceGetTeamArrRsp.TeamArr)
  return teamarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSimpleLevyInstanceTeamInfo >&
TLevyTeamInstanceGetTeamArrRsp::teamarr() const {
  // @@protoc_insertion_point(field_list:pb.TLevyTeamInstanceGetTeamArrRsp.TeamArr)
  return teamarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSimpleLevyInstanceTeamInfo >*
TLevyTeamInstanceGetTeamArrRsp::mutable_teamarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TLevyTeamInstanceGetTeamArrRsp.TeamArr)
  return &teamarr_;
}

// -------------------------------------------------------------------

// TLevyTeamInstanceCreateTeamReq

// optional uint32 InstanceId = 1;
inline bool TLevyTeamInstanceCreateTeamReq::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceCreateTeamReq::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceCreateTeamReq::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceCreateTeamReq::clear_instanceid() {
  instanceid_ = 0u;
  clear_has_instanceid();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceCreateTeamReq::instanceid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceCreateTeamReq.InstanceId)
  return instanceid_;
}
inline void TLevyTeamInstanceCreateTeamReq::set_instanceid(::google::protobuf::uint32 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceCreateTeamReq.InstanceId)
}

// optional .pb.EHallTeamType TeamPrivateType = 2;
inline bool TLevyTeamInstanceCreateTeamReq::has_teamprivatetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceCreateTeamReq::set_has_teamprivatetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceCreateTeamReq::clear_has_teamprivatetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceCreateTeamReq::clear_teamprivatetype() {
  teamprivatetype_ = 1;
  clear_has_teamprivatetype();
}
inline ::pb::EHallTeamType TLevyTeamInstanceCreateTeamReq::teamprivatetype() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceCreateTeamReq.TeamPrivateType)
  return static_cast< ::pb::EHallTeamType >(teamprivatetype_);
}
inline void TLevyTeamInstanceCreateTeamReq::set_teamprivatetype(::pb::EHallTeamType value) {
  assert(::pb::EHallTeamType_IsValid(value));
  set_has_teamprivatetype();
  teamprivatetype_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceCreateTeamReq.TeamPrivateType)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceCreateTeamRsp

// optional .pb.TLevyInstanceTeamInfo TeamInfo = 1;
inline bool TLevyTeamInstanceCreateTeamRsp::has_teaminfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceCreateTeamRsp::set_has_teaminfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceCreateTeamRsp::clear_has_teaminfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceCreateTeamRsp::clear_teaminfo() {
  if (teaminfo_ != NULL) teaminfo_->::pb::TLevyInstanceTeamInfo::Clear();
  clear_has_teaminfo();
}
inline const ::pb::TLevyInstanceTeamInfo& TLevyTeamInstanceCreateTeamRsp::teaminfo() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceCreateTeamRsp.TeamInfo)
  return teaminfo_ != NULL ? *teaminfo_ : *default_instance_->teaminfo_;
}
inline ::pb::TLevyInstanceTeamInfo* TLevyTeamInstanceCreateTeamRsp::mutable_teaminfo() {
  set_has_teaminfo();
  if (teaminfo_ == NULL) teaminfo_ = new ::pb::TLevyInstanceTeamInfo;
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceCreateTeamRsp.TeamInfo)
  return teaminfo_;
}
inline ::pb::TLevyInstanceTeamInfo* TLevyTeamInstanceCreateTeamRsp::release_teaminfo() {
  clear_has_teaminfo();
  ::pb::TLevyInstanceTeamInfo* temp = teaminfo_;
  teaminfo_ = NULL;
  return temp;
}
inline void TLevyTeamInstanceCreateTeamRsp::set_allocated_teaminfo(::pb::TLevyInstanceTeamInfo* teaminfo) {
  delete teaminfo_;
  teaminfo_ = teaminfo;
  if (teaminfo) {
    set_has_teaminfo();
  } else {
    clear_has_teaminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TLevyTeamInstanceCreateTeamRsp.TeamInfo)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceJoinTeamReq

// optional uint64 RoomId = 1;
inline bool TLevyTeamInstanceJoinTeamReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceJoinTeamReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceJoinTeamReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceJoinTeamReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceJoinTeamReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceJoinTeamReq.RoomId)
  return roomid_;
}
inline void TLevyTeamInstanceJoinTeamReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceJoinTeamReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TLevyTeamInstanceJoinTeamReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceJoinTeamReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceJoinTeamReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceJoinTeamReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceJoinTeamReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceJoinTeamReq.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceJoinTeamReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceJoinTeamReq.TeamId)
}

// optional .pb.ECommonTeamMode JoinMode = 3;
inline bool TLevyTeamInstanceJoinTeamReq::has_joinmode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevyTeamInstanceJoinTeamReq::set_has_joinmode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevyTeamInstanceJoinTeamReq::clear_has_joinmode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevyTeamInstanceJoinTeamReq::clear_joinmode() {
  joinmode_ = 0;
  clear_has_joinmode();
}
inline ::pb::ECommonTeamMode TLevyTeamInstanceJoinTeamReq::joinmode() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceJoinTeamReq.JoinMode)
  return static_cast< ::pb::ECommonTeamMode >(joinmode_);
}
inline void TLevyTeamInstanceJoinTeamReq::set_joinmode(::pb::ECommonTeamMode value) {
  assert(::pb::ECommonTeamMode_IsValid(value));
  set_has_joinmode();
  joinmode_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceJoinTeamReq.JoinMode)
}

// optional bool CheckPrivate = 4;
inline bool TLevyTeamInstanceJoinTeamReq::has_checkprivate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TLevyTeamInstanceJoinTeamReq::set_has_checkprivate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TLevyTeamInstanceJoinTeamReq::clear_has_checkprivate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TLevyTeamInstanceJoinTeamReq::clear_checkprivate() {
  checkprivate_ = false;
  clear_has_checkprivate();
}
inline bool TLevyTeamInstanceJoinTeamReq::checkprivate() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceJoinTeamReq.CheckPrivate)
  return checkprivate_;
}
inline void TLevyTeamInstanceJoinTeamReq::set_checkprivate(bool value) {
  set_has_checkprivate();
  checkprivate_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceJoinTeamReq.CheckPrivate)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceJoinTeamRsp

// optional .pb.EJoinLevyInstanceTeamErrorCode ErrorCode = 1;
inline bool TLevyTeamInstanceJoinTeamRsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceJoinTeamRsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceJoinTeamRsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceJoinTeamRsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::pb::EJoinLevyInstanceTeamErrorCode TLevyTeamInstanceJoinTeamRsp::errorcode() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceJoinTeamRsp.ErrorCode)
  return static_cast< ::pb::EJoinLevyInstanceTeamErrorCode >(errorcode_);
}
inline void TLevyTeamInstanceJoinTeamRsp::set_errorcode(::pb::EJoinLevyInstanceTeamErrorCode value) {
  assert(::pb::EJoinLevyInstanceTeamErrorCode_IsValid(value));
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceJoinTeamRsp.ErrorCode)
}

// optional .pb.TLevyInstanceTeamInfo TeamInfo = 2;
inline bool TLevyTeamInstanceJoinTeamRsp::has_teaminfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceJoinTeamRsp::set_has_teaminfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceJoinTeamRsp::clear_has_teaminfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceJoinTeamRsp::clear_teaminfo() {
  if (teaminfo_ != NULL) teaminfo_->::pb::TLevyInstanceTeamInfo::Clear();
  clear_has_teaminfo();
}
inline const ::pb::TLevyInstanceTeamInfo& TLevyTeamInstanceJoinTeamRsp::teaminfo() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceJoinTeamRsp.TeamInfo)
  return teaminfo_ != NULL ? *teaminfo_ : *default_instance_->teaminfo_;
}
inline ::pb::TLevyInstanceTeamInfo* TLevyTeamInstanceJoinTeamRsp::mutable_teaminfo() {
  set_has_teaminfo();
  if (teaminfo_ == NULL) teaminfo_ = new ::pb::TLevyInstanceTeamInfo;
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceJoinTeamRsp.TeamInfo)
  return teaminfo_;
}
inline ::pb::TLevyInstanceTeamInfo* TLevyTeamInstanceJoinTeamRsp::release_teaminfo() {
  clear_has_teaminfo();
  ::pb::TLevyInstanceTeamInfo* temp = teaminfo_;
  teaminfo_ = NULL;
  return temp;
}
inline void TLevyTeamInstanceJoinTeamRsp::set_allocated_teaminfo(::pb::TLevyInstanceTeamInfo* teaminfo) {
  delete teaminfo_;
  teaminfo_ = teaminfo;
  if (teaminfo) {
    set_has_teaminfo();
  } else {
    clear_has_teaminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TLevyTeamInstanceJoinTeamRsp.TeamInfo)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceKickReq

// optional uint64 RoomId = 1;
inline bool TLevyTeamInstanceKickReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceKickReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceKickReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceKickReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceKickReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceKickReq.RoomId)
  return roomid_;
}
inline void TLevyTeamInstanceKickReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceKickReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TLevyTeamInstanceKickReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceKickReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceKickReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceKickReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceKickReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceKickReq.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceKickReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceKickReq.TeamId)
}

// optional uint64 KickUid = 3;
inline bool TLevyTeamInstanceKickReq::has_kickuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevyTeamInstanceKickReq::set_has_kickuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevyTeamInstanceKickReq::clear_has_kickuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevyTeamInstanceKickReq::clear_kickuid() {
  kickuid_ = GOOGLE_ULONGLONG(0);
  clear_has_kickuid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceKickReq::kickuid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceKickReq.KickUid)
  return kickuid_;
}
inline void TLevyTeamInstanceKickReq::set_kickuid(::google::protobuf::uint64 value) {
  set_has_kickuid();
  kickuid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceKickReq.KickUid)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceQuitTeamReq

// optional uint64 RoomId = 1;
inline bool TLevyTeamInstanceQuitTeamReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceQuitTeamReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceQuitTeamReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceQuitTeamReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceQuitTeamReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceQuitTeamReq.RoomId)
  return roomid_;
}
inline void TLevyTeamInstanceQuitTeamReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceQuitTeamReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TLevyTeamInstanceQuitTeamReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceQuitTeamReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceQuitTeamReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceQuitTeamReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceQuitTeamReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceQuitTeamReq.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceQuitTeamReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceQuitTeamReq.TeamId)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceKickOrQuitTeamRsp

// optional .pb.ELevyTeamKickOrQuitTeamRetCode RetCode = 1;
inline bool TLevyTeamInstanceKickOrQuitTeamRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceKickOrQuitTeamRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceKickOrQuitTeamRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceKickOrQuitTeamRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::pb::ELevyTeamKickOrQuitTeamRetCode TLevyTeamInstanceKickOrQuitTeamRsp::retcode() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceKickOrQuitTeamRsp.RetCode)
  return static_cast< ::pb::ELevyTeamKickOrQuitTeamRetCode >(retcode_);
}
inline void TLevyTeamInstanceKickOrQuitTeamRsp::set_retcode(::pb::ELevyTeamKickOrQuitTeamRetCode value) {
  assert(::pb::ELevyTeamKickOrQuitTeamRetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceKickOrQuitTeamRsp.RetCode)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceChangeTeamModeReq

// optional uint64 RoomId = 1;
inline bool TLevyTeamInstanceChangeTeamModeReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceChangeTeamModeReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceChangeTeamModeReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceChangeTeamModeReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceChangeTeamModeReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceChangeTeamModeReq.RoomId)
  return roomid_;
}
inline void TLevyTeamInstanceChangeTeamModeReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceChangeTeamModeReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TLevyTeamInstanceChangeTeamModeReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceChangeTeamModeReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceChangeTeamModeReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceChangeTeamModeReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceChangeTeamModeReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceChangeTeamModeReq.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceChangeTeamModeReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceChangeTeamModeReq.TeamId)
}

// optional .pb.ECommonTeamMode TeamMode = 3;
inline bool TLevyTeamInstanceChangeTeamModeReq::has_teammode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevyTeamInstanceChangeTeamModeReq::set_has_teammode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevyTeamInstanceChangeTeamModeReq::clear_has_teammode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevyTeamInstanceChangeTeamModeReq::clear_teammode() {
  teammode_ = 0;
  clear_has_teammode();
}
inline ::pb::ECommonTeamMode TLevyTeamInstanceChangeTeamModeReq::teammode() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceChangeTeamModeReq.TeamMode)
  return static_cast< ::pb::ECommonTeamMode >(teammode_);
}
inline void TLevyTeamInstanceChangeTeamModeReq::set_teammode(::pb::ECommonTeamMode value) {
  assert(::pb::ECommonTeamMode_IsValid(value));
  set_has_teammode();
  teammode_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceChangeTeamModeReq.TeamMode)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceChangeTeamModeRsp

// optional .pb.ECommonChangeTeamRetCode RetCode = 1;
inline bool TLevyTeamInstanceChangeTeamModeRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceChangeTeamModeRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceChangeTeamModeRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceChangeTeamModeRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::pb::ECommonChangeTeamRetCode TLevyTeamInstanceChangeTeamModeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceChangeTeamModeRsp.RetCode)
  return static_cast< ::pb::ECommonChangeTeamRetCode >(retcode_);
}
inline void TLevyTeamInstanceChangeTeamModeRsp::set_retcode(::pb::ECommonChangeTeamRetCode value) {
  assert(::pb::ECommonChangeTeamRetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceChangeTeamModeRsp.RetCode)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceSetTeamMemberStatusReq

// optional uint64 RoomId = 1;
inline bool TLevyTeamInstanceSetTeamMemberStatusReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceSetTeamMemberStatusReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceSetTeamMemberStatusReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceSetTeamMemberStatusReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceSetTeamMemberStatusReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceSetTeamMemberStatusReq.RoomId)
  return roomid_;
}
inline void TLevyTeamInstanceSetTeamMemberStatusReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceSetTeamMemberStatusReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TLevyTeamInstanceSetTeamMemberStatusReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceSetTeamMemberStatusReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceSetTeamMemberStatusReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceSetTeamMemberStatusReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceSetTeamMemberStatusReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceSetTeamMemberStatusReq.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceSetTeamMemberStatusReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceSetTeamMemberStatusReq.TeamId)
}

// optional .pb.EHallMemberReadyStatus MemberStatus = 3;
inline bool TLevyTeamInstanceSetTeamMemberStatusReq::has_memberstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevyTeamInstanceSetTeamMemberStatusReq::set_has_memberstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevyTeamInstanceSetTeamMemberStatusReq::clear_has_memberstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevyTeamInstanceSetTeamMemberStatusReq::clear_memberstatus() {
  memberstatus_ = 1;
  clear_has_memberstatus();
}
inline ::pb::EHallMemberReadyStatus TLevyTeamInstanceSetTeamMemberStatusReq::memberstatus() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceSetTeamMemberStatusReq.MemberStatus)
  return static_cast< ::pb::EHallMemberReadyStatus >(memberstatus_);
}
inline void TLevyTeamInstanceSetTeamMemberStatusReq::set_memberstatus(::pb::EHallMemberReadyStatus value) {
  assert(::pb::EHallMemberReadyStatus_IsValid(value));
  set_has_memberstatus();
  memberstatus_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceSetTeamMemberStatusReq.MemberStatus)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceSetTeamMemberStatusRsp

// optional .pb.ECommonChangeTeamRetCode RetCode = 1;
inline bool TLevyTeamInstanceSetTeamMemberStatusRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceSetTeamMemberStatusRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceSetTeamMemberStatusRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceSetTeamMemberStatusRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::pb::ECommonChangeTeamRetCode TLevyTeamInstanceSetTeamMemberStatusRsp::retcode() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceSetTeamMemberStatusRsp.RetCode)
  return static_cast< ::pb::ECommonChangeTeamRetCode >(retcode_);
}
inline void TLevyTeamInstanceSetTeamMemberStatusRsp::set_retcode(::pb::ECommonChangeTeamRetCode value) {
  assert(::pb::ECommonChangeTeamRetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceSetTeamMemberStatusRsp.RetCode)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceSetTeamStatusReq

// optional uint64 RoomId = 1;
inline bool TLevyTeamInstanceSetTeamStatusReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceSetTeamStatusReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceSetTeamStatusReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceSetTeamStatusReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceSetTeamStatusReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceSetTeamStatusReq.RoomId)
  return roomid_;
}
inline void TLevyTeamInstanceSetTeamStatusReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceSetTeamStatusReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TLevyTeamInstanceSetTeamStatusReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceSetTeamStatusReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceSetTeamStatusReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceSetTeamStatusReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceSetTeamStatusReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceSetTeamStatusReq.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceSetTeamStatusReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceSetTeamStatusReq.TeamId)
}

// optional .pb.EHallTeamType TeamStatus = 3;
inline bool TLevyTeamInstanceSetTeamStatusReq::has_teamstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevyTeamInstanceSetTeamStatusReq::set_has_teamstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevyTeamInstanceSetTeamStatusReq::clear_has_teamstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevyTeamInstanceSetTeamStatusReq::clear_teamstatus() {
  teamstatus_ = 1;
  clear_has_teamstatus();
}
inline ::pb::EHallTeamType TLevyTeamInstanceSetTeamStatusReq::teamstatus() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceSetTeamStatusReq.TeamStatus)
  return static_cast< ::pb::EHallTeamType >(teamstatus_);
}
inline void TLevyTeamInstanceSetTeamStatusReq::set_teamstatus(::pb::EHallTeamType value) {
  assert(::pb::EHallTeamType_IsValid(value));
  set_has_teamstatus();
  teamstatus_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceSetTeamStatusReq.TeamStatus)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceSetTeamStatusRsp

// optional .pb.ECommonChangeTeamRetCode RetCode = 1;
inline bool TLevyTeamInstanceSetTeamStatusRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceSetTeamStatusRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceSetTeamStatusRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceSetTeamStatusRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::pb::ECommonChangeTeamRetCode TLevyTeamInstanceSetTeamStatusRsp::retcode() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceSetTeamStatusRsp.RetCode)
  return static_cast< ::pb::ECommonChangeTeamRetCode >(retcode_);
}
inline void TLevyTeamInstanceSetTeamStatusRsp::set_retcode(::pb::ECommonChangeTeamRetCode value) {
  assert(::pb::ECommonChangeTeamRetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceSetTeamStatusRsp.RetCode)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceTeamStartReq

// optional uint64 RoomId = 1;
inline bool TLevyTeamInstanceTeamStartReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceTeamStartReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceTeamStartReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceTeamStartReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceTeamStartReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceTeamStartReq.RoomId)
  return roomid_;
}
inline void TLevyTeamInstanceTeamStartReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceTeamStartReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TLevyTeamInstanceTeamStartReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceTeamStartReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceTeamStartReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceTeamStartReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceTeamStartReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceTeamStartReq.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceTeamStartReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceTeamStartReq.TeamId)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceBattleRecordNotify

// optional uint32 BattleIndex = 1;
inline bool TLevyTeamInstanceBattleRecordNotify::has_battleindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceBattleRecordNotify::set_has_battleindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceBattleRecordNotify::clear_has_battleindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceBattleRecordNotify::clear_battleindex() {
  battleindex_ = 0u;
  clear_has_battleindex();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceBattleRecordNotify::battleindex() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceBattleRecordNotify.BattleIndex)
  return battleindex_;
}
inline void TLevyTeamInstanceBattleRecordNotify::set_battleindex(::google::protobuf::uint32 value) {
  set_has_battleindex();
  battleindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceBattleRecordNotify.BattleIndex)
}

// optional .pb.TBattleResult BattleResult = 2;
inline bool TLevyTeamInstanceBattleRecordNotify::has_battleresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceBattleRecordNotify::set_has_battleresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceBattleRecordNotify::clear_has_battleresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceBattleRecordNotify::clear_battleresult() {
  if (battleresult_ != NULL) battleresult_->::pb::TBattleResult::Clear();
  clear_has_battleresult();
}
inline const ::pb::TBattleResult& TLevyTeamInstanceBattleRecordNotify::battleresult() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceBattleRecordNotify.BattleResult)
  return battleresult_ != NULL ? *battleresult_ : *default_instance_->battleresult_;
}
inline ::pb::TBattleResult* TLevyTeamInstanceBattleRecordNotify::mutable_battleresult() {
  set_has_battleresult();
  if (battleresult_ == NULL) battleresult_ = new ::pb::TBattleResult;
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceBattleRecordNotify.BattleResult)
  return battleresult_;
}
inline ::pb::TBattleResult* TLevyTeamInstanceBattleRecordNotify::release_battleresult() {
  clear_has_battleresult();
  ::pb::TBattleResult* temp = battleresult_;
  battleresult_ = NULL;
  return temp;
}
inline void TLevyTeamInstanceBattleRecordNotify::set_allocated_battleresult(::pb::TBattleResult* battleresult) {
  delete battleresult_;
  battleresult_ = battleresult;
  if (battleresult) {
    set_has_battleresult();
  } else {
    clear_has_battleresult();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TLevyTeamInstanceBattleRecordNotify.BattleResult)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceBattleEndNotify

// optional .pb.ELevyTeamInstanceBattleResult BattleRes = 1;
inline bool TLevyTeamInstanceBattleEndNotify::has_battleres() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceBattleEndNotify::set_has_battleres() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceBattleEndNotify::clear_has_battleres() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceBattleEndNotify::clear_battleres() {
  battleres_ = 0;
  clear_has_battleres();
}
inline ::pb::ELevyTeamInstanceBattleResult TLevyTeamInstanceBattleEndNotify::battleres() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceBattleEndNotify.BattleRes)
  return static_cast< ::pb::ELevyTeamInstanceBattleResult >(battleres_);
}
inline void TLevyTeamInstanceBattleEndNotify::set_battleres(::pb::ELevyTeamInstanceBattleResult value) {
  assert(::pb::ELevyTeamInstanceBattleResult_IsValid(value));
  set_has_battleres();
  battleres_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceBattleEndNotify.BattleRes)
}

// optional uint32 BattleNum = 2;
inline bool TLevyTeamInstanceBattleEndNotify::has_battlenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceBattleEndNotify::set_has_battlenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceBattleEndNotify::clear_has_battlenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceBattleEndNotify::clear_battlenum() {
  battlenum_ = 0u;
  clear_has_battlenum();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceBattleEndNotify::battlenum() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceBattleEndNotify.BattleNum)
  return battlenum_;
}
inline void TLevyTeamInstanceBattleEndNotify::set_battlenum(::google::protobuf::uint32 value) {
  set_has_battlenum();
  battlenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceBattleEndNotify.BattleNum)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceAbortNotify

// optional uint64 TeamId = 1;
inline bool TLevyTeamInstanceAbortNotify::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceAbortNotify::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceAbortNotify::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceAbortNotify::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceAbortNotify::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceAbortNotify.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceAbortNotify::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceAbortNotify.TeamId)
}

// optional .pb.ELevyTeamInstanceAbortReason AbortReason = 2;
inline bool TLevyTeamInstanceAbortNotify::has_abortreason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceAbortNotify::set_has_abortreason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceAbortNotify::clear_has_abortreason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceAbortNotify::clear_abortreason() {
  abortreason_ = 1;
  clear_has_abortreason();
}
inline ::pb::ELevyTeamInstanceAbortReason TLevyTeamInstanceAbortNotify::abortreason() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceAbortNotify.AbortReason)
  return static_cast< ::pb::ELevyTeamInstanceAbortReason >(abortreason_);
}
inline void TLevyTeamInstanceAbortNotify::set_abortreason(::pb::ELevyTeamInstanceAbortReason value) {
  assert(::pb::ELevyTeamInstanceAbortReason_IsValid(value));
  set_has_abortreason();
  abortreason_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceAbortNotify.AbortReason)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceGetInviteListReq

// optional uint64 RoomId = 1;
inline bool TLevyTeamInstanceGetInviteListReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceGetInviteListReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceGetInviteListReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceGetInviteListReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceGetInviteListReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetInviteListReq.RoomId)
  return roomid_;
}
inline void TLevyTeamInstanceGetInviteListReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetInviteListReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TLevyTeamInstanceGetInviteListReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceGetInviteListReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceGetInviteListReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceGetInviteListReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceGetInviteListReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetInviteListReq.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceGetInviteListReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetInviteListReq.TeamId)
}

// optional .pb.ELevyTeamInstanceGetListType InviteType = 3;
inline bool TLevyTeamInstanceGetInviteListReq::has_invitetype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevyTeamInstanceGetInviteListReq::set_has_invitetype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevyTeamInstanceGetInviteListReq::clear_has_invitetype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevyTeamInstanceGetInviteListReq::clear_invitetype() {
  invitetype_ = 1;
  clear_has_invitetype();
}
inline ::pb::ELevyTeamInstanceGetListType TLevyTeamInstanceGetInviteListReq::invitetype() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetInviteListReq.InviteType)
  return static_cast< ::pb::ELevyTeamInstanceGetListType >(invitetype_);
}
inline void TLevyTeamInstanceGetInviteListReq::set_invitetype(::pb::ELevyTeamInstanceGetListType value) {
  assert(::pb::ELevyTeamInstanceGetListType_IsValid(value));
  set_has_invitetype();
  invitetype_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetInviteListReq.InviteType)
}

// optional uint32 Num = 4;
inline bool TLevyTeamInstanceGetInviteListReq::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TLevyTeamInstanceGetInviteListReq::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TLevyTeamInstanceGetInviteListReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TLevyTeamInstanceGetInviteListReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceGetInviteListReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetInviteListReq.Num)
  return num_;
}
inline void TLevyTeamInstanceGetInviteListReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetInviteListReq.Num)
}

// optional uint32 Offset = 5;
inline bool TLevyTeamInstanceGetInviteListReq::has_offset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TLevyTeamInstanceGetInviteListReq::set_has_offset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TLevyTeamInstanceGetInviteListReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TLevyTeamInstanceGetInviteListReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceGetInviteListReq::offset() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetInviteListReq.Offset)
  return offset_;
}
inline void TLevyTeamInstanceGetInviteListReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetInviteListReq.Offset)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceGetInviteListRsp

// repeated .pb.TUserSimpleInfo UserArr = 1;
inline int TLevyTeamInstanceGetInviteListRsp::userarr_size() const {
  return userarr_.size();
}
inline void TLevyTeamInstanceGetInviteListRsp::clear_userarr() {
  userarr_.Clear();
}
inline const ::pb::TUserSimpleInfo& TLevyTeamInstanceGetInviteListRsp::userarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetInviteListRsp.UserArr)
  return userarr_.Get(index);
}
inline ::pb::TUserSimpleInfo* TLevyTeamInstanceGetInviteListRsp::mutable_userarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceGetInviteListRsp.UserArr)
  return userarr_.Mutable(index);
}
inline ::pb::TUserSimpleInfo* TLevyTeamInstanceGetInviteListRsp::add_userarr() {
  // @@protoc_insertion_point(field_add:pb.TLevyTeamInstanceGetInviteListRsp.UserArr)
  return userarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >&
TLevyTeamInstanceGetInviteListRsp::userarr() const {
  // @@protoc_insertion_point(field_list:pb.TLevyTeamInstanceGetInviteListRsp.UserArr)
  return userarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >*
TLevyTeamInstanceGetInviteListRsp::mutable_userarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TLevyTeamInstanceGetInviteListRsp.UserArr)
  return &userarr_;
}

// -------------------------------------------------------------------

// TLevyTeamInstanceTeamInviteReq

// optional uint64 RoomId = 1;
inline bool TLevyTeamInstanceTeamInviteReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceTeamInviteReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceTeamInviteReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceTeamInviteReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceTeamInviteReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceTeamInviteReq.RoomId)
  return roomid_;
}
inline void TLevyTeamInstanceTeamInviteReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceTeamInviteReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TLevyTeamInstanceTeamInviteReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceTeamInviteReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceTeamInviteReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceTeamInviteReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceTeamInviteReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceTeamInviteReq.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceTeamInviteReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceTeamInviteReq.TeamId)
}

// repeated uint64 UidArr = 3;
inline int TLevyTeamInstanceTeamInviteReq::uidarr_size() const {
  return uidarr_.size();
}
inline void TLevyTeamInstanceTeamInviteReq::clear_uidarr() {
  uidarr_.Clear();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceTeamInviteReq::uidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceTeamInviteReq.UidArr)
  return uidarr_.Get(index);
}
inline void TLevyTeamInstanceTeamInviteReq::set_uidarr(int index, ::google::protobuf::uint64 value) {
  uidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceTeamInviteReq.UidArr)
}
inline void TLevyTeamInstanceTeamInviteReq::add_uidarr(::google::protobuf::uint64 value) {
  uidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TLevyTeamInstanceTeamInviteReq.UidArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TLevyTeamInstanceTeamInviteReq::uidarr() const {
  // @@protoc_insertion_point(field_list:pb.TLevyTeamInstanceTeamInviteReq.UidArr)
  return uidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TLevyTeamInstanceTeamInviteReq::mutable_uidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TLevyTeamInstanceTeamInviteReq.UidArr)
  return &uidarr_;
}

// -------------------------------------------------------------------

// TLevyTeamInstanceInviteNotify

// optional uint64 RoomId = 1;
inline bool TLevyTeamInstanceInviteNotify::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceInviteNotify::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceInviteNotify::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceInviteNotify::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceInviteNotify::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceInviteNotify.RoomId)
  return roomid_;
}
inline void TLevyTeamInstanceInviteNotify::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceInviteNotify.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TLevyTeamInstanceInviteNotify::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceInviteNotify::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceInviteNotify::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceInviteNotify::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceInviteNotify::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceInviteNotify.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceInviteNotify::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceInviteNotify.TeamId)
}

// optional .pb.TSimpleLevyInstanceTeamInfo TeamInfo = 3;
inline bool TLevyTeamInstanceInviteNotify::has_teaminfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevyTeamInstanceInviteNotify::set_has_teaminfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevyTeamInstanceInviteNotify::clear_has_teaminfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevyTeamInstanceInviteNotify::clear_teaminfo() {
  if (teaminfo_ != NULL) teaminfo_->::pb::TSimpleLevyInstanceTeamInfo::Clear();
  clear_has_teaminfo();
}
inline const ::pb::TSimpleLevyInstanceTeamInfo& TLevyTeamInstanceInviteNotify::teaminfo() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceInviteNotify.TeamInfo)
  return teaminfo_ != NULL ? *teaminfo_ : *default_instance_->teaminfo_;
}
inline ::pb::TSimpleLevyInstanceTeamInfo* TLevyTeamInstanceInviteNotify::mutable_teaminfo() {
  set_has_teaminfo();
  if (teaminfo_ == NULL) teaminfo_ = new ::pb::TSimpleLevyInstanceTeamInfo;
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceInviteNotify.TeamInfo)
  return teaminfo_;
}
inline ::pb::TSimpleLevyInstanceTeamInfo* TLevyTeamInstanceInviteNotify::release_teaminfo() {
  clear_has_teaminfo();
  ::pb::TSimpleLevyInstanceTeamInfo* temp = teaminfo_;
  teaminfo_ = NULL;
  return temp;
}
inline void TLevyTeamInstanceInviteNotify::set_allocated_teaminfo(::pb::TSimpleLevyInstanceTeamInfo* teaminfo) {
  delete teaminfo_;
  teaminfo_ = teaminfo;
  if (teaminfo) {
    set_has_teaminfo();
  } else {
    clear_has_teaminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TLevyTeamInstanceInviteNotify.TeamInfo)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceAtkInfo

// optional uint64 TeamId = 1;
inline bool TLevyTeamInstanceAtkInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceAtkInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceAtkInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceAtkInfo::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceAtkInfo::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceAtkInfo.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceAtkInfo::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceAtkInfo.TeamId)
}

// optional .pb.ELevyTeamInstanceBattleResult BattleRes = 2;
inline bool TLevyTeamInstanceAtkInfo::has_battleres() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceAtkInfo::set_has_battleres() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceAtkInfo::clear_has_battleres() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceAtkInfo::clear_battleres() {
  battleres_ = 0;
  clear_has_battleres();
}
inline ::pb::ELevyTeamInstanceBattleResult TLevyTeamInstanceAtkInfo::battleres() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceAtkInfo.BattleRes)
  return static_cast< ::pb::ELevyTeamInstanceBattleResult >(battleres_);
}
inline void TLevyTeamInstanceAtkInfo::set_battleres(::pb::ELevyTeamInstanceBattleResult value) {
  assert(::pb::ELevyTeamInstanceBattleResult_IsValid(value));
  set_has_battleres();
  battleres_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceAtkInfo.BattleRes)
}

// optional uint64 AtkTime = 3;
inline bool TLevyTeamInstanceAtkInfo::has_atktime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevyTeamInstanceAtkInfo::set_has_atktime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevyTeamInstanceAtkInfo::clear_has_atktime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevyTeamInstanceAtkInfo::clear_atktime() {
  atktime_ = GOOGLE_ULONGLONG(0);
  clear_has_atktime();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceAtkInfo::atktime() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceAtkInfo.AtkTime)
  return atktime_;
}
inline void TLevyTeamInstanceAtkInfo::set_atktime(::google::protobuf::uint64 value) {
  set_has_atktime();
  atktime_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceAtkInfo.AtkTime)
}

// repeated .pb.TUserSimpleInfo MemArr = 4;
inline int TLevyTeamInstanceAtkInfo::memarr_size() const {
  return memarr_.size();
}
inline void TLevyTeamInstanceAtkInfo::clear_memarr() {
  memarr_.Clear();
}
inline const ::pb::TUserSimpleInfo& TLevyTeamInstanceAtkInfo::memarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceAtkInfo.MemArr)
  return memarr_.Get(index);
}
inline ::pb::TUserSimpleInfo* TLevyTeamInstanceAtkInfo::mutable_memarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceAtkInfo.MemArr)
  return memarr_.Mutable(index);
}
inline ::pb::TUserSimpleInfo* TLevyTeamInstanceAtkInfo::add_memarr() {
  // @@protoc_insertion_point(field_add:pb.TLevyTeamInstanceAtkInfo.MemArr)
  return memarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >&
TLevyTeamInstanceAtkInfo::memarr() const {
  // @@protoc_insertion_point(field_list:pb.TLevyTeamInstanceAtkInfo.MemArr)
  return memarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >*
TLevyTeamInstanceAtkInfo::mutable_memarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TLevyTeamInstanceAtkInfo.MemArr)
  return &memarr_;
}

// optional uint32 BattleNum = 5;
inline bool TLevyTeamInstanceAtkInfo::has_battlenum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TLevyTeamInstanceAtkInfo::set_has_battlenum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TLevyTeamInstanceAtkInfo::clear_has_battlenum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TLevyTeamInstanceAtkInfo::clear_battlenum() {
  battlenum_ = 0u;
  clear_has_battlenum();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceAtkInfo::battlenum() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceAtkInfo.BattleNum)
  return battlenum_;
}
inline void TLevyTeamInstanceAtkInfo::set_battlenum(::google::protobuf::uint32 value) {
  set_has_battlenum();
  battlenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceAtkInfo.BattleNum)
}

// optional .pb.ECommonTeamMode TeamMode = 6;
inline bool TLevyTeamInstanceAtkInfo::has_teammode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TLevyTeamInstanceAtkInfo::set_has_teammode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TLevyTeamInstanceAtkInfo::clear_has_teammode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TLevyTeamInstanceAtkInfo::clear_teammode() {
  teammode_ = 0;
  clear_has_teammode();
}
inline ::pb::ECommonTeamMode TLevyTeamInstanceAtkInfo::teammode() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceAtkInfo.TeamMode)
  return static_cast< ::pb::ECommonTeamMode >(teammode_);
}
inline void TLevyTeamInstanceAtkInfo::set_teammode(::pb::ECommonTeamMode value) {
  assert(::pb::ECommonTeamMode_IsValid(value));
  set_has_teammode();
  teammode_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceAtkInfo.TeamMode)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceGetAtkListReq

// optional uint32 Num = 1;
inline bool TLevyTeamInstanceGetAtkListReq::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceGetAtkListReq::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceGetAtkListReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceGetAtkListReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceGetAtkListReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetAtkListReq.Num)
  return num_;
}
inline void TLevyTeamInstanceGetAtkListReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetAtkListReq.Num)
}

// optional uint32 Offset = 2;
inline bool TLevyTeamInstanceGetAtkListReq::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceGetAtkListReq::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceGetAtkListReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceGetAtkListReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceGetAtkListReq::offset() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetAtkListReq.Offset)
  return offset_;
}
inline void TLevyTeamInstanceGetAtkListReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetAtkListReq.Offset)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceGetAtkListRsp

// repeated .pb.TLevyTeamInstanceAtkInfo AtkList = 1;
inline int TLevyTeamInstanceGetAtkListRsp::atklist_size() const {
  return atklist_.size();
}
inline void TLevyTeamInstanceGetAtkListRsp::clear_atklist() {
  atklist_.Clear();
}
inline const ::pb::TLevyTeamInstanceAtkInfo& TLevyTeamInstanceGetAtkListRsp::atklist(int index) const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetAtkListRsp.AtkList)
  return atklist_.Get(index);
}
inline ::pb::TLevyTeamInstanceAtkInfo* TLevyTeamInstanceGetAtkListRsp::mutable_atklist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceGetAtkListRsp.AtkList)
  return atklist_.Mutable(index);
}
inline ::pb::TLevyTeamInstanceAtkInfo* TLevyTeamInstanceGetAtkListRsp::add_atklist() {
  // @@protoc_insertion_point(field_add:pb.TLevyTeamInstanceGetAtkListRsp.AtkList)
  return atklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TLevyTeamInstanceAtkInfo >&
TLevyTeamInstanceGetAtkListRsp::atklist() const {
  // @@protoc_insertion_point(field_list:pb.TLevyTeamInstanceGetAtkListRsp.AtkList)
  return atklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TLevyTeamInstanceAtkInfo >*
TLevyTeamInstanceGetAtkListRsp::mutable_atklist() {
  // @@protoc_insertion_point(field_mutable_list:pb.TLevyTeamInstanceGetAtkListRsp.AtkList)
  return &atklist_;
}

// -------------------------------------------------------------------

// TLevyTeamInstanceGetBattleRecordReq

// optional uint64 TeamId = 1;
inline bool TLevyTeamInstanceGetBattleRecordReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceGetBattleRecordReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceGetBattleRecordReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceGetBattleRecordReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceGetBattleRecordReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetBattleRecordReq.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceGetBattleRecordReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetBattleRecordReq.TeamId)
}

// optional uint32 RecordNum = 2;
inline bool TLevyTeamInstanceGetBattleRecordReq::has_recordnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceGetBattleRecordReq::set_has_recordnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceGetBattleRecordReq::clear_has_recordnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceGetBattleRecordReq::clear_recordnum() {
  recordnum_ = 0u;
  clear_has_recordnum();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceGetBattleRecordReq::recordnum() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetBattleRecordReq.RecordNum)
  return recordnum_;
}
inline void TLevyTeamInstanceGetBattleRecordReq::set_recordnum(::google::protobuf::uint32 value) {
  set_has_recordnum();
  recordnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetBattleRecordReq.RecordNum)
}

// optional uint32 RecordOffset = 3;
inline bool TLevyTeamInstanceGetBattleRecordReq::has_recordoffset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevyTeamInstanceGetBattleRecordReq::set_has_recordoffset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevyTeamInstanceGetBattleRecordReq::clear_has_recordoffset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevyTeamInstanceGetBattleRecordReq::clear_recordoffset() {
  recordoffset_ = 0u;
  clear_has_recordoffset();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceGetBattleRecordReq::recordoffset() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetBattleRecordReq.RecordOffset)
  return recordoffset_;
}
inline void TLevyTeamInstanceGetBattleRecordReq::set_recordoffset(::google::protobuf::uint32 value) {
  set_has_recordoffset();
  recordoffset_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetBattleRecordReq.RecordOffset)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceRewardInfo

// repeated .pb.TCommonReward RewardArr = 1;
inline int TLevyTeamInstanceRewardInfo::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TLevyTeamInstanceRewardInfo::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TCommonReward& TLevyTeamInstanceRewardInfo::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceRewardInfo.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TCommonReward* TLevyTeamInstanceRewardInfo::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceRewardInfo.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TCommonReward* TLevyTeamInstanceRewardInfo::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TLevyTeamInstanceRewardInfo.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TLevyTeamInstanceRewardInfo::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TLevyTeamInstanceRewardInfo.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TLevyTeamInstanceRewardInfo::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TLevyTeamInstanceRewardInfo.RewardArr)
  return &rewardarr_;
}

// optional uint32 CrossLevyScore = 2;
inline bool TLevyTeamInstanceRewardInfo::has_crosslevyscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceRewardInfo::set_has_crosslevyscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceRewardInfo::clear_has_crosslevyscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceRewardInfo::clear_crosslevyscore() {
  crosslevyscore_ = 0u;
  clear_has_crosslevyscore();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceRewardInfo::crosslevyscore() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceRewardInfo.CrossLevyScore)
  return crosslevyscore_;
}
inline void TLevyTeamInstanceRewardInfo::set_crosslevyscore(::google::protobuf::uint32 value) {
  set_has_crosslevyscore();
  crosslevyscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceRewardInfo.CrossLevyScore)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceGetBattleRecordRsp

// optional .pb.ELevyTeamInstanceBattleResult BattleRes = 1;
inline bool TLevyTeamInstanceGetBattleRecordRsp::has_battleres() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceGetBattleRecordRsp::set_has_battleres() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceGetBattleRecordRsp::clear_has_battleres() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceGetBattleRecordRsp::clear_battleres() {
  battleres_ = 0;
  clear_has_battleres();
}
inline ::pb::ELevyTeamInstanceBattleResult TLevyTeamInstanceGetBattleRecordRsp::battleres() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetBattleRecordRsp.BattleRes)
  return static_cast< ::pb::ELevyTeamInstanceBattleResult >(battleres_);
}
inline void TLevyTeamInstanceGetBattleRecordRsp::set_battleres(::pb::ELevyTeamInstanceBattleResult value) {
  assert(::pb::ELevyTeamInstanceBattleResult_IsValid(value));
  set_has_battleres();
  battleres_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceGetBattleRecordRsp.BattleRes)
}

// optional .pb.TLevyTeamInstanceRewardInfo RewardInfo = 2;
inline bool TLevyTeamInstanceGetBattleRecordRsp::has_rewardinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceGetBattleRecordRsp::set_has_rewardinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceGetBattleRecordRsp::clear_has_rewardinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceGetBattleRecordRsp::clear_rewardinfo() {
  if (rewardinfo_ != NULL) rewardinfo_->::pb::TLevyTeamInstanceRewardInfo::Clear();
  clear_has_rewardinfo();
}
inline const ::pb::TLevyTeamInstanceRewardInfo& TLevyTeamInstanceGetBattleRecordRsp::rewardinfo() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetBattleRecordRsp.RewardInfo)
  return rewardinfo_ != NULL ? *rewardinfo_ : *default_instance_->rewardinfo_;
}
inline ::pb::TLevyTeamInstanceRewardInfo* TLevyTeamInstanceGetBattleRecordRsp::mutable_rewardinfo() {
  set_has_rewardinfo();
  if (rewardinfo_ == NULL) rewardinfo_ = new ::pb::TLevyTeamInstanceRewardInfo;
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceGetBattleRecordRsp.RewardInfo)
  return rewardinfo_;
}
inline ::pb::TLevyTeamInstanceRewardInfo* TLevyTeamInstanceGetBattleRecordRsp::release_rewardinfo() {
  clear_has_rewardinfo();
  ::pb::TLevyTeamInstanceRewardInfo* temp = rewardinfo_;
  rewardinfo_ = NULL;
  return temp;
}
inline void TLevyTeamInstanceGetBattleRecordRsp::set_allocated_rewardinfo(::pb::TLevyTeamInstanceRewardInfo* rewardinfo) {
  delete rewardinfo_;
  rewardinfo_ = rewardinfo;
  if (rewardinfo) {
    set_has_rewardinfo();
  } else {
    clear_has_rewardinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TLevyTeamInstanceGetBattleRecordRsp.RewardInfo)
}

// repeated .pb.TBattleResult ResultArr = 3;
inline int TLevyTeamInstanceGetBattleRecordRsp::resultarr_size() const {
  return resultarr_.size();
}
inline void TLevyTeamInstanceGetBattleRecordRsp::clear_resultarr() {
  resultarr_.Clear();
}
inline const ::pb::TBattleResult& TLevyTeamInstanceGetBattleRecordRsp::resultarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceGetBattleRecordRsp.ResultArr)
  return resultarr_.Get(index);
}
inline ::pb::TBattleResult* TLevyTeamInstanceGetBattleRecordRsp::mutable_resultarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceGetBattleRecordRsp.ResultArr)
  return resultarr_.Mutable(index);
}
inline ::pb::TBattleResult* TLevyTeamInstanceGetBattleRecordRsp::add_resultarr() {
  // @@protoc_insertion_point(field_add:pb.TLevyTeamInstanceGetBattleRecordRsp.ResultArr)
  return resultarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TBattleResult >&
TLevyTeamInstanceGetBattleRecordRsp::resultarr() const {
  // @@protoc_insertion_point(field_list:pb.TLevyTeamInstanceGetBattleRecordRsp.ResultArr)
  return resultarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TBattleResult >*
TLevyTeamInstanceGetBattleRecordRsp::mutable_resultarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TLevyTeamInstanceGetBattleRecordRsp.ResultArr)
  return &resultarr_;
}

// -------------------------------------------------------------------

// TLevyTeamInstanceHallMemberInfoData

// optional .pb.TUserSimpleInfo UserInfo = 1;
inline bool TLevyTeamInstanceHallMemberInfoData::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceHallMemberInfoData::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceHallMemberInfoData::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceHallMemberInfoData::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& TLevyTeamInstanceHallMemberInfoData::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceHallMemberInfoData.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* TLevyTeamInstanceHallMemberInfoData::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceHallMemberInfoData.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* TLevyTeamInstanceHallMemberInfoData::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TLevyTeamInstanceHallMemberInfoData::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TLevyTeamInstanceHallMemberInfoData.UserInfo)
}

// optional .pb.ECommonTeamMode MemMode = 2;
inline bool TLevyTeamInstanceHallMemberInfoData::has_memmode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceHallMemberInfoData::set_has_memmode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceHallMemberInfoData::clear_has_memmode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceHallMemberInfoData::clear_memmode() {
  memmode_ = 0;
  clear_has_memmode();
}
inline ::pb::ECommonTeamMode TLevyTeamInstanceHallMemberInfoData::memmode() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceHallMemberInfoData.MemMode)
  return static_cast< ::pb::ECommonTeamMode >(memmode_);
}
inline void TLevyTeamInstanceHallMemberInfoData::set_memmode(::pb::ECommonTeamMode value) {
  assert(::pb::ECommonTeamMode_IsValid(value));
  set_has_memmode();
  memmode_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceHallMemberInfoData.MemMode)
}

// optional uint32 SquadNum = 3;
inline bool TLevyTeamInstanceHallMemberInfoData::has_squadnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevyTeamInstanceHallMemberInfoData::set_has_squadnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevyTeamInstanceHallMemberInfoData::clear_has_squadnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevyTeamInstanceHallMemberInfoData::clear_squadnum() {
  squadnum_ = 0u;
  clear_has_squadnum();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceHallMemberInfoData::squadnum() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceHallMemberInfoData.SquadNum)
  return squadnum_;
}
inline void TLevyTeamInstanceHallMemberInfoData::set_squadnum(::google::protobuf::uint32 value) {
  set_has_squadnum();
  squadnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceHallMemberInfoData.SquadNum)
}

// optional uint64 TotalFightForce = 4;
inline bool TLevyTeamInstanceHallMemberInfoData::has_totalfightforce() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TLevyTeamInstanceHallMemberInfoData::set_has_totalfightforce() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TLevyTeamInstanceHallMemberInfoData::clear_has_totalfightforce() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TLevyTeamInstanceHallMemberInfoData::clear_totalfightforce() {
  totalfightforce_ = GOOGLE_ULONGLONG(0);
  clear_has_totalfightforce();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceHallMemberInfoData::totalfightforce() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceHallMemberInfoData.TotalFightForce)
  return totalfightforce_;
}
inline void TLevyTeamInstanceHallMemberInfoData::set_totalfightforce(::google::protobuf::uint64 value) {
  set_has_totalfightforce();
  totalfightforce_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceHallMemberInfoData.TotalFightForce)
}

// optional uint64 TeamOrder = 5;
inline bool TLevyTeamInstanceHallMemberInfoData::has_teamorder() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TLevyTeamInstanceHallMemberInfoData::set_has_teamorder() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TLevyTeamInstanceHallMemberInfoData::clear_has_teamorder() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TLevyTeamInstanceHallMemberInfoData::clear_teamorder() {
  teamorder_ = GOOGLE_ULONGLONG(0);
  clear_has_teamorder();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceHallMemberInfoData::teamorder() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceHallMemberInfoData.TeamOrder)
  return teamorder_;
}
inline void TLevyTeamInstanceHallMemberInfoData::set_teamorder(::google::protobuf::uint64 value) {
  set_has_teamorder();
  teamorder_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceHallMemberInfoData.TeamOrder)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceTeamSpecificInfo

// optional uint32 InstanceId = 1;
inline bool TLevyTeamInstanceTeamSpecificInfo::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceTeamSpecificInfo::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceTeamSpecificInfo::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceTeamSpecificInfo::clear_instanceid() {
  instanceid_ = 0u;
  clear_has_instanceid();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceTeamSpecificInfo::instanceid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceTeamSpecificInfo.InstanceId)
  return instanceid_;
}
inline void TLevyTeamInstanceTeamSpecificInfo::set_instanceid(::google::protobuf::uint32 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceTeamSpecificInfo.InstanceId)
}

// repeated uint32 MonsterIdArr = 2;
inline int TLevyTeamInstanceTeamSpecificInfo::monsteridarr_size() const {
  return monsteridarr_.size();
}
inline void TLevyTeamInstanceTeamSpecificInfo::clear_monsteridarr() {
  monsteridarr_.Clear();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceTeamSpecificInfo::monsteridarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceTeamSpecificInfo.MonsterIdArr)
  return monsteridarr_.Get(index);
}
inline void TLevyTeamInstanceTeamSpecificInfo::set_monsteridarr(int index, ::google::protobuf::uint32 value) {
  monsteridarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceTeamSpecificInfo.MonsterIdArr)
}
inline void TLevyTeamInstanceTeamSpecificInfo::add_monsteridarr(::google::protobuf::uint32 value) {
  monsteridarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TLevyTeamInstanceTeamSpecificInfo.MonsterIdArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TLevyTeamInstanceTeamSpecificInfo::monsteridarr() const {
  // @@protoc_insertion_point(field_list:pb.TLevyTeamInstanceTeamSpecificInfo.MonsterIdArr)
  return monsteridarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TLevyTeamInstanceTeamSpecificInfo::mutable_monsteridarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TLevyTeamInstanceTeamSpecificInfo.MonsterIdArr)
  return &monsteridarr_;
}

// optional uint32 DayIndex = 3;
inline bool TLevyTeamInstanceTeamSpecificInfo::has_dayindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TLevyTeamInstanceTeamSpecificInfo::set_has_dayindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TLevyTeamInstanceTeamSpecificInfo::clear_has_dayindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TLevyTeamInstanceTeamSpecificInfo::clear_dayindex() {
  dayindex_ = 0u;
  clear_has_dayindex();
}
inline ::google::protobuf::uint32 TLevyTeamInstanceTeamSpecificInfo::dayindex() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceTeamSpecificInfo.DayIndex)
  return dayindex_;
}
inline void TLevyTeamInstanceTeamSpecificInfo::set_dayindex(::google::protobuf::uint32 value) {
  set_has_dayindex();
  dayindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceTeamSpecificInfo.DayIndex)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceQuickMatchReq

// optional uint64 RoomId = 1;
inline bool TLevyTeamInstanceQuickMatchReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceQuickMatchReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceQuickMatchReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceQuickMatchReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceQuickMatchReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceQuickMatchReq.RoomId)
  return roomid_;
}
inline void TLevyTeamInstanceQuickMatchReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceQuickMatchReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TLevyTeamInstanceQuickMatchReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceQuickMatchReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceQuickMatchReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceQuickMatchReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TLevyTeamInstanceQuickMatchReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceQuickMatchReq.TeamId)
  return teamid_;
}
inline void TLevyTeamInstanceQuickMatchReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceQuickMatchReq.TeamId)
}

// -------------------------------------------------------------------

// TLevyTeamInstanceQuickMatchRsp

// optional .pb.EJoinLevyInstanceTeamErrorCode ErrorCode = 1;
inline bool TLevyTeamInstanceQuickMatchRsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TLevyTeamInstanceQuickMatchRsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TLevyTeamInstanceQuickMatchRsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TLevyTeamInstanceQuickMatchRsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::pb::EJoinLevyInstanceTeamErrorCode TLevyTeamInstanceQuickMatchRsp::errorcode() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceQuickMatchRsp.ErrorCode)
  return static_cast< ::pb::EJoinLevyInstanceTeamErrorCode >(errorcode_);
}
inline void TLevyTeamInstanceQuickMatchRsp::set_errorcode(::pb::EJoinLevyInstanceTeamErrorCode value) {
  assert(::pb::EJoinLevyInstanceTeamErrorCode_IsValid(value));
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TLevyTeamInstanceQuickMatchRsp.ErrorCode)
}

// optional .pb.TLevyInstanceTeamInfo TeamInfo = 2;
inline bool TLevyTeamInstanceQuickMatchRsp::has_teaminfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TLevyTeamInstanceQuickMatchRsp::set_has_teaminfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TLevyTeamInstanceQuickMatchRsp::clear_has_teaminfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TLevyTeamInstanceQuickMatchRsp::clear_teaminfo() {
  if (teaminfo_ != NULL) teaminfo_->::pb::TLevyInstanceTeamInfo::Clear();
  clear_has_teaminfo();
}
inline const ::pb::TLevyInstanceTeamInfo& TLevyTeamInstanceQuickMatchRsp::teaminfo() const {
  // @@protoc_insertion_point(field_get:pb.TLevyTeamInstanceQuickMatchRsp.TeamInfo)
  return teaminfo_ != NULL ? *teaminfo_ : *default_instance_->teaminfo_;
}
inline ::pb::TLevyInstanceTeamInfo* TLevyTeamInstanceQuickMatchRsp::mutable_teaminfo() {
  set_has_teaminfo();
  if (teaminfo_ == NULL) teaminfo_ = new ::pb::TLevyInstanceTeamInfo;
  // @@protoc_insertion_point(field_mutable:pb.TLevyTeamInstanceQuickMatchRsp.TeamInfo)
  return teaminfo_;
}
inline ::pb::TLevyInstanceTeamInfo* TLevyTeamInstanceQuickMatchRsp::release_teaminfo() {
  clear_has_teaminfo();
  ::pb::TLevyInstanceTeamInfo* temp = teaminfo_;
  teaminfo_ = NULL;
  return temp;
}
inline void TLevyTeamInstanceQuickMatchRsp::set_allocated_teaminfo(::pb::TLevyInstanceTeamInfo* teaminfo) {
  delete teaminfo_;
  teaminfo_ = teaminfo;
  if (teaminfo) {
    set_has_teaminfo();
  } else {
    clear_has_teaminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TLevyTeamInstanceQuickMatchRsp.TeamInfo)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::EJoinLevyInstanceTeamErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EJoinLevyInstanceTeamErrorCode>() {
  return ::pb::EJoinLevyInstanceTeamErrorCode_descriptor();
}
template <> struct is_proto_enum< ::pb::ELevyTeamInstanceGetListType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ELevyTeamInstanceGetListType>() {
  return ::pb::ELevyTeamInstanceGetListType_descriptor();
}
template <> struct is_proto_enum< ::pb::ELevyTeamKickOrQuitTeamRetCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ELevyTeamKickOrQuitTeamRetCode>() {
  return ::pb::ELevyTeamKickOrQuitTeamRetCode_descriptor();
}
template <> struct is_proto_enum< ::pb::ELevyTeamInstanceBattleResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ELevyTeamInstanceBattleResult>() {
  return ::pb::ELevyTeamInstanceBattleResult_descriptor();
}
template <> struct is_proto_enum< ::pb::ELevyTeamInstanceAbortReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ELevyTeamInstanceAbortReason>() {
  return ::pb::ELevyTeamInstanceAbortReason_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fLevyTeamInstance_2eproto__INCLUDED
