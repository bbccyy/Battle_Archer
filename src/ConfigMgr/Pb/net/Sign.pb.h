// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Sign.proto

#ifndef PROTOBUF_net_2fSign_2eproto__INCLUDED
#define PROTOBUF_net_2fSign_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fSign_2eproto();
void protobuf_AssignDesc_net_2fSign_2eproto();
void protobuf_ShutdownFile_net_2fSign_2eproto();

class TSignReceiveRewardInfo;
class TSignGetSignInfoReq;
class TSignGetSignInfoRsp;
class TSignSignReq;
class TSignSignRsp;
class TSignSupplementSignReq;
class TSignSupplementSignRsp;
class TSignReceiveAccuSignRewardReq;
class TSignReceiveAccuSignRewardRsp;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TSignReceiveRewardInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Sign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSignReceiveRewardInfo : public ::google::protobuf::Message {
 public:
  TSignReceiveRewardInfo();
  virtual ~TSignReceiveRewardInfo();

  TSignReceiveRewardInfo(const TSignReceiveRewardInfo& from);

  inline TSignReceiveRewardInfo& operator=(const TSignReceiveRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSignReceiveRewardInfo& default_instance();

  void Swap(TSignReceiveRewardInfo* other);

  // implements Message ----------------------------------------------

  TSignReceiveRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSignReceiveRewardInfo& from);
  void MergeFrom(const TSignReceiveRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSignReceiveRewardInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 ReceiveTime = 2;
  inline bool has_receivetime() const;
  inline void clear_receivetime();
  static const int kReceiveTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSignReceiveRewardInfo</name>
  	<Function>
  		<name>receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 receivetime() const;
  inline void set_receivetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TSignReceiveRewardInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_receivetime();
  inline void clear_has_receivetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 receivetime_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fSign_2eproto();
  friend void protobuf_AssignDesc_net_2fSign_2eproto();
  friend void protobuf_ShutdownFile_net_2fSign_2eproto();

  void InitAsDefaultInstance();
  static TSignReceiveRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSignGetSignInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Sign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSignGetSignInfoReq : public ::google::protobuf::Message {
 public:
  TSignGetSignInfoReq();
  virtual ~TSignGetSignInfoReq();

  TSignGetSignInfoReq(const TSignGetSignInfoReq& from);

  inline TSignGetSignInfoReq& operator=(const TSignGetSignInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSignGetSignInfoReq& default_instance();

  void Swap(TSignGetSignInfoReq* other);

  // implements Message ----------------------------------------------

  TSignGetSignInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSignGetSignInfoReq& from);
  void MergeFrom(const TSignGetSignInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.TSignGetSignInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_net_2fSign_2eproto();
  friend void protobuf_AssignDesc_net_2fSign_2eproto();
  friend void protobuf_ShutdownFile_net_2fSign_2eproto();

  void InitAsDefaultInstance();
  static TSignGetSignInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSignGetSignInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Sign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSignGetSignInfoRsp : public ::google::protobuf::Message {
 public:
  TSignGetSignInfoRsp();
  virtual ~TSignGetSignInfoRsp();

  TSignGetSignInfoRsp(const TSignGetSignInfoRsp& from);

  inline TSignGetSignInfoRsp& operator=(const TSignGetSignInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSignGetSignInfoRsp& default_instance();

  void Swap(TSignGetSignInfoRsp* other);

  // implements Message ----------------------------------------------

  TSignGetSignInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSignGetSignInfoRsp& from);
  void MergeFrom(const TSignGetSignInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 CycleId = 1;
  inline bool has_cycleid() const;
  inline void clear_cycleid();
  static const int kCycleIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSignGetSignInfoRsp</name>
  	<Function>
  		<name>cycleid</name>
  		<replaceName>CycleId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_cycleid</name>
  		<replaceName>CycleId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_cycleid</name>
  		<replaceName>CycleId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 cycleid() const;
  inline void set_cycleid(::google::protobuf::uint32 value);

  // optional uint32 CurDayNum = 2;
  inline bool has_curdaynum() const;
  inline void clear_curdaynum();
  static const int kCurDayNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSignGetSignInfoRsp</name>
  	<Function>
  		<name>curdaynum</name>
  		<replaceName>CurDayNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_curdaynum</name>
  		<replaceName>CurDayNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_curdaynum</name>
  		<replaceName>CurDayNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 curdaynum() const;
  inline void set_curdaynum(::google::protobuf::uint32 value);

  // optional uint32 SupplementNum = 3;
  inline bool has_supplementnum() const;
  inline void clear_supplementnum();
  static const int kSupplementNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TSignGetSignInfoRsp</name>
  	<Function>
  		<name>supplementnum</name>
  		<replaceName>SupplementNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_supplementnum</name>
  		<replaceName>SupplementNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_supplementnum</name>
  		<replaceName>SupplementNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 supplementnum() const;
  inline void set_supplementnum(::google::protobuf::uint32 value);

  // optional uint32 AccuDayNum = 4;
  inline bool has_accudaynum() const;
  inline void clear_accudaynum();
  static const int kAccuDayNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TSignGetSignInfoRsp</name>
  	<Function>
  		<name>accudaynum</name>
  		<replaceName>AccuDayNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_accudaynum</name>
  		<replaceName>AccuDayNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_accudaynum</name>
  		<replaceName>AccuDayNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 accudaynum() const;
  inline void set_accudaynum(::google::protobuf::uint32 value);

  // repeated .pb.TSignReceiveRewardInfo DaySignReceiveArray = 5;
  inline int daysignreceivearray_size() const;
  inline void clear_daysignreceivearray();
  static const int kDaySignReceiveArrayFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TSignGetSignInfoRsp</name>
  	<Function>
  		<name>daysignreceivearray</name>
  		<replaceName>DaySignReceiveArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_daysignreceivearray</name>
  		<replaceName>DaySignReceiveArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_daysignreceivearray</name>
  		<replaceName>DaySignReceiveArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_daysignreceivearray</name>
  		<replaceName>DaySignReceiveArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>daysignreceivearray_size</name>
  		<replaceName>DaySignReceiveArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSignReceiveRewardInfo& daysignreceivearray(int index) const;
  inline ::pb::TSignReceiveRewardInfo* mutable_daysignreceivearray(int index);
  inline ::pb::TSignReceiveRewardInfo* add_daysignreceivearray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSignReceiveRewardInfo >&
      daysignreceivearray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSignReceiveRewardInfo >*
      mutable_daysignreceivearray();

  // repeated .pb.TSignReceiveRewardInfo AccuSignReceiveArray = 6;
  inline int accusignreceivearray_size() const;
  inline void clear_accusignreceivearray();
  static const int kAccuSignReceiveArrayFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TSignGetSignInfoRsp</name>
  	<Function>
  		<name>accusignreceivearray</name>
  		<replaceName>AccuSignReceiveArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_accusignreceivearray</name>
  		<replaceName>AccuSignReceiveArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_accusignreceivearray</name>
  		<replaceName>AccuSignReceiveArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_accusignreceivearray</name>
  		<replaceName>AccuSignReceiveArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>accusignreceivearray_size</name>
  		<replaceName>AccuSignReceiveArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSignReceiveRewardInfo& accusignreceivearray(int index) const;
  inline ::pb::TSignReceiveRewardInfo* mutable_accusignreceivearray(int index);
  inline ::pb::TSignReceiveRewardInfo* add_accusignreceivearray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSignReceiveRewardInfo >&
      accusignreceivearray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSignReceiveRewardInfo >*
      mutable_accusignreceivearray();

  // @@protoc_insertion_point(class_scope:pb.TSignGetSignInfoRsp)
 private:
  inline void set_has_cycleid();
  inline void clear_has_cycleid();
  inline void set_has_curdaynum();
  inline void clear_has_curdaynum();
  inline void set_has_supplementnum();
  inline void clear_has_supplementnum();
  inline void set_has_accudaynum();
  inline void clear_has_accudaynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cycleid_;
  ::google::protobuf::uint32 curdaynum_;
  ::google::protobuf::uint32 supplementnum_;
  ::google::protobuf::uint32 accudaynum_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSignReceiveRewardInfo > daysignreceivearray_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSignReceiveRewardInfo > accusignreceivearray_;
  friend void  protobuf_AddDesc_net_2fSign_2eproto();
  friend void protobuf_AssignDesc_net_2fSign_2eproto();
  friend void protobuf_ShutdownFile_net_2fSign_2eproto();

  void InitAsDefaultInstance();
  static TSignGetSignInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSignSignReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Sign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSignSignReq : public ::google::protobuf::Message {
 public:
  TSignSignReq();
  virtual ~TSignSignReq();

  TSignSignReq(const TSignSignReq& from);

  inline TSignSignReq& operator=(const TSignSignReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSignSignReq& default_instance();

  void Swap(TSignSignReq* other);

  // implements Message ----------------------------------------------

  TSignSignReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSignSignReq& from);
  void MergeFrom(const TSignSignReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.TSignSignReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_net_2fSign_2eproto();
  friend void protobuf_AssignDesc_net_2fSign_2eproto();
  friend void protobuf_ShutdownFile_net_2fSign_2eproto();

  void InitAsDefaultInstance();
  static TSignSignReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSignSignRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Sign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSignSignRsp : public ::google::protobuf::Message {
 public:
  TSignSignRsp();
  virtual ~TSignSignRsp();

  TSignSignRsp(const TSignSignRsp& from);

  inline TSignSignRsp& operator=(const TSignSignRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSignSignRsp& default_instance();

  void Swap(TSignSignRsp* other);

  // implements Message ----------------------------------------------

  TSignSignRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSignSignRsp& from);
  void MergeFrom(const TSignSignRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSignSignRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TSignSignRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fSign_2eproto();
  friend void protobuf_AssignDesc_net_2fSign_2eproto();
  friend void protobuf_ShutdownFile_net_2fSign_2eproto();

  void InitAsDefaultInstance();
  static TSignSignRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSignSupplementSignReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Sign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSignSupplementSignReq : public ::google::protobuf::Message {
 public:
  TSignSupplementSignReq();
  virtual ~TSignSupplementSignReq();

  TSignSupplementSignReq(const TSignSupplementSignReq& from);

  inline TSignSupplementSignReq& operator=(const TSignSupplementSignReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSignSupplementSignReq& default_instance();

  void Swap(TSignSupplementSignReq* other);

  // implements Message ----------------------------------------------

  TSignSupplementSignReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSignSupplementSignReq& from);
  void MergeFrom(const TSignSupplementSignReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.TSignSupplementSignReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_net_2fSign_2eproto();
  friend void protobuf_AssignDesc_net_2fSign_2eproto();
  friend void protobuf_ShutdownFile_net_2fSign_2eproto();

  void InitAsDefaultInstance();
  static TSignSupplementSignReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSignSupplementSignRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Sign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSignSupplementSignRsp : public ::google::protobuf::Message {
 public:
  TSignSupplementSignRsp();
  virtual ~TSignSupplementSignRsp();

  TSignSupplementSignRsp(const TSignSupplementSignRsp& from);

  inline TSignSupplementSignRsp& operator=(const TSignSupplementSignRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSignSupplementSignRsp& default_instance();

  void Swap(TSignSupplementSignRsp* other);

  // implements Message ----------------------------------------------

  TSignSupplementSignRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSignSupplementSignRsp& from);
  void MergeFrom(const TSignSupplementSignRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSignSupplementSignRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TSignSupplementSignRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fSign_2eproto();
  friend void protobuf_AssignDesc_net_2fSign_2eproto();
  friend void protobuf_ShutdownFile_net_2fSign_2eproto();

  void InitAsDefaultInstance();
  static TSignSupplementSignRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSignReceiveAccuSignRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Sign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSignReceiveAccuSignRewardReq : public ::google::protobuf::Message {
 public:
  TSignReceiveAccuSignRewardReq();
  virtual ~TSignReceiveAccuSignRewardReq();

  TSignReceiveAccuSignRewardReq(const TSignReceiveAccuSignRewardReq& from);

  inline TSignReceiveAccuSignRewardReq& operator=(const TSignReceiveAccuSignRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSignReceiveAccuSignRewardReq& default_instance();

  void Swap(TSignReceiveAccuSignRewardReq* other);

  // implements Message ----------------------------------------------

  TSignReceiveAccuSignRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSignReceiveAccuSignRewardReq& from);
  void MergeFrom(const TSignReceiveAccuSignRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSignReceiveAccuSignRewardReq</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TSignReceiveAccuSignRewardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_net_2fSign_2eproto();
  friend void protobuf_AssignDesc_net_2fSign_2eproto();
  friend void protobuf_ShutdownFile_net_2fSign_2eproto();

  void InitAsDefaultInstance();
  static TSignReceiveAccuSignRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSignReceiveAccuSignRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/Sign.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSignReceiveAccuSignRewardRsp : public ::google::protobuf::Message {
 public:
  TSignReceiveAccuSignRewardRsp();
  virtual ~TSignReceiveAccuSignRewardRsp();

  TSignReceiveAccuSignRewardRsp(const TSignReceiveAccuSignRewardRsp& from);

  inline TSignReceiveAccuSignRewardRsp& operator=(const TSignReceiveAccuSignRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSignReceiveAccuSignRewardRsp& default_instance();

  void Swap(TSignReceiveAccuSignRewardRsp* other);

  // implements Message ----------------------------------------------

  TSignReceiveAccuSignRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSignReceiveAccuSignRewardRsp& from);
  void MergeFrom(const TSignReceiveAccuSignRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArray = 1;
  inline int rewardarray_size() const;
  inline void clear_rewardarray();
  static const int kRewardArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSignReceiveAccuSignRewardRsp</name>
  	<Function>
  		<name>rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarray</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarray_size</name>
  		<replaceName>RewardArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarray(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarray(int index);
  inline ::pb::TCommonReward* add_rewardarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarray();

  // @@protoc_insertion_point(class_scope:pb.TSignReceiveAccuSignRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarray_;
  friend void  protobuf_AddDesc_net_2fSign_2eproto();
  friend void protobuf_AssignDesc_net_2fSign_2eproto();
  friend void protobuf_ShutdownFile_net_2fSign_2eproto();

  void InitAsDefaultInstance();
  static TSignReceiveAccuSignRewardRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TSignReceiveRewardInfo

// optional uint32 Id = 1;
inline bool TSignReceiveRewardInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSignReceiveRewardInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSignReceiveRewardInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSignReceiveRewardInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TSignReceiveRewardInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TSignReceiveRewardInfo.Id)
  return id_;
}
inline void TSignReceiveRewardInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TSignReceiveRewardInfo.Id)
}

// optional uint64 ReceiveTime = 2;
inline bool TSignReceiveRewardInfo::has_receivetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSignReceiveRewardInfo::set_has_receivetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSignReceiveRewardInfo::clear_has_receivetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSignReceiveRewardInfo::clear_receivetime() {
  receivetime_ = GOOGLE_ULONGLONG(0);
  clear_has_receivetime();
}
inline ::google::protobuf::uint64 TSignReceiveRewardInfo::receivetime() const {
  // @@protoc_insertion_point(field_get:pb.TSignReceiveRewardInfo.ReceiveTime)
  return receivetime_;
}
inline void TSignReceiveRewardInfo::set_receivetime(::google::protobuf::uint64 value) {
  set_has_receivetime();
  receivetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TSignReceiveRewardInfo.ReceiveTime)
}

// -------------------------------------------------------------------

// TSignGetSignInfoReq

// -------------------------------------------------------------------

// TSignGetSignInfoRsp

// optional uint32 CycleId = 1;
inline bool TSignGetSignInfoRsp::has_cycleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSignGetSignInfoRsp::set_has_cycleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSignGetSignInfoRsp::clear_has_cycleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSignGetSignInfoRsp::clear_cycleid() {
  cycleid_ = 0u;
  clear_has_cycleid();
}
inline ::google::protobuf::uint32 TSignGetSignInfoRsp::cycleid() const {
  // @@protoc_insertion_point(field_get:pb.TSignGetSignInfoRsp.CycleId)
  return cycleid_;
}
inline void TSignGetSignInfoRsp::set_cycleid(::google::protobuf::uint32 value) {
  set_has_cycleid();
  cycleid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSignGetSignInfoRsp.CycleId)
}

// optional uint32 CurDayNum = 2;
inline bool TSignGetSignInfoRsp::has_curdaynum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSignGetSignInfoRsp::set_has_curdaynum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSignGetSignInfoRsp::clear_has_curdaynum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSignGetSignInfoRsp::clear_curdaynum() {
  curdaynum_ = 0u;
  clear_has_curdaynum();
}
inline ::google::protobuf::uint32 TSignGetSignInfoRsp::curdaynum() const {
  // @@protoc_insertion_point(field_get:pb.TSignGetSignInfoRsp.CurDayNum)
  return curdaynum_;
}
inline void TSignGetSignInfoRsp::set_curdaynum(::google::protobuf::uint32 value) {
  set_has_curdaynum();
  curdaynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TSignGetSignInfoRsp.CurDayNum)
}

// optional uint32 SupplementNum = 3;
inline bool TSignGetSignInfoRsp::has_supplementnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TSignGetSignInfoRsp::set_has_supplementnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TSignGetSignInfoRsp::clear_has_supplementnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TSignGetSignInfoRsp::clear_supplementnum() {
  supplementnum_ = 0u;
  clear_has_supplementnum();
}
inline ::google::protobuf::uint32 TSignGetSignInfoRsp::supplementnum() const {
  // @@protoc_insertion_point(field_get:pb.TSignGetSignInfoRsp.SupplementNum)
  return supplementnum_;
}
inline void TSignGetSignInfoRsp::set_supplementnum(::google::protobuf::uint32 value) {
  set_has_supplementnum();
  supplementnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TSignGetSignInfoRsp.SupplementNum)
}

// optional uint32 AccuDayNum = 4;
inline bool TSignGetSignInfoRsp::has_accudaynum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TSignGetSignInfoRsp::set_has_accudaynum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TSignGetSignInfoRsp::clear_has_accudaynum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TSignGetSignInfoRsp::clear_accudaynum() {
  accudaynum_ = 0u;
  clear_has_accudaynum();
}
inline ::google::protobuf::uint32 TSignGetSignInfoRsp::accudaynum() const {
  // @@protoc_insertion_point(field_get:pb.TSignGetSignInfoRsp.AccuDayNum)
  return accudaynum_;
}
inline void TSignGetSignInfoRsp::set_accudaynum(::google::protobuf::uint32 value) {
  set_has_accudaynum();
  accudaynum_ = value;
  // @@protoc_insertion_point(field_set:pb.TSignGetSignInfoRsp.AccuDayNum)
}

// repeated .pb.TSignReceiveRewardInfo DaySignReceiveArray = 5;
inline int TSignGetSignInfoRsp::daysignreceivearray_size() const {
  return daysignreceivearray_.size();
}
inline void TSignGetSignInfoRsp::clear_daysignreceivearray() {
  daysignreceivearray_.Clear();
}
inline const ::pb::TSignReceiveRewardInfo& TSignGetSignInfoRsp::daysignreceivearray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSignGetSignInfoRsp.DaySignReceiveArray)
  return daysignreceivearray_.Get(index);
}
inline ::pb::TSignReceiveRewardInfo* TSignGetSignInfoRsp::mutable_daysignreceivearray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSignGetSignInfoRsp.DaySignReceiveArray)
  return daysignreceivearray_.Mutable(index);
}
inline ::pb::TSignReceiveRewardInfo* TSignGetSignInfoRsp::add_daysignreceivearray() {
  // @@protoc_insertion_point(field_add:pb.TSignGetSignInfoRsp.DaySignReceiveArray)
  return daysignreceivearray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSignReceiveRewardInfo >&
TSignGetSignInfoRsp::daysignreceivearray() const {
  // @@protoc_insertion_point(field_list:pb.TSignGetSignInfoRsp.DaySignReceiveArray)
  return daysignreceivearray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSignReceiveRewardInfo >*
TSignGetSignInfoRsp::mutable_daysignreceivearray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSignGetSignInfoRsp.DaySignReceiveArray)
  return &daysignreceivearray_;
}

// repeated .pb.TSignReceiveRewardInfo AccuSignReceiveArray = 6;
inline int TSignGetSignInfoRsp::accusignreceivearray_size() const {
  return accusignreceivearray_.size();
}
inline void TSignGetSignInfoRsp::clear_accusignreceivearray() {
  accusignreceivearray_.Clear();
}
inline const ::pb::TSignReceiveRewardInfo& TSignGetSignInfoRsp::accusignreceivearray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSignGetSignInfoRsp.AccuSignReceiveArray)
  return accusignreceivearray_.Get(index);
}
inline ::pb::TSignReceiveRewardInfo* TSignGetSignInfoRsp::mutable_accusignreceivearray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSignGetSignInfoRsp.AccuSignReceiveArray)
  return accusignreceivearray_.Mutable(index);
}
inline ::pb::TSignReceiveRewardInfo* TSignGetSignInfoRsp::add_accusignreceivearray() {
  // @@protoc_insertion_point(field_add:pb.TSignGetSignInfoRsp.AccuSignReceiveArray)
  return accusignreceivearray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSignReceiveRewardInfo >&
TSignGetSignInfoRsp::accusignreceivearray() const {
  // @@protoc_insertion_point(field_list:pb.TSignGetSignInfoRsp.AccuSignReceiveArray)
  return accusignreceivearray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSignReceiveRewardInfo >*
TSignGetSignInfoRsp::mutable_accusignreceivearray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSignGetSignInfoRsp.AccuSignReceiveArray)
  return &accusignreceivearray_;
}

// -------------------------------------------------------------------

// TSignSignReq

// -------------------------------------------------------------------

// TSignSignRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TSignSignRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TSignSignRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TSignSignRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSignSignRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TSignSignRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSignSignRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TSignSignRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TSignSignRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TSignSignRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TSignSignRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TSignSignRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSignSignRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TSignSupplementSignReq

// -------------------------------------------------------------------

// TSignSupplementSignRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TSignSupplementSignRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TSignSupplementSignRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TSignSupplementSignRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSignSupplementSignRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TSignSupplementSignRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSignSupplementSignRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TSignSupplementSignRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TSignSupplementSignRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TSignSupplementSignRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TSignSupplementSignRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TSignSupplementSignRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSignSupplementSignRsp.RewardArray)
  return &rewardarray_;
}

// -------------------------------------------------------------------

// TSignReceiveAccuSignRewardReq

// optional uint32 Id = 1;
inline bool TSignReceiveAccuSignRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSignReceiveAccuSignRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSignReceiveAccuSignRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSignReceiveAccuSignRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TSignReceiveAccuSignRewardReq::id() const {
  // @@protoc_insertion_point(field_get:pb.TSignReceiveAccuSignRewardReq.Id)
  return id_;
}
inline void TSignReceiveAccuSignRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TSignReceiveAccuSignRewardReq.Id)
}

// -------------------------------------------------------------------

// TSignReceiveAccuSignRewardRsp

// repeated .pb.TCommonReward RewardArray = 1;
inline int TSignReceiveAccuSignRewardRsp::rewardarray_size() const {
  return rewardarray_.size();
}
inline void TSignReceiveAccuSignRewardRsp::clear_rewardarray() {
  rewardarray_.Clear();
}
inline const ::pb::TCommonReward& TSignReceiveAccuSignRewardRsp::rewardarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSignReceiveAccuSignRewardRsp.RewardArray)
  return rewardarray_.Get(index);
}
inline ::pb::TCommonReward* TSignReceiveAccuSignRewardRsp::mutable_rewardarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSignReceiveAccuSignRewardRsp.RewardArray)
  return rewardarray_.Mutable(index);
}
inline ::pb::TCommonReward* TSignReceiveAccuSignRewardRsp::add_rewardarray() {
  // @@protoc_insertion_point(field_add:pb.TSignReceiveAccuSignRewardRsp.RewardArray)
  return rewardarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TSignReceiveAccuSignRewardRsp::rewardarray() const {
  // @@protoc_insertion_point(field_list:pb.TSignReceiveAccuSignRewardRsp.RewardArray)
  return rewardarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TSignReceiveAccuSignRewardRsp::mutable_rewardarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSignReceiveAccuSignRewardRsp.RewardArray)
  return &rewardarray_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fSign_2eproto__INCLUDED
