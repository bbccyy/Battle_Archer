// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/CommonTeam.proto

#ifndef PROTOBUF_net_2fCommonTeam_2eproto__INCLUDED
#define PROTOBUF_net_2fCommonTeam_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fCommonTeam_2eproto();
void protobuf_AssignDesc_net_2fCommonTeam_2eproto();
void protobuf_ShutdownFile_net_2fCommonTeam_2eproto();

class TCommonEmpty;

enum ECommonTeamMode {
  COMMON_TEAM_MODE_ALONE = 0,
  COMMON_TEAM_MODE_LEADER = 1,
  COMMON_TEAM_MODE_MEMBER = 2,
  COMMON_TEAM_MODE_HELPER = 3
};
bool ECommonTeamMode_IsValid(int value);
const ECommonTeamMode ECommonTeamMode_MIN = COMMON_TEAM_MODE_ALONE;
const ECommonTeamMode ECommonTeamMode_MAX = COMMON_TEAM_MODE_HELPER;
const int ECommonTeamMode_ARRAYSIZE = ECommonTeamMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECommonTeamMode_descriptor();
inline const ::std::string& ECommonTeamMode_Name(ECommonTeamMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECommonTeamMode_descriptor(), value);
}
inline bool ECommonTeamMode_Parse(
    const ::std::string& name, ECommonTeamMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECommonTeamMode>(
    ECommonTeamMode_descriptor(), name, value);
}
enum ECommonChangeTeamRetCode {
  COMMON_TEAM_RET_CODE_CHANGEOK = 0,
  COMMON_TEAM_RET_CODE_TEAMSTART = 1,
  COMMON_TEAM_RET_CODE_NOINTEAM = 2,
  COMMON_TEAM_RET_CODE_INVALIDTEAM = 3
};
bool ECommonChangeTeamRetCode_IsValid(int value);
const ECommonChangeTeamRetCode ECommonChangeTeamRetCode_MIN = COMMON_TEAM_RET_CODE_CHANGEOK;
const ECommonChangeTeamRetCode ECommonChangeTeamRetCode_MAX = COMMON_TEAM_RET_CODE_INVALIDTEAM;
const int ECommonChangeTeamRetCode_ARRAYSIZE = ECommonChangeTeamRetCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECommonChangeTeamRetCode_descriptor();
inline const ::std::string& ECommonChangeTeamRetCode_Name(ECommonChangeTeamRetCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECommonChangeTeamRetCode_descriptor(), value);
}
inline bool ECommonChangeTeamRetCode_Parse(
    const ::std::string& name, ECommonChangeTeamRetCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECommonChangeTeamRetCode>(
    ECommonChangeTeamRetCode_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TCommonEmpty</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/CommonTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TCommonEmpty : public ::google::protobuf::Message {
 public:
  TCommonEmpty();
  virtual ~TCommonEmpty();

  TCommonEmpty(const TCommonEmpty& from);

  inline TCommonEmpty& operator=(const TCommonEmpty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TCommonEmpty& default_instance();

  void Swap(TCommonEmpty* other);

  // implements Message ----------------------------------------------

  TCommonEmpty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TCommonEmpty& from);
  void MergeFrom(const TCommonEmpty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.TCommonEmpty)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_net_2fCommonTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fCommonTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fCommonTeam_2eproto();

  void InitAsDefaultInstance();
  static TCommonEmpty* default_instance_;
};
// ===================================================================


// ===================================================================

// TCommonEmpty


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::ECommonTeamMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ECommonTeamMode>() {
  return ::pb::ECommonTeamMode_descriptor();
}
template <> struct is_proto_enum< ::pb::ECommonChangeTeamRetCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ECommonChangeTeamRetCode>() {
  return ::pb::ECommonChangeTeamRetCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fCommonTeam_2eproto__INCLUDED
