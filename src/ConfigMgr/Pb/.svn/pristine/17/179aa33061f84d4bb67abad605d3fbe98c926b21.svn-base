// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/DailyGift.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/DailyGift.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TDailyGiftItemInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDailyGiftItemInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDailyGiftShopItemInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDailyGiftShopItemInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDailyGiftGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDailyGiftGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDailyGiftGetArrGiftRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDailyGiftGetArrGiftRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDailyGiftGetArrGiftRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDailyGiftGetArrGiftRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDailyGiftExchangeRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDailyGiftExchangeRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDailyGiftExchangeRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDailyGiftExchangeRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDailyGiftInfoNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDailyGiftInfoNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fDailyGift_2eproto() {
  protobuf_AddDesc_net_2fDailyGift_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/DailyGift.proto");
  GOOGLE_CHECK(file != NULL);
  TDailyGiftItemInfo_descriptor_ = file->message_type(0);
  static const int TDailyGiftItemInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftItemInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftItemInfo, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftItemInfo, status_),
  };
  TDailyGiftItemInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDailyGiftItemInfo_descriptor_,
      TDailyGiftItemInfo::default_instance_,
      TDailyGiftItemInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftItemInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftItemInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDailyGiftItemInfo));
  TDailyGiftShopItemInfo_descriptor_ = file->message_type(1);
  static const int TDailyGiftShopItemInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftShopItemInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftShopItemInfo, num_),
  };
  TDailyGiftShopItemInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDailyGiftShopItemInfo_descriptor_,
      TDailyGiftShopItemInfo::default_instance_,
      TDailyGiftShopItemInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftShopItemInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftShopItemInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDailyGiftShopItemInfo));
  TDailyGiftGetInfoRsp_descriptor_ = file->message_type(2);
  static const int TDailyGiftGetInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftGetInfoRsp, arrgiftiteminfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftGetInfoRsp, arrshopiteminfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftGetInfoRsp, getday_),
  };
  TDailyGiftGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDailyGiftGetInfoRsp_descriptor_,
      TDailyGiftGetInfoRsp::default_instance_,
      TDailyGiftGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDailyGiftGetInfoRsp));
  TDailyGiftGetArrGiftRewardReq_descriptor_ = file->message_type(3);
  static const int TDailyGiftGetArrGiftRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftGetArrGiftRewardReq, arrid_),
  };
  TDailyGiftGetArrGiftRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDailyGiftGetArrGiftRewardReq_descriptor_,
      TDailyGiftGetArrGiftRewardReq::default_instance_,
      TDailyGiftGetArrGiftRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftGetArrGiftRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftGetArrGiftRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDailyGiftGetArrGiftRewardReq));
  TDailyGiftGetArrGiftRewardRsp_descriptor_ = file->message_type(4);
  static const int TDailyGiftGetArrGiftRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftGetArrGiftRewardRsp, arrreward_),
  };
  TDailyGiftGetArrGiftRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDailyGiftGetArrGiftRewardRsp_descriptor_,
      TDailyGiftGetArrGiftRewardRsp::default_instance_,
      TDailyGiftGetArrGiftRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftGetArrGiftRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftGetArrGiftRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDailyGiftGetArrGiftRewardRsp));
  TDailyGiftExchangeRewardReq_descriptor_ = file->message_type(5);
  static const int TDailyGiftExchangeRewardReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftExchangeRewardReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftExchangeRewardReq, num_),
  };
  TDailyGiftExchangeRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDailyGiftExchangeRewardReq_descriptor_,
      TDailyGiftExchangeRewardReq::default_instance_,
      TDailyGiftExchangeRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftExchangeRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftExchangeRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDailyGiftExchangeRewardReq));
  TDailyGiftExchangeRewardRsp_descriptor_ = file->message_type(6);
  static const int TDailyGiftExchangeRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftExchangeRewardRsp, arrreward_),
  };
  TDailyGiftExchangeRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDailyGiftExchangeRewardRsp_descriptor_,
      TDailyGiftExchangeRewardRsp::default_instance_,
      TDailyGiftExchangeRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftExchangeRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftExchangeRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDailyGiftExchangeRewardRsp));
  TDailyGiftInfoNotify_descriptor_ = file->message_type(7);
  static const int TDailyGiftInfoNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftInfoNotify, arrgiftinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftInfoNotify, arrshopinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftInfoNotify, getday_),
  };
  TDailyGiftInfoNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDailyGiftInfoNotify_descriptor_,
      TDailyGiftInfoNotify::default_instance_,
      TDailyGiftInfoNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftInfoNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDailyGiftInfoNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDailyGiftInfoNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fDailyGift_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDailyGiftItemInfo_descriptor_, &TDailyGiftItemInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDailyGiftShopItemInfo_descriptor_, &TDailyGiftShopItemInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDailyGiftGetInfoRsp_descriptor_, &TDailyGiftGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDailyGiftGetArrGiftRewardReq_descriptor_, &TDailyGiftGetArrGiftRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDailyGiftGetArrGiftRewardRsp_descriptor_, &TDailyGiftGetArrGiftRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDailyGiftExchangeRewardReq_descriptor_, &TDailyGiftExchangeRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDailyGiftExchangeRewardRsp_descriptor_, &TDailyGiftExchangeRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDailyGiftInfoNotify_descriptor_, &TDailyGiftInfoNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fDailyGift_2eproto() {
  delete TDailyGiftItemInfo::default_instance_;
  delete TDailyGiftItemInfo_reflection_;
  delete TDailyGiftShopItemInfo::default_instance_;
  delete TDailyGiftShopItemInfo_reflection_;
  delete TDailyGiftGetInfoRsp::default_instance_;
  delete TDailyGiftGetInfoRsp_reflection_;
  delete TDailyGiftGetArrGiftRewardReq::default_instance_;
  delete TDailyGiftGetArrGiftRewardReq_reflection_;
  delete TDailyGiftGetArrGiftRewardRsp::default_instance_;
  delete TDailyGiftGetArrGiftRewardRsp_reflection_;
  delete TDailyGiftExchangeRewardReq::default_instance_;
  delete TDailyGiftExchangeRewardReq_reflection_;
  delete TDailyGiftExchangeRewardRsp::default_instance_;
  delete TDailyGiftExchangeRewardRsp_reflection_;
  delete TDailyGiftInfoNotify::default_instance_;
  delete TDailyGiftInfoNotify_reflection_;
}

void protobuf_AddDesc_net_2fDailyGift_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023net/DailyGift.proto\022\002pb\032\026net/CommonRew"
    "ard.proto\"=\n\022TDailyGiftItemInfo\022\n\n\002Id\030\001 "
    "\001(\r\022\013\n\003Num\030\002 \001(\r\022\016\n\006Status\030\003 \001(\r\"1\n\026TDai"
    "lyGiftShopItemInfo\022\n\n\002Id\030\001 \001(\r\022\013\n\003Num\030\002 "
    "\001(\r\"\214\001\n\024TDailyGiftGetInfoRsp\022/\n\017ArrGiftI"
    "temInfo\030\001 \003(\0132\026.pb.TDailyGiftItemInfo\0223\n"
    "\017ArrShopItemInfo\030\002 \003(\0132\032.pb.TDailyGiftSh"
    "opItemInfo\022\016\n\006GetDay\030\003 \001(\r\".\n\035TDailyGift"
    "GetArrGiftRewardReq\022\r\n\005ArrId\030\001 \003(\r\"E\n\035TD"
    "ailyGiftGetArrGiftRewardRsp\022$\n\tArrReward"
    "\030\001 \003(\0132\021.pb.TCommonReward\"6\n\033TDailyGiftE"
    "xchangeRewardReq\022\n\n\002Id\030\001 \001(\r\022\013\n\003Num\030\002 \001("
    "\r\"C\n\033TDailyGiftExchangeRewardRsp\022$\n\tArrR"
    "eward\030\001 \003(\0132\021.pb.TCommonReward\"\204\001\n\024TDail"
    "yGiftInfoNotify\022+\n\013ArrGiftInfo\030\001 \003(\0132\026.p"
    "b.TDailyGiftItemInfo\022/\n\013ArrShopInfo\030\002 \003("
    "\0132\032.pb.TDailyGiftShopItemInfo\022\016\n\006GetDay\030"
    "\003 \001(\r", 685);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/DailyGift.proto", &protobuf_RegisterTypes);
  TDailyGiftItemInfo::default_instance_ = new TDailyGiftItemInfo();
  TDailyGiftShopItemInfo::default_instance_ = new TDailyGiftShopItemInfo();
  TDailyGiftGetInfoRsp::default_instance_ = new TDailyGiftGetInfoRsp();
  TDailyGiftGetArrGiftRewardReq::default_instance_ = new TDailyGiftGetArrGiftRewardReq();
  TDailyGiftGetArrGiftRewardRsp::default_instance_ = new TDailyGiftGetArrGiftRewardRsp();
  TDailyGiftExchangeRewardReq::default_instance_ = new TDailyGiftExchangeRewardReq();
  TDailyGiftExchangeRewardRsp::default_instance_ = new TDailyGiftExchangeRewardRsp();
  TDailyGiftInfoNotify::default_instance_ = new TDailyGiftInfoNotify();
  TDailyGiftItemInfo::default_instance_->InitAsDefaultInstance();
  TDailyGiftShopItemInfo::default_instance_->InitAsDefaultInstance();
  TDailyGiftGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TDailyGiftGetArrGiftRewardReq::default_instance_->InitAsDefaultInstance();
  TDailyGiftGetArrGiftRewardRsp::default_instance_->InitAsDefaultInstance();
  TDailyGiftExchangeRewardReq::default_instance_->InitAsDefaultInstance();
  TDailyGiftExchangeRewardRsp::default_instance_->InitAsDefaultInstance();
  TDailyGiftInfoNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fDailyGift_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fDailyGift_2eproto {
  StaticDescriptorInitializer_net_2fDailyGift_2eproto() {
    protobuf_AddDesc_net_2fDailyGift_2eproto();
  }
} static_descriptor_initializer_net_2fDailyGift_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TDailyGiftItemInfo::kIdFieldNumber;
const int TDailyGiftItemInfo::kNumFieldNumber;
const int TDailyGiftItemInfo::kStatusFieldNumber;
#endif  // !_MSC_VER

TDailyGiftItemInfo::TDailyGiftItemInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDailyGiftItemInfo)
}

void TDailyGiftItemInfo::InitAsDefaultInstance() {
}

TDailyGiftItemInfo::TDailyGiftItemInfo(const TDailyGiftItemInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDailyGiftItemInfo)
}

void TDailyGiftItemInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  status_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDailyGiftItemInfo::~TDailyGiftItemInfo() {
  // @@protoc_insertion_point(destructor:pb.TDailyGiftItemInfo)
  SharedDtor();
}

void TDailyGiftItemInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDailyGiftItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDailyGiftItemInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDailyGiftItemInfo_descriptor_;
}

const TDailyGiftItemInfo& TDailyGiftItemInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDailyGift_2eproto();
  return *default_instance_;
}

TDailyGiftItemInfo* TDailyGiftItemInfo::default_instance_ = NULL;

TDailyGiftItemInfo* TDailyGiftItemInfo::New() const {
  return new TDailyGiftItemInfo;
}

void TDailyGiftItemInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDailyGiftItemInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, status_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDailyGiftItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDailyGiftItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Status;
        break;
      }

      // optional uint32 Status = 3;
      case 3: {
        if (tag == 24) {
         parse_Status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDailyGiftItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDailyGiftItemInfo)
  return false;
#undef DO_
}

void TDailyGiftItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDailyGiftItemInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  // optional uint32 Status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDailyGiftItemInfo)
}

::google::protobuf::uint8* TDailyGiftItemInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDailyGiftItemInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  // optional uint32 Status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDailyGiftItemInfo)
  return target;
}

int TDailyGiftItemInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint32 Status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDailyGiftItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDailyGiftItemInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDailyGiftItemInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDailyGiftItemInfo::MergeFrom(const TDailyGiftItemInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDailyGiftItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDailyGiftItemInfo::CopyFrom(const TDailyGiftItemInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDailyGiftItemInfo::IsInitialized() const {

  return true;
}

void TDailyGiftItemInfo::Swap(TDailyGiftItemInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDailyGiftItemInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDailyGiftItemInfo_descriptor_;
  metadata.reflection = TDailyGiftItemInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDailyGiftShopItemInfo::kIdFieldNumber;
const int TDailyGiftShopItemInfo::kNumFieldNumber;
#endif  // !_MSC_VER

TDailyGiftShopItemInfo::TDailyGiftShopItemInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDailyGiftShopItemInfo)
}

void TDailyGiftShopItemInfo::InitAsDefaultInstance() {
}

TDailyGiftShopItemInfo::TDailyGiftShopItemInfo(const TDailyGiftShopItemInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDailyGiftShopItemInfo)
}

void TDailyGiftShopItemInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDailyGiftShopItemInfo::~TDailyGiftShopItemInfo() {
  // @@protoc_insertion_point(destructor:pb.TDailyGiftShopItemInfo)
  SharedDtor();
}

void TDailyGiftShopItemInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDailyGiftShopItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDailyGiftShopItemInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDailyGiftShopItemInfo_descriptor_;
}

const TDailyGiftShopItemInfo& TDailyGiftShopItemInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDailyGift_2eproto();
  return *default_instance_;
}

TDailyGiftShopItemInfo* TDailyGiftShopItemInfo::default_instance_ = NULL;

TDailyGiftShopItemInfo* TDailyGiftShopItemInfo::New() const {
  return new TDailyGiftShopItemInfo;
}

void TDailyGiftShopItemInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDailyGiftShopItemInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDailyGiftShopItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDailyGiftShopItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDailyGiftShopItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDailyGiftShopItemInfo)
  return false;
#undef DO_
}

void TDailyGiftShopItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDailyGiftShopItemInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDailyGiftShopItemInfo)
}

::google::protobuf::uint8* TDailyGiftShopItemInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDailyGiftShopItemInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDailyGiftShopItemInfo)
  return target;
}

int TDailyGiftShopItemInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDailyGiftShopItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDailyGiftShopItemInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDailyGiftShopItemInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDailyGiftShopItemInfo::MergeFrom(const TDailyGiftShopItemInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDailyGiftShopItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDailyGiftShopItemInfo::CopyFrom(const TDailyGiftShopItemInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDailyGiftShopItemInfo::IsInitialized() const {

  return true;
}

void TDailyGiftShopItemInfo::Swap(TDailyGiftShopItemInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDailyGiftShopItemInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDailyGiftShopItemInfo_descriptor_;
  metadata.reflection = TDailyGiftShopItemInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDailyGiftGetInfoRsp::kArrGiftItemInfoFieldNumber;
const int TDailyGiftGetInfoRsp::kArrShopItemInfoFieldNumber;
const int TDailyGiftGetInfoRsp::kGetDayFieldNumber;
#endif  // !_MSC_VER

TDailyGiftGetInfoRsp::TDailyGiftGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDailyGiftGetInfoRsp)
}

void TDailyGiftGetInfoRsp::InitAsDefaultInstance() {
}

TDailyGiftGetInfoRsp::TDailyGiftGetInfoRsp(const TDailyGiftGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDailyGiftGetInfoRsp)
}

void TDailyGiftGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  getday_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDailyGiftGetInfoRsp::~TDailyGiftGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TDailyGiftGetInfoRsp)
  SharedDtor();
}

void TDailyGiftGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDailyGiftGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDailyGiftGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDailyGiftGetInfoRsp_descriptor_;
}

const TDailyGiftGetInfoRsp& TDailyGiftGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDailyGift_2eproto();
  return *default_instance_;
}

TDailyGiftGetInfoRsp* TDailyGiftGetInfoRsp::default_instance_ = NULL;

TDailyGiftGetInfoRsp* TDailyGiftGetInfoRsp::New() const {
  return new TDailyGiftGetInfoRsp;
}

void TDailyGiftGetInfoRsp::Clear() {
  getday_ = 0u;
  arrgiftiteminfo_.Clear();
  arrshopiteminfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDailyGiftGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDailyGiftGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TDailyGiftItemInfo ArrGiftItemInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrGiftItemInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrgiftiteminfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrGiftItemInfo;
        if (input->ExpectTag(18)) goto parse_ArrShopItemInfo;
        break;
      }

      // repeated .pb.TDailyGiftShopItemInfo ArrShopItemInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrShopItemInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrshopiteminfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrShopItemInfo;
        if (input->ExpectTag(24)) goto parse_GetDay;
        break;
      }

      // optional uint32 GetDay = 3;
      case 3: {
        if (tag == 24) {
         parse_GetDay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &getday_)));
          set_has_getday();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDailyGiftGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDailyGiftGetInfoRsp)
  return false;
#undef DO_
}

void TDailyGiftGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDailyGiftGetInfoRsp)
  // repeated .pb.TDailyGiftItemInfo ArrGiftItemInfo = 1;
  for (int i = 0; i < this->arrgiftiteminfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrgiftiteminfo(i), output);
  }

  // repeated .pb.TDailyGiftShopItemInfo ArrShopItemInfo = 2;
  for (int i = 0; i < this->arrshopiteminfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrshopiteminfo(i), output);
  }

  // optional uint32 GetDay = 3;
  if (has_getday()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->getday(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDailyGiftGetInfoRsp)
}

::google::protobuf::uint8* TDailyGiftGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDailyGiftGetInfoRsp)
  // repeated .pb.TDailyGiftItemInfo ArrGiftItemInfo = 1;
  for (int i = 0; i < this->arrgiftiteminfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrgiftiteminfo(i), target);
  }

  // repeated .pb.TDailyGiftShopItemInfo ArrShopItemInfo = 2;
  for (int i = 0; i < this->arrshopiteminfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrshopiteminfo(i), target);
  }

  // optional uint32 GetDay = 3;
  if (has_getday()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->getday(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDailyGiftGetInfoRsp)
  return target;
}

int TDailyGiftGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional uint32 GetDay = 3;
    if (has_getday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->getday());
    }

  }
  // repeated .pb.TDailyGiftItemInfo ArrGiftItemInfo = 1;
  total_size += 1 * this->arrgiftiteminfo_size();
  for (int i = 0; i < this->arrgiftiteminfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrgiftiteminfo(i));
  }

  // repeated .pb.TDailyGiftShopItemInfo ArrShopItemInfo = 2;
  total_size += 1 * this->arrshopiteminfo_size();
  for (int i = 0; i < this->arrshopiteminfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrshopiteminfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDailyGiftGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDailyGiftGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDailyGiftGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDailyGiftGetInfoRsp::MergeFrom(const TDailyGiftGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrgiftiteminfo_.MergeFrom(from.arrgiftiteminfo_);
  arrshopiteminfo_.MergeFrom(from.arrshopiteminfo_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_getday()) {
      set_getday(from.getday());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDailyGiftGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDailyGiftGetInfoRsp::CopyFrom(const TDailyGiftGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDailyGiftGetInfoRsp::IsInitialized() const {

  return true;
}

void TDailyGiftGetInfoRsp::Swap(TDailyGiftGetInfoRsp* other) {
  if (other != this) {
    arrgiftiteminfo_.Swap(&other->arrgiftiteminfo_);
    arrshopiteminfo_.Swap(&other->arrshopiteminfo_);
    std::swap(getday_, other->getday_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDailyGiftGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDailyGiftGetInfoRsp_descriptor_;
  metadata.reflection = TDailyGiftGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDailyGiftGetArrGiftRewardReq::kArrIdFieldNumber;
#endif  // !_MSC_VER

TDailyGiftGetArrGiftRewardReq::TDailyGiftGetArrGiftRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDailyGiftGetArrGiftRewardReq)
}

void TDailyGiftGetArrGiftRewardReq::InitAsDefaultInstance() {
}

TDailyGiftGetArrGiftRewardReq::TDailyGiftGetArrGiftRewardReq(const TDailyGiftGetArrGiftRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDailyGiftGetArrGiftRewardReq)
}

void TDailyGiftGetArrGiftRewardReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDailyGiftGetArrGiftRewardReq::~TDailyGiftGetArrGiftRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TDailyGiftGetArrGiftRewardReq)
  SharedDtor();
}

void TDailyGiftGetArrGiftRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDailyGiftGetArrGiftRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDailyGiftGetArrGiftRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDailyGiftGetArrGiftRewardReq_descriptor_;
}

const TDailyGiftGetArrGiftRewardReq& TDailyGiftGetArrGiftRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDailyGift_2eproto();
  return *default_instance_;
}

TDailyGiftGetArrGiftRewardReq* TDailyGiftGetArrGiftRewardReq::default_instance_ = NULL;

TDailyGiftGetArrGiftRewardReq* TDailyGiftGetArrGiftRewardReq::New() const {
  return new TDailyGiftGetArrGiftRewardReq;
}

void TDailyGiftGetArrGiftRewardReq::Clear() {
  arrid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDailyGiftGetArrGiftRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDailyGiftGetArrGiftRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ArrId = 1;
      case 1: {
        if (tag == 8) {
         parse_ArrId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_arrid())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ArrId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDailyGiftGetArrGiftRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDailyGiftGetArrGiftRewardReq)
  return false;
#undef DO_
}

void TDailyGiftGetArrGiftRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDailyGiftGetArrGiftRewardReq)
  // repeated uint32 ArrId = 1;
  for (int i = 0; i < this->arrid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->arrid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDailyGiftGetArrGiftRewardReq)
}

::google::protobuf::uint8* TDailyGiftGetArrGiftRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDailyGiftGetArrGiftRewardReq)
  // repeated uint32 ArrId = 1;
  for (int i = 0; i < this->arrid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->arrid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDailyGiftGetArrGiftRewardReq)
  return target;
}

int TDailyGiftGetArrGiftRewardReq::ByteSize() const {
  int total_size = 0;

  // repeated uint32 ArrId = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrid(i));
    }
    total_size += 1 * this->arrid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDailyGiftGetArrGiftRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDailyGiftGetArrGiftRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDailyGiftGetArrGiftRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDailyGiftGetArrGiftRewardReq::MergeFrom(const TDailyGiftGetArrGiftRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrid_.MergeFrom(from.arrid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDailyGiftGetArrGiftRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDailyGiftGetArrGiftRewardReq::CopyFrom(const TDailyGiftGetArrGiftRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDailyGiftGetArrGiftRewardReq::IsInitialized() const {

  return true;
}

void TDailyGiftGetArrGiftRewardReq::Swap(TDailyGiftGetArrGiftRewardReq* other) {
  if (other != this) {
    arrid_.Swap(&other->arrid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDailyGiftGetArrGiftRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDailyGiftGetArrGiftRewardReq_descriptor_;
  metadata.reflection = TDailyGiftGetArrGiftRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDailyGiftGetArrGiftRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TDailyGiftGetArrGiftRewardRsp::TDailyGiftGetArrGiftRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDailyGiftGetArrGiftRewardRsp)
}

void TDailyGiftGetArrGiftRewardRsp::InitAsDefaultInstance() {
}

TDailyGiftGetArrGiftRewardRsp::TDailyGiftGetArrGiftRewardRsp(const TDailyGiftGetArrGiftRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDailyGiftGetArrGiftRewardRsp)
}

void TDailyGiftGetArrGiftRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDailyGiftGetArrGiftRewardRsp::~TDailyGiftGetArrGiftRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TDailyGiftGetArrGiftRewardRsp)
  SharedDtor();
}

void TDailyGiftGetArrGiftRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDailyGiftGetArrGiftRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDailyGiftGetArrGiftRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDailyGiftGetArrGiftRewardRsp_descriptor_;
}

const TDailyGiftGetArrGiftRewardRsp& TDailyGiftGetArrGiftRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDailyGift_2eproto();
  return *default_instance_;
}

TDailyGiftGetArrGiftRewardRsp* TDailyGiftGetArrGiftRewardRsp::default_instance_ = NULL;

TDailyGiftGetArrGiftRewardRsp* TDailyGiftGetArrGiftRewardRsp::New() const {
  return new TDailyGiftGetArrGiftRewardRsp;
}

void TDailyGiftGetArrGiftRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDailyGiftGetArrGiftRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDailyGiftGetArrGiftRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDailyGiftGetArrGiftRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDailyGiftGetArrGiftRewardRsp)
  return false;
#undef DO_
}

void TDailyGiftGetArrGiftRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDailyGiftGetArrGiftRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDailyGiftGetArrGiftRewardRsp)
}

::google::protobuf::uint8* TDailyGiftGetArrGiftRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDailyGiftGetArrGiftRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDailyGiftGetArrGiftRewardRsp)
  return target;
}

int TDailyGiftGetArrGiftRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDailyGiftGetArrGiftRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDailyGiftGetArrGiftRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDailyGiftGetArrGiftRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDailyGiftGetArrGiftRewardRsp::MergeFrom(const TDailyGiftGetArrGiftRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDailyGiftGetArrGiftRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDailyGiftGetArrGiftRewardRsp::CopyFrom(const TDailyGiftGetArrGiftRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDailyGiftGetArrGiftRewardRsp::IsInitialized() const {

  return true;
}

void TDailyGiftGetArrGiftRewardRsp::Swap(TDailyGiftGetArrGiftRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDailyGiftGetArrGiftRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDailyGiftGetArrGiftRewardRsp_descriptor_;
  metadata.reflection = TDailyGiftGetArrGiftRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDailyGiftExchangeRewardReq::kIdFieldNumber;
const int TDailyGiftExchangeRewardReq::kNumFieldNumber;
#endif  // !_MSC_VER

TDailyGiftExchangeRewardReq::TDailyGiftExchangeRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDailyGiftExchangeRewardReq)
}

void TDailyGiftExchangeRewardReq::InitAsDefaultInstance() {
}

TDailyGiftExchangeRewardReq::TDailyGiftExchangeRewardReq(const TDailyGiftExchangeRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDailyGiftExchangeRewardReq)
}

void TDailyGiftExchangeRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDailyGiftExchangeRewardReq::~TDailyGiftExchangeRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TDailyGiftExchangeRewardReq)
  SharedDtor();
}

void TDailyGiftExchangeRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDailyGiftExchangeRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDailyGiftExchangeRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDailyGiftExchangeRewardReq_descriptor_;
}

const TDailyGiftExchangeRewardReq& TDailyGiftExchangeRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDailyGift_2eproto();
  return *default_instance_;
}

TDailyGiftExchangeRewardReq* TDailyGiftExchangeRewardReq::default_instance_ = NULL;

TDailyGiftExchangeRewardReq* TDailyGiftExchangeRewardReq::New() const {
  return new TDailyGiftExchangeRewardReq;
}

void TDailyGiftExchangeRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDailyGiftExchangeRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDailyGiftExchangeRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDailyGiftExchangeRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDailyGiftExchangeRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDailyGiftExchangeRewardReq)
  return false;
#undef DO_
}

void TDailyGiftExchangeRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDailyGiftExchangeRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDailyGiftExchangeRewardReq)
}

::google::protobuf::uint8* TDailyGiftExchangeRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDailyGiftExchangeRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDailyGiftExchangeRewardReq)
  return target;
}

int TDailyGiftExchangeRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDailyGiftExchangeRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDailyGiftExchangeRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDailyGiftExchangeRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDailyGiftExchangeRewardReq::MergeFrom(const TDailyGiftExchangeRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDailyGiftExchangeRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDailyGiftExchangeRewardReq::CopyFrom(const TDailyGiftExchangeRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDailyGiftExchangeRewardReq::IsInitialized() const {

  return true;
}

void TDailyGiftExchangeRewardReq::Swap(TDailyGiftExchangeRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDailyGiftExchangeRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDailyGiftExchangeRewardReq_descriptor_;
  metadata.reflection = TDailyGiftExchangeRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDailyGiftExchangeRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TDailyGiftExchangeRewardRsp::TDailyGiftExchangeRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDailyGiftExchangeRewardRsp)
}

void TDailyGiftExchangeRewardRsp::InitAsDefaultInstance() {
}

TDailyGiftExchangeRewardRsp::TDailyGiftExchangeRewardRsp(const TDailyGiftExchangeRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDailyGiftExchangeRewardRsp)
}

void TDailyGiftExchangeRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDailyGiftExchangeRewardRsp::~TDailyGiftExchangeRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TDailyGiftExchangeRewardRsp)
  SharedDtor();
}

void TDailyGiftExchangeRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDailyGiftExchangeRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDailyGiftExchangeRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDailyGiftExchangeRewardRsp_descriptor_;
}

const TDailyGiftExchangeRewardRsp& TDailyGiftExchangeRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDailyGift_2eproto();
  return *default_instance_;
}

TDailyGiftExchangeRewardRsp* TDailyGiftExchangeRewardRsp::default_instance_ = NULL;

TDailyGiftExchangeRewardRsp* TDailyGiftExchangeRewardRsp::New() const {
  return new TDailyGiftExchangeRewardRsp;
}

void TDailyGiftExchangeRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDailyGiftExchangeRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDailyGiftExchangeRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDailyGiftExchangeRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDailyGiftExchangeRewardRsp)
  return false;
#undef DO_
}

void TDailyGiftExchangeRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDailyGiftExchangeRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDailyGiftExchangeRewardRsp)
}

::google::protobuf::uint8* TDailyGiftExchangeRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDailyGiftExchangeRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDailyGiftExchangeRewardRsp)
  return target;
}

int TDailyGiftExchangeRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDailyGiftExchangeRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDailyGiftExchangeRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDailyGiftExchangeRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDailyGiftExchangeRewardRsp::MergeFrom(const TDailyGiftExchangeRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDailyGiftExchangeRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDailyGiftExchangeRewardRsp::CopyFrom(const TDailyGiftExchangeRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDailyGiftExchangeRewardRsp::IsInitialized() const {

  return true;
}

void TDailyGiftExchangeRewardRsp::Swap(TDailyGiftExchangeRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDailyGiftExchangeRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDailyGiftExchangeRewardRsp_descriptor_;
  metadata.reflection = TDailyGiftExchangeRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDailyGiftInfoNotify::kArrGiftInfoFieldNumber;
const int TDailyGiftInfoNotify::kArrShopInfoFieldNumber;
const int TDailyGiftInfoNotify::kGetDayFieldNumber;
#endif  // !_MSC_VER

TDailyGiftInfoNotify::TDailyGiftInfoNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDailyGiftInfoNotify)
}

void TDailyGiftInfoNotify::InitAsDefaultInstance() {
}

TDailyGiftInfoNotify::TDailyGiftInfoNotify(const TDailyGiftInfoNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDailyGiftInfoNotify)
}

void TDailyGiftInfoNotify::SharedCtor() {
  _cached_size_ = 0;
  getday_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDailyGiftInfoNotify::~TDailyGiftInfoNotify() {
  // @@protoc_insertion_point(destructor:pb.TDailyGiftInfoNotify)
  SharedDtor();
}

void TDailyGiftInfoNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDailyGiftInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDailyGiftInfoNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDailyGiftInfoNotify_descriptor_;
}

const TDailyGiftInfoNotify& TDailyGiftInfoNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDailyGift_2eproto();
  return *default_instance_;
}

TDailyGiftInfoNotify* TDailyGiftInfoNotify::default_instance_ = NULL;

TDailyGiftInfoNotify* TDailyGiftInfoNotify::New() const {
  return new TDailyGiftInfoNotify;
}

void TDailyGiftInfoNotify::Clear() {
  getday_ = 0u;
  arrgiftinfo_.Clear();
  arrshopinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDailyGiftInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDailyGiftInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TDailyGiftItemInfo ArrGiftInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrGiftInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrgiftinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrGiftInfo;
        if (input->ExpectTag(18)) goto parse_ArrShopInfo;
        break;
      }

      // repeated .pb.TDailyGiftShopItemInfo ArrShopInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrShopInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrshopinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrShopInfo;
        if (input->ExpectTag(24)) goto parse_GetDay;
        break;
      }

      // optional uint32 GetDay = 3;
      case 3: {
        if (tag == 24) {
         parse_GetDay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &getday_)));
          set_has_getday();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDailyGiftInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDailyGiftInfoNotify)
  return false;
#undef DO_
}

void TDailyGiftInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDailyGiftInfoNotify)
  // repeated .pb.TDailyGiftItemInfo ArrGiftInfo = 1;
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrgiftinfo(i), output);
  }

  // repeated .pb.TDailyGiftShopItemInfo ArrShopInfo = 2;
  for (int i = 0; i < this->arrshopinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrshopinfo(i), output);
  }

  // optional uint32 GetDay = 3;
  if (has_getday()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->getday(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDailyGiftInfoNotify)
}

::google::protobuf::uint8* TDailyGiftInfoNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDailyGiftInfoNotify)
  // repeated .pb.TDailyGiftItemInfo ArrGiftInfo = 1;
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrgiftinfo(i), target);
  }

  // repeated .pb.TDailyGiftShopItemInfo ArrShopInfo = 2;
  for (int i = 0; i < this->arrshopinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrshopinfo(i), target);
  }

  // optional uint32 GetDay = 3;
  if (has_getday()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->getday(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDailyGiftInfoNotify)
  return target;
}

int TDailyGiftInfoNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional uint32 GetDay = 3;
    if (has_getday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->getday());
    }

  }
  // repeated .pb.TDailyGiftItemInfo ArrGiftInfo = 1;
  total_size += 1 * this->arrgiftinfo_size();
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrgiftinfo(i));
  }

  // repeated .pb.TDailyGiftShopItemInfo ArrShopInfo = 2;
  total_size += 1 * this->arrshopinfo_size();
  for (int i = 0; i < this->arrshopinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrshopinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDailyGiftInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDailyGiftInfoNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDailyGiftInfoNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDailyGiftInfoNotify::MergeFrom(const TDailyGiftInfoNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrgiftinfo_.MergeFrom(from.arrgiftinfo_);
  arrshopinfo_.MergeFrom(from.arrshopinfo_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_getday()) {
      set_getday(from.getday());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDailyGiftInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDailyGiftInfoNotify::CopyFrom(const TDailyGiftInfoNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDailyGiftInfoNotify::IsInitialized() const {

  return true;
}

void TDailyGiftInfoNotify::Swap(TDailyGiftInfoNotify* other) {
  if (other != this) {
    arrgiftinfo_.Swap(&other->arrgiftinfo_);
    arrshopinfo_.Swap(&other->arrshopinfo_);
    std::swap(getday_, other->getday_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDailyGiftInfoNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDailyGiftInfoNotify_descriptor_;
  metadata.reflection = TDailyGiftInfoNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
