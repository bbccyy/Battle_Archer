// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActAnniversaryBlessingBag.proto

#ifndef PROTOBUF_net_2fActAnniversaryBlessingBag_2eproto__INCLUDED
#define PROTOBUF_net_2fActAnniversaryBlessingBag_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fActAnniversaryBlessingBag_2eproto();
void protobuf_AssignDesc_net_2fActAnniversaryBlessingBag_2eproto();
void protobuf_ShutdownFile_net_2fActAnniversaryBlessingBag_2eproto();

class TActAnniversaryBlessingBagGetInfoRsp;
class TActAnniversaryBlessingBagGetRewardRsp;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TActAnniversaryBlessingBagGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAnniversaryBlessingBag.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAnniversaryBlessingBagGetInfoRsp : public ::google::protobuf::Message {
 public:
  TActAnniversaryBlessingBagGetInfoRsp();
  virtual ~TActAnniversaryBlessingBagGetInfoRsp();

  TActAnniversaryBlessingBagGetInfoRsp(const TActAnniversaryBlessingBagGetInfoRsp& from);

  inline TActAnniversaryBlessingBagGetInfoRsp& operator=(const TActAnniversaryBlessingBagGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAnniversaryBlessingBagGetInfoRsp& default_instance();

  void Swap(TActAnniversaryBlessingBagGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TActAnniversaryBlessingBagGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAnniversaryBlessingBagGetInfoRsp& from);
  void MergeFrom(const TActAnniversaryBlessingBagGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ArrRewardPoolId = 1;
  inline int arrrewardpoolid_size() const;
  inline void clear_arrrewardpoolid();
  static const int kArrRewardPoolIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAnniversaryBlessingBagGetInfoRsp</name>
  	<Function>
  		<name>arrrewardpoolid</name>
  		<replaceName>ArrRewardPoolId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrewardpoolid</name>
  		<replaceName>ArrRewardPoolId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrewardpoolid</name>
  		<replaceName>ArrRewardPoolId</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrewardpoolid</name>
  		<replaceName>ArrRewardPoolId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrewardpoolid_size</name>
  		<replaceName>ArrRewardPoolId</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 arrrewardpoolid(int index) const;
  inline void set_arrrewardpoolid(int index, ::google::protobuf::uint32 value);
  inline void add_arrrewardpoolid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arrrewardpoolid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arrrewardpoolid();

  // @@protoc_insertion_point(class_scope:pb.TActAnniversaryBlessingBagGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arrrewardpoolid_;
  friend void  protobuf_AddDesc_net_2fActAnniversaryBlessingBag_2eproto();
  friend void protobuf_AssignDesc_net_2fActAnniversaryBlessingBag_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAnniversaryBlessingBag_2eproto();

  void InitAsDefaultInstance();
  static TActAnniversaryBlessingBagGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TActAnniversaryBlessingBagGetRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/ActAnniversaryBlessingBag.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TActAnniversaryBlessingBagGetRewardRsp : public ::google::protobuf::Message {
 public:
  TActAnniversaryBlessingBagGetRewardRsp();
  virtual ~TActAnniversaryBlessingBagGetRewardRsp();

  TActAnniversaryBlessingBagGetRewardRsp(const TActAnniversaryBlessingBagGetRewardRsp& from);

  inline TActAnniversaryBlessingBagGetRewardRsp& operator=(const TActAnniversaryBlessingBagGetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TActAnniversaryBlessingBagGetRewardRsp& default_instance();

  void Swap(TActAnniversaryBlessingBagGetRewardRsp* other);

  // implements Message ----------------------------------------------

  TActAnniversaryBlessingBagGetRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TActAnniversaryBlessingBagGetRewardRsp& from);
  void MergeFrom(const TActAnniversaryBlessingBagGetRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RewardPoolId = 1;
  inline bool has_rewardpoolid() const;
  inline void clear_rewardpoolid();
  static const int kRewardPoolIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TActAnniversaryBlessingBagGetRewardRsp</name>
  	<Function>
  		<name>rewardpoolid</name>
  		<replaceName>RewardPoolId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rewardpoolid</name>
  		<replaceName>RewardPoolId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardpoolid</name>
  		<replaceName>RewardPoolId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 rewardpoolid() const;
  inline void set_rewardpoolid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TActAnniversaryBlessingBagGetRewardRsp)
 private:
  inline void set_has_rewardpoolid();
  inline void clear_has_rewardpoolid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rewardpoolid_;
  friend void  protobuf_AddDesc_net_2fActAnniversaryBlessingBag_2eproto();
  friend void protobuf_AssignDesc_net_2fActAnniversaryBlessingBag_2eproto();
  friend void protobuf_ShutdownFile_net_2fActAnniversaryBlessingBag_2eproto();

  void InitAsDefaultInstance();
  static TActAnniversaryBlessingBagGetRewardRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TActAnniversaryBlessingBagGetInfoRsp

// repeated uint32 ArrRewardPoolId = 1;
inline int TActAnniversaryBlessingBagGetInfoRsp::arrrewardpoolid_size() const {
  return arrrewardpoolid_.size();
}
inline void TActAnniversaryBlessingBagGetInfoRsp::clear_arrrewardpoolid() {
  arrrewardpoolid_.Clear();
}
inline ::google::protobuf::uint32 TActAnniversaryBlessingBagGetInfoRsp::arrrewardpoolid(int index) const {
  // @@protoc_insertion_point(field_get:pb.TActAnniversaryBlessingBagGetInfoRsp.ArrRewardPoolId)
  return arrrewardpoolid_.Get(index);
}
inline void TActAnniversaryBlessingBagGetInfoRsp::set_arrrewardpoolid(int index, ::google::protobuf::uint32 value) {
  arrrewardpoolid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TActAnniversaryBlessingBagGetInfoRsp.ArrRewardPoolId)
}
inline void TActAnniversaryBlessingBagGetInfoRsp::add_arrrewardpoolid(::google::protobuf::uint32 value) {
  arrrewardpoolid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TActAnniversaryBlessingBagGetInfoRsp.ArrRewardPoolId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TActAnniversaryBlessingBagGetInfoRsp::arrrewardpoolid() const {
  // @@protoc_insertion_point(field_list:pb.TActAnniversaryBlessingBagGetInfoRsp.ArrRewardPoolId)
  return arrrewardpoolid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TActAnniversaryBlessingBagGetInfoRsp::mutable_arrrewardpoolid() {
  // @@protoc_insertion_point(field_mutable_list:pb.TActAnniversaryBlessingBagGetInfoRsp.ArrRewardPoolId)
  return &arrrewardpoolid_;
}

// -------------------------------------------------------------------

// TActAnniversaryBlessingBagGetRewardRsp

// optional uint32 RewardPoolId = 1;
inline bool TActAnniversaryBlessingBagGetRewardRsp::has_rewardpoolid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TActAnniversaryBlessingBagGetRewardRsp::set_has_rewardpoolid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TActAnniversaryBlessingBagGetRewardRsp::clear_has_rewardpoolid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TActAnniversaryBlessingBagGetRewardRsp::clear_rewardpoolid() {
  rewardpoolid_ = 0u;
  clear_has_rewardpoolid();
}
inline ::google::protobuf::uint32 TActAnniversaryBlessingBagGetRewardRsp::rewardpoolid() const {
  // @@protoc_insertion_point(field_get:pb.TActAnniversaryBlessingBagGetRewardRsp.RewardPoolId)
  return rewardpoolid_;
}
inline void TActAnniversaryBlessingBagGetRewardRsp::set_rewardpoolid(::google::protobuf::uint32 value) {
  set_has_rewardpoolid();
  rewardpoolid_ = value;
  // @@protoc_insertion_point(field_set:pb.TActAnniversaryBlessingBagGetRewardRsp.RewardPoolId)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fActAnniversaryBlessingBag_2eproto__INCLUDED
