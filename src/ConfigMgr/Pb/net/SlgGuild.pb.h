// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/SlgGuild.proto

#ifndef PROTOBUF_net_2fSlgGuild_2eproto__INCLUDED
#define PROTOBUF_net_2fSlgGuild_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/Guild.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

class TSlgGuildSyncReq;
class TSlgGuildGetInfoReq;
class TSlgGuildGetInfoRsp;
class TSlgGuildMemberInfo;
class TSlgGuildGetMemberListRsp;
class TSlgGuildModifySummaryReq;
class TSlgGuildResInfo;
class TSlgGuildTechnology;
class TSlgGuildUpgradeTechnologyReq;
class TSlgGuildGroupInfo;
class TSlgGuildGetGroupInfoRsp;
class TSlgGuildModifyGroupNameReq;
class TSlgGuildModifyGroupMemberReq;
class TSlgGuildUpdateOurGuildNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TSlgGuildSyncReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildSyncReq : public ::google::protobuf::Message {
 public:
  TSlgGuildSyncReq();
  virtual ~TSlgGuildSyncReq();

  TSlgGuildSyncReq(const TSlgGuildSyncReq& from);

  inline TSlgGuildSyncReq& operator=(const TSlgGuildSyncReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildSyncReq& default_instance();

  void Swap(TSlgGuildSyncReq* other);

  // implements Message ----------------------------------------------

  TSlgGuildSyncReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildSyncReq& from);
  void MergeFrom(const TSlgGuildSyncReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSlgGuildSyncMember MemberArr = 1;
  inline int memberarr_size() const;
  inline void clear_memberarr();
  static const int kMemberArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildSyncReq</name>
  	<Function>
  		<name>memberarr</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_memberarr</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_memberarr</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_memberarr</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>memberarr_size</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgGuildSyncMember& memberarr(int index) const;
  inline ::pb::TSlgGuildSyncMember* mutable_memberarr(int index);
  inline ::pb::TSlgGuildSyncMember* add_memberarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildSyncMember >&
      memberarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildSyncMember >*
      mutable_memberarr();

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildSyncReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildSyncMember > memberarr_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildSyncReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgGuildGetInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildGetInfoReq : public ::google::protobuf::Message {
 public:
  TSlgGuildGetInfoReq();
  virtual ~TSlgGuildGetInfoReq();

  TSlgGuildGetInfoReq(const TSlgGuildGetInfoReq& from);

  inline TSlgGuildGetInfoReq& operator=(const TSlgGuildGetInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildGetInfoReq& default_instance();

  void Swap(TSlgGuildGetInfoReq* other);

  // implements Message ----------------------------------------------

  TSlgGuildGetInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildGetInfoReq& from);
  void MergeFrom(const TSlgGuildGetInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 MemUidArr = 1;
  inline int memuidarr_size() const;
  inline void clear_memuidarr();
  static const int kMemUidArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildGetInfoReq</name>
  	<Function>
  		<name>memuidarr</name>
  		<replaceName>MemUidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_memuidarr</name>
  		<replaceName>MemUidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_memuidarr</name>
  		<replaceName>MemUidArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_memuidarr</name>
  		<replaceName>MemUidArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>memuidarr_size</name>
  		<replaceName>MemUidArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 memuidarr(int index) const;
  inline void set_memuidarr(int index, ::google::protobuf::uint64 value);
  inline void add_memuidarr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      memuidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_memuidarr();

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildGetInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > memuidarr_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildGetInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgGuildGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildGetInfoRsp : public ::google::protobuf::Message {
 public:
  TSlgGuildGetInfoRsp();
  virtual ~TSlgGuildGetInfoRsp();

  TSlgGuildGetInfoRsp(const TSlgGuildGetInfoRsp& from);

  inline TSlgGuildGetInfoRsp& operator=(const TSlgGuildGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildGetInfoRsp& default_instance();

  void Swap(TSlgGuildGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TSlgGuildGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildGetInfoRsp& from);
  void MergeFrom(const TSlgGuildGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ValkyrieUid = 1;
  inline bool has_valkyrieuid() const;
  inline void clear_valkyrieuid();
  static const int kValkyrieUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildGetInfoRsp</name>
  	<Function>
  		<name>valkyrieuid</name>
  		<replaceName>ValkyrieUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_valkyrieuid</name>
  		<replaceName>ValkyrieUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_valkyrieuid</name>
  		<replaceName>ValkyrieUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 valkyrieuid() const;
  inline void set_valkyrieuid(::google::protobuf::uint64 value);

  // optional uint64 AdviserUid = 2;
  inline bool has_adviseruid() const;
  inline void clear_adviseruid();
  static const int kAdviserUidFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildGetInfoRsp</name>
  	<Function>
  		<name>adviseruid</name>
  		<replaceName>AdviserUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_adviseruid</name>
  		<replaceName>AdviserUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_adviseruid</name>
  		<replaceName>AdviserUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 adviseruid() const;
  inline void set_adviseruid(::google::protobuf::uint64 value);

  // optional uint64 WarPower = 3;
  inline bool has_warpower() const;
  inline void clear_warpower();
  static const int kWarPowerFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildGetInfoRsp</name>
  	<Function>
  		<name>warpower</name>
  		<replaceName>WarPower</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_warpower</name>
  		<replaceName>WarPower</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warpower</name>
  		<replaceName>WarPower</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 warpower() const;
  inline void set_warpower(::google::protobuf::uint64 value);

  // optional string Summary = 4;
  inline bool has_summary() const;
  inline void clear_summary();
  static const int kSummaryFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildGetInfoRsp</name>
  	<Function>
  		<name>summary</name>
  		<replaceName>Summary</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_summary</name>
  		<replaceName>Summary</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_summary</name>
  		<replaceName>Summary</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& summary() const;
  inline void set_summary(const ::std::string& value);
  inline void set_summary(const char* value);
  inline void set_summary(const char* value, size_t size);
  inline ::std::string* mutable_summary();
  inline ::std::string* release_summary();
  inline void set_allocated_summary(::std::string* summary);

  // repeated .pb.TSlgGuildTechnology TechnologyArr = 5;
  inline int technologyarr_size() const;
  inline void clear_technologyarr();
  static const int kTechnologyArrFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildGetInfoRsp</name>
  	<Function>
  		<name>technologyarr</name>
  		<replaceName>TechnologyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_technologyarr</name>
  		<replaceName>TechnologyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_technologyarr</name>
  		<replaceName>TechnologyArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_technologyarr</name>
  		<replaceName>TechnologyArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>technologyarr_size</name>
  		<replaceName>TechnologyArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgGuildTechnology& technologyarr(int index) const;
  inline ::pb::TSlgGuildTechnology* mutable_technologyarr(int index);
  inline ::pb::TSlgGuildTechnology* add_technologyarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildTechnology >&
      technologyarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildTechnology >*
      mutable_technologyarr();

  // repeated .pb.TSlgGuildGroupInfo GroupArr = 6;
  inline int grouparr_size() const;
  inline void clear_grouparr();
  static const int kGroupArrFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildGetInfoRsp</name>
  	<Function>
  		<name>grouparr</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_grouparr</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_grouparr</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_grouparr</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>grouparr_size</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgGuildGroupInfo& grouparr(int index) const;
  inline ::pb::TSlgGuildGroupInfo* mutable_grouparr(int index);
  inline ::pb::TSlgGuildGroupInfo* add_grouparr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo >&
      grouparr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo >*
      mutable_grouparr();

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildGetInfoRsp)
 private:
  inline void set_has_valkyrieuid();
  inline void clear_has_valkyrieuid();
  inline void set_has_adviseruid();
  inline void clear_has_adviseruid();
  inline void set_has_warpower();
  inline void clear_has_warpower();
  inline void set_has_summary();
  inline void clear_has_summary();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 valkyrieuid_;
  ::google::protobuf::uint64 adviseruid_;
  ::google::protobuf::uint64 warpower_;
  ::std::string* summary_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildTechnology > technologyarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo > grouparr_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgGuildMemberInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildMemberInfo : public ::google::protobuf::Message {
 public:
  TSlgGuildMemberInfo();
  virtual ~TSlgGuildMemberInfo();

  TSlgGuildMemberInfo(const TSlgGuildMemberInfo& from);

  inline TSlgGuildMemberInfo& operator=(const TSlgGuildMemberInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildMemberInfo& default_instance();

  void Swap(TSlgGuildMemberInfo* other);

  // implements Message ----------------------------------------------

  TSlgGuildMemberInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildMemberInfo& from);
  void MergeFrom(const TSlgGuildMemberInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildMemberInfo</name>
  	<Function>
  		<name>uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uid</name>
  		<replaceName>Uid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint32 Contribute = 2;
  inline bool has_contribute() const;
  inline void clear_contribute();
  static const int kContributeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildMemberInfo</name>
  	<Function>
  		<name>contribute</name>
  		<replaceName>Contribute</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_contribute</name>
  		<replaceName>Contribute</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_contribute</name>
  		<replaceName>Contribute</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 contribute() const;
  inline void set_contribute(::google::protobuf::uint32 value);

  // optional uint32 WeekContribute = 3;
  inline bool has_weekcontribute() const;
  inline void clear_weekcontribute();
  static const int kWeekContributeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildMemberInfo</name>
  	<Function>
  		<name>weekcontribute</name>
  		<replaceName>WeekContribute</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_weekcontribute</name>
  		<replaceName>WeekContribute</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_weekcontribute</name>
  		<replaceName>WeekContribute</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 weekcontribute() const;
  inline void set_weekcontribute(::google::protobuf::uint32 value);

  // optional uint32 FightNum = 4;
  inline bool has_fightnum() const;
  inline void clear_fightnum();
  static const int kFightNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildMemberInfo</name>
  	<Function>
  		<name>fightnum</name>
  		<replaceName>FightNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_fightnum</name>
  		<replaceName>FightNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_fightnum</name>
  		<replaceName>FightNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 fightnum() const;
  inline void set_fightnum(::google::protobuf::uint32 value);

  // optional uint32 WeekFightNum = 5;
  inline bool has_weekfightnum() const;
  inline void clear_weekfightnum();
  static const int kWeekFightNumFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildMemberInfo</name>
  	<Function>
  		<name>weekfightnum</name>
  		<replaceName>WeekFightNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_weekfightnum</name>
  		<replaceName>WeekFightNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_weekfightnum</name>
  		<replaceName>WeekFightNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 weekfightnum() const;
  inline void set_weekfightnum(::google::protobuf::uint32 value);

  // optional uint32 WarPower = 6;
  inline bool has_warpower() const;
  inline void clear_warpower();
  static const int kWarPowerFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildMemberInfo</name>
  	<Function>
  		<name>warpower</name>
  		<replaceName>WarPower</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_warpower</name>
  		<replaceName>WarPower</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_warpower</name>
  		<replaceName>WarPower</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 warpower() const;
  inline void set_warpower(::google::protobuf::uint32 value);

  // optional int32 X = 7;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildMemberInfo</name>
  	<Function>
  		<name>x</name>
  		<replaceName>X</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_x</name>
  		<replaceName>X</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_x</name>
  		<replaceName>X</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // optional int32 Y = 8;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 8;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildMemberInfo</name>
  	<Function>
  		<name>y</name>
  		<replaceName>Y</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_y</name>
  		<replaceName>Y</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_y</name>
  		<replaceName>Y</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildMemberInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_contribute();
  inline void clear_has_contribute();
  inline void set_has_weekcontribute();
  inline void clear_has_weekcontribute();
  inline void set_has_fightnum();
  inline void clear_has_fightnum();
  inline void set_has_weekfightnum();
  inline void clear_has_weekfightnum();
  inline void set_has_warpower();
  inline void clear_has_warpower();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 contribute_;
  ::google::protobuf::uint32 weekcontribute_;
  ::google::protobuf::uint32 fightnum_;
  ::google::protobuf::uint32 weekfightnum_;
  ::google::protobuf::uint32 warpower_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildMemberInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgGuildGetMemberListRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildGetMemberListRsp : public ::google::protobuf::Message {
 public:
  TSlgGuildGetMemberListRsp();
  virtual ~TSlgGuildGetMemberListRsp();

  TSlgGuildGetMemberListRsp(const TSlgGuildGetMemberListRsp& from);

  inline TSlgGuildGetMemberListRsp& operator=(const TSlgGuildGetMemberListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildGetMemberListRsp& default_instance();

  void Swap(TSlgGuildGetMemberListRsp* other);

  // implements Message ----------------------------------------------

  TSlgGuildGetMemberListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildGetMemberListRsp& from);
  void MergeFrom(const TSlgGuildGetMemberListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSlgGuildMemberInfo MemberArr = 1;
  inline int memberarr_size() const;
  inline void clear_memberarr();
  static const int kMemberArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildGetMemberListRsp</name>
  	<Function>
  		<name>memberarr</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_memberarr</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_memberarr</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_memberarr</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>memberarr_size</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgGuildMemberInfo& memberarr(int index) const;
  inline ::pb::TSlgGuildMemberInfo* mutable_memberarr(int index);
  inline ::pb::TSlgGuildMemberInfo* add_memberarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildMemberInfo >&
      memberarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildMemberInfo >*
      mutable_memberarr();

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildGetMemberListRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildMemberInfo > memberarr_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildGetMemberListRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgGuildModifySummaryReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildModifySummaryReq : public ::google::protobuf::Message {
 public:
  TSlgGuildModifySummaryReq();
  virtual ~TSlgGuildModifySummaryReq();

  TSlgGuildModifySummaryReq(const TSlgGuildModifySummaryReq& from);

  inline TSlgGuildModifySummaryReq& operator=(const TSlgGuildModifySummaryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildModifySummaryReq& default_instance();

  void Swap(TSlgGuildModifySummaryReq* other);

  // implements Message ----------------------------------------------

  TSlgGuildModifySummaryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildModifySummaryReq& from);
  void MergeFrom(const TSlgGuildModifySummaryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string SlgSummary = 1;
  inline bool has_slgsummary() const;
  inline void clear_slgsummary();
  static const int kSlgSummaryFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildModifySummaryReq</name>
  	<Function>
  		<name>slgsummary</name>
  		<replaceName>SlgSummary</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_slgsummary</name>
  		<replaceName>SlgSummary</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_slgsummary</name>
  		<replaceName>SlgSummary</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& slgsummary() const;
  inline void set_slgsummary(const ::std::string& value);
  inline void set_slgsummary(const char* value);
  inline void set_slgsummary(const char* value, size_t size);
  inline ::std::string* mutable_slgsummary();
  inline ::std::string* release_slgsummary();
  inline void set_allocated_slgsummary(::std::string* slgsummary);

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildModifySummaryReq)
 private:
  inline void set_has_slgsummary();
  inline void clear_has_slgsummary();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* slgsummary_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildModifySummaryReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgGuildResInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildResInfo : public ::google::protobuf::Message {
 public:
  TSlgGuildResInfo();
  virtual ~TSlgGuildResInfo();

  TSlgGuildResInfo(const TSlgGuildResInfo& from);

  inline TSlgGuildResInfo& operator=(const TSlgGuildResInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildResInfo& default_instance();

  void Swap(TSlgGuildResInfo* other);

  // implements Message ----------------------------------------------

  TSlgGuildResInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildResInfo& from);
  void MergeFrom(const TSlgGuildResInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ResType = 1;
  inline bool has_restype() const;
  inline void clear_restype();
  static const int kResTypeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildResInfo</name>
  	<Function>
  		<name>restype</name>
  		<replaceName>ResType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_restype</name>
  		<replaceName>ResType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_restype</name>
  		<replaceName>ResType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 restype() const;
  inline void set_restype(::google::protobuf::uint32 value);

  // optional uint32 ResNum = 2;
  inline bool has_resnum() const;
  inline void clear_resnum();
  static const int kResNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildResInfo</name>
  	<Function>
  		<name>resnum</name>
  		<replaceName>ResNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_resnum</name>
  		<replaceName>ResNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_resnum</name>
  		<replaceName>ResNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 resnum() const;
  inline void set_resnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildResInfo)
 private:
  inline void set_has_restype();
  inline void clear_has_restype();
  inline void set_has_resnum();
  inline void clear_has_resnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 restype_;
  ::google::protobuf::uint32 resnum_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildResInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgGuildTechnology</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildTechnology : public ::google::protobuf::Message {
 public:
  TSlgGuildTechnology();
  virtual ~TSlgGuildTechnology();

  TSlgGuildTechnology(const TSlgGuildTechnology& from);

  inline TSlgGuildTechnology& operator=(const TSlgGuildTechnology& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildTechnology& default_instance();

  void Swap(TSlgGuildTechnology* other);

  // implements Message ----------------------------------------------

  TSlgGuildTechnology* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildTechnology& from);
  void MergeFrom(const TSlgGuildTechnology& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildTechnology</name>
  	<Function>
  		<name>tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tid</name>
  		<replaceName>Tid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildTechnology</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // repeated .pb.TSlgGuildResInfo ResArr = 3;
  inline int resarr_size() const;
  inline void clear_resarr();
  static const int kResArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildTechnology</name>
  	<Function>
  		<name>resarr</name>
  		<replaceName>ResArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_resarr</name>
  		<replaceName>ResArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_resarr</name>
  		<replaceName>ResArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_resarr</name>
  		<replaceName>ResArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>resarr_size</name>
  		<replaceName>ResArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgGuildResInfo& resarr(int index) const;
  inline ::pb::TSlgGuildResInfo* mutable_resarr(int index);
  inline ::pb::TSlgGuildResInfo* add_resarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildResInfo >&
      resarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildResInfo >*
      mutable_resarr();

  // optional uint64 UpgradeTime = 4;
  inline bool has_upgradetime() const;
  inline void clear_upgradetime();
  static const int kUpgradeTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildTechnology</name>
  	<Function>
  		<name>upgradetime</name>
  		<replaceName>UpgradeTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_upgradetime</name>
  		<replaceName>UpgradeTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_upgradetime</name>
  		<replaceName>UpgradeTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 upgradetime() const;
  inline void set_upgradetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildTechnology)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_upgradetime();
  inline void clear_has_upgradetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildResInfo > resarr_;
  ::google::protobuf::uint64 upgradetime_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildTechnology* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgGuildUpgradeTechnologyReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildUpgradeTechnologyReq : public ::google::protobuf::Message {
 public:
  TSlgGuildUpgradeTechnologyReq();
  virtual ~TSlgGuildUpgradeTechnologyReq();

  TSlgGuildUpgradeTechnologyReq(const TSlgGuildUpgradeTechnologyReq& from);

  inline TSlgGuildUpgradeTechnologyReq& operator=(const TSlgGuildUpgradeTechnologyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildUpgradeTechnologyReq& default_instance();

  void Swap(TSlgGuildUpgradeTechnologyReq* other);

  // implements Message ----------------------------------------------

  TSlgGuildUpgradeTechnologyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildUpgradeTechnologyReq& from);
  void MergeFrom(const TSlgGuildUpgradeTechnologyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TechTid = 1;
  inline bool has_techtid() const;
  inline void clear_techtid();
  static const int kTechTidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildUpgradeTechnologyReq</name>
  	<Function>
  		<name>techtid</name>
  		<replaceName>TechTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_techtid</name>
  		<replaceName>TechTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_techtid</name>
  		<replaceName>TechTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 techtid() const;
  inline void set_techtid(::google::protobuf::uint32 value);

  // repeated .pb.TSlgGuildResInfo ResArr = 2;
  inline int resarr_size() const;
  inline void clear_resarr();
  static const int kResArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildUpgradeTechnologyReq</name>
  	<Function>
  		<name>resarr</name>
  		<replaceName>ResArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_resarr</name>
  		<replaceName>ResArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_resarr</name>
  		<replaceName>ResArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_resarr</name>
  		<replaceName>ResArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>resarr_size</name>
  		<replaceName>ResArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgGuildResInfo& resarr(int index) const;
  inline ::pb::TSlgGuildResInfo* mutable_resarr(int index);
  inline ::pb::TSlgGuildResInfo* add_resarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildResInfo >&
      resarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildResInfo >*
      mutable_resarr();

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildUpgradeTechnologyReq)
 private:
  inline void set_has_techtid();
  inline void clear_has_techtid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildResInfo > resarr_;
  ::google::protobuf::uint32 techtid_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildUpgradeTechnologyReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgGuildGroupInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildGroupInfo : public ::google::protobuf::Message {
 public:
  TSlgGuildGroupInfo();
  virtual ~TSlgGuildGroupInfo();

  TSlgGuildGroupInfo(const TSlgGuildGroupInfo& from);

  inline TSlgGuildGroupInfo& operator=(const TSlgGuildGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildGroupInfo& default_instance();

  void Swap(TSlgGuildGroupInfo* other);

  // implements Message ----------------------------------------------

  TSlgGuildGroupInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildGroupInfo& from);
  void MergeFrom(const TSlgGuildGroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 GroupIndex = 1;
  inline bool has_groupindex() const;
  inline void clear_groupindex();
  static const int kGroupIndexFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildGroupInfo</name>
  	<Function>
  		<name>groupindex</name>
  		<replaceName>GroupIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_groupindex</name>
  		<replaceName>GroupIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_groupindex</name>
  		<replaceName>GroupIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 groupindex() const;
  inline void set_groupindex(::google::protobuf::uint32 value);

  // optional string GroupName = 2;
  inline bool has_groupname() const;
  inline void clear_groupname();
  static const int kGroupNameFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildGroupInfo</name>
  	<Function>
  		<name>groupname</name>
  		<replaceName>GroupName</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_groupname</name>
  		<replaceName>GroupName</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_groupname</name>
  		<replaceName>GroupName</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& groupname() const;
  inline void set_groupname(const ::std::string& value);
  inline void set_groupname(const char* value);
  inline void set_groupname(const char* value, size_t size);
  inline ::std::string* mutable_groupname();
  inline ::std::string* release_groupname();
  inline void set_allocated_groupname(::std::string* groupname);

  // repeated uint64 MemberArr = 3;
  inline int memberarr_size() const;
  inline void clear_memberarr();
  static const int kMemberArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildGroupInfo</name>
  	<Function>
  		<name>memberarr</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_memberarr</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_memberarr</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_memberarr</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>memberarr_size</name>
  		<replaceName>MemberArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 memberarr(int index) const;
  inline void set_memberarr(int index, ::google::protobuf::uint64 value);
  inline void add_memberarr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      memberarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_memberarr();

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildGroupInfo)
 private:
  inline void set_has_groupindex();
  inline void clear_has_groupindex();
  inline void set_has_groupname();
  inline void clear_has_groupname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* groupname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > memberarr_;
  ::google::protobuf::uint32 groupindex_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildGroupInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgGuildGetGroupInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildGetGroupInfoRsp : public ::google::protobuf::Message {
 public:
  TSlgGuildGetGroupInfoRsp();
  virtual ~TSlgGuildGetGroupInfoRsp();

  TSlgGuildGetGroupInfoRsp(const TSlgGuildGetGroupInfoRsp& from);

  inline TSlgGuildGetGroupInfoRsp& operator=(const TSlgGuildGetGroupInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildGetGroupInfoRsp& default_instance();

  void Swap(TSlgGuildGetGroupInfoRsp* other);

  // implements Message ----------------------------------------------

  TSlgGuildGetGroupInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildGetGroupInfoRsp& from);
  void MergeFrom(const TSlgGuildGetGroupInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSlgGuildGroupInfo GroupArr = 1;
  inline int grouparr_size() const;
  inline void clear_grouparr();
  static const int kGroupArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildGetGroupInfoRsp</name>
  	<Function>
  		<name>grouparr</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_grouparr</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_grouparr</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_grouparr</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>grouparr_size</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgGuildGroupInfo& grouparr(int index) const;
  inline ::pb::TSlgGuildGroupInfo* mutable_grouparr(int index);
  inline ::pb::TSlgGuildGroupInfo* add_grouparr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo >&
      grouparr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo >*
      mutable_grouparr();

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildGetGroupInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo > grouparr_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildGetGroupInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgGuildModifyGroupNameReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildModifyGroupNameReq : public ::google::protobuf::Message {
 public:
  TSlgGuildModifyGroupNameReq();
  virtual ~TSlgGuildModifyGroupNameReq();

  TSlgGuildModifyGroupNameReq(const TSlgGuildModifyGroupNameReq& from);

  inline TSlgGuildModifyGroupNameReq& operator=(const TSlgGuildModifyGroupNameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildModifyGroupNameReq& default_instance();

  void Swap(TSlgGuildModifyGroupNameReq* other);

  // implements Message ----------------------------------------------

  TSlgGuildModifyGroupNameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildModifyGroupNameReq& from);
  void MergeFrom(const TSlgGuildModifyGroupNameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 GroupIndex = 1;
  inline bool has_groupindex() const;
  inline void clear_groupindex();
  static const int kGroupIndexFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildModifyGroupNameReq</name>
  	<Function>
  		<name>groupindex</name>
  		<replaceName>GroupIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_groupindex</name>
  		<replaceName>GroupIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_groupindex</name>
  		<replaceName>GroupIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 groupindex() const;
  inline void set_groupindex(::google::protobuf::uint32 value);

  // optional string GroupName = 2;
  inline bool has_groupname() const;
  inline void clear_groupname();
  static const int kGroupNameFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildModifyGroupNameReq</name>
  	<Function>
  		<name>groupname</name>
  		<replaceName>GroupName</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_groupname</name>
  		<replaceName>GroupName</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_groupname</name>
  		<replaceName>GroupName</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& groupname() const;
  inline void set_groupname(const ::std::string& value);
  inline void set_groupname(const char* value);
  inline void set_groupname(const char* value, size_t size);
  inline ::std::string* mutable_groupname();
  inline ::std::string* release_groupname();
  inline void set_allocated_groupname(::std::string* groupname);

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildModifyGroupNameReq)
 private:
  inline void set_has_groupindex();
  inline void clear_has_groupindex();
  inline void set_has_groupname();
  inline void clear_has_groupname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* groupname_;
  ::google::protobuf::uint32 groupindex_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildModifyGroupNameReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgGuildModifyGroupMemberReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildModifyGroupMemberReq : public ::google::protobuf::Message {
 public:
  TSlgGuildModifyGroupMemberReq();
  virtual ~TSlgGuildModifyGroupMemberReq();

  TSlgGuildModifyGroupMemberReq(const TSlgGuildModifyGroupMemberReq& from);

  inline TSlgGuildModifyGroupMemberReq& operator=(const TSlgGuildModifyGroupMemberReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildModifyGroupMemberReq& default_instance();

  void Swap(TSlgGuildModifyGroupMemberReq* other);

  // implements Message ----------------------------------------------

  TSlgGuildModifyGroupMemberReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildModifyGroupMemberReq& from);
  void MergeFrom(const TSlgGuildModifyGroupMemberReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 GroupIndex = 1;
  inline bool has_groupindex() const;
  inline void clear_groupindex();
  static const int kGroupIndexFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildModifyGroupMemberReq</name>
  	<Function>
  		<name>groupindex</name>
  		<replaceName>GroupIndex</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_groupindex</name>
  		<replaceName>GroupIndex</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_groupindex</name>
  		<replaceName>GroupIndex</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 groupindex() const;
  inline void set_groupindex(::google::protobuf::uint32 value);

  // repeated uint64 AddUidArr = 2;
  inline int adduidarr_size() const;
  inline void clear_adduidarr();
  static const int kAddUidArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildModifyGroupMemberReq</name>
  	<Function>
  		<name>adduidarr</name>
  		<replaceName>AddUidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_adduidarr</name>
  		<replaceName>AddUidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_adduidarr</name>
  		<replaceName>AddUidArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_adduidarr</name>
  		<replaceName>AddUidArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>adduidarr_size</name>
  		<replaceName>AddUidArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 adduidarr(int index) const;
  inline void set_adduidarr(int index, ::google::protobuf::uint64 value);
  inline void add_adduidarr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      adduidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_adduidarr();

  // repeated uint64 RemoveUidArr = 3;
  inline int removeuidarr_size() const;
  inline void clear_removeuidarr();
  static const int kRemoveUidArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildModifyGroupMemberReq</name>
  	<Function>
  		<name>removeuidarr</name>
  		<replaceName>RemoveUidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_removeuidarr</name>
  		<replaceName>RemoveUidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_removeuidarr</name>
  		<replaceName>RemoveUidArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_removeuidarr</name>
  		<replaceName>RemoveUidArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>removeuidarr_size</name>
  		<replaceName>RemoveUidArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 removeuidarr(int index) const;
  inline void set_removeuidarr(int index, ::google::protobuf::uint64 value);
  inline void add_removeuidarr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      removeuidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_removeuidarr();

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildModifyGroupMemberReq)
 private:
  inline void set_has_groupindex();
  inline void clear_has_groupindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > adduidarr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > removeuidarr_;
  ::google::protobuf::uint32 groupindex_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildModifyGroupMemberReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TSlgGuildUpdateOurGuildNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/SlgGuild.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TSlgGuildUpdateOurGuildNotify : public ::google::protobuf::Message {
 public:
  TSlgGuildUpdateOurGuildNotify();
  virtual ~TSlgGuildUpdateOurGuildNotify();

  TSlgGuildUpdateOurGuildNotify(const TSlgGuildUpdateOurGuildNotify& from);

  inline TSlgGuildUpdateOurGuildNotify& operator=(const TSlgGuildUpdateOurGuildNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TSlgGuildUpdateOurGuildNotify& default_instance();

  void Swap(TSlgGuildUpdateOurGuildNotify* other);

  // implements Message ----------------------------------------------

  TSlgGuildUpdateOurGuildNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TSlgGuildUpdateOurGuildNotify& from);
  void MergeFrom(const TSlgGuildUpdateOurGuildNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TSlgGuildTechnology TechnologyArr = 1;
  inline int technologyarr_size() const;
  inline void clear_technologyarr();
  static const int kTechnologyArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildUpdateOurGuildNotify</name>
  	<Function>
  		<name>technologyarr</name>
  		<replaceName>TechnologyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_technologyarr</name>
  		<replaceName>TechnologyArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_technologyarr</name>
  		<replaceName>TechnologyArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_technologyarr</name>
  		<replaceName>TechnologyArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>technologyarr_size</name>
  		<replaceName>TechnologyArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgGuildTechnology& technologyarr(int index) const;
  inline ::pb::TSlgGuildTechnology* mutable_technologyarr(int index);
  inline ::pb::TSlgGuildTechnology* add_technologyarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildTechnology >&
      technologyarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildTechnology >*
      mutable_technologyarr();

  // repeated .pb.TSlgGuildGroupInfo GroupArr = 2;
  inline int grouparr_size() const;
  inline void clear_grouparr();
  static const int kGroupArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildUpdateOurGuildNotify</name>
  	<Function>
  		<name>grouparr</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_grouparr</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_grouparr</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_grouparr</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>grouparr_size</name>
  		<replaceName>GroupArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSlgGuildGroupInfo& grouparr(int index) const;
  inline ::pb::TSlgGuildGroupInfo* mutable_grouparr(int index);
  inline ::pb::TSlgGuildGroupInfo* add_grouparr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo >&
      grouparr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo >*
      mutable_grouparr();

  // optional string SlgSummary = 3;
  inline bool has_slgsummary() const;
  inline void clear_slgsummary();
  static const int kSlgSummaryFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildUpdateOurGuildNotify</name>
  	<Function>
  		<name>slgsummary</name>
  		<replaceName>SlgSummary</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_slgsummary</name>
  		<replaceName>SlgSummary</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_slgsummary</name>
  		<replaceName>SlgSummary</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::std::string& slgsummary() const;
  inline void set_slgsummary(const ::std::string& value);
  inline void set_slgsummary(const char* value);
  inline void set_slgsummary(const char* value, size_t size);
  inline ::std::string* mutable_slgsummary();
  inline ::std::string* release_slgsummary();
  inline void set_allocated_slgsummary(::std::string* slgsummary);

  // optional uint64 ValkyrieUid = 4;
  inline bool has_valkyrieuid() const;
  inline void clear_valkyrieuid();
  static const int kValkyrieUidFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildUpdateOurGuildNotify</name>
  	<Function>
  		<name>valkyrieuid</name>
  		<replaceName>ValkyrieUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_valkyrieuid</name>
  		<replaceName>ValkyrieUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_valkyrieuid</name>
  		<replaceName>ValkyrieUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 valkyrieuid() const;
  inline void set_valkyrieuid(::google::protobuf::uint64 value);

  // optional uint64 AdviserUid = 5;
  inline bool has_adviseruid() const;
  inline void clear_adviseruid();
  static const int kAdviserUidFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildUpdateOurGuildNotify</name>
  	<Function>
  		<name>adviseruid</name>
  		<replaceName>AdviserUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_adviseruid</name>
  		<replaceName>AdviserUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_adviseruid</name>
  		<replaceName>AdviserUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 adviseruid() const;
  inline void set_adviseruid(::google::protobuf::uint64 value);

  // optional uint32 MemberNum = 6;
  inline bool has_membernum() const;
  inline void clear_membernum();
  static const int kMemberNumFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TSlgGuildUpdateOurGuildNotify</name>
  	<Function>
  		<name>membernum</name>
  		<replaceName>MemberNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_membernum</name>
  		<replaceName>MemberNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_membernum</name>
  		<replaceName>MemberNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 membernum() const;
  inline void set_membernum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TSlgGuildUpdateOurGuildNotify)
 private:
  inline void set_has_slgsummary();
  inline void clear_has_slgsummary();
  inline void set_has_valkyrieuid();
  inline void clear_has_valkyrieuid();
  inline void set_has_adviseruid();
  inline void clear_has_adviseruid();
  inline void set_has_membernum();
  inline void clear_has_membernum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildTechnology > technologyarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo > grouparr_;
  ::std::string* slgsummary_;
  ::google::protobuf::uint64 valkyrieuid_;
  ::google::protobuf::uint64 adviseruid_;
  ::google::protobuf::uint32 membernum_;
  friend void  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_AssignDesc_net_2fSlgGuild_2eproto();
  friend void protobuf_ShutdownFile_net_2fSlgGuild_2eproto();

  void InitAsDefaultInstance();
  static TSlgGuildUpdateOurGuildNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TSlgGuildSyncReq

// repeated .pb.TSlgGuildSyncMember MemberArr = 1;
inline int TSlgGuildSyncReq::memberarr_size() const {
  return memberarr_.size();
}
inline void TSlgGuildSyncReq::clear_memberarr() {
  memberarr_.Clear();
}
inline const ::pb::TSlgGuildSyncMember& TSlgGuildSyncReq::memberarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildSyncReq.MemberArr)
  return memberarr_.Get(index);
}
inline ::pb::TSlgGuildSyncMember* TSlgGuildSyncReq::mutable_memberarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildSyncReq.MemberArr)
  return memberarr_.Mutable(index);
}
inline ::pb::TSlgGuildSyncMember* TSlgGuildSyncReq::add_memberarr() {
  // @@protoc_insertion_point(field_add:pb.TSlgGuildSyncReq.MemberArr)
  return memberarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildSyncMember >&
TSlgGuildSyncReq::memberarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgGuildSyncReq.MemberArr)
  return memberarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildSyncMember >*
TSlgGuildSyncReq::mutable_memberarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgGuildSyncReq.MemberArr)
  return &memberarr_;
}

// -------------------------------------------------------------------

// TSlgGuildGetInfoReq

// repeated uint64 MemUidArr = 1;
inline int TSlgGuildGetInfoReq::memuidarr_size() const {
  return memuidarr_.size();
}
inline void TSlgGuildGetInfoReq::clear_memuidarr() {
  memuidarr_.Clear();
}
inline ::google::protobuf::uint64 TSlgGuildGetInfoReq::memuidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildGetInfoReq.MemUidArr)
  return memuidarr_.Get(index);
}
inline void TSlgGuildGetInfoReq::set_memuidarr(int index, ::google::protobuf::uint64 value) {
  memuidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TSlgGuildGetInfoReq.MemUidArr)
}
inline void TSlgGuildGetInfoReq::add_memuidarr(::google::protobuf::uint64 value) {
  memuidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TSlgGuildGetInfoReq.MemUidArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TSlgGuildGetInfoReq::memuidarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgGuildGetInfoReq.MemUidArr)
  return memuidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TSlgGuildGetInfoReq::mutable_memuidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgGuildGetInfoReq.MemUidArr)
  return &memuidarr_;
}

// -------------------------------------------------------------------

// TSlgGuildGetInfoRsp

// optional uint64 ValkyrieUid = 1;
inline bool TSlgGuildGetInfoRsp::has_valkyrieuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgGuildGetInfoRsp::set_has_valkyrieuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgGuildGetInfoRsp::clear_has_valkyrieuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgGuildGetInfoRsp::clear_valkyrieuid() {
  valkyrieuid_ = GOOGLE_ULONGLONG(0);
  clear_has_valkyrieuid();
}
inline ::google::protobuf::uint64 TSlgGuildGetInfoRsp::valkyrieuid() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildGetInfoRsp.ValkyrieUid)
  return valkyrieuid_;
}
inline void TSlgGuildGetInfoRsp::set_valkyrieuid(::google::protobuf::uint64 value) {
  set_has_valkyrieuid();
  valkyrieuid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildGetInfoRsp.ValkyrieUid)
}

// optional uint64 AdviserUid = 2;
inline bool TSlgGuildGetInfoRsp::has_adviseruid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSlgGuildGetInfoRsp::set_has_adviseruid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSlgGuildGetInfoRsp::clear_has_adviseruid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSlgGuildGetInfoRsp::clear_adviseruid() {
  adviseruid_ = GOOGLE_ULONGLONG(0);
  clear_has_adviseruid();
}
inline ::google::protobuf::uint64 TSlgGuildGetInfoRsp::adviseruid() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildGetInfoRsp.AdviserUid)
  return adviseruid_;
}
inline void TSlgGuildGetInfoRsp::set_adviseruid(::google::protobuf::uint64 value) {
  set_has_adviseruid();
  adviseruid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildGetInfoRsp.AdviserUid)
}

// optional uint64 WarPower = 3;
inline bool TSlgGuildGetInfoRsp::has_warpower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TSlgGuildGetInfoRsp::set_has_warpower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TSlgGuildGetInfoRsp::clear_has_warpower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TSlgGuildGetInfoRsp::clear_warpower() {
  warpower_ = GOOGLE_ULONGLONG(0);
  clear_has_warpower();
}
inline ::google::protobuf::uint64 TSlgGuildGetInfoRsp::warpower() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildGetInfoRsp.WarPower)
  return warpower_;
}
inline void TSlgGuildGetInfoRsp::set_warpower(::google::protobuf::uint64 value) {
  set_has_warpower();
  warpower_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildGetInfoRsp.WarPower)
}

// optional string Summary = 4;
inline bool TSlgGuildGetInfoRsp::has_summary() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TSlgGuildGetInfoRsp::set_has_summary() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TSlgGuildGetInfoRsp::clear_has_summary() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TSlgGuildGetInfoRsp::clear_summary() {
  if (summary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    summary_->clear();
  }
  clear_has_summary();
}
inline const ::std::string& TSlgGuildGetInfoRsp::summary() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildGetInfoRsp.Summary)
  return *summary_;
}
inline void TSlgGuildGetInfoRsp::set_summary(const ::std::string& value) {
  set_has_summary();
  if (summary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    summary_ = new ::std::string;
  }
  summary_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TSlgGuildGetInfoRsp.Summary)
}
inline void TSlgGuildGetInfoRsp::set_summary(const char* value) {
  set_has_summary();
  if (summary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    summary_ = new ::std::string;
  }
  summary_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TSlgGuildGetInfoRsp.Summary)
}
inline void TSlgGuildGetInfoRsp::set_summary(const char* value, size_t size) {
  set_has_summary();
  if (summary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    summary_ = new ::std::string;
  }
  summary_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TSlgGuildGetInfoRsp.Summary)
}
inline ::std::string* TSlgGuildGetInfoRsp::mutable_summary() {
  set_has_summary();
  if (summary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    summary_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildGetInfoRsp.Summary)
  return summary_;
}
inline ::std::string* TSlgGuildGetInfoRsp::release_summary() {
  clear_has_summary();
  if (summary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = summary_;
    summary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TSlgGuildGetInfoRsp::set_allocated_summary(::std::string* summary) {
  if (summary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete summary_;
  }
  if (summary) {
    set_has_summary();
    summary_ = summary;
  } else {
    clear_has_summary();
    summary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TSlgGuildGetInfoRsp.Summary)
}

// repeated .pb.TSlgGuildTechnology TechnologyArr = 5;
inline int TSlgGuildGetInfoRsp::technologyarr_size() const {
  return technologyarr_.size();
}
inline void TSlgGuildGetInfoRsp::clear_technologyarr() {
  technologyarr_.Clear();
}
inline const ::pb::TSlgGuildTechnology& TSlgGuildGetInfoRsp::technologyarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildGetInfoRsp.TechnologyArr)
  return technologyarr_.Get(index);
}
inline ::pb::TSlgGuildTechnology* TSlgGuildGetInfoRsp::mutable_technologyarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildGetInfoRsp.TechnologyArr)
  return technologyarr_.Mutable(index);
}
inline ::pb::TSlgGuildTechnology* TSlgGuildGetInfoRsp::add_technologyarr() {
  // @@protoc_insertion_point(field_add:pb.TSlgGuildGetInfoRsp.TechnologyArr)
  return technologyarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildTechnology >&
TSlgGuildGetInfoRsp::technologyarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgGuildGetInfoRsp.TechnologyArr)
  return technologyarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildTechnology >*
TSlgGuildGetInfoRsp::mutable_technologyarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgGuildGetInfoRsp.TechnologyArr)
  return &technologyarr_;
}

// repeated .pb.TSlgGuildGroupInfo GroupArr = 6;
inline int TSlgGuildGetInfoRsp::grouparr_size() const {
  return grouparr_.size();
}
inline void TSlgGuildGetInfoRsp::clear_grouparr() {
  grouparr_.Clear();
}
inline const ::pb::TSlgGuildGroupInfo& TSlgGuildGetInfoRsp::grouparr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildGetInfoRsp.GroupArr)
  return grouparr_.Get(index);
}
inline ::pb::TSlgGuildGroupInfo* TSlgGuildGetInfoRsp::mutable_grouparr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildGetInfoRsp.GroupArr)
  return grouparr_.Mutable(index);
}
inline ::pb::TSlgGuildGroupInfo* TSlgGuildGetInfoRsp::add_grouparr() {
  // @@protoc_insertion_point(field_add:pb.TSlgGuildGetInfoRsp.GroupArr)
  return grouparr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo >&
TSlgGuildGetInfoRsp::grouparr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgGuildGetInfoRsp.GroupArr)
  return grouparr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo >*
TSlgGuildGetInfoRsp::mutable_grouparr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgGuildGetInfoRsp.GroupArr)
  return &grouparr_;
}

// -------------------------------------------------------------------

// TSlgGuildMemberInfo

// optional uint64 Uid = 1;
inline bool TSlgGuildMemberInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgGuildMemberInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgGuildMemberInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgGuildMemberInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 TSlgGuildMemberInfo::uid() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildMemberInfo.Uid)
  return uid_;
}
inline void TSlgGuildMemberInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildMemberInfo.Uid)
}

// optional uint32 Contribute = 2;
inline bool TSlgGuildMemberInfo::has_contribute() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSlgGuildMemberInfo::set_has_contribute() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSlgGuildMemberInfo::clear_has_contribute() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSlgGuildMemberInfo::clear_contribute() {
  contribute_ = 0u;
  clear_has_contribute();
}
inline ::google::protobuf::uint32 TSlgGuildMemberInfo::contribute() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildMemberInfo.Contribute)
  return contribute_;
}
inline void TSlgGuildMemberInfo::set_contribute(::google::protobuf::uint32 value) {
  set_has_contribute();
  contribute_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildMemberInfo.Contribute)
}

// optional uint32 WeekContribute = 3;
inline bool TSlgGuildMemberInfo::has_weekcontribute() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TSlgGuildMemberInfo::set_has_weekcontribute() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TSlgGuildMemberInfo::clear_has_weekcontribute() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TSlgGuildMemberInfo::clear_weekcontribute() {
  weekcontribute_ = 0u;
  clear_has_weekcontribute();
}
inline ::google::protobuf::uint32 TSlgGuildMemberInfo::weekcontribute() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildMemberInfo.WeekContribute)
  return weekcontribute_;
}
inline void TSlgGuildMemberInfo::set_weekcontribute(::google::protobuf::uint32 value) {
  set_has_weekcontribute();
  weekcontribute_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildMemberInfo.WeekContribute)
}

// optional uint32 FightNum = 4;
inline bool TSlgGuildMemberInfo::has_fightnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TSlgGuildMemberInfo::set_has_fightnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TSlgGuildMemberInfo::clear_has_fightnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TSlgGuildMemberInfo::clear_fightnum() {
  fightnum_ = 0u;
  clear_has_fightnum();
}
inline ::google::protobuf::uint32 TSlgGuildMemberInfo::fightnum() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildMemberInfo.FightNum)
  return fightnum_;
}
inline void TSlgGuildMemberInfo::set_fightnum(::google::protobuf::uint32 value) {
  set_has_fightnum();
  fightnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildMemberInfo.FightNum)
}

// optional uint32 WeekFightNum = 5;
inline bool TSlgGuildMemberInfo::has_weekfightnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TSlgGuildMemberInfo::set_has_weekfightnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TSlgGuildMemberInfo::clear_has_weekfightnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TSlgGuildMemberInfo::clear_weekfightnum() {
  weekfightnum_ = 0u;
  clear_has_weekfightnum();
}
inline ::google::protobuf::uint32 TSlgGuildMemberInfo::weekfightnum() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildMemberInfo.WeekFightNum)
  return weekfightnum_;
}
inline void TSlgGuildMemberInfo::set_weekfightnum(::google::protobuf::uint32 value) {
  set_has_weekfightnum();
  weekfightnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildMemberInfo.WeekFightNum)
}

// optional uint32 WarPower = 6;
inline bool TSlgGuildMemberInfo::has_warpower() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TSlgGuildMemberInfo::set_has_warpower() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TSlgGuildMemberInfo::clear_has_warpower() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TSlgGuildMemberInfo::clear_warpower() {
  warpower_ = 0u;
  clear_has_warpower();
}
inline ::google::protobuf::uint32 TSlgGuildMemberInfo::warpower() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildMemberInfo.WarPower)
  return warpower_;
}
inline void TSlgGuildMemberInfo::set_warpower(::google::protobuf::uint32 value) {
  set_has_warpower();
  warpower_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildMemberInfo.WarPower)
}

// optional int32 X = 7;
inline bool TSlgGuildMemberInfo::has_x() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TSlgGuildMemberInfo::set_has_x() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TSlgGuildMemberInfo::clear_has_x() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TSlgGuildMemberInfo::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 TSlgGuildMemberInfo::x() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildMemberInfo.X)
  return x_;
}
inline void TSlgGuildMemberInfo::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildMemberInfo.X)
}

// optional int32 Y = 8;
inline bool TSlgGuildMemberInfo::has_y() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TSlgGuildMemberInfo::set_has_y() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TSlgGuildMemberInfo::clear_has_y() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TSlgGuildMemberInfo::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 TSlgGuildMemberInfo::y() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildMemberInfo.Y)
  return y_;
}
inline void TSlgGuildMemberInfo::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildMemberInfo.Y)
}

// -------------------------------------------------------------------

// TSlgGuildGetMemberListRsp

// repeated .pb.TSlgGuildMemberInfo MemberArr = 1;
inline int TSlgGuildGetMemberListRsp::memberarr_size() const {
  return memberarr_.size();
}
inline void TSlgGuildGetMemberListRsp::clear_memberarr() {
  memberarr_.Clear();
}
inline const ::pb::TSlgGuildMemberInfo& TSlgGuildGetMemberListRsp::memberarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildGetMemberListRsp.MemberArr)
  return memberarr_.Get(index);
}
inline ::pb::TSlgGuildMemberInfo* TSlgGuildGetMemberListRsp::mutable_memberarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildGetMemberListRsp.MemberArr)
  return memberarr_.Mutable(index);
}
inline ::pb::TSlgGuildMemberInfo* TSlgGuildGetMemberListRsp::add_memberarr() {
  // @@protoc_insertion_point(field_add:pb.TSlgGuildGetMemberListRsp.MemberArr)
  return memberarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildMemberInfo >&
TSlgGuildGetMemberListRsp::memberarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgGuildGetMemberListRsp.MemberArr)
  return memberarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildMemberInfo >*
TSlgGuildGetMemberListRsp::mutable_memberarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgGuildGetMemberListRsp.MemberArr)
  return &memberarr_;
}

// -------------------------------------------------------------------

// TSlgGuildModifySummaryReq

// optional string SlgSummary = 1;
inline bool TSlgGuildModifySummaryReq::has_slgsummary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgGuildModifySummaryReq::set_has_slgsummary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgGuildModifySummaryReq::clear_has_slgsummary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgGuildModifySummaryReq::clear_slgsummary() {
  if (slgsummary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slgsummary_->clear();
  }
  clear_has_slgsummary();
}
inline const ::std::string& TSlgGuildModifySummaryReq::slgsummary() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildModifySummaryReq.SlgSummary)
  return *slgsummary_;
}
inline void TSlgGuildModifySummaryReq::set_slgsummary(const ::std::string& value) {
  set_has_slgsummary();
  if (slgsummary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slgsummary_ = new ::std::string;
  }
  slgsummary_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TSlgGuildModifySummaryReq.SlgSummary)
}
inline void TSlgGuildModifySummaryReq::set_slgsummary(const char* value) {
  set_has_slgsummary();
  if (slgsummary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slgsummary_ = new ::std::string;
  }
  slgsummary_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TSlgGuildModifySummaryReq.SlgSummary)
}
inline void TSlgGuildModifySummaryReq::set_slgsummary(const char* value, size_t size) {
  set_has_slgsummary();
  if (slgsummary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slgsummary_ = new ::std::string;
  }
  slgsummary_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TSlgGuildModifySummaryReq.SlgSummary)
}
inline ::std::string* TSlgGuildModifySummaryReq::mutable_slgsummary() {
  set_has_slgsummary();
  if (slgsummary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slgsummary_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildModifySummaryReq.SlgSummary)
  return slgsummary_;
}
inline ::std::string* TSlgGuildModifySummaryReq::release_slgsummary() {
  clear_has_slgsummary();
  if (slgsummary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = slgsummary_;
    slgsummary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TSlgGuildModifySummaryReq::set_allocated_slgsummary(::std::string* slgsummary) {
  if (slgsummary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete slgsummary_;
  }
  if (slgsummary) {
    set_has_slgsummary();
    slgsummary_ = slgsummary;
  } else {
    clear_has_slgsummary();
    slgsummary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TSlgGuildModifySummaryReq.SlgSummary)
}

// -------------------------------------------------------------------

// TSlgGuildResInfo

// optional uint32 ResType = 1;
inline bool TSlgGuildResInfo::has_restype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgGuildResInfo::set_has_restype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgGuildResInfo::clear_has_restype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgGuildResInfo::clear_restype() {
  restype_ = 0u;
  clear_has_restype();
}
inline ::google::protobuf::uint32 TSlgGuildResInfo::restype() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildResInfo.ResType)
  return restype_;
}
inline void TSlgGuildResInfo::set_restype(::google::protobuf::uint32 value) {
  set_has_restype();
  restype_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildResInfo.ResType)
}

// optional uint32 ResNum = 2;
inline bool TSlgGuildResInfo::has_resnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSlgGuildResInfo::set_has_resnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSlgGuildResInfo::clear_has_resnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSlgGuildResInfo::clear_resnum() {
  resnum_ = 0u;
  clear_has_resnum();
}
inline ::google::protobuf::uint32 TSlgGuildResInfo::resnum() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildResInfo.ResNum)
  return resnum_;
}
inline void TSlgGuildResInfo::set_resnum(::google::protobuf::uint32 value) {
  set_has_resnum();
  resnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildResInfo.ResNum)
}

// -------------------------------------------------------------------

// TSlgGuildTechnology

// optional uint32 Tid = 1;
inline bool TSlgGuildTechnology::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgGuildTechnology::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgGuildTechnology::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgGuildTechnology::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 TSlgGuildTechnology::tid() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildTechnology.Tid)
  return tid_;
}
inline void TSlgGuildTechnology::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildTechnology.Tid)
}

// optional uint32 Level = 2;
inline bool TSlgGuildTechnology::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSlgGuildTechnology::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSlgGuildTechnology::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSlgGuildTechnology::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TSlgGuildTechnology::level() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildTechnology.Level)
  return level_;
}
inline void TSlgGuildTechnology::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildTechnology.Level)
}

// repeated .pb.TSlgGuildResInfo ResArr = 3;
inline int TSlgGuildTechnology::resarr_size() const {
  return resarr_.size();
}
inline void TSlgGuildTechnology::clear_resarr() {
  resarr_.Clear();
}
inline const ::pb::TSlgGuildResInfo& TSlgGuildTechnology::resarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildTechnology.ResArr)
  return resarr_.Get(index);
}
inline ::pb::TSlgGuildResInfo* TSlgGuildTechnology::mutable_resarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildTechnology.ResArr)
  return resarr_.Mutable(index);
}
inline ::pb::TSlgGuildResInfo* TSlgGuildTechnology::add_resarr() {
  // @@protoc_insertion_point(field_add:pb.TSlgGuildTechnology.ResArr)
  return resarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildResInfo >&
TSlgGuildTechnology::resarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgGuildTechnology.ResArr)
  return resarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildResInfo >*
TSlgGuildTechnology::mutable_resarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgGuildTechnology.ResArr)
  return &resarr_;
}

// optional uint64 UpgradeTime = 4;
inline bool TSlgGuildTechnology::has_upgradetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TSlgGuildTechnology::set_has_upgradetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TSlgGuildTechnology::clear_has_upgradetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TSlgGuildTechnology::clear_upgradetime() {
  upgradetime_ = GOOGLE_ULONGLONG(0);
  clear_has_upgradetime();
}
inline ::google::protobuf::uint64 TSlgGuildTechnology::upgradetime() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildTechnology.UpgradeTime)
  return upgradetime_;
}
inline void TSlgGuildTechnology::set_upgradetime(::google::protobuf::uint64 value) {
  set_has_upgradetime();
  upgradetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildTechnology.UpgradeTime)
}

// -------------------------------------------------------------------

// TSlgGuildUpgradeTechnologyReq

// optional uint32 TechTid = 1;
inline bool TSlgGuildUpgradeTechnologyReq::has_techtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgGuildUpgradeTechnologyReq::set_has_techtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgGuildUpgradeTechnologyReq::clear_has_techtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgGuildUpgradeTechnologyReq::clear_techtid() {
  techtid_ = 0u;
  clear_has_techtid();
}
inline ::google::protobuf::uint32 TSlgGuildUpgradeTechnologyReq::techtid() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildUpgradeTechnologyReq.TechTid)
  return techtid_;
}
inline void TSlgGuildUpgradeTechnologyReq::set_techtid(::google::protobuf::uint32 value) {
  set_has_techtid();
  techtid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildUpgradeTechnologyReq.TechTid)
}

// repeated .pb.TSlgGuildResInfo ResArr = 2;
inline int TSlgGuildUpgradeTechnologyReq::resarr_size() const {
  return resarr_.size();
}
inline void TSlgGuildUpgradeTechnologyReq::clear_resarr() {
  resarr_.Clear();
}
inline const ::pb::TSlgGuildResInfo& TSlgGuildUpgradeTechnologyReq::resarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildUpgradeTechnologyReq.ResArr)
  return resarr_.Get(index);
}
inline ::pb::TSlgGuildResInfo* TSlgGuildUpgradeTechnologyReq::mutable_resarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildUpgradeTechnologyReq.ResArr)
  return resarr_.Mutable(index);
}
inline ::pb::TSlgGuildResInfo* TSlgGuildUpgradeTechnologyReq::add_resarr() {
  // @@protoc_insertion_point(field_add:pb.TSlgGuildUpgradeTechnologyReq.ResArr)
  return resarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildResInfo >&
TSlgGuildUpgradeTechnologyReq::resarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgGuildUpgradeTechnologyReq.ResArr)
  return resarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildResInfo >*
TSlgGuildUpgradeTechnologyReq::mutable_resarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgGuildUpgradeTechnologyReq.ResArr)
  return &resarr_;
}

// -------------------------------------------------------------------

// TSlgGuildGroupInfo

// optional uint32 GroupIndex = 1;
inline bool TSlgGuildGroupInfo::has_groupindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgGuildGroupInfo::set_has_groupindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgGuildGroupInfo::clear_has_groupindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgGuildGroupInfo::clear_groupindex() {
  groupindex_ = 0u;
  clear_has_groupindex();
}
inline ::google::protobuf::uint32 TSlgGuildGroupInfo::groupindex() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildGroupInfo.GroupIndex)
  return groupindex_;
}
inline void TSlgGuildGroupInfo::set_groupindex(::google::protobuf::uint32 value) {
  set_has_groupindex();
  groupindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildGroupInfo.GroupIndex)
}

// optional string GroupName = 2;
inline bool TSlgGuildGroupInfo::has_groupname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSlgGuildGroupInfo::set_has_groupname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSlgGuildGroupInfo::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSlgGuildGroupInfo::clear_groupname() {
  if (groupname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_->clear();
  }
  clear_has_groupname();
}
inline const ::std::string& TSlgGuildGroupInfo::groupname() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildGroupInfo.GroupName)
  return *groupname_;
}
inline void TSlgGuildGroupInfo::set_groupname(const ::std::string& value) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TSlgGuildGroupInfo.GroupName)
}
inline void TSlgGuildGroupInfo::set_groupname(const char* value) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TSlgGuildGroupInfo.GroupName)
}
inline void TSlgGuildGroupInfo::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TSlgGuildGroupInfo.GroupName)
}
inline ::std::string* TSlgGuildGroupInfo::mutable_groupname() {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildGroupInfo.GroupName)
  return groupname_;
}
inline ::std::string* TSlgGuildGroupInfo::release_groupname() {
  clear_has_groupname();
  if (groupname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = groupname_;
    groupname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TSlgGuildGroupInfo::set_allocated_groupname(::std::string* groupname) {
  if (groupname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete groupname_;
  }
  if (groupname) {
    set_has_groupname();
    groupname_ = groupname;
  } else {
    clear_has_groupname();
    groupname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TSlgGuildGroupInfo.GroupName)
}

// repeated uint64 MemberArr = 3;
inline int TSlgGuildGroupInfo::memberarr_size() const {
  return memberarr_.size();
}
inline void TSlgGuildGroupInfo::clear_memberarr() {
  memberarr_.Clear();
}
inline ::google::protobuf::uint64 TSlgGuildGroupInfo::memberarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildGroupInfo.MemberArr)
  return memberarr_.Get(index);
}
inline void TSlgGuildGroupInfo::set_memberarr(int index, ::google::protobuf::uint64 value) {
  memberarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TSlgGuildGroupInfo.MemberArr)
}
inline void TSlgGuildGroupInfo::add_memberarr(::google::protobuf::uint64 value) {
  memberarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TSlgGuildGroupInfo.MemberArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TSlgGuildGroupInfo::memberarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgGuildGroupInfo.MemberArr)
  return memberarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TSlgGuildGroupInfo::mutable_memberarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgGuildGroupInfo.MemberArr)
  return &memberarr_;
}

// -------------------------------------------------------------------

// TSlgGuildGetGroupInfoRsp

// repeated .pb.TSlgGuildGroupInfo GroupArr = 1;
inline int TSlgGuildGetGroupInfoRsp::grouparr_size() const {
  return grouparr_.size();
}
inline void TSlgGuildGetGroupInfoRsp::clear_grouparr() {
  grouparr_.Clear();
}
inline const ::pb::TSlgGuildGroupInfo& TSlgGuildGetGroupInfoRsp::grouparr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildGetGroupInfoRsp.GroupArr)
  return grouparr_.Get(index);
}
inline ::pb::TSlgGuildGroupInfo* TSlgGuildGetGroupInfoRsp::mutable_grouparr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildGetGroupInfoRsp.GroupArr)
  return grouparr_.Mutable(index);
}
inline ::pb::TSlgGuildGroupInfo* TSlgGuildGetGroupInfoRsp::add_grouparr() {
  // @@protoc_insertion_point(field_add:pb.TSlgGuildGetGroupInfoRsp.GroupArr)
  return grouparr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo >&
TSlgGuildGetGroupInfoRsp::grouparr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgGuildGetGroupInfoRsp.GroupArr)
  return grouparr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo >*
TSlgGuildGetGroupInfoRsp::mutable_grouparr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgGuildGetGroupInfoRsp.GroupArr)
  return &grouparr_;
}

// -------------------------------------------------------------------

// TSlgGuildModifyGroupNameReq

// optional uint32 GroupIndex = 1;
inline bool TSlgGuildModifyGroupNameReq::has_groupindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgGuildModifyGroupNameReq::set_has_groupindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgGuildModifyGroupNameReq::clear_has_groupindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgGuildModifyGroupNameReq::clear_groupindex() {
  groupindex_ = 0u;
  clear_has_groupindex();
}
inline ::google::protobuf::uint32 TSlgGuildModifyGroupNameReq::groupindex() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildModifyGroupNameReq.GroupIndex)
  return groupindex_;
}
inline void TSlgGuildModifyGroupNameReq::set_groupindex(::google::protobuf::uint32 value) {
  set_has_groupindex();
  groupindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildModifyGroupNameReq.GroupIndex)
}

// optional string GroupName = 2;
inline bool TSlgGuildModifyGroupNameReq::has_groupname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TSlgGuildModifyGroupNameReq::set_has_groupname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TSlgGuildModifyGroupNameReq::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TSlgGuildModifyGroupNameReq::clear_groupname() {
  if (groupname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_->clear();
  }
  clear_has_groupname();
}
inline const ::std::string& TSlgGuildModifyGroupNameReq::groupname() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildModifyGroupNameReq.GroupName)
  return *groupname_;
}
inline void TSlgGuildModifyGroupNameReq::set_groupname(const ::std::string& value) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TSlgGuildModifyGroupNameReq.GroupName)
}
inline void TSlgGuildModifyGroupNameReq::set_groupname(const char* value) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TSlgGuildModifyGroupNameReq.GroupName)
}
inline void TSlgGuildModifyGroupNameReq::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TSlgGuildModifyGroupNameReq.GroupName)
}
inline ::std::string* TSlgGuildModifyGroupNameReq::mutable_groupname() {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildModifyGroupNameReq.GroupName)
  return groupname_;
}
inline ::std::string* TSlgGuildModifyGroupNameReq::release_groupname() {
  clear_has_groupname();
  if (groupname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = groupname_;
    groupname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TSlgGuildModifyGroupNameReq::set_allocated_groupname(::std::string* groupname) {
  if (groupname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete groupname_;
  }
  if (groupname) {
    set_has_groupname();
    groupname_ = groupname;
  } else {
    clear_has_groupname();
    groupname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TSlgGuildModifyGroupNameReq.GroupName)
}

// -------------------------------------------------------------------

// TSlgGuildModifyGroupMemberReq

// optional uint32 GroupIndex = 1;
inline bool TSlgGuildModifyGroupMemberReq::has_groupindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TSlgGuildModifyGroupMemberReq::set_has_groupindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TSlgGuildModifyGroupMemberReq::clear_has_groupindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TSlgGuildModifyGroupMemberReq::clear_groupindex() {
  groupindex_ = 0u;
  clear_has_groupindex();
}
inline ::google::protobuf::uint32 TSlgGuildModifyGroupMemberReq::groupindex() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildModifyGroupMemberReq.GroupIndex)
  return groupindex_;
}
inline void TSlgGuildModifyGroupMemberReq::set_groupindex(::google::protobuf::uint32 value) {
  set_has_groupindex();
  groupindex_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildModifyGroupMemberReq.GroupIndex)
}

// repeated uint64 AddUidArr = 2;
inline int TSlgGuildModifyGroupMemberReq::adduidarr_size() const {
  return adduidarr_.size();
}
inline void TSlgGuildModifyGroupMemberReq::clear_adduidarr() {
  adduidarr_.Clear();
}
inline ::google::protobuf::uint64 TSlgGuildModifyGroupMemberReq::adduidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildModifyGroupMemberReq.AddUidArr)
  return adduidarr_.Get(index);
}
inline void TSlgGuildModifyGroupMemberReq::set_adduidarr(int index, ::google::protobuf::uint64 value) {
  adduidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TSlgGuildModifyGroupMemberReq.AddUidArr)
}
inline void TSlgGuildModifyGroupMemberReq::add_adduidarr(::google::protobuf::uint64 value) {
  adduidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TSlgGuildModifyGroupMemberReq.AddUidArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TSlgGuildModifyGroupMemberReq::adduidarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgGuildModifyGroupMemberReq.AddUidArr)
  return adduidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TSlgGuildModifyGroupMemberReq::mutable_adduidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgGuildModifyGroupMemberReq.AddUidArr)
  return &adduidarr_;
}

// repeated uint64 RemoveUidArr = 3;
inline int TSlgGuildModifyGroupMemberReq::removeuidarr_size() const {
  return removeuidarr_.size();
}
inline void TSlgGuildModifyGroupMemberReq::clear_removeuidarr() {
  removeuidarr_.Clear();
}
inline ::google::protobuf::uint64 TSlgGuildModifyGroupMemberReq::removeuidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildModifyGroupMemberReq.RemoveUidArr)
  return removeuidarr_.Get(index);
}
inline void TSlgGuildModifyGroupMemberReq::set_removeuidarr(int index, ::google::protobuf::uint64 value) {
  removeuidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TSlgGuildModifyGroupMemberReq.RemoveUidArr)
}
inline void TSlgGuildModifyGroupMemberReq::add_removeuidarr(::google::protobuf::uint64 value) {
  removeuidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TSlgGuildModifyGroupMemberReq.RemoveUidArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TSlgGuildModifyGroupMemberReq::removeuidarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgGuildModifyGroupMemberReq.RemoveUidArr)
  return removeuidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TSlgGuildModifyGroupMemberReq::mutable_removeuidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgGuildModifyGroupMemberReq.RemoveUidArr)
  return &removeuidarr_;
}

// -------------------------------------------------------------------

// TSlgGuildUpdateOurGuildNotify

// repeated .pb.TSlgGuildTechnology TechnologyArr = 1;
inline int TSlgGuildUpdateOurGuildNotify::technologyarr_size() const {
  return technologyarr_.size();
}
inline void TSlgGuildUpdateOurGuildNotify::clear_technologyarr() {
  technologyarr_.Clear();
}
inline const ::pb::TSlgGuildTechnology& TSlgGuildUpdateOurGuildNotify::technologyarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildUpdateOurGuildNotify.TechnologyArr)
  return technologyarr_.Get(index);
}
inline ::pb::TSlgGuildTechnology* TSlgGuildUpdateOurGuildNotify::mutable_technologyarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildUpdateOurGuildNotify.TechnologyArr)
  return technologyarr_.Mutable(index);
}
inline ::pb::TSlgGuildTechnology* TSlgGuildUpdateOurGuildNotify::add_technologyarr() {
  // @@protoc_insertion_point(field_add:pb.TSlgGuildUpdateOurGuildNotify.TechnologyArr)
  return technologyarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildTechnology >&
TSlgGuildUpdateOurGuildNotify::technologyarr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgGuildUpdateOurGuildNotify.TechnologyArr)
  return technologyarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildTechnology >*
TSlgGuildUpdateOurGuildNotify::mutable_technologyarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgGuildUpdateOurGuildNotify.TechnologyArr)
  return &technologyarr_;
}

// repeated .pb.TSlgGuildGroupInfo GroupArr = 2;
inline int TSlgGuildUpdateOurGuildNotify::grouparr_size() const {
  return grouparr_.size();
}
inline void TSlgGuildUpdateOurGuildNotify::clear_grouparr() {
  grouparr_.Clear();
}
inline const ::pb::TSlgGuildGroupInfo& TSlgGuildUpdateOurGuildNotify::grouparr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildUpdateOurGuildNotify.GroupArr)
  return grouparr_.Get(index);
}
inline ::pb::TSlgGuildGroupInfo* TSlgGuildUpdateOurGuildNotify::mutable_grouparr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildUpdateOurGuildNotify.GroupArr)
  return grouparr_.Mutable(index);
}
inline ::pb::TSlgGuildGroupInfo* TSlgGuildUpdateOurGuildNotify::add_grouparr() {
  // @@protoc_insertion_point(field_add:pb.TSlgGuildUpdateOurGuildNotify.GroupArr)
  return grouparr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo >&
TSlgGuildUpdateOurGuildNotify::grouparr() const {
  // @@protoc_insertion_point(field_list:pb.TSlgGuildUpdateOurGuildNotify.GroupArr)
  return grouparr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TSlgGuildGroupInfo >*
TSlgGuildUpdateOurGuildNotify::mutable_grouparr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TSlgGuildUpdateOurGuildNotify.GroupArr)
  return &grouparr_;
}

// optional string SlgSummary = 3;
inline bool TSlgGuildUpdateOurGuildNotify::has_slgsummary() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TSlgGuildUpdateOurGuildNotify::set_has_slgsummary() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TSlgGuildUpdateOurGuildNotify::clear_has_slgsummary() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TSlgGuildUpdateOurGuildNotify::clear_slgsummary() {
  if (slgsummary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slgsummary_->clear();
  }
  clear_has_slgsummary();
}
inline const ::std::string& TSlgGuildUpdateOurGuildNotify::slgsummary() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildUpdateOurGuildNotify.SlgSummary)
  return *slgsummary_;
}
inline void TSlgGuildUpdateOurGuildNotify::set_slgsummary(const ::std::string& value) {
  set_has_slgsummary();
  if (slgsummary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slgsummary_ = new ::std::string;
  }
  slgsummary_->assign(value);
  // @@protoc_insertion_point(field_set:pb.TSlgGuildUpdateOurGuildNotify.SlgSummary)
}
inline void TSlgGuildUpdateOurGuildNotify::set_slgsummary(const char* value) {
  set_has_slgsummary();
  if (slgsummary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slgsummary_ = new ::std::string;
  }
  slgsummary_->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.TSlgGuildUpdateOurGuildNotify.SlgSummary)
}
inline void TSlgGuildUpdateOurGuildNotify::set_slgsummary(const char* value, size_t size) {
  set_has_slgsummary();
  if (slgsummary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slgsummary_ = new ::std::string;
  }
  slgsummary_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.TSlgGuildUpdateOurGuildNotify.SlgSummary)
}
inline ::std::string* TSlgGuildUpdateOurGuildNotify::mutable_slgsummary() {
  set_has_slgsummary();
  if (slgsummary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slgsummary_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pb.TSlgGuildUpdateOurGuildNotify.SlgSummary)
  return slgsummary_;
}
inline ::std::string* TSlgGuildUpdateOurGuildNotify::release_slgsummary() {
  clear_has_slgsummary();
  if (slgsummary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = slgsummary_;
    slgsummary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TSlgGuildUpdateOurGuildNotify::set_allocated_slgsummary(::std::string* slgsummary) {
  if (slgsummary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete slgsummary_;
  }
  if (slgsummary) {
    set_has_slgsummary();
    slgsummary_ = slgsummary;
  } else {
    clear_has_slgsummary();
    slgsummary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TSlgGuildUpdateOurGuildNotify.SlgSummary)
}

// optional uint64 ValkyrieUid = 4;
inline bool TSlgGuildUpdateOurGuildNotify::has_valkyrieuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TSlgGuildUpdateOurGuildNotify::set_has_valkyrieuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TSlgGuildUpdateOurGuildNotify::clear_has_valkyrieuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TSlgGuildUpdateOurGuildNotify::clear_valkyrieuid() {
  valkyrieuid_ = GOOGLE_ULONGLONG(0);
  clear_has_valkyrieuid();
}
inline ::google::protobuf::uint64 TSlgGuildUpdateOurGuildNotify::valkyrieuid() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildUpdateOurGuildNotify.ValkyrieUid)
  return valkyrieuid_;
}
inline void TSlgGuildUpdateOurGuildNotify::set_valkyrieuid(::google::protobuf::uint64 value) {
  set_has_valkyrieuid();
  valkyrieuid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildUpdateOurGuildNotify.ValkyrieUid)
}

// optional uint64 AdviserUid = 5;
inline bool TSlgGuildUpdateOurGuildNotify::has_adviseruid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TSlgGuildUpdateOurGuildNotify::set_has_adviseruid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TSlgGuildUpdateOurGuildNotify::clear_has_adviseruid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TSlgGuildUpdateOurGuildNotify::clear_adviseruid() {
  adviseruid_ = GOOGLE_ULONGLONG(0);
  clear_has_adviseruid();
}
inline ::google::protobuf::uint64 TSlgGuildUpdateOurGuildNotify::adviseruid() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildUpdateOurGuildNotify.AdviserUid)
  return adviseruid_;
}
inline void TSlgGuildUpdateOurGuildNotify::set_adviseruid(::google::protobuf::uint64 value) {
  set_has_adviseruid();
  adviseruid_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildUpdateOurGuildNotify.AdviserUid)
}

// optional uint32 MemberNum = 6;
inline bool TSlgGuildUpdateOurGuildNotify::has_membernum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TSlgGuildUpdateOurGuildNotify::set_has_membernum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TSlgGuildUpdateOurGuildNotify::clear_has_membernum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TSlgGuildUpdateOurGuildNotify::clear_membernum() {
  membernum_ = 0u;
  clear_has_membernum();
}
inline ::google::protobuf::uint32 TSlgGuildUpdateOurGuildNotify::membernum() const {
  // @@protoc_insertion_point(field_get:pb.TSlgGuildUpdateOurGuildNotify.MemberNum)
  return membernum_;
}
inline void TSlgGuildUpdateOurGuildNotify::set_membernum(::google::protobuf::uint32 value) {
  set_has_membernum();
  membernum_ = value;
  // @@protoc_insertion_point(field_set:pb.TSlgGuildUpdateOurGuildNotify.MemberNum)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fSlgGuild_2eproto__INCLUDED
