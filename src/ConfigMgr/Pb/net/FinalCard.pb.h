// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/FinalCard.proto

#ifndef PROTOBUF_net_2fFinalCard_2eproto__INCLUDED
#define PROTOBUF_net_2fFinalCard_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fFinalCard_2eproto();
void protobuf_AssignDesc_net_2fFinalCard_2eproto();
void protobuf_ShutdownFile_net_2fFinalCard_2eproto();

class TFinalCardInfo;
class TFinalCardGetInfoRsp;
class TFinalCardGetRewardReq;
class TFinalCardGetRewardRsp;
class TFinalCardBuyNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TFinalCardInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FinalCard.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFinalCardInfo : public ::google::protobuf::Message {
 public:
  TFinalCardInfo();
  virtual ~TFinalCardInfo();

  TFinalCardInfo(const TFinalCardInfo& from);

  inline TFinalCardInfo& operator=(const TFinalCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFinalCardInfo& default_instance();

  void Swap(TFinalCardInfo* other);

  // implements Message ----------------------------------------------

  TFinalCardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFinalCardInfo& from);
  void MergeFrom(const TFinalCardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ProductId = 1;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFinalCardInfo</name>
  	<Function>
  		<name>productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 productid() const;
  inline void set_productid(::google::protobuf::uint32 value);

  // optional uint64 BuyTime = 2;
  inline bool has_buytime() const;
  inline void clear_buytime();
  static const int kBuyTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFinalCardInfo</name>
  	<Function>
  		<name>buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 buytime() const;
  inline void set_buytime(::google::protobuf::uint64 value);

  // optional uint64 LastRewardTime = 3;
  inline bool has_lastrewardtime() const;
  inline void clear_lastrewardtime();
  static const int kLastRewardTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFinalCardInfo</name>
  	<Function>
  		<name>lastrewardtime</name>
  		<replaceName>LastRewardTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_lastrewardtime</name>
  		<replaceName>LastRewardTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_lastrewardtime</name>
  		<replaceName>LastRewardTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 lastrewardtime() const;
  inline void set_lastrewardtime(::google::protobuf::uint64 value);

  // optional uint64 EndTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TFinalCardInfo</name>
  	<Function>
  		<name>endtime</name>
  		<replaceName>EndTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_endtime</name>
  		<replaceName>EndTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_endtime</name>
  		<replaceName>EndTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TFinalCardInfo)
 private:
  inline void set_has_productid();
  inline void clear_has_productid();
  inline void set_has_buytime();
  inline void clear_has_buytime();
  inline void set_has_lastrewardtime();
  inline void clear_has_lastrewardtime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 buytime_;
  ::google::protobuf::uint64 lastrewardtime_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::uint32 productid_;
  friend void  protobuf_AddDesc_net_2fFinalCard_2eproto();
  friend void protobuf_AssignDesc_net_2fFinalCard_2eproto();
  friend void protobuf_ShutdownFile_net_2fFinalCard_2eproto();

  void InitAsDefaultInstance();
  static TFinalCardInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFinalCardGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FinalCard.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFinalCardGetInfoRsp : public ::google::protobuf::Message {
 public:
  TFinalCardGetInfoRsp();
  virtual ~TFinalCardGetInfoRsp();

  TFinalCardGetInfoRsp(const TFinalCardGetInfoRsp& from);

  inline TFinalCardGetInfoRsp& operator=(const TFinalCardGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFinalCardGetInfoRsp& default_instance();

  void Swap(TFinalCardGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TFinalCardGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFinalCardGetInfoRsp& from);
  void MergeFrom(const TFinalCardGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TFinalCardInfo CardInfoArr = 1;
  inline int cardinfoarr_size() const;
  inline void clear_cardinfoarr();
  static const int kCardInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFinalCardGetInfoRsp</name>
  	<Function>
  		<name>cardinfoarr</name>
  		<replaceName>CardInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_cardinfoarr</name>
  		<replaceName>CardInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_cardinfoarr</name>
  		<replaceName>CardInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_cardinfoarr</name>
  		<replaceName>CardInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>cardinfoarr_size</name>
  		<replaceName>CardInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFinalCardInfo& cardinfoarr(int index) const;
  inline ::pb::TFinalCardInfo* mutable_cardinfoarr(int index);
  inline ::pb::TFinalCardInfo* add_cardinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFinalCardInfo >&
      cardinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFinalCardInfo >*
      mutable_cardinfoarr();

  // @@protoc_insertion_point(class_scope:pb.TFinalCardGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFinalCardInfo > cardinfoarr_;
  friend void  protobuf_AddDesc_net_2fFinalCard_2eproto();
  friend void protobuf_AssignDesc_net_2fFinalCard_2eproto();
  friend void protobuf_ShutdownFile_net_2fFinalCard_2eproto();

  void InitAsDefaultInstance();
  static TFinalCardGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFinalCardGetRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FinalCard.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFinalCardGetRewardReq : public ::google::protobuf::Message {
 public:
  TFinalCardGetRewardReq();
  virtual ~TFinalCardGetRewardReq();

  TFinalCardGetRewardReq(const TFinalCardGetRewardReq& from);

  inline TFinalCardGetRewardReq& operator=(const TFinalCardGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFinalCardGetRewardReq& default_instance();

  void Swap(TFinalCardGetRewardReq* other);

  // implements Message ----------------------------------------------

  TFinalCardGetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFinalCardGetRewardReq& from);
  void MergeFrom(const TFinalCardGetRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ProductId = 1;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFinalCardGetRewardReq</name>
  	<Function>
  		<name>productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_productid</name>
  		<replaceName>ProductId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 productid() const;
  inline void set_productid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TFinalCardGetRewardReq)
 private:
  inline void set_has_productid();
  inline void clear_has_productid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 productid_;
  friend void  protobuf_AddDesc_net_2fFinalCard_2eproto();
  friend void protobuf_AssignDesc_net_2fFinalCard_2eproto();
  friend void protobuf_ShutdownFile_net_2fFinalCard_2eproto();

  void InitAsDefaultInstance();
  static TFinalCardGetRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFinalCardGetRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FinalCard.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFinalCardGetRewardRsp : public ::google::protobuf::Message {
 public:
  TFinalCardGetRewardRsp();
  virtual ~TFinalCardGetRewardRsp();

  TFinalCardGetRewardRsp(const TFinalCardGetRewardRsp& from);

  inline TFinalCardGetRewardRsp& operator=(const TFinalCardGetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFinalCardGetRewardRsp& default_instance();

  void Swap(TFinalCardGetRewardRsp* other);

  // implements Message ----------------------------------------------

  TFinalCardGetRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFinalCardGetRewardRsp& from);
  void MergeFrom(const TFinalCardGetRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward RewardArr = 1;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFinalCardGetRewardRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarr(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarr(int index);
  inline ::pb::TCommonReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarr();

  // @@protoc_insertion_point(class_scope:pb.TFinalCardGetRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarr_;
  friend void  protobuf_AddDesc_net_2fFinalCard_2eproto();
  friend void protobuf_AssignDesc_net_2fFinalCard_2eproto();
  friend void protobuf_ShutdownFile_net_2fFinalCard_2eproto();

  void InitAsDefaultInstance();
  static TFinalCardGetRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFinalCardBuyNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FinalCard.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFinalCardBuyNotify : public ::google::protobuf::Message {
 public:
  TFinalCardBuyNotify();
  virtual ~TFinalCardBuyNotify();

  TFinalCardBuyNotify(const TFinalCardBuyNotify& from);

  inline TFinalCardBuyNotify& operator=(const TFinalCardBuyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFinalCardBuyNotify& default_instance();

  void Swap(TFinalCardBuyNotify* other);

  // implements Message ----------------------------------------------

  TFinalCardBuyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFinalCardBuyNotify& from);
  void MergeFrom(const TFinalCardBuyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TFinalCardInfo CardInfo = 1;
  inline bool has_cardinfo() const;
  inline void clear_cardinfo();
  static const int kCardInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFinalCardBuyNotify</name>
  	<Function>
  		<name>cardinfo</name>
  		<replaceName>CardInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_cardinfo</name>
  		<replaceName>CardInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_cardinfo</name>
  		<replaceName>CardInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_cardinfo</name>
  		<replaceName>CardInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFinalCardInfo& cardinfo() const;
  inline ::pb::TFinalCardInfo* mutable_cardinfo();
  inline ::pb::TFinalCardInfo* release_cardinfo();
  inline void set_allocated_cardinfo(::pb::TFinalCardInfo* cardinfo);

  // @@protoc_insertion_point(class_scope:pb.TFinalCardBuyNotify)
 private:
  inline void set_has_cardinfo();
  inline void clear_has_cardinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TFinalCardInfo* cardinfo_;
  friend void  protobuf_AddDesc_net_2fFinalCard_2eproto();
  friend void protobuf_AssignDesc_net_2fFinalCard_2eproto();
  friend void protobuf_ShutdownFile_net_2fFinalCard_2eproto();

  void InitAsDefaultInstance();
  static TFinalCardBuyNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TFinalCardInfo

// optional uint32 ProductId = 1;
inline bool TFinalCardInfo::has_productid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFinalCardInfo::set_has_productid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFinalCardInfo::clear_has_productid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFinalCardInfo::clear_productid() {
  productid_ = 0u;
  clear_has_productid();
}
inline ::google::protobuf::uint32 TFinalCardInfo::productid() const {
  // @@protoc_insertion_point(field_get:pb.TFinalCardInfo.ProductId)
  return productid_;
}
inline void TFinalCardInfo::set_productid(::google::protobuf::uint32 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFinalCardInfo.ProductId)
}

// optional uint64 BuyTime = 2;
inline bool TFinalCardInfo::has_buytime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFinalCardInfo::set_has_buytime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFinalCardInfo::clear_has_buytime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFinalCardInfo::clear_buytime() {
  buytime_ = GOOGLE_ULONGLONG(0);
  clear_has_buytime();
}
inline ::google::protobuf::uint64 TFinalCardInfo::buytime() const {
  // @@protoc_insertion_point(field_get:pb.TFinalCardInfo.BuyTime)
  return buytime_;
}
inline void TFinalCardInfo::set_buytime(::google::protobuf::uint64 value) {
  set_has_buytime();
  buytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TFinalCardInfo.BuyTime)
}

// optional uint64 LastRewardTime = 3;
inline bool TFinalCardInfo::has_lastrewardtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFinalCardInfo::set_has_lastrewardtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFinalCardInfo::clear_has_lastrewardtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFinalCardInfo::clear_lastrewardtime() {
  lastrewardtime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastrewardtime();
}
inline ::google::protobuf::uint64 TFinalCardInfo::lastrewardtime() const {
  // @@protoc_insertion_point(field_get:pb.TFinalCardInfo.LastRewardTime)
  return lastrewardtime_;
}
inline void TFinalCardInfo::set_lastrewardtime(::google::protobuf::uint64 value) {
  set_has_lastrewardtime();
  lastrewardtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TFinalCardInfo.LastRewardTime)
}

// optional uint64 EndTime = 4;
inline bool TFinalCardInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TFinalCardInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TFinalCardInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TFinalCardInfo::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 TFinalCardInfo::endtime() const {
  // @@protoc_insertion_point(field_get:pb.TFinalCardInfo.EndTime)
  return endtime_;
}
inline void TFinalCardInfo::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:pb.TFinalCardInfo.EndTime)
}

// -------------------------------------------------------------------

// TFinalCardGetInfoRsp

// repeated .pb.TFinalCardInfo CardInfoArr = 1;
inline int TFinalCardGetInfoRsp::cardinfoarr_size() const {
  return cardinfoarr_.size();
}
inline void TFinalCardGetInfoRsp::clear_cardinfoarr() {
  cardinfoarr_.Clear();
}
inline const ::pb::TFinalCardInfo& TFinalCardGetInfoRsp::cardinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFinalCardGetInfoRsp.CardInfoArr)
  return cardinfoarr_.Get(index);
}
inline ::pb::TFinalCardInfo* TFinalCardGetInfoRsp::mutable_cardinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFinalCardGetInfoRsp.CardInfoArr)
  return cardinfoarr_.Mutable(index);
}
inline ::pb::TFinalCardInfo* TFinalCardGetInfoRsp::add_cardinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TFinalCardGetInfoRsp.CardInfoArr)
  return cardinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFinalCardInfo >&
TFinalCardGetInfoRsp::cardinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TFinalCardGetInfoRsp.CardInfoArr)
  return cardinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFinalCardInfo >*
TFinalCardGetInfoRsp::mutable_cardinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFinalCardGetInfoRsp.CardInfoArr)
  return &cardinfoarr_;
}

// -------------------------------------------------------------------

// TFinalCardGetRewardReq

// optional uint32 ProductId = 1;
inline bool TFinalCardGetRewardReq::has_productid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFinalCardGetRewardReq::set_has_productid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFinalCardGetRewardReq::clear_has_productid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFinalCardGetRewardReq::clear_productid() {
  productid_ = 0u;
  clear_has_productid();
}
inline ::google::protobuf::uint32 TFinalCardGetRewardReq::productid() const {
  // @@protoc_insertion_point(field_get:pb.TFinalCardGetRewardReq.ProductId)
  return productid_;
}
inline void TFinalCardGetRewardReq::set_productid(::google::protobuf::uint32 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFinalCardGetRewardReq.ProductId)
}

// -------------------------------------------------------------------

// TFinalCardGetRewardRsp

// repeated .pb.TCommonReward RewardArr = 1;
inline int TFinalCardGetRewardRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TFinalCardGetRewardRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TCommonReward& TFinalCardGetRewardRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFinalCardGetRewardRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TCommonReward* TFinalCardGetRewardRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFinalCardGetRewardRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TCommonReward* TFinalCardGetRewardRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TFinalCardGetRewardRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TFinalCardGetRewardRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TFinalCardGetRewardRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TFinalCardGetRewardRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFinalCardGetRewardRsp.RewardArr)
  return &rewardarr_;
}

// -------------------------------------------------------------------

// TFinalCardBuyNotify

// optional .pb.TFinalCardInfo CardInfo = 1;
inline bool TFinalCardBuyNotify::has_cardinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFinalCardBuyNotify::set_has_cardinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFinalCardBuyNotify::clear_has_cardinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFinalCardBuyNotify::clear_cardinfo() {
  if (cardinfo_ != NULL) cardinfo_->::pb::TFinalCardInfo::Clear();
  clear_has_cardinfo();
}
inline const ::pb::TFinalCardInfo& TFinalCardBuyNotify::cardinfo() const {
  // @@protoc_insertion_point(field_get:pb.TFinalCardBuyNotify.CardInfo)
  return cardinfo_ != NULL ? *cardinfo_ : *default_instance_->cardinfo_;
}
inline ::pb::TFinalCardInfo* TFinalCardBuyNotify::mutable_cardinfo() {
  set_has_cardinfo();
  if (cardinfo_ == NULL) cardinfo_ = new ::pb::TFinalCardInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFinalCardBuyNotify.CardInfo)
  return cardinfo_;
}
inline ::pb::TFinalCardInfo* TFinalCardBuyNotify::release_cardinfo() {
  clear_has_cardinfo();
  ::pb::TFinalCardInfo* temp = cardinfo_;
  cardinfo_ = NULL;
  return temp;
}
inline void TFinalCardBuyNotify::set_allocated_cardinfo(::pb::TFinalCardInfo* cardinfo) {
  delete cardinfo_;
  cardinfo_ = cardinfo;
  if (cardinfo) {
    set_has_cardinfo();
  } else {
    clear_has_cardinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFinalCardBuyNotify.CardInfo)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fFinalCard_2eproto__INCLUDED
