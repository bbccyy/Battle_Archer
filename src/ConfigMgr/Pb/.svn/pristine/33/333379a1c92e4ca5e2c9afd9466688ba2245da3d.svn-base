// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/BountyListOne.proto

#ifndef PROTOBUF_net_2fBountyListOne_2eproto__INCLUDED
#define PROTOBUF_net_2fBountyListOne_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fBountyListOne_2eproto();
void protobuf_AssignDesc_net_2fBountyListOne_2eproto();
void protobuf_ShutdownFile_net_2fBountyListOne_2eproto();

class TBountyListOneBountySingle;
class TBountyListOneGetBountyListOneInfoRsp;
class TBountyListOneGetRewardReq;
class TBountyListOneGetRewardRsp;
class TBountyListOneGetTotalRewardRsp;
class TBountyListOnePush;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TBountyListOneBountySingle</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/BountyListOne.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBountyListOneBountySingle : public ::google::protobuf::Message {
 public:
  TBountyListOneBountySingle();
  virtual ~TBountyListOneBountySingle();

  TBountyListOneBountySingle(const TBountyListOneBountySingle& from);

  inline TBountyListOneBountySingle& operator=(const TBountyListOneBountySingle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBountyListOneBountySingle& default_instance();

  void Swap(TBountyListOneBountySingle* other);

  // implements Message ----------------------------------------------

  TBountyListOneBountySingle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBountyListOneBountySingle& from);
  void MergeFrom(const TBountyListOneBountySingle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneBountySingle</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 LevelId = 2;
  inline bool has_levelid() const;
  inline void clear_levelid();
  static const int kLevelIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneBountySingle</name>
  	<Function>
  		<name>levelid</name>
  		<replaceName>LevelId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_levelid</name>
  		<replaceName>LevelId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_levelid</name>
  		<replaceName>LevelId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 levelid() const;
  inline void set_levelid(::google::protobuf::uint32 value);

  // optional uint64 ReceiveTime = 3;
  inline bool has_receivetime() const;
  inline void clear_receivetime();
  static const int kReceiveTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneBountySingle</name>
  	<Function>
  		<name>receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_receivetime</name>
  		<replaceName>ReceiveTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 receivetime() const;
  inline void set_receivetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TBountyListOneBountySingle)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_levelid();
  inline void clear_has_levelid();
  inline void set_has_receivetime();
  inline void clear_has_receivetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 levelid_;
  ::google::protobuf::uint64 receivetime_;
  friend void  protobuf_AddDesc_net_2fBountyListOne_2eproto();
  friend void protobuf_AssignDesc_net_2fBountyListOne_2eproto();
  friend void protobuf_ShutdownFile_net_2fBountyListOne_2eproto();

  void InitAsDefaultInstance();
  static TBountyListOneBountySingle* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBountyListOneGetBountyListOneInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/BountyListOne.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBountyListOneGetBountyListOneInfoRsp : public ::google::protobuf::Message {
 public:
  TBountyListOneGetBountyListOneInfoRsp();
  virtual ~TBountyListOneGetBountyListOneInfoRsp();

  TBountyListOneGetBountyListOneInfoRsp(const TBountyListOneGetBountyListOneInfoRsp& from);

  inline TBountyListOneGetBountyListOneInfoRsp& operator=(const TBountyListOneGetBountyListOneInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBountyListOneGetBountyListOneInfoRsp& default_instance();

  void Swap(TBountyListOneGetBountyListOneInfoRsp* other);

  // implements Message ----------------------------------------------

  TBountyListOneGetBountyListOneInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBountyListOneGetBountyListOneInfoRsp& from);
  void MergeFrom(const TBountyListOneGetBountyListOneInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 OpenTime = 1;
  inline bool has_opentime() const;
  inline void clear_opentime();
  static const int kOpenTimeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetBountyListOneInfoRsp</name>
  	<Function>
  		<name>opentime</name>
  		<replaceName>OpenTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_opentime</name>
  		<replaceName>OpenTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_opentime</name>
  		<replaceName>OpenTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 opentime() const;
  inline void set_opentime(::google::protobuf::uint64 value);

  // optional uint32 TotalScores = 2;
  inline bool has_totalscores() const;
  inline void clear_totalscores();
  static const int kTotalScoresFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetBountyListOneInfoRsp</name>
  	<Function>
  		<name>totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 totalscores() const;
  inline void set_totalscores(::google::protobuf::uint32 value);

  // optional uint64 PayTime = 3;
  inline bool has_paytime() const;
  inline void clear_paytime();
  static const int kPayTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetBountyListOneInfoRsp</name>
  	<Function>
  		<name>paytime</name>
  		<replaceName>PayTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_paytime</name>
  		<replaceName>PayTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_paytime</name>
  		<replaceName>PayTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 paytime() const;
  inline void set_paytime(::google::protobuf::uint64 value);

  // optional uint64 PassChapterTime = 4;
  inline bool has_passchaptertime() const;
  inline void clear_passchaptertime();
  static const int kPassChapterTimeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetBountyListOneInfoRsp</name>
  	<Function>
  		<name>passchaptertime</name>
  		<replaceName>PassChapterTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_passchaptertime</name>
  		<replaceName>PassChapterTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_passchaptertime</name>
  		<replaceName>PassChapterTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 passchaptertime() const;
  inline void set_passchaptertime(::google::protobuf::uint64 value);

  // repeated .pb.TBountyListOneBountySingle BountyCommonArr = 5;
  inline int bountycommonarr_size() const;
  inline void clear_bountycommonarr();
  static const int kBountyCommonArrFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetBountyListOneInfoRsp</name>
  	<Function>
  		<name>bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>bountycommonarr_size</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBountyListOneBountySingle& bountycommonarr(int index) const;
  inline ::pb::TBountyListOneBountySingle* mutable_bountycommonarr(int index);
  inline ::pb::TBountyListOneBountySingle* add_bountycommonarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >&
      bountycommonarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >*
      mutable_bountycommonarr();

  // repeated .pb.TBountyListOneBountySingle BountyAdvanceArr = 6;
  inline int bountyadvancearr_size() const;
  inline void clear_bountyadvancearr();
  static const int kBountyAdvanceArrFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetBountyListOneInfoRsp</name>
  	<Function>
  		<name>bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>bountyadvancearr_size</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBountyListOneBountySingle& bountyadvancearr(int index) const;
  inline ::pb::TBountyListOneBountySingle* mutable_bountyadvancearr(int index);
  inline ::pb::TBountyListOneBountySingle* add_bountyadvancearr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >&
      bountyadvancearr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >*
      mutable_bountyadvancearr();

  // @@protoc_insertion_point(class_scope:pb.TBountyListOneGetBountyListOneInfoRsp)
 private:
  inline void set_has_opentime();
  inline void clear_has_opentime();
  inline void set_has_totalscores();
  inline void clear_has_totalscores();
  inline void set_has_paytime();
  inline void clear_has_paytime();
  inline void set_has_passchaptertime();
  inline void clear_has_passchaptertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 opentime_;
  ::google::protobuf::uint64 paytime_;
  ::google::protobuf::uint64 passchaptertime_;
  ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle > bountycommonarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle > bountyadvancearr_;
  ::google::protobuf::uint32 totalscores_;
  friend void  protobuf_AddDesc_net_2fBountyListOne_2eproto();
  friend void protobuf_AssignDesc_net_2fBountyListOne_2eproto();
  friend void protobuf_ShutdownFile_net_2fBountyListOne_2eproto();

  void InitAsDefaultInstance();
  static TBountyListOneGetBountyListOneInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBountyListOneGetRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/BountyListOne.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBountyListOneGetRewardReq : public ::google::protobuf::Message {
 public:
  TBountyListOneGetRewardReq();
  virtual ~TBountyListOneGetRewardReq();

  TBountyListOneGetRewardReq(const TBountyListOneGetRewardReq& from);

  inline TBountyListOneGetRewardReq& operator=(const TBountyListOneGetRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBountyListOneGetRewardReq& default_instance();

  void Swap(TBountyListOneGetRewardReq* other);

  // implements Message ----------------------------------------------

  TBountyListOneGetRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBountyListOneGetRewardReq& from);
  void MergeFrom(const TBountyListOneGetRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetRewardReq</name>
  	<Function>
  		<name>level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_level</name>
  		<replaceName>Level</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional bool IsAdvance = 2;
  inline bool has_isadvance() const;
  inline void clear_isadvance();
  static const int kIsAdvanceFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetRewardReq</name>
  	<Function>
  		<name>isadvance</name>
  		<replaceName>IsAdvance</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_isadvance</name>
  		<replaceName>IsAdvance</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_isadvance</name>
  		<replaceName>IsAdvance</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool isadvance() const;
  inline void set_isadvance(bool value);

  // @@protoc_insertion_point(class_scope:pb.TBountyListOneGetRewardReq)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_isadvance();
  inline void clear_has_isadvance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  bool isadvance_;
  friend void  protobuf_AddDesc_net_2fBountyListOne_2eproto();
  friend void protobuf_AssignDesc_net_2fBountyListOne_2eproto();
  friend void protobuf_ShutdownFile_net_2fBountyListOne_2eproto();

  void InitAsDefaultInstance();
  static TBountyListOneGetRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBountyListOneGetRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/BountyListOne.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBountyListOneGetRewardRsp : public ::google::protobuf::Message {
 public:
  TBountyListOneGetRewardRsp();
  virtual ~TBountyListOneGetRewardRsp();

  TBountyListOneGetRewardRsp(const TBountyListOneGetRewardRsp& from);

  inline TBountyListOneGetRewardRsp& operator=(const TBountyListOneGetRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBountyListOneGetRewardRsp& default_instance();

  void Swap(TBountyListOneGetRewardRsp* other);

  // implements Message ----------------------------------------------

  TBountyListOneGetRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBountyListOneGetRewardRsp& from);
  void MergeFrom(const TBountyListOneGetRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 IsAdvance = 1;
  inline bool has_isadvance() const;
  inline void clear_isadvance();
  static const int kIsAdvanceFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetRewardRsp</name>
  	<Function>
  		<name>isadvance</name>
  		<replaceName>IsAdvance</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_isadvance</name>
  		<replaceName>IsAdvance</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_isadvance</name>
  		<replaceName>IsAdvance</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 isadvance() const;
  inline void set_isadvance(::google::protobuf::uint32 value);

  // optional .pb.TBountyListOneBountySingle BountyInfo = 2;
  inline bool has_bountyinfo() const;
  inline void clear_bountyinfo();
  static const int kBountyInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetRewardRsp</name>
  	<Function>
  		<name>bountyinfo</name>
  		<replaceName>BountyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_bountyinfo</name>
  		<replaceName>BountyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_bountyinfo</name>
  		<replaceName>BountyInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bountyinfo</name>
  		<replaceName>BountyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBountyListOneBountySingle& bountyinfo() const;
  inline ::pb::TBountyListOneBountySingle* mutable_bountyinfo();
  inline ::pb::TBountyListOneBountySingle* release_bountyinfo();
  inline void set_allocated_bountyinfo(::pb::TBountyListOneBountySingle* bountyinfo);

  // repeated .pb.TCommonReward RewardArr = 3;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetRewardRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarr(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarr(int index);
  inline ::pb::TCommonReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarr();

  // @@protoc_insertion_point(class_scope:pb.TBountyListOneGetRewardRsp)
 private:
  inline void set_has_isadvance();
  inline void clear_has_isadvance();
  inline void set_has_bountyinfo();
  inline void clear_has_bountyinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TBountyListOneBountySingle* bountyinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarr_;
  ::google::protobuf::uint32 isadvance_;
  friend void  protobuf_AddDesc_net_2fBountyListOne_2eproto();
  friend void protobuf_AssignDesc_net_2fBountyListOne_2eproto();
  friend void protobuf_ShutdownFile_net_2fBountyListOne_2eproto();

  void InitAsDefaultInstance();
  static TBountyListOneGetRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBountyListOneGetTotalRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/BountyListOne.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBountyListOneGetTotalRewardRsp : public ::google::protobuf::Message {
 public:
  TBountyListOneGetTotalRewardRsp();
  virtual ~TBountyListOneGetTotalRewardRsp();

  TBountyListOneGetTotalRewardRsp(const TBountyListOneGetTotalRewardRsp& from);

  inline TBountyListOneGetTotalRewardRsp& operator=(const TBountyListOneGetTotalRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBountyListOneGetTotalRewardRsp& default_instance();

  void Swap(TBountyListOneGetTotalRewardRsp* other);

  // implements Message ----------------------------------------------

  TBountyListOneGetTotalRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBountyListOneGetTotalRewardRsp& from);
  void MergeFrom(const TBountyListOneGetTotalRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TBountyListOneBountySingle BountyCommonArr = 1;
  inline int bountycommonarr_size() const;
  inline void clear_bountycommonarr();
  static const int kBountyCommonArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetTotalRewardRsp</name>
  	<Function>
  		<name>bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bountycommonarr</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>bountycommonarr_size</name>
  		<replaceName>BountyCommonArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBountyListOneBountySingle& bountycommonarr(int index) const;
  inline ::pb::TBountyListOneBountySingle* mutable_bountycommonarr(int index);
  inline ::pb::TBountyListOneBountySingle* add_bountycommonarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >&
      bountycommonarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >*
      mutable_bountycommonarr();

  // repeated .pb.TBountyListOneBountySingle BountyAdvanceArr = 2;
  inline int bountyadvancearr_size() const;
  inline void clear_bountyadvancearr();
  static const int kBountyAdvanceArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetTotalRewardRsp</name>
  	<Function>
  		<name>bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_bountyadvancearr</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>bountyadvancearr_size</name>
  		<replaceName>BountyAdvanceArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBountyListOneBountySingle& bountyadvancearr(int index) const;
  inline ::pb::TBountyListOneBountySingle* mutable_bountyadvancearr(int index);
  inline ::pb::TBountyListOneBountySingle* add_bountyadvancearr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >&
      bountyadvancearr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >*
      mutable_bountyadvancearr();

  // repeated .pb.TCommonReward RewardArr = 3;
  inline int rewardarr_size() const;
  inline void clear_rewardarr();
  static const int kRewardArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOneGetTotalRewardRsp</name>
  	<Function>
  		<name>rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardarr</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rewardarr_size</name>
  		<replaceName>RewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& rewardarr(int index) const;
  inline ::pb::TCommonReward* mutable_rewardarr(int index);
  inline ::pb::TCommonReward* add_rewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      rewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_rewardarr();

  // @@protoc_insertion_point(class_scope:pb.TBountyListOneGetTotalRewardRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle > bountycommonarr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle > bountyadvancearr_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > rewardarr_;
  friend void  protobuf_AddDesc_net_2fBountyListOne_2eproto();
  friend void protobuf_AssignDesc_net_2fBountyListOne_2eproto();
  friend void protobuf_ShutdownFile_net_2fBountyListOne_2eproto();

  void InitAsDefaultInstance();
  static TBountyListOneGetTotalRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TBountyListOnePush</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/BountyListOne.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TBountyListOnePush : public ::google::protobuf::Message {
 public:
  TBountyListOnePush();
  virtual ~TBountyListOnePush();

  TBountyListOnePush(const TBountyListOnePush& from);

  inline TBountyListOnePush& operator=(const TBountyListOnePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TBountyListOnePush& default_instance();

  void Swap(TBountyListOnePush* other);

  // implements Message ----------------------------------------------

  TBountyListOnePush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TBountyListOnePush& from);
  void MergeFrom(const TBountyListOnePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 PayTime = 1;
  inline bool has_paytime() const;
  inline void clear_paytime();
  static const int kPayTimeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOnePush</name>
  	<Function>
  		<name>paytime</name>
  		<replaceName>PayTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_paytime</name>
  		<replaceName>PayTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_paytime</name>
  		<replaceName>PayTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 paytime() const;
  inline void set_paytime(::google::protobuf::uint64 value);

  // optional uint64 PassChapterTime = 2;
  inline bool has_passchaptertime() const;
  inline void clear_passchaptertime();
  static const int kPassChapterTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOnePush</name>
  	<Function>
  		<name>passchaptertime</name>
  		<replaceName>PassChapterTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_passchaptertime</name>
  		<replaceName>PassChapterTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_passchaptertime</name>
  		<replaceName>PassChapterTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 passchaptertime() const;
  inline void set_passchaptertime(::google::protobuf::uint64 value);

  // optional uint32 TotalScores = 3;
  inline bool has_totalscores() const;
  inline void clear_totalscores();
  static const int kTotalScoresFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TBountyListOnePush</name>
  	<Function>
  		<name>totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_totalscores</name>
  		<replaceName>TotalScores</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 totalscores() const;
  inline void set_totalscores(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TBountyListOnePush)
 private:
  inline void set_has_paytime();
  inline void clear_has_paytime();
  inline void set_has_passchaptertime();
  inline void clear_has_passchaptertime();
  inline void set_has_totalscores();
  inline void clear_has_totalscores();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 paytime_;
  ::google::protobuf::uint64 passchaptertime_;
  ::google::protobuf::uint32 totalscores_;
  friend void  protobuf_AddDesc_net_2fBountyListOne_2eproto();
  friend void protobuf_AssignDesc_net_2fBountyListOne_2eproto();
  friend void protobuf_ShutdownFile_net_2fBountyListOne_2eproto();

  void InitAsDefaultInstance();
  static TBountyListOnePush* default_instance_;
};
// ===================================================================


// ===================================================================

// TBountyListOneBountySingle

// optional uint32 Level = 1;
inline bool TBountyListOneBountySingle::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBountyListOneBountySingle::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBountyListOneBountySingle::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBountyListOneBountySingle::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TBountyListOneBountySingle::level() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneBountySingle.Level)
  return level_;
}
inline void TBountyListOneBountySingle::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListOneBountySingle.Level)
}

// optional uint32 LevelId = 2;
inline bool TBountyListOneBountySingle::has_levelid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBountyListOneBountySingle::set_has_levelid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBountyListOneBountySingle::clear_has_levelid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBountyListOneBountySingle::clear_levelid() {
  levelid_ = 0u;
  clear_has_levelid();
}
inline ::google::protobuf::uint32 TBountyListOneBountySingle::levelid() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneBountySingle.LevelId)
  return levelid_;
}
inline void TBountyListOneBountySingle::set_levelid(::google::protobuf::uint32 value) {
  set_has_levelid();
  levelid_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListOneBountySingle.LevelId)
}

// optional uint64 ReceiveTime = 3;
inline bool TBountyListOneBountySingle::has_receivetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TBountyListOneBountySingle::set_has_receivetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TBountyListOneBountySingle::clear_has_receivetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TBountyListOneBountySingle::clear_receivetime() {
  receivetime_ = GOOGLE_ULONGLONG(0);
  clear_has_receivetime();
}
inline ::google::protobuf::uint64 TBountyListOneBountySingle::receivetime() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneBountySingle.ReceiveTime)
  return receivetime_;
}
inline void TBountyListOneBountySingle::set_receivetime(::google::protobuf::uint64 value) {
  set_has_receivetime();
  receivetime_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListOneBountySingle.ReceiveTime)
}

// -------------------------------------------------------------------

// TBountyListOneGetBountyListOneInfoRsp

// optional uint64 OpenTime = 1;
inline bool TBountyListOneGetBountyListOneInfoRsp::has_opentime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBountyListOneGetBountyListOneInfoRsp::set_has_opentime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBountyListOneGetBountyListOneInfoRsp::clear_has_opentime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBountyListOneGetBountyListOneInfoRsp::clear_opentime() {
  opentime_ = GOOGLE_ULONGLONG(0);
  clear_has_opentime();
}
inline ::google::protobuf::uint64 TBountyListOneGetBountyListOneInfoRsp::opentime() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetBountyListOneInfoRsp.OpenTime)
  return opentime_;
}
inline void TBountyListOneGetBountyListOneInfoRsp::set_opentime(::google::protobuf::uint64 value) {
  set_has_opentime();
  opentime_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListOneGetBountyListOneInfoRsp.OpenTime)
}

// optional uint32 TotalScores = 2;
inline bool TBountyListOneGetBountyListOneInfoRsp::has_totalscores() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBountyListOneGetBountyListOneInfoRsp::set_has_totalscores() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBountyListOneGetBountyListOneInfoRsp::clear_has_totalscores() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBountyListOneGetBountyListOneInfoRsp::clear_totalscores() {
  totalscores_ = 0u;
  clear_has_totalscores();
}
inline ::google::protobuf::uint32 TBountyListOneGetBountyListOneInfoRsp::totalscores() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetBountyListOneInfoRsp.TotalScores)
  return totalscores_;
}
inline void TBountyListOneGetBountyListOneInfoRsp::set_totalscores(::google::protobuf::uint32 value) {
  set_has_totalscores();
  totalscores_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListOneGetBountyListOneInfoRsp.TotalScores)
}

// optional uint64 PayTime = 3;
inline bool TBountyListOneGetBountyListOneInfoRsp::has_paytime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TBountyListOneGetBountyListOneInfoRsp::set_has_paytime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TBountyListOneGetBountyListOneInfoRsp::clear_has_paytime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TBountyListOneGetBountyListOneInfoRsp::clear_paytime() {
  paytime_ = GOOGLE_ULONGLONG(0);
  clear_has_paytime();
}
inline ::google::protobuf::uint64 TBountyListOneGetBountyListOneInfoRsp::paytime() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetBountyListOneInfoRsp.PayTime)
  return paytime_;
}
inline void TBountyListOneGetBountyListOneInfoRsp::set_paytime(::google::protobuf::uint64 value) {
  set_has_paytime();
  paytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListOneGetBountyListOneInfoRsp.PayTime)
}

// optional uint64 PassChapterTime = 4;
inline bool TBountyListOneGetBountyListOneInfoRsp::has_passchaptertime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TBountyListOneGetBountyListOneInfoRsp::set_has_passchaptertime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TBountyListOneGetBountyListOneInfoRsp::clear_has_passchaptertime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TBountyListOneGetBountyListOneInfoRsp::clear_passchaptertime() {
  passchaptertime_ = GOOGLE_ULONGLONG(0);
  clear_has_passchaptertime();
}
inline ::google::protobuf::uint64 TBountyListOneGetBountyListOneInfoRsp::passchaptertime() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetBountyListOneInfoRsp.PassChapterTime)
  return passchaptertime_;
}
inline void TBountyListOneGetBountyListOneInfoRsp::set_passchaptertime(::google::protobuf::uint64 value) {
  set_has_passchaptertime();
  passchaptertime_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListOneGetBountyListOneInfoRsp.PassChapterTime)
}

// repeated .pb.TBountyListOneBountySingle BountyCommonArr = 5;
inline int TBountyListOneGetBountyListOneInfoRsp::bountycommonarr_size() const {
  return bountycommonarr_.size();
}
inline void TBountyListOneGetBountyListOneInfoRsp::clear_bountycommonarr() {
  bountycommonarr_.Clear();
}
inline const ::pb::TBountyListOneBountySingle& TBountyListOneGetBountyListOneInfoRsp::bountycommonarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetBountyListOneInfoRsp.BountyCommonArr)
  return bountycommonarr_.Get(index);
}
inline ::pb::TBountyListOneBountySingle* TBountyListOneGetBountyListOneInfoRsp::mutable_bountycommonarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBountyListOneGetBountyListOneInfoRsp.BountyCommonArr)
  return bountycommonarr_.Mutable(index);
}
inline ::pb::TBountyListOneBountySingle* TBountyListOneGetBountyListOneInfoRsp::add_bountycommonarr() {
  // @@protoc_insertion_point(field_add:pb.TBountyListOneGetBountyListOneInfoRsp.BountyCommonArr)
  return bountycommonarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >&
TBountyListOneGetBountyListOneInfoRsp::bountycommonarr() const {
  // @@protoc_insertion_point(field_list:pb.TBountyListOneGetBountyListOneInfoRsp.BountyCommonArr)
  return bountycommonarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >*
TBountyListOneGetBountyListOneInfoRsp::mutable_bountycommonarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBountyListOneGetBountyListOneInfoRsp.BountyCommonArr)
  return &bountycommonarr_;
}

// repeated .pb.TBountyListOneBountySingle BountyAdvanceArr = 6;
inline int TBountyListOneGetBountyListOneInfoRsp::bountyadvancearr_size() const {
  return bountyadvancearr_.size();
}
inline void TBountyListOneGetBountyListOneInfoRsp::clear_bountyadvancearr() {
  bountyadvancearr_.Clear();
}
inline const ::pb::TBountyListOneBountySingle& TBountyListOneGetBountyListOneInfoRsp::bountyadvancearr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetBountyListOneInfoRsp.BountyAdvanceArr)
  return bountyadvancearr_.Get(index);
}
inline ::pb::TBountyListOneBountySingle* TBountyListOneGetBountyListOneInfoRsp::mutable_bountyadvancearr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBountyListOneGetBountyListOneInfoRsp.BountyAdvanceArr)
  return bountyadvancearr_.Mutable(index);
}
inline ::pb::TBountyListOneBountySingle* TBountyListOneGetBountyListOneInfoRsp::add_bountyadvancearr() {
  // @@protoc_insertion_point(field_add:pb.TBountyListOneGetBountyListOneInfoRsp.BountyAdvanceArr)
  return bountyadvancearr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >&
TBountyListOneGetBountyListOneInfoRsp::bountyadvancearr() const {
  // @@protoc_insertion_point(field_list:pb.TBountyListOneGetBountyListOneInfoRsp.BountyAdvanceArr)
  return bountyadvancearr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >*
TBountyListOneGetBountyListOneInfoRsp::mutable_bountyadvancearr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBountyListOneGetBountyListOneInfoRsp.BountyAdvanceArr)
  return &bountyadvancearr_;
}

// -------------------------------------------------------------------

// TBountyListOneGetRewardReq

// optional uint32 Level = 1;
inline bool TBountyListOneGetRewardReq::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBountyListOneGetRewardReq::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBountyListOneGetRewardReq::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBountyListOneGetRewardReq::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TBountyListOneGetRewardReq::level() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetRewardReq.Level)
  return level_;
}
inline void TBountyListOneGetRewardReq::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListOneGetRewardReq.Level)
}

// optional bool IsAdvance = 2;
inline bool TBountyListOneGetRewardReq::has_isadvance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBountyListOneGetRewardReq::set_has_isadvance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBountyListOneGetRewardReq::clear_has_isadvance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBountyListOneGetRewardReq::clear_isadvance() {
  isadvance_ = false;
  clear_has_isadvance();
}
inline bool TBountyListOneGetRewardReq::isadvance() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetRewardReq.IsAdvance)
  return isadvance_;
}
inline void TBountyListOneGetRewardReq::set_isadvance(bool value) {
  set_has_isadvance();
  isadvance_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListOneGetRewardReq.IsAdvance)
}

// -------------------------------------------------------------------

// TBountyListOneGetRewardRsp

// optional uint32 IsAdvance = 1;
inline bool TBountyListOneGetRewardRsp::has_isadvance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBountyListOneGetRewardRsp::set_has_isadvance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBountyListOneGetRewardRsp::clear_has_isadvance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBountyListOneGetRewardRsp::clear_isadvance() {
  isadvance_ = 0u;
  clear_has_isadvance();
}
inline ::google::protobuf::uint32 TBountyListOneGetRewardRsp::isadvance() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetRewardRsp.IsAdvance)
  return isadvance_;
}
inline void TBountyListOneGetRewardRsp::set_isadvance(::google::protobuf::uint32 value) {
  set_has_isadvance();
  isadvance_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListOneGetRewardRsp.IsAdvance)
}

// optional .pb.TBountyListOneBountySingle BountyInfo = 2;
inline bool TBountyListOneGetRewardRsp::has_bountyinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBountyListOneGetRewardRsp::set_has_bountyinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBountyListOneGetRewardRsp::clear_has_bountyinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBountyListOneGetRewardRsp::clear_bountyinfo() {
  if (bountyinfo_ != NULL) bountyinfo_->::pb::TBountyListOneBountySingle::Clear();
  clear_has_bountyinfo();
}
inline const ::pb::TBountyListOneBountySingle& TBountyListOneGetRewardRsp::bountyinfo() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetRewardRsp.BountyInfo)
  return bountyinfo_ != NULL ? *bountyinfo_ : *default_instance_->bountyinfo_;
}
inline ::pb::TBountyListOneBountySingle* TBountyListOneGetRewardRsp::mutable_bountyinfo() {
  set_has_bountyinfo();
  if (bountyinfo_ == NULL) bountyinfo_ = new ::pb::TBountyListOneBountySingle;
  // @@protoc_insertion_point(field_mutable:pb.TBountyListOneGetRewardRsp.BountyInfo)
  return bountyinfo_;
}
inline ::pb::TBountyListOneBountySingle* TBountyListOneGetRewardRsp::release_bountyinfo() {
  clear_has_bountyinfo();
  ::pb::TBountyListOneBountySingle* temp = bountyinfo_;
  bountyinfo_ = NULL;
  return temp;
}
inline void TBountyListOneGetRewardRsp::set_allocated_bountyinfo(::pb::TBountyListOneBountySingle* bountyinfo) {
  delete bountyinfo_;
  bountyinfo_ = bountyinfo;
  if (bountyinfo) {
    set_has_bountyinfo();
  } else {
    clear_has_bountyinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TBountyListOneGetRewardRsp.BountyInfo)
}

// repeated .pb.TCommonReward RewardArr = 3;
inline int TBountyListOneGetRewardRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TBountyListOneGetRewardRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TCommonReward& TBountyListOneGetRewardRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetRewardRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TCommonReward* TBountyListOneGetRewardRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBountyListOneGetRewardRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TCommonReward* TBountyListOneGetRewardRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TBountyListOneGetRewardRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TBountyListOneGetRewardRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TBountyListOneGetRewardRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TBountyListOneGetRewardRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBountyListOneGetRewardRsp.RewardArr)
  return &rewardarr_;
}

// -------------------------------------------------------------------

// TBountyListOneGetTotalRewardRsp

// repeated .pb.TBountyListOneBountySingle BountyCommonArr = 1;
inline int TBountyListOneGetTotalRewardRsp::bountycommonarr_size() const {
  return bountycommonarr_.size();
}
inline void TBountyListOneGetTotalRewardRsp::clear_bountycommonarr() {
  bountycommonarr_.Clear();
}
inline const ::pb::TBountyListOneBountySingle& TBountyListOneGetTotalRewardRsp::bountycommonarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetTotalRewardRsp.BountyCommonArr)
  return bountycommonarr_.Get(index);
}
inline ::pb::TBountyListOneBountySingle* TBountyListOneGetTotalRewardRsp::mutable_bountycommonarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBountyListOneGetTotalRewardRsp.BountyCommonArr)
  return bountycommonarr_.Mutable(index);
}
inline ::pb::TBountyListOneBountySingle* TBountyListOneGetTotalRewardRsp::add_bountycommonarr() {
  // @@protoc_insertion_point(field_add:pb.TBountyListOneGetTotalRewardRsp.BountyCommonArr)
  return bountycommonarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >&
TBountyListOneGetTotalRewardRsp::bountycommonarr() const {
  // @@protoc_insertion_point(field_list:pb.TBountyListOneGetTotalRewardRsp.BountyCommonArr)
  return bountycommonarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >*
TBountyListOneGetTotalRewardRsp::mutable_bountycommonarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBountyListOneGetTotalRewardRsp.BountyCommonArr)
  return &bountycommonarr_;
}

// repeated .pb.TBountyListOneBountySingle BountyAdvanceArr = 2;
inline int TBountyListOneGetTotalRewardRsp::bountyadvancearr_size() const {
  return bountyadvancearr_.size();
}
inline void TBountyListOneGetTotalRewardRsp::clear_bountyadvancearr() {
  bountyadvancearr_.Clear();
}
inline const ::pb::TBountyListOneBountySingle& TBountyListOneGetTotalRewardRsp::bountyadvancearr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetTotalRewardRsp.BountyAdvanceArr)
  return bountyadvancearr_.Get(index);
}
inline ::pb::TBountyListOneBountySingle* TBountyListOneGetTotalRewardRsp::mutable_bountyadvancearr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBountyListOneGetTotalRewardRsp.BountyAdvanceArr)
  return bountyadvancearr_.Mutable(index);
}
inline ::pb::TBountyListOneBountySingle* TBountyListOneGetTotalRewardRsp::add_bountyadvancearr() {
  // @@protoc_insertion_point(field_add:pb.TBountyListOneGetTotalRewardRsp.BountyAdvanceArr)
  return bountyadvancearr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >&
TBountyListOneGetTotalRewardRsp::bountyadvancearr() const {
  // @@protoc_insertion_point(field_list:pb.TBountyListOneGetTotalRewardRsp.BountyAdvanceArr)
  return bountyadvancearr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TBountyListOneBountySingle >*
TBountyListOneGetTotalRewardRsp::mutable_bountyadvancearr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBountyListOneGetTotalRewardRsp.BountyAdvanceArr)
  return &bountyadvancearr_;
}

// repeated .pb.TCommonReward RewardArr = 3;
inline int TBountyListOneGetTotalRewardRsp::rewardarr_size() const {
  return rewardarr_.size();
}
inline void TBountyListOneGetTotalRewardRsp::clear_rewardarr() {
  rewardarr_.Clear();
}
inline const ::pb::TCommonReward& TBountyListOneGetTotalRewardRsp::rewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOneGetTotalRewardRsp.RewardArr)
  return rewardarr_.Get(index);
}
inline ::pb::TCommonReward* TBountyListOneGetTotalRewardRsp::mutable_rewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TBountyListOneGetTotalRewardRsp.RewardArr)
  return rewardarr_.Mutable(index);
}
inline ::pb::TCommonReward* TBountyListOneGetTotalRewardRsp::add_rewardarr() {
  // @@protoc_insertion_point(field_add:pb.TBountyListOneGetTotalRewardRsp.RewardArr)
  return rewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TBountyListOneGetTotalRewardRsp::rewardarr() const {
  // @@protoc_insertion_point(field_list:pb.TBountyListOneGetTotalRewardRsp.RewardArr)
  return rewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TBountyListOneGetTotalRewardRsp::mutable_rewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TBountyListOneGetTotalRewardRsp.RewardArr)
  return &rewardarr_;
}

// -------------------------------------------------------------------

// TBountyListOnePush

// optional uint64 PayTime = 1;
inline bool TBountyListOnePush::has_paytime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TBountyListOnePush::set_has_paytime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TBountyListOnePush::clear_has_paytime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TBountyListOnePush::clear_paytime() {
  paytime_ = GOOGLE_ULONGLONG(0);
  clear_has_paytime();
}
inline ::google::protobuf::uint64 TBountyListOnePush::paytime() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOnePush.PayTime)
  return paytime_;
}
inline void TBountyListOnePush::set_paytime(::google::protobuf::uint64 value) {
  set_has_paytime();
  paytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListOnePush.PayTime)
}

// optional uint64 PassChapterTime = 2;
inline bool TBountyListOnePush::has_passchaptertime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TBountyListOnePush::set_has_passchaptertime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TBountyListOnePush::clear_has_passchaptertime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TBountyListOnePush::clear_passchaptertime() {
  passchaptertime_ = GOOGLE_ULONGLONG(0);
  clear_has_passchaptertime();
}
inline ::google::protobuf::uint64 TBountyListOnePush::passchaptertime() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOnePush.PassChapterTime)
  return passchaptertime_;
}
inline void TBountyListOnePush::set_passchaptertime(::google::protobuf::uint64 value) {
  set_has_passchaptertime();
  passchaptertime_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListOnePush.PassChapterTime)
}

// optional uint32 TotalScores = 3;
inline bool TBountyListOnePush::has_totalscores() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TBountyListOnePush::set_has_totalscores() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TBountyListOnePush::clear_has_totalscores() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TBountyListOnePush::clear_totalscores() {
  totalscores_ = 0u;
  clear_has_totalscores();
}
inline ::google::protobuf::uint32 TBountyListOnePush::totalscores() const {
  // @@protoc_insertion_point(field_get:pb.TBountyListOnePush.TotalScores)
  return totalscores_;
}
inline void TBountyListOnePush::set_totalscores(::google::protobuf::uint32 value) {
  set_has_totalscores();
  totalscores_ = value;
  // @@protoc_insertion_point(field_set:pb.TBountyListOnePush.TotalScores)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fBountyListOne_2eproto__INCLUDED
