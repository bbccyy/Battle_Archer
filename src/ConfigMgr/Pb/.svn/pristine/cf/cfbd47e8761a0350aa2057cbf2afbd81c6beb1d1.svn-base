// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/TowerDefenseNew.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/TowerDefenseNew.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TTowerDefenseNewRewardInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewRewardInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewExchangeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewExchangeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewBuffInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewBuffInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewWaveDropInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewWaveDropInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewMapSimpleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewMapSimpleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewMapDetailInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewMapDetailInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewMapTypeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewMapTypeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewGetSimpleInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewGetSimpleInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewGetInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewGetInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewSetPlotEndReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewSetPlotEndReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewSetFormationReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewSetFormationReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewDoBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewDoBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewDoBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewDoBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewReportBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewReportBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewReportBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewReportBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewEndBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewEndBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewEndBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewEndBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewReceiveAchievementRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewReceiveAchievementRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewReceiveAchievementRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewReceiveAchievementRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewReceiveAllAchievementRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewReceiveAllAchievementRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewReceiveAllAchievementRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewReceiveAllAchievementRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewSweepMapReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewSweepMapReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewSweepMapRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewSweepMapRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewActExchangeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewActExchangeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TTowerDefenseNewActExchangeRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TTowerDefenseNewActExchangeRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fTowerDefenseNew_2eproto() {
  protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/TowerDefenseNew.proto");
  GOOGLE_CHECK(file != NULL);
  TTowerDefenseNewRewardInfo_descriptor_ = file->message_type(0);
  static const int TTowerDefenseNewRewardInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewRewardInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewRewardInfo, rewardtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewRewardInfo, fightforce_),
  };
  TTowerDefenseNewRewardInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewRewardInfo_descriptor_,
      TTowerDefenseNewRewardInfo::default_instance_,
      TTowerDefenseNewRewardInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewRewardInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewRewardInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewRewardInfo));
  TTowerDefenseNewExchangeInfo_descriptor_ = file->message_type(1);
  static const int TTowerDefenseNewExchangeInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewExchangeInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewExchangeInfo, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewExchangeInfo, exchangetime_),
  };
  TTowerDefenseNewExchangeInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewExchangeInfo_descriptor_,
      TTowerDefenseNewExchangeInfo::default_instance_,
      TTowerDefenseNewExchangeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewExchangeInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewExchangeInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewExchangeInfo));
  TTowerDefenseNewBuffInfo_descriptor_ = file->message_type(2);
  static const int TTowerDefenseNewBuffInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewBuffInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewBuffInfo, buffconfid_),
  };
  TTowerDefenseNewBuffInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewBuffInfo_descriptor_,
      TTowerDefenseNewBuffInfo::default_instance_,
      TTowerDefenseNewBuffInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewBuffInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewBuffInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewBuffInfo));
  TTowerDefenseNewWaveDropInfo_descriptor_ = file->message_type(3);
  static const int TTowerDefenseNewWaveDropInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewWaveDropInfo, wavenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewWaveDropInfo, droparray_),
  };
  TTowerDefenseNewWaveDropInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewWaveDropInfo_descriptor_,
      TTowerDefenseNewWaveDropInfo::default_instance_,
      TTowerDefenseNewWaveDropInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewWaveDropInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewWaveDropInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewWaveDropInfo));
  TTowerDefenseNewMapSimpleInfo_descriptor_ = file->message_type(4);
  static const int TTowerDefenseNewMapSimpleInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapSimpleInfo, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapSimpleInfo, curroundnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapSimpleInfo, maxwavenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapSimpleInfo, beginfightforce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapSimpleInfo, arrachievementinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapSimpleInfo, achievementwavenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapSimpleInfo, plotendtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapSimpleInfo, firstfinishtime_),
  };
  TTowerDefenseNewMapSimpleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewMapSimpleInfo_descriptor_,
      TTowerDefenseNewMapSimpleInfo::default_instance_,
      TTowerDefenseNewMapSimpleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapSimpleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapSimpleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewMapSimpleInfo));
  TTowerDefenseNewMapDetailInfo_descriptor_ = file->message_type(5);
  static const int TTowerDefenseNewMapDetailInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapDetailInfo, simpleinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapDetailInfo, arrformation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapDetailInfo, curbattleargsdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapDetailInfo, arrbuffinfo_),
  };
  TTowerDefenseNewMapDetailInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewMapDetailInfo_descriptor_,
      TTowerDefenseNewMapDetailInfo::default_instance_,
      TTowerDefenseNewMapDetailInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapDetailInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapDetailInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewMapDetailInfo));
  TTowerDefenseNewMapTypeInfo_descriptor_ = file->message_type(6);
  static const int TTowerDefenseNewMapTypeInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapTypeInfo, maptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapTypeInfo, challengenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapTypeInfo, incchallengenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapTypeInfo, refreshtime_),
  };
  TTowerDefenseNewMapTypeInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewMapTypeInfo_descriptor_,
      TTowerDefenseNewMapTypeInfo::default_instance_,
      TTowerDefenseNewMapTypeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapTypeInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewMapTypeInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewMapTypeInfo));
  TTowerDefenseNewGetSimpleInfoRsp_descriptor_ = file->message_type(7);
  static const int TTowerDefenseNewGetSimpleInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewGetSimpleInfoRsp, arrsimpleinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewGetSimpleInfoRsp, arrtypeinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewGetSimpleInfoRsp, arractexchangeinfo_),
  };
  TTowerDefenseNewGetSimpleInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewGetSimpleInfoRsp_descriptor_,
      TTowerDefenseNewGetSimpleInfoRsp::default_instance_,
      TTowerDefenseNewGetSimpleInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewGetSimpleInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewGetSimpleInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewGetSimpleInfoRsp));
  TTowerDefenseNewGetInfoReq_descriptor_ = file->message_type(8);
  static const int TTowerDefenseNewGetInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewGetInfoReq, mapid_),
  };
  TTowerDefenseNewGetInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewGetInfoReq_descriptor_,
      TTowerDefenseNewGetInfoReq::default_instance_,
      TTowerDefenseNewGetInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewGetInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewGetInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewGetInfoReq));
  TTowerDefenseNewGetInfoRsp_descriptor_ = file->message_type(9);
  static const int TTowerDefenseNewGetInfoRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewGetInfoRsp, detailinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewGetInfoRsp, typeinfo_),
  };
  TTowerDefenseNewGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewGetInfoRsp_descriptor_,
      TTowerDefenseNewGetInfoRsp::default_instance_,
      TTowerDefenseNewGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewGetInfoRsp));
  TTowerDefenseNewSetPlotEndReq_descriptor_ = file->message_type(10);
  static const int TTowerDefenseNewSetPlotEndReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewSetPlotEndReq, mapid_),
  };
  TTowerDefenseNewSetPlotEndReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewSetPlotEndReq_descriptor_,
      TTowerDefenseNewSetPlotEndReq::default_instance_,
      TTowerDefenseNewSetPlotEndReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewSetPlotEndReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewSetPlotEndReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewSetPlotEndReq));
  TTowerDefenseNewSetFormationReq_descriptor_ = file->message_type(11);
  static const int TTowerDefenseNewSetFormationReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewSetFormationReq, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewSetFormationReq, arrformation_),
  };
  TTowerDefenseNewSetFormationReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewSetFormationReq_descriptor_,
      TTowerDefenseNewSetFormationReq::default_instance_,
      TTowerDefenseNewSetFormationReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewSetFormationReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewSetFormationReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewSetFormationReq));
  TTowerDefenseNewDoBattleReq_descriptor_ = file->message_type(12);
  static const int TTowerDefenseNewDoBattleReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewDoBattleReq, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewDoBattleReq, battlecheckparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewDoBattleReq, roundnum_),
  };
  TTowerDefenseNewDoBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewDoBattleReq_descriptor_,
      TTowerDefenseNewDoBattleReq::default_instance_,
      TTowerDefenseNewDoBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewDoBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewDoBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewDoBattleReq));
  TTowerDefenseNewDoBattleRsp_descriptor_ = file->message_type(13);
  static const int TTowerDefenseNewDoBattleRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewDoBattleRsp, wavesdroparray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewDoBattleRsp, battleargsdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewDoBattleRsp, roundnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewDoBattleRsp, battleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewDoBattleRsp, arrbuffinfo_),
  };
  TTowerDefenseNewDoBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewDoBattleRsp_descriptor_,
      TTowerDefenseNewDoBattleRsp::default_instance_,
      TTowerDefenseNewDoBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewDoBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewDoBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewDoBattleRsp));
  TTowerDefenseNewReportBattleReq_descriptor_ = file->message_type(14);
  static const int TTowerDefenseNewReportBattleReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReportBattleReq, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReportBattleReq, battleresultbytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReportBattleReq, roundnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReportBattleReq, battleid_),
  };
  TTowerDefenseNewReportBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewReportBattleReq_descriptor_,
      TTowerDefenseNewReportBattleReq::default_instance_,
      TTowerDefenseNewReportBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReportBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReportBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewReportBattleReq));
  TTowerDefenseNewReportBattleRsp_descriptor_ = file->message_type(15);
  static const int TTowerDefenseNewReportBattleRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReportBattleRsp, droparray_),
  };
  TTowerDefenseNewReportBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewReportBattleRsp_descriptor_,
      TTowerDefenseNewReportBattleRsp::default_instance_,
      TTowerDefenseNewReportBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReportBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReportBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewReportBattleRsp));
  TTowerDefenseNewEndBattleReq_descriptor_ = file->message_type(16);
  static const int TTowerDefenseNewEndBattleReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewEndBattleReq, mapid_),
  };
  TTowerDefenseNewEndBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewEndBattleReq_descriptor_,
      TTowerDefenseNewEndBattleReq::default_instance_,
      TTowerDefenseNewEndBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewEndBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewEndBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewEndBattleReq));
  TTowerDefenseNewEndBattleRsp_descriptor_ = file->message_type(17);
  static const int TTowerDefenseNewEndBattleRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewEndBattleRsp, droparray_),
  };
  TTowerDefenseNewEndBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewEndBattleRsp_descriptor_,
      TTowerDefenseNewEndBattleRsp::default_instance_,
      TTowerDefenseNewEndBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewEndBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewEndBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewEndBattleRsp));
  TTowerDefenseNewReceiveAchievementRewardReq_descriptor_ = file->message_type(18);
  static const int TTowerDefenseNewReceiveAchievementRewardReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReceiveAchievementRewardReq, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReceiveAchievementRewardReq, id_),
  };
  TTowerDefenseNewReceiveAchievementRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewReceiveAchievementRewardReq_descriptor_,
      TTowerDefenseNewReceiveAchievementRewardReq::default_instance_,
      TTowerDefenseNewReceiveAchievementRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReceiveAchievementRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReceiveAchievementRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewReceiveAchievementRewardReq));
  TTowerDefenseNewReceiveAchievementRewardRsp_descriptor_ = file->message_type(19);
  static const int TTowerDefenseNewReceiveAchievementRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReceiveAchievementRewardRsp, droparray_),
  };
  TTowerDefenseNewReceiveAchievementRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewReceiveAchievementRewardRsp_descriptor_,
      TTowerDefenseNewReceiveAchievementRewardRsp::default_instance_,
      TTowerDefenseNewReceiveAchievementRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReceiveAchievementRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReceiveAchievementRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewReceiveAchievementRewardRsp));
  TTowerDefenseNewReceiveAllAchievementRewardReq_descriptor_ = file->message_type(20);
  static const int TTowerDefenseNewReceiveAllAchievementRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReceiveAllAchievementRewardReq, mapid_),
  };
  TTowerDefenseNewReceiveAllAchievementRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewReceiveAllAchievementRewardReq_descriptor_,
      TTowerDefenseNewReceiveAllAchievementRewardReq::default_instance_,
      TTowerDefenseNewReceiveAllAchievementRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReceiveAllAchievementRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReceiveAllAchievementRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewReceiveAllAchievementRewardReq));
  TTowerDefenseNewReceiveAllAchievementRewardRsp_descriptor_ = file->message_type(21);
  static const int TTowerDefenseNewReceiveAllAchievementRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReceiveAllAchievementRewardRsp, droparray_),
  };
  TTowerDefenseNewReceiveAllAchievementRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewReceiveAllAchievementRewardRsp_descriptor_,
      TTowerDefenseNewReceiveAllAchievementRewardRsp::default_instance_,
      TTowerDefenseNewReceiveAllAchievementRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReceiveAllAchievementRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewReceiveAllAchievementRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewReceiveAllAchievementRewardRsp));
  TTowerDefenseNewSweepMapReq_descriptor_ = file->message_type(22);
  static const int TTowerDefenseNewSweepMapReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewSweepMapReq, mapid_),
  };
  TTowerDefenseNewSweepMapReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewSweepMapReq_descriptor_,
      TTowerDefenseNewSweepMapReq::default_instance_,
      TTowerDefenseNewSweepMapReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewSweepMapReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewSweepMapReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewSweepMapReq));
  TTowerDefenseNewSweepMapRsp_descriptor_ = file->message_type(23);
  static const int TTowerDefenseNewSweepMapRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewSweepMapRsp, droparray_),
  };
  TTowerDefenseNewSweepMapRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewSweepMapRsp_descriptor_,
      TTowerDefenseNewSweepMapRsp::default_instance_,
      TTowerDefenseNewSweepMapRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewSweepMapRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewSweepMapRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewSweepMapRsp));
  TTowerDefenseNewActExchangeReq_descriptor_ = file->message_type(24);
  static const int TTowerDefenseNewActExchangeReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewActExchangeReq, exchangeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewActExchangeReq, num_),
  };
  TTowerDefenseNewActExchangeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewActExchangeReq_descriptor_,
      TTowerDefenseNewActExchangeReq::default_instance_,
      TTowerDefenseNewActExchangeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewActExchangeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewActExchangeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewActExchangeReq));
  TTowerDefenseNewActExchangeRsp_descriptor_ = file->message_type(25);
  static const int TTowerDefenseNewActExchangeRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewActExchangeRsp, arrreward_),
  };
  TTowerDefenseNewActExchangeRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TTowerDefenseNewActExchangeRsp_descriptor_,
      TTowerDefenseNewActExchangeRsp::default_instance_,
      TTowerDefenseNewActExchangeRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewActExchangeRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TTowerDefenseNewActExchangeRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TTowerDefenseNewActExchangeRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fTowerDefenseNew_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewRewardInfo_descriptor_, &TTowerDefenseNewRewardInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewExchangeInfo_descriptor_, &TTowerDefenseNewExchangeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewBuffInfo_descriptor_, &TTowerDefenseNewBuffInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewWaveDropInfo_descriptor_, &TTowerDefenseNewWaveDropInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewMapSimpleInfo_descriptor_, &TTowerDefenseNewMapSimpleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewMapDetailInfo_descriptor_, &TTowerDefenseNewMapDetailInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewMapTypeInfo_descriptor_, &TTowerDefenseNewMapTypeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewGetSimpleInfoRsp_descriptor_, &TTowerDefenseNewGetSimpleInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewGetInfoReq_descriptor_, &TTowerDefenseNewGetInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewGetInfoRsp_descriptor_, &TTowerDefenseNewGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewSetPlotEndReq_descriptor_, &TTowerDefenseNewSetPlotEndReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewSetFormationReq_descriptor_, &TTowerDefenseNewSetFormationReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewDoBattleReq_descriptor_, &TTowerDefenseNewDoBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewDoBattleRsp_descriptor_, &TTowerDefenseNewDoBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewReportBattleReq_descriptor_, &TTowerDefenseNewReportBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewReportBattleRsp_descriptor_, &TTowerDefenseNewReportBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewEndBattleReq_descriptor_, &TTowerDefenseNewEndBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewEndBattleRsp_descriptor_, &TTowerDefenseNewEndBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewReceiveAchievementRewardReq_descriptor_, &TTowerDefenseNewReceiveAchievementRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewReceiveAchievementRewardRsp_descriptor_, &TTowerDefenseNewReceiveAchievementRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewReceiveAllAchievementRewardReq_descriptor_, &TTowerDefenseNewReceiveAllAchievementRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewReceiveAllAchievementRewardRsp_descriptor_, &TTowerDefenseNewReceiveAllAchievementRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewSweepMapReq_descriptor_, &TTowerDefenseNewSweepMapReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewSweepMapRsp_descriptor_, &TTowerDefenseNewSweepMapRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewActExchangeReq_descriptor_, &TTowerDefenseNewActExchangeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TTowerDefenseNewActExchangeRsp_descriptor_, &TTowerDefenseNewActExchangeRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fTowerDefenseNew_2eproto() {
  delete TTowerDefenseNewRewardInfo::default_instance_;
  delete TTowerDefenseNewRewardInfo_reflection_;
  delete TTowerDefenseNewExchangeInfo::default_instance_;
  delete TTowerDefenseNewExchangeInfo_reflection_;
  delete TTowerDefenseNewBuffInfo::default_instance_;
  delete TTowerDefenseNewBuffInfo_reflection_;
  delete TTowerDefenseNewWaveDropInfo::default_instance_;
  delete TTowerDefenseNewWaveDropInfo_reflection_;
  delete TTowerDefenseNewMapSimpleInfo::default_instance_;
  delete TTowerDefenseNewMapSimpleInfo_reflection_;
  delete TTowerDefenseNewMapDetailInfo::default_instance_;
  delete TTowerDefenseNewMapDetailInfo_reflection_;
  delete TTowerDefenseNewMapTypeInfo::default_instance_;
  delete TTowerDefenseNewMapTypeInfo_reflection_;
  delete TTowerDefenseNewGetSimpleInfoRsp::default_instance_;
  delete TTowerDefenseNewGetSimpleInfoRsp_reflection_;
  delete TTowerDefenseNewGetInfoReq::default_instance_;
  delete TTowerDefenseNewGetInfoReq_reflection_;
  delete TTowerDefenseNewGetInfoRsp::default_instance_;
  delete TTowerDefenseNewGetInfoRsp_reflection_;
  delete TTowerDefenseNewSetPlotEndReq::default_instance_;
  delete TTowerDefenseNewSetPlotEndReq_reflection_;
  delete TTowerDefenseNewSetFormationReq::default_instance_;
  delete TTowerDefenseNewSetFormationReq_reflection_;
  delete TTowerDefenseNewDoBattleReq::default_instance_;
  delete TTowerDefenseNewDoBattleReq_reflection_;
  delete TTowerDefenseNewDoBattleRsp::default_instance_;
  delete TTowerDefenseNewDoBattleRsp_reflection_;
  delete TTowerDefenseNewReportBattleReq::default_instance_;
  delete TTowerDefenseNewReportBattleReq_reflection_;
  delete TTowerDefenseNewReportBattleRsp::default_instance_;
  delete TTowerDefenseNewReportBattleRsp_reflection_;
  delete TTowerDefenseNewEndBattleReq::default_instance_;
  delete TTowerDefenseNewEndBattleReq_reflection_;
  delete TTowerDefenseNewEndBattleRsp::default_instance_;
  delete TTowerDefenseNewEndBattleRsp_reflection_;
  delete TTowerDefenseNewReceiveAchievementRewardReq::default_instance_;
  delete TTowerDefenseNewReceiveAchievementRewardReq_reflection_;
  delete TTowerDefenseNewReceiveAchievementRewardRsp::default_instance_;
  delete TTowerDefenseNewReceiveAchievementRewardRsp_reflection_;
  delete TTowerDefenseNewReceiveAllAchievementRewardReq::default_instance_;
  delete TTowerDefenseNewReceiveAllAchievementRewardReq_reflection_;
  delete TTowerDefenseNewReceiveAllAchievementRewardRsp::default_instance_;
  delete TTowerDefenseNewReceiveAllAchievementRewardRsp_reflection_;
  delete TTowerDefenseNewSweepMapReq::default_instance_;
  delete TTowerDefenseNewSweepMapReq_reflection_;
  delete TTowerDefenseNewSweepMapRsp::default_instance_;
  delete TTowerDefenseNewSweepMapRsp_reflection_;
  delete TTowerDefenseNewActExchangeReq::default_instance_;
  delete TTowerDefenseNewActExchangeReq_reflection_;
  delete TTowerDefenseNewActExchangeRsp::default_instance_;
  delete TTowerDefenseNewActExchangeRsp_reflection_;
}

void protobuf_AddDesc_net_2fTowerDefenseNew_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fBattle_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031net/TowerDefenseNew.proto\022\002pb\032\020net/Bat"
    "tle.proto\032\026net/CommonReward.proto\"P\n\032TTo"
    "werDefenseNewRewardInfo\022\n\n\002Id\030\001 \001(\r\022\022\n\nR"
    "ewardTime\030\002 \001(\004\022\022\n\nFightForce\030\003 \001(\004\"M\n\034T"
    "TowerDefenseNewExchangeInfo\022\n\n\002Id\030\001 \001(\r\022"
    "\013\n\003Num\030\002 \001(\r\022\024\n\014ExchangeTime\030\003 \001(\004\";\n\030TT"
    "owerDefenseNewBuffInfo\022\013\n\003Pos\030\001 \001(\r\022\022\n\nB"
    "uffConfId\030\002 \001(\r\"U\n\034TTowerDefenseNewWaveD"
    "ropInfo\022\017\n\007WaveNum\030\001 \001(\r\022$\n\tDropArray\030\002 "
    "\003(\0132\021.pb.TCommonReward\"\366\001\n\035TTowerDefense"
    "NewMapSimpleInfo\022\r\n\005MapId\030\001 \001(\r\022\023\n\013CurRo"
    "undNum\030\002 \001(\r\022\022\n\nMaxWaveNum\030\003 \001(\r\022\027\n\017Begi"
    "nFightForce\030\004 \001(\004\022:\n\022ArrAchievementInfo\030"
    "\005 \003(\0132\036.pb.TTowerDefenseNewRewardInfo\022\032\n"
    "\022AchievementWaveNum\030\006 \001(\r\022\023\n\013PlotEndTime"
    "\030\007 \001(\004\022\027\n\017FirstFinishTime\030\010 \001(\004\"\316\001\n\035TTow"
    "erDefenseNewMapDetailInfo\0225\n\nSimpleInfo\030"
    "\001 \001(\0132!.pb.TTowerDefenseNewMapSimpleInfo"
    "\022(\n\014ArrFormation\030\002 \003(\0132\022.pb.TUnitFormati"
    "on\022\031\n\021CurBattleArgsData\030\003 \001(\014\0221\n\013ArrBuff"
    "Info\030\004 \003(\0132\034.pb.TTowerDefenseNewBuffInfo"
    "\"r\n\033TTowerDefenseNewMapTypeInfo\022\017\n\007MapTy"
    "pe\030\001 \001(\r\022\024\n\014ChallengeNum\030\002 \001(\r\022\027\n\017IncCha"
    "llengeNum\030\003 \001(\r\022\023\n\013RefreshTime\030\004 \001(\004\"\320\001\n"
    " TTowerDefenseNewGetSimpleInfoRsp\0228\n\rArr"
    "SimpleInfo\030\001 \003(\0132!.pb.TTowerDefenseNewMa"
    "pSimpleInfo\0224\n\013ArrTypeInfo\030\002 \003(\0132\037.pb.TT"
    "owerDefenseNewMapTypeInfo\022<\n\022ArrActExcha"
    "ngeInfo\030\003 \003(\0132 .pb.TTowerDefenseNewExcha"
    "ngeInfo\"+\n\032TTowerDefenseNewGetInfoReq\022\r\n"
    "\005MapId\030\001 \001(\r\"\206\001\n\032TTowerDefenseNewGetInfo"
    "Rsp\0225\n\nDetailInfo\030\001 \001(\0132!.pb.TTowerDefen"
    "seNewMapDetailInfo\0221\n\010TypeInfo\030\002 \001(\0132\037.p"
    "b.TTowerDefenseNewMapTypeInfo\".\n\035TTowerD"
    "efenseNewSetPlotEndReq\022\r\n\005MapId\030\001 \001(\r\"Z\n"
    "\037TTowerDefenseNewSetFormationReq\022\r\n\005MapI"
    "d\030\001 \001(\r\022(\n\014ArrFormation\030\002 \003(\0132\022.pb.TUnit"
    "Formation\"o\n\033TTowerDefenseNewDoBattleReq"
    "\022\r\n\005MapId\030\001 \001(\r\022/\n\020BattleCheckParam\030\002 \001("
    "\0132\025.pb.TBattleCheckParam\022\020\n\010RoundNum\030\003 \001"
    "(\r\"\306\001\n\033TTowerDefenseNewDoBattleRsp\0228\n\016Wa"
    "vesDropArray\030\001 \003(\0132 .pb.TTowerDefenseNew"
    "WaveDropInfo\022\026\n\016BattleArgsData\030\002 \001(\014\022\020\n\010"
    "RoundNum\030\003 \001(\r\022\020\n\010BattleId\030\004 \001(\r\0221\n\013ArrB"
    "uffInfo\030\005 \003(\0132\034.pb.TTowerDefenseNewBuffI"
    "nfo\"o\n\037TTowerDefenseNewReportBattleReq\022\r"
    "\n\005MapId\030\001 \001(\r\022\031\n\021BattleResultBytes\030\002 \001(\014"
    "\022\020\n\010RoundNum\030\003 \001(\r\022\020\n\010BattleId\030\004 \001(\r\"G\n\037"
    "TTowerDefenseNewReportBattleRsp\022$\n\tDropA"
    "rray\030\001 \003(\0132\021.pb.TCommonReward\"-\n\034TTowerD"
    "efenseNewEndBattleReq\022\r\n\005MapId\030\001 \001(\r\"D\n\034"
    "TTowerDefenseNewEndBattleRsp\022$\n\tDropArra"
    "y\030\001 \003(\0132\021.pb.TCommonReward\"H\n+TTowerDefe"
    "nseNewReceiveAchievementRewardReq\022\r\n\005Map"
    "Id\030\001 \001(\r\022\n\n\002Id\030\002 \001(\r\"S\n+TTowerDefenseNew"
    "ReceiveAchievementRewardRsp\022$\n\tDropArray"
    "\030\001 \003(\0132\021.pb.TCommonReward\"\?\n.TTowerDefen"
    "seNewReceiveAllAchievementRewardReq\022\r\n\005M"
    "apId\030\001 \001(\r\"V\n.TTowerDefenseNewReceiveAll"
    "AchievementRewardRsp\022$\n\tDropArray\030\002 \003(\0132"
    "\021.pb.TCommonReward\",\n\033TTowerDefenseNewSw"
    "eepMapReq\022\r\n\005MapId\030\001 \001(\r\"C\n\033TTowerDefens"
    "eNewSweepMapRsp\022$\n\tDropArray\030\002 \003(\0132\021.pb."
    "TCommonReward\"A\n\036TTowerDefenseNewActExch"
    "angeReq\022\022\n\nExchangeId\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r"
    "\"F\n\036TTowerDefenseNewActExchangeRsp\022$\n\tAr"
    "rReward\030\001 \003(\0132\021.pb.TCommonReward", 2672);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/TowerDefenseNew.proto", &protobuf_RegisterTypes);
  TTowerDefenseNewRewardInfo::default_instance_ = new TTowerDefenseNewRewardInfo();
  TTowerDefenseNewExchangeInfo::default_instance_ = new TTowerDefenseNewExchangeInfo();
  TTowerDefenseNewBuffInfo::default_instance_ = new TTowerDefenseNewBuffInfo();
  TTowerDefenseNewWaveDropInfo::default_instance_ = new TTowerDefenseNewWaveDropInfo();
  TTowerDefenseNewMapSimpleInfo::default_instance_ = new TTowerDefenseNewMapSimpleInfo();
  TTowerDefenseNewMapDetailInfo::default_instance_ = new TTowerDefenseNewMapDetailInfo();
  TTowerDefenseNewMapTypeInfo::default_instance_ = new TTowerDefenseNewMapTypeInfo();
  TTowerDefenseNewGetSimpleInfoRsp::default_instance_ = new TTowerDefenseNewGetSimpleInfoRsp();
  TTowerDefenseNewGetInfoReq::default_instance_ = new TTowerDefenseNewGetInfoReq();
  TTowerDefenseNewGetInfoRsp::default_instance_ = new TTowerDefenseNewGetInfoRsp();
  TTowerDefenseNewSetPlotEndReq::default_instance_ = new TTowerDefenseNewSetPlotEndReq();
  TTowerDefenseNewSetFormationReq::default_instance_ = new TTowerDefenseNewSetFormationReq();
  TTowerDefenseNewDoBattleReq::default_instance_ = new TTowerDefenseNewDoBattleReq();
  TTowerDefenseNewDoBattleRsp::default_instance_ = new TTowerDefenseNewDoBattleRsp();
  TTowerDefenseNewReportBattleReq::default_instance_ = new TTowerDefenseNewReportBattleReq();
  TTowerDefenseNewReportBattleRsp::default_instance_ = new TTowerDefenseNewReportBattleRsp();
  TTowerDefenseNewEndBattleReq::default_instance_ = new TTowerDefenseNewEndBattleReq();
  TTowerDefenseNewEndBattleRsp::default_instance_ = new TTowerDefenseNewEndBattleRsp();
  TTowerDefenseNewReceiveAchievementRewardReq::default_instance_ = new TTowerDefenseNewReceiveAchievementRewardReq();
  TTowerDefenseNewReceiveAchievementRewardRsp::default_instance_ = new TTowerDefenseNewReceiveAchievementRewardRsp();
  TTowerDefenseNewReceiveAllAchievementRewardReq::default_instance_ = new TTowerDefenseNewReceiveAllAchievementRewardReq();
  TTowerDefenseNewReceiveAllAchievementRewardRsp::default_instance_ = new TTowerDefenseNewReceiveAllAchievementRewardRsp();
  TTowerDefenseNewSweepMapReq::default_instance_ = new TTowerDefenseNewSweepMapReq();
  TTowerDefenseNewSweepMapRsp::default_instance_ = new TTowerDefenseNewSweepMapRsp();
  TTowerDefenseNewActExchangeReq::default_instance_ = new TTowerDefenseNewActExchangeReq();
  TTowerDefenseNewActExchangeRsp::default_instance_ = new TTowerDefenseNewActExchangeRsp();
  TTowerDefenseNewRewardInfo::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewExchangeInfo::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewBuffInfo::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewWaveDropInfo::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewMapSimpleInfo::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewMapDetailInfo::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewMapTypeInfo::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewGetSimpleInfoRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewGetInfoReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewSetPlotEndReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewSetFormationReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewDoBattleReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewDoBattleRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewReportBattleReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewReportBattleRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewEndBattleReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewEndBattleRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewReceiveAchievementRewardReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewReceiveAchievementRewardRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewReceiveAllAchievementRewardReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewReceiveAllAchievementRewardRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewSweepMapReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewSweepMapRsp::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewActExchangeReq::default_instance_->InitAsDefaultInstance();
  TTowerDefenseNewActExchangeRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fTowerDefenseNew_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fTowerDefenseNew_2eproto {
  StaticDescriptorInitializer_net_2fTowerDefenseNew_2eproto() {
    protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  }
} static_descriptor_initializer_net_2fTowerDefenseNew_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewRewardInfo::kIdFieldNumber;
const int TTowerDefenseNewRewardInfo::kRewardTimeFieldNumber;
const int TTowerDefenseNewRewardInfo::kFightForceFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewRewardInfo::TTowerDefenseNewRewardInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewRewardInfo)
}

void TTowerDefenseNewRewardInfo::InitAsDefaultInstance() {
}

TTowerDefenseNewRewardInfo::TTowerDefenseNewRewardInfo(const TTowerDefenseNewRewardInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewRewardInfo)
}

void TTowerDefenseNewRewardInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  rewardtime_ = GOOGLE_ULONGLONG(0);
  fightforce_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewRewardInfo::~TTowerDefenseNewRewardInfo() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewRewardInfo)
  SharedDtor();
}

void TTowerDefenseNewRewardInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewRewardInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewRewardInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewRewardInfo_descriptor_;
}

const TTowerDefenseNewRewardInfo& TTowerDefenseNewRewardInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewRewardInfo* TTowerDefenseNewRewardInfo::default_instance_ = NULL;

TTowerDefenseNewRewardInfo* TTowerDefenseNewRewardInfo::New() const {
  return new TTowerDefenseNewRewardInfo;
}

void TTowerDefenseNewRewardInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseNewRewardInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(rewardtime_, id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewRewardInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewRewardInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardTime;
        break;
      }

      // optional uint64 RewardTime = 2;
      case 2: {
        if (tag == 16) {
         parse_RewardTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rewardtime_)));
          set_has_rewardtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_FightForce;
        break;
      }

      // optional uint64 FightForce = 3;
      case 3: {
        if (tag == 24) {
         parse_FightForce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fightforce_)));
          set_has_fightforce();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewRewardInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewRewardInfo)
  return false;
#undef DO_
}

void TTowerDefenseNewRewardInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewRewardInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 RewardTime = 2;
  if (has_rewardtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->rewardtime(), output);
  }

  // optional uint64 FightForce = 3;
  if (has_fightforce()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->fightforce(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewRewardInfo)
}

::google::protobuf::uint8* TTowerDefenseNewRewardInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewRewardInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 RewardTime = 2;
  if (has_rewardtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->rewardtime(), target);
  }

  // optional uint64 FightForce = 3;
  if (has_fightforce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->fightforce(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewRewardInfo)
  return target;
}

int TTowerDefenseNewRewardInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 RewardTime = 2;
    if (has_rewardtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rewardtime());
    }

    // optional uint64 FightForce = 3;
    if (has_fightforce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fightforce());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewRewardInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewRewardInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewRewardInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewRewardInfo::MergeFrom(const TTowerDefenseNewRewardInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_rewardtime()) {
      set_rewardtime(from.rewardtime());
    }
    if (from.has_fightforce()) {
      set_fightforce(from.fightforce());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewRewardInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewRewardInfo::CopyFrom(const TTowerDefenseNewRewardInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewRewardInfo::IsInitialized() const {

  return true;
}

void TTowerDefenseNewRewardInfo::Swap(TTowerDefenseNewRewardInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(rewardtime_, other->rewardtime_);
    std::swap(fightforce_, other->fightforce_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewRewardInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewRewardInfo_descriptor_;
  metadata.reflection = TTowerDefenseNewRewardInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewExchangeInfo::kIdFieldNumber;
const int TTowerDefenseNewExchangeInfo::kNumFieldNumber;
const int TTowerDefenseNewExchangeInfo::kExchangeTimeFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewExchangeInfo::TTowerDefenseNewExchangeInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewExchangeInfo)
}

void TTowerDefenseNewExchangeInfo::InitAsDefaultInstance() {
}

TTowerDefenseNewExchangeInfo::TTowerDefenseNewExchangeInfo(const TTowerDefenseNewExchangeInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewExchangeInfo)
}

void TTowerDefenseNewExchangeInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  exchangetime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewExchangeInfo::~TTowerDefenseNewExchangeInfo() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewExchangeInfo)
  SharedDtor();
}

void TTowerDefenseNewExchangeInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewExchangeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewExchangeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewExchangeInfo_descriptor_;
}

const TTowerDefenseNewExchangeInfo& TTowerDefenseNewExchangeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewExchangeInfo* TTowerDefenseNewExchangeInfo::default_instance_ = NULL;

TTowerDefenseNewExchangeInfo* TTowerDefenseNewExchangeInfo::New() const {
  return new TTowerDefenseNewExchangeInfo;
}

void TTowerDefenseNewExchangeInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseNewExchangeInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, exchangetime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewExchangeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewExchangeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ExchangeTime;
        break;
      }

      // optional uint64 ExchangeTime = 3;
      case 3: {
        if (tag == 24) {
         parse_ExchangeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exchangetime_)));
          set_has_exchangetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewExchangeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewExchangeInfo)
  return false;
#undef DO_
}

void TTowerDefenseNewExchangeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewExchangeInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  // optional uint64 ExchangeTime = 3;
  if (has_exchangetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->exchangetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewExchangeInfo)
}

::google::protobuf::uint8* TTowerDefenseNewExchangeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewExchangeInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  // optional uint64 ExchangeTime = 3;
  if (has_exchangetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->exchangetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewExchangeInfo)
  return target;
}

int TTowerDefenseNewExchangeInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint64 ExchangeTime = 3;
    if (has_exchangetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->exchangetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewExchangeInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewExchangeInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewExchangeInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewExchangeInfo::MergeFrom(const TTowerDefenseNewExchangeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_exchangetime()) {
      set_exchangetime(from.exchangetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewExchangeInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewExchangeInfo::CopyFrom(const TTowerDefenseNewExchangeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewExchangeInfo::IsInitialized() const {

  return true;
}

void TTowerDefenseNewExchangeInfo::Swap(TTowerDefenseNewExchangeInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(exchangetime_, other->exchangetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewExchangeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewExchangeInfo_descriptor_;
  metadata.reflection = TTowerDefenseNewExchangeInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewBuffInfo::kPosFieldNumber;
const int TTowerDefenseNewBuffInfo::kBuffConfIdFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewBuffInfo::TTowerDefenseNewBuffInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewBuffInfo)
}

void TTowerDefenseNewBuffInfo::InitAsDefaultInstance() {
}

TTowerDefenseNewBuffInfo::TTowerDefenseNewBuffInfo(const TTowerDefenseNewBuffInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewBuffInfo)
}

void TTowerDefenseNewBuffInfo::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  buffconfid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewBuffInfo::~TTowerDefenseNewBuffInfo() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewBuffInfo)
  SharedDtor();
}

void TTowerDefenseNewBuffInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewBuffInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewBuffInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewBuffInfo_descriptor_;
}

const TTowerDefenseNewBuffInfo& TTowerDefenseNewBuffInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewBuffInfo* TTowerDefenseNewBuffInfo::default_instance_ = NULL;

TTowerDefenseNewBuffInfo* TTowerDefenseNewBuffInfo::New() const {
  return new TTowerDefenseNewBuffInfo;
}

void TTowerDefenseNewBuffInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseNewBuffInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(pos_, buffconfid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewBuffInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewBuffInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BuffConfId;
        break;
      }

      // optional uint32 BuffConfId = 2;
      case 2: {
        if (tag == 16) {
         parse_BuffConfId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buffconfid_)));
          set_has_buffconfid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewBuffInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewBuffInfo)
  return false;
#undef DO_
}

void TTowerDefenseNewBuffInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewBuffInfo)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional uint32 BuffConfId = 2;
  if (has_buffconfid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->buffconfid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewBuffInfo)
}

::google::protobuf::uint8* TTowerDefenseNewBuffInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewBuffInfo)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional uint32 BuffConfId = 2;
  if (has_buffconfid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->buffconfid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewBuffInfo)
  return target;
}

int TTowerDefenseNewBuffInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 BuffConfId = 2;
    if (has_buffconfid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buffconfid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewBuffInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewBuffInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewBuffInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewBuffInfo::MergeFrom(const TTowerDefenseNewBuffInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_buffconfid()) {
      set_buffconfid(from.buffconfid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewBuffInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewBuffInfo::CopyFrom(const TTowerDefenseNewBuffInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewBuffInfo::IsInitialized() const {

  return true;
}

void TTowerDefenseNewBuffInfo::Swap(TTowerDefenseNewBuffInfo* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(buffconfid_, other->buffconfid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewBuffInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewBuffInfo_descriptor_;
  metadata.reflection = TTowerDefenseNewBuffInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewWaveDropInfo::kWaveNumFieldNumber;
const int TTowerDefenseNewWaveDropInfo::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewWaveDropInfo::TTowerDefenseNewWaveDropInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewWaveDropInfo)
}

void TTowerDefenseNewWaveDropInfo::InitAsDefaultInstance() {
}

TTowerDefenseNewWaveDropInfo::TTowerDefenseNewWaveDropInfo(const TTowerDefenseNewWaveDropInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewWaveDropInfo)
}

void TTowerDefenseNewWaveDropInfo::SharedCtor() {
  _cached_size_ = 0;
  wavenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewWaveDropInfo::~TTowerDefenseNewWaveDropInfo() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewWaveDropInfo)
  SharedDtor();
}

void TTowerDefenseNewWaveDropInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewWaveDropInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewWaveDropInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewWaveDropInfo_descriptor_;
}

const TTowerDefenseNewWaveDropInfo& TTowerDefenseNewWaveDropInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewWaveDropInfo* TTowerDefenseNewWaveDropInfo::default_instance_ = NULL;

TTowerDefenseNewWaveDropInfo* TTowerDefenseNewWaveDropInfo::New() const {
  return new TTowerDefenseNewWaveDropInfo;
}

void TTowerDefenseNewWaveDropInfo::Clear() {
  wavenum_ = 0u;
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewWaveDropInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewWaveDropInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 WaveNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wavenum_)));
          set_has_wavenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DropArray;
        break;
      }

      // repeated .pb.TCommonReward DropArray = 2;
      case 2: {
        if (tag == 18) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewWaveDropInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewWaveDropInfo)
  return false;
#undef DO_
}

void TTowerDefenseNewWaveDropInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewWaveDropInfo)
  // optional uint32 WaveNum = 1;
  if (has_wavenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->wavenum(), output);
  }

  // repeated .pb.TCommonReward DropArray = 2;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewWaveDropInfo)
}

::google::protobuf::uint8* TTowerDefenseNewWaveDropInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewWaveDropInfo)
  // optional uint32 WaveNum = 1;
  if (has_wavenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->wavenum(), target);
  }

  // repeated .pb.TCommonReward DropArray = 2;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewWaveDropInfo)
  return target;
}

int TTowerDefenseNewWaveDropInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 WaveNum = 1;
    if (has_wavenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wavenum());
    }

  }
  // repeated .pb.TCommonReward DropArray = 2;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewWaveDropInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewWaveDropInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewWaveDropInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewWaveDropInfo::MergeFrom(const TTowerDefenseNewWaveDropInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wavenum()) {
      set_wavenum(from.wavenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewWaveDropInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewWaveDropInfo::CopyFrom(const TTowerDefenseNewWaveDropInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewWaveDropInfo::IsInitialized() const {

  return true;
}

void TTowerDefenseNewWaveDropInfo::Swap(TTowerDefenseNewWaveDropInfo* other) {
  if (other != this) {
    std::swap(wavenum_, other->wavenum_);
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewWaveDropInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewWaveDropInfo_descriptor_;
  metadata.reflection = TTowerDefenseNewWaveDropInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewMapSimpleInfo::kMapIdFieldNumber;
const int TTowerDefenseNewMapSimpleInfo::kCurRoundNumFieldNumber;
const int TTowerDefenseNewMapSimpleInfo::kMaxWaveNumFieldNumber;
const int TTowerDefenseNewMapSimpleInfo::kBeginFightForceFieldNumber;
const int TTowerDefenseNewMapSimpleInfo::kArrAchievementInfoFieldNumber;
const int TTowerDefenseNewMapSimpleInfo::kAchievementWaveNumFieldNumber;
const int TTowerDefenseNewMapSimpleInfo::kPlotEndTimeFieldNumber;
const int TTowerDefenseNewMapSimpleInfo::kFirstFinishTimeFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewMapSimpleInfo::TTowerDefenseNewMapSimpleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewMapSimpleInfo)
}

void TTowerDefenseNewMapSimpleInfo::InitAsDefaultInstance() {
}

TTowerDefenseNewMapSimpleInfo::TTowerDefenseNewMapSimpleInfo(const TTowerDefenseNewMapSimpleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewMapSimpleInfo)
}

void TTowerDefenseNewMapSimpleInfo::SharedCtor() {
  _cached_size_ = 0;
  mapid_ = 0u;
  curroundnum_ = 0u;
  maxwavenum_ = 0u;
  beginfightforce_ = GOOGLE_ULONGLONG(0);
  achievementwavenum_ = 0u;
  plotendtime_ = GOOGLE_ULONGLONG(0);
  firstfinishtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewMapSimpleInfo::~TTowerDefenseNewMapSimpleInfo() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewMapSimpleInfo)
  SharedDtor();
}

void TTowerDefenseNewMapSimpleInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewMapSimpleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewMapSimpleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewMapSimpleInfo_descriptor_;
}

const TTowerDefenseNewMapSimpleInfo& TTowerDefenseNewMapSimpleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewMapSimpleInfo* TTowerDefenseNewMapSimpleInfo::default_instance_ = NULL;

TTowerDefenseNewMapSimpleInfo* TTowerDefenseNewMapSimpleInfo::New() const {
  return new TTowerDefenseNewMapSimpleInfo;
}

void TTowerDefenseNewMapSimpleInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseNewMapSimpleInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 239) {
    ZR_(mapid_, achievementwavenum_);
    ZR_(plotendtime_, firstfinishtime_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrachievementinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewMapSimpleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewMapSimpleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CurRoundNum;
        break;
      }

      // optional uint32 CurRoundNum = 2;
      case 2: {
        if (tag == 16) {
         parse_CurRoundNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curroundnum_)));
          set_has_curroundnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MaxWaveNum;
        break;
      }

      // optional uint32 MaxWaveNum = 3;
      case 3: {
        if (tag == 24) {
         parse_MaxWaveNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxwavenum_)));
          set_has_maxwavenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_BeginFightForce;
        break;
      }

      // optional uint64 BeginFightForce = 4;
      case 4: {
        if (tag == 32) {
         parse_BeginFightForce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &beginfightforce_)));
          set_has_beginfightforce();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ArrAchievementInfo;
        break;
      }

      // repeated .pb.TTowerDefenseNewRewardInfo ArrAchievementInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_ArrAchievementInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrachievementinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ArrAchievementInfo;
        if (input->ExpectTag(48)) goto parse_AchievementWaveNum;
        break;
      }

      // optional uint32 AchievementWaveNum = 6;
      case 6: {
        if (tag == 48) {
         parse_AchievementWaveNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achievementwavenum_)));
          set_has_achievementwavenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_PlotEndTime;
        break;
      }

      // optional uint64 PlotEndTime = 7;
      case 7: {
        if (tag == 56) {
         parse_PlotEndTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &plotendtime_)));
          set_has_plotendtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_FirstFinishTime;
        break;
      }

      // optional uint64 FirstFinishTime = 8;
      case 8: {
        if (tag == 64) {
         parse_FirstFinishTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &firstfinishtime_)));
          set_has_firstfinishtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewMapSimpleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewMapSimpleInfo)
  return false;
#undef DO_
}

void TTowerDefenseNewMapSimpleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewMapSimpleInfo)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  // optional uint32 CurRoundNum = 2;
  if (has_curroundnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->curroundnum(), output);
  }

  // optional uint32 MaxWaveNum = 3;
  if (has_maxwavenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxwavenum(), output);
  }

  // optional uint64 BeginFightForce = 4;
  if (has_beginfightforce()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->beginfightforce(), output);
  }

  // repeated .pb.TTowerDefenseNewRewardInfo ArrAchievementInfo = 5;
  for (int i = 0; i < this->arrachievementinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->arrachievementinfo(i), output);
  }

  // optional uint32 AchievementWaveNum = 6;
  if (has_achievementwavenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->achievementwavenum(), output);
  }

  // optional uint64 PlotEndTime = 7;
  if (has_plotendtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->plotendtime(), output);
  }

  // optional uint64 FirstFinishTime = 8;
  if (has_firstfinishtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->firstfinishtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewMapSimpleInfo)
}

::google::protobuf::uint8* TTowerDefenseNewMapSimpleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewMapSimpleInfo)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  // optional uint32 CurRoundNum = 2;
  if (has_curroundnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->curroundnum(), target);
  }

  // optional uint32 MaxWaveNum = 3;
  if (has_maxwavenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxwavenum(), target);
  }

  // optional uint64 BeginFightForce = 4;
  if (has_beginfightforce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->beginfightforce(), target);
  }

  // repeated .pb.TTowerDefenseNewRewardInfo ArrAchievementInfo = 5;
  for (int i = 0; i < this->arrachievementinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->arrachievementinfo(i), target);
  }

  // optional uint32 AchievementWaveNum = 6;
  if (has_achievementwavenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->achievementwavenum(), target);
  }

  // optional uint64 PlotEndTime = 7;
  if (has_plotendtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->plotendtime(), target);
  }

  // optional uint64 FirstFinishTime = 8;
  if (has_firstfinishtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->firstfinishtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewMapSimpleInfo)
  return target;
}

int TTowerDefenseNewMapSimpleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MapId = 1;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mapid());
    }

    // optional uint32 CurRoundNum = 2;
    if (has_curroundnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->curroundnum());
    }

    // optional uint32 MaxWaveNum = 3;
    if (has_maxwavenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxwavenum());
    }

    // optional uint64 BeginFightForce = 4;
    if (has_beginfightforce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->beginfightforce());
    }

    // optional uint32 AchievementWaveNum = 6;
    if (has_achievementwavenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->achievementwavenum());
    }

    // optional uint64 PlotEndTime = 7;
    if (has_plotendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->plotendtime());
    }

    // optional uint64 FirstFinishTime = 8;
    if (has_firstfinishtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->firstfinishtime());
    }

  }
  // repeated .pb.TTowerDefenseNewRewardInfo ArrAchievementInfo = 5;
  total_size += 1 * this->arrachievementinfo_size();
  for (int i = 0; i < this->arrachievementinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrachievementinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewMapSimpleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewMapSimpleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewMapSimpleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewMapSimpleInfo::MergeFrom(const TTowerDefenseNewMapSimpleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrachievementinfo_.MergeFrom(from.arrachievementinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
    if (from.has_curroundnum()) {
      set_curroundnum(from.curroundnum());
    }
    if (from.has_maxwavenum()) {
      set_maxwavenum(from.maxwavenum());
    }
    if (from.has_beginfightforce()) {
      set_beginfightforce(from.beginfightforce());
    }
    if (from.has_achievementwavenum()) {
      set_achievementwavenum(from.achievementwavenum());
    }
    if (from.has_plotendtime()) {
      set_plotendtime(from.plotendtime());
    }
    if (from.has_firstfinishtime()) {
      set_firstfinishtime(from.firstfinishtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewMapSimpleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewMapSimpleInfo::CopyFrom(const TTowerDefenseNewMapSimpleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewMapSimpleInfo::IsInitialized() const {

  return true;
}

void TTowerDefenseNewMapSimpleInfo::Swap(TTowerDefenseNewMapSimpleInfo* other) {
  if (other != this) {
    std::swap(mapid_, other->mapid_);
    std::swap(curroundnum_, other->curroundnum_);
    std::swap(maxwavenum_, other->maxwavenum_);
    std::swap(beginfightforce_, other->beginfightforce_);
    arrachievementinfo_.Swap(&other->arrachievementinfo_);
    std::swap(achievementwavenum_, other->achievementwavenum_);
    std::swap(plotendtime_, other->plotendtime_);
    std::swap(firstfinishtime_, other->firstfinishtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewMapSimpleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewMapSimpleInfo_descriptor_;
  metadata.reflection = TTowerDefenseNewMapSimpleInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewMapDetailInfo::kSimpleInfoFieldNumber;
const int TTowerDefenseNewMapDetailInfo::kArrFormationFieldNumber;
const int TTowerDefenseNewMapDetailInfo::kCurBattleArgsDataFieldNumber;
const int TTowerDefenseNewMapDetailInfo::kArrBuffInfoFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewMapDetailInfo::TTowerDefenseNewMapDetailInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewMapDetailInfo)
}

void TTowerDefenseNewMapDetailInfo::InitAsDefaultInstance() {
  simpleinfo_ = const_cast< ::pb::TTowerDefenseNewMapSimpleInfo*>(&::pb::TTowerDefenseNewMapSimpleInfo::default_instance());
}

TTowerDefenseNewMapDetailInfo::TTowerDefenseNewMapDetailInfo(const TTowerDefenseNewMapDetailInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewMapDetailInfo)
}

void TTowerDefenseNewMapDetailInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  simpleinfo_ = NULL;
  curbattleargsdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewMapDetailInfo::~TTowerDefenseNewMapDetailInfo() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewMapDetailInfo)
  SharedDtor();
}

void TTowerDefenseNewMapDetailInfo::SharedDtor() {
  if (curbattleargsdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete curbattleargsdata_;
  }
  if (this != default_instance_) {
    delete simpleinfo_;
  }
}

void TTowerDefenseNewMapDetailInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewMapDetailInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewMapDetailInfo_descriptor_;
}

const TTowerDefenseNewMapDetailInfo& TTowerDefenseNewMapDetailInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewMapDetailInfo* TTowerDefenseNewMapDetailInfo::default_instance_ = NULL;

TTowerDefenseNewMapDetailInfo* TTowerDefenseNewMapDetailInfo::New() const {
  return new TTowerDefenseNewMapDetailInfo;
}

void TTowerDefenseNewMapDetailInfo::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    if (has_simpleinfo()) {
      if (simpleinfo_ != NULL) simpleinfo_->::pb::TTowerDefenseNewMapSimpleInfo::Clear();
    }
    if (has_curbattleargsdata()) {
      if (curbattleargsdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        curbattleargsdata_->clear();
      }
    }
  }
  arrformation_.Clear();
  arrbuffinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewMapDetailInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewMapDetailInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TTowerDefenseNewMapSimpleInfo SimpleInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_simpleinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrFormation;
        break;
      }

      // repeated .pb.TUnitFormation ArrFormation = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrFormation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrformation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrFormation;
        if (input->ExpectTag(26)) goto parse_CurBattleArgsData;
        break;
      }

      // optional bytes CurBattleArgsData = 3;
      case 3: {
        if (tag == 26) {
         parse_CurBattleArgsData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_curbattleargsdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrBuffInfo;
        break;
      }

      // repeated .pb.TTowerDefenseNewBuffInfo ArrBuffInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_ArrBuffInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrbuffinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrBuffInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewMapDetailInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewMapDetailInfo)
  return false;
#undef DO_
}

void TTowerDefenseNewMapDetailInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewMapDetailInfo)
  // optional .pb.TTowerDefenseNewMapSimpleInfo SimpleInfo = 1;
  if (has_simpleinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->simpleinfo(), output);
  }

  // repeated .pb.TUnitFormation ArrFormation = 2;
  for (int i = 0; i < this->arrformation_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrformation(i), output);
  }

  // optional bytes CurBattleArgsData = 3;
  if (has_curbattleargsdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->curbattleargsdata(), output);
  }

  // repeated .pb.TTowerDefenseNewBuffInfo ArrBuffInfo = 4;
  for (int i = 0; i < this->arrbuffinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->arrbuffinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewMapDetailInfo)
}

::google::protobuf::uint8* TTowerDefenseNewMapDetailInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewMapDetailInfo)
  // optional .pb.TTowerDefenseNewMapSimpleInfo SimpleInfo = 1;
  if (has_simpleinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->simpleinfo(), target);
  }

  // repeated .pb.TUnitFormation ArrFormation = 2;
  for (int i = 0; i < this->arrformation_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrformation(i), target);
  }

  // optional bytes CurBattleArgsData = 3;
  if (has_curbattleargsdata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->curbattleargsdata(), target);
  }

  // repeated .pb.TTowerDefenseNewBuffInfo ArrBuffInfo = 4;
  for (int i = 0; i < this->arrbuffinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->arrbuffinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewMapDetailInfo)
  return target;
}

int TTowerDefenseNewMapDetailInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TTowerDefenseNewMapSimpleInfo SimpleInfo = 1;
    if (has_simpleinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->simpleinfo());
    }

    // optional bytes CurBattleArgsData = 3;
    if (has_curbattleargsdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->curbattleargsdata());
    }

  }
  // repeated .pb.TUnitFormation ArrFormation = 2;
  total_size += 1 * this->arrformation_size();
  for (int i = 0; i < this->arrformation_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrformation(i));
  }

  // repeated .pb.TTowerDefenseNewBuffInfo ArrBuffInfo = 4;
  total_size += 1 * this->arrbuffinfo_size();
  for (int i = 0; i < this->arrbuffinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrbuffinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewMapDetailInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewMapDetailInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewMapDetailInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewMapDetailInfo::MergeFrom(const TTowerDefenseNewMapDetailInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrformation_.MergeFrom(from.arrformation_);
  arrbuffinfo_.MergeFrom(from.arrbuffinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_simpleinfo()) {
      mutable_simpleinfo()->::pb::TTowerDefenseNewMapSimpleInfo::MergeFrom(from.simpleinfo());
    }
    if (from.has_curbattleargsdata()) {
      set_curbattleargsdata(from.curbattleargsdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewMapDetailInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewMapDetailInfo::CopyFrom(const TTowerDefenseNewMapDetailInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewMapDetailInfo::IsInitialized() const {

  return true;
}

void TTowerDefenseNewMapDetailInfo::Swap(TTowerDefenseNewMapDetailInfo* other) {
  if (other != this) {
    std::swap(simpleinfo_, other->simpleinfo_);
    arrformation_.Swap(&other->arrformation_);
    std::swap(curbattleargsdata_, other->curbattleargsdata_);
    arrbuffinfo_.Swap(&other->arrbuffinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewMapDetailInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewMapDetailInfo_descriptor_;
  metadata.reflection = TTowerDefenseNewMapDetailInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewMapTypeInfo::kMapTypeFieldNumber;
const int TTowerDefenseNewMapTypeInfo::kChallengeNumFieldNumber;
const int TTowerDefenseNewMapTypeInfo::kIncChallengeNumFieldNumber;
const int TTowerDefenseNewMapTypeInfo::kRefreshTimeFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewMapTypeInfo::TTowerDefenseNewMapTypeInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewMapTypeInfo)
}

void TTowerDefenseNewMapTypeInfo::InitAsDefaultInstance() {
}

TTowerDefenseNewMapTypeInfo::TTowerDefenseNewMapTypeInfo(const TTowerDefenseNewMapTypeInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewMapTypeInfo)
}

void TTowerDefenseNewMapTypeInfo::SharedCtor() {
  _cached_size_ = 0;
  maptype_ = 0u;
  challengenum_ = 0u;
  incchallengenum_ = 0u;
  refreshtime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewMapTypeInfo::~TTowerDefenseNewMapTypeInfo() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewMapTypeInfo)
  SharedDtor();
}

void TTowerDefenseNewMapTypeInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewMapTypeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewMapTypeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewMapTypeInfo_descriptor_;
}

const TTowerDefenseNewMapTypeInfo& TTowerDefenseNewMapTypeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewMapTypeInfo* TTowerDefenseNewMapTypeInfo::default_instance_ = NULL;

TTowerDefenseNewMapTypeInfo* TTowerDefenseNewMapTypeInfo::New() const {
  return new TTowerDefenseNewMapTypeInfo;
}

void TTowerDefenseNewMapTypeInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseNewMapTypeInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(maptype_, incchallengenum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewMapTypeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewMapTypeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maptype_)));
          set_has_maptype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ChallengeNum;
        break;
      }

      // optional uint32 ChallengeNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ChallengeNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &challengenum_)));
          set_has_challengenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_IncChallengeNum;
        break;
      }

      // optional uint32 IncChallengeNum = 3;
      case 3: {
        if (tag == 24) {
         parse_IncChallengeNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &incchallengenum_)));
          set_has_incchallengenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_RefreshTime;
        break;
      }

      // optional uint64 RefreshTime = 4;
      case 4: {
        if (tag == 32) {
         parse_RefreshTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &refreshtime_)));
          set_has_refreshtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewMapTypeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewMapTypeInfo)
  return false;
#undef DO_
}

void TTowerDefenseNewMapTypeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewMapTypeInfo)
  // optional uint32 MapType = 1;
  if (has_maptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->maptype(), output);
  }

  // optional uint32 ChallengeNum = 2;
  if (has_challengenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->challengenum(), output);
  }

  // optional uint32 IncChallengeNum = 3;
  if (has_incchallengenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->incchallengenum(), output);
  }

  // optional uint64 RefreshTime = 4;
  if (has_refreshtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->refreshtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewMapTypeInfo)
}

::google::protobuf::uint8* TTowerDefenseNewMapTypeInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewMapTypeInfo)
  // optional uint32 MapType = 1;
  if (has_maptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->maptype(), target);
  }

  // optional uint32 ChallengeNum = 2;
  if (has_challengenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->challengenum(), target);
  }

  // optional uint32 IncChallengeNum = 3;
  if (has_incchallengenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->incchallengenum(), target);
  }

  // optional uint64 RefreshTime = 4;
  if (has_refreshtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->refreshtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewMapTypeInfo)
  return target;
}

int TTowerDefenseNewMapTypeInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MapType = 1;
    if (has_maptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maptype());
    }

    // optional uint32 ChallengeNum = 2;
    if (has_challengenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->challengenum());
    }

    // optional uint32 IncChallengeNum = 3;
    if (has_incchallengenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->incchallengenum());
    }

    // optional uint64 RefreshTime = 4;
    if (has_refreshtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->refreshtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewMapTypeInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewMapTypeInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewMapTypeInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewMapTypeInfo::MergeFrom(const TTowerDefenseNewMapTypeInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maptype()) {
      set_maptype(from.maptype());
    }
    if (from.has_challengenum()) {
      set_challengenum(from.challengenum());
    }
    if (from.has_incchallengenum()) {
      set_incchallengenum(from.incchallengenum());
    }
    if (from.has_refreshtime()) {
      set_refreshtime(from.refreshtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewMapTypeInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewMapTypeInfo::CopyFrom(const TTowerDefenseNewMapTypeInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewMapTypeInfo::IsInitialized() const {

  return true;
}

void TTowerDefenseNewMapTypeInfo::Swap(TTowerDefenseNewMapTypeInfo* other) {
  if (other != this) {
    std::swap(maptype_, other->maptype_);
    std::swap(challengenum_, other->challengenum_);
    std::swap(incchallengenum_, other->incchallengenum_);
    std::swap(refreshtime_, other->refreshtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewMapTypeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewMapTypeInfo_descriptor_;
  metadata.reflection = TTowerDefenseNewMapTypeInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewGetSimpleInfoRsp::kArrSimpleInfoFieldNumber;
const int TTowerDefenseNewGetSimpleInfoRsp::kArrTypeInfoFieldNumber;
const int TTowerDefenseNewGetSimpleInfoRsp::kArrActExchangeInfoFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewGetSimpleInfoRsp::TTowerDefenseNewGetSimpleInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewGetSimpleInfoRsp)
}

void TTowerDefenseNewGetSimpleInfoRsp::InitAsDefaultInstance() {
}

TTowerDefenseNewGetSimpleInfoRsp::TTowerDefenseNewGetSimpleInfoRsp(const TTowerDefenseNewGetSimpleInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewGetSimpleInfoRsp)
}

void TTowerDefenseNewGetSimpleInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewGetSimpleInfoRsp::~TTowerDefenseNewGetSimpleInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewGetSimpleInfoRsp)
  SharedDtor();
}

void TTowerDefenseNewGetSimpleInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewGetSimpleInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewGetSimpleInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewGetSimpleInfoRsp_descriptor_;
}

const TTowerDefenseNewGetSimpleInfoRsp& TTowerDefenseNewGetSimpleInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewGetSimpleInfoRsp* TTowerDefenseNewGetSimpleInfoRsp::default_instance_ = NULL;

TTowerDefenseNewGetSimpleInfoRsp* TTowerDefenseNewGetSimpleInfoRsp::New() const {
  return new TTowerDefenseNewGetSimpleInfoRsp;
}

void TTowerDefenseNewGetSimpleInfoRsp::Clear() {
  arrsimpleinfo_.Clear();
  arrtypeinfo_.Clear();
  arractexchangeinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewGetSimpleInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewGetSimpleInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TTowerDefenseNewMapSimpleInfo ArrSimpleInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrSimpleInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrsimpleinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrSimpleInfo;
        if (input->ExpectTag(18)) goto parse_ArrTypeInfo;
        break;
      }

      // repeated .pb.TTowerDefenseNewMapTypeInfo ArrTypeInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrTypeInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtypeinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrTypeInfo;
        if (input->ExpectTag(26)) goto parse_ArrActExchangeInfo;
        break;
      }

      // repeated .pb.TTowerDefenseNewExchangeInfo ArrActExchangeInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_ArrActExchangeInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arractexchangeinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArrActExchangeInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewGetSimpleInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewGetSimpleInfoRsp)
  return false;
#undef DO_
}

void TTowerDefenseNewGetSimpleInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewGetSimpleInfoRsp)
  // repeated .pb.TTowerDefenseNewMapSimpleInfo ArrSimpleInfo = 1;
  for (int i = 0; i < this->arrsimpleinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrsimpleinfo(i), output);
  }

  // repeated .pb.TTowerDefenseNewMapTypeInfo ArrTypeInfo = 2;
  for (int i = 0; i < this->arrtypeinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrtypeinfo(i), output);
  }

  // repeated .pb.TTowerDefenseNewExchangeInfo ArrActExchangeInfo = 3;
  for (int i = 0; i < this->arractexchangeinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arractexchangeinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewGetSimpleInfoRsp)
}

::google::protobuf::uint8* TTowerDefenseNewGetSimpleInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewGetSimpleInfoRsp)
  // repeated .pb.TTowerDefenseNewMapSimpleInfo ArrSimpleInfo = 1;
  for (int i = 0; i < this->arrsimpleinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrsimpleinfo(i), target);
  }

  // repeated .pb.TTowerDefenseNewMapTypeInfo ArrTypeInfo = 2;
  for (int i = 0; i < this->arrtypeinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrtypeinfo(i), target);
  }

  // repeated .pb.TTowerDefenseNewExchangeInfo ArrActExchangeInfo = 3;
  for (int i = 0; i < this->arractexchangeinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->arractexchangeinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewGetSimpleInfoRsp)
  return target;
}

int TTowerDefenseNewGetSimpleInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TTowerDefenseNewMapSimpleInfo ArrSimpleInfo = 1;
  total_size += 1 * this->arrsimpleinfo_size();
  for (int i = 0; i < this->arrsimpleinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrsimpleinfo(i));
  }

  // repeated .pb.TTowerDefenseNewMapTypeInfo ArrTypeInfo = 2;
  total_size += 1 * this->arrtypeinfo_size();
  for (int i = 0; i < this->arrtypeinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtypeinfo(i));
  }

  // repeated .pb.TTowerDefenseNewExchangeInfo ArrActExchangeInfo = 3;
  total_size += 1 * this->arractexchangeinfo_size();
  for (int i = 0; i < this->arractexchangeinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arractexchangeinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewGetSimpleInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewGetSimpleInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewGetSimpleInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewGetSimpleInfoRsp::MergeFrom(const TTowerDefenseNewGetSimpleInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrsimpleinfo_.MergeFrom(from.arrsimpleinfo_);
  arrtypeinfo_.MergeFrom(from.arrtypeinfo_);
  arractexchangeinfo_.MergeFrom(from.arractexchangeinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewGetSimpleInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewGetSimpleInfoRsp::CopyFrom(const TTowerDefenseNewGetSimpleInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewGetSimpleInfoRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseNewGetSimpleInfoRsp::Swap(TTowerDefenseNewGetSimpleInfoRsp* other) {
  if (other != this) {
    arrsimpleinfo_.Swap(&other->arrsimpleinfo_);
    arrtypeinfo_.Swap(&other->arrtypeinfo_);
    arractexchangeinfo_.Swap(&other->arractexchangeinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewGetSimpleInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewGetSimpleInfoRsp_descriptor_;
  metadata.reflection = TTowerDefenseNewGetSimpleInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewGetInfoReq::kMapIdFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewGetInfoReq::TTowerDefenseNewGetInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewGetInfoReq)
}

void TTowerDefenseNewGetInfoReq::InitAsDefaultInstance() {
}

TTowerDefenseNewGetInfoReq::TTowerDefenseNewGetInfoReq(const TTowerDefenseNewGetInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewGetInfoReq)
}

void TTowerDefenseNewGetInfoReq::SharedCtor() {
  _cached_size_ = 0;
  mapid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewGetInfoReq::~TTowerDefenseNewGetInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewGetInfoReq)
  SharedDtor();
}

void TTowerDefenseNewGetInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewGetInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewGetInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewGetInfoReq_descriptor_;
}

const TTowerDefenseNewGetInfoReq& TTowerDefenseNewGetInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewGetInfoReq* TTowerDefenseNewGetInfoReq::default_instance_ = NULL;

TTowerDefenseNewGetInfoReq* TTowerDefenseNewGetInfoReq::New() const {
  return new TTowerDefenseNewGetInfoReq;
}

void TTowerDefenseNewGetInfoReq::Clear() {
  mapid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewGetInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewGetInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewGetInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewGetInfoReq)
  return false;
#undef DO_
}

void TTowerDefenseNewGetInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewGetInfoReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewGetInfoReq)
}

::google::protobuf::uint8* TTowerDefenseNewGetInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewGetInfoReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewGetInfoReq)
  return target;
}

int TTowerDefenseNewGetInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MapId = 1;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mapid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewGetInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewGetInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewGetInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewGetInfoReq::MergeFrom(const TTowerDefenseNewGetInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewGetInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewGetInfoReq::CopyFrom(const TTowerDefenseNewGetInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewGetInfoReq::IsInitialized() const {

  return true;
}

void TTowerDefenseNewGetInfoReq::Swap(TTowerDefenseNewGetInfoReq* other) {
  if (other != this) {
    std::swap(mapid_, other->mapid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewGetInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewGetInfoReq_descriptor_;
  metadata.reflection = TTowerDefenseNewGetInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewGetInfoRsp::kDetailInfoFieldNumber;
const int TTowerDefenseNewGetInfoRsp::kTypeInfoFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewGetInfoRsp::TTowerDefenseNewGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewGetInfoRsp)
}

void TTowerDefenseNewGetInfoRsp::InitAsDefaultInstance() {
  detailinfo_ = const_cast< ::pb::TTowerDefenseNewMapDetailInfo*>(&::pb::TTowerDefenseNewMapDetailInfo::default_instance());
  typeinfo_ = const_cast< ::pb::TTowerDefenseNewMapTypeInfo*>(&::pb::TTowerDefenseNewMapTypeInfo::default_instance());
}

TTowerDefenseNewGetInfoRsp::TTowerDefenseNewGetInfoRsp(const TTowerDefenseNewGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewGetInfoRsp)
}

void TTowerDefenseNewGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  detailinfo_ = NULL;
  typeinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewGetInfoRsp::~TTowerDefenseNewGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewGetInfoRsp)
  SharedDtor();
}

void TTowerDefenseNewGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
    delete detailinfo_;
    delete typeinfo_;
  }
}

void TTowerDefenseNewGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewGetInfoRsp_descriptor_;
}

const TTowerDefenseNewGetInfoRsp& TTowerDefenseNewGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewGetInfoRsp* TTowerDefenseNewGetInfoRsp::default_instance_ = NULL;

TTowerDefenseNewGetInfoRsp* TTowerDefenseNewGetInfoRsp::New() const {
  return new TTowerDefenseNewGetInfoRsp;
}

void TTowerDefenseNewGetInfoRsp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_detailinfo()) {
      if (detailinfo_ != NULL) detailinfo_->::pb::TTowerDefenseNewMapDetailInfo::Clear();
    }
    if (has_typeinfo()) {
      if (typeinfo_ != NULL) typeinfo_->::pb::TTowerDefenseNewMapTypeInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TTowerDefenseNewMapDetailInfo DetailInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_detailinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_TypeInfo;
        break;
      }

      // optional .pb.TTowerDefenseNewMapTypeInfo TypeInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_TypeInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_typeinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewGetInfoRsp)
  return false;
#undef DO_
}

void TTowerDefenseNewGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewGetInfoRsp)
  // optional .pb.TTowerDefenseNewMapDetailInfo DetailInfo = 1;
  if (has_detailinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->detailinfo(), output);
  }

  // optional .pb.TTowerDefenseNewMapTypeInfo TypeInfo = 2;
  if (has_typeinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->typeinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewGetInfoRsp)
}

::google::protobuf::uint8* TTowerDefenseNewGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewGetInfoRsp)
  // optional .pb.TTowerDefenseNewMapDetailInfo DetailInfo = 1;
  if (has_detailinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->detailinfo(), target);
  }

  // optional .pb.TTowerDefenseNewMapTypeInfo TypeInfo = 2;
  if (has_typeinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->typeinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewGetInfoRsp)
  return target;
}

int TTowerDefenseNewGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TTowerDefenseNewMapDetailInfo DetailInfo = 1;
    if (has_detailinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->detailinfo());
    }

    // optional .pb.TTowerDefenseNewMapTypeInfo TypeInfo = 2;
    if (has_typeinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->typeinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewGetInfoRsp::MergeFrom(const TTowerDefenseNewGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_detailinfo()) {
      mutable_detailinfo()->::pb::TTowerDefenseNewMapDetailInfo::MergeFrom(from.detailinfo());
    }
    if (from.has_typeinfo()) {
      mutable_typeinfo()->::pb::TTowerDefenseNewMapTypeInfo::MergeFrom(from.typeinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewGetInfoRsp::CopyFrom(const TTowerDefenseNewGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewGetInfoRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseNewGetInfoRsp::Swap(TTowerDefenseNewGetInfoRsp* other) {
  if (other != this) {
    std::swap(detailinfo_, other->detailinfo_);
    std::swap(typeinfo_, other->typeinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewGetInfoRsp_descriptor_;
  metadata.reflection = TTowerDefenseNewGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewSetPlotEndReq::kMapIdFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewSetPlotEndReq::TTowerDefenseNewSetPlotEndReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewSetPlotEndReq)
}

void TTowerDefenseNewSetPlotEndReq::InitAsDefaultInstance() {
}

TTowerDefenseNewSetPlotEndReq::TTowerDefenseNewSetPlotEndReq(const TTowerDefenseNewSetPlotEndReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewSetPlotEndReq)
}

void TTowerDefenseNewSetPlotEndReq::SharedCtor() {
  _cached_size_ = 0;
  mapid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewSetPlotEndReq::~TTowerDefenseNewSetPlotEndReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewSetPlotEndReq)
  SharedDtor();
}

void TTowerDefenseNewSetPlotEndReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewSetPlotEndReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewSetPlotEndReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewSetPlotEndReq_descriptor_;
}

const TTowerDefenseNewSetPlotEndReq& TTowerDefenseNewSetPlotEndReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewSetPlotEndReq* TTowerDefenseNewSetPlotEndReq::default_instance_ = NULL;

TTowerDefenseNewSetPlotEndReq* TTowerDefenseNewSetPlotEndReq::New() const {
  return new TTowerDefenseNewSetPlotEndReq;
}

void TTowerDefenseNewSetPlotEndReq::Clear() {
  mapid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewSetPlotEndReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewSetPlotEndReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewSetPlotEndReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewSetPlotEndReq)
  return false;
#undef DO_
}

void TTowerDefenseNewSetPlotEndReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewSetPlotEndReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewSetPlotEndReq)
}

::google::protobuf::uint8* TTowerDefenseNewSetPlotEndReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewSetPlotEndReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewSetPlotEndReq)
  return target;
}

int TTowerDefenseNewSetPlotEndReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MapId = 1;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mapid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewSetPlotEndReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewSetPlotEndReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewSetPlotEndReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewSetPlotEndReq::MergeFrom(const TTowerDefenseNewSetPlotEndReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewSetPlotEndReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewSetPlotEndReq::CopyFrom(const TTowerDefenseNewSetPlotEndReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewSetPlotEndReq::IsInitialized() const {

  return true;
}

void TTowerDefenseNewSetPlotEndReq::Swap(TTowerDefenseNewSetPlotEndReq* other) {
  if (other != this) {
    std::swap(mapid_, other->mapid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewSetPlotEndReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewSetPlotEndReq_descriptor_;
  metadata.reflection = TTowerDefenseNewSetPlotEndReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewSetFormationReq::kMapIdFieldNumber;
const int TTowerDefenseNewSetFormationReq::kArrFormationFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewSetFormationReq::TTowerDefenseNewSetFormationReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewSetFormationReq)
}

void TTowerDefenseNewSetFormationReq::InitAsDefaultInstance() {
}

TTowerDefenseNewSetFormationReq::TTowerDefenseNewSetFormationReq(const TTowerDefenseNewSetFormationReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewSetFormationReq)
}

void TTowerDefenseNewSetFormationReq::SharedCtor() {
  _cached_size_ = 0;
  mapid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewSetFormationReq::~TTowerDefenseNewSetFormationReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewSetFormationReq)
  SharedDtor();
}

void TTowerDefenseNewSetFormationReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewSetFormationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewSetFormationReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewSetFormationReq_descriptor_;
}

const TTowerDefenseNewSetFormationReq& TTowerDefenseNewSetFormationReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewSetFormationReq* TTowerDefenseNewSetFormationReq::default_instance_ = NULL;

TTowerDefenseNewSetFormationReq* TTowerDefenseNewSetFormationReq::New() const {
  return new TTowerDefenseNewSetFormationReq;
}

void TTowerDefenseNewSetFormationReq::Clear() {
  mapid_ = 0u;
  arrformation_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewSetFormationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewSetFormationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrFormation;
        break;
      }

      // repeated .pb.TUnitFormation ArrFormation = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrFormation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrformation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrFormation;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewSetFormationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewSetFormationReq)
  return false;
#undef DO_
}

void TTowerDefenseNewSetFormationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewSetFormationReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  // repeated .pb.TUnitFormation ArrFormation = 2;
  for (int i = 0; i < this->arrformation_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrformation(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewSetFormationReq)
}

::google::protobuf::uint8* TTowerDefenseNewSetFormationReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewSetFormationReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  // repeated .pb.TUnitFormation ArrFormation = 2;
  for (int i = 0; i < this->arrformation_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrformation(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewSetFormationReq)
  return target;
}

int TTowerDefenseNewSetFormationReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MapId = 1;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mapid());
    }

  }
  // repeated .pb.TUnitFormation ArrFormation = 2;
  total_size += 1 * this->arrformation_size();
  for (int i = 0; i < this->arrformation_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrformation(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewSetFormationReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewSetFormationReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewSetFormationReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewSetFormationReq::MergeFrom(const TTowerDefenseNewSetFormationReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrformation_.MergeFrom(from.arrformation_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewSetFormationReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewSetFormationReq::CopyFrom(const TTowerDefenseNewSetFormationReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewSetFormationReq::IsInitialized() const {

  return true;
}

void TTowerDefenseNewSetFormationReq::Swap(TTowerDefenseNewSetFormationReq* other) {
  if (other != this) {
    std::swap(mapid_, other->mapid_);
    arrformation_.Swap(&other->arrformation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewSetFormationReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewSetFormationReq_descriptor_;
  metadata.reflection = TTowerDefenseNewSetFormationReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewDoBattleReq::kMapIdFieldNumber;
const int TTowerDefenseNewDoBattleReq::kBattleCheckParamFieldNumber;
const int TTowerDefenseNewDoBattleReq::kRoundNumFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewDoBattleReq::TTowerDefenseNewDoBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewDoBattleReq)
}

void TTowerDefenseNewDoBattleReq::InitAsDefaultInstance() {
  battlecheckparam_ = const_cast< ::pb::TBattleCheckParam*>(&::pb::TBattleCheckParam::default_instance());
}

TTowerDefenseNewDoBattleReq::TTowerDefenseNewDoBattleReq(const TTowerDefenseNewDoBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewDoBattleReq)
}

void TTowerDefenseNewDoBattleReq::SharedCtor() {
  _cached_size_ = 0;
  mapid_ = 0u;
  battlecheckparam_ = NULL;
  roundnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewDoBattleReq::~TTowerDefenseNewDoBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewDoBattleReq)
  SharedDtor();
}

void TTowerDefenseNewDoBattleReq::SharedDtor() {
  if (this != default_instance_) {
    delete battlecheckparam_;
  }
}

void TTowerDefenseNewDoBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewDoBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewDoBattleReq_descriptor_;
}

const TTowerDefenseNewDoBattleReq& TTowerDefenseNewDoBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewDoBattleReq* TTowerDefenseNewDoBattleReq::default_instance_ = NULL;

TTowerDefenseNewDoBattleReq* TTowerDefenseNewDoBattleReq::New() const {
  return new TTowerDefenseNewDoBattleReq;
}

void TTowerDefenseNewDoBattleReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseNewDoBattleReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(mapid_, roundnum_);
    if (has_battlecheckparam()) {
      if (battlecheckparam_ != NULL) battlecheckparam_->::pb::TBattleCheckParam::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewDoBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewDoBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BattleCheckParam;
        break;
      }

      // optional .pb.TBattleCheckParam BattleCheckParam = 2;
      case 2: {
        if (tag == 18) {
         parse_BattleCheckParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battlecheckparam()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RoundNum;
        break;
      }

      // optional uint32 RoundNum = 3;
      case 3: {
        if (tag == 24) {
         parse_RoundNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roundnum_)));
          set_has_roundnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewDoBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewDoBattleReq)
  return false;
#undef DO_
}

void TTowerDefenseNewDoBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewDoBattleReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  // optional .pb.TBattleCheckParam BattleCheckParam = 2;
  if (has_battlecheckparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->battlecheckparam(), output);
  }

  // optional uint32 RoundNum = 3;
  if (has_roundnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->roundnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewDoBattleReq)
}

::google::protobuf::uint8* TTowerDefenseNewDoBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewDoBattleReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  // optional .pb.TBattleCheckParam BattleCheckParam = 2;
  if (has_battlecheckparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->battlecheckparam(), target);
  }

  // optional uint32 RoundNum = 3;
  if (has_roundnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->roundnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewDoBattleReq)
  return target;
}

int TTowerDefenseNewDoBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MapId = 1;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mapid());
    }

    // optional .pb.TBattleCheckParam BattleCheckParam = 2;
    if (has_battlecheckparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battlecheckparam());
    }

    // optional uint32 RoundNum = 3;
    if (has_roundnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roundnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewDoBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewDoBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewDoBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewDoBattleReq::MergeFrom(const TTowerDefenseNewDoBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
    if (from.has_battlecheckparam()) {
      mutable_battlecheckparam()->::pb::TBattleCheckParam::MergeFrom(from.battlecheckparam());
    }
    if (from.has_roundnum()) {
      set_roundnum(from.roundnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewDoBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewDoBattleReq::CopyFrom(const TTowerDefenseNewDoBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewDoBattleReq::IsInitialized() const {

  return true;
}

void TTowerDefenseNewDoBattleReq::Swap(TTowerDefenseNewDoBattleReq* other) {
  if (other != this) {
    std::swap(mapid_, other->mapid_);
    std::swap(battlecheckparam_, other->battlecheckparam_);
    std::swap(roundnum_, other->roundnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewDoBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewDoBattleReq_descriptor_;
  metadata.reflection = TTowerDefenseNewDoBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewDoBattleRsp::kWavesDropArrayFieldNumber;
const int TTowerDefenseNewDoBattleRsp::kBattleArgsDataFieldNumber;
const int TTowerDefenseNewDoBattleRsp::kRoundNumFieldNumber;
const int TTowerDefenseNewDoBattleRsp::kBattleIdFieldNumber;
const int TTowerDefenseNewDoBattleRsp::kArrBuffInfoFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewDoBattleRsp::TTowerDefenseNewDoBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewDoBattleRsp)
}

void TTowerDefenseNewDoBattleRsp::InitAsDefaultInstance() {
}

TTowerDefenseNewDoBattleRsp::TTowerDefenseNewDoBattleRsp(const TTowerDefenseNewDoBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewDoBattleRsp)
}

void TTowerDefenseNewDoBattleRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  battleargsdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roundnum_ = 0u;
  battleid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewDoBattleRsp::~TTowerDefenseNewDoBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewDoBattleRsp)
  SharedDtor();
}

void TTowerDefenseNewDoBattleRsp::SharedDtor() {
  if (battleargsdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleargsdata_;
  }
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewDoBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewDoBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewDoBattleRsp_descriptor_;
}

const TTowerDefenseNewDoBattleRsp& TTowerDefenseNewDoBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewDoBattleRsp* TTowerDefenseNewDoBattleRsp::default_instance_ = NULL;

TTowerDefenseNewDoBattleRsp* TTowerDefenseNewDoBattleRsp::New() const {
  return new TTowerDefenseNewDoBattleRsp;
}

void TTowerDefenseNewDoBattleRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseNewDoBattleRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 14) {
    ZR_(roundnum_, battleid_);
    if (has_battleargsdata()) {
      if (battleargsdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        battleargsdata_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  wavesdroparray_.Clear();
  arrbuffinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewDoBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewDoBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TTowerDefenseNewWaveDropInfo WavesDropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_WavesDropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wavesdroparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_WavesDropArray;
        if (input->ExpectTag(18)) goto parse_BattleArgsData;
        break;
      }

      // optional bytes BattleArgsData = 2;
      case 2: {
        if (tag == 18) {
         parse_BattleArgsData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_battleargsdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RoundNum;
        break;
      }

      // optional uint32 RoundNum = 3;
      case 3: {
        if (tag == 24) {
         parse_RoundNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roundnum_)));
          set_has_roundnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_BattleId;
        break;
      }

      // optional uint32 BattleId = 4;
      case 4: {
        if (tag == 32) {
         parse_BattleId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battleid_)));
          set_has_battleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ArrBuffInfo;
        break;
      }

      // repeated .pb.TTowerDefenseNewBuffInfo ArrBuffInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_ArrBuffInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrbuffinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ArrBuffInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewDoBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewDoBattleRsp)
  return false;
#undef DO_
}

void TTowerDefenseNewDoBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewDoBattleRsp)
  // repeated .pb.TTowerDefenseNewWaveDropInfo WavesDropArray = 1;
  for (int i = 0; i < this->wavesdroparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->wavesdroparray(i), output);
  }

  // optional bytes BattleArgsData = 2;
  if (has_battleargsdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->battleargsdata(), output);
  }

  // optional uint32 RoundNum = 3;
  if (has_roundnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->roundnum(), output);
  }

  // optional uint32 BattleId = 4;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->battleid(), output);
  }

  // repeated .pb.TTowerDefenseNewBuffInfo ArrBuffInfo = 5;
  for (int i = 0; i < this->arrbuffinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->arrbuffinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewDoBattleRsp)
}

::google::protobuf::uint8* TTowerDefenseNewDoBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewDoBattleRsp)
  // repeated .pb.TTowerDefenseNewWaveDropInfo WavesDropArray = 1;
  for (int i = 0; i < this->wavesdroparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->wavesdroparray(i), target);
  }

  // optional bytes BattleArgsData = 2;
  if (has_battleargsdata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->battleargsdata(), target);
  }

  // optional uint32 RoundNum = 3;
  if (has_roundnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->roundnum(), target);
  }

  // optional uint32 BattleId = 4;
  if (has_battleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->battleid(), target);
  }

  // repeated .pb.TTowerDefenseNewBuffInfo ArrBuffInfo = 5;
  for (int i = 0; i < this->arrbuffinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->arrbuffinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewDoBattleRsp)
  return target;
}

int TTowerDefenseNewDoBattleRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional bytes BattleArgsData = 2;
    if (has_battleargsdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->battleargsdata());
    }

    // optional uint32 RoundNum = 3;
    if (has_roundnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roundnum());
    }

    // optional uint32 BattleId = 4;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->battleid());
    }

  }
  // repeated .pb.TTowerDefenseNewWaveDropInfo WavesDropArray = 1;
  total_size += 1 * this->wavesdroparray_size();
  for (int i = 0; i < this->wavesdroparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->wavesdroparray(i));
  }

  // repeated .pb.TTowerDefenseNewBuffInfo ArrBuffInfo = 5;
  total_size += 1 * this->arrbuffinfo_size();
  for (int i = 0; i < this->arrbuffinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrbuffinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewDoBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewDoBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewDoBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewDoBattleRsp::MergeFrom(const TTowerDefenseNewDoBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  wavesdroparray_.MergeFrom(from.wavesdroparray_);
  arrbuffinfo_.MergeFrom(from.arrbuffinfo_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_battleargsdata()) {
      set_battleargsdata(from.battleargsdata());
    }
    if (from.has_roundnum()) {
      set_roundnum(from.roundnum());
    }
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewDoBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewDoBattleRsp::CopyFrom(const TTowerDefenseNewDoBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewDoBattleRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseNewDoBattleRsp::Swap(TTowerDefenseNewDoBattleRsp* other) {
  if (other != this) {
    wavesdroparray_.Swap(&other->wavesdroparray_);
    std::swap(battleargsdata_, other->battleargsdata_);
    std::swap(roundnum_, other->roundnum_);
    std::swap(battleid_, other->battleid_);
    arrbuffinfo_.Swap(&other->arrbuffinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewDoBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewDoBattleRsp_descriptor_;
  metadata.reflection = TTowerDefenseNewDoBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewReportBattleReq::kMapIdFieldNumber;
const int TTowerDefenseNewReportBattleReq::kBattleResultBytesFieldNumber;
const int TTowerDefenseNewReportBattleReq::kRoundNumFieldNumber;
const int TTowerDefenseNewReportBattleReq::kBattleIdFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewReportBattleReq::TTowerDefenseNewReportBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewReportBattleReq)
}

void TTowerDefenseNewReportBattleReq::InitAsDefaultInstance() {
}

TTowerDefenseNewReportBattleReq::TTowerDefenseNewReportBattleReq(const TTowerDefenseNewReportBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewReportBattleReq)
}

void TTowerDefenseNewReportBattleReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  mapid_ = 0u;
  battleresultbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roundnum_ = 0u;
  battleid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewReportBattleReq::~TTowerDefenseNewReportBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewReportBattleReq)
  SharedDtor();
}

void TTowerDefenseNewReportBattleReq::SharedDtor() {
  if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleresultbytes_;
  }
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewReportBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewReportBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewReportBattleReq_descriptor_;
}

const TTowerDefenseNewReportBattleReq& TTowerDefenseNewReportBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewReportBattleReq* TTowerDefenseNewReportBattleReq::default_instance_ = NULL;

TTowerDefenseNewReportBattleReq* TTowerDefenseNewReportBattleReq::New() const {
  return new TTowerDefenseNewReportBattleReq;
}

void TTowerDefenseNewReportBattleReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseNewReportBattleReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(mapid_, battleid_);
    if (has_battleresultbytes()) {
      if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        battleresultbytes_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewReportBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewReportBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BattleResultBytes;
        break;
      }

      // optional bytes BattleResultBytes = 2;
      case 2: {
        if (tag == 18) {
         parse_BattleResultBytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_battleresultbytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RoundNum;
        break;
      }

      // optional uint32 RoundNum = 3;
      case 3: {
        if (tag == 24) {
         parse_RoundNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roundnum_)));
          set_has_roundnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_BattleId;
        break;
      }

      // optional uint32 BattleId = 4;
      case 4: {
        if (tag == 32) {
         parse_BattleId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battleid_)));
          set_has_battleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewReportBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewReportBattleReq)
  return false;
#undef DO_
}

void TTowerDefenseNewReportBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewReportBattleReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  // optional bytes BattleResultBytes = 2;
  if (has_battleresultbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->battleresultbytes(), output);
  }

  // optional uint32 RoundNum = 3;
  if (has_roundnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->roundnum(), output);
  }

  // optional uint32 BattleId = 4;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->battleid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewReportBattleReq)
}

::google::protobuf::uint8* TTowerDefenseNewReportBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewReportBattleReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  // optional bytes BattleResultBytes = 2;
  if (has_battleresultbytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->battleresultbytes(), target);
  }

  // optional uint32 RoundNum = 3;
  if (has_roundnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->roundnum(), target);
  }

  // optional uint32 BattleId = 4;
  if (has_battleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->battleid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewReportBattleReq)
  return target;
}

int TTowerDefenseNewReportBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MapId = 1;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mapid());
    }

    // optional bytes BattleResultBytes = 2;
    if (has_battleresultbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->battleresultbytes());
    }

    // optional uint32 RoundNum = 3;
    if (has_roundnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roundnum());
    }

    // optional uint32 BattleId = 4;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->battleid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewReportBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewReportBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewReportBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewReportBattleReq::MergeFrom(const TTowerDefenseNewReportBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
    if (from.has_battleresultbytes()) {
      set_battleresultbytes(from.battleresultbytes());
    }
    if (from.has_roundnum()) {
      set_roundnum(from.roundnum());
    }
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewReportBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewReportBattleReq::CopyFrom(const TTowerDefenseNewReportBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewReportBattleReq::IsInitialized() const {

  return true;
}

void TTowerDefenseNewReportBattleReq::Swap(TTowerDefenseNewReportBattleReq* other) {
  if (other != this) {
    std::swap(mapid_, other->mapid_);
    std::swap(battleresultbytes_, other->battleresultbytes_);
    std::swap(roundnum_, other->roundnum_);
    std::swap(battleid_, other->battleid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewReportBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewReportBattleReq_descriptor_;
  metadata.reflection = TTowerDefenseNewReportBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewReportBattleRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewReportBattleRsp::TTowerDefenseNewReportBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewReportBattleRsp)
}

void TTowerDefenseNewReportBattleRsp::InitAsDefaultInstance() {
}

TTowerDefenseNewReportBattleRsp::TTowerDefenseNewReportBattleRsp(const TTowerDefenseNewReportBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewReportBattleRsp)
}

void TTowerDefenseNewReportBattleRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewReportBattleRsp::~TTowerDefenseNewReportBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewReportBattleRsp)
  SharedDtor();
}

void TTowerDefenseNewReportBattleRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewReportBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewReportBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewReportBattleRsp_descriptor_;
}

const TTowerDefenseNewReportBattleRsp& TTowerDefenseNewReportBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewReportBattleRsp* TTowerDefenseNewReportBattleRsp::default_instance_ = NULL;

TTowerDefenseNewReportBattleRsp* TTowerDefenseNewReportBattleRsp::New() const {
  return new TTowerDefenseNewReportBattleRsp;
}

void TTowerDefenseNewReportBattleRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewReportBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewReportBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewReportBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewReportBattleRsp)
  return false;
#undef DO_
}

void TTowerDefenseNewReportBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewReportBattleRsp)
}

::google::protobuf::uint8* TTowerDefenseNewReportBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewReportBattleRsp)
  return target;
}

int TTowerDefenseNewReportBattleRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewReportBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewReportBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewReportBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewReportBattleRsp::MergeFrom(const TTowerDefenseNewReportBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewReportBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewReportBattleRsp::CopyFrom(const TTowerDefenseNewReportBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewReportBattleRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseNewReportBattleRsp::Swap(TTowerDefenseNewReportBattleRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewReportBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewReportBattleRsp_descriptor_;
  metadata.reflection = TTowerDefenseNewReportBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewEndBattleReq::kMapIdFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewEndBattleReq::TTowerDefenseNewEndBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewEndBattleReq)
}

void TTowerDefenseNewEndBattleReq::InitAsDefaultInstance() {
}

TTowerDefenseNewEndBattleReq::TTowerDefenseNewEndBattleReq(const TTowerDefenseNewEndBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewEndBattleReq)
}

void TTowerDefenseNewEndBattleReq::SharedCtor() {
  _cached_size_ = 0;
  mapid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewEndBattleReq::~TTowerDefenseNewEndBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewEndBattleReq)
  SharedDtor();
}

void TTowerDefenseNewEndBattleReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewEndBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewEndBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewEndBattleReq_descriptor_;
}

const TTowerDefenseNewEndBattleReq& TTowerDefenseNewEndBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewEndBattleReq* TTowerDefenseNewEndBattleReq::default_instance_ = NULL;

TTowerDefenseNewEndBattleReq* TTowerDefenseNewEndBattleReq::New() const {
  return new TTowerDefenseNewEndBattleReq;
}

void TTowerDefenseNewEndBattleReq::Clear() {
  mapid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewEndBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewEndBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewEndBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewEndBattleReq)
  return false;
#undef DO_
}

void TTowerDefenseNewEndBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewEndBattleReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewEndBattleReq)
}

::google::protobuf::uint8* TTowerDefenseNewEndBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewEndBattleReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewEndBattleReq)
  return target;
}

int TTowerDefenseNewEndBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MapId = 1;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mapid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewEndBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewEndBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewEndBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewEndBattleReq::MergeFrom(const TTowerDefenseNewEndBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewEndBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewEndBattleReq::CopyFrom(const TTowerDefenseNewEndBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewEndBattleReq::IsInitialized() const {

  return true;
}

void TTowerDefenseNewEndBattleReq::Swap(TTowerDefenseNewEndBattleReq* other) {
  if (other != this) {
    std::swap(mapid_, other->mapid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewEndBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewEndBattleReq_descriptor_;
  metadata.reflection = TTowerDefenseNewEndBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewEndBattleRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewEndBattleRsp::TTowerDefenseNewEndBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewEndBattleRsp)
}

void TTowerDefenseNewEndBattleRsp::InitAsDefaultInstance() {
}

TTowerDefenseNewEndBattleRsp::TTowerDefenseNewEndBattleRsp(const TTowerDefenseNewEndBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewEndBattleRsp)
}

void TTowerDefenseNewEndBattleRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewEndBattleRsp::~TTowerDefenseNewEndBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewEndBattleRsp)
  SharedDtor();
}

void TTowerDefenseNewEndBattleRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewEndBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewEndBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewEndBattleRsp_descriptor_;
}

const TTowerDefenseNewEndBattleRsp& TTowerDefenseNewEndBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewEndBattleRsp* TTowerDefenseNewEndBattleRsp::default_instance_ = NULL;

TTowerDefenseNewEndBattleRsp* TTowerDefenseNewEndBattleRsp::New() const {
  return new TTowerDefenseNewEndBattleRsp;
}

void TTowerDefenseNewEndBattleRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewEndBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewEndBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewEndBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewEndBattleRsp)
  return false;
#undef DO_
}

void TTowerDefenseNewEndBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewEndBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewEndBattleRsp)
}

::google::protobuf::uint8* TTowerDefenseNewEndBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewEndBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewEndBattleRsp)
  return target;
}

int TTowerDefenseNewEndBattleRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewEndBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewEndBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewEndBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewEndBattleRsp::MergeFrom(const TTowerDefenseNewEndBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewEndBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewEndBattleRsp::CopyFrom(const TTowerDefenseNewEndBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewEndBattleRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseNewEndBattleRsp::Swap(TTowerDefenseNewEndBattleRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewEndBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewEndBattleRsp_descriptor_;
  metadata.reflection = TTowerDefenseNewEndBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewReceiveAchievementRewardReq::kMapIdFieldNumber;
const int TTowerDefenseNewReceiveAchievementRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewReceiveAchievementRewardReq::TTowerDefenseNewReceiveAchievementRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewReceiveAchievementRewardReq)
}

void TTowerDefenseNewReceiveAchievementRewardReq::InitAsDefaultInstance() {
}

TTowerDefenseNewReceiveAchievementRewardReq::TTowerDefenseNewReceiveAchievementRewardReq(const TTowerDefenseNewReceiveAchievementRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewReceiveAchievementRewardReq)
}

void TTowerDefenseNewReceiveAchievementRewardReq::SharedCtor() {
  _cached_size_ = 0;
  mapid_ = 0u;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewReceiveAchievementRewardReq::~TTowerDefenseNewReceiveAchievementRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewReceiveAchievementRewardReq)
  SharedDtor();
}

void TTowerDefenseNewReceiveAchievementRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewReceiveAchievementRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewReceiveAchievementRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewReceiveAchievementRewardReq_descriptor_;
}

const TTowerDefenseNewReceiveAchievementRewardReq& TTowerDefenseNewReceiveAchievementRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewReceiveAchievementRewardReq* TTowerDefenseNewReceiveAchievementRewardReq::default_instance_ = NULL;

TTowerDefenseNewReceiveAchievementRewardReq* TTowerDefenseNewReceiveAchievementRewardReq::New() const {
  return new TTowerDefenseNewReceiveAchievementRewardReq;
}

void TTowerDefenseNewReceiveAchievementRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseNewReceiveAchievementRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(mapid_, id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewReceiveAchievementRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewReceiveAchievementRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Id;
        break;
      }

      // optional uint32 Id = 2;
      case 2: {
        if (tag == 16) {
         parse_Id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewReceiveAchievementRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewReceiveAchievementRewardReq)
  return false;
#undef DO_
}

void TTowerDefenseNewReceiveAchievementRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewReceiveAchievementRewardReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  // optional uint32 Id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewReceiveAchievementRewardReq)
}

::google::protobuf::uint8* TTowerDefenseNewReceiveAchievementRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewReceiveAchievementRewardReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  // optional uint32 Id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewReceiveAchievementRewardReq)
  return target;
}

int TTowerDefenseNewReceiveAchievementRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MapId = 1;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mapid());
    }

    // optional uint32 Id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewReceiveAchievementRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewReceiveAchievementRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewReceiveAchievementRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewReceiveAchievementRewardReq::MergeFrom(const TTowerDefenseNewReceiveAchievementRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewReceiveAchievementRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewReceiveAchievementRewardReq::CopyFrom(const TTowerDefenseNewReceiveAchievementRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewReceiveAchievementRewardReq::IsInitialized() const {

  return true;
}

void TTowerDefenseNewReceiveAchievementRewardReq::Swap(TTowerDefenseNewReceiveAchievementRewardReq* other) {
  if (other != this) {
    std::swap(mapid_, other->mapid_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewReceiveAchievementRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewReceiveAchievementRewardReq_descriptor_;
  metadata.reflection = TTowerDefenseNewReceiveAchievementRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewReceiveAchievementRewardRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewReceiveAchievementRewardRsp::TTowerDefenseNewReceiveAchievementRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewReceiveAchievementRewardRsp)
}

void TTowerDefenseNewReceiveAchievementRewardRsp::InitAsDefaultInstance() {
}

TTowerDefenseNewReceiveAchievementRewardRsp::TTowerDefenseNewReceiveAchievementRewardRsp(const TTowerDefenseNewReceiveAchievementRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewReceiveAchievementRewardRsp)
}

void TTowerDefenseNewReceiveAchievementRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewReceiveAchievementRewardRsp::~TTowerDefenseNewReceiveAchievementRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewReceiveAchievementRewardRsp)
  SharedDtor();
}

void TTowerDefenseNewReceiveAchievementRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewReceiveAchievementRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewReceiveAchievementRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewReceiveAchievementRewardRsp_descriptor_;
}

const TTowerDefenseNewReceiveAchievementRewardRsp& TTowerDefenseNewReceiveAchievementRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewReceiveAchievementRewardRsp* TTowerDefenseNewReceiveAchievementRewardRsp::default_instance_ = NULL;

TTowerDefenseNewReceiveAchievementRewardRsp* TTowerDefenseNewReceiveAchievementRewardRsp::New() const {
  return new TTowerDefenseNewReceiveAchievementRewardRsp;
}

void TTowerDefenseNewReceiveAchievementRewardRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewReceiveAchievementRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewReceiveAchievementRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewReceiveAchievementRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewReceiveAchievementRewardRsp)
  return false;
#undef DO_
}

void TTowerDefenseNewReceiveAchievementRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewReceiveAchievementRewardRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewReceiveAchievementRewardRsp)
}

::google::protobuf::uint8* TTowerDefenseNewReceiveAchievementRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewReceiveAchievementRewardRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewReceiveAchievementRewardRsp)
  return target;
}

int TTowerDefenseNewReceiveAchievementRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewReceiveAchievementRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewReceiveAchievementRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewReceiveAchievementRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewReceiveAchievementRewardRsp::MergeFrom(const TTowerDefenseNewReceiveAchievementRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewReceiveAchievementRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewReceiveAchievementRewardRsp::CopyFrom(const TTowerDefenseNewReceiveAchievementRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewReceiveAchievementRewardRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseNewReceiveAchievementRewardRsp::Swap(TTowerDefenseNewReceiveAchievementRewardRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewReceiveAchievementRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewReceiveAchievementRewardRsp_descriptor_;
  metadata.reflection = TTowerDefenseNewReceiveAchievementRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewReceiveAllAchievementRewardReq::kMapIdFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewReceiveAllAchievementRewardReq::TTowerDefenseNewReceiveAllAchievementRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewReceiveAllAchievementRewardReq)
}

void TTowerDefenseNewReceiveAllAchievementRewardReq::InitAsDefaultInstance() {
}

TTowerDefenseNewReceiveAllAchievementRewardReq::TTowerDefenseNewReceiveAllAchievementRewardReq(const TTowerDefenseNewReceiveAllAchievementRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewReceiveAllAchievementRewardReq)
}

void TTowerDefenseNewReceiveAllAchievementRewardReq::SharedCtor() {
  _cached_size_ = 0;
  mapid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewReceiveAllAchievementRewardReq::~TTowerDefenseNewReceiveAllAchievementRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewReceiveAllAchievementRewardReq)
  SharedDtor();
}

void TTowerDefenseNewReceiveAllAchievementRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewReceiveAllAchievementRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewReceiveAllAchievementRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewReceiveAllAchievementRewardReq_descriptor_;
}

const TTowerDefenseNewReceiveAllAchievementRewardReq& TTowerDefenseNewReceiveAllAchievementRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewReceiveAllAchievementRewardReq* TTowerDefenseNewReceiveAllAchievementRewardReq::default_instance_ = NULL;

TTowerDefenseNewReceiveAllAchievementRewardReq* TTowerDefenseNewReceiveAllAchievementRewardReq::New() const {
  return new TTowerDefenseNewReceiveAllAchievementRewardReq;
}

void TTowerDefenseNewReceiveAllAchievementRewardReq::Clear() {
  mapid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewReceiveAllAchievementRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewReceiveAllAchievementRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewReceiveAllAchievementRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewReceiveAllAchievementRewardReq)
  return false;
#undef DO_
}

void TTowerDefenseNewReceiveAllAchievementRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewReceiveAllAchievementRewardReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewReceiveAllAchievementRewardReq)
}

::google::protobuf::uint8* TTowerDefenseNewReceiveAllAchievementRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewReceiveAllAchievementRewardReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewReceiveAllAchievementRewardReq)
  return target;
}

int TTowerDefenseNewReceiveAllAchievementRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MapId = 1;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mapid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewReceiveAllAchievementRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewReceiveAllAchievementRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewReceiveAllAchievementRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewReceiveAllAchievementRewardReq::MergeFrom(const TTowerDefenseNewReceiveAllAchievementRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewReceiveAllAchievementRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewReceiveAllAchievementRewardReq::CopyFrom(const TTowerDefenseNewReceiveAllAchievementRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewReceiveAllAchievementRewardReq::IsInitialized() const {

  return true;
}

void TTowerDefenseNewReceiveAllAchievementRewardReq::Swap(TTowerDefenseNewReceiveAllAchievementRewardReq* other) {
  if (other != this) {
    std::swap(mapid_, other->mapid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewReceiveAllAchievementRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewReceiveAllAchievementRewardReq_descriptor_;
  metadata.reflection = TTowerDefenseNewReceiveAllAchievementRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewReceiveAllAchievementRewardRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewReceiveAllAchievementRewardRsp::TTowerDefenseNewReceiveAllAchievementRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewReceiveAllAchievementRewardRsp)
}

void TTowerDefenseNewReceiveAllAchievementRewardRsp::InitAsDefaultInstance() {
}

TTowerDefenseNewReceiveAllAchievementRewardRsp::TTowerDefenseNewReceiveAllAchievementRewardRsp(const TTowerDefenseNewReceiveAllAchievementRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewReceiveAllAchievementRewardRsp)
}

void TTowerDefenseNewReceiveAllAchievementRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewReceiveAllAchievementRewardRsp::~TTowerDefenseNewReceiveAllAchievementRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewReceiveAllAchievementRewardRsp)
  SharedDtor();
}

void TTowerDefenseNewReceiveAllAchievementRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewReceiveAllAchievementRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewReceiveAllAchievementRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewReceiveAllAchievementRewardRsp_descriptor_;
}

const TTowerDefenseNewReceiveAllAchievementRewardRsp& TTowerDefenseNewReceiveAllAchievementRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewReceiveAllAchievementRewardRsp* TTowerDefenseNewReceiveAllAchievementRewardRsp::default_instance_ = NULL;

TTowerDefenseNewReceiveAllAchievementRewardRsp* TTowerDefenseNewReceiveAllAchievementRewardRsp::New() const {
  return new TTowerDefenseNewReceiveAllAchievementRewardRsp;
}

void TTowerDefenseNewReceiveAllAchievementRewardRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewReceiveAllAchievementRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewReceiveAllAchievementRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 2;
      case 2: {
        if (tag == 18) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewReceiveAllAchievementRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewReceiveAllAchievementRewardRsp)
  return false;
#undef DO_
}

void TTowerDefenseNewReceiveAllAchievementRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewReceiveAllAchievementRewardRsp)
  // repeated .pb.TCommonReward DropArray = 2;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewReceiveAllAchievementRewardRsp)
}

::google::protobuf::uint8* TTowerDefenseNewReceiveAllAchievementRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewReceiveAllAchievementRewardRsp)
  // repeated .pb.TCommonReward DropArray = 2;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewReceiveAllAchievementRewardRsp)
  return target;
}

int TTowerDefenseNewReceiveAllAchievementRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 2;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewReceiveAllAchievementRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewReceiveAllAchievementRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewReceiveAllAchievementRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewReceiveAllAchievementRewardRsp::MergeFrom(const TTowerDefenseNewReceiveAllAchievementRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewReceiveAllAchievementRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewReceiveAllAchievementRewardRsp::CopyFrom(const TTowerDefenseNewReceiveAllAchievementRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewReceiveAllAchievementRewardRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseNewReceiveAllAchievementRewardRsp::Swap(TTowerDefenseNewReceiveAllAchievementRewardRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewReceiveAllAchievementRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewReceiveAllAchievementRewardRsp_descriptor_;
  metadata.reflection = TTowerDefenseNewReceiveAllAchievementRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewSweepMapReq::kMapIdFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewSweepMapReq::TTowerDefenseNewSweepMapReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewSweepMapReq)
}

void TTowerDefenseNewSweepMapReq::InitAsDefaultInstance() {
}

TTowerDefenseNewSweepMapReq::TTowerDefenseNewSweepMapReq(const TTowerDefenseNewSweepMapReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewSweepMapReq)
}

void TTowerDefenseNewSweepMapReq::SharedCtor() {
  _cached_size_ = 0;
  mapid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewSweepMapReq::~TTowerDefenseNewSweepMapReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewSweepMapReq)
  SharedDtor();
}

void TTowerDefenseNewSweepMapReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewSweepMapReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewSweepMapReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewSweepMapReq_descriptor_;
}

const TTowerDefenseNewSweepMapReq& TTowerDefenseNewSweepMapReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewSweepMapReq* TTowerDefenseNewSweepMapReq::default_instance_ = NULL;

TTowerDefenseNewSweepMapReq* TTowerDefenseNewSweepMapReq::New() const {
  return new TTowerDefenseNewSweepMapReq;
}

void TTowerDefenseNewSweepMapReq::Clear() {
  mapid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewSweepMapReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewSweepMapReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewSweepMapReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewSweepMapReq)
  return false;
#undef DO_
}

void TTowerDefenseNewSweepMapReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewSweepMapReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewSweepMapReq)
}

::google::protobuf::uint8* TTowerDefenseNewSweepMapReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewSweepMapReq)
  // optional uint32 MapId = 1;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewSweepMapReq)
  return target;
}

int TTowerDefenseNewSweepMapReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MapId = 1;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mapid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewSweepMapReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewSweepMapReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewSweepMapReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewSweepMapReq::MergeFrom(const TTowerDefenseNewSweepMapReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewSweepMapReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewSweepMapReq::CopyFrom(const TTowerDefenseNewSweepMapReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewSweepMapReq::IsInitialized() const {

  return true;
}

void TTowerDefenseNewSweepMapReq::Swap(TTowerDefenseNewSweepMapReq* other) {
  if (other != this) {
    std::swap(mapid_, other->mapid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewSweepMapReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewSweepMapReq_descriptor_;
  metadata.reflection = TTowerDefenseNewSweepMapReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewSweepMapRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewSweepMapRsp::TTowerDefenseNewSweepMapRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewSweepMapRsp)
}

void TTowerDefenseNewSweepMapRsp::InitAsDefaultInstance() {
}

TTowerDefenseNewSweepMapRsp::TTowerDefenseNewSweepMapRsp(const TTowerDefenseNewSweepMapRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewSweepMapRsp)
}

void TTowerDefenseNewSweepMapRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewSweepMapRsp::~TTowerDefenseNewSweepMapRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewSweepMapRsp)
  SharedDtor();
}

void TTowerDefenseNewSweepMapRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewSweepMapRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewSweepMapRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewSweepMapRsp_descriptor_;
}

const TTowerDefenseNewSweepMapRsp& TTowerDefenseNewSweepMapRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewSweepMapRsp* TTowerDefenseNewSweepMapRsp::default_instance_ = NULL;

TTowerDefenseNewSweepMapRsp* TTowerDefenseNewSweepMapRsp::New() const {
  return new TTowerDefenseNewSweepMapRsp;
}

void TTowerDefenseNewSweepMapRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewSweepMapRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewSweepMapRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 2;
      case 2: {
        if (tag == 18) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewSweepMapRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewSweepMapRsp)
  return false;
#undef DO_
}

void TTowerDefenseNewSweepMapRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewSweepMapRsp)
  // repeated .pb.TCommonReward DropArray = 2;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewSweepMapRsp)
}

::google::protobuf::uint8* TTowerDefenseNewSweepMapRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewSweepMapRsp)
  // repeated .pb.TCommonReward DropArray = 2;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewSweepMapRsp)
  return target;
}

int TTowerDefenseNewSweepMapRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 2;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewSweepMapRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewSweepMapRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewSweepMapRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewSweepMapRsp::MergeFrom(const TTowerDefenseNewSweepMapRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewSweepMapRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewSweepMapRsp::CopyFrom(const TTowerDefenseNewSweepMapRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewSweepMapRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseNewSweepMapRsp::Swap(TTowerDefenseNewSweepMapRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewSweepMapRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewSweepMapRsp_descriptor_;
  metadata.reflection = TTowerDefenseNewSweepMapRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewActExchangeReq::kExchangeIdFieldNumber;
const int TTowerDefenseNewActExchangeReq::kNumFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewActExchangeReq::TTowerDefenseNewActExchangeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewActExchangeReq)
}

void TTowerDefenseNewActExchangeReq::InitAsDefaultInstance() {
}

TTowerDefenseNewActExchangeReq::TTowerDefenseNewActExchangeReq(const TTowerDefenseNewActExchangeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewActExchangeReq)
}

void TTowerDefenseNewActExchangeReq::SharedCtor() {
  _cached_size_ = 0;
  exchangeid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewActExchangeReq::~TTowerDefenseNewActExchangeReq() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewActExchangeReq)
  SharedDtor();
}

void TTowerDefenseNewActExchangeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewActExchangeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewActExchangeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewActExchangeReq_descriptor_;
}

const TTowerDefenseNewActExchangeReq& TTowerDefenseNewActExchangeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewActExchangeReq* TTowerDefenseNewActExchangeReq::default_instance_ = NULL;

TTowerDefenseNewActExchangeReq* TTowerDefenseNewActExchangeReq::New() const {
  return new TTowerDefenseNewActExchangeReq;
}

void TTowerDefenseNewActExchangeReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TTowerDefenseNewActExchangeReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(exchangeid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewActExchangeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewActExchangeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ExchangeId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exchangeid_)));
          set_has_exchangeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewActExchangeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewActExchangeReq)
  return false;
#undef DO_
}

void TTowerDefenseNewActExchangeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewActExchangeReq)
  // optional uint32 ExchangeId = 1;
  if (has_exchangeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->exchangeid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewActExchangeReq)
}

::google::protobuf::uint8* TTowerDefenseNewActExchangeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewActExchangeReq)
  // optional uint32 ExchangeId = 1;
  if (has_exchangeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->exchangeid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewActExchangeReq)
  return target;
}

int TTowerDefenseNewActExchangeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ExchangeId = 1;
    if (has_exchangeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exchangeid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewActExchangeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewActExchangeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewActExchangeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewActExchangeReq::MergeFrom(const TTowerDefenseNewActExchangeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exchangeid()) {
      set_exchangeid(from.exchangeid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewActExchangeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewActExchangeReq::CopyFrom(const TTowerDefenseNewActExchangeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewActExchangeReq::IsInitialized() const {

  return true;
}

void TTowerDefenseNewActExchangeReq::Swap(TTowerDefenseNewActExchangeReq* other) {
  if (other != this) {
    std::swap(exchangeid_, other->exchangeid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewActExchangeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewActExchangeReq_descriptor_;
  metadata.reflection = TTowerDefenseNewActExchangeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TTowerDefenseNewActExchangeRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TTowerDefenseNewActExchangeRsp::TTowerDefenseNewActExchangeRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TTowerDefenseNewActExchangeRsp)
}

void TTowerDefenseNewActExchangeRsp::InitAsDefaultInstance() {
}

TTowerDefenseNewActExchangeRsp::TTowerDefenseNewActExchangeRsp(const TTowerDefenseNewActExchangeRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TTowerDefenseNewActExchangeRsp)
}

void TTowerDefenseNewActExchangeRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TTowerDefenseNewActExchangeRsp::~TTowerDefenseNewActExchangeRsp() {
  // @@protoc_insertion_point(destructor:pb.TTowerDefenseNewActExchangeRsp)
  SharedDtor();
}

void TTowerDefenseNewActExchangeRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TTowerDefenseNewActExchangeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TTowerDefenseNewActExchangeRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TTowerDefenseNewActExchangeRsp_descriptor_;
}

const TTowerDefenseNewActExchangeRsp& TTowerDefenseNewActExchangeRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fTowerDefenseNew_2eproto();
  return *default_instance_;
}

TTowerDefenseNewActExchangeRsp* TTowerDefenseNewActExchangeRsp::default_instance_ = NULL;

TTowerDefenseNewActExchangeRsp* TTowerDefenseNewActExchangeRsp::New() const {
  return new TTowerDefenseNewActExchangeRsp;
}

void TTowerDefenseNewActExchangeRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TTowerDefenseNewActExchangeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TTowerDefenseNewActExchangeRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TTowerDefenseNewActExchangeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TTowerDefenseNewActExchangeRsp)
  return false;
#undef DO_
}

void TTowerDefenseNewActExchangeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TTowerDefenseNewActExchangeRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TTowerDefenseNewActExchangeRsp)
}

::google::protobuf::uint8* TTowerDefenseNewActExchangeRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TTowerDefenseNewActExchangeRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TTowerDefenseNewActExchangeRsp)
  return target;
}

int TTowerDefenseNewActExchangeRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TTowerDefenseNewActExchangeRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TTowerDefenseNewActExchangeRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TTowerDefenseNewActExchangeRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TTowerDefenseNewActExchangeRsp::MergeFrom(const TTowerDefenseNewActExchangeRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TTowerDefenseNewActExchangeRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TTowerDefenseNewActExchangeRsp::CopyFrom(const TTowerDefenseNewActExchangeRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTowerDefenseNewActExchangeRsp::IsInitialized() const {

  return true;
}

void TTowerDefenseNewActExchangeRsp::Swap(TTowerDefenseNewActExchangeRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TTowerDefenseNewActExchangeRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TTowerDefenseNewActExchangeRsp_descriptor_;
  metadata.reflection = TTowerDefenseNewActExchangeRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
