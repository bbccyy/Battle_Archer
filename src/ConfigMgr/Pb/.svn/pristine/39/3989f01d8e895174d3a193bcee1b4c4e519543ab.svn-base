// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/HeroHandbookRanking.proto

#ifndef PROTOBUF_net_2fHeroHandbookRanking_2eproto__INCLUDED
#define PROTOBUF_net_2fHeroHandbookRanking_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/User.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fHeroHandbookRanking_2eproto();
void protobuf_AssignDesc_net_2fHeroHandbookRanking_2eproto();
void protobuf_ShutdownFile_net_2fHeroHandbookRanking_2eproto();

class THeroHandbookRankingRankItem;
class THeroHandbookRankingTakeRewardRecordRsp;
class THeroHandbookRankingTakeRewardReq;
class THeroHandbookRankingRankRewardInfo;
class THeroHandbookRankingGetRankRewardRsp;
class THeroHandbookRankingEntranceCloseReq;

// ===================================================================

/*FOR2LUA
<Record>
	<name>THeroHandbookRankingRankItem</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/HeroHandbookRanking.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroHandbookRankingRankItem : public ::google::protobuf::Message {
 public:
  THeroHandbookRankingRankItem();
  virtual ~THeroHandbookRankingRankItem();

  THeroHandbookRankingRankItem(const THeroHandbookRankingRankItem& from);

  inline THeroHandbookRankingRankItem& operator=(const THeroHandbookRankingRankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroHandbookRankingRankItem& default_instance();

  void Swap(THeroHandbookRankingRankItem* other);

  // implements Message ----------------------------------------------

  THeroHandbookRankingRankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroHandbookRankingRankItem& from);
  void MergeFrom(const THeroHandbookRankingRankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TUserSimpleInfo UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroHandbookRankingRankItem</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userinfo() const;
  inline ::pb::TUserSimpleInfo* mutable_userinfo();
  inline ::pb::TUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo);

  // optional uint32 HandbookNum = 2;
  inline bool has_handbooknum() const;
  inline void clear_handbooknum();
  static const int kHandbookNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroHandbookRankingRankItem</name>
  	<Function>
  		<name>handbooknum</name>
  		<replaceName>HandbookNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_handbooknum</name>
  		<replaceName>HandbookNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_handbooknum</name>
  		<replaceName>HandbookNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 handbooknum() const;
  inline void set_handbooknum(::google::protobuf::uint32 value);

  // optional uint64 ChangeTime = 3;
  inline bool has_changetime() const;
  inline void clear_changetime();
  static const int kChangeTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroHandbookRankingRankItem</name>
  	<Function>
  		<name>changetime</name>
  		<replaceName>ChangeTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_changetime</name>
  		<replaceName>ChangeTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_changetime</name>
  		<replaceName>ChangeTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 changetime() const;
  inline void set_changetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.THeroHandbookRankingRankItem)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_handbooknum();
  inline void clear_has_handbooknum();
  inline void set_has_changetime();
  inline void clear_has_changetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TUserSimpleInfo* userinfo_;
  ::google::protobuf::uint64 changetime_;
  ::google::protobuf::uint32 handbooknum_;
  friend void  protobuf_AddDesc_net_2fHeroHandbookRanking_2eproto();
  friend void protobuf_AssignDesc_net_2fHeroHandbookRanking_2eproto();
  friend void protobuf_ShutdownFile_net_2fHeroHandbookRanking_2eproto();

  void InitAsDefaultInstance();
  static THeroHandbookRankingRankItem* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroHandbookRankingTakeRewardRecordRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/HeroHandbookRanking.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroHandbookRankingTakeRewardRecordRsp : public ::google::protobuf::Message {
 public:
  THeroHandbookRankingTakeRewardRecordRsp();
  virtual ~THeroHandbookRankingTakeRewardRecordRsp();

  THeroHandbookRankingTakeRewardRecordRsp(const THeroHandbookRankingTakeRewardRecordRsp& from);

  inline THeroHandbookRankingTakeRewardRecordRsp& operator=(const THeroHandbookRankingTakeRewardRecordRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroHandbookRankingTakeRewardRecordRsp& default_instance();

  void Swap(THeroHandbookRankingTakeRewardRecordRsp* other);

  // implements Message ----------------------------------------------

  THeroHandbookRankingTakeRewardRecordRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroHandbookRankingTakeRewardRecordRsp& from);
  void MergeFrom(const THeroHandbookRankingTakeRewardRecordRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 TakeArr = 1;
  inline int takearr_size() const;
  inline void clear_takearr();
  static const int kTakeArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroHandbookRankingTakeRewardRecordRsp</name>
  	<Function>
  		<name>takearr</name>
  		<replaceName>TakeArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_takearr</name>
  		<replaceName>TakeArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_takearr</name>
  		<replaceName>TakeArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_takearr</name>
  		<replaceName>TakeArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>takearr_size</name>
  		<replaceName>TakeArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 takearr(int index) const;
  inline void set_takearr(int index, ::google::protobuf::int32 value);
  inline void add_takearr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      takearr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_takearr();

  // optional uint32 HandbookNum = 2;
  inline bool has_handbooknum() const;
  inline void clear_handbooknum();
  static const int kHandbookNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroHandbookRankingTakeRewardRecordRsp</name>
  	<Function>
  		<name>handbooknum</name>
  		<replaceName>HandbookNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_handbooknum</name>
  		<replaceName>HandbookNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_handbooknum</name>
  		<replaceName>HandbookNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 handbooknum() const;
  inline void set_handbooknum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroHandbookRankingTakeRewardRecordRsp)
 private:
  inline void set_has_handbooknum();
  inline void clear_has_handbooknum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > takearr_;
  ::google::protobuf::uint32 handbooknum_;
  friend void  protobuf_AddDesc_net_2fHeroHandbookRanking_2eproto();
  friend void protobuf_AssignDesc_net_2fHeroHandbookRanking_2eproto();
  friend void protobuf_ShutdownFile_net_2fHeroHandbookRanking_2eproto();

  void InitAsDefaultInstance();
  static THeroHandbookRankingTakeRewardRecordRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroHandbookRankingTakeRewardReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/HeroHandbookRanking.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroHandbookRankingTakeRewardReq : public ::google::protobuf::Message {
 public:
  THeroHandbookRankingTakeRewardReq();
  virtual ~THeroHandbookRankingTakeRewardReq();

  THeroHandbookRankingTakeRewardReq(const THeroHandbookRankingTakeRewardReq& from);

  inline THeroHandbookRankingTakeRewardReq& operator=(const THeroHandbookRankingTakeRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroHandbookRankingTakeRewardReq& default_instance();

  void Swap(THeroHandbookRankingTakeRewardReq* other);

  // implements Message ----------------------------------------------

  THeroHandbookRankingTakeRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroHandbookRankingTakeRewardReq& from);
  void MergeFrom(const THeroHandbookRankingTakeRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RewardId = 1;
  inline bool has_rewardid() const;
  inline void clear_rewardid();
  static const int kRewardIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroHandbookRankingTakeRewardReq</name>
  	<Function>
  		<name>rewardid</name>
  		<replaceName>RewardId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rewardid</name>
  		<replaceName>RewardId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rewardid</name>
  		<replaceName>RewardId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 rewardid() const;
  inline void set_rewardid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroHandbookRankingTakeRewardReq)
 private:
  inline void set_has_rewardid();
  inline void clear_has_rewardid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 rewardid_;
  friend void  protobuf_AddDesc_net_2fHeroHandbookRanking_2eproto();
  friend void protobuf_AssignDesc_net_2fHeroHandbookRanking_2eproto();
  friend void protobuf_ShutdownFile_net_2fHeroHandbookRanking_2eproto();

  void InitAsDefaultInstance();
  static THeroHandbookRankingTakeRewardReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroHandbookRankingRankRewardInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/HeroHandbookRanking.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroHandbookRankingRankRewardInfo : public ::google::protobuf::Message {
 public:
  THeroHandbookRankingRankRewardInfo();
  virtual ~THeroHandbookRankingRankRewardInfo();

  THeroHandbookRankingRankRewardInfo(const THeroHandbookRankingRankRewardInfo& from);

  inline THeroHandbookRankingRankRewardInfo& operator=(const THeroHandbookRankingRankRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroHandbookRankingRankRewardInfo& default_instance();

  void Swap(THeroHandbookRankingRankRewardInfo* other);

  // implements Message ----------------------------------------------

  THeroHandbookRankingRankRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroHandbookRankingRankRewardInfo& from);
  void MergeFrom(const THeroHandbookRankingRankRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.THeroHandbookRankingRankItem RankInfo = 1;
  inline bool has_rankinfo() const;
  inline void clear_rankinfo();
  static const int kRankInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroHandbookRankingRankRewardInfo</name>
  	<Function>
  		<name>rankinfo</name>
  		<replaceName>RankInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rankinfo</name>
  		<replaceName>RankInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_rankinfo</name>
  		<replaceName>RankInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rankinfo</name>
  		<replaceName>RankInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroHandbookRankingRankItem& rankinfo() const;
  inline ::pb::THeroHandbookRankingRankItem* mutable_rankinfo();
  inline ::pb::THeroHandbookRankingRankItem* release_rankinfo();
  inline void set_allocated_rankinfo(::pb::THeroHandbookRankingRankItem* rankinfo);

  // optional int32 Rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroHandbookRankingRankRewardInfo</name>
  	<Function>
  		<name>rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional int32 Count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroHandbookRankingRankRewardInfo</name>
  	<Function>
  		<name>count</name>
  		<replaceName>Count</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_count</name>
  		<replaceName>Count</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_count</name>
  		<replaceName>Count</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroHandbookRankingRankRewardInfo)
 private:
  inline void set_has_rankinfo();
  inline void clear_has_rankinfo();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::THeroHandbookRankingRankItem* rankinfo_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_net_2fHeroHandbookRanking_2eproto();
  friend void protobuf_AssignDesc_net_2fHeroHandbookRanking_2eproto();
  friend void protobuf_ShutdownFile_net_2fHeroHandbookRanking_2eproto();

  void InitAsDefaultInstance();
  static THeroHandbookRankingRankRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroHandbookRankingGetRankRewardRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/HeroHandbookRanking.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroHandbookRankingGetRankRewardRsp : public ::google::protobuf::Message {
 public:
  THeroHandbookRankingGetRankRewardRsp();
  virtual ~THeroHandbookRankingGetRankRewardRsp();

  THeroHandbookRankingGetRankRewardRsp(const THeroHandbookRankingGetRankRewardRsp& from);

  inline THeroHandbookRankingGetRankRewardRsp& operator=(const THeroHandbookRankingGetRankRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroHandbookRankingGetRankRewardRsp& default_instance();

  void Swap(THeroHandbookRankingGetRankRewardRsp* other);

  // implements Message ----------------------------------------------

  THeroHandbookRankingGetRankRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroHandbookRankingGetRankRewardRsp& from);
  void MergeFrom(const THeroHandbookRankingGetRankRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>THeroHandbookRankingGetRankRewardRsp</name>
  	<Function>
  		<name>rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rank</name>
  		<replaceName>Rank</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // repeated .pb.THeroHandbookRankingRankRewardInfo RankRewardArr = 2;
  inline int rankrewardarr_size() const;
  inline void clear_rankrewardarr();
  static const int kRankRewardArrFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>THeroHandbookRankingGetRankRewardRsp</name>
  	<Function>
  		<name>rankrewardarr</name>
  		<replaceName>RankRewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_rankrewardarr</name>
  		<replaceName>RankRewardArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_rankrewardarr</name>
  		<replaceName>RankRewardArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_rankrewardarr</name>
  		<replaceName>RankRewardArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>rankrewardarr_size</name>
  		<replaceName>RankRewardArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::THeroHandbookRankingRankRewardInfo& rankrewardarr(int index) const;
  inline ::pb::THeroHandbookRankingRankRewardInfo* mutable_rankrewardarr(int index);
  inline ::pb::THeroHandbookRankingRankRewardInfo* add_rankrewardarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroHandbookRankingRankRewardInfo >&
      rankrewardarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::THeroHandbookRankingRankRewardInfo >*
      mutable_rankrewardarr();

  // optional uint32 HeroHandbookNum = 3;
  inline bool has_herohandbooknum() const;
  inline void clear_herohandbooknum();
  static const int kHeroHandbookNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>THeroHandbookRankingGetRankRewardRsp</name>
  	<Function>
  		<name>herohandbooknum</name>
  		<replaceName>HeroHandbookNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_herohandbooknum</name>
  		<replaceName>HeroHandbookNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_herohandbooknum</name>
  		<replaceName>HeroHandbookNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 herohandbooknum() const;
  inline void set_herohandbooknum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.THeroHandbookRankingGetRankRewardRsp)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_herohandbooknum();
  inline void clear_has_herohandbooknum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::THeroHandbookRankingRankRewardInfo > rankrewardarr_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::uint32 herohandbooknum_;
  friend void  protobuf_AddDesc_net_2fHeroHandbookRanking_2eproto();
  friend void protobuf_AssignDesc_net_2fHeroHandbookRanking_2eproto();
  friend void protobuf_ShutdownFile_net_2fHeroHandbookRanking_2eproto();

  void InitAsDefaultInstance();
  static THeroHandbookRankingGetRankRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>THeroHandbookRankingEntranceCloseReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/HeroHandbookRanking.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class THeroHandbookRankingEntranceCloseReq : public ::google::protobuf::Message {
 public:
  THeroHandbookRankingEntranceCloseReq();
  virtual ~THeroHandbookRankingEntranceCloseReq();

  THeroHandbookRankingEntranceCloseReq(const THeroHandbookRankingEntranceCloseReq& from);

  inline THeroHandbookRankingEntranceCloseReq& operator=(const THeroHandbookRankingEntranceCloseReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const THeroHandbookRankingEntranceCloseReq& default_instance();

  void Swap(THeroHandbookRankingEntranceCloseReq* other);

  // implements Message ----------------------------------------------

  THeroHandbookRankingEntranceCloseReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const THeroHandbookRankingEntranceCloseReq& from);
  void MergeFrom(const THeroHandbookRankingEntranceCloseReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.THeroHandbookRankingEntranceCloseReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_net_2fHeroHandbookRanking_2eproto();
  friend void protobuf_AssignDesc_net_2fHeroHandbookRanking_2eproto();
  friend void protobuf_ShutdownFile_net_2fHeroHandbookRanking_2eproto();

  void InitAsDefaultInstance();
  static THeroHandbookRankingEntranceCloseReq* default_instance_;
};
// ===================================================================


// ===================================================================

// THeroHandbookRankingRankItem

// optional .pb.TUserSimpleInfo UserInfo = 1;
inline bool THeroHandbookRankingRankItem::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroHandbookRankingRankItem::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroHandbookRankingRankItem::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroHandbookRankingRankItem::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TUserSimpleInfo& THeroHandbookRankingRankItem::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.THeroHandbookRankingRankItem.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TUserSimpleInfo* THeroHandbookRankingRankItem::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.THeroHandbookRankingRankItem.UserInfo)
  return userinfo_;
}
inline ::pb::TUserSimpleInfo* THeroHandbookRankingRankItem::release_userinfo() {
  clear_has_userinfo();
  ::pb::TUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void THeroHandbookRankingRankItem::set_allocated_userinfo(::pb::TUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.THeroHandbookRankingRankItem.UserInfo)
}

// optional uint32 HandbookNum = 2;
inline bool THeroHandbookRankingRankItem::has_handbooknum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroHandbookRankingRankItem::set_has_handbooknum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroHandbookRankingRankItem::clear_has_handbooknum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroHandbookRankingRankItem::clear_handbooknum() {
  handbooknum_ = 0u;
  clear_has_handbooknum();
}
inline ::google::protobuf::uint32 THeroHandbookRankingRankItem::handbooknum() const {
  // @@protoc_insertion_point(field_get:pb.THeroHandbookRankingRankItem.HandbookNum)
  return handbooknum_;
}
inline void THeroHandbookRankingRankItem::set_handbooknum(::google::protobuf::uint32 value) {
  set_has_handbooknum();
  handbooknum_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroHandbookRankingRankItem.HandbookNum)
}

// optional uint64 ChangeTime = 3;
inline bool THeroHandbookRankingRankItem::has_changetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void THeroHandbookRankingRankItem::set_has_changetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void THeroHandbookRankingRankItem::clear_has_changetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void THeroHandbookRankingRankItem::clear_changetime() {
  changetime_ = GOOGLE_ULONGLONG(0);
  clear_has_changetime();
}
inline ::google::protobuf::uint64 THeroHandbookRankingRankItem::changetime() const {
  // @@protoc_insertion_point(field_get:pb.THeroHandbookRankingRankItem.ChangeTime)
  return changetime_;
}
inline void THeroHandbookRankingRankItem::set_changetime(::google::protobuf::uint64 value) {
  set_has_changetime();
  changetime_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroHandbookRankingRankItem.ChangeTime)
}

// -------------------------------------------------------------------

// THeroHandbookRankingTakeRewardRecordRsp

// repeated int32 TakeArr = 1;
inline int THeroHandbookRankingTakeRewardRecordRsp::takearr_size() const {
  return takearr_.size();
}
inline void THeroHandbookRankingTakeRewardRecordRsp::clear_takearr() {
  takearr_.Clear();
}
inline ::google::protobuf::int32 THeroHandbookRankingTakeRewardRecordRsp::takearr(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroHandbookRankingTakeRewardRecordRsp.TakeArr)
  return takearr_.Get(index);
}
inline void THeroHandbookRankingTakeRewardRecordRsp::set_takearr(int index, ::google::protobuf::int32 value) {
  takearr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.THeroHandbookRankingTakeRewardRecordRsp.TakeArr)
}
inline void THeroHandbookRankingTakeRewardRecordRsp::add_takearr(::google::protobuf::int32 value) {
  takearr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.THeroHandbookRankingTakeRewardRecordRsp.TakeArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
THeroHandbookRankingTakeRewardRecordRsp::takearr() const {
  // @@protoc_insertion_point(field_list:pb.THeroHandbookRankingTakeRewardRecordRsp.TakeArr)
  return takearr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
THeroHandbookRankingTakeRewardRecordRsp::mutable_takearr() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroHandbookRankingTakeRewardRecordRsp.TakeArr)
  return &takearr_;
}

// optional uint32 HandbookNum = 2;
inline bool THeroHandbookRankingTakeRewardRecordRsp::has_handbooknum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroHandbookRankingTakeRewardRecordRsp::set_has_handbooknum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroHandbookRankingTakeRewardRecordRsp::clear_has_handbooknum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroHandbookRankingTakeRewardRecordRsp::clear_handbooknum() {
  handbooknum_ = 0u;
  clear_has_handbooknum();
}
inline ::google::protobuf::uint32 THeroHandbookRankingTakeRewardRecordRsp::handbooknum() const {
  // @@protoc_insertion_point(field_get:pb.THeroHandbookRankingTakeRewardRecordRsp.HandbookNum)
  return handbooknum_;
}
inline void THeroHandbookRankingTakeRewardRecordRsp::set_handbooknum(::google::protobuf::uint32 value) {
  set_has_handbooknum();
  handbooknum_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroHandbookRankingTakeRewardRecordRsp.HandbookNum)
}

// -------------------------------------------------------------------

// THeroHandbookRankingTakeRewardReq

// optional int32 RewardId = 1;
inline bool THeroHandbookRankingTakeRewardReq::has_rewardid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroHandbookRankingTakeRewardReq::set_has_rewardid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroHandbookRankingTakeRewardReq::clear_has_rewardid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroHandbookRankingTakeRewardReq::clear_rewardid() {
  rewardid_ = 0;
  clear_has_rewardid();
}
inline ::google::protobuf::int32 THeroHandbookRankingTakeRewardReq::rewardid() const {
  // @@protoc_insertion_point(field_get:pb.THeroHandbookRankingTakeRewardReq.RewardId)
  return rewardid_;
}
inline void THeroHandbookRankingTakeRewardReq::set_rewardid(::google::protobuf::int32 value) {
  set_has_rewardid();
  rewardid_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroHandbookRankingTakeRewardReq.RewardId)
}

// -------------------------------------------------------------------

// THeroHandbookRankingRankRewardInfo

// optional .pb.THeroHandbookRankingRankItem RankInfo = 1;
inline bool THeroHandbookRankingRankRewardInfo::has_rankinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroHandbookRankingRankRewardInfo::set_has_rankinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroHandbookRankingRankRewardInfo::clear_has_rankinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroHandbookRankingRankRewardInfo::clear_rankinfo() {
  if (rankinfo_ != NULL) rankinfo_->::pb::THeroHandbookRankingRankItem::Clear();
  clear_has_rankinfo();
}
inline const ::pb::THeroHandbookRankingRankItem& THeroHandbookRankingRankRewardInfo::rankinfo() const {
  // @@protoc_insertion_point(field_get:pb.THeroHandbookRankingRankRewardInfo.RankInfo)
  return rankinfo_ != NULL ? *rankinfo_ : *default_instance_->rankinfo_;
}
inline ::pb::THeroHandbookRankingRankItem* THeroHandbookRankingRankRewardInfo::mutable_rankinfo() {
  set_has_rankinfo();
  if (rankinfo_ == NULL) rankinfo_ = new ::pb::THeroHandbookRankingRankItem;
  // @@protoc_insertion_point(field_mutable:pb.THeroHandbookRankingRankRewardInfo.RankInfo)
  return rankinfo_;
}
inline ::pb::THeroHandbookRankingRankItem* THeroHandbookRankingRankRewardInfo::release_rankinfo() {
  clear_has_rankinfo();
  ::pb::THeroHandbookRankingRankItem* temp = rankinfo_;
  rankinfo_ = NULL;
  return temp;
}
inline void THeroHandbookRankingRankRewardInfo::set_allocated_rankinfo(::pb::THeroHandbookRankingRankItem* rankinfo) {
  delete rankinfo_;
  rankinfo_ = rankinfo;
  if (rankinfo) {
    set_has_rankinfo();
  } else {
    clear_has_rankinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.THeroHandbookRankingRankRewardInfo.RankInfo)
}

// optional int32 Rank = 2;
inline bool THeroHandbookRankingRankRewardInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void THeroHandbookRankingRankRewardInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void THeroHandbookRankingRankRewardInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void THeroHandbookRankingRankRewardInfo::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 THeroHandbookRankingRankRewardInfo::rank() const {
  // @@protoc_insertion_point(field_get:pb.THeroHandbookRankingRankRewardInfo.Rank)
  return rank_;
}
inline void THeroHandbookRankingRankRewardInfo::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroHandbookRankingRankRewardInfo.Rank)
}

// optional int32 Count = 3;
inline bool THeroHandbookRankingRankRewardInfo::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void THeroHandbookRankingRankRewardInfo::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void THeroHandbookRankingRankRewardInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void THeroHandbookRankingRankRewardInfo::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 THeroHandbookRankingRankRewardInfo::count() const {
  // @@protoc_insertion_point(field_get:pb.THeroHandbookRankingRankRewardInfo.Count)
  return count_;
}
inline void THeroHandbookRankingRankRewardInfo::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroHandbookRankingRankRewardInfo.Count)
}

// -------------------------------------------------------------------

// THeroHandbookRankingGetRankRewardRsp

// optional int32 Rank = 1;
inline bool THeroHandbookRankingGetRankRewardRsp::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void THeroHandbookRankingGetRankRewardRsp::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void THeroHandbookRankingGetRankRewardRsp::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void THeroHandbookRankingGetRankRewardRsp::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 THeroHandbookRankingGetRankRewardRsp::rank() const {
  // @@protoc_insertion_point(field_get:pb.THeroHandbookRankingGetRankRewardRsp.Rank)
  return rank_;
}
inline void THeroHandbookRankingGetRankRewardRsp::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroHandbookRankingGetRankRewardRsp.Rank)
}

// repeated .pb.THeroHandbookRankingRankRewardInfo RankRewardArr = 2;
inline int THeroHandbookRankingGetRankRewardRsp::rankrewardarr_size() const {
  return rankrewardarr_.size();
}
inline void THeroHandbookRankingGetRankRewardRsp::clear_rankrewardarr() {
  rankrewardarr_.Clear();
}
inline const ::pb::THeroHandbookRankingRankRewardInfo& THeroHandbookRankingGetRankRewardRsp::rankrewardarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.THeroHandbookRankingGetRankRewardRsp.RankRewardArr)
  return rankrewardarr_.Get(index);
}
inline ::pb::THeroHandbookRankingRankRewardInfo* THeroHandbookRankingGetRankRewardRsp::mutable_rankrewardarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.THeroHandbookRankingGetRankRewardRsp.RankRewardArr)
  return rankrewardarr_.Mutable(index);
}
inline ::pb::THeroHandbookRankingRankRewardInfo* THeroHandbookRankingGetRankRewardRsp::add_rankrewardarr() {
  // @@protoc_insertion_point(field_add:pb.THeroHandbookRankingGetRankRewardRsp.RankRewardArr)
  return rankrewardarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::THeroHandbookRankingRankRewardInfo >&
THeroHandbookRankingGetRankRewardRsp::rankrewardarr() const {
  // @@protoc_insertion_point(field_list:pb.THeroHandbookRankingGetRankRewardRsp.RankRewardArr)
  return rankrewardarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::THeroHandbookRankingRankRewardInfo >*
THeroHandbookRankingGetRankRewardRsp::mutable_rankrewardarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.THeroHandbookRankingGetRankRewardRsp.RankRewardArr)
  return &rankrewardarr_;
}

// optional uint32 HeroHandbookNum = 3;
inline bool THeroHandbookRankingGetRankRewardRsp::has_herohandbooknum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void THeroHandbookRankingGetRankRewardRsp::set_has_herohandbooknum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void THeroHandbookRankingGetRankRewardRsp::clear_has_herohandbooknum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void THeroHandbookRankingGetRankRewardRsp::clear_herohandbooknum() {
  herohandbooknum_ = 0u;
  clear_has_herohandbooknum();
}
inline ::google::protobuf::uint32 THeroHandbookRankingGetRankRewardRsp::herohandbooknum() const {
  // @@protoc_insertion_point(field_get:pb.THeroHandbookRankingGetRankRewardRsp.HeroHandbookNum)
  return herohandbooknum_;
}
inline void THeroHandbookRankingGetRankRewardRsp::set_herohandbooknum(::google::protobuf::uint32 value) {
  set_has_herohandbooknum();
  herohandbooknum_ = value;
  // @@protoc_insertion_point(field_set:pb.THeroHandbookRankingGetRankRewardRsp.HeroHandbookNum)
}

// -------------------------------------------------------------------

// THeroHandbookRankingEntranceCloseReq


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fHeroHandbookRanking_2eproto__INCLUDED
