// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module/BuffDataBase.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "module/BuffDataBase.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* BuffDataModel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffDataModel_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffDatasModel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffDatasModel_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffDataAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffDataAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModPropertyDecConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModPropertyDecConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModChangeDmgHelper_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModChangeDmgHelper_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModChangeDmgByBuffSubConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModChangeDmgByBuffSubConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModPropertyConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModPropertyConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffSingleEffect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffSingleEffect_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffRepeatedEffect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffRepeatedEffect_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModArmAttrAdd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModArmAttrAdd_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModArmAttrAddConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModArmAttrAddConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModSkillOnLowLifeConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModSkillOnLowLifeConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModTransformationConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModTransformationConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModEffectInRangeConditionConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModEffectInRangeConditionConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModEffectInRangeConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModEffectInRangeConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModPropertyFormulaConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModPropertyFormulaConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModResetBuffTimeConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModResetBuffTimeConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModAddSkillConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModAddSkillConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModTauntConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModTauntConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModToughnessConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModToughnessConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModNothingConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModNothingConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModTransformScaleConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModTransformScaleConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModDieConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModDieConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModDisableConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModDisableConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModScaleTextConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModScaleTextConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModRepeatSkillConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModRepeatSkillConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModSkillOnEndConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModSkillOnEndConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModSpecifySkillTidConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModSpecifySkillTidConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModMoveControlImmunityConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModMoveControlImmunityConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModUnlimitedShieldConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModUnlimitedShieldConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModShrinkControlDurationConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModShrinkControlDurationConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModHideSomeAppearanceConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModHideSomeAppearanceConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModAddDefPointConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModAddDefPointConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModRemoveDefPointConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModRemoveDefPointConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModConditionChangeConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModConditionChangeConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModNoRageRecoverConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModNoRageRecoverConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModInheritExistBuffStackConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModInheritExistBuffStackConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModReflectBuffConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModReflectBuffConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModFatalDmgShiftConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModFatalDmgShiftConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffModRageImmunityConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffModRageImmunityConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuffBaseDataModel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffBaseDataModel_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EBattleAttrType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_module_2fBuffDataBase_2eproto() {
  protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "module/BuffDataBase.proto");
  GOOGLE_CHECK(file != NULL);
  BuffDataModel_descriptor_ = file->message_type(0);
  static const int BuffDataModel_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDataModel, percentparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDataModel, percentgrowth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDataModel, valueparma_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDataModel, valuegrowth_),
  };
  BuffDataModel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffDataModel_descriptor_,
      BuffDataModel::default_instance_,
      BuffDataModel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDataModel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDataModel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffDataModel));
  BuffDatasModel_descriptor_ = file->message_type(1);
  static const int BuffDatasModel_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDatasModel, percentparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDatasModel, percentgrowth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDatasModel, valueparma_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDatasModel, valuegrowth_),
  };
  BuffDatasModel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffDatasModel_descriptor_,
      BuffDatasModel::default_instance_,
      BuffDatasModel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDatasModel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDatasModel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffDatasModel));
  BuffDataAttribute_descriptor_ = file->message_type(2);
  static const int BuffDataAttribute_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDataAttribute, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDataAttribute, data_),
  };
  BuffDataAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffDataAttribute_descriptor_,
      BuffDataAttribute::default_instance_,
      BuffDataAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDataAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffDataAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffDataAttribute));
  BuffModPropertyDecConfig_descriptor_ = file->message_type(3);
  static const int BuffModPropertyDecConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyDecConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyDecConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyDecConfig, type_),
  };
  BuffModPropertyDecConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModPropertyDecConfig_descriptor_,
      BuffModPropertyDecConfig::default_instance_,
      BuffModPropertyDecConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyDecConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyDecConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModPropertyDecConfig));
  BuffModChangeDmgHelper_descriptor_ = file->message_type(4);
  static const int BuffModChangeDmgHelper_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModChangeDmgHelper, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModChangeDmgHelper, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModChangeDmgHelper, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModChangeDmgHelper, valuegrowth_),
  };
  BuffModChangeDmgHelper_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModChangeDmgHelper_descriptor_,
      BuffModChangeDmgHelper::default_instance_,
      BuffModChangeDmgHelper_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModChangeDmgHelper, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModChangeDmgHelper, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModChangeDmgHelper));
  BuffModChangeDmgByBuffSubConfig_descriptor_ = file->message_type(5);
  static const int BuffModChangeDmgByBuffSubConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModChangeDmgByBuffSubConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModChangeDmgByBuffSubConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModChangeDmgByBuffSubConfig, dataarr_),
  };
  BuffModChangeDmgByBuffSubConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModChangeDmgByBuffSubConfig_descriptor_,
      BuffModChangeDmgByBuffSubConfig::default_instance_,
      BuffModChangeDmgByBuffSubConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModChangeDmgByBuffSubConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModChangeDmgByBuffSubConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModChangeDmgByBuffSubConfig));
  BuffModPropertyConfig_descriptor_ = file->message_type(6);
  static const int BuffModPropertyConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyConfig, dataarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyConfig, lifeaddpercent_),
  };
  BuffModPropertyConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModPropertyConfig_descriptor_,
      BuffModPropertyConfig::default_instance_,
      BuffModPropertyConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModPropertyConfig));
  BuffSingleEffect_descriptor_ = file->message_type(7);
  static const int BuffSingleEffect_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffSingleEffect, effect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffSingleEffect, socket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffSingleEffect, teamdirection_),
  };
  BuffSingleEffect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffSingleEffect_descriptor_,
      BuffSingleEffect::default_instance_,
      BuffSingleEffect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffSingleEffect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffSingleEffect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffSingleEffect));
  BuffRepeatedEffect_descriptor_ = file->message_type(8);
  static const int BuffRepeatedEffect_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffRepeatedEffect, effectarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffRepeatedEffect, socket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffRepeatedEffect, teamdirection_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffRepeatedEffect, delaytime_),
  };
  BuffRepeatedEffect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffRepeatedEffect_descriptor_,
      BuffRepeatedEffect::default_instance_,
      BuffRepeatedEffect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffRepeatedEffect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffRepeatedEffect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffRepeatedEffect));
  BuffModArmAttrAdd_descriptor_ = file->message_type(9);
  static const int BuffModArmAttrAdd_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModArmAttrAdd, attrsource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModArmAttrAdd, attrtarget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModArmAttrAdd, percentparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModArmAttrAdd, levelparam_),
  };
  BuffModArmAttrAdd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModArmAttrAdd_descriptor_,
      BuffModArmAttrAdd::default_instance_,
      BuffModArmAttrAdd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModArmAttrAdd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModArmAttrAdd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModArmAttrAdd));
  BuffModArmAttrAddConfig_descriptor_ = file->message_type(10);
  static const int BuffModArmAttrAddConfig_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModArmAttrAddConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModArmAttrAddConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModArmAttrAddConfig, armattrarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModArmAttrAddConfig, lifeaddpercent_),
  };
  BuffModArmAttrAddConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModArmAttrAddConfig_descriptor_,
      BuffModArmAttrAddConfig::default_instance_,
      BuffModArmAttrAddConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModArmAttrAddConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModArmAttrAddConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModArmAttrAddConfig));
  BuffModSkillOnLowLifeConfig_descriptor_ = file->message_type(11);
  static const int BuffModSkillOnLowLifeConfig_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnLowLifeConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnLowLifeConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnLowLifeConfig, lifetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnLowLifeConfig, lifevalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnLowLifeConfig, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnLowLifeConfig, damagesource_),
  };
  BuffModSkillOnLowLifeConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModSkillOnLowLifeConfig_descriptor_,
      BuffModSkillOnLowLifeConfig::default_instance_,
      BuffModSkillOnLowLifeConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnLowLifeConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnLowLifeConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModSkillOnLowLifeConfig));
  BuffModTransformationConfig_descriptor_ = file->message_type(12);
  static const int BuffModTransformationConfig_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformationConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformationConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformationConfig, transroleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformationConfig, transbufftype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformationConfig, endwhendamaged_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformationConfig, inheritattribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformationConfig, inheritlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformationConfig, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformationConfig, inheritskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformationConfig, keepchainorder_),
  };
  BuffModTransformationConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModTransformationConfig_descriptor_,
      BuffModTransformationConfig::default_instance_,
      BuffModTransformationConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformationConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformationConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModTransformationConfig));
  BuffModEffectInRangeConditionConfig_descriptor_ = file->message_type(13);
  static const int BuffModEffectInRangeConditionConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConditionConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConditionConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConditionConfig, range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConditionConfig, effectcondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConditionConfig, attributedata_),
  };
  BuffModEffectInRangeConditionConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModEffectInRangeConditionConfig_descriptor_,
      BuffModEffectInRangeConditionConfig::default_instance_,
      BuffModEffectInRangeConditionConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConditionConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConditionConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModEffectInRangeConditionConfig));
  BuffModEffectInRangeConfig_descriptor_ = file->message_type(14);
  static const int BuffModEffectInRangeConfig_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConfig, range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConfig, effecttarget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConfig, timebeforeeffect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConfig, buffid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConfig, removewhenoutofrange_),
  };
  BuffModEffectInRangeConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModEffectInRangeConfig_descriptor_,
      BuffModEffectInRangeConfig::default_instance_,
      BuffModEffectInRangeConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModEffectInRangeConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModEffectInRangeConfig));
  BuffModPropertyFormulaConfig_descriptor_ = file->message_type(15);
  static const int BuffModPropertyFormulaConfig_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyFormulaConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyFormulaConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyFormulaConfig, formula_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyFormulaConfig, applytarget_),
  };
  BuffModPropertyFormulaConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModPropertyFormulaConfig_descriptor_,
      BuffModPropertyFormulaConfig::default_instance_,
      BuffModPropertyFormulaConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyFormulaConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModPropertyFormulaConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModPropertyFormulaConfig));
  BuffModResetBuffTimeConfig_descriptor_ = file->message_type(16);
  static const int BuffModResetBuffTimeConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModResetBuffTimeConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModResetBuffTimeConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModResetBuffTimeConfig, buffidarr_),
  };
  BuffModResetBuffTimeConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModResetBuffTimeConfig_descriptor_,
      BuffModResetBuffTimeConfig::default_instance_,
      BuffModResetBuffTimeConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModResetBuffTimeConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModResetBuffTimeConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModResetBuffTimeConfig));
  BuffModAddSkillConfig_descriptor_ = file->message_type(17);
  static const int BuffModAddSkillConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddSkillConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddSkillConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddSkillConfig, skillidarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddSkillConfig, useparentskilllevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddSkillConfig, skilllevel_),
  };
  BuffModAddSkillConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModAddSkillConfig_descriptor_,
      BuffModAddSkillConfig::default_instance_,
      BuffModAddSkillConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddSkillConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddSkillConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModAddSkillConfig));
  BuffModTauntConfig_descriptor_ = file->message_type(18);
  static const int BuffModTauntConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTauntConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTauntConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTauntConfig, buffid_),
  };
  BuffModTauntConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModTauntConfig_descriptor_,
      BuffModTauntConfig::default_instance_,
      BuffModTauntConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTauntConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTauntConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModTauntConfig));
  BuffModToughnessConfig_descriptor_ = file->message_type(19);
  static const int BuffModToughnessConfig_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModToughnessConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModToughnessConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModToughnessConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModToughnessConfig, param_),
  };
  BuffModToughnessConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModToughnessConfig_descriptor_,
      BuffModToughnessConfig::default_instance_,
      BuffModToughnessConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModToughnessConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModToughnessConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModToughnessConfig));
  BuffModNothingConfig_descriptor_ = file->message_type(20);
  static const int BuffModNothingConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModNothingConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModNothingConfig, delaytime_),
  };
  BuffModNothingConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModNothingConfig_descriptor_,
      BuffModNothingConfig::default_instance_,
      BuffModNothingConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModNothingConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModNothingConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModNothingConfig));
  BuffModTransformScaleConfig_descriptor_ = file->message_type(21);
  static const int BuffModTransformScaleConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformScaleConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformScaleConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformScaleConfig, percentparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformScaleConfig, scaletime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformScaleConfig, basedelta_),
  };
  BuffModTransformScaleConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModTransformScaleConfig_descriptor_,
      BuffModTransformScaleConfig::default_instance_,
      BuffModTransformScaleConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformScaleConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModTransformScaleConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModTransformScaleConfig));
  BuffModDieConfig_descriptor_ = file->message_type(22);
  static const int BuffModDieConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModDieConfig, active_),
  };
  BuffModDieConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModDieConfig_descriptor_,
      BuffModDieConfig::default_instance_,
      BuffModDieConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModDieConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModDieConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModDieConfig));
  BuffModDisableConfig_descriptor_ = file->message_type(23);
  static const int BuffModDisableConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModDisableConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModDisableConfig, delaytime_),
  };
  BuffModDisableConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModDisableConfig_descriptor_,
      BuffModDisableConfig::default_instance_,
      BuffModDisableConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModDisableConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModDisableConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModDisableConfig));
  BuffModScaleTextConfig_descriptor_ = file->message_type(24);
  static const int BuffModScaleTextConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModScaleTextConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModScaleTextConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModScaleTextConfig, scaleup_),
  };
  BuffModScaleTextConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModScaleTextConfig_descriptor_,
      BuffModScaleTextConfig::default_instance_,
      BuffModScaleTextConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModScaleTextConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModScaleTextConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModScaleTextConfig));
  BuffModRepeatSkillConfig_descriptor_ = file->message_type(25);
  static const int BuffModRepeatSkillConfig_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRepeatSkillConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRepeatSkillConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRepeatSkillConfig, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRepeatSkillConfig, interval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRepeatSkillConfig, releasecount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRepeatSkillConfig, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRepeatSkillConfig, castcondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRepeatSkillConfig, valuetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRepeatSkillConfig, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRepeatSkillConfig, ignorenoskill_),
  };
  BuffModRepeatSkillConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModRepeatSkillConfig_descriptor_,
      BuffModRepeatSkillConfig::default_instance_,
      BuffModRepeatSkillConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRepeatSkillConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRepeatSkillConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModRepeatSkillConfig));
  BuffModSkillOnEndConfig_descriptor_ = file->message_type(26);
  static const int BuffModSkillOnEndConfig_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnEndConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnEndConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnEndConfig, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnEndConfig, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnEndConfig, disabletype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnEndConfig, ignorenoskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnEndConfig, skillidback_),
  };
  BuffModSkillOnEndConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModSkillOnEndConfig_descriptor_,
      BuffModSkillOnEndConfig::default_instance_,
      BuffModSkillOnEndConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnEndConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSkillOnEndConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModSkillOnEndConfig));
  BuffModSpecifySkillTidConfig_descriptor_ = file->message_type(27);
  static const int BuffModSpecifySkillTidConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSpecifySkillTidConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSpecifySkillTidConfig, skilltidarr_),
  };
  BuffModSpecifySkillTidConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModSpecifySkillTidConfig_descriptor_,
      BuffModSpecifySkillTidConfig::default_instance_,
      BuffModSpecifySkillTidConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSpecifySkillTidConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModSpecifySkillTidConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModSpecifySkillTidConfig));
  BuffModMoveControlImmunityConfig_descriptor_ = file->message_type(28);
  static const int BuffModMoveControlImmunityConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModMoveControlImmunityConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModMoveControlImmunityConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModMoveControlImmunityConfig, energylevel_),
  };
  BuffModMoveControlImmunityConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModMoveControlImmunityConfig_descriptor_,
      BuffModMoveControlImmunityConfig::default_instance_,
      BuffModMoveControlImmunityConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModMoveControlImmunityConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModMoveControlImmunityConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModMoveControlImmunityConfig));
  BuffModUnlimitedShieldConfig_descriptor_ = file->message_type(29);
  static const int BuffModUnlimitedShieldConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModUnlimitedShieldConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModUnlimitedShieldConfig, percent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModUnlimitedShieldConfig, period_),
  };
  BuffModUnlimitedShieldConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModUnlimitedShieldConfig_descriptor_,
      BuffModUnlimitedShieldConfig::default_instance_,
      BuffModUnlimitedShieldConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModUnlimitedShieldConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModUnlimitedShieldConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModUnlimitedShieldConfig));
  BuffModShrinkControlDurationConfig_descriptor_ = file->message_type(30);
  static const int BuffModShrinkControlDurationConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModShrinkControlDurationConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModShrinkControlDurationConfig, shrinkrate_),
  };
  BuffModShrinkControlDurationConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModShrinkControlDurationConfig_descriptor_,
      BuffModShrinkControlDurationConfig::default_instance_,
      BuffModShrinkControlDurationConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModShrinkControlDurationConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModShrinkControlDurationConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModShrinkControlDurationConfig));
  BuffModHideSomeAppearanceConfig_descriptor_ = file->message_type(31);
  static const int BuffModHideSomeAppearanceConfig_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModHideSomeAppearanceConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModHideSomeAppearanceConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModHideSomeAppearanceConfig, bloodbar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModHideSomeAppearanceConfig, text_),
  };
  BuffModHideSomeAppearanceConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModHideSomeAppearanceConfig_descriptor_,
      BuffModHideSomeAppearanceConfig::default_instance_,
      BuffModHideSomeAppearanceConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModHideSomeAppearanceConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModHideSomeAppearanceConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModHideSomeAppearanceConfig));
  BuffModAddDefPointConfig_descriptor_ = file->message_type(32);
  static const int BuffModAddDefPointConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddDefPointConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddDefPointConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddDefPointConfig, point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddDefPointConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddDefPointConfig, color_),
  };
  BuffModAddDefPointConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModAddDefPointConfig_descriptor_,
      BuffModAddDefPointConfig::default_instance_,
      BuffModAddDefPointConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddDefPointConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModAddDefPointConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModAddDefPointConfig));
  BuffModRemoveDefPointConfig_descriptor_ = file->message_type(33);
  static const int BuffModRemoveDefPointConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRemoveDefPointConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRemoveDefPointConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRemoveDefPointConfig, skillid_),
  };
  BuffModRemoveDefPointConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModRemoveDefPointConfig_descriptor_,
      BuffModRemoveDefPointConfig::default_instance_,
      BuffModRemoveDefPointConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRemoveDefPointConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRemoveDefPointConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModRemoveDefPointConfig));
  BuffModConditionChangeConfig_descriptor_ = file->message_type(34);
  static const int BuffModConditionChangeConfig_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModConditionChangeConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModConditionChangeConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModConditionChangeConfig, maintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModConditionChangeConfig, relation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModConditionChangeConfig, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModConditionChangeConfig, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModConditionChangeConfig, param2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModConditionChangeConfig, paramarr_),
  };
  BuffModConditionChangeConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModConditionChangeConfig_descriptor_,
      BuffModConditionChangeConfig::default_instance_,
      BuffModConditionChangeConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModConditionChangeConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModConditionChangeConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModConditionChangeConfig));
  BuffModNoRageRecoverConfig_descriptor_ = file->message_type(35);
  static const int BuffModNoRageRecoverConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModNoRageRecoverConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModNoRageRecoverConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModNoRageRecoverConfig, endwhendamaged_),
  };
  BuffModNoRageRecoverConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModNoRageRecoverConfig_descriptor_,
      BuffModNoRageRecoverConfig::default_instance_,
      BuffModNoRageRecoverConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModNoRageRecoverConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModNoRageRecoverConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModNoRageRecoverConfig));
  BuffModInheritExistBuffStackConfig_descriptor_ = file->message_type(36);
  static const int BuffModInheritExistBuffStackConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModInheritExistBuffStackConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModInheritExistBuffStackConfig, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModInheritExistBuffStackConfig, buffid_),
  };
  BuffModInheritExistBuffStackConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModInheritExistBuffStackConfig_descriptor_,
      BuffModInheritExistBuffStackConfig::default_instance_,
      BuffModInheritExistBuffStackConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModInheritExistBuffStackConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModInheritExistBuffStackConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModInheritExistBuffStackConfig));
  BuffModReflectBuffConfig_descriptor_ = file->message_type(37);
  static const int BuffModReflectBuffConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModReflectBuffConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModReflectBuffConfig, cd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModReflectBuffConfig, reflectablesubtypes_),
  };
  BuffModReflectBuffConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModReflectBuffConfig_descriptor_,
      BuffModReflectBuffConfig::default_instance_,
      BuffModReflectBuffConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModReflectBuffConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModReflectBuffConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModReflectBuffConfig));
  BuffModFatalDmgShiftConfig_descriptor_ = file->message_type(38);
  static const int BuffModFatalDmgShiftConfig_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModFatalDmgShiftConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModFatalDmgShiftConfig, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModFatalDmgShiftConfig, cd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModFatalDmgShiftConfig, targettype_),
  };
  BuffModFatalDmgShiftConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModFatalDmgShiftConfig_descriptor_,
      BuffModFatalDmgShiftConfig::default_instance_,
      BuffModFatalDmgShiftConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModFatalDmgShiftConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModFatalDmgShiftConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModFatalDmgShiftConfig));
  BuffModRageImmunityConfig_descriptor_ = file->message_type(39);
  static const int BuffModRageImmunityConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRageImmunityConfig, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRageImmunityConfig, type_),
  };
  BuffModRageImmunityConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffModRageImmunityConfig_descriptor_,
      BuffModRageImmunityConfig::default_instance_,
      BuffModRageImmunityConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRageImmunityConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffModRageImmunityConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffModRageImmunityConfig));
  BuffBaseDataModel_descriptor_ = file->message_type(40);
  static const int BuffBaseDataModel_offsets_[30] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, labelid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, hitrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, maintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, subtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, lasttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, lasttimegrowth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, purgetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, purgebuffarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, overlytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, maxoverlynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, iconpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, starteffectname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, starteffectparent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, lasteffectparent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, endeffectname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, endeffectparent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, specialshader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, generalshader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, lastingaction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, lasteffectarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, lastactiondelay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, starteffect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, lasteffect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, endeffect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, removewhenbecontrolled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, needremovelastnonpermanenteffect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, subtypearr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, removewhenshapeshifted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, becleanlevel_),
  };
  BuffBaseDataModel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffBaseDataModel_descriptor_,
      BuffBaseDataModel::default_instance_,
      BuffBaseDataModel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffBaseDataModel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffBaseDataModel));
  EBattleAttrType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_module_2fBuffDataBase_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffDataModel_descriptor_, &BuffDataModel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffDatasModel_descriptor_, &BuffDatasModel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffDataAttribute_descriptor_, &BuffDataAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModPropertyDecConfig_descriptor_, &BuffModPropertyDecConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModChangeDmgHelper_descriptor_, &BuffModChangeDmgHelper::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModChangeDmgByBuffSubConfig_descriptor_, &BuffModChangeDmgByBuffSubConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModPropertyConfig_descriptor_, &BuffModPropertyConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffSingleEffect_descriptor_, &BuffSingleEffect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffRepeatedEffect_descriptor_, &BuffRepeatedEffect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModArmAttrAdd_descriptor_, &BuffModArmAttrAdd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModArmAttrAddConfig_descriptor_, &BuffModArmAttrAddConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModSkillOnLowLifeConfig_descriptor_, &BuffModSkillOnLowLifeConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModTransformationConfig_descriptor_, &BuffModTransformationConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModEffectInRangeConditionConfig_descriptor_, &BuffModEffectInRangeConditionConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModEffectInRangeConfig_descriptor_, &BuffModEffectInRangeConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModPropertyFormulaConfig_descriptor_, &BuffModPropertyFormulaConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModResetBuffTimeConfig_descriptor_, &BuffModResetBuffTimeConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModAddSkillConfig_descriptor_, &BuffModAddSkillConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModTauntConfig_descriptor_, &BuffModTauntConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModToughnessConfig_descriptor_, &BuffModToughnessConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModNothingConfig_descriptor_, &BuffModNothingConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModTransformScaleConfig_descriptor_, &BuffModTransformScaleConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModDieConfig_descriptor_, &BuffModDieConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModDisableConfig_descriptor_, &BuffModDisableConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModScaleTextConfig_descriptor_, &BuffModScaleTextConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModRepeatSkillConfig_descriptor_, &BuffModRepeatSkillConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModSkillOnEndConfig_descriptor_, &BuffModSkillOnEndConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModSpecifySkillTidConfig_descriptor_, &BuffModSpecifySkillTidConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModMoveControlImmunityConfig_descriptor_, &BuffModMoveControlImmunityConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModUnlimitedShieldConfig_descriptor_, &BuffModUnlimitedShieldConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModShrinkControlDurationConfig_descriptor_, &BuffModShrinkControlDurationConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModHideSomeAppearanceConfig_descriptor_, &BuffModHideSomeAppearanceConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModAddDefPointConfig_descriptor_, &BuffModAddDefPointConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModRemoveDefPointConfig_descriptor_, &BuffModRemoveDefPointConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModConditionChangeConfig_descriptor_, &BuffModConditionChangeConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModNoRageRecoverConfig_descriptor_, &BuffModNoRageRecoverConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModInheritExistBuffStackConfig_descriptor_, &BuffModInheritExistBuffStackConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModReflectBuffConfig_descriptor_, &BuffModReflectBuffConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModFatalDmgShiftConfig_descriptor_, &BuffModFatalDmgShiftConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffModRageImmunityConfig_descriptor_, &BuffModRageImmunityConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffBaseDataModel_descriptor_, &BuffBaseDataModel::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_module_2fBuffDataBase_2eproto() {
  delete BuffDataModel::default_instance_;
  delete BuffDataModel_reflection_;
  delete BuffDatasModel::default_instance_;
  delete BuffDatasModel_reflection_;
  delete BuffDataAttribute::default_instance_;
  delete BuffDataAttribute_reflection_;
  delete BuffModPropertyDecConfig::default_instance_;
  delete BuffModPropertyDecConfig_reflection_;
  delete BuffModChangeDmgHelper::default_instance_;
  delete BuffModChangeDmgHelper_reflection_;
  delete BuffModChangeDmgByBuffSubConfig::default_instance_;
  delete BuffModChangeDmgByBuffSubConfig_reflection_;
  delete BuffModPropertyConfig::default_instance_;
  delete BuffModPropertyConfig_reflection_;
  delete BuffSingleEffect::default_instance_;
  delete BuffSingleEffect_reflection_;
  delete BuffRepeatedEffect::default_instance_;
  delete BuffRepeatedEffect_reflection_;
  delete BuffModArmAttrAdd::default_instance_;
  delete BuffModArmAttrAdd_reflection_;
  delete BuffModArmAttrAddConfig::default_instance_;
  delete BuffModArmAttrAddConfig_reflection_;
  delete BuffModSkillOnLowLifeConfig::default_instance_;
  delete BuffModSkillOnLowLifeConfig_reflection_;
  delete BuffModTransformationConfig::default_instance_;
  delete BuffModTransformationConfig_reflection_;
  delete BuffModEffectInRangeConditionConfig::default_instance_;
  delete BuffModEffectInRangeConditionConfig_reflection_;
  delete BuffModEffectInRangeConfig::default_instance_;
  delete BuffModEffectInRangeConfig_reflection_;
  delete BuffModPropertyFormulaConfig::default_instance_;
  delete BuffModPropertyFormulaConfig_reflection_;
  delete BuffModResetBuffTimeConfig::default_instance_;
  delete BuffModResetBuffTimeConfig_reflection_;
  delete BuffModAddSkillConfig::default_instance_;
  delete BuffModAddSkillConfig_reflection_;
  delete BuffModTauntConfig::default_instance_;
  delete BuffModTauntConfig_reflection_;
  delete BuffModToughnessConfig::default_instance_;
  delete BuffModToughnessConfig_reflection_;
  delete BuffModNothingConfig::default_instance_;
  delete BuffModNothingConfig_reflection_;
  delete BuffModTransformScaleConfig::default_instance_;
  delete BuffModTransformScaleConfig_reflection_;
  delete BuffModDieConfig::default_instance_;
  delete BuffModDieConfig_reflection_;
  delete BuffModDisableConfig::default_instance_;
  delete BuffModDisableConfig_reflection_;
  delete BuffModScaleTextConfig::default_instance_;
  delete BuffModScaleTextConfig_reflection_;
  delete BuffModRepeatSkillConfig::default_instance_;
  delete BuffModRepeatSkillConfig_reflection_;
  delete BuffModSkillOnEndConfig::default_instance_;
  delete BuffModSkillOnEndConfig_reflection_;
  delete BuffModSpecifySkillTidConfig::default_instance_;
  delete BuffModSpecifySkillTidConfig_reflection_;
  delete BuffModMoveControlImmunityConfig::default_instance_;
  delete BuffModMoveControlImmunityConfig_reflection_;
  delete BuffModUnlimitedShieldConfig::default_instance_;
  delete BuffModUnlimitedShieldConfig_reflection_;
  delete BuffModShrinkControlDurationConfig::default_instance_;
  delete BuffModShrinkControlDurationConfig_reflection_;
  delete BuffModHideSomeAppearanceConfig::default_instance_;
  delete BuffModHideSomeAppearanceConfig_reflection_;
  delete BuffModAddDefPointConfig::default_instance_;
  delete BuffModAddDefPointConfig_reflection_;
  delete BuffModRemoveDefPointConfig::default_instance_;
  delete BuffModRemoveDefPointConfig_reflection_;
  delete BuffModConditionChangeConfig::default_instance_;
  delete BuffModConditionChangeConfig_reflection_;
  delete BuffModNoRageRecoverConfig::default_instance_;
  delete BuffModNoRageRecoverConfig_reflection_;
  delete BuffModInheritExistBuffStackConfig::default_instance_;
  delete BuffModInheritExistBuffStackConfig_reflection_;
  delete BuffModReflectBuffConfig::default_instance_;
  delete BuffModReflectBuffConfig_reflection_;
  delete BuffModFatalDmgShiftConfig::default_instance_;
  delete BuffModFatalDmgShiftConfig_reflection_;
  delete BuffModRageImmunityConfig::default_instance_;
  delete BuffModRageImmunityConfig_reflection_;
  delete BuffBaseDataModel::default_instance_;
  delete BuffBaseDataModel_reflection_;
}

void protobuf_AddDesc_module_2fBuffDataBase_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031module/BuffDataBase.proto\022\002pb\"e\n\rBuffD"
    "ataModel\022\024\n\014PercentParam\030\001 \001(\005\022\025\n\rPercen"
    "tGrowth\030\002 \001(\005\022\022\n\nValueParma\030\003 \001(\005\022\023\n\013Val"
    "ueGrowth\030\004 \001(\005\"f\n\016BuffDatasModel\022\024\n\014Perc"
    "entParam\030\001 \003(\005\022\025\n\rPercentGrowth\030\002 \003(\005\022\022\n"
    "\nValueParma\030\003 \003(\005\022\023\n\013ValueGrowth\030\004 \003(\005\"B"
    "\n\021BuffDataAttribute\022\014\n\004Type\030\001 \001(\005\022\037\n\004Dat"
    "a\030\002 \001(\0132\021.pb.BuffDataModel\"K\n\030BuffModPro"
    "pertyDecConfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tDelayT"
    "ime\030\002 \001(\005\022\014\n\004Type\030\003 \001(\005\"]\n\026BuffModChange"
    "DmgHelper\022\014\n\004Type\030\001 \001(\005\022\r\n\005Value\030\002 \001(\005\022\021"
    "\n\tAttribute\030\003 \001(\005\022\023\n\013ValueGrowth\030\004 \001(\005\"q"
    "\n\037BuffModChangeDmgByBuffSubConfig\022\016\n\006Act"
    "ive\030\001 \001(\010\022\021\n\tDelayTime\030\002 \001(\005\022+\n\007DataArr\030"
    "\003 \003(\0132\032.pb.BuffModChangeDmgHelper\"\235\001\n\025Bu"
    "ffModPropertyConfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tD"
    "elayTime\030\002 \001(\005\022&\n\007DataArr\030\003 \003(\0132\025.pb.Buf"
    "fDataAttribute\022!\n\004Type\030\004 \001(\0162\023.pb.EBattl"
    "eAttrType\022\026\n\016LifeAddPercent\030\005 \001(\005\"I\n\020Buf"
    "fSingleEffect\022\016\n\006Effect\030\001 \001(\t\022\016\n\006Socket\030"
    "\002 \001(\005\022\025\n\rTeamDirection\030\003 \001(\010\"a\n\022BuffRepe"
    "atedEffect\022\021\n\tEffectArr\030\001 \003(\t\022\016\n\006Socket\030"
    "\002 \001(\005\022\025\n\rTeamDirection\030\003 \001(\010\022\021\n\tDelayTim"
    "e\030\004 \001(\005\"e\n\021BuffModArmAttrAdd\022\022\n\nAttrSour"
    "ce\030\001 \001(\005\022\022\n\nAttrTarget\030\002 \001(\005\022\024\n\014PercentP"
    "aram\030\003 \001(\005\022\022\n\nLevelParam\030\004 \001(\005\"\177\n\027BuffMo"
    "dArmAttrAddConfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tDel"
    "ayTime\030\002 \001(\005\022)\n\nArmAttrArr\030\003 \003(\0132\025.pb.Bu"
    "ffModArmAttrAdd\022\026\n\016LifeAddPercent\030\004 \001(\005\""
    "\214\001\n\033BuffModSkillOnLowLifeConfig\022\016\n\006Activ"
    "e\030\001 \001(\010\022\021\n\tDelayTime\030\002 \001(\005\022\020\n\010LifeType\030\003"
    " \001(\005\022\021\n\tLifeValue\030\004 \001(\005\022\017\n\007SkillId\030\005 \001(\005"
    "\022\024\n\014DamageSource\030\006 \001(\005\"\361\001\n\033BuffModTransf"
    "ormationConfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tDelayT"
    "ime\030\002 \001(\005\022\023\n\013TransRoleID\030\003 \001(\005\022\025\n\rTransB"
    "uffType\030\004 \001(\005\022\026\n\016EndWhenDamaged\030\005 \001(\010\022\030\n"
    "\020InheritAttribute\030\006 \001(\010\022\024\n\014InheritLevel\030"
    "\007 \001(\010\022\r\n\005Level\030\010 \001(\005\022\024\n\014InheritSkill\030\t \001"
    "(\010\022\026\n\016KeepChainOrder\030\n \001(\010\"\236\001\n#BuffModEf"
    "fectInRangeConditionConfig\022\016\n\006Active\030\001 \001"
    "(\010\022\021\n\tDelayTime\030\002 \001(\005\022\r\n\005Range\030\003 \001(\005\022\027\n\017"
    "EffectCondition\030\004 \001(\005\022,\n\rAttributeData\030\005"
    " \001(\0132\025.pb.BuffDataAttribute\"\254\001\n\032BuffModE"
    "ffectInRangeConfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tDe"
    "layTime\030\002 \001(\005\022\r\n\005Range\030\003 \001(\005\022\024\n\014EffectTa"
    "rget\030\004 \001(\005\022\030\n\020TimeBeforeEffect\030\005 \001(\005\022\016\n\006"
    "BuffId\030\006 \001(\005\022\034\n\024RemoveWhenOutOfRange\030\007 \001"
    "(\010\"g\n\034BuffModPropertyFormulaConfig\022\016\n\006Ac"
    "tive\030\001 \001(\010\022\021\n\tDelayTime\030\002 \001(\005\022\017\n\007Formula"
    "\030\003 \001(\t\022\023\n\013ApplyTarget\030\004 \001(\005\"R\n\032BuffModRe"
    "setBuffTimeConfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tDel"
    "ayTime\030\002 \001(\005\022\021\n\tBuffIdArr\030\003 \003(\005\"\177\n\025BuffM"
    "odAddSkillConfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tDela"
    "yTime\030\002 \001(\005\022\022\n\nSkillIdArr\030\003 \003(\005\022\033\n\023UsePa"
    "rentSkillLevel\030\004 \001(\010\022\022\n\nSkillLevel\030\005 \001(\005"
    "\"G\n\022BuffModTauntConfig\022\016\n\006Active\030\001 \001(\010\022\021"
    "\n\tDelayTime\030\002 \001(\005\022\016\n\006BuffID\030\003 \001(\005\"X\n\026Buf"
    "fModToughnessConfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tD"
    "elayTime\030\002 \001(\005\022\014\n\004Type\030\003 \001(\005\022\r\n\005Param\030\004 "
    "\001(\005\"9\n\024BuffModNothingConfig\022\016\n\006Active\030\001 "
    "\001(\010\022\021\n\tDelayTime\030\002 \001(\005\"|\n\033BuffModTransfo"
    "rmScaleConfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tDelayTi"
    "me\030\002 \001(\005\022\024\n\014PercentParam\030\003 \001(\005\022\021\n\tScaleT"
    "ime\030\004 \001(\005\022\021\n\tBaseDelta\030\005 \001(\005\"\"\n\020BuffModD"
    "ieConfig\022\016\n\006Active\030\001 \001(\010\"9\n\024BuffModDisab"
    "leConfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tDelayTime\030\002 "
    "\001(\005\"L\n\026BuffModScaleTextConfig\022\016\n\006Active\030"
    "\001 \001(\010\022\021\n\tDelayTime\030\002 \001(\005\022\017\n\007ScaleUp\030\003 \001("
    "\010\"\327\001\n\030BuffModRepeatSkillConfig\022\016\n\006Active"
    "\030\001 \001(\010\022\021\n\tDelayTime\030\002 \001(\005\022\017\n\007SkillID\030\003 \001"
    "(\005\022\020\n\010Interval\030\004 \001(\005\022\024\n\014ReleaseCount\030\005 \001"
    "(\005\022\016\n\006Source\030\006 \001(\005\022\025\n\rCastCondition\030\007 \001("
    "\005\022\021\n\tValueType\030\010 \001(\005\022\016\n\006Param1\030\t \001(\005\022\025\n\r"
    "IgnoreNoSkill\030\n \001(\010\"\236\001\n\027BuffModSkillOnEn"
    "dConfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tDelayTime\030\002 \001"
    "(\005\022\017\n\007SkillID\030\003 \001(\005\022\016\n\006Source\030\004 \001(\005\022\023\n\013D"
    "isableType\030\005 \001(\005\022\025\n\rIgnoreNoSkill\030\006 \001(\010\022"
    "\023\n\013SkillIDBack\030\007 \001(\005\"C\n\034BuffModSpecifySk"
    "illTidConfig\022\016\n\006Active\030\001 \001(\010\022\023\n\013SkillTid"
    "Arr\030\002 \003(\005\"Z\n BuffModMoveControlImmunityC"
    "onfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tDelayTime\030\002 \001(\005"
    "\022\023\n\013EnergyLevel\030\003 \001(\005\"O\n\034BuffModUnlimite"
    "dShieldConfig\022\016\n\006Active\030\001 \001(\010\022\017\n\007Percent"
    "\030\002 \001(\005\022\016\n\006Period\030\003 \001(\005\"H\n\"BuffModShrinkC"
    "ontrolDurationConfig\022\016\n\006Active\030\001 \001(\010\022\022\n\n"
    "ShrinkRate\030\002 \001(\005\"d\n\037BuffModHideSomeAppea"
    "ranceConfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tDelayTime"
    "\030\002 \001(\005\022\020\n\010BloodBar\030\003 \001(\010\022\014\n\004Text\030\004 \001(\010\"i"
    "\n\030BuffModAddDefPointConfig\022\016\n\006Active\030\001 \001"
    "(\010\022\021\n\tDelayTime\030\002 \001(\005\022\r\n\005Point\030\003 \001(\005\022\014\n\004"
    "Type\030\004 \001(\005\022\r\n\005Color\030\005 \001(\005\"Q\n\033BuffModRemo"
    "veDefPointConfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tDela"
    "yTime\030\002 \001(\005\022\017\n\007SkillId\030\003 \001(\005\"\247\001\n\034BuffMod"
    "ConditionChangeConfig\022\016\n\006Active\030\001 \001(\010\022\021\n"
    "\tDelayTime\030\002 \001(\005\022\020\n\010MainType\030\003 \001(\005\022\020\n\010Re"
    "lation\030\004 \001(\005\022\016\n\006Target\030\005 \001(\005\022\016\n\006Param1\030\006"
    " \001(\005\022\016\n\006Param2\030\007 \001(\005\022\020\n\010ParamArr\030\010 \003(\005\"W"
    "\n\032BuffModNoRageRecoverConfig\022\016\n\006Active\030\001"
    " \001(\010\022\021\n\tDelayTime\030\002 \001(\005\022\026\n\016EndWhenDamage"
    "d\030\003 \001(\010\"W\n\"BuffModInheritExistBuffStackC"
    "onfig\022\016\n\006Active\030\001 \001(\010\022\021\n\tDelayTime\030\002 \001(\005"
    "\022\016\n\006BuffId\030\003 \001(\005\"S\n\030BuffModReflectBuffCo"
    "nfig\022\016\n\006Active\030\001 \001(\010\022\n\n\002CD\030\002 \001(\005\022\033\n\023Refl"
    "ectableSubTypes\030\003 \003(\005\"[\n\032BuffModFatalDmg"
    "ShiftConfig\022\016\n\006Active\030\001 \001(\010\022\r\n\005Count\030\002 \001"
    "(\005\022\n\n\002CD\030\003 \001(\005\022\022\n\nTargetType\030\004 \001(\005\"9\n\031Bu"
    "ffModRageImmunityConfig\022\016\n\006Active\030\001 \001(\010\022"
    "\014\n\004Type\030\002 \001(\005\"\374\005\n\021BuffBaseDataModel\022\014\n\004N"
    "ame\030\001 \001(\t\022\017\n\007LabelID\030\002 \001(\005\022\017\n\007HitRate\030\003 "
    "\001(\005\022\020\n\010MainType\030\004 \001(\005\022\017\n\007SubType\030\005 \001(\005\022\020"
    "\n\010LastTime\030\006 \001(\005\022\026\n\016LastTimeGrowth\030\007 \001(\005"
    "\022\021\n\tPurgeType\030\010 \001(\005\022\024\n\014PurgeBuffArr\030\031 \003("
    "\005\022\022\n\nOverlyType\030\t \001(\005\022\024\n\014MaxOverlyNum\030\n "
    "\001(\005\022\020\n\010IconPath\030\013 \001(\t\022\027\n\017StartEffectName"
    "\030\014 \001(\t\022\031\n\021StartEffectParent\030\r \001(\005\022\030\n\020Las"
    "tEffectParent\030\017 \001(\005\022\025\n\rEndEffectName\030\020 \001"
    "(\t\022\027\n\017EndEffectParent\030\021 \001(\005\022\025\n\rSpecialSh"
    "ader\030\022 \001(\t\022\025\n\rGeneralShader\030\032 \001(\t\022\025\n\rLas"
    "tingAction\030\023 \001(\t\022\025\n\rLastEffectArr\030\024 \003(\t\022"
    "\027\n\017LastActionDelay\030\025 \001(\005\022)\n\013StartEffect\030"
    "\026 \003(\0132\024.pb.BuffSingleEffect\022*\n\nLastEffec"
    "t\030\027 \003(\0132\026.pb.BuffRepeatedEffect\022\'\n\tEndEf"
    "fect\030\030 \003(\0132\024.pb.BuffSingleEffect\022\036\n\026Remo"
    "veWhenBeControlled\030\033 \001(\010\022(\n NeedRemoveLa"
    "stNonPermanentEffect\030\034 \001(\010\022\022\n\nSubTypeArr"
    "\030\035 \003(\005\022\036\n\026RemoveWhenShapeShifted\030\036 \001(\010\022\024"
    "\n\014BeCleanLevel\030\037 \001(\005*l\n\017EBattleAttrType\022"
    "\034\n\030BATTLE_ATTR_TYPE_INVALID\020\000\022\035\n\031BATTLE_"
    "ATTR_TYPE_INCREASE\020\001\022\034\n\030BATTLE_ATTR_TYPE"
    "_REDUECE\020\002", 5170);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "module/BuffDataBase.proto", &protobuf_RegisterTypes);
  BuffDataModel::default_instance_ = new BuffDataModel();
  BuffDatasModel::default_instance_ = new BuffDatasModel();
  BuffDataAttribute::default_instance_ = new BuffDataAttribute();
  BuffModPropertyDecConfig::default_instance_ = new BuffModPropertyDecConfig();
  BuffModChangeDmgHelper::default_instance_ = new BuffModChangeDmgHelper();
  BuffModChangeDmgByBuffSubConfig::default_instance_ = new BuffModChangeDmgByBuffSubConfig();
  BuffModPropertyConfig::default_instance_ = new BuffModPropertyConfig();
  BuffSingleEffect::default_instance_ = new BuffSingleEffect();
  BuffRepeatedEffect::default_instance_ = new BuffRepeatedEffect();
  BuffModArmAttrAdd::default_instance_ = new BuffModArmAttrAdd();
  BuffModArmAttrAddConfig::default_instance_ = new BuffModArmAttrAddConfig();
  BuffModSkillOnLowLifeConfig::default_instance_ = new BuffModSkillOnLowLifeConfig();
  BuffModTransformationConfig::default_instance_ = new BuffModTransformationConfig();
  BuffModEffectInRangeConditionConfig::default_instance_ = new BuffModEffectInRangeConditionConfig();
  BuffModEffectInRangeConfig::default_instance_ = new BuffModEffectInRangeConfig();
  BuffModPropertyFormulaConfig::default_instance_ = new BuffModPropertyFormulaConfig();
  BuffModResetBuffTimeConfig::default_instance_ = new BuffModResetBuffTimeConfig();
  BuffModAddSkillConfig::default_instance_ = new BuffModAddSkillConfig();
  BuffModTauntConfig::default_instance_ = new BuffModTauntConfig();
  BuffModToughnessConfig::default_instance_ = new BuffModToughnessConfig();
  BuffModNothingConfig::default_instance_ = new BuffModNothingConfig();
  BuffModTransformScaleConfig::default_instance_ = new BuffModTransformScaleConfig();
  BuffModDieConfig::default_instance_ = new BuffModDieConfig();
  BuffModDisableConfig::default_instance_ = new BuffModDisableConfig();
  BuffModScaleTextConfig::default_instance_ = new BuffModScaleTextConfig();
  BuffModRepeatSkillConfig::default_instance_ = new BuffModRepeatSkillConfig();
  BuffModSkillOnEndConfig::default_instance_ = new BuffModSkillOnEndConfig();
  BuffModSpecifySkillTidConfig::default_instance_ = new BuffModSpecifySkillTidConfig();
  BuffModMoveControlImmunityConfig::default_instance_ = new BuffModMoveControlImmunityConfig();
  BuffModUnlimitedShieldConfig::default_instance_ = new BuffModUnlimitedShieldConfig();
  BuffModShrinkControlDurationConfig::default_instance_ = new BuffModShrinkControlDurationConfig();
  BuffModHideSomeAppearanceConfig::default_instance_ = new BuffModHideSomeAppearanceConfig();
  BuffModAddDefPointConfig::default_instance_ = new BuffModAddDefPointConfig();
  BuffModRemoveDefPointConfig::default_instance_ = new BuffModRemoveDefPointConfig();
  BuffModConditionChangeConfig::default_instance_ = new BuffModConditionChangeConfig();
  BuffModNoRageRecoverConfig::default_instance_ = new BuffModNoRageRecoverConfig();
  BuffModInheritExistBuffStackConfig::default_instance_ = new BuffModInheritExistBuffStackConfig();
  BuffModReflectBuffConfig::default_instance_ = new BuffModReflectBuffConfig();
  BuffModFatalDmgShiftConfig::default_instance_ = new BuffModFatalDmgShiftConfig();
  BuffModRageImmunityConfig::default_instance_ = new BuffModRageImmunityConfig();
  BuffBaseDataModel::default_instance_ = new BuffBaseDataModel();
  BuffDataModel::default_instance_->InitAsDefaultInstance();
  BuffDatasModel::default_instance_->InitAsDefaultInstance();
  BuffDataAttribute::default_instance_->InitAsDefaultInstance();
  BuffModPropertyDecConfig::default_instance_->InitAsDefaultInstance();
  BuffModChangeDmgHelper::default_instance_->InitAsDefaultInstance();
  BuffModChangeDmgByBuffSubConfig::default_instance_->InitAsDefaultInstance();
  BuffModPropertyConfig::default_instance_->InitAsDefaultInstance();
  BuffSingleEffect::default_instance_->InitAsDefaultInstance();
  BuffRepeatedEffect::default_instance_->InitAsDefaultInstance();
  BuffModArmAttrAdd::default_instance_->InitAsDefaultInstance();
  BuffModArmAttrAddConfig::default_instance_->InitAsDefaultInstance();
  BuffModSkillOnLowLifeConfig::default_instance_->InitAsDefaultInstance();
  BuffModTransformationConfig::default_instance_->InitAsDefaultInstance();
  BuffModEffectInRangeConditionConfig::default_instance_->InitAsDefaultInstance();
  BuffModEffectInRangeConfig::default_instance_->InitAsDefaultInstance();
  BuffModPropertyFormulaConfig::default_instance_->InitAsDefaultInstance();
  BuffModResetBuffTimeConfig::default_instance_->InitAsDefaultInstance();
  BuffModAddSkillConfig::default_instance_->InitAsDefaultInstance();
  BuffModTauntConfig::default_instance_->InitAsDefaultInstance();
  BuffModToughnessConfig::default_instance_->InitAsDefaultInstance();
  BuffModNothingConfig::default_instance_->InitAsDefaultInstance();
  BuffModTransformScaleConfig::default_instance_->InitAsDefaultInstance();
  BuffModDieConfig::default_instance_->InitAsDefaultInstance();
  BuffModDisableConfig::default_instance_->InitAsDefaultInstance();
  BuffModScaleTextConfig::default_instance_->InitAsDefaultInstance();
  BuffModRepeatSkillConfig::default_instance_->InitAsDefaultInstance();
  BuffModSkillOnEndConfig::default_instance_->InitAsDefaultInstance();
  BuffModSpecifySkillTidConfig::default_instance_->InitAsDefaultInstance();
  BuffModMoveControlImmunityConfig::default_instance_->InitAsDefaultInstance();
  BuffModUnlimitedShieldConfig::default_instance_->InitAsDefaultInstance();
  BuffModShrinkControlDurationConfig::default_instance_->InitAsDefaultInstance();
  BuffModHideSomeAppearanceConfig::default_instance_->InitAsDefaultInstance();
  BuffModAddDefPointConfig::default_instance_->InitAsDefaultInstance();
  BuffModRemoveDefPointConfig::default_instance_->InitAsDefaultInstance();
  BuffModConditionChangeConfig::default_instance_->InitAsDefaultInstance();
  BuffModNoRageRecoverConfig::default_instance_->InitAsDefaultInstance();
  BuffModInheritExistBuffStackConfig::default_instance_->InitAsDefaultInstance();
  BuffModReflectBuffConfig::default_instance_->InitAsDefaultInstance();
  BuffModFatalDmgShiftConfig::default_instance_->InitAsDefaultInstance();
  BuffModRageImmunityConfig::default_instance_->InitAsDefaultInstance();
  BuffBaseDataModel::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_module_2fBuffDataBase_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_module_2fBuffDataBase_2eproto {
  StaticDescriptorInitializer_module_2fBuffDataBase_2eproto() {
    protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  }
} static_descriptor_initializer_module_2fBuffDataBase_2eproto_;
const ::google::protobuf::EnumDescriptor* EBattleAttrType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EBattleAttrType_descriptor_;
}
bool EBattleAttrType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int BuffDataModel::kPercentParamFieldNumber;
const int BuffDataModel::kPercentGrowthFieldNumber;
const int BuffDataModel::kValueParmaFieldNumber;
const int BuffDataModel::kValueGrowthFieldNumber;
#endif  // !_MSC_VER

BuffDataModel::BuffDataModel()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffDataModel)
}

void BuffDataModel::InitAsDefaultInstance() {
}

BuffDataModel::BuffDataModel(const BuffDataModel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffDataModel)
}

void BuffDataModel::SharedCtor() {
  _cached_size_ = 0;
  percentparam_ = 0;
  percentgrowth_ = 0;
  valueparma_ = 0;
  valuegrowth_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffDataModel::~BuffDataModel() {
  // @@protoc_insertion_point(destructor:pb.BuffDataModel)
  SharedDtor();
}

void BuffDataModel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffDataModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffDataModel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffDataModel_descriptor_;
}

const BuffDataModel& BuffDataModel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffDataModel* BuffDataModel::default_instance_ = NULL;

BuffDataModel* BuffDataModel::New() const {
  return new BuffDataModel;
}

void BuffDataModel::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffDataModel*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(percentparam_, valuegrowth_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffDataModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffDataModel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 PercentParam = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &percentparam_)));
          set_has_percentparam();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PercentGrowth;
        break;
      }

      // optional int32 PercentGrowth = 2;
      case 2: {
        if (tag == 16) {
         parse_PercentGrowth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &percentgrowth_)));
          set_has_percentgrowth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ValueParma;
        break;
      }

      // optional int32 ValueParma = 3;
      case 3: {
        if (tag == 24) {
         parse_ValueParma:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &valueparma_)));
          set_has_valueparma();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ValueGrowth;
        break;
      }

      // optional int32 ValueGrowth = 4;
      case 4: {
        if (tag == 32) {
         parse_ValueGrowth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &valuegrowth_)));
          set_has_valuegrowth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffDataModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffDataModel)
  return false;
#undef DO_
}

void BuffDataModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffDataModel)
  // optional int32 PercentParam = 1;
  if (has_percentparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->percentparam(), output);
  }

  // optional int32 PercentGrowth = 2;
  if (has_percentgrowth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->percentgrowth(), output);
  }

  // optional int32 ValueParma = 3;
  if (has_valueparma()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->valueparma(), output);
  }

  // optional int32 ValueGrowth = 4;
  if (has_valuegrowth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->valuegrowth(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffDataModel)
}

::google::protobuf::uint8* BuffDataModel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffDataModel)
  // optional int32 PercentParam = 1;
  if (has_percentparam()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->percentparam(), target);
  }

  // optional int32 PercentGrowth = 2;
  if (has_percentgrowth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->percentgrowth(), target);
  }

  // optional int32 ValueParma = 3;
  if (has_valueparma()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->valueparma(), target);
  }

  // optional int32 ValueGrowth = 4;
  if (has_valuegrowth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->valuegrowth(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffDataModel)
  return target;
}

int BuffDataModel::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 PercentParam = 1;
    if (has_percentparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->percentparam());
    }

    // optional int32 PercentGrowth = 2;
    if (has_percentgrowth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->percentgrowth());
    }

    // optional int32 ValueParma = 3;
    if (has_valueparma()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->valueparma());
    }

    // optional int32 ValueGrowth = 4;
    if (has_valuegrowth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->valuegrowth());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffDataModel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffDataModel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffDataModel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffDataModel::MergeFrom(const BuffDataModel& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_percentparam()) {
      set_percentparam(from.percentparam());
    }
    if (from.has_percentgrowth()) {
      set_percentgrowth(from.percentgrowth());
    }
    if (from.has_valueparma()) {
      set_valueparma(from.valueparma());
    }
    if (from.has_valuegrowth()) {
      set_valuegrowth(from.valuegrowth());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffDataModel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffDataModel::CopyFrom(const BuffDataModel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffDataModel::IsInitialized() const {

  return true;
}

void BuffDataModel::Swap(BuffDataModel* other) {
  if (other != this) {
    std::swap(percentparam_, other->percentparam_);
    std::swap(percentgrowth_, other->percentgrowth_);
    std::swap(valueparma_, other->valueparma_);
    std::swap(valuegrowth_, other->valuegrowth_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffDataModel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffDataModel_descriptor_;
  metadata.reflection = BuffDataModel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffDatasModel::kPercentParamFieldNumber;
const int BuffDatasModel::kPercentGrowthFieldNumber;
const int BuffDatasModel::kValueParmaFieldNumber;
const int BuffDatasModel::kValueGrowthFieldNumber;
#endif  // !_MSC_VER

BuffDatasModel::BuffDatasModel()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffDatasModel)
}

void BuffDatasModel::InitAsDefaultInstance() {
}

BuffDatasModel::BuffDatasModel(const BuffDatasModel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffDatasModel)
}

void BuffDatasModel::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffDatasModel::~BuffDatasModel() {
  // @@protoc_insertion_point(destructor:pb.BuffDatasModel)
  SharedDtor();
}

void BuffDatasModel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffDatasModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffDatasModel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffDatasModel_descriptor_;
}

const BuffDatasModel& BuffDatasModel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffDatasModel* BuffDatasModel::default_instance_ = NULL;

BuffDatasModel* BuffDatasModel::New() const {
  return new BuffDatasModel;
}

void BuffDatasModel::Clear() {
  percentparam_.Clear();
  percentgrowth_.Clear();
  valueparma_.Clear();
  valuegrowth_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffDatasModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffDatasModel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 PercentParam = 1;
      case 1: {
        if (tag == 8) {
         parse_PercentParam:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_percentparam())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_percentparam())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_PercentParam;
        if (input->ExpectTag(16)) goto parse_PercentGrowth;
        break;
      }

      // repeated int32 PercentGrowth = 2;
      case 2: {
        if (tag == 16) {
         parse_PercentGrowth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_percentgrowth())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_percentgrowth())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PercentGrowth;
        if (input->ExpectTag(24)) goto parse_ValueParma;
        break;
      }

      // repeated int32 ValueParma = 3;
      case 3: {
        if (tag == 24) {
         parse_ValueParma:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_valueparma())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_valueparma())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ValueParma;
        if (input->ExpectTag(32)) goto parse_ValueGrowth;
        break;
      }

      // repeated int32 ValueGrowth = 4;
      case 4: {
        if (tag == 32) {
         parse_ValueGrowth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_valuegrowth())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_valuegrowth())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ValueGrowth;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffDatasModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffDatasModel)
  return false;
#undef DO_
}

void BuffDatasModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffDatasModel)
  // repeated int32 PercentParam = 1;
  for (int i = 0; i < this->percentparam_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->percentparam(i), output);
  }

  // repeated int32 PercentGrowth = 2;
  for (int i = 0; i < this->percentgrowth_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->percentgrowth(i), output);
  }

  // repeated int32 ValueParma = 3;
  for (int i = 0; i < this->valueparma_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->valueparma(i), output);
  }

  // repeated int32 ValueGrowth = 4;
  for (int i = 0; i < this->valuegrowth_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->valuegrowth(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffDatasModel)
}

::google::protobuf::uint8* BuffDatasModel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffDatasModel)
  // repeated int32 PercentParam = 1;
  for (int i = 0; i < this->percentparam_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->percentparam(i), target);
  }

  // repeated int32 PercentGrowth = 2;
  for (int i = 0; i < this->percentgrowth_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->percentgrowth(i), target);
  }

  // repeated int32 ValueParma = 3;
  for (int i = 0; i < this->valueparma_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->valueparma(i), target);
  }

  // repeated int32 ValueGrowth = 4;
  for (int i = 0; i < this->valuegrowth_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->valuegrowth(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffDatasModel)
  return target;
}

int BuffDatasModel::ByteSize() const {
  int total_size = 0;

  // repeated int32 PercentParam = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->percentparam_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->percentparam(i));
    }
    total_size += 1 * this->percentparam_size() + data_size;
  }

  // repeated int32 PercentGrowth = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->percentgrowth_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->percentgrowth(i));
    }
    total_size += 1 * this->percentgrowth_size() + data_size;
  }

  // repeated int32 ValueParma = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->valueparma_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->valueparma(i));
    }
    total_size += 1 * this->valueparma_size() + data_size;
  }

  // repeated int32 ValueGrowth = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->valuegrowth_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->valuegrowth(i));
    }
    total_size += 1 * this->valuegrowth_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffDatasModel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffDatasModel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffDatasModel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffDatasModel::MergeFrom(const BuffDatasModel& from) {
  GOOGLE_CHECK_NE(&from, this);
  percentparam_.MergeFrom(from.percentparam_);
  percentgrowth_.MergeFrom(from.percentgrowth_);
  valueparma_.MergeFrom(from.valueparma_);
  valuegrowth_.MergeFrom(from.valuegrowth_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffDatasModel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffDatasModel::CopyFrom(const BuffDatasModel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffDatasModel::IsInitialized() const {

  return true;
}

void BuffDatasModel::Swap(BuffDatasModel* other) {
  if (other != this) {
    percentparam_.Swap(&other->percentparam_);
    percentgrowth_.Swap(&other->percentgrowth_);
    valueparma_.Swap(&other->valueparma_);
    valuegrowth_.Swap(&other->valuegrowth_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffDatasModel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffDatasModel_descriptor_;
  metadata.reflection = BuffDatasModel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffDataAttribute::kTypeFieldNumber;
const int BuffDataAttribute::kDataFieldNumber;
#endif  // !_MSC_VER

BuffDataAttribute::BuffDataAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffDataAttribute)
}

void BuffDataAttribute::InitAsDefaultInstance() {
  data_ = const_cast< ::pb::BuffDataModel*>(&::pb::BuffDataModel::default_instance());
}

BuffDataAttribute::BuffDataAttribute(const BuffDataAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffDataAttribute)
}

void BuffDataAttribute::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffDataAttribute::~BuffDataAttribute() {
  // @@protoc_insertion_point(destructor:pb.BuffDataAttribute)
  SharedDtor();
}

void BuffDataAttribute::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void BuffDataAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffDataAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffDataAttribute_descriptor_;
}

const BuffDataAttribute& BuffDataAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffDataAttribute* BuffDataAttribute::default_instance_ = NULL;

BuffDataAttribute* BuffDataAttribute::New() const {
  return new BuffDataAttribute;
}

void BuffDataAttribute::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0;
    if (has_data()) {
      if (data_ != NULL) data_->::pb::BuffDataModel::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffDataAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffDataAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Data;
        break;
      }

      // optional .pb.BuffDataModel Data = 2;
      case 2: {
        if (tag == 18) {
         parse_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffDataAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffDataAttribute)
  return false;
#undef DO_
}

void BuffDataAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffDataAttribute)
  // optional int32 Type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional .pb.BuffDataModel Data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffDataAttribute)
}

::google::protobuf::uint8* BuffDataAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffDataAttribute)
  // optional int32 Type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional .pb.BuffDataModel Data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffDataAttribute)
  return target;
}

int BuffDataAttribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional .pb.BuffDataModel Data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffDataAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffDataAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffDataAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffDataAttribute::MergeFrom(const BuffDataAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_data()) {
      mutable_data()->::pb::BuffDataModel::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffDataAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffDataAttribute::CopyFrom(const BuffDataAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffDataAttribute::IsInitialized() const {

  return true;
}

void BuffDataAttribute::Swap(BuffDataAttribute* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffDataAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffDataAttribute_descriptor_;
  metadata.reflection = BuffDataAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModPropertyDecConfig::kActiveFieldNumber;
const int BuffModPropertyDecConfig::kDelayTimeFieldNumber;
const int BuffModPropertyDecConfig::kTypeFieldNumber;
#endif  // !_MSC_VER

BuffModPropertyDecConfig::BuffModPropertyDecConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModPropertyDecConfig)
}

void BuffModPropertyDecConfig::InitAsDefaultInstance() {
}

BuffModPropertyDecConfig::BuffModPropertyDecConfig(const BuffModPropertyDecConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModPropertyDecConfig)
}

void BuffModPropertyDecConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModPropertyDecConfig::~BuffModPropertyDecConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModPropertyDecConfig)
  SharedDtor();
}

void BuffModPropertyDecConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModPropertyDecConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModPropertyDecConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModPropertyDecConfig_descriptor_;
}

const BuffModPropertyDecConfig& BuffModPropertyDecConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModPropertyDecConfig* BuffModPropertyDecConfig::default_instance_ = NULL;

BuffModPropertyDecConfig* BuffModPropertyDecConfig::New() const {
  return new BuffModPropertyDecConfig;
}

void BuffModPropertyDecConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModPropertyDecConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModPropertyDecConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModPropertyDecConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Type;
        break;
      }

      // optional int32 Type = 3;
      case 3: {
        if (tag == 24) {
         parse_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModPropertyDecConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModPropertyDecConfig)
  return false;
#undef DO_
}

void BuffModPropertyDecConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModPropertyDecConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 Type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModPropertyDecConfig)
}

::google::protobuf::uint8* BuffModPropertyDecConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModPropertyDecConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 Type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModPropertyDecConfig)
  return target;
}

int BuffModPropertyDecConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 Type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModPropertyDecConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModPropertyDecConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModPropertyDecConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModPropertyDecConfig::MergeFrom(const BuffModPropertyDecConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModPropertyDecConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModPropertyDecConfig::CopyFrom(const BuffModPropertyDecConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModPropertyDecConfig::IsInitialized() const {

  return true;
}

void BuffModPropertyDecConfig::Swap(BuffModPropertyDecConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModPropertyDecConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModPropertyDecConfig_descriptor_;
  metadata.reflection = BuffModPropertyDecConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModChangeDmgHelper::kTypeFieldNumber;
const int BuffModChangeDmgHelper::kValueFieldNumber;
const int BuffModChangeDmgHelper::kAttributeFieldNumber;
const int BuffModChangeDmgHelper::kValueGrowthFieldNumber;
#endif  // !_MSC_VER

BuffModChangeDmgHelper::BuffModChangeDmgHelper()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModChangeDmgHelper)
}

void BuffModChangeDmgHelper::InitAsDefaultInstance() {
}

BuffModChangeDmgHelper::BuffModChangeDmgHelper(const BuffModChangeDmgHelper& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModChangeDmgHelper)
}

void BuffModChangeDmgHelper::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  value_ = 0;
  attribute_ = 0;
  valuegrowth_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModChangeDmgHelper::~BuffModChangeDmgHelper() {
  // @@protoc_insertion_point(destructor:pb.BuffModChangeDmgHelper)
  SharedDtor();
}

void BuffModChangeDmgHelper::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModChangeDmgHelper::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModChangeDmgHelper::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModChangeDmgHelper_descriptor_;
}

const BuffModChangeDmgHelper& BuffModChangeDmgHelper::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModChangeDmgHelper* BuffModChangeDmgHelper::default_instance_ = NULL;

BuffModChangeDmgHelper* BuffModChangeDmgHelper::New() const {
  return new BuffModChangeDmgHelper;
}

void BuffModChangeDmgHelper::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModChangeDmgHelper*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(type_, valuegrowth_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModChangeDmgHelper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModChangeDmgHelper)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Value;
        break;
      }

      // optional int32 Value = 2;
      case 2: {
        if (tag == 16) {
         parse_Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Attribute;
        break;
      }

      // optional int32 Attribute = 3;
      case 3: {
        if (tag == 24) {
         parse_Attribute:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attribute_)));
          set_has_attribute();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ValueGrowth;
        break;
      }

      // optional int32 ValueGrowth = 4;
      case 4: {
        if (tag == 32) {
         parse_ValueGrowth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &valuegrowth_)));
          set_has_valuegrowth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModChangeDmgHelper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModChangeDmgHelper)
  return false;
#undef DO_
}

void BuffModChangeDmgHelper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModChangeDmgHelper)
  // optional int32 Type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 Value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  // optional int32 Attribute = 3;
  if (has_attribute()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->attribute(), output);
  }

  // optional int32 ValueGrowth = 4;
  if (has_valuegrowth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->valuegrowth(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModChangeDmgHelper)
}

::google::protobuf::uint8* BuffModChangeDmgHelper::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModChangeDmgHelper)
  // optional int32 Type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 Value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  // optional int32 Attribute = 3;
  if (has_attribute()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->attribute(), target);
  }

  // optional int32 ValueGrowth = 4;
  if (has_valuegrowth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->valuegrowth(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModChangeDmgHelper)
  return target;
}

int BuffModChangeDmgHelper::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 Value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

    // optional int32 Attribute = 3;
    if (has_attribute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attribute());
    }

    // optional int32 ValueGrowth = 4;
    if (has_valuegrowth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->valuegrowth());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModChangeDmgHelper::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModChangeDmgHelper* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModChangeDmgHelper*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModChangeDmgHelper::MergeFrom(const BuffModChangeDmgHelper& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_attribute()) {
      set_attribute(from.attribute());
    }
    if (from.has_valuegrowth()) {
      set_valuegrowth(from.valuegrowth());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModChangeDmgHelper::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModChangeDmgHelper::CopyFrom(const BuffModChangeDmgHelper& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModChangeDmgHelper::IsInitialized() const {

  return true;
}

void BuffModChangeDmgHelper::Swap(BuffModChangeDmgHelper* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(attribute_, other->attribute_);
    std::swap(valuegrowth_, other->valuegrowth_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModChangeDmgHelper::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModChangeDmgHelper_descriptor_;
  metadata.reflection = BuffModChangeDmgHelper_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModChangeDmgByBuffSubConfig::kActiveFieldNumber;
const int BuffModChangeDmgByBuffSubConfig::kDelayTimeFieldNumber;
const int BuffModChangeDmgByBuffSubConfig::kDataArrFieldNumber;
#endif  // !_MSC_VER

BuffModChangeDmgByBuffSubConfig::BuffModChangeDmgByBuffSubConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModChangeDmgByBuffSubConfig)
}

void BuffModChangeDmgByBuffSubConfig::InitAsDefaultInstance() {
}

BuffModChangeDmgByBuffSubConfig::BuffModChangeDmgByBuffSubConfig(const BuffModChangeDmgByBuffSubConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModChangeDmgByBuffSubConfig)
}

void BuffModChangeDmgByBuffSubConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModChangeDmgByBuffSubConfig::~BuffModChangeDmgByBuffSubConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModChangeDmgByBuffSubConfig)
  SharedDtor();
}

void BuffModChangeDmgByBuffSubConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModChangeDmgByBuffSubConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModChangeDmgByBuffSubConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModChangeDmgByBuffSubConfig_descriptor_;
}

const BuffModChangeDmgByBuffSubConfig& BuffModChangeDmgByBuffSubConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModChangeDmgByBuffSubConfig* BuffModChangeDmgByBuffSubConfig::default_instance_ = NULL;

BuffModChangeDmgByBuffSubConfig* BuffModChangeDmgByBuffSubConfig::New() const {
  return new BuffModChangeDmgByBuffSubConfig;
}

void BuffModChangeDmgByBuffSubConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModChangeDmgByBuffSubConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, delaytime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  dataarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModChangeDmgByBuffSubConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModChangeDmgByBuffSubConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_DataArr;
        break;
      }

      // repeated .pb.BuffModChangeDmgHelper DataArr = 3;
      case 3: {
        if (tag == 26) {
         parse_DataArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dataarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_DataArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModChangeDmgByBuffSubConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModChangeDmgByBuffSubConfig)
  return false;
#undef DO_
}

void BuffModChangeDmgByBuffSubConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModChangeDmgByBuffSubConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // repeated .pb.BuffModChangeDmgHelper DataArr = 3;
  for (int i = 0; i < this->dataarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dataarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModChangeDmgByBuffSubConfig)
}

::google::protobuf::uint8* BuffModChangeDmgByBuffSubConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModChangeDmgByBuffSubConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // repeated .pb.BuffModChangeDmgHelper DataArr = 3;
  for (int i = 0; i < this->dataarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dataarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModChangeDmgByBuffSubConfig)
  return target;
}

int BuffModChangeDmgByBuffSubConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

  }
  // repeated .pb.BuffModChangeDmgHelper DataArr = 3;
  total_size += 1 * this->dataarr_size();
  for (int i = 0; i < this->dataarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dataarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModChangeDmgByBuffSubConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModChangeDmgByBuffSubConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModChangeDmgByBuffSubConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModChangeDmgByBuffSubConfig::MergeFrom(const BuffModChangeDmgByBuffSubConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  dataarr_.MergeFrom(from.dataarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModChangeDmgByBuffSubConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModChangeDmgByBuffSubConfig::CopyFrom(const BuffModChangeDmgByBuffSubConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModChangeDmgByBuffSubConfig::IsInitialized() const {

  return true;
}

void BuffModChangeDmgByBuffSubConfig::Swap(BuffModChangeDmgByBuffSubConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    dataarr_.Swap(&other->dataarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModChangeDmgByBuffSubConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModChangeDmgByBuffSubConfig_descriptor_;
  metadata.reflection = BuffModChangeDmgByBuffSubConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModPropertyConfig::kActiveFieldNumber;
const int BuffModPropertyConfig::kDelayTimeFieldNumber;
const int BuffModPropertyConfig::kDataArrFieldNumber;
const int BuffModPropertyConfig::kTypeFieldNumber;
const int BuffModPropertyConfig::kLifeAddPercentFieldNumber;
#endif  // !_MSC_VER

BuffModPropertyConfig::BuffModPropertyConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModPropertyConfig)
}

void BuffModPropertyConfig::InitAsDefaultInstance() {
}

BuffModPropertyConfig::BuffModPropertyConfig(const BuffModPropertyConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModPropertyConfig)
}

void BuffModPropertyConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  type_ = 0;
  lifeaddpercent_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModPropertyConfig::~BuffModPropertyConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModPropertyConfig)
  SharedDtor();
}

void BuffModPropertyConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModPropertyConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModPropertyConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModPropertyConfig_descriptor_;
}

const BuffModPropertyConfig& BuffModPropertyConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModPropertyConfig* BuffModPropertyConfig::default_instance_ = NULL;

BuffModPropertyConfig* BuffModPropertyConfig::New() const {
  return new BuffModPropertyConfig;
}

void BuffModPropertyConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModPropertyConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, delaytime_);
  ZR_(type_, lifeaddpercent_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  dataarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModPropertyConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModPropertyConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_DataArr;
        break;
      }

      // repeated .pb.BuffDataAttribute DataArr = 3;
      case 3: {
        if (tag == 26) {
         parse_DataArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dataarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_DataArr;
        if (input->ExpectTag(32)) goto parse_Type;
        break;
      }

      // optional .pb.EBattleAttrType Type = 4;
      case 4: {
        if (tag == 32) {
         parse_Type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EBattleAttrType_IsValid(value)) {
            set_type(static_cast< ::pb::EBattleAttrType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_LifeAddPercent;
        break;
      }

      // optional int32 LifeAddPercent = 5;
      case 5: {
        if (tag == 40) {
         parse_LifeAddPercent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lifeaddpercent_)));
          set_has_lifeaddpercent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModPropertyConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModPropertyConfig)
  return false;
#undef DO_
}

void BuffModPropertyConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModPropertyConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // repeated .pb.BuffDataAttribute DataArr = 3;
  for (int i = 0; i < this->dataarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dataarr(i), output);
  }

  // optional .pb.EBattleAttrType Type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // optional int32 LifeAddPercent = 5;
  if (has_lifeaddpercent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->lifeaddpercent(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModPropertyConfig)
}

::google::protobuf::uint8* BuffModPropertyConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModPropertyConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // repeated .pb.BuffDataAttribute DataArr = 3;
  for (int i = 0; i < this->dataarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dataarr(i), target);
  }

  // optional .pb.EBattleAttrType Type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // optional int32 LifeAddPercent = 5;
  if (has_lifeaddpercent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->lifeaddpercent(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModPropertyConfig)
  return target;
}

int BuffModPropertyConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional .pb.EBattleAttrType Type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int32 LifeAddPercent = 5;
    if (has_lifeaddpercent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lifeaddpercent());
    }

  }
  // repeated .pb.BuffDataAttribute DataArr = 3;
  total_size += 1 * this->dataarr_size();
  for (int i = 0; i < this->dataarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dataarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModPropertyConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModPropertyConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModPropertyConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModPropertyConfig::MergeFrom(const BuffModPropertyConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  dataarr_.MergeFrom(from.dataarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_lifeaddpercent()) {
      set_lifeaddpercent(from.lifeaddpercent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModPropertyConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModPropertyConfig::CopyFrom(const BuffModPropertyConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModPropertyConfig::IsInitialized() const {

  return true;
}

void BuffModPropertyConfig::Swap(BuffModPropertyConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    dataarr_.Swap(&other->dataarr_);
    std::swap(type_, other->type_);
    std::swap(lifeaddpercent_, other->lifeaddpercent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModPropertyConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModPropertyConfig_descriptor_;
  metadata.reflection = BuffModPropertyConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffSingleEffect::kEffectFieldNumber;
const int BuffSingleEffect::kSocketFieldNumber;
const int BuffSingleEffect::kTeamDirectionFieldNumber;
#endif  // !_MSC_VER

BuffSingleEffect::BuffSingleEffect()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffSingleEffect)
}

void BuffSingleEffect::InitAsDefaultInstance() {
}

BuffSingleEffect::BuffSingleEffect(const BuffSingleEffect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffSingleEffect)
}

void BuffSingleEffect::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  effect_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  socket_ = 0;
  teamdirection_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffSingleEffect::~BuffSingleEffect() {
  // @@protoc_insertion_point(destructor:pb.BuffSingleEffect)
  SharedDtor();
}

void BuffSingleEffect::SharedDtor() {
  if (effect_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete effect_;
  }
  if (this != default_instance_) {
  }
}

void BuffSingleEffect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffSingleEffect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffSingleEffect_descriptor_;
}

const BuffSingleEffect& BuffSingleEffect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffSingleEffect* BuffSingleEffect::default_instance_ = NULL;

BuffSingleEffect* BuffSingleEffect::New() const {
  return new BuffSingleEffect;
}

void BuffSingleEffect::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffSingleEffect*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(socket_, teamdirection_);
    if (has_effect()) {
      if (effect_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        effect_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffSingleEffect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffSingleEffect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Effect = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->effect().data(), this->effect().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "effect");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Socket;
        break;
      }

      // optional int32 Socket = 2;
      case 2: {
        if (tag == 16) {
         parse_Socket:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socket_)));
          set_has_socket();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_TeamDirection;
        break;
      }

      // optional bool TeamDirection = 3;
      case 3: {
        if (tag == 24) {
         parse_TeamDirection:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &teamdirection_)));
          set_has_teamdirection();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffSingleEffect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffSingleEffect)
  return false;
#undef DO_
}

void BuffSingleEffect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffSingleEffect)
  // optional string Effect = 1;
  if (has_effect()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->effect().data(), this->effect().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "effect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->effect(), output);
  }

  // optional int32 Socket = 2;
  if (has_socket()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->socket(), output);
  }

  // optional bool TeamDirection = 3;
  if (has_teamdirection()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->teamdirection(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffSingleEffect)
}

::google::protobuf::uint8* BuffSingleEffect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffSingleEffect)
  // optional string Effect = 1;
  if (has_effect()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->effect().data(), this->effect().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "effect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->effect(), target);
  }

  // optional int32 Socket = 2;
  if (has_socket()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->socket(), target);
  }

  // optional bool TeamDirection = 3;
  if (has_teamdirection()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->teamdirection(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffSingleEffect)
  return target;
}

int BuffSingleEffect::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Effect = 1;
    if (has_effect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effect());
    }

    // optional int32 Socket = 2;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->socket());
    }

    // optional bool TeamDirection = 3;
    if (has_teamdirection()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffSingleEffect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffSingleEffect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffSingleEffect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffSingleEffect::MergeFrom(const BuffSingleEffect& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_effect()) {
      set_effect(from.effect());
    }
    if (from.has_socket()) {
      set_socket(from.socket());
    }
    if (from.has_teamdirection()) {
      set_teamdirection(from.teamdirection());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffSingleEffect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffSingleEffect::CopyFrom(const BuffSingleEffect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffSingleEffect::IsInitialized() const {

  return true;
}

void BuffSingleEffect::Swap(BuffSingleEffect* other) {
  if (other != this) {
    std::swap(effect_, other->effect_);
    std::swap(socket_, other->socket_);
    std::swap(teamdirection_, other->teamdirection_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffSingleEffect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffSingleEffect_descriptor_;
  metadata.reflection = BuffSingleEffect_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffRepeatedEffect::kEffectArrFieldNumber;
const int BuffRepeatedEffect::kSocketFieldNumber;
const int BuffRepeatedEffect::kTeamDirectionFieldNumber;
const int BuffRepeatedEffect::kDelayTimeFieldNumber;
#endif  // !_MSC_VER

BuffRepeatedEffect::BuffRepeatedEffect()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffRepeatedEffect)
}

void BuffRepeatedEffect::InitAsDefaultInstance() {
}

BuffRepeatedEffect::BuffRepeatedEffect(const BuffRepeatedEffect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffRepeatedEffect)
}

void BuffRepeatedEffect::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  socket_ = 0;
  teamdirection_ = false;
  delaytime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffRepeatedEffect::~BuffRepeatedEffect() {
  // @@protoc_insertion_point(destructor:pb.BuffRepeatedEffect)
  SharedDtor();
}

void BuffRepeatedEffect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffRepeatedEffect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffRepeatedEffect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffRepeatedEffect_descriptor_;
}

const BuffRepeatedEffect& BuffRepeatedEffect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffRepeatedEffect* BuffRepeatedEffect::default_instance_ = NULL;

BuffRepeatedEffect* BuffRepeatedEffect::New() const {
  return new BuffRepeatedEffect;
}

void BuffRepeatedEffect::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffRepeatedEffect*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(socket_, delaytime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  effectarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffRepeatedEffect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffRepeatedEffect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string EffectArr = 1;
      case 1: {
        if (tag == 10) {
         parse_EffectArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_effectarr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->effectarr(this->effectarr_size() - 1).data(),
            this->effectarr(this->effectarr_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "effectarr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_EffectArr;
        if (input->ExpectTag(16)) goto parse_Socket;
        break;
      }

      // optional int32 Socket = 2;
      case 2: {
        if (tag == 16) {
         parse_Socket:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socket_)));
          set_has_socket();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_TeamDirection;
        break;
      }

      // optional bool TeamDirection = 3;
      case 3: {
        if (tag == 24) {
         parse_TeamDirection:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &teamdirection_)));
          set_has_teamdirection();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 4;
      case 4: {
        if (tag == 32) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffRepeatedEffect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffRepeatedEffect)
  return false;
#undef DO_
}

void BuffRepeatedEffect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffRepeatedEffect)
  // repeated string EffectArr = 1;
  for (int i = 0; i < this->effectarr_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->effectarr(i).data(), this->effectarr(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "effectarr");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->effectarr(i), output);
  }

  // optional int32 Socket = 2;
  if (has_socket()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->socket(), output);
  }

  // optional bool TeamDirection = 3;
  if (has_teamdirection()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->teamdirection(), output);
  }

  // optional int32 DelayTime = 4;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->delaytime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffRepeatedEffect)
}

::google::protobuf::uint8* BuffRepeatedEffect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffRepeatedEffect)
  // repeated string EffectArr = 1;
  for (int i = 0; i < this->effectarr_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->effectarr(i).data(), this->effectarr(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "effectarr");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->effectarr(i), target);
  }

  // optional int32 Socket = 2;
  if (has_socket()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->socket(), target);
  }

  // optional bool TeamDirection = 3;
  if (has_teamdirection()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->teamdirection(), target);
  }

  // optional int32 DelayTime = 4;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->delaytime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffRepeatedEffect)
  return target;
}

int BuffRepeatedEffect::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 Socket = 2;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->socket());
    }

    // optional bool TeamDirection = 3;
    if (has_teamdirection()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 4;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

  }
  // repeated string EffectArr = 1;
  total_size += 1 * this->effectarr_size();
  for (int i = 0; i < this->effectarr_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->effectarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffRepeatedEffect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffRepeatedEffect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffRepeatedEffect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffRepeatedEffect::MergeFrom(const BuffRepeatedEffect& from) {
  GOOGLE_CHECK_NE(&from, this);
  effectarr_.MergeFrom(from.effectarr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_socket()) {
      set_socket(from.socket());
    }
    if (from.has_teamdirection()) {
      set_teamdirection(from.teamdirection());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffRepeatedEffect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffRepeatedEffect::CopyFrom(const BuffRepeatedEffect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffRepeatedEffect::IsInitialized() const {

  return true;
}

void BuffRepeatedEffect::Swap(BuffRepeatedEffect* other) {
  if (other != this) {
    effectarr_.Swap(&other->effectarr_);
    std::swap(socket_, other->socket_);
    std::swap(teamdirection_, other->teamdirection_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffRepeatedEffect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffRepeatedEffect_descriptor_;
  metadata.reflection = BuffRepeatedEffect_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModArmAttrAdd::kAttrSourceFieldNumber;
const int BuffModArmAttrAdd::kAttrTargetFieldNumber;
const int BuffModArmAttrAdd::kPercentParamFieldNumber;
const int BuffModArmAttrAdd::kLevelParamFieldNumber;
#endif  // !_MSC_VER

BuffModArmAttrAdd::BuffModArmAttrAdd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModArmAttrAdd)
}

void BuffModArmAttrAdd::InitAsDefaultInstance() {
}

BuffModArmAttrAdd::BuffModArmAttrAdd(const BuffModArmAttrAdd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModArmAttrAdd)
}

void BuffModArmAttrAdd::SharedCtor() {
  _cached_size_ = 0;
  attrsource_ = 0;
  attrtarget_ = 0;
  percentparam_ = 0;
  levelparam_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModArmAttrAdd::~BuffModArmAttrAdd() {
  // @@protoc_insertion_point(destructor:pb.BuffModArmAttrAdd)
  SharedDtor();
}

void BuffModArmAttrAdd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModArmAttrAdd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModArmAttrAdd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModArmAttrAdd_descriptor_;
}

const BuffModArmAttrAdd& BuffModArmAttrAdd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModArmAttrAdd* BuffModArmAttrAdd::default_instance_ = NULL;

BuffModArmAttrAdd* BuffModArmAttrAdd::New() const {
  return new BuffModArmAttrAdd;
}

void BuffModArmAttrAdd::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModArmAttrAdd*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(attrsource_, levelparam_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModArmAttrAdd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModArmAttrAdd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 AttrSource = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attrsource_)));
          set_has_attrsource();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AttrTarget;
        break;
      }

      // optional int32 AttrTarget = 2;
      case 2: {
        if (tag == 16) {
         parse_AttrTarget:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attrtarget_)));
          set_has_attrtarget();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PercentParam;
        break;
      }

      // optional int32 PercentParam = 3;
      case 3: {
        if (tag == 24) {
         parse_PercentParam:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &percentparam_)));
          set_has_percentparam();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_LevelParam;
        break;
      }

      // optional int32 LevelParam = 4;
      case 4: {
        if (tag == 32) {
         parse_LevelParam:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levelparam_)));
          set_has_levelparam();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModArmAttrAdd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModArmAttrAdd)
  return false;
#undef DO_
}

void BuffModArmAttrAdd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModArmAttrAdd)
  // optional int32 AttrSource = 1;
  if (has_attrsource()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->attrsource(), output);
  }

  // optional int32 AttrTarget = 2;
  if (has_attrtarget()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->attrtarget(), output);
  }

  // optional int32 PercentParam = 3;
  if (has_percentparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->percentparam(), output);
  }

  // optional int32 LevelParam = 4;
  if (has_levelparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->levelparam(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModArmAttrAdd)
}

::google::protobuf::uint8* BuffModArmAttrAdd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModArmAttrAdd)
  // optional int32 AttrSource = 1;
  if (has_attrsource()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->attrsource(), target);
  }

  // optional int32 AttrTarget = 2;
  if (has_attrtarget()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->attrtarget(), target);
  }

  // optional int32 PercentParam = 3;
  if (has_percentparam()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->percentparam(), target);
  }

  // optional int32 LevelParam = 4;
  if (has_levelparam()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->levelparam(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModArmAttrAdd)
  return target;
}

int BuffModArmAttrAdd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 AttrSource = 1;
    if (has_attrsource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attrsource());
    }

    // optional int32 AttrTarget = 2;
    if (has_attrtarget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attrtarget());
    }

    // optional int32 PercentParam = 3;
    if (has_percentparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->percentparam());
    }

    // optional int32 LevelParam = 4;
    if (has_levelparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->levelparam());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModArmAttrAdd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModArmAttrAdd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModArmAttrAdd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModArmAttrAdd::MergeFrom(const BuffModArmAttrAdd& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_attrsource()) {
      set_attrsource(from.attrsource());
    }
    if (from.has_attrtarget()) {
      set_attrtarget(from.attrtarget());
    }
    if (from.has_percentparam()) {
      set_percentparam(from.percentparam());
    }
    if (from.has_levelparam()) {
      set_levelparam(from.levelparam());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModArmAttrAdd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModArmAttrAdd::CopyFrom(const BuffModArmAttrAdd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModArmAttrAdd::IsInitialized() const {

  return true;
}

void BuffModArmAttrAdd::Swap(BuffModArmAttrAdd* other) {
  if (other != this) {
    std::swap(attrsource_, other->attrsource_);
    std::swap(attrtarget_, other->attrtarget_);
    std::swap(percentparam_, other->percentparam_);
    std::swap(levelparam_, other->levelparam_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModArmAttrAdd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModArmAttrAdd_descriptor_;
  metadata.reflection = BuffModArmAttrAdd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModArmAttrAddConfig::kActiveFieldNumber;
const int BuffModArmAttrAddConfig::kDelayTimeFieldNumber;
const int BuffModArmAttrAddConfig::kArmAttrArrFieldNumber;
const int BuffModArmAttrAddConfig::kLifeAddPercentFieldNumber;
#endif  // !_MSC_VER

BuffModArmAttrAddConfig::BuffModArmAttrAddConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModArmAttrAddConfig)
}

void BuffModArmAttrAddConfig::InitAsDefaultInstance() {
}

BuffModArmAttrAddConfig::BuffModArmAttrAddConfig(const BuffModArmAttrAddConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModArmAttrAddConfig)
}

void BuffModArmAttrAddConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  lifeaddpercent_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModArmAttrAddConfig::~BuffModArmAttrAddConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModArmAttrAddConfig)
  SharedDtor();
}

void BuffModArmAttrAddConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModArmAttrAddConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModArmAttrAddConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModArmAttrAddConfig_descriptor_;
}

const BuffModArmAttrAddConfig& BuffModArmAttrAddConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModArmAttrAddConfig* BuffModArmAttrAddConfig::default_instance_ = NULL;

BuffModArmAttrAddConfig* BuffModArmAttrAddConfig::New() const {
  return new BuffModArmAttrAddConfig;
}

void BuffModArmAttrAddConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModArmAttrAddConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 11) {
    ZR_(active_, delaytime_);
    lifeaddpercent_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  armattrarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModArmAttrAddConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModArmAttrAddConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArmAttrArr;
        break;
      }

      // repeated .pb.BuffModArmAttrAdd ArmAttrArr = 3;
      case 3: {
        if (tag == 26) {
         parse_ArmAttrArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_armattrarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ArmAttrArr;
        if (input->ExpectTag(32)) goto parse_LifeAddPercent;
        break;
      }

      // optional int32 LifeAddPercent = 4;
      case 4: {
        if (tag == 32) {
         parse_LifeAddPercent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lifeaddpercent_)));
          set_has_lifeaddpercent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModArmAttrAddConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModArmAttrAddConfig)
  return false;
#undef DO_
}

void BuffModArmAttrAddConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModArmAttrAddConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // repeated .pb.BuffModArmAttrAdd ArmAttrArr = 3;
  for (int i = 0; i < this->armattrarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->armattrarr(i), output);
  }

  // optional int32 LifeAddPercent = 4;
  if (has_lifeaddpercent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->lifeaddpercent(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModArmAttrAddConfig)
}

::google::protobuf::uint8* BuffModArmAttrAddConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModArmAttrAddConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // repeated .pb.BuffModArmAttrAdd ArmAttrArr = 3;
  for (int i = 0; i < this->armattrarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->armattrarr(i), target);
  }

  // optional int32 LifeAddPercent = 4;
  if (has_lifeaddpercent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->lifeaddpercent(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModArmAttrAddConfig)
  return target;
}

int BuffModArmAttrAddConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 LifeAddPercent = 4;
    if (has_lifeaddpercent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lifeaddpercent());
    }

  }
  // repeated .pb.BuffModArmAttrAdd ArmAttrArr = 3;
  total_size += 1 * this->armattrarr_size();
  for (int i = 0; i < this->armattrarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->armattrarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModArmAttrAddConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModArmAttrAddConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModArmAttrAddConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModArmAttrAddConfig::MergeFrom(const BuffModArmAttrAddConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  armattrarr_.MergeFrom(from.armattrarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_lifeaddpercent()) {
      set_lifeaddpercent(from.lifeaddpercent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModArmAttrAddConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModArmAttrAddConfig::CopyFrom(const BuffModArmAttrAddConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModArmAttrAddConfig::IsInitialized() const {

  return true;
}

void BuffModArmAttrAddConfig::Swap(BuffModArmAttrAddConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    armattrarr_.Swap(&other->armattrarr_);
    std::swap(lifeaddpercent_, other->lifeaddpercent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModArmAttrAddConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModArmAttrAddConfig_descriptor_;
  metadata.reflection = BuffModArmAttrAddConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModSkillOnLowLifeConfig::kActiveFieldNumber;
const int BuffModSkillOnLowLifeConfig::kDelayTimeFieldNumber;
const int BuffModSkillOnLowLifeConfig::kLifeTypeFieldNumber;
const int BuffModSkillOnLowLifeConfig::kLifeValueFieldNumber;
const int BuffModSkillOnLowLifeConfig::kSkillIdFieldNumber;
const int BuffModSkillOnLowLifeConfig::kDamageSourceFieldNumber;
#endif  // !_MSC_VER

BuffModSkillOnLowLifeConfig::BuffModSkillOnLowLifeConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModSkillOnLowLifeConfig)
}

void BuffModSkillOnLowLifeConfig::InitAsDefaultInstance() {
}

BuffModSkillOnLowLifeConfig::BuffModSkillOnLowLifeConfig(const BuffModSkillOnLowLifeConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModSkillOnLowLifeConfig)
}

void BuffModSkillOnLowLifeConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  lifetype_ = 0;
  lifevalue_ = 0;
  skillid_ = 0;
  damagesource_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModSkillOnLowLifeConfig::~BuffModSkillOnLowLifeConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModSkillOnLowLifeConfig)
  SharedDtor();
}

void BuffModSkillOnLowLifeConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModSkillOnLowLifeConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModSkillOnLowLifeConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModSkillOnLowLifeConfig_descriptor_;
}

const BuffModSkillOnLowLifeConfig& BuffModSkillOnLowLifeConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModSkillOnLowLifeConfig* BuffModSkillOnLowLifeConfig::default_instance_ = NULL;

BuffModSkillOnLowLifeConfig* BuffModSkillOnLowLifeConfig::New() const {
  return new BuffModSkillOnLowLifeConfig;
}

void BuffModSkillOnLowLifeConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModSkillOnLowLifeConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(active_, damagesource_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModSkillOnLowLifeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModSkillOnLowLifeConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LifeType;
        break;
      }

      // optional int32 LifeType = 3;
      case 3: {
        if (tag == 24) {
         parse_LifeType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lifetype_)));
          set_has_lifetype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_LifeValue;
        break;
      }

      // optional int32 LifeValue = 4;
      case 4: {
        if (tag == 32) {
         parse_LifeValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lifevalue_)));
          set_has_lifevalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_SkillId;
        break;
      }

      // optional int32 SkillId = 5;
      case 5: {
        if (tag == 40) {
         parse_SkillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_DamageSource;
        break;
      }

      // optional int32 DamageSource = 6;
      case 6: {
        if (tag == 48) {
         parse_DamageSource:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damagesource_)));
          set_has_damagesource();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModSkillOnLowLifeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModSkillOnLowLifeConfig)
  return false;
#undef DO_
}

void BuffModSkillOnLowLifeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModSkillOnLowLifeConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 LifeType = 3;
  if (has_lifetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lifetype(), output);
  }

  // optional int32 LifeValue = 4;
  if (has_lifevalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->lifevalue(), output);
  }

  // optional int32 SkillId = 5;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->skillid(), output);
  }

  // optional int32 DamageSource = 6;
  if (has_damagesource()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->damagesource(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModSkillOnLowLifeConfig)
}

::google::protobuf::uint8* BuffModSkillOnLowLifeConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModSkillOnLowLifeConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 LifeType = 3;
  if (has_lifetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lifetype(), target);
  }

  // optional int32 LifeValue = 4;
  if (has_lifevalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->lifevalue(), target);
  }

  // optional int32 SkillId = 5;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->skillid(), target);
  }

  // optional int32 DamageSource = 6;
  if (has_damagesource()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->damagesource(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModSkillOnLowLifeConfig)
  return target;
}

int BuffModSkillOnLowLifeConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 LifeType = 3;
    if (has_lifetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lifetype());
    }

    // optional int32 LifeValue = 4;
    if (has_lifevalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lifevalue());
    }

    // optional int32 SkillId = 5;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

    // optional int32 DamageSource = 6;
    if (has_damagesource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damagesource());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModSkillOnLowLifeConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModSkillOnLowLifeConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModSkillOnLowLifeConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModSkillOnLowLifeConfig::MergeFrom(const BuffModSkillOnLowLifeConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_lifetype()) {
      set_lifetype(from.lifetype());
    }
    if (from.has_lifevalue()) {
      set_lifevalue(from.lifevalue());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_damagesource()) {
      set_damagesource(from.damagesource());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModSkillOnLowLifeConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModSkillOnLowLifeConfig::CopyFrom(const BuffModSkillOnLowLifeConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModSkillOnLowLifeConfig::IsInitialized() const {

  return true;
}

void BuffModSkillOnLowLifeConfig::Swap(BuffModSkillOnLowLifeConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(lifetype_, other->lifetype_);
    std::swap(lifevalue_, other->lifevalue_);
    std::swap(skillid_, other->skillid_);
    std::swap(damagesource_, other->damagesource_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModSkillOnLowLifeConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModSkillOnLowLifeConfig_descriptor_;
  metadata.reflection = BuffModSkillOnLowLifeConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModTransformationConfig::kActiveFieldNumber;
const int BuffModTransformationConfig::kDelayTimeFieldNumber;
const int BuffModTransformationConfig::kTransRoleIDFieldNumber;
const int BuffModTransformationConfig::kTransBuffTypeFieldNumber;
const int BuffModTransformationConfig::kEndWhenDamagedFieldNumber;
const int BuffModTransformationConfig::kInheritAttributeFieldNumber;
const int BuffModTransformationConfig::kInheritLevelFieldNumber;
const int BuffModTransformationConfig::kLevelFieldNumber;
const int BuffModTransformationConfig::kInheritSkillFieldNumber;
const int BuffModTransformationConfig::kKeepChainOrderFieldNumber;
#endif  // !_MSC_VER

BuffModTransformationConfig::BuffModTransformationConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModTransformationConfig)
}

void BuffModTransformationConfig::InitAsDefaultInstance() {
}

BuffModTransformationConfig::BuffModTransformationConfig(const BuffModTransformationConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModTransformationConfig)
}

void BuffModTransformationConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  transroleid_ = 0;
  transbufftype_ = 0;
  endwhendamaged_ = false;
  inheritattribute_ = false;
  inheritlevel_ = false;
  level_ = 0;
  inheritskill_ = false;
  keepchainorder_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModTransformationConfig::~BuffModTransformationConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModTransformationConfig)
  SharedDtor();
}

void BuffModTransformationConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModTransformationConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModTransformationConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModTransformationConfig_descriptor_;
}

const BuffModTransformationConfig& BuffModTransformationConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModTransformationConfig* BuffModTransformationConfig::default_instance_ = NULL;

BuffModTransformationConfig* BuffModTransformationConfig::New() const {
  return new BuffModTransformationConfig;
}

void BuffModTransformationConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModTransformationConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(delaytime_, level_);
  }
  ZR_(inheritskill_, keepchainorder_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModTransformationConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModTransformationConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_TransRoleID;
        break;
      }

      // optional int32 TransRoleID = 3;
      case 3: {
        if (tag == 24) {
         parse_TransRoleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transroleid_)));
          set_has_transroleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_TransBuffType;
        break;
      }

      // optional int32 TransBuffType = 4;
      case 4: {
        if (tag == 32) {
         parse_TransBuffType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transbufftype_)));
          set_has_transbufftype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_EndWhenDamaged;
        break;
      }

      // optional bool EndWhenDamaged = 5;
      case 5: {
        if (tag == 40) {
         parse_EndWhenDamaged:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &endwhendamaged_)));
          set_has_endwhendamaged();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_InheritAttribute;
        break;
      }

      // optional bool InheritAttribute = 6;
      case 6: {
        if (tag == 48) {
         parse_InheritAttribute:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &inheritattribute_)));
          set_has_inheritattribute();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_InheritLevel;
        break;
      }

      // optional bool InheritLevel = 7;
      case 7: {
        if (tag == 56) {
         parse_InheritLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &inheritlevel_)));
          set_has_inheritlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Level;
        break;
      }

      // optional int32 Level = 8;
      case 8: {
        if (tag == 64) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_InheritSkill;
        break;
      }

      // optional bool InheritSkill = 9;
      case 9: {
        if (tag == 72) {
         parse_InheritSkill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &inheritskill_)));
          set_has_inheritskill();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_KeepChainOrder;
        break;
      }

      // optional bool KeepChainOrder = 10;
      case 10: {
        if (tag == 80) {
         parse_KeepChainOrder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keepchainorder_)));
          set_has_keepchainorder();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModTransformationConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModTransformationConfig)
  return false;
#undef DO_
}

void BuffModTransformationConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModTransformationConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 TransRoleID = 3;
  if (has_transroleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->transroleid(), output);
  }

  // optional int32 TransBuffType = 4;
  if (has_transbufftype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->transbufftype(), output);
  }

  // optional bool EndWhenDamaged = 5;
  if (has_endwhendamaged()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->endwhendamaged(), output);
  }

  // optional bool InheritAttribute = 6;
  if (has_inheritattribute()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->inheritattribute(), output);
  }

  // optional bool InheritLevel = 7;
  if (has_inheritlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->inheritlevel(), output);
  }

  // optional int32 Level = 8;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->level(), output);
  }

  // optional bool InheritSkill = 9;
  if (has_inheritskill()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->inheritskill(), output);
  }

  // optional bool KeepChainOrder = 10;
  if (has_keepchainorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->keepchainorder(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModTransformationConfig)
}

::google::protobuf::uint8* BuffModTransformationConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModTransformationConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 TransRoleID = 3;
  if (has_transroleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->transroleid(), target);
  }

  // optional int32 TransBuffType = 4;
  if (has_transbufftype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->transbufftype(), target);
  }

  // optional bool EndWhenDamaged = 5;
  if (has_endwhendamaged()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->endwhendamaged(), target);
  }

  // optional bool InheritAttribute = 6;
  if (has_inheritattribute()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->inheritattribute(), target);
  }

  // optional bool InheritLevel = 7;
  if (has_inheritlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->inheritlevel(), target);
  }

  // optional int32 Level = 8;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->level(), target);
  }

  // optional bool InheritSkill = 9;
  if (has_inheritskill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->inheritskill(), target);
  }

  // optional bool KeepChainOrder = 10;
  if (has_keepchainorder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->keepchainorder(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModTransformationConfig)
  return target;
}

int BuffModTransformationConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 TransRoleID = 3;
    if (has_transroleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transroleid());
    }

    // optional int32 TransBuffType = 4;
    if (has_transbufftype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transbufftype());
    }

    // optional bool EndWhenDamaged = 5;
    if (has_endwhendamaged()) {
      total_size += 1 + 1;
    }

    // optional bool InheritAttribute = 6;
    if (has_inheritattribute()) {
      total_size += 1 + 1;
    }

    // optional bool InheritLevel = 7;
    if (has_inheritlevel()) {
      total_size += 1 + 1;
    }

    // optional int32 Level = 8;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool InheritSkill = 9;
    if (has_inheritskill()) {
      total_size += 1 + 1;
    }

    // optional bool KeepChainOrder = 10;
    if (has_keepchainorder()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModTransformationConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModTransformationConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModTransformationConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModTransformationConfig::MergeFrom(const BuffModTransformationConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_transroleid()) {
      set_transroleid(from.transroleid());
    }
    if (from.has_transbufftype()) {
      set_transbufftype(from.transbufftype());
    }
    if (from.has_endwhendamaged()) {
      set_endwhendamaged(from.endwhendamaged());
    }
    if (from.has_inheritattribute()) {
      set_inheritattribute(from.inheritattribute());
    }
    if (from.has_inheritlevel()) {
      set_inheritlevel(from.inheritlevel());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_inheritskill()) {
      set_inheritskill(from.inheritskill());
    }
    if (from.has_keepchainorder()) {
      set_keepchainorder(from.keepchainorder());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModTransformationConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModTransformationConfig::CopyFrom(const BuffModTransformationConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModTransformationConfig::IsInitialized() const {

  return true;
}

void BuffModTransformationConfig::Swap(BuffModTransformationConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(transroleid_, other->transroleid_);
    std::swap(transbufftype_, other->transbufftype_);
    std::swap(endwhendamaged_, other->endwhendamaged_);
    std::swap(inheritattribute_, other->inheritattribute_);
    std::swap(inheritlevel_, other->inheritlevel_);
    std::swap(level_, other->level_);
    std::swap(inheritskill_, other->inheritskill_);
    std::swap(keepchainorder_, other->keepchainorder_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModTransformationConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModTransformationConfig_descriptor_;
  metadata.reflection = BuffModTransformationConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModEffectInRangeConditionConfig::kActiveFieldNumber;
const int BuffModEffectInRangeConditionConfig::kDelayTimeFieldNumber;
const int BuffModEffectInRangeConditionConfig::kRangeFieldNumber;
const int BuffModEffectInRangeConditionConfig::kEffectConditionFieldNumber;
const int BuffModEffectInRangeConditionConfig::kAttributeDataFieldNumber;
#endif  // !_MSC_VER

BuffModEffectInRangeConditionConfig::BuffModEffectInRangeConditionConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModEffectInRangeConditionConfig)
}

void BuffModEffectInRangeConditionConfig::InitAsDefaultInstance() {
  attributedata_ = const_cast< ::pb::BuffDataAttribute*>(&::pb::BuffDataAttribute::default_instance());
}

BuffModEffectInRangeConditionConfig::BuffModEffectInRangeConditionConfig(const BuffModEffectInRangeConditionConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModEffectInRangeConditionConfig)
}

void BuffModEffectInRangeConditionConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  range_ = 0;
  effectcondition_ = 0;
  attributedata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModEffectInRangeConditionConfig::~BuffModEffectInRangeConditionConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModEffectInRangeConditionConfig)
  SharedDtor();
}

void BuffModEffectInRangeConditionConfig::SharedDtor() {
  if (this != default_instance_) {
    delete attributedata_;
  }
}

void BuffModEffectInRangeConditionConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModEffectInRangeConditionConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModEffectInRangeConditionConfig_descriptor_;
}

const BuffModEffectInRangeConditionConfig& BuffModEffectInRangeConditionConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModEffectInRangeConditionConfig* BuffModEffectInRangeConditionConfig::default_instance_ = NULL;

BuffModEffectInRangeConditionConfig* BuffModEffectInRangeConditionConfig::New() const {
  return new BuffModEffectInRangeConditionConfig;
}

void BuffModEffectInRangeConditionConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModEffectInRangeConditionConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(active_, effectcondition_);
    if (has_attributedata()) {
      if (attributedata_ != NULL) attributedata_->::pb::BuffDataAttribute::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModEffectInRangeConditionConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModEffectInRangeConditionConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Range;
        break;
      }

      // optional int32 Range = 3;
      case 3: {
        if (tag == 24) {
         parse_Range:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_)));
          set_has_range();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_EffectCondition;
        break;
      }

      // optional int32 EffectCondition = 4;
      case 4: {
        if (tag == 32) {
         parse_EffectCondition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effectcondition_)));
          set_has_effectcondition();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_AttributeData;
        break;
      }

      // optional .pb.BuffDataAttribute AttributeData = 5;
      case 5: {
        if (tag == 42) {
         parse_AttributeData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attributedata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModEffectInRangeConditionConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModEffectInRangeConditionConfig)
  return false;
#undef DO_
}

void BuffModEffectInRangeConditionConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModEffectInRangeConditionConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 Range = 3;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->range(), output);
  }

  // optional int32 EffectCondition = 4;
  if (has_effectcondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->effectcondition(), output);
  }

  // optional .pb.BuffDataAttribute AttributeData = 5;
  if (has_attributedata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->attributedata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModEffectInRangeConditionConfig)
}

::google::protobuf::uint8* BuffModEffectInRangeConditionConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModEffectInRangeConditionConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 Range = 3;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->range(), target);
  }

  // optional int32 EffectCondition = 4;
  if (has_effectcondition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->effectcondition(), target);
  }

  // optional .pb.BuffDataAttribute AttributeData = 5;
  if (has_attributedata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->attributedata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModEffectInRangeConditionConfig)
  return target;
}

int BuffModEffectInRangeConditionConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 Range = 3;
    if (has_range()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->range());
    }

    // optional int32 EffectCondition = 4;
    if (has_effectcondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effectcondition());
    }

    // optional .pb.BuffDataAttribute AttributeData = 5;
    if (has_attributedata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attributedata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModEffectInRangeConditionConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModEffectInRangeConditionConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModEffectInRangeConditionConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModEffectInRangeConditionConfig::MergeFrom(const BuffModEffectInRangeConditionConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_range()) {
      set_range(from.range());
    }
    if (from.has_effectcondition()) {
      set_effectcondition(from.effectcondition());
    }
    if (from.has_attributedata()) {
      mutable_attributedata()->::pb::BuffDataAttribute::MergeFrom(from.attributedata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModEffectInRangeConditionConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModEffectInRangeConditionConfig::CopyFrom(const BuffModEffectInRangeConditionConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModEffectInRangeConditionConfig::IsInitialized() const {

  return true;
}

void BuffModEffectInRangeConditionConfig::Swap(BuffModEffectInRangeConditionConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(range_, other->range_);
    std::swap(effectcondition_, other->effectcondition_);
    std::swap(attributedata_, other->attributedata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModEffectInRangeConditionConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModEffectInRangeConditionConfig_descriptor_;
  metadata.reflection = BuffModEffectInRangeConditionConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModEffectInRangeConfig::kActiveFieldNumber;
const int BuffModEffectInRangeConfig::kDelayTimeFieldNumber;
const int BuffModEffectInRangeConfig::kRangeFieldNumber;
const int BuffModEffectInRangeConfig::kEffectTargetFieldNumber;
const int BuffModEffectInRangeConfig::kTimeBeforeEffectFieldNumber;
const int BuffModEffectInRangeConfig::kBuffIdFieldNumber;
const int BuffModEffectInRangeConfig::kRemoveWhenOutOfRangeFieldNumber;
#endif  // !_MSC_VER

BuffModEffectInRangeConfig::BuffModEffectInRangeConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModEffectInRangeConfig)
}

void BuffModEffectInRangeConfig::InitAsDefaultInstance() {
}

BuffModEffectInRangeConfig::BuffModEffectInRangeConfig(const BuffModEffectInRangeConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModEffectInRangeConfig)
}

void BuffModEffectInRangeConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  range_ = 0;
  effecttarget_ = 0;
  timebeforeeffect_ = 0;
  buffid_ = 0;
  removewhenoutofrange_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModEffectInRangeConfig::~BuffModEffectInRangeConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModEffectInRangeConfig)
  SharedDtor();
}

void BuffModEffectInRangeConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModEffectInRangeConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModEffectInRangeConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModEffectInRangeConfig_descriptor_;
}

const BuffModEffectInRangeConfig& BuffModEffectInRangeConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModEffectInRangeConfig* BuffModEffectInRangeConfig::default_instance_ = NULL;

BuffModEffectInRangeConfig* BuffModEffectInRangeConfig::New() const {
  return new BuffModEffectInRangeConfig;
}

void BuffModEffectInRangeConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModEffectInRangeConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(delaytime_, buffid_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModEffectInRangeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModEffectInRangeConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Range;
        break;
      }

      // optional int32 Range = 3;
      case 3: {
        if (tag == 24) {
         parse_Range:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_)));
          set_has_range();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_EffectTarget;
        break;
      }

      // optional int32 EffectTarget = 4;
      case 4: {
        if (tag == 32) {
         parse_EffectTarget:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effecttarget_)));
          set_has_effecttarget();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_TimeBeforeEffect;
        break;
      }

      // optional int32 TimeBeforeEffect = 5;
      case 5: {
        if (tag == 40) {
         parse_TimeBeforeEffect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timebeforeeffect_)));
          set_has_timebeforeeffect();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_BuffId;
        break;
      }

      // optional int32 BuffId = 6;
      case 6: {
        if (tag == 48) {
         parse_BuffId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buffid_)));
          set_has_buffid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_RemoveWhenOutOfRange;
        break;
      }

      // optional bool RemoveWhenOutOfRange = 7;
      case 7: {
        if (tag == 56) {
         parse_RemoveWhenOutOfRange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &removewhenoutofrange_)));
          set_has_removewhenoutofrange();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModEffectInRangeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModEffectInRangeConfig)
  return false;
#undef DO_
}

void BuffModEffectInRangeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModEffectInRangeConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 Range = 3;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->range(), output);
  }

  // optional int32 EffectTarget = 4;
  if (has_effecttarget()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->effecttarget(), output);
  }

  // optional int32 TimeBeforeEffect = 5;
  if (has_timebeforeeffect()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->timebeforeeffect(), output);
  }

  // optional int32 BuffId = 6;
  if (has_buffid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->buffid(), output);
  }

  // optional bool RemoveWhenOutOfRange = 7;
  if (has_removewhenoutofrange()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->removewhenoutofrange(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModEffectInRangeConfig)
}

::google::protobuf::uint8* BuffModEffectInRangeConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModEffectInRangeConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 Range = 3;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->range(), target);
  }

  // optional int32 EffectTarget = 4;
  if (has_effecttarget()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->effecttarget(), target);
  }

  // optional int32 TimeBeforeEffect = 5;
  if (has_timebeforeeffect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->timebeforeeffect(), target);
  }

  // optional int32 BuffId = 6;
  if (has_buffid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->buffid(), target);
  }

  // optional bool RemoveWhenOutOfRange = 7;
  if (has_removewhenoutofrange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->removewhenoutofrange(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModEffectInRangeConfig)
  return target;
}

int BuffModEffectInRangeConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 Range = 3;
    if (has_range()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->range());
    }

    // optional int32 EffectTarget = 4;
    if (has_effecttarget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effecttarget());
    }

    // optional int32 TimeBeforeEffect = 5;
    if (has_timebeforeeffect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timebeforeeffect());
    }

    // optional int32 BuffId = 6;
    if (has_buffid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buffid());
    }

    // optional bool RemoveWhenOutOfRange = 7;
    if (has_removewhenoutofrange()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModEffectInRangeConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModEffectInRangeConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModEffectInRangeConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModEffectInRangeConfig::MergeFrom(const BuffModEffectInRangeConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_range()) {
      set_range(from.range());
    }
    if (from.has_effecttarget()) {
      set_effecttarget(from.effecttarget());
    }
    if (from.has_timebeforeeffect()) {
      set_timebeforeeffect(from.timebeforeeffect());
    }
    if (from.has_buffid()) {
      set_buffid(from.buffid());
    }
    if (from.has_removewhenoutofrange()) {
      set_removewhenoutofrange(from.removewhenoutofrange());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModEffectInRangeConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModEffectInRangeConfig::CopyFrom(const BuffModEffectInRangeConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModEffectInRangeConfig::IsInitialized() const {

  return true;
}

void BuffModEffectInRangeConfig::Swap(BuffModEffectInRangeConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(range_, other->range_);
    std::swap(effecttarget_, other->effecttarget_);
    std::swap(timebeforeeffect_, other->timebeforeeffect_);
    std::swap(buffid_, other->buffid_);
    std::swap(removewhenoutofrange_, other->removewhenoutofrange_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModEffectInRangeConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModEffectInRangeConfig_descriptor_;
  metadata.reflection = BuffModEffectInRangeConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModPropertyFormulaConfig::kActiveFieldNumber;
const int BuffModPropertyFormulaConfig::kDelayTimeFieldNumber;
const int BuffModPropertyFormulaConfig::kFormulaFieldNumber;
const int BuffModPropertyFormulaConfig::kApplyTargetFieldNumber;
#endif  // !_MSC_VER

BuffModPropertyFormulaConfig::BuffModPropertyFormulaConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModPropertyFormulaConfig)
}

void BuffModPropertyFormulaConfig::InitAsDefaultInstance() {
}

BuffModPropertyFormulaConfig::BuffModPropertyFormulaConfig(const BuffModPropertyFormulaConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModPropertyFormulaConfig)
}

void BuffModPropertyFormulaConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  formula_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applytarget_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModPropertyFormulaConfig::~BuffModPropertyFormulaConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModPropertyFormulaConfig)
  SharedDtor();
}

void BuffModPropertyFormulaConfig::SharedDtor() {
  if (formula_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete formula_;
  }
  if (this != default_instance_) {
  }
}

void BuffModPropertyFormulaConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModPropertyFormulaConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModPropertyFormulaConfig_descriptor_;
}

const BuffModPropertyFormulaConfig& BuffModPropertyFormulaConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModPropertyFormulaConfig* BuffModPropertyFormulaConfig::default_instance_ = NULL;

BuffModPropertyFormulaConfig* BuffModPropertyFormulaConfig::New() const {
  return new BuffModPropertyFormulaConfig;
}

void BuffModPropertyFormulaConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModPropertyFormulaConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(active_, delaytime_);
    if (has_formula()) {
      if (formula_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        formula_->clear();
      }
    }
    applytarget_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModPropertyFormulaConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModPropertyFormulaConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Formula;
        break;
      }

      // optional string Formula = 3;
      case 3: {
        if (tag == 26) {
         parse_Formula:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_formula()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->formula().data(), this->formula().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "formula");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ApplyTarget;
        break;
      }

      // optional int32 ApplyTarget = 4;
      case 4: {
        if (tag == 32) {
         parse_ApplyTarget:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &applytarget_)));
          set_has_applytarget();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModPropertyFormulaConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModPropertyFormulaConfig)
  return false;
#undef DO_
}

void BuffModPropertyFormulaConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModPropertyFormulaConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional string Formula = 3;
  if (has_formula()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->formula().data(), this->formula().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "formula");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->formula(), output);
  }

  // optional int32 ApplyTarget = 4;
  if (has_applytarget()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->applytarget(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModPropertyFormulaConfig)
}

::google::protobuf::uint8* BuffModPropertyFormulaConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModPropertyFormulaConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional string Formula = 3;
  if (has_formula()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->formula().data(), this->formula().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "formula");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->formula(), target);
  }

  // optional int32 ApplyTarget = 4;
  if (has_applytarget()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->applytarget(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModPropertyFormulaConfig)
  return target;
}

int BuffModPropertyFormulaConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional string Formula = 3;
    if (has_formula()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->formula());
    }

    // optional int32 ApplyTarget = 4;
    if (has_applytarget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->applytarget());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModPropertyFormulaConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModPropertyFormulaConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModPropertyFormulaConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModPropertyFormulaConfig::MergeFrom(const BuffModPropertyFormulaConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_formula()) {
      set_formula(from.formula());
    }
    if (from.has_applytarget()) {
      set_applytarget(from.applytarget());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModPropertyFormulaConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModPropertyFormulaConfig::CopyFrom(const BuffModPropertyFormulaConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModPropertyFormulaConfig::IsInitialized() const {

  return true;
}

void BuffModPropertyFormulaConfig::Swap(BuffModPropertyFormulaConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(formula_, other->formula_);
    std::swap(applytarget_, other->applytarget_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModPropertyFormulaConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModPropertyFormulaConfig_descriptor_;
  metadata.reflection = BuffModPropertyFormulaConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModResetBuffTimeConfig::kActiveFieldNumber;
const int BuffModResetBuffTimeConfig::kDelayTimeFieldNumber;
const int BuffModResetBuffTimeConfig::kBuffIdArrFieldNumber;
#endif  // !_MSC_VER

BuffModResetBuffTimeConfig::BuffModResetBuffTimeConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModResetBuffTimeConfig)
}

void BuffModResetBuffTimeConfig::InitAsDefaultInstance() {
}

BuffModResetBuffTimeConfig::BuffModResetBuffTimeConfig(const BuffModResetBuffTimeConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModResetBuffTimeConfig)
}

void BuffModResetBuffTimeConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModResetBuffTimeConfig::~BuffModResetBuffTimeConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModResetBuffTimeConfig)
  SharedDtor();
}

void BuffModResetBuffTimeConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModResetBuffTimeConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModResetBuffTimeConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModResetBuffTimeConfig_descriptor_;
}

const BuffModResetBuffTimeConfig& BuffModResetBuffTimeConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModResetBuffTimeConfig* BuffModResetBuffTimeConfig::default_instance_ = NULL;

BuffModResetBuffTimeConfig* BuffModResetBuffTimeConfig::New() const {
  return new BuffModResetBuffTimeConfig;
}

void BuffModResetBuffTimeConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModResetBuffTimeConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, delaytime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  buffidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModResetBuffTimeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModResetBuffTimeConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BuffIdArr;
        break;
      }

      // repeated int32 BuffIdArr = 3;
      case 3: {
        if (tag == 24) {
         parse_BuffIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_buffidarr())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_buffidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BuffIdArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModResetBuffTimeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModResetBuffTimeConfig)
  return false;
#undef DO_
}

void BuffModResetBuffTimeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModResetBuffTimeConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // repeated int32 BuffIdArr = 3;
  for (int i = 0; i < this->buffidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->buffidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModResetBuffTimeConfig)
}

::google::protobuf::uint8* BuffModResetBuffTimeConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModResetBuffTimeConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // repeated int32 BuffIdArr = 3;
  for (int i = 0; i < this->buffidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->buffidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModResetBuffTimeConfig)
  return target;
}

int BuffModResetBuffTimeConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

  }
  // repeated int32 BuffIdArr = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->buffidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->buffidarr(i));
    }
    total_size += 1 * this->buffidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModResetBuffTimeConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModResetBuffTimeConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModResetBuffTimeConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModResetBuffTimeConfig::MergeFrom(const BuffModResetBuffTimeConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  buffidarr_.MergeFrom(from.buffidarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModResetBuffTimeConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModResetBuffTimeConfig::CopyFrom(const BuffModResetBuffTimeConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModResetBuffTimeConfig::IsInitialized() const {

  return true;
}

void BuffModResetBuffTimeConfig::Swap(BuffModResetBuffTimeConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    buffidarr_.Swap(&other->buffidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModResetBuffTimeConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModResetBuffTimeConfig_descriptor_;
  metadata.reflection = BuffModResetBuffTimeConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModAddSkillConfig::kActiveFieldNumber;
const int BuffModAddSkillConfig::kDelayTimeFieldNumber;
const int BuffModAddSkillConfig::kSkillIdArrFieldNumber;
const int BuffModAddSkillConfig::kUseParentSkillLevelFieldNumber;
const int BuffModAddSkillConfig::kSkillLevelFieldNumber;
#endif  // !_MSC_VER

BuffModAddSkillConfig::BuffModAddSkillConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModAddSkillConfig)
}

void BuffModAddSkillConfig::InitAsDefaultInstance() {
}

BuffModAddSkillConfig::BuffModAddSkillConfig(const BuffModAddSkillConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModAddSkillConfig)
}

void BuffModAddSkillConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  useparentskilllevel_ = false;
  skilllevel_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModAddSkillConfig::~BuffModAddSkillConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModAddSkillConfig)
  SharedDtor();
}

void BuffModAddSkillConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModAddSkillConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModAddSkillConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModAddSkillConfig_descriptor_;
}

const BuffModAddSkillConfig& BuffModAddSkillConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModAddSkillConfig* BuffModAddSkillConfig::default_instance_ = NULL;

BuffModAddSkillConfig* BuffModAddSkillConfig::New() const {
  return new BuffModAddSkillConfig;
}

void BuffModAddSkillConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModAddSkillConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 27) {
    ZR_(delaytime_, useparentskilllevel_);
    skilllevel_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  skillidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModAddSkillConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModAddSkillConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SkillIdArr;
        break;
      }

      // repeated int32 SkillIdArr = 3;
      case 3: {
        if (tag == 24) {
         parse_SkillIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_skillidarr())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_skillidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SkillIdArr;
        if (input->ExpectTag(32)) goto parse_UseParentSkillLevel;
        break;
      }

      // optional bool UseParentSkillLevel = 4;
      case 4: {
        if (tag == 32) {
         parse_UseParentSkillLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &useparentskilllevel_)));
          set_has_useparentskilllevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_SkillLevel;
        break;
      }

      // optional int32 SkillLevel = 5;
      case 5: {
        if (tag == 40) {
         parse_SkillLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skilllevel_)));
          set_has_skilllevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModAddSkillConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModAddSkillConfig)
  return false;
#undef DO_
}

void BuffModAddSkillConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModAddSkillConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // repeated int32 SkillIdArr = 3;
  for (int i = 0; i < this->skillidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->skillidarr(i), output);
  }

  // optional bool UseParentSkillLevel = 4;
  if (has_useparentskilllevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->useparentskilllevel(), output);
  }

  // optional int32 SkillLevel = 5;
  if (has_skilllevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->skilllevel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModAddSkillConfig)
}

::google::protobuf::uint8* BuffModAddSkillConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModAddSkillConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // repeated int32 SkillIdArr = 3;
  for (int i = 0; i < this->skillidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->skillidarr(i), target);
  }

  // optional bool UseParentSkillLevel = 4;
  if (has_useparentskilllevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->useparentskilllevel(), target);
  }

  // optional int32 SkillLevel = 5;
  if (has_skilllevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->skilllevel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModAddSkillConfig)
  return target;
}

int BuffModAddSkillConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional bool UseParentSkillLevel = 4;
    if (has_useparentskilllevel()) {
      total_size += 1 + 1;
    }

    // optional int32 SkillLevel = 5;
    if (has_skilllevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skilllevel());
    }

  }
  // repeated int32 SkillIdArr = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->skillidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skillidarr(i));
    }
    total_size += 1 * this->skillidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModAddSkillConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModAddSkillConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModAddSkillConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModAddSkillConfig::MergeFrom(const BuffModAddSkillConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  skillidarr_.MergeFrom(from.skillidarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_useparentskilllevel()) {
      set_useparentskilllevel(from.useparentskilllevel());
    }
    if (from.has_skilllevel()) {
      set_skilllevel(from.skilllevel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModAddSkillConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModAddSkillConfig::CopyFrom(const BuffModAddSkillConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModAddSkillConfig::IsInitialized() const {

  return true;
}

void BuffModAddSkillConfig::Swap(BuffModAddSkillConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    skillidarr_.Swap(&other->skillidarr_);
    std::swap(useparentskilllevel_, other->useparentskilllevel_);
    std::swap(skilllevel_, other->skilllevel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModAddSkillConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModAddSkillConfig_descriptor_;
  metadata.reflection = BuffModAddSkillConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModTauntConfig::kActiveFieldNumber;
const int BuffModTauntConfig::kDelayTimeFieldNumber;
const int BuffModTauntConfig::kBuffIDFieldNumber;
#endif  // !_MSC_VER

BuffModTauntConfig::BuffModTauntConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModTauntConfig)
}

void BuffModTauntConfig::InitAsDefaultInstance() {
}

BuffModTauntConfig::BuffModTauntConfig(const BuffModTauntConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModTauntConfig)
}

void BuffModTauntConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  buffid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModTauntConfig::~BuffModTauntConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModTauntConfig)
  SharedDtor();
}

void BuffModTauntConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModTauntConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModTauntConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModTauntConfig_descriptor_;
}

const BuffModTauntConfig& BuffModTauntConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModTauntConfig* BuffModTauntConfig::default_instance_ = NULL;

BuffModTauntConfig* BuffModTauntConfig::New() const {
  return new BuffModTauntConfig;
}

void BuffModTauntConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModTauntConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, buffid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModTauntConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModTauntConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BuffID;
        break;
      }

      // optional int32 BuffID = 3;
      case 3: {
        if (tag == 24) {
         parse_BuffID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buffid_)));
          set_has_buffid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModTauntConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModTauntConfig)
  return false;
#undef DO_
}

void BuffModTauntConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModTauntConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 BuffID = 3;
  if (has_buffid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->buffid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModTauntConfig)
}

::google::protobuf::uint8* BuffModTauntConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModTauntConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 BuffID = 3;
  if (has_buffid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->buffid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModTauntConfig)
  return target;
}

int BuffModTauntConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 BuffID = 3;
    if (has_buffid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buffid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModTauntConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModTauntConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModTauntConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModTauntConfig::MergeFrom(const BuffModTauntConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_buffid()) {
      set_buffid(from.buffid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModTauntConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModTauntConfig::CopyFrom(const BuffModTauntConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModTauntConfig::IsInitialized() const {

  return true;
}

void BuffModTauntConfig::Swap(BuffModTauntConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(buffid_, other->buffid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModTauntConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModTauntConfig_descriptor_;
  metadata.reflection = BuffModTauntConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModToughnessConfig::kActiveFieldNumber;
const int BuffModToughnessConfig::kDelayTimeFieldNumber;
const int BuffModToughnessConfig::kTypeFieldNumber;
const int BuffModToughnessConfig::kParamFieldNumber;
#endif  // !_MSC_VER

BuffModToughnessConfig::BuffModToughnessConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModToughnessConfig)
}

void BuffModToughnessConfig::InitAsDefaultInstance() {
}

BuffModToughnessConfig::BuffModToughnessConfig(const BuffModToughnessConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModToughnessConfig)
}

void BuffModToughnessConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  type_ = 0;
  param_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModToughnessConfig::~BuffModToughnessConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModToughnessConfig)
  SharedDtor();
}

void BuffModToughnessConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModToughnessConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModToughnessConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModToughnessConfig_descriptor_;
}

const BuffModToughnessConfig& BuffModToughnessConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModToughnessConfig* BuffModToughnessConfig::default_instance_ = NULL;

BuffModToughnessConfig* BuffModToughnessConfig::New() const {
  return new BuffModToughnessConfig;
}

void BuffModToughnessConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModToughnessConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, param_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModToughnessConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModToughnessConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Type;
        break;
      }

      // optional int32 Type = 3;
      case 3: {
        if (tag == 24) {
         parse_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Param;
        break;
      }

      // optional int32 Param = 4;
      case 4: {
        if (tag == 32) {
         parse_Param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param_)));
          set_has_param();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModToughnessConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModToughnessConfig)
  return false;
#undef DO_
}

void BuffModToughnessConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModToughnessConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 Type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // optional int32 Param = 4;
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->param(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModToughnessConfig)
}

::google::protobuf::uint8* BuffModToughnessConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModToughnessConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 Type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // optional int32 Param = 4;
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->param(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModToughnessConfig)
  return target;
}

int BuffModToughnessConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 Type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 Param = 4;
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModToughnessConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModToughnessConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModToughnessConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModToughnessConfig::MergeFrom(const BuffModToughnessConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModToughnessConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModToughnessConfig::CopyFrom(const BuffModToughnessConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModToughnessConfig::IsInitialized() const {

  return true;
}

void BuffModToughnessConfig::Swap(BuffModToughnessConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(type_, other->type_);
    std::swap(param_, other->param_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModToughnessConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModToughnessConfig_descriptor_;
  metadata.reflection = BuffModToughnessConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModNothingConfig::kActiveFieldNumber;
const int BuffModNothingConfig::kDelayTimeFieldNumber;
#endif  // !_MSC_VER

BuffModNothingConfig::BuffModNothingConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModNothingConfig)
}

void BuffModNothingConfig::InitAsDefaultInstance() {
}

BuffModNothingConfig::BuffModNothingConfig(const BuffModNothingConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModNothingConfig)
}

void BuffModNothingConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModNothingConfig::~BuffModNothingConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModNothingConfig)
  SharedDtor();
}

void BuffModNothingConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModNothingConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModNothingConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModNothingConfig_descriptor_;
}

const BuffModNothingConfig& BuffModNothingConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModNothingConfig* BuffModNothingConfig::default_instance_ = NULL;

BuffModNothingConfig* BuffModNothingConfig::New() const {
  return new BuffModNothingConfig;
}

void BuffModNothingConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModNothingConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, delaytime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModNothingConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModNothingConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModNothingConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModNothingConfig)
  return false;
#undef DO_
}

void BuffModNothingConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModNothingConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModNothingConfig)
}

::google::protobuf::uint8* BuffModNothingConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModNothingConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModNothingConfig)
  return target;
}

int BuffModNothingConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModNothingConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModNothingConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModNothingConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModNothingConfig::MergeFrom(const BuffModNothingConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModNothingConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModNothingConfig::CopyFrom(const BuffModNothingConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModNothingConfig::IsInitialized() const {

  return true;
}

void BuffModNothingConfig::Swap(BuffModNothingConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModNothingConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModNothingConfig_descriptor_;
  metadata.reflection = BuffModNothingConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModTransformScaleConfig::kActiveFieldNumber;
const int BuffModTransformScaleConfig::kDelayTimeFieldNumber;
const int BuffModTransformScaleConfig::kPercentParamFieldNumber;
const int BuffModTransformScaleConfig::kScaleTimeFieldNumber;
const int BuffModTransformScaleConfig::kBaseDeltaFieldNumber;
#endif  // !_MSC_VER

BuffModTransformScaleConfig::BuffModTransformScaleConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModTransformScaleConfig)
}

void BuffModTransformScaleConfig::InitAsDefaultInstance() {
}

BuffModTransformScaleConfig::BuffModTransformScaleConfig(const BuffModTransformScaleConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModTransformScaleConfig)
}

void BuffModTransformScaleConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  percentparam_ = 0;
  scaletime_ = 0;
  basedelta_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModTransformScaleConfig::~BuffModTransformScaleConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModTransformScaleConfig)
  SharedDtor();
}

void BuffModTransformScaleConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModTransformScaleConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModTransformScaleConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModTransformScaleConfig_descriptor_;
}

const BuffModTransformScaleConfig& BuffModTransformScaleConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModTransformScaleConfig* BuffModTransformScaleConfig::default_instance_ = NULL;

BuffModTransformScaleConfig* BuffModTransformScaleConfig::New() const {
  return new BuffModTransformScaleConfig;
}

void BuffModTransformScaleConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModTransformScaleConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(active_, basedelta_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModTransformScaleConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModTransformScaleConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PercentParam;
        break;
      }

      // optional int32 PercentParam = 3;
      case 3: {
        if (tag == 24) {
         parse_PercentParam:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &percentparam_)));
          set_has_percentparam();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ScaleTime;
        break;
      }

      // optional int32 ScaleTime = 4;
      case 4: {
        if (tag == 32) {
         parse_ScaleTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scaletime_)));
          set_has_scaletime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_BaseDelta;
        break;
      }

      // optional int32 BaseDelta = 5;
      case 5: {
        if (tag == 40) {
         parse_BaseDelta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &basedelta_)));
          set_has_basedelta();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModTransformScaleConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModTransformScaleConfig)
  return false;
#undef DO_
}

void BuffModTransformScaleConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModTransformScaleConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 PercentParam = 3;
  if (has_percentparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->percentparam(), output);
  }

  // optional int32 ScaleTime = 4;
  if (has_scaletime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->scaletime(), output);
  }

  // optional int32 BaseDelta = 5;
  if (has_basedelta()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->basedelta(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModTransformScaleConfig)
}

::google::protobuf::uint8* BuffModTransformScaleConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModTransformScaleConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 PercentParam = 3;
  if (has_percentparam()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->percentparam(), target);
  }

  // optional int32 ScaleTime = 4;
  if (has_scaletime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->scaletime(), target);
  }

  // optional int32 BaseDelta = 5;
  if (has_basedelta()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->basedelta(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModTransformScaleConfig)
  return target;
}

int BuffModTransformScaleConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 PercentParam = 3;
    if (has_percentparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->percentparam());
    }

    // optional int32 ScaleTime = 4;
    if (has_scaletime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scaletime());
    }

    // optional int32 BaseDelta = 5;
    if (has_basedelta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->basedelta());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModTransformScaleConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModTransformScaleConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModTransformScaleConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModTransformScaleConfig::MergeFrom(const BuffModTransformScaleConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_percentparam()) {
      set_percentparam(from.percentparam());
    }
    if (from.has_scaletime()) {
      set_scaletime(from.scaletime());
    }
    if (from.has_basedelta()) {
      set_basedelta(from.basedelta());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModTransformScaleConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModTransformScaleConfig::CopyFrom(const BuffModTransformScaleConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModTransformScaleConfig::IsInitialized() const {

  return true;
}

void BuffModTransformScaleConfig::Swap(BuffModTransformScaleConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(percentparam_, other->percentparam_);
    std::swap(scaletime_, other->scaletime_);
    std::swap(basedelta_, other->basedelta_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModTransformScaleConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModTransformScaleConfig_descriptor_;
  metadata.reflection = BuffModTransformScaleConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModDieConfig::kActiveFieldNumber;
#endif  // !_MSC_VER

BuffModDieConfig::BuffModDieConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModDieConfig)
}

void BuffModDieConfig::InitAsDefaultInstance() {
}

BuffModDieConfig::BuffModDieConfig(const BuffModDieConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModDieConfig)
}

void BuffModDieConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModDieConfig::~BuffModDieConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModDieConfig)
  SharedDtor();
}

void BuffModDieConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModDieConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModDieConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModDieConfig_descriptor_;
}

const BuffModDieConfig& BuffModDieConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModDieConfig* BuffModDieConfig::default_instance_ = NULL;

BuffModDieConfig* BuffModDieConfig::New() const {
  return new BuffModDieConfig;
}

void BuffModDieConfig::Clear() {
  active_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModDieConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModDieConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModDieConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModDieConfig)
  return false;
#undef DO_
}

void BuffModDieConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModDieConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModDieConfig)
}

::google::protobuf::uint8* BuffModDieConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModDieConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModDieConfig)
  return target;
}

int BuffModDieConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModDieConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModDieConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModDieConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModDieConfig::MergeFrom(const BuffModDieConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModDieConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModDieConfig::CopyFrom(const BuffModDieConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModDieConfig::IsInitialized() const {

  return true;
}

void BuffModDieConfig::Swap(BuffModDieConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModDieConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModDieConfig_descriptor_;
  metadata.reflection = BuffModDieConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModDisableConfig::kActiveFieldNumber;
const int BuffModDisableConfig::kDelayTimeFieldNumber;
#endif  // !_MSC_VER

BuffModDisableConfig::BuffModDisableConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModDisableConfig)
}

void BuffModDisableConfig::InitAsDefaultInstance() {
}

BuffModDisableConfig::BuffModDisableConfig(const BuffModDisableConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModDisableConfig)
}

void BuffModDisableConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModDisableConfig::~BuffModDisableConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModDisableConfig)
  SharedDtor();
}

void BuffModDisableConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModDisableConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModDisableConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModDisableConfig_descriptor_;
}

const BuffModDisableConfig& BuffModDisableConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModDisableConfig* BuffModDisableConfig::default_instance_ = NULL;

BuffModDisableConfig* BuffModDisableConfig::New() const {
  return new BuffModDisableConfig;
}

void BuffModDisableConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModDisableConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, delaytime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModDisableConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModDisableConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModDisableConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModDisableConfig)
  return false;
#undef DO_
}

void BuffModDisableConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModDisableConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModDisableConfig)
}

::google::protobuf::uint8* BuffModDisableConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModDisableConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModDisableConfig)
  return target;
}

int BuffModDisableConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModDisableConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModDisableConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModDisableConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModDisableConfig::MergeFrom(const BuffModDisableConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModDisableConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModDisableConfig::CopyFrom(const BuffModDisableConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModDisableConfig::IsInitialized() const {

  return true;
}

void BuffModDisableConfig::Swap(BuffModDisableConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModDisableConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModDisableConfig_descriptor_;
  metadata.reflection = BuffModDisableConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModScaleTextConfig::kActiveFieldNumber;
const int BuffModScaleTextConfig::kDelayTimeFieldNumber;
const int BuffModScaleTextConfig::kScaleUpFieldNumber;
#endif  // !_MSC_VER

BuffModScaleTextConfig::BuffModScaleTextConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModScaleTextConfig)
}

void BuffModScaleTextConfig::InitAsDefaultInstance() {
}

BuffModScaleTextConfig::BuffModScaleTextConfig(const BuffModScaleTextConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModScaleTextConfig)
}

void BuffModScaleTextConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  scaleup_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModScaleTextConfig::~BuffModScaleTextConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModScaleTextConfig)
  SharedDtor();
}

void BuffModScaleTextConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModScaleTextConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModScaleTextConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModScaleTextConfig_descriptor_;
}

const BuffModScaleTextConfig& BuffModScaleTextConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModScaleTextConfig* BuffModScaleTextConfig::default_instance_ = NULL;

BuffModScaleTextConfig* BuffModScaleTextConfig::New() const {
  return new BuffModScaleTextConfig;
}

void BuffModScaleTextConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModScaleTextConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(delaytime_, scaleup_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModScaleTextConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModScaleTextConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ScaleUp;
        break;
      }

      // optional bool ScaleUp = 3;
      case 3: {
        if (tag == 24) {
         parse_ScaleUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &scaleup_)));
          set_has_scaleup();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModScaleTextConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModScaleTextConfig)
  return false;
#undef DO_
}

void BuffModScaleTextConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModScaleTextConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional bool ScaleUp = 3;
  if (has_scaleup()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->scaleup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModScaleTextConfig)
}

::google::protobuf::uint8* BuffModScaleTextConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModScaleTextConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional bool ScaleUp = 3;
  if (has_scaleup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->scaleup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModScaleTextConfig)
  return target;
}

int BuffModScaleTextConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional bool ScaleUp = 3;
    if (has_scaleup()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModScaleTextConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModScaleTextConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModScaleTextConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModScaleTextConfig::MergeFrom(const BuffModScaleTextConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_scaleup()) {
      set_scaleup(from.scaleup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModScaleTextConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModScaleTextConfig::CopyFrom(const BuffModScaleTextConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModScaleTextConfig::IsInitialized() const {

  return true;
}

void BuffModScaleTextConfig::Swap(BuffModScaleTextConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(scaleup_, other->scaleup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModScaleTextConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModScaleTextConfig_descriptor_;
  metadata.reflection = BuffModScaleTextConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModRepeatSkillConfig::kActiveFieldNumber;
const int BuffModRepeatSkillConfig::kDelayTimeFieldNumber;
const int BuffModRepeatSkillConfig::kSkillIDFieldNumber;
const int BuffModRepeatSkillConfig::kIntervalFieldNumber;
const int BuffModRepeatSkillConfig::kReleaseCountFieldNumber;
const int BuffModRepeatSkillConfig::kSourceFieldNumber;
const int BuffModRepeatSkillConfig::kCastConditionFieldNumber;
const int BuffModRepeatSkillConfig::kValueTypeFieldNumber;
const int BuffModRepeatSkillConfig::kParam1FieldNumber;
const int BuffModRepeatSkillConfig::kIgnoreNoSkillFieldNumber;
#endif  // !_MSC_VER

BuffModRepeatSkillConfig::BuffModRepeatSkillConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModRepeatSkillConfig)
}

void BuffModRepeatSkillConfig::InitAsDefaultInstance() {
}

BuffModRepeatSkillConfig::BuffModRepeatSkillConfig(const BuffModRepeatSkillConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModRepeatSkillConfig)
}

void BuffModRepeatSkillConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  skillid_ = 0;
  interval_ = 0;
  releasecount_ = 0;
  source_ = 0;
  castcondition_ = 0;
  valuetype_ = 0;
  param1_ = 0;
  ignorenoskill_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModRepeatSkillConfig::~BuffModRepeatSkillConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModRepeatSkillConfig)
  SharedDtor();
}

void BuffModRepeatSkillConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModRepeatSkillConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModRepeatSkillConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModRepeatSkillConfig_descriptor_;
}

const BuffModRepeatSkillConfig& BuffModRepeatSkillConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModRepeatSkillConfig* BuffModRepeatSkillConfig::default_instance_ = NULL;

BuffModRepeatSkillConfig* BuffModRepeatSkillConfig::New() const {
  return new BuffModRepeatSkillConfig;
}

void BuffModRepeatSkillConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModRepeatSkillConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(delaytime_, active_);
    ZR_(source_, valuetype_);
  }
  if (_has_bits_[8 / 32] & 768) {
    param1_ = 0;
    ignorenoskill_ = false;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModRepeatSkillConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModRepeatSkillConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SkillID;
        break;
      }

      // optional int32 SkillID = 3;
      case 3: {
        if (tag == 24) {
         parse_SkillID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Interval;
        break;
      }

      // optional int32 Interval = 4;
      case 4: {
        if (tag == 32) {
         parse_Interval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interval_)));
          set_has_interval();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ReleaseCount;
        break;
      }

      // optional int32 ReleaseCount = 5;
      case 5: {
        if (tag == 40) {
         parse_ReleaseCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &releasecount_)));
          set_has_releasecount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Source;
        break;
      }

      // optional int32 Source = 6;
      case 6: {
        if (tag == 48) {
         parse_Source:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_)));
          set_has_source();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_CastCondition;
        break;
      }

      // optional int32 CastCondition = 7;
      case 7: {
        if (tag == 56) {
         parse_CastCondition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &castcondition_)));
          set_has_castcondition();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ValueType;
        break;
      }

      // optional int32 ValueType = 8;
      case 8: {
        if (tag == 64) {
         parse_ValueType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &valuetype_)));
          set_has_valuetype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_Param1;
        break;
      }

      // optional int32 Param1 = 9;
      case 9: {
        if (tag == 72) {
         parse_Param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param1_)));
          set_has_param1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_IgnoreNoSkill;
        break;
      }

      // optional bool IgnoreNoSkill = 10;
      case 10: {
        if (tag == 80) {
         parse_IgnoreNoSkill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignorenoskill_)));
          set_has_ignorenoskill();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModRepeatSkillConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModRepeatSkillConfig)
  return false;
#undef DO_
}

void BuffModRepeatSkillConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModRepeatSkillConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 SkillID = 3;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skillid(), output);
  }

  // optional int32 Interval = 4;
  if (has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->interval(), output);
  }

  // optional int32 ReleaseCount = 5;
  if (has_releasecount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->releasecount(), output);
  }

  // optional int32 Source = 6;
  if (has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->source(), output);
  }

  // optional int32 CastCondition = 7;
  if (has_castcondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->castcondition(), output);
  }

  // optional int32 ValueType = 8;
  if (has_valuetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->valuetype(), output);
  }

  // optional int32 Param1 = 9;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->param1(), output);
  }

  // optional bool IgnoreNoSkill = 10;
  if (has_ignorenoskill()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->ignorenoskill(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModRepeatSkillConfig)
}

::google::protobuf::uint8* BuffModRepeatSkillConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModRepeatSkillConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 SkillID = 3;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skillid(), target);
  }

  // optional int32 Interval = 4;
  if (has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->interval(), target);
  }

  // optional int32 ReleaseCount = 5;
  if (has_releasecount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->releasecount(), target);
  }

  // optional int32 Source = 6;
  if (has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->source(), target);
  }

  // optional int32 CastCondition = 7;
  if (has_castcondition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->castcondition(), target);
  }

  // optional int32 ValueType = 8;
  if (has_valuetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->valuetype(), target);
  }

  // optional int32 Param1 = 9;
  if (has_param1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->param1(), target);
  }

  // optional bool IgnoreNoSkill = 10;
  if (has_ignorenoskill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->ignorenoskill(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModRepeatSkillConfig)
  return target;
}

int BuffModRepeatSkillConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 SkillID = 3;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

    // optional int32 Interval = 4;
    if (has_interval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->interval());
    }

    // optional int32 ReleaseCount = 5;
    if (has_releasecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->releasecount());
    }

    // optional int32 Source = 6;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source());
    }

    // optional int32 CastCondition = 7;
    if (has_castcondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->castcondition());
    }

    // optional int32 ValueType = 8;
    if (has_valuetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->valuetype());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 Param1 = 9;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param1());
    }

    // optional bool IgnoreNoSkill = 10;
    if (has_ignorenoskill()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModRepeatSkillConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModRepeatSkillConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModRepeatSkillConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModRepeatSkillConfig::MergeFrom(const BuffModRepeatSkillConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_interval()) {
      set_interval(from.interval());
    }
    if (from.has_releasecount()) {
      set_releasecount(from.releasecount());
    }
    if (from.has_source()) {
      set_source(from.source());
    }
    if (from.has_castcondition()) {
      set_castcondition(from.castcondition());
    }
    if (from.has_valuetype()) {
      set_valuetype(from.valuetype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_param1()) {
      set_param1(from.param1());
    }
    if (from.has_ignorenoskill()) {
      set_ignorenoskill(from.ignorenoskill());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModRepeatSkillConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModRepeatSkillConfig::CopyFrom(const BuffModRepeatSkillConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModRepeatSkillConfig::IsInitialized() const {

  return true;
}

void BuffModRepeatSkillConfig::Swap(BuffModRepeatSkillConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(skillid_, other->skillid_);
    std::swap(interval_, other->interval_);
    std::swap(releasecount_, other->releasecount_);
    std::swap(source_, other->source_);
    std::swap(castcondition_, other->castcondition_);
    std::swap(valuetype_, other->valuetype_);
    std::swap(param1_, other->param1_);
    std::swap(ignorenoskill_, other->ignorenoskill_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModRepeatSkillConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModRepeatSkillConfig_descriptor_;
  metadata.reflection = BuffModRepeatSkillConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModSkillOnEndConfig::kActiveFieldNumber;
const int BuffModSkillOnEndConfig::kDelayTimeFieldNumber;
const int BuffModSkillOnEndConfig::kSkillIDFieldNumber;
const int BuffModSkillOnEndConfig::kSourceFieldNumber;
const int BuffModSkillOnEndConfig::kDisableTypeFieldNumber;
const int BuffModSkillOnEndConfig::kIgnoreNoSkillFieldNumber;
const int BuffModSkillOnEndConfig::kSkillIDBackFieldNumber;
#endif  // !_MSC_VER

BuffModSkillOnEndConfig::BuffModSkillOnEndConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModSkillOnEndConfig)
}

void BuffModSkillOnEndConfig::InitAsDefaultInstance() {
}

BuffModSkillOnEndConfig::BuffModSkillOnEndConfig(const BuffModSkillOnEndConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModSkillOnEndConfig)
}

void BuffModSkillOnEndConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  skillid_ = 0;
  source_ = 0;
  disabletype_ = 0;
  ignorenoskill_ = false;
  skillidback_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModSkillOnEndConfig::~BuffModSkillOnEndConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModSkillOnEndConfig)
  SharedDtor();
}

void BuffModSkillOnEndConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModSkillOnEndConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModSkillOnEndConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModSkillOnEndConfig_descriptor_;
}

const BuffModSkillOnEndConfig& BuffModSkillOnEndConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModSkillOnEndConfig* BuffModSkillOnEndConfig::default_instance_ = NULL;

BuffModSkillOnEndConfig* BuffModSkillOnEndConfig::New() const {
  return new BuffModSkillOnEndConfig;
}

void BuffModSkillOnEndConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModSkillOnEndConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(delaytime_, skillidback_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModSkillOnEndConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModSkillOnEndConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SkillID;
        break;
      }

      // optional int32 SkillID = 3;
      case 3: {
        if (tag == 24) {
         parse_SkillID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Source;
        break;
      }

      // optional int32 Source = 4;
      case 4: {
        if (tag == 32) {
         parse_Source:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_)));
          set_has_source();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_DisableType;
        break;
      }

      // optional int32 DisableType = 5;
      case 5: {
        if (tag == 40) {
         parse_DisableType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &disabletype_)));
          set_has_disabletype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_IgnoreNoSkill;
        break;
      }

      // optional bool IgnoreNoSkill = 6;
      case 6: {
        if (tag == 48) {
         parse_IgnoreNoSkill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignorenoskill_)));
          set_has_ignorenoskill();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_SkillIDBack;
        break;
      }

      // optional int32 SkillIDBack = 7;
      case 7: {
        if (tag == 56) {
         parse_SkillIDBack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillidback_)));
          set_has_skillidback();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModSkillOnEndConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModSkillOnEndConfig)
  return false;
#undef DO_
}

void BuffModSkillOnEndConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModSkillOnEndConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 SkillID = 3;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skillid(), output);
  }

  // optional int32 Source = 4;
  if (has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->source(), output);
  }

  // optional int32 DisableType = 5;
  if (has_disabletype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->disabletype(), output);
  }

  // optional bool IgnoreNoSkill = 6;
  if (has_ignorenoskill()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->ignorenoskill(), output);
  }

  // optional int32 SkillIDBack = 7;
  if (has_skillidback()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->skillidback(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModSkillOnEndConfig)
}

::google::protobuf::uint8* BuffModSkillOnEndConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModSkillOnEndConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 SkillID = 3;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skillid(), target);
  }

  // optional int32 Source = 4;
  if (has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->source(), target);
  }

  // optional int32 DisableType = 5;
  if (has_disabletype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->disabletype(), target);
  }

  // optional bool IgnoreNoSkill = 6;
  if (has_ignorenoskill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->ignorenoskill(), target);
  }

  // optional int32 SkillIDBack = 7;
  if (has_skillidback()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->skillidback(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModSkillOnEndConfig)
  return target;
}

int BuffModSkillOnEndConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 SkillID = 3;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

    // optional int32 Source = 4;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source());
    }

    // optional int32 DisableType = 5;
    if (has_disabletype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->disabletype());
    }

    // optional bool IgnoreNoSkill = 6;
    if (has_ignorenoskill()) {
      total_size += 1 + 1;
    }

    // optional int32 SkillIDBack = 7;
    if (has_skillidback()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillidback());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModSkillOnEndConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModSkillOnEndConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModSkillOnEndConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModSkillOnEndConfig::MergeFrom(const BuffModSkillOnEndConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_source()) {
      set_source(from.source());
    }
    if (from.has_disabletype()) {
      set_disabletype(from.disabletype());
    }
    if (from.has_ignorenoskill()) {
      set_ignorenoskill(from.ignorenoskill());
    }
    if (from.has_skillidback()) {
      set_skillidback(from.skillidback());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModSkillOnEndConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModSkillOnEndConfig::CopyFrom(const BuffModSkillOnEndConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModSkillOnEndConfig::IsInitialized() const {

  return true;
}

void BuffModSkillOnEndConfig::Swap(BuffModSkillOnEndConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(skillid_, other->skillid_);
    std::swap(source_, other->source_);
    std::swap(disabletype_, other->disabletype_);
    std::swap(ignorenoskill_, other->ignorenoskill_);
    std::swap(skillidback_, other->skillidback_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModSkillOnEndConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModSkillOnEndConfig_descriptor_;
  metadata.reflection = BuffModSkillOnEndConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModSpecifySkillTidConfig::kActiveFieldNumber;
const int BuffModSpecifySkillTidConfig::kSkillTidArrFieldNumber;
#endif  // !_MSC_VER

BuffModSpecifySkillTidConfig::BuffModSpecifySkillTidConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModSpecifySkillTidConfig)
}

void BuffModSpecifySkillTidConfig::InitAsDefaultInstance() {
}

BuffModSpecifySkillTidConfig::BuffModSpecifySkillTidConfig(const BuffModSpecifySkillTidConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModSpecifySkillTidConfig)
}

void BuffModSpecifySkillTidConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModSpecifySkillTidConfig::~BuffModSpecifySkillTidConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModSpecifySkillTidConfig)
  SharedDtor();
}

void BuffModSpecifySkillTidConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModSpecifySkillTidConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModSpecifySkillTidConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModSpecifySkillTidConfig_descriptor_;
}

const BuffModSpecifySkillTidConfig& BuffModSpecifySkillTidConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModSpecifySkillTidConfig* BuffModSpecifySkillTidConfig::default_instance_ = NULL;

BuffModSpecifySkillTidConfig* BuffModSpecifySkillTidConfig::New() const {
  return new BuffModSpecifySkillTidConfig;
}

void BuffModSpecifySkillTidConfig::Clear() {
  active_ = false;
  skilltidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModSpecifySkillTidConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModSpecifySkillTidConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SkillTidArr;
        break;
      }

      // repeated int32 SkillTidArr = 2;
      case 2: {
        if (tag == 16) {
         parse_SkillTidArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_skilltidarr())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_skilltidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SkillTidArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModSpecifySkillTidConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModSpecifySkillTidConfig)
  return false;
#undef DO_
}

void BuffModSpecifySkillTidConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModSpecifySkillTidConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // repeated int32 SkillTidArr = 2;
  for (int i = 0; i < this->skilltidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->skilltidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModSpecifySkillTidConfig)
}

::google::protobuf::uint8* BuffModSpecifySkillTidConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModSpecifySkillTidConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // repeated int32 SkillTidArr = 2;
  for (int i = 0; i < this->skilltidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->skilltidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModSpecifySkillTidConfig)
  return target;
}

int BuffModSpecifySkillTidConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

  }
  // repeated int32 SkillTidArr = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->skilltidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skilltidarr(i));
    }
    total_size += 1 * this->skilltidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModSpecifySkillTidConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModSpecifySkillTidConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModSpecifySkillTidConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModSpecifySkillTidConfig::MergeFrom(const BuffModSpecifySkillTidConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  skilltidarr_.MergeFrom(from.skilltidarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModSpecifySkillTidConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModSpecifySkillTidConfig::CopyFrom(const BuffModSpecifySkillTidConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModSpecifySkillTidConfig::IsInitialized() const {

  return true;
}

void BuffModSpecifySkillTidConfig::Swap(BuffModSpecifySkillTidConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    skilltidarr_.Swap(&other->skilltidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModSpecifySkillTidConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModSpecifySkillTidConfig_descriptor_;
  metadata.reflection = BuffModSpecifySkillTidConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModMoveControlImmunityConfig::kActiveFieldNumber;
const int BuffModMoveControlImmunityConfig::kDelayTimeFieldNumber;
const int BuffModMoveControlImmunityConfig::kEnergyLevelFieldNumber;
#endif  // !_MSC_VER

BuffModMoveControlImmunityConfig::BuffModMoveControlImmunityConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModMoveControlImmunityConfig)
}

void BuffModMoveControlImmunityConfig::InitAsDefaultInstance() {
}

BuffModMoveControlImmunityConfig::BuffModMoveControlImmunityConfig(const BuffModMoveControlImmunityConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModMoveControlImmunityConfig)
}

void BuffModMoveControlImmunityConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  energylevel_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModMoveControlImmunityConfig::~BuffModMoveControlImmunityConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModMoveControlImmunityConfig)
  SharedDtor();
}

void BuffModMoveControlImmunityConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModMoveControlImmunityConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModMoveControlImmunityConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModMoveControlImmunityConfig_descriptor_;
}

const BuffModMoveControlImmunityConfig& BuffModMoveControlImmunityConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModMoveControlImmunityConfig* BuffModMoveControlImmunityConfig::default_instance_ = NULL;

BuffModMoveControlImmunityConfig* BuffModMoveControlImmunityConfig::New() const {
  return new BuffModMoveControlImmunityConfig;
}

void BuffModMoveControlImmunityConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModMoveControlImmunityConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, energylevel_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModMoveControlImmunityConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModMoveControlImmunityConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_EnergyLevel;
        break;
      }

      // optional int32 EnergyLevel = 3;
      case 3: {
        if (tag == 24) {
         parse_EnergyLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &energylevel_)));
          set_has_energylevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModMoveControlImmunityConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModMoveControlImmunityConfig)
  return false;
#undef DO_
}

void BuffModMoveControlImmunityConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModMoveControlImmunityConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 EnergyLevel = 3;
  if (has_energylevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->energylevel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModMoveControlImmunityConfig)
}

::google::protobuf::uint8* BuffModMoveControlImmunityConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModMoveControlImmunityConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 EnergyLevel = 3;
  if (has_energylevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->energylevel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModMoveControlImmunityConfig)
  return target;
}

int BuffModMoveControlImmunityConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 EnergyLevel = 3;
    if (has_energylevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->energylevel());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModMoveControlImmunityConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModMoveControlImmunityConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModMoveControlImmunityConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModMoveControlImmunityConfig::MergeFrom(const BuffModMoveControlImmunityConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_energylevel()) {
      set_energylevel(from.energylevel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModMoveControlImmunityConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModMoveControlImmunityConfig::CopyFrom(const BuffModMoveControlImmunityConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModMoveControlImmunityConfig::IsInitialized() const {

  return true;
}

void BuffModMoveControlImmunityConfig::Swap(BuffModMoveControlImmunityConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(energylevel_, other->energylevel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModMoveControlImmunityConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModMoveControlImmunityConfig_descriptor_;
  metadata.reflection = BuffModMoveControlImmunityConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModUnlimitedShieldConfig::kActiveFieldNumber;
const int BuffModUnlimitedShieldConfig::kPercentFieldNumber;
const int BuffModUnlimitedShieldConfig::kPeriodFieldNumber;
#endif  // !_MSC_VER

BuffModUnlimitedShieldConfig::BuffModUnlimitedShieldConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModUnlimitedShieldConfig)
}

void BuffModUnlimitedShieldConfig::InitAsDefaultInstance() {
}

BuffModUnlimitedShieldConfig::BuffModUnlimitedShieldConfig(const BuffModUnlimitedShieldConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModUnlimitedShieldConfig)
}

void BuffModUnlimitedShieldConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  percent_ = 0;
  period_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModUnlimitedShieldConfig::~BuffModUnlimitedShieldConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModUnlimitedShieldConfig)
  SharedDtor();
}

void BuffModUnlimitedShieldConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModUnlimitedShieldConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModUnlimitedShieldConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModUnlimitedShieldConfig_descriptor_;
}

const BuffModUnlimitedShieldConfig& BuffModUnlimitedShieldConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModUnlimitedShieldConfig* BuffModUnlimitedShieldConfig::default_instance_ = NULL;

BuffModUnlimitedShieldConfig* BuffModUnlimitedShieldConfig::New() const {
  return new BuffModUnlimitedShieldConfig;
}

void BuffModUnlimitedShieldConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModUnlimitedShieldConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, period_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModUnlimitedShieldConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModUnlimitedShieldConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Percent;
        break;
      }

      // optional int32 Percent = 2;
      case 2: {
        if (tag == 16) {
         parse_Percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &percent_)));
          set_has_percent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Period;
        break;
      }

      // optional int32 Period = 3;
      case 3: {
        if (tag == 24) {
         parse_Period:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &period_)));
          set_has_period();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModUnlimitedShieldConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModUnlimitedShieldConfig)
  return false;
#undef DO_
}

void BuffModUnlimitedShieldConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModUnlimitedShieldConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 Percent = 2;
  if (has_percent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->percent(), output);
  }

  // optional int32 Period = 3;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->period(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModUnlimitedShieldConfig)
}

::google::protobuf::uint8* BuffModUnlimitedShieldConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModUnlimitedShieldConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 Percent = 2;
  if (has_percent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->percent(), target);
  }

  // optional int32 Period = 3;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->period(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModUnlimitedShieldConfig)
  return target;
}

int BuffModUnlimitedShieldConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 Percent = 2;
    if (has_percent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->percent());
    }

    // optional int32 Period = 3;
    if (has_period()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->period());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModUnlimitedShieldConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModUnlimitedShieldConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModUnlimitedShieldConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModUnlimitedShieldConfig::MergeFrom(const BuffModUnlimitedShieldConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_percent()) {
      set_percent(from.percent());
    }
    if (from.has_period()) {
      set_period(from.period());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModUnlimitedShieldConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModUnlimitedShieldConfig::CopyFrom(const BuffModUnlimitedShieldConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModUnlimitedShieldConfig::IsInitialized() const {

  return true;
}

void BuffModUnlimitedShieldConfig::Swap(BuffModUnlimitedShieldConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(percent_, other->percent_);
    std::swap(period_, other->period_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModUnlimitedShieldConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModUnlimitedShieldConfig_descriptor_;
  metadata.reflection = BuffModUnlimitedShieldConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModShrinkControlDurationConfig::kActiveFieldNumber;
const int BuffModShrinkControlDurationConfig::kShrinkRateFieldNumber;
#endif  // !_MSC_VER

BuffModShrinkControlDurationConfig::BuffModShrinkControlDurationConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModShrinkControlDurationConfig)
}

void BuffModShrinkControlDurationConfig::InitAsDefaultInstance() {
}

BuffModShrinkControlDurationConfig::BuffModShrinkControlDurationConfig(const BuffModShrinkControlDurationConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModShrinkControlDurationConfig)
}

void BuffModShrinkControlDurationConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  shrinkrate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModShrinkControlDurationConfig::~BuffModShrinkControlDurationConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModShrinkControlDurationConfig)
  SharedDtor();
}

void BuffModShrinkControlDurationConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModShrinkControlDurationConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModShrinkControlDurationConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModShrinkControlDurationConfig_descriptor_;
}

const BuffModShrinkControlDurationConfig& BuffModShrinkControlDurationConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModShrinkControlDurationConfig* BuffModShrinkControlDurationConfig::default_instance_ = NULL;

BuffModShrinkControlDurationConfig* BuffModShrinkControlDurationConfig::New() const {
  return new BuffModShrinkControlDurationConfig;
}

void BuffModShrinkControlDurationConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModShrinkControlDurationConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, shrinkrate_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModShrinkControlDurationConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModShrinkControlDurationConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ShrinkRate;
        break;
      }

      // optional int32 ShrinkRate = 2;
      case 2: {
        if (tag == 16) {
         parse_ShrinkRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shrinkrate_)));
          set_has_shrinkrate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModShrinkControlDurationConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModShrinkControlDurationConfig)
  return false;
#undef DO_
}

void BuffModShrinkControlDurationConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModShrinkControlDurationConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 ShrinkRate = 2;
  if (has_shrinkrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->shrinkrate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModShrinkControlDurationConfig)
}

::google::protobuf::uint8* BuffModShrinkControlDurationConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModShrinkControlDurationConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 ShrinkRate = 2;
  if (has_shrinkrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->shrinkrate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModShrinkControlDurationConfig)
  return target;
}

int BuffModShrinkControlDurationConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 ShrinkRate = 2;
    if (has_shrinkrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shrinkrate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModShrinkControlDurationConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModShrinkControlDurationConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModShrinkControlDurationConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModShrinkControlDurationConfig::MergeFrom(const BuffModShrinkControlDurationConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_shrinkrate()) {
      set_shrinkrate(from.shrinkrate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModShrinkControlDurationConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModShrinkControlDurationConfig::CopyFrom(const BuffModShrinkControlDurationConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModShrinkControlDurationConfig::IsInitialized() const {

  return true;
}

void BuffModShrinkControlDurationConfig::Swap(BuffModShrinkControlDurationConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(shrinkrate_, other->shrinkrate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModShrinkControlDurationConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModShrinkControlDurationConfig_descriptor_;
  metadata.reflection = BuffModShrinkControlDurationConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModHideSomeAppearanceConfig::kActiveFieldNumber;
const int BuffModHideSomeAppearanceConfig::kDelayTimeFieldNumber;
const int BuffModHideSomeAppearanceConfig::kBloodBarFieldNumber;
const int BuffModHideSomeAppearanceConfig::kTextFieldNumber;
#endif  // !_MSC_VER

BuffModHideSomeAppearanceConfig::BuffModHideSomeAppearanceConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModHideSomeAppearanceConfig)
}

void BuffModHideSomeAppearanceConfig::InitAsDefaultInstance() {
}

BuffModHideSomeAppearanceConfig::BuffModHideSomeAppearanceConfig(const BuffModHideSomeAppearanceConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModHideSomeAppearanceConfig)
}

void BuffModHideSomeAppearanceConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  bloodbar_ = false;
  text_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModHideSomeAppearanceConfig::~BuffModHideSomeAppearanceConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModHideSomeAppearanceConfig)
  SharedDtor();
}

void BuffModHideSomeAppearanceConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModHideSomeAppearanceConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModHideSomeAppearanceConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModHideSomeAppearanceConfig_descriptor_;
}

const BuffModHideSomeAppearanceConfig& BuffModHideSomeAppearanceConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModHideSomeAppearanceConfig* BuffModHideSomeAppearanceConfig::default_instance_ = NULL;

BuffModHideSomeAppearanceConfig* BuffModHideSomeAppearanceConfig::New() const {
  return new BuffModHideSomeAppearanceConfig;
}

void BuffModHideSomeAppearanceConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModHideSomeAppearanceConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(delaytime_, text_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModHideSomeAppearanceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModHideSomeAppearanceConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BloodBar;
        break;
      }

      // optional bool BloodBar = 3;
      case 3: {
        if (tag == 24) {
         parse_BloodBar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bloodbar_)));
          set_has_bloodbar();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Text;
        break;
      }

      // optional bool Text = 4;
      case 4: {
        if (tag == 32) {
         parse_Text:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &text_)));
          set_has_text();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModHideSomeAppearanceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModHideSomeAppearanceConfig)
  return false;
#undef DO_
}

void BuffModHideSomeAppearanceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModHideSomeAppearanceConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional bool BloodBar = 3;
  if (has_bloodbar()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bloodbar(), output);
  }

  // optional bool Text = 4;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->text(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModHideSomeAppearanceConfig)
}

::google::protobuf::uint8* BuffModHideSomeAppearanceConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModHideSomeAppearanceConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional bool BloodBar = 3;
  if (has_bloodbar()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bloodbar(), target);
  }

  // optional bool Text = 4;
  if (has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->text(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModHideSomeAppearanceConfig)
  return target;
}

int BuffModHideSomeAppearanceConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional bool BloodBar = 3;
    if (has_bloodbar()) {
      total_size += 1 + 1;
    }

    // optional bool Text = 4;
    if (has_text()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModHideSomeAppearanceConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModHideSomeAppearanceConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModHideSomeAppearanceConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModHideSomeAppearanceConfig::MergeFrom(const BuffModHideSomeAppearanceConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_bloodbar()) {
      set_bloodbar(from.bloodbar());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModHideSomeAppearanceConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModHideSomeAppearanceConfig::CopyFrom(const BuffModHideSomeAppearanceConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModHideSomeAppearanceConfig::IsInitialized() const {

  return true;
}

void BuffModHideSomeAppearanceConfig::Swap(BuffModHideSomeAppearanceConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(bloodbar_, other->bloodbar_);
    std::swap(text_, other->text_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModHideSomeAppearanceConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModHideSomeAppearanceConfig_descriptor_;
  metadata.reflection = BuffModHideSomeAppearanceConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModAddDefPointConfig::kActiveFieldNumber;
const int BuffModAddDefPointConfig::kDelayTimeFieldNumber;
const int BuffModAddDefPointConfig::kPointFieldNumber;
const int BuffModAddDefPointConfig::kTypeFieldNumber;
const int BuffModAddDefPointConfig::kColorFieldNumber;
#endif  // !_MSC_VER

BuffModAddDefPointConfig::BuffModAddDefPointConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModAddDefPointConfig)
}

void BuffModAddDefPointConfig::InitAsDefaultInstance() {
}

BuffModAddDefPointConfig::BuffModAddDefPointConfig(const BuffModAddDefPointConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModAddDefPointConfig)
}

void BuffModAddDefPointConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  point_ = 0;
  type_ = 0;
  color_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModAddDefPointConfig::~BuffModAddDefPointConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModAddDefPointConfig)
  SharedDtor();
}

void BuffModAddDefPointConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModAddDefPointConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModAddDefPointConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModAddDefPointConfig_descriptor_;
}

const BuffModAddDefPointConfig& BuffModAddDefPointConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModAddDefPointConfig* BuffModAddDefPointConfig::default_instance_ = NULL;

BuffModAddDefPointConfig* BuffModAddDefPointConfig::New() const {
  return new BuffModAddDefPointConfig;
}

void BuffModAddDefPointConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModAddDefPointConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(active_, color_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModAddDefPointConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModAddDefPointConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Point;
        break;
      }

      // optional int32 Point = 3;
      case 3: {
        if (tag == 24) {
         parse_Point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &point_)));
          set_has_point();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Type;
        break;
      }

      // optional int32 Type = 4;
      case 4: {
        if (tag == 32) {
         parse_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Color;
        break;
      }

      // optional int32 Color = 5;
      case 5: {
        if (tag == 40) {
         parse_Color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_)));
          set_has_color();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModAddDefPointConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModAddDefPointConfig)
  return false;
#undef DO_
}

void BuffModAddDefPointConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModAddDefPointConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 Point = 3;
  if (has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->point(), output);
  }

  // optional int32 Type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // optional int32 Color = 5;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->color(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModAddDefPointConfig)
}

::google::protobuf::uint8* BuffModAddDefPointConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModAddDefPointConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 Point = 3;
  if (has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->point(), target);
  }

  // optional int32 Type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // optional int32 Color = 5;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->color(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModAddDefPointConfig)
  return target;
}

int BuffModAddDefPointConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 Point = 3;
    if (has_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->point());
    }

    // optional int32 Type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 Color = 5;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->color());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModAddDefPointConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModAddDefPointConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModAddDefPointConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModAddDefPointConfig::MergeFrom(const BuffModAddDefPointConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_point()) {
      set_point(from.point());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_color()) {
      set_color(from.color());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModAddDefPointConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModAddDefPointConfig::CopyFrom(const BuffModAddDefPointConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModAddDefPointConfig::IsInitialized() const {

  return true;
}

void BuffModAddDefPointConfig::Swap(BuffModAddDefPointConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(point_, other->point_);
    std::swap(type_, other->type_);
    std::swap(color_, other->color_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModAddDefPointConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModAddDefPointConfig_descriptor_;
  metadata.reflection = BuffModAddDefPointConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModRemoveDefPointConfig::kActiveFieldNumber;
const int BuffModRemoveDefPointConfig::kDelayTimeFieldNumber;
const int BuffModRemoveDefPointConfig::kSkillIdFieldNumber;
#endif  // !_MSC_VER

BuffModRemoveDefPointConfig::BuffModRemoveDefPointConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModRemoveDefPointConfig)
}

void BuffModRemoveDefPointConfig::InitAsDefaultInstance() {
}

BuffModRemoveDefPointConfig::BuffModRemoveDefPointConfig(const BuffModRemoveDefPointConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModRemoveDefPointConfig)
}

void BuffModRemoveDefPointConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  skillid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModRemoveDefPointConfig::~BuffModRemoveDefPointConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModRemoveDefPointConfig)
  SharedDtor();
}

void BuffModRemoveDefPointConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModRemoveDefPointConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModRemoveDefPointConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModRemoveDefPointConfig_descriptor_;
}

const BuffModRemoveDefPointConfig& BuffModRemoveDefPointConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModRemoveDefPointConfig* BuffModRemoveDefPointConfig::default_instance_ = NULL;

BuffModRemoveDefPointConfig* BuffModRemoveDefPointConfig::New() const {
  return new BuffModRemoveDefPointConfig;
}

void BuffModRemoveDefPointConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModRemoveDefPointConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, skillid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModRemoveDefPointConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModRemoveDefPointConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SkillId;
        break;
      }

      // optional int32 SkillId = 3;
      case 3: {
        if (tag == 24) {
         parse_SkillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModRemoveDefPointConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModRemoveDefPointConfig)
  return false;
#undef DO_
}

void BuffModRemoveDefPointConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModRemoveDefPointConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 SkillId = 3;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skillid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModRemoveDefPointConfig)
}

::google::protobuf::uint8* BuffModRemoveDefPointConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModRemoveDefPointConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 SkillId = 3;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skillid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModRemoveDefPointConfig)
  return target;
}

int BuffModRemoveDefPointConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 SkillId = 3;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModRemoveDefPointConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModRemoveDefPointConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModRemoveDefPointConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModRemoveDefPointConfig::MergeFrom(const BuffModRemoveDefPointConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModRemoveDefPointConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModRemoveDefPointConfig::CopyFrom(const BuffModRemoveDefPointConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModRemoveDefPointConfig::IsInitialized() const {

  return true;
}

void BuffModRemoveDefPointConfig::Swap(BuffModRemoveDefPointConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(skillid_, other->skillid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModRemoveDefPointConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModRemoveDefPointConfig_descriptor_;
  metadata.reflection = BuffModRemoveDefPointConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModConditionChangeConfig::kActiveFieldNumber;
const int BuffModConditionChangeConfig::kDelayTimeFieldNumber;
const int BuffModConditionChangeConfig::kMainTypeFieldNumber;
const int BuffModConditionChangeConfig::kRelationFieldNumber;
const int BuffModConditionChangeConfig::kTargetFieldNumber;
const int BuffModConditionChangeConfig::kParam1FieldNumber;
const int BuffModConditionChangeConfig::kParam2FieldNumber;
const int BuffModConditionChangeConfig::kParamArrFieldNumber;
#endif  // !_MSC_VER

BuffModConditionChangeConfig::BuffModConditionChangeConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModConditionChangeConfig)
}

void BuffModConditionChangeConfig::InitAsDefaultInstance() {
}

BuffModConditionChangeConfig::BuffModConditionChangeConfig(const BuffModConditionChangeConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModConditionChangeConfig)
}

void BuffModConditionChangeConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  maintype_ = 0;
  relation_ = 0;
  target_ = 0;
  param1_ = 0;
  param2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModConditionChangeConfig::~BuffModConditionChangeConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModConditionChangeConfig)
  SharedDtor();
}

void BuffModConditionChangeConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModConditionChangeConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModConditionChangeConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModConditionChangeConfig_descriptor_;
}

const BuffModConditionChangeConfig& BuffModConditionChangeConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModConditionChangeConfig* BuffModConditionChangeConfig::default_instance_ = NULL;

BuffModConditionChangeConfig* BuffModConditionChangeConfig::New() const {
  return new BuffModConditionChangeConfig;
}

void BuffModConditionChangeConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModConditionChangeConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(active_, param1_);
    param2_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  paramarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModConditionChangeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModConditionChangeConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MainType;
        break;
      }

      // optional int32 MainType = 3;
      case 3: {
        if (tag == 24) {
         parse_MainType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maintype_)));
          set_has_maintype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Relation;
        break;
      }

      // optional int32 Relation = 4;
      case 4: {
        if (tag == 32) {
         parse_Relation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &relation_)));
          set_has_relation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Target;
        break;
      }

      // optional int32 Target = 5;
      case 5: {
        if (tag == 40) {
         parse_Target:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
          set_has_target();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Param1;
        break;
      }

      // optional int32 Param1 = 6;
      case 6: {
        if (tag == 48) {
         parse_Param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param1_)));
          set_has_param1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Param2;
        break;
      }

      // optional int32 Param2 = 7;
      case 7: {
        if (tag == 56) {
         parse_Param2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param2_)));
          set_has_param2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ParamArr;
        break;
      }

      // repeated int32 ParamArr = 8;
      case 8: {
        if (tag == 64) {
         parse_ParamArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64, input, this->mutable_paramarr())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_paramarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ParamArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModConditionChangeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModConditionChangeConfig)
  return false;
#undef DO_
}

void BuffModConditionChangeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModConditionChangeConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 MainType = 3;
  if (has_maintype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maintype(), output);
  }

  // optional int32 Relation = 4;
  if (has_relation()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->relation(), output);
  }

  // optional int32 Target = 5;
  if (has_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->target(), output);
  }

  // optional int32 Param1 = 6;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->param1(), output);
  }

  // optional int32 Param2 = 7;
  if (has_param2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->param2(), output);
  }

  // repeated int32 ParamArr = 8;
  for (int i = 0; i < this->paramarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->paramarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModConditionChangeConfig)
}

::google::protobuf::uint8* BuffModConditionChangeConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModConditionChangeConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 MainType = 3;
  if (has_maintype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maintype(), target);
  }

  // optional int32 Relation = 4;
  if (has_relation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->relation(), target);
  }

  // optional int32 Target = 5;
  if (has_target()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->target(), target);
  }

  // optional int32 Param1 = 6;
  if (has_param1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->param1(), target);
  }

  // optional int32 Param2 = 7;
  if (has_param2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->param2(), target);
  }

  // repeated int32 ParamArr = 8;
  for (int i = 0; i < this->paramarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(8, this->paramarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModConditionChangeConfig)
  return target;
}

int BuffModConditionChangeConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 MainType = 3;
    if (has_maintype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maintype());
    }

    // optional int32 Relation = 4;
    if (has_relation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->relation());
    }

    // optional int32 Target = 5;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target());
    }

    // optional int32 Param1 = 6;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param1());
    }

    // optional int32 Param2 = 7;
    if (has_param2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param2());
    }

  }
  // repeated int32 ParamArr = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->paramarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->paramarr(i));
    }
    total_size += 1 * this->paramarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModConditionChangeConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModConditionChangeConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModConditionChangeConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModConditionChangeConfig::MergeFrom(const BuffModConditionChangeConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  paramarr_.MergeFrom(from.paramarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_maintype()) {
      set_maintype(from.maintype());
    }
    if (from.has_relation()) {
      set_relation(from.relation());
    }
    if (from.has_target()) {
      set_target(from.target());
    }
    if (from.has_param1()) {
      set_param1(from.param1());
    }
    if (from.has_param2()) {
      set_param2(from.param2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModConditionChangeConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModConditionChangeConfig::CopyFrom(const BuffModConditionChangeConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModConditionChangeConfig::IsInitialized() const {

  return true;
}

void BuffModConditionChangeConfig::Swap(BuffModConditionChangeConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(maintype_, other->maintype_);
    std::swap(relation_, other->relation_);
    std::swap(target_, other->target_);
    std::swap(param1_, other->param1_);
    std::swap(param2_, other->param2_);
    paramarr_.Swap(&other->paramarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModConditionChangeConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModConditionChangeConfig_descriptor_;
  metadata.reflection = BuffModConditionChangeConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModNoRageRecoverConfig::kActiveFieldNumber;
const int BuffModNoRageRecoverConfig::kDelayTimeFieldNumber;
const int BuffModNoRageRecoverConfig::kEndWhenDamagedFieldNumber;
#endif  // !_MSC_VER

BuffModNoRageRecoverConfig::BuffModNoRageRecoverConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModNoRageRecoverConfig)
}

void BuffModNoRageRecoverConfig::InitAsDefaultInstance() {
}

BuffModNoRageRecoverConfig::BuffModNoRageRecoverConfig(const BuffModNoRageRecoverConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModNoRageRecoverConfig)
}

void BuffModNoRageRecoverConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  endwhendamaged_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModNoRageRecoverConfig::~BuffModNoRageRecoverConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModNoRageRecoverConfig)
  SharedDtor();
}

void BuffModNoRageRecoverConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModNoRageRecoverConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModNoRageRecoverConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModNoRageRecoverConfig_descriptor_;
}

const BuffModNoRageRecoverConfig& BuffModNoRageRecoverConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModNoRageRecoverConfig* BuffModNoRageRecoverConfig::default_instance_ = NULL;

BuffModNoRageRecoverConfig* BuffModNoRageRecoverConfig::New() const {
  return new BuffModNoRageRecoverConfig;
}

void BuffModNoRageRecoverConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModNoRageRecoverConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(delaytime_, endwhendamaged_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModNoRageRecoverConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModNoRageRecoverConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_EndWhenDamaged;
        break;
      }

      // optional bool EndWhenDamaged = 3;
      case 3: {
        if (tag == 24) {
         parse_EndWhenDamaged:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &endwhendamaged_)));
          set_has_endwhendamaged();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModNoRageRecoverConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModNoRageRecoverConfig)
  return false;
#undef DO_
}

void BuffModNoRageRecoverConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModNoRageRecoverConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional bool EndWhenDamaged = 3;
  if (has_endwhendamaged()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->endwhendamaged(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModNoRageRecoverConfig)
}

::google::protobuf::uint8* BuffModNoRageRecoverConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModNoRageRecoverConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional bool EndWhenDamaged = 3;
  if (has_endwhendamaged()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->endwhendamaged(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModNoRageRecoverConfig)
  return target;
}

int BuffModNoRageRecoverConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional bool EndWhenDamaged = 3;
    if (has_endwhendamaged()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModNoRageRecoverConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModNoRageRecoverConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModNoRageRecoverConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModNoRageRecoverConfig::MergeFrom(const BuffModNoRageRecoverConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_endwhendamaged()) {
      set_endwhendamaged(from.endwhendamaged());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModNoRageRecoverConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModNoRageRecoverConfig::CopyFrom(const BuffModNoRageRecoverConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModNoRageRecoverConfig::IsInitialized() const {

  return true;
}

void BuffModNoRageRecoverConfig::Swap(BuffModNoRageRecoverConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(endwhendamaged_, other->endwhendamaged_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModNoRageRecoverConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModNoRageRecoverConfig_descriptor_;
  metadata.reflection = BuffModNoRageRecoverConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModInheritExistBuffStackConfig::kActiveFieldNumber;
const int BuffModInheritExistBuffStackConfig::kDelayTimeFieldNumber;
const int BuffModInheritExistBuffStackConfig::kBuffIdFieldNumber;
#endif  // !_MSC_VER

BuffModInheritExistBuffStackConfig::BuffModInheritExistBuffStackConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModInheritExistBuffStackConfig)
}

void BuffModInheritExistBuffStackConfig::InitAsDefaultInstance() {
}

BuffModInheritExistBuffStackConfig::BuffModInheritExistBuffStackConfig(const BuffModInheritExistBuffStackConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModInheritExistBuffStackConfig)
}

void BuffModInheritExistBuffStackConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  delaytime_ = 0;
  buffid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModInheritExistBuffStackConfig::~BuffModInheritExistBuffStackConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModInheritExistBuffStackConfig)
  SharedDtor();
}

void BuffModInheritExistBuffStackConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModInheritExistBuffStackConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModInheritExistBuffStackConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModInheritExistBuffStackConfig_descriptor_;
}

const BuffModInheritExistBuffStackConfig& BuffModInheritExistBuffStackConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModInheritExistBuffStackConfig* BuffModInheritExistBuffStackConfig::default_instance_ = NULL;

BuffModInheritExistBuffStackConfig* BuffModInheritExistBuffStackConfig::New() const {
  return new BuffModInheritExistBuffStackConfig;
}

void BuffModInheritExistBuffStackConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModInheritExistBuffStackConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, buffid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModInheritExistBuffStackConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModInheritExistBuffStackConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DelayTime;
        break;
      }

      // optional int32 DelayTime = 2;
      case 2: {
        if (tag == 16) {
         parse_DelayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BuffId;
        break;
      }

      // optional int32 BuffId = 3;
      case 3: {
        if (tag == 24) {
         parse_BuffId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buffid_)));
          set_has_buffid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModInheritExistBuffStackConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModInheritExistBuffStackConfig)
  return false;
#undef DO_
}

void BuffModInheritExistBuffStackConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModInheritExistBuffStackConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delaytime(), output);
  }

  // optional int32 BuffId = 3;
  if (has_buffid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->buffid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModInheritExistBuffStackConfig)
}

::google::protobuf::uint8* BuffModInheritExistBuffStackConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModInheritExistBuffStackConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 DelayTime = 2;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delaytime(), target);
  }

  // optional int32 BuffId = 3;
  if (has_buffid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->buffid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModInheritExistBuffStackConfig)
  return target;
}

int BuffModInheritExistBuffStackConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 DelayTime = 2;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delaytime());
    }

    // optional int32 BuffId = 3;
    if (has_buffid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buffid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModInheritExistBuffStackConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModInheritExistBuffStackConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModInheritExistBuffStackConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModInheritExistBuffStackConfig::MergeFrom(const BuffModInheritExistBuffStackConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_buffid()) {
      set_buffid(from.buffid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModInheritExistBuffStackConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModInheritExistBuffStackConfig::CopyFrom(const BuffModInheritExistBuffStackConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModInheritExistBuffStackConfig::IsInitialized() const {

  return true;
}

void BuffModInheritExistBuffStackConfig::Swap(BuffModInheritExistBuffStackConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(buffid_, other->buffid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModInheritExistBuffStackConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModInheritExistBuffStackConfig_descriptor_;
  metadata.reflection = BuffModInheritExistBuffStackConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModReflectBuffConfig::kActiveFieldNumber;
const int BuffModReflectBuffConfig::kCDFieldNumber;
const int BuffModReflectBuffConfig::kReflectableSubTypesFieldNumber;
#endif  // !_MSC_VER

BuffModReflectBuffConfig::BuffModReflectBuffConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModReflectBuffConfig)
}

void BuffModReflectBuffConfig::InitAsDefaultInstance() {
}

BuffModReflectBuffConfig::BuffModReflectBuffConfig(const BuffModReflectBuffConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModReflectBuffConfig)
}

void BuffModReflectBuffConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  cd_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModReflectBuffConfig::~BuffModReflectBuffConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModReflectBuffConfig)
  SharedDtor();
}

void BuffModReflectBuffConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModReflectBuffConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModReflectBuffConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModReflectBuffConfig_descriptor_;
}

const BuffModReflectBuffConfig& BuffModReflectBuffConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModReflectBuffConfig* BuffModReflectBuffConfig::default_instance_ = NULL;

BuffModReflectBuffConfig* BuffModReflectBuffConfig::New() const {
  return new BuffModReflectBuffConfig;
}

void BuffModReflectBuffConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModReflectBuffConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, cd_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  reflectablesubtypes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModReflectBuffConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModReflectBuffConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CD;
        break;
      }

      // optional int32 CD = 2;
      case 2: {
        if (tag == 16) {
         parse_CD:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cd_)));
          set_has_cd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ReflectableSubTypes;
        break;
      }

      // repeated int32 ReflectableSubTypes = 3;
      case 3: {
        if (tag == 24) {
         parse_ReflectableSubTypes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_reflectablesubtypes())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_reflectablesubtypes())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ReflectableSubTypes;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModReflectBuffConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModReflectBuffConfig)
  return false;
#undef DO_
}

void BuffModReflectBuffConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModReflectBuffConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 CD = 2;
  if (has_cd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cd(), output);
  }

  // repeated int32 ReflectableSubTypes = 3;
  for (int i = 0; i < this->reflectablesubtypes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->reflectablesubtypes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModReflectBuffConfig)
}

::google::protobuf::uint8* BuffModReflectBuffConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModReflectBuffConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 CD = 2;
  if (has_cd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cd(), target);
  }

  // repeated int32 ReflectableSubTypes = 3;
  for (int i = 0; i < this->reflectablesubtypes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->reflectablesubtypes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModReflectBuffConfig)
  return target;
}

int BuffModReflectBuffConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 CD = 2;
    if (has_cd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cd());
    }

  }
  // repeated int32 ReflectableSubTypes = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->reflectablesubtypes_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->reflectablesubtypes(i));
    }
    total_size += 1 * this->reflectablesubtypes_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModReflectBuffConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModReflectBuffConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModReflectBuffConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModReflectBuffConfig::MergeFrom(const BuffModReflectBuffConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  reflectablesubtypes_.MergeFrom(from.reflectablesubtypes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_cd()) {
      set_cd(from.cd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModReflectBuffConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModReflectBuffConfig::CopyFrom(const BuffModReflectBuffConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModReflectBuffConfig::IsInitialized() const {

  return true;
}

void BuffModReflectBuffConfig::Swap(BuffModReflectBuffConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(cd_, other->cd_);
    reflectablesubtypes_.Swap(&other->reflectablesubtypes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModReflectBuffConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModReflectBuffConfig_descriptor_;
  metadata.reflection = BuffModReflectBuffConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModFatalDmgShiftConfig::kActiveFieldNumber;
const int BuffModFatalDmgShiftConfig::kCountFieldNumber;
const int BuffModFatalDmgShiftConfig::kCDFieldNumber;
const int BuffModFatalDmgShiftConfig::kTargetTypeFieldNumber;
#endif  // !_MSC_VER

BuffModFatalDmgShiftConfig::BuffModFatalDmgShiftConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModFatalDmgShiftConfig)
}

void BuffModFatalDmgShiftConfig::InitAsDefaultInstance() {
}

BuffModFatalDmgShiftConfig::BuffModFatalDmgShiftConfig(const BuffModFatalDmgShiftConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModFatalDmgShiftConfig)
}

void BuffModFatalDmgShiftConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  count_ = 0;
  cd_ = 0;
  targettype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModFatalDmgShiftConfig::~BuffModFatalDmgShiftConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModFatalDmgShiftConfig)
  SharedDtor();
}

void BuffModFatalDmgShiftConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModFatalDmgShiftConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModFatalDmgShiftConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModFatalDmgShiftConfig_descriptor_;
}

const BuffModFatalDmgShiftConfig& BuffModFatalDmgShiftConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModFatalDmgShiftConfig* BuffModFatalDmgShiftConfig::default_instance_ = NULL;

BuffModFatalDmgShiftConfig* BuffModFatalDmgShiftConfig::New() const {
  return new BuffModFatalDmgShiftConfig;
}

void BuffModFatalDmgShiftConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModFatalDmgShiftConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, targettype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModFatalDmgShiftConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModFatalDmgShiftConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Count;
        break;
      }

      // optional int32 Count = 2;
      case 2: {
        if (tag == 16) {
         parse_Count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CD;
        break;
      }

      // optional int32 CD = 3;
      case 3: {
        if (tag == 24) {
         parse_CD:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cd_)));
          set_has_cd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_TargetType;
        break;
      }

      // optional int32 TargetType = 4;
      case 4: {
        if (tag == 32) {
         parse_TargetType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targettype_)));
          set_has_targettype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModFatalDmgShiftConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModFatalDmgShiftConfig)
  return false;
#undef DO_
}

void BuffModFatalDmgShiftConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModFatalDmgShiftConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 Count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // optional int32 CD = 3;
  if (has_cd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cd(), output);
  }

  // optional int32 TargetType = 4;
  if (has_targettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->targettype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModFatalDmgShiftConfig)
}

::google::protobuf::uint8* BuffModFatalDmgShiftConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModFatalDmgShiftConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 Count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // optional int32 CD = 3;
  if (has_cd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cd(), target);
  }

  // optional int32 TargetType = 4;
  if (has_targettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->targettype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModFatalDmgShiftConfig)
  return target;
}

int BuffModFatalDmgShiftConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 Count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 CD = 3;
    if (has_cd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cd());
    }

    // optional int32 TargetType = 4;
    if (has_targettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->targettype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModFatalDmgShiftConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModFatalDmgShiftConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModFatalDmgShiftConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModFatalDmgShiftConfig::MergeFrom(const BuffModFatalDmgShiftConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_cd()) {
      set_cd(from.cd());
    }
    if (from.has_targettype()) {
      set_targettype(from.targettype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModFatalDmgShiftConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModFatalDmgShiftConfig::CopyFrom(const BuffModFatalDmgShiftConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModFatalDmgShiftConfig::IsInitialized() const {

  return true;
}

void BuffModFatalDmgShiftConfig::Swap(BuffModFatalDmgShiftConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(count_, other->count_);
    std::swap(cd_, other->cd_);
    std::swap(targettype_, other->targettype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModFatalDmgShiftConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModFatalDmgShiftConfig_descriptor_;
  metadata.reflection = BuffModFatalDmgShiftConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffModRageImmunityConfig::kActiveFieldNumber;
const int BuffModRageImmunityConfig::kTypeFieldNumber;
#endif  // !_MSC_VER

BuffModRageImmunityConfig::BuffModRageImmunityConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffModRageImmunityConfig)
}

void BuffModRageImmunityConfig::InitAsDefaultInstance() {
}

BuffModRageImmunityConfig::BuffModRageImmunityConfig(const BuffModRageImmunityConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffModRageImmunityConfig)
}

void BuffModRageImmunityConfig::SharedCtor() {
  _cached_size_ = 0;
  active_ = false;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffModRageImmunityConfig::~BuffModRageImmunityConfig() {
  // @@protoc_insertion_point(destructor:pb.BuffModRageImmunityConfig)
  SharedDtor();
}

void BuffModRageImmunityConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffModRageImmunityConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffModRageImmunityConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffModRageImmunityConfig_descriptor_;
}

const BuffModRageImmunityConfig& BuffModRageImmunityConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffModRageImmunityConfig* BuffModRageImmunityConfig::default_instance_ = NULL;

BuffModRageImmunityConfig* BuffModRageImmunityConfig::New() const {
  return new BuffModRageImmunityConfig;
}

void BuffModRageImmunityConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffModRageImmunityConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(active_, type_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffModRageImmunityConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffModRageImmunityConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Active = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Type;
        break;
      }

      // optional int32 Type = 2;
      case 2: {
        if (tag == 16) {
         parse_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffModRageImmunityConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffModRageImmunityConfig)
  return false;
#undef DO_
}

void BuffModRageImmunityConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffModRageImmunityConfig)
  // optional bool Active = 1;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->active(), output);
  }

  // optional int32 Type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffModRageImmunityConfig)
}

::google::protobuf::uint8* BuffModRageImmunityConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffModRageImmunityConfig)
  // optional bool Active = 1;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->active(), target);
  }

  // optional int32 Type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffModRageImmunityConfig)
  return target;
}

int BuffModRageImmunityConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Active = 1;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 Type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffModRageImmunityConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffModRageImmunityConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffModRageImmunityConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffModRageImmunityConfig::MergeFrom(const BuffModRageImmunityConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffModRageImmunityConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffModRageImmunityConfig::CopyFrom(const BuffModRageImmunityConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffModRageImmunityConfig::IsInitialized() const {

  return true;
}

void BuffModRageImmunityConfig::Swap(BuffModRageImmunityConfig* other) {
  if (other != this) {
    std::swap(active_, other->active_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffModRageImmunityConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffModRageImmunityConfig_descriptor_;
  metadata.reflection = BuffModRageImmunityConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuffBaseDataModel::kNameFieldNumber;
const int BuffBaseDataModel::kLabelIDFieldNumber;
const int BuffBaseDataModel::kHitRateFieldNumber;
const int BuffBaseDataModel::kMainTypeFieldNumber;
const int BuffBaseDataModel::kSubTypeFieldNumber;
const int BuffBaseDataModel::kLastTimeFieldNumber;
const int BuffBaseDataModel::kLastTimeGrowthFieldNumber;
const int BuffBaseDataModel::kPurgeTypeFieldNumber;
const int BuffBaseDataModel::kPurgeBuffArrFieldNumber;
const int BuffBaseDataModel::kOverlyTypeFieldNumber;
const int BuffBaseDataModel::kMaxOverlyNumFieldNumber;
const int BuffBaseDataModel::kIconPathFieldNumber;
const int BuffBaseDataModel::kStartEffectNameFieldNumber;
const int BuffBaseDataModel::kStartEffectParentFieldNumber;
const int BuffBaseDataModel::kLastEffectParentFieldNumber;
const int BuffBaseDataModel::kEndEffectNameFieldNumber;
const int BuffBaseDataModel::kEndEffectParentFieldNumber;
const int BuffBaseDataModel::kSpecialShaderFieldNumber;
const int BuffBaseDataModel::kGeneralShaderFieldNumber;
const int BuffBaseDataModel::kLastingActionFieldNumber;
const int BuffBaseDataModel::kLastEffectArrFieldNumber;
const int BuffBaseDataModel::kLastActionDelayFieldNumber;
const int BuffBaseDataModel::kStartEffectFieldNumber;
const int BuffBaseDataModel::kLastEffectFieldNumber;
const int BuffBaseDataModel::kEndEffectFieldNumber;
const int BuffBaseDataModel::kRemoveWhenBeControlledFieldNumber;
const int BuffBaseDataModel::kNeedRemoveLastNonPermanentEffectFieldNumber;
const int BuffBaseDataModel::kSubTypeArrFieldNumber;
const int BuffBaseDataModel::kRemoveWhenShapeShiftedFieldNumber;
const int BuffBaseDataModel::kBeCleanLevelFieldNumber;
#endif  // !_MSC_VER

BuffBaseDataModel::BuffBaseDataModel()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.BuffBaseDataModel)
}

void BuffBaseDataModel::InitAsDefaultInstance() {
}

BuffBaseDataModel::BuffBaseDataModel(const BuffBaseDataModel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.BuffBaseDataModel)
}

void BuffBaseDataModel::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  labelid_ = 0;
  hitrate_ = 0;
  maintype_ = 0;
  subtype_ = 0;
  lasttime_ = 0;
  lasttimegrowth_ = 0;
  purgetype_ = 0;
  overlytype_ = 0;
  maxoverlynum_ = 0;
  iconpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  starteffectname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  starteffectparent_ = 0;
  lasteffectparent_ = 0;
  endeffectname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endeffectparent_ = 0;
  specialshader_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  generalshader_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastingaction_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastactiondelay_ = 0;
  removewhenbecontrolled_ = false;
  needremovelastnonpermanenteffect_ = false;
  removewhenshapeshifted_ = false;
  becleanlevel_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffBaseDataModel::~BuffBaseDataModel() {
  // @@protoc_insertion_point(destructor:pb.BuffBaseDataModel)
  SharedDtor();
}

void BuffBaseDataModel::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (iconpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete iconpath_;
  }
  if (starteffectname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete starteffectname_;
  }
  if (endeffectname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endeffectname_;
  }
  if (specialshader_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete specialshader_;
  }
  if (generalshader_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete generalshader_;
  }
  if (lastingaction_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lastingaction_;
  }
  if (this != default_instance_) {
  }
}

void BuffBaseDataModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffBaseDataModel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffBaseDataModel_descriptor_;
}

const BuffBaseDataModel& BuffBaseDataModel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fBuffDataBase_2eproto();
  return *default_instance_;
}

BuffBaseDataModel* BuffBaseDataModel::default_instance_ = NULL;

BuffBaseDataModel* BuffBaseDataModel::New() const {
  return new BuffBaseDataModel;
}

void BuffBaseDataModel::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuffBaseDataModel*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(labelid_, lasttimegrowth_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    purgetype_ = 0;
  }
  if (_has_bits_[8 / 32] & 65024) {
    ZR_(maxoverlynum_, starteffectparent_);
    overlytype_ = 0;
    if (has_iconpath()) {
      if (iconpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        iconpath_->clear();
      }
    }
    if (has_starteffectname()) {
      if (starteffectname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        starteffectname_->clear();
      }
    }
    lasteffectparent_ = 0;
    if (has_endeffectname()) {
      if (endeffectname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        endeffectname_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 3080192) {
    endeffectparent_ = 0;
    if (has_specialshader()) {
      if (specialshader_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        specialshader_->clear();
      }
    }
    if (has_generalshader()) {
      if (generalshader_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        generalshader_->clear();
      }
    }
    if (has_lastingaction()) {
      if (lastingaction_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        lastingaction_->clear();
      }
    }
    lastactiondelay_ = 0;
  }
  if (_has_bits_[24 / 32] & 905969664) {
    ZR_(removewhenbecontrolled_, removewhenshapeshifted_);
    becleanlevel_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  purgebuffarr_.Clear();
  lasteffectarr_.Clear();
  starteffect_.Clear();
  lasteffect_.Clear();
  endeffect_.Clear();
  subtypearr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffBaseDataModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.BuffBaseDataModel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_LabelID;
        break;
      }

      // optional int32 LabelID = 2;
      case 2: {
        if (tag == 16) {
         parse_LabelID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &labelid_)));
          set_has_labelid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_HitRate;
        break;
      }

      // optional int32 HitRate = 3;
      case 3: {
        if (tag == 24) {
         parse_HitRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hitrate_)));
          set_has_hitrate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_MainType;
        break;
      }

      // optional int32 MainType = 4;
      case 4: {
        if (tag == 32) {
         parse_MainType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maintype_)));
          set_has_maintype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_SubType;
        break;
      }

      // optional int32 SubType = 5;
      case 5: {
        if (tag == 40) {
         parse_SubType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &subtype_)));
          set_has_subtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_LastTime;
        break;
      }

      // optional int32 LastTime = 6;
      case 6: {
        if (tag == 48) {
         parse_LastTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lasttime_)));
          set_has_lasttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_LastTimeGrowth;
        break;
      }

      // optional int32 LastTimeGrowth = 7;
      case 7: {
        if (tag == 56) {
         parse_LastTimeGrowth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lasttimegrowth_)));
          set_has_lasttimegrowth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_PurgeType;
        break;
      }

      // optional int32 PurgeType = 8;
      case 8: {
        if (tag == 64) {
         parse_PurgeType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &purgetype_)));
          set_has_purgetype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_OverlyType;
        break;
      }

      // optional int32 OverlyType = 9;
      case 9: {
        if (tag == 72) {
         parse_OverlyType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &overlytype_)));
          set_has_overlytype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_MaxOverlyNum;
        break;
      }

      // optional int32 MaxOverlyNum = 10;
      case 10: {
        if (tag == 80) {
         parse_MaxOverlyNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxoverlynum_)));
          set_has_maxoverlynum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_IconPath;
        break;
      }

      // optional string IconPath = 11;
      case 11: {
        if (tag == 90) {
         parse_IconPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iconpath().data(), this->iconpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "iconpath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_StartEffectName;
        break;
      }

      // optional string StartEffectName = 12;
      case 12: {
        if (tag == 98) {
         parse_StartEffectName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_starteffectname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->starteffectname().data(), this->starteffectname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "starteffectname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_StartEffectParent;
        break;
      }

      // optional int32 StartEffectParent = 13;
      case 13: {
        if (tag == 104) {
         parse_StartEffectParent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starteffectparent_)));
          set_has_starteffectparent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_LastEffectParent;
        break;
      }

      // optional int32 LastEffectParent = 15;
      case 15: {
        if (tag == 120) {
         parse_LastEffectParent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lasteffectparent_)));
          set_has_lasteffectparent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_EndEffectName;
        break;
      }

      // optional string EndEffectName = 16;
      case 16: {
        if (tag == 130) {
         parse_EndEffectName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endeffectname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endeffectname().data(), this->endeffectname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "endeffectname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_EndEffectParent;
        break;
      }

      // optional int32 EndEffectParent = 17;
      case 17: {
        if (tag == 136) {
         parse_EndEffectParent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endeffectparent_)));
          set_has_endeffectparent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_SpecialShader;
        break;
      }

      // optional string SpecialShader = 18;
      case 18: {
        if (tag == 146) {
         parse_SpecialShader:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_specialshader()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->specialshader().data(), this->specialshader().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "specialshader");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_LastingAction;
        break;
      }

      // optional string LastingAction = 19;
      case 19: {
        if (tag == 154) {
         parse_LastingAction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastingaction()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lastingaction().data(), this->lastingaction().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lastingaction");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_LastEffectArr;
        break;
      }

      // repeated string LastEffectArr = 20;
      case 20: {
        if (tag == 162) {
         parse_LastEffectArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_lasteffectarr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lasteffectarr(this->lasteffectarr_size() - 1).data(),
            this->lasteffectarr(this->lasteffectarr_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lasteffectarr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_LastEffectArr;
        if (input->ExpectTag(168)) goto parse_LastActionDelay;
        break;
      }

      // optional int32 LastActionDelay = 21;
      case 21: {
        if (tag == 168) {
         parse_LastActionDelay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lastactiondelay_)));
          set_has_lastactiondelay();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_StartEffect;
        break;
      }

      // repeated .pb.BuffSingleEffect StartEffect = 22;
      case 22: {
        if (tag == 178) {
         parse_StartEffect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_starteffect()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_StartEffect;
        if (input->ExpectTag(186)) goto parse_LastEffect;
        break;
      }

      // repeated .pb.BuffRepeatedEffect LastEffect = 23;
      case 23: {
        if (tag == 186) {
         parse_LastEffect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lasteffect()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_LastEffect;
        if (input->ExpectTag(194)) goto parse_EndEffect;
        break;
      }

      // repeated .pb.BuffSingleEffect EndEffect = 24;
      case 24: {
        if (tag == 194) {
         parse_EndEffect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_endeffect()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_EndEffect;
        if (input->ExpectTag(200)) goto parse_PurgeBuffArr;
        break;
      }

      // repeated int32 PurgeBuffArr = 25;
      case 25: {
        if (tag == 200) {
         parse_PurgeBuffArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 200, input, this->mutable_purgebuffarr())));
        } else if (tag == 202) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_purgebuffarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_PurgeBuffArr;
        if (input->ExpectTag(210)) goto parse_GeneralShader;
        break;
      }

      // optional string GeneralShader = 26;
      case 26: {
        if (tag == 210) {
         parse_GeneralShader:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_generalshader()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->generalshader().data(), this->generalshader().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "generalshader");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_RemoveWhenBeControlled;
        break;
      }

      // optional bool RemoveWhenBeControlled = 27;
      case 27: {
        if (tag == 216) {
         parse_RemoveWhenBeControlled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &removewhenbecontrolled_)));
          set_has_removewhenbecontrolled();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_NeedRemoveLastNonPermanentEffect;
        break;
      }

      // optional bool NeedRemoveLastNonPermanentEffect = 28;
      case 28: {
        if (tag == 224) {
         parse_NeedRemoveLastNonPermanentEffect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needremovelastnonpermanenteffect_)));
          set_has_needremovelastnonpermanenteffect();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_SubTypeArr;
        break;
      }

      // repeated int32 SubTypeArr = 29;
      case 29: {
        if (tag == 232) {
         parse_SubTypeArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 232, input, this->mutable_subtypearr())));
        } else if (tag == 234) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_subtypearr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_SubTypeArr;
        if (input->ExpectTag(240)) goto parse_RemoveWhenShapeShifted;
        break;
      }

      // optional bool RemoveWhenShapeShifted = 30;
      case 30: {
        if (tag == 240) {
         parse_RemoveWhenShapeShifted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &removewhenshapeshifted_)));
          set_has_removewhenshapeshifted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_BeCleanLevel;
        break;
      }

      // optional int32 BeCleanLevel = 31;
      case 31: {
        if (tag == 248) {
         parse_BeCleanLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &becleanlevel_)));
          set_has_becleanlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.BuffBaseDataModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.BuffBaseDataModel)
  return false;
#undef DO_
}

void BuffBaseDataModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.BuffBaseDataModel)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 LabelID = 2;
  if (has_labelid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->labelid(), output);
  }

  // optional int32 HitRate = 3;
  if (has_hitrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->hitrate(), output);
  }

  // optional int32 MainType = 4;
  if (has_maintype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maintype(), output);
  }

  // optional int32 SubType = 5;
  if (has_subtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->subtype(), output);
  }

  // optional int32 LastTime = 6;
  if (has_lasttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->lasttime(), output);
  }

  // optional int32 LastTimeGrowth = 7;
  if (has_lasttimegrowth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->lasttimegrowth(), output);
  }

  // optional int32 PurgeType = 8;
  if (has_purgetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->purgetype(), output);
  }

  // optional int32 OverlyType = 9;
  if (has_overlytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->overlytype(), output);
  }

  // optional int32 MaxOverlyNum = 10;
  if (has_maxoverlynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->maxoverlynum(), output);
  }

  // optional string IconPath = 11;
  if (has_iconpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconpath().data(), this->iconpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "iconpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->iconpath(), output);
  }

  // optional string StartEffectName = 12;
  if (has_starteffectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->starteffectname().data(), this->starteffectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "starteffectname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->starteffectname(), output);
  }

  // optional int32 StartEffectParent = 13;
  if (has_starteffectparent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->starteffectparent(), output);
  }

  // optional int32 LastEffectParent = 15;
  if (has_lasteffectparent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->lasteffectparent(), output);
  }

  // optional string EndEffectName = 16;
  if (has_endeffectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endeffectname().data(), this->endeffectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endeffectname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->endeffectname(), output);
  }

  // optional int32 EndEffectParent = 17;
  if (has_endeffectparent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->endeffectparent(), output);
  }

  // optional string SpecialShader = 18;
  if (has_specialshader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->specialshader().data(), this->specialshader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "specialshader");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->specialshader(), output);
  }

  // optional string LastingAction = 19;
  if (has_lastingaction()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lastingaction().data(), this->lastingaction().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lastingaction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->lastingaction(), output);
  }

  // repeated string LastEffectArr = 20;
  for (int i = 0; i < this->lasteffectarr_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->lasteffectarr(i).data(), this->lasteffectarr(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "lasteffectarr");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->lasteffectarr(i), output);
  }

  // optional int32 LastActionDelay = 21;
  if (has_lastactiondelay()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->lastactiondelay(), output);
  }

  // repeated .pb.BuffSingleEffect StartEffect = 22;
  for (int i = 0; i < this->starteffect_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->starteffect(i), output);
  }

  // repeated .pb.BuffRepeatedEffect LastEffect = 23;
  for (int i = 0; i < this->lasteffect_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->lasteffect(i), output);
  }

  // repeated .pb.BuffSingleEffect EndEffect = 24;
  for (int i = 0; i < this->endeffect_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->endeffect(i), output);
  }

  // repeated int32 PurgeBuffArr = 25;
  for (int i = 0; i < this->purgebuffarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      25, this->purgebuffarr(i), output);
  }

  // optional string GeneralShader = 26;
  if (has_generalshader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->generalshader().data(), this->generalshader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "generalshader");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->generalshader(), output);
  }

  // optional bool RemoveWhenBeControlled = 27;
  if (has_removewhenbecontrolled()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->removewhenbecontrolled(), output);
  }

  // optional bool NeedRemoveLastNonPermanentEffect = 28;
  if (has_needremovelastnonpermanenteffect()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->needremovelastnonpermanenteffect(), output);
  }

  // repeated int32 SubTypeArr = 29;
  for (int i = 0; i < this->subtypearr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      29, this->subtypearr(i), output);
  }

  // optional bool RemoveWhenShapeShifted = 30;
  if (has_removewhenshapeshifted()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(30, this->removewhenshapeshifted(), output);
  }

  // optional int32 BeCleanLevel = 31;
  if (has_becleanlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->becleanlevel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.BuffBaseDataModel)
}

::google::protobuf::uint8* BuffBaseDataModel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BuffBaseDataModel)
  // optional string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 LabelID = 2;
  if (has_labelid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->labelid(), target);
  }

  // optional int32 HitRate = 3;
  if (has_hitrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->hitrate(), target);
  }

  // optional int32 MainType = 4;
  if (has_maintype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maintype(), target);
  }

  // optional int32 SubType = 5;
  if (has_subtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->subtype(), target);
  }

  // optional int32 LastTime = 6;
  if (has_lasttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->lasttime(), target);
  }

  // optional int32 LastTimeGrowth = 7;
  if (has_lasttimegrowth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->lasttimegrowth(), target);
  }

  // optional int32 PurgeType = 8;
  if (has_purgetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->purgetype(), target);
  }

  // optional int32 OverlyType = 9;
  if (has_overlytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->overlytype(), target);
  }

  // optional int32 MaxOverlyNum = 10;
  if (has_maxoverlynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->maxoverlynum(), target);
  }

  // optional string IconPath = 11;
  if (has_iconpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconpath().data(), this->iconpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "iconpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->iconpath(), target);
  }

  // optional string StartEffectName = 12;
  if (has_starteffectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->starteffectname().data(), this->starteffectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "starteffectname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->starteffectname(), target);
  }

  // optional int32 StartEffectParent = 13;
  if (has_starteffectparent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->starteffectparent(), target);
  }

  // optional int32 LastEffectParent = 15;
  if (has_lasteffectparent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->lasteffectparent(), target);
  }

  // optional string EndEffectName = 16;
  if (has_endeffectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endeffectname().data(), this->endeffectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endeffectname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->endeffectname(), target);
  }

  // optional int32 EndEffectParent = 17;
  if (has_endeffectparent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->endeffectparent(), target);
  }

  // optional string SpecialShader = 18;
  if (has_specialshader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->specialshader().data(), this->specialshader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "specialshader");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->specialshader(), target);
  }

  // optional string LastingAction = 19;
  if (has_lastingaction()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lastingaction().data(), this->lastingaction().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lastingaction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->lastingaction(), target);
  }

  // repeated string LastEffectArr = 20;
  for (int i = 0; i < this->lasteffectarr_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lasteffectarr(i).data(), this->lasteffectarr(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lasteffectarr");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(20, this->lasteffectarr(i), target);
  }

  // optional int32 LastActionDelay = 21;
  if (has_lastactiondelay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->lastactiondelay(), target);
  }

  // repeated .pb.BuffSingleEffect StartEffect = 22;
  for (int i = 0; i < this->starteffect_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->starteffect(i), target);
  }

  // repeated .pb.BuffRepeatedEffect LastEffect = 23;
  for (int i = 0; i < this->lasteffect_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->lasteffect(i), target);
  }

  // repeated .pb.BuffSingleEffect EndEffect = 24;
  for (int i = 0; i < this->endeffect_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->endeffect(i), target);
  }

  // repeated int32 PurgeBuffArr = 25;
  for (int i = 0; i < this->purgebuffarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(25, this->purgebuffarr(i), target);
  }

  // optional string GeneralShader = 26;
  if (has_generalshader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->generalshader().data(), this->generalshader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "generalshader");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->generalshader(), target);
  }

  // optional bool RemoveWhenBeControlled = 27;
  if (has_removewhenbecontrolled()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->removewhenbecontrolled(), target);
  }

  // optional bool NeedRemoveLastNonPermanentEffect = 28;
  if (has_needremovelastnonpermanenteffect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->needremovelastnonpermanenteffect(), target);
  }

  // repeated int32 SubTypeArr = 29;
  for (int i = 0; i < this->subtypearr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(29, this->subtypearr(i), target);
  }

  // optional bool RemoveWhenShapeShifted = 30;
  if (has_removewhenshapeshifted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(30, this->removewhenshapeshifted(), target);
  }

  // optional int32 BeCleanLevel = 31;
  if (has_becleanlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->becleanlevel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BuffBaseDataModel)
  return target;
}

int BuffBaseDataModel::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 LabelID = 2;
    if (has_labelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->labelid());
    }

    // optional int32 HitRate = 3;
    if (has_hitrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hitrate());
    }

    // optional int32 MainType = 4;
    if (has_maintype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maintype());
    }

    // optional int32 SubType = 5;
    if (has_subtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->subtype());
    }

    // optional int32 LastTime = 6;
    if (has_lasttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lasttime());
    }

    // optional int32 LastTimeGrowth = 7;
    if (has_lasttimegrowth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lasttimegrowth());
    }

    // optional int32 PurgeType = 8;
    if (has_purgetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->purgetype());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional int32 OverlyType = 9;
    if (has_overlytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->overlytype());
    }

    // optional int32 MaxOverlyNum = 10;
    if (has_maxoverlynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxoverlynum());
    }

    // optional string IconPath = 11;
    if (has_iconpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iconpath());
    }

    // optional string StartEffectName = 12;
    if (has_starteffectname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->starteffectname());
    }

    // optional int32 StartEffectParent = 13;
    if (has_starteffectparent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starteffectparent());
    }

    // optional int32 LastEffectParent = 15;
    if (has_lasteffectparent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lasteffectparent());
    }

    // optional string EndEffectName = 16;
    if (has_endeffectname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endeffectname());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 EndEffectParent = 17;
    if (has_endeffectparent()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->endeffectparent());
    }

    // optional string SpecialShader = 18;
    if (has_specialshader()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->specialshader());
    }

    // optional string GeneralShader = 26;
    if (has_generalshader()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->generalshader());
    }

    // optional string LastingAction = 19;
    if (has_lastingaction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lastingaction());
    }

    // optional int32 LastActionDelay = 21;
    if (has_lastactiondelay()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lastactiondelay());
    }

  }
  if (_has_bits_[25 / 32] & (0xffu << (25 % 32))) {
    // optional bool RemoveWhenBeControlled = 27;
    if (has_removewhenbecontrolled()) {
      total_size += 2 + 1;
    }

    // optional bool NeedRemoveLastNonPermanentEffect = 28;
    if (has_needremovelastnonpermanenteffect()) {
      total_size += 2 + 1;
    }

    // optional bool RemoveWhenShapeShifted = 30;
    if (has_removewhenshapeshifted()) {
      total_size += 2 + 1;
    }

    // optional int32 BeCleanLevel = 31;
    if (has_becleanlevel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->becleanlevel());
    }

  }
  // repeated int32 PurgeBuffArr = 25;
  {
    int data_size = 0;
    for (int i = 0; i < this->purgebuffarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->purgebuffarr(i));
    }
    total_size += 2 * this->purgebuffarr_size() + data_size;
  }

  // repeated string LastEffectArr = 20;
  total_size += 2 * this->lasteffectarr_size();
  for (int i = 0; i < this->lasteffectarr_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->lasteffectarr(i));
  }

  // repeated .pb.BuffSingleEffect StartEffect = 22;
  total_size += 2 * this->starteffect_size();
  for (int i = 0; i < this->starteffect_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->starteffect(i));
  }

  // repeated .pb.BuffRepeatedEffect LastEffect = 23;
  total_size += 2 * this->lasteffect_size();
  for (int i = 0; i < this->lasteffect_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lasteffect(i));
  }

  // repeated .pb.BuffSingleEffect EndEffect = 24;
  total_size += 2 * this->endeffect_size();
  for (int i = 0; i < this->endeffect_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->endeffect(i));
  }

  // repeated int32 SubTypeArr = 29;
  {
    int data_size = 0;
    for (int i = 0; i < this->subtypearr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->subtypearr(i));
    }
    total_size += 2 * this->subtypearr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffBaseDataModel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffBaseDataModel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffBaseDataModel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffBaseDataModel::MergeFrom(const BuffBaseDataModel& from) {
  GOOGLE_CHECK_NE(&from, this);
  purgebuffarr_.MergeFrom(from.purgebuffarr_);
  lasteffectarr_.MergeFrom(from.lasteffectarr_);
  starteffect_.MergeFrom(from.starteffect_);
  lasteffect_.MergeFrom(from.lasteffect_);
  endeffect_.MergeFrom(from.endeffect_);
  subtypearr_.MergeFrom(from.subtypearr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_labelid()) {
      set_labelid(from.labelid());
    }
    if (from.has_hitrate()) {
      set_hitrate(from.hitrate());
    }
    if (from.has_maintype()) {
      set_maintype(from.maintype());
    }
    if (from.has_subtype()) {
      set_subtype(from.subtype());
    }
    if (from.has_lasttime()) {
      set_lasttime(from.lasttime());
    }
    if (from.has_lasttimegrowth()) {
      set_lasttimegrowth(from.lasttimegrowth());
    }
    if (from.has_purgetype()) {
      set_purgetype(from.purgetype());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_overlytype()) {
      set_overlytype(from.overlytype());
    }
    if (from.has_maxoverlynum()) {
      set_maxoverlynum(from.maxoverlynum());
    }
    if (from.has_iconpath()) {
      set_iconpath(from.iconpath());
    }
    if (from.has_starteffectname()) {
      set_starteffectname(from.starteffectname());
    }
    if (from.has_starteffectparent()) {
      set_starteffectparent(from.starteffectparent());
    }
    if (from.has_lasteffectparent()) {
      set_lasteffectparent(from.lasteffectparent());
    }
    if (from.has_endeffectname()) {
      set_endeffectname(from.endeffectname());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_endeffectparent()) {
      set_endeffectparent(from.endeffectparent());
    }
    if (from.has_specialshader()) {
      set_specialshader(from.specialshader());
    }
    if (from.has_generalshader()) {
      set_generalshader(from.generalshader());
    }
    if (from.has_lastingaction()) {
      set_lastingaction(from.lastingaction());
    }
    if (from.has_lastactiondelay()) {
      set_lastactiondelay(from.lastactiondelay());
    }
  }
  if (from._has_bits_[25 / 32] & (0xffu << (25 % 32))) {
    if (from.has_removewhenbecontrolled()) {
      set_removewhenbecontrolled(from.removewhenbecontrolled());
    }
    if (from.has_needremovelastnonpermanenteffect()) {
      set_needremovelastnonpermanenteffect(from.needremovelastnonpermanenteffect());
    }
    if (from.has_removewhenshapeshifted()) {
      set_removewhenshapeshifted(from.removewhenshapeshifted());
    }
    if (from.has_becleanlevel()) {
      set_becleanlevel(from.becleanlevel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffBaseDataModel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffBaseDataModel::CopyFrom(const BuffBaseDataModel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffBaseDataModel::IsInitialized() const {

  return true;
}

void BuffBaseDataModel::Swap(BuffBaseDataModel* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(labelid_, other->labelid_);
    std::swap(hitrate_, other->hitrate_);
    std::swap(maintype_, other->maintype_);
    std::swap(subtype_, other->subtype_);
    std::swap(lasttime_, other->lasttime_);
    std::swap(lasttimegrowth_, other->lasttimegrowth_);
    std::swap(purgetype_, other->purgetype_);
    purgebuffarr_.Swap(&other->purgebuffarr_);
    std::swap(overlytype_, other->overlytype_);
    std::swap(maxoverlynum_, other->maxoverlynum_);
    std::swap(iconpath_, other->iconpath_);
    std::swap(starteffectname_, other->starteffectname_);
    std::swap(starteffectparent_, other->starteffectparent_);
    std::swap(lasteffectparent_, other->lasteffectparent_);
    std::swap(endeffectname_, other->endeffectname_);
    std::swap(endeffectparent_, other->endeffectparent_);
    std::swap(specialshader_, other->specialshader_);
    std::swap(generalshader_, other->generalshader_);
    std::swap(lastingaction_, other->lastingaction_);
    lasteffectarr_.Swap(&other->lasteffectarr_);
    std::swap(lastactiondelay_, other->lastactiondelay_);
    starteffect_.Swap(&other->starteffect_);
    lasteffect_.Swap(&other->lasteffect_);
    endeffect_.Swap(&other->endeffect_);
    std::swap(removewhenbecontrolled_, other->removewhenbecontrolled_);
    std::swap(needremovelastnonpermanenteffect_, other->needremovelastnonpermanenteffect_);
    subtypearr_.Swap(&other->subtypearr_);
    std::swap(removewhenshapeshifted_, other->removewhenshapeshifted_);
    std::swap(becleanlevel_, other->becleanlevel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffBaseDataModel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffBaseDataModel_descriptor_;
  metadata.reflection = BuffBaseDataModel_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
