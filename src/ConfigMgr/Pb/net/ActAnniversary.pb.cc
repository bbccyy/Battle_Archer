// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActAnniversary.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActAnniversary.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActAnniversaryGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActAnniversaryGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActAnniversaryReceiveGiftReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActAnniversaryReceiveGiftReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ESignState_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActAnniversary_2eproto() {
  protobuf_AddDesc_net_2fActAnniversary_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActAnniversary.proto");
  GOOGLE_CHECK(file != NULL);
  TActAnniversaryGetInfoRsp_descriptor_ = file->message_type(0);
  static const int TActAnniversaryGetInfoRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryGetInfoRsp, points_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryGetInfoRsp, signstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryGetInfoRsp, giftidarr_),
  };
  TActAnniversaryGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActAnniversaryGetInfoRsp_descriptor_,
      TActAnniversaryGetInfoRsp::default_instance_,
      TActAnniversaryGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActAnniversaryGetInfoRsp));
  TActAnniversaryReceiveGiftReq_descriptor_ = file->message_type(1);
  static const int TActAnniversaryReceiveGiftReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryReceiveGiftReq, giftid_),
  };
  TActAnniversaryReceiveGiftReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActAnniversaryReceiveGiftReq_descriptor_,
      TActAnniversaryReceiveGiftReq::default_instance_,
      TActAnniversaryReceiveGiftReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryReceiveGiftReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActAnniversaryReceiveGiftReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActAnniversaryReceiveGiftReq));
  ESignState_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActAnniversary_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActAnniversaryGetInfoRsp_descriptor_, &TActAnniversaryGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActAnniversaryReceiveGiftReq_descriptor_, &TActAnniversaryReceiveGiftReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActAnniversary_2eproto() {
  delete TActAnniversaryGetInfoRsp::default_instance_;
  delete TActAnniversaryGetInfoRsp_reflection_;
  delete TActAnniversaryReceiveGiftReq::default_instance_;
  delete TActAnniversaryReceiveGiftReq_reflection_;
}

void protobuf_AddDesc_net_2fActAnniversary_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030net/ActAnniversary.proto\022\002pb\"a\n\031TActAn"
    "niversaryGetInfoRsp\022\016\n\006Points\030\001 \001(\r\022!\n\tS"
    "ignState\030\002 \001(\0162\016.pb.ESignState\022\021\n\tGiftId"
    "Arr\030\003 \003(\r\"/\n\035TActAnniversaryReceiveGiftR"
    "eq\022\016\n\006GiftId\030\001 \001(\r*\'\n\nESignState\022\014\n\010ENot"
    "Sign\020\001\022\013\n\007ESigned\020\002", 219);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActAnniversary.proto", &protobuf_RegisterTypes);
  TActAnniversaryGetInfoRsp::default_instance_ = new TActAnniversaryGetInfoRsp();
  TActAnniversaryReceiveGiftReq::default_instance_ = new TActAnniversaryReceiveGiftReq();
  TActAnniversaryGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TActAnniversaryReceiveGiftReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActAnniversary_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActAnniversary_2eproto {
  StaticDescriptorInitializer_net_2fActAnniversary_2eproto() {
    protobuf_AddDesc_net_2fActAnniversary_2eproto();
  }
} static_descriptor_initializer_net_2fActAnniversary_2eproto_;
const ::google::protobuf::EnumDescriptor* ESignState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ESignState_descriptor_;
}
bool ESignState_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TActAnniversaryGetInfoRsp::kPointsFieldNumber;
const int TActAnniversaryGetInfoRsp::kSignStateFieldNumber;
const int TActAnniversaryGetInfoRsp::kGiftIdArrFieldNumber;
#endif  // !_MSC_VER

TActAnniversaryGetInfoRsp::TActAnniversaryGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActAnniversaryGetInfoRsp)
}

void TActAnniversaryGetInfoRsp::InitAsDefaultInstance() {
}

TActAnniversaryGetInfoRsp::TActAnniversaryGetInfoRsp(const TActAnniversaryGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActAnniversaryGetInfoRsp)
}

void TActAnniversaryGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  points_ = 0u;
  signstate_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActAnniversaryGetInfoRsp::~TActAnniversaryGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActAnniversaryGetInfoRsp)
  SharedDtor();
}

void TActAnniversaryGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActAnniversaryGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActAnniversaryGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActAnniversaryGetInfoRsp_descriptor_;
}

const TActAnniversaryGetInfoRsp& TActAnniversaryGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActAnniversary_2eproto();
  return *default_instance_;
}

TActAnniversaryGetInfoRsp* TActAnniversaryGetInfoRsp::default_instance_ = NULL;

TActAnniversaryGetInfoRsp* TActAnniversaryGetInfoRsp::New() const {
  return new TActAnniversaryGetInfoRsp;
}

void TActAnniversaryGetInfoRsp::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    points_ = 0u;
    signstate_ = 1;
  }
  giftidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActAnniversaryGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActAnniversaryGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Points = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &points_)));
          set_has_points();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SignState;
        break;
      }

      // optional .pb.ESignState SignState = 2;
      case 2: {
        if (tag == 16) {
         parse_SignState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::ESignState_IsValid(value)) {
            set_signstate(static_cast< ::pb::ESignState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_GiftIdArr;
        break;
      }

      // repeated uint32 GiftIdArr = 3;
      case 3: {
        if (tag == 24) {
         parse_GiftIdArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_giftidarr())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_giftidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_GiftIdArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActAnniversaryGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActAnniversaryGetInfoRsp)
  return false;
#undef DO_
}

void TActAnniversaryGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActAnniversaryGetInfoRsp)
  // optional uint32 Points = 1;
  if (has_points()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->points(), output);
  }

  // optional .pb.ESignState SignState = 2;
  if (has_signstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->signstate(), output);
  }

  // repeated uint32 GiftIdArr = 3;
  for (int i = 0; i < this->giftidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->giftidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActAnniversaryGetInfoRsp)
}

::google::protobuf::uint8* TActAnniversaryGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActAnniversaryGetInfoRsp)
  // optional uint32 Points = 1;
  if (has_points()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->points(), target);
  }

  // optional .pb.ESignState SignState = 2;
  if (has_signstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->signstate(), target);
  }

  // repeated uint32 GiftIdArr = 3;
  for (int i = 0; i < this->giftidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->giftidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActAnniversaryGetInfoRsp)
  return target;
}

int TActAnniversaryGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Points = 1;
    if (has_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->points());
    }

    // optional .pb.ESignState SignState = 2;
    if (has_signstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->signstate());
    }

  }
  // repeated uint32 GiftIdArr = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->giftidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->giftidarr(i));
    }
    total_size += 1 * this->giftidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActAnniversaryGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActAnniversaryGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActAnniversaryGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActAnniversaryGetInfoRsp::MergeFrom(const TActAnniversaryGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  giftidarr_.MergeFrom(from.giftidarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_points()) {
      set_points(from.points());
    }
    if (from.has_signstate()) {
      set_signstate(from.signstate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActAnniversaryGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActAnniversaryGetInfoRsp::CopyFrom(const TActAnniversaryGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActAnniversaryGetInfoRsp::IsInitialized() const {

  return true;
}

void TActAnniversaryGetInfoRsp::Swap(TActAnniversaryGetInfoRsp* other) {
  if (other != this) {
    std::swap(points_, other->points_);
    std::swap(signstate_, other->signstate_);
    giftidarr_.Swap(&other->giftidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActAnniversaryGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActAnniversaryGetInfoRsp_descriptor_;
  metadata.reflection = TActAnniversaryGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActAnniversaryReceiveGiftReq::kGiftIdFieldNumber;
#endif  // !_MSC_VER

TActAnniversaryReceiveGiftReq::TActAnniversaryReceiveGiftReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActAnniversaryReceiveGiftReq)
}

void TActAnniversaryReceiveGiftReq::InitAsDefaultInstance() {
}

TActAnniversaryReceiveGiftReq::TActAnniversaryReceiveGiftReq(const TActAnniversaryReceiveGiftReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActAnniversaryReceiveGiftReq)
}

void TActAnniversaryReceiveGiftReq::SharedCtor() {
  _cached_size_ = 0;
  giftid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActAnniversaryReceiveGiftReq::~TActAnniversaryReceiveGiftReq() {
  // @@protoc_insertion_point(destructor:pb.TActAnniversaryReceiveGiftReq)
  SharedDtor();
}

void TActAnniversaryReceiveGiftReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActAnniversaryReceiveGiftReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActAnniversaryReceiveGiftReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActAnniversaryReceiveGiftReq_descriptor_;
}

const TActAnniversaryReceiveGiftReq& TActAnniversaryReceiveGiftReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActAnniversary_2eproto();
  return *default_instance_;
}

TActAnniversaryReceiveGiftReq* TActAnniversaryReceiveGiftReq::default_instance_ = NULL;

TActAnniversaryReceiveGiftReq* TActAnniversaryReceiveGiftReq::New() const {
  return new TActAnniversaryReceiveGiftReq;
}

void TActAnniversaryReceiveGiftReq::Clear() {
  giftid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActAnniversaryReceiveGiftReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActAnniversaryReceiveGiftReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GiftId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giftid_)));
          set_has_giftid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActAnniversaryReceiveGiftReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActAnniversaryReceiveGiftReq)
  return false;
#undef DO_
}

void TActAnniversaryReceiveGiftReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActAnniversaryReceiveGiftReq)
  // optional uint32 GiftId = 1;
  if (has_giftid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->giftid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActAnniversaryReceiveGiftReq)
}

::google::protobuf::uint8* TActAnniversaryReceiveGiftReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActAnniversaryReceiveGiftReq)
  // optional uint32 GiftId = 1;
  if (has_giftid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->giftid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActAnniversaryReceiveGiftReq)
  return target;
}

int TActAnniversaryReceiveGiftReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GiftId = 1;
    if (has_giftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->giftid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActAnniversaryReceiveGiftReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActAnniversaryReceiveGiftReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActAnniversaryReceiveGiftReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActAnniversaryReceiveGiftReq::MergeFrom(const TActAnniversaryReceiveGiftReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_giftid()) {
      set_giftid(from.giftid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActAnniversaryReceiveGiftReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActAnniversaryReceiveGiftReq::CopyFrom(const TActAnniversaryReceiveGiftReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActAnniversaryReceiveGiftReq::IsInitialized() const {

  return true;
}

void TActAnniversaryReceiveGiftReq::Swap(TActAnniversaryReceiveGiftReq* other) {
  if (other != this) {
    std::swap(giftid_, other->giftid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActAnniversaryReceiveGiftReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActAnniversaryReceiveGiftReq_descriptor_;
  metadata.reflection = TActAnniversaryReceiveGiftReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
