// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/SlgGuild.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/SlgGuild.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TSlgGuildSyncReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildSyncReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgGuildGetInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildGetInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgGuildGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgGuildMemberInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildMemberInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgGuildGetMemberListRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildGetMemberListRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgGuildModifySummaryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildModifySummaryReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgGuildResInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildResInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgGuildTechnology_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildTechnology_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgGuildUpgradeTechnologyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildUpgradeTechnologyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgGuildGroupInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildGroupInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgGuildGetGroupInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildGetGroupInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgGuildModifyGroupNameReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildModifyGroupNameReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgGuildModifyGroupMemberReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildModifyGroupMemberReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSlgGuildUpdateOurGuildNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSlgGuildUpdateOurGuildNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fSlgGuild_2eproto() {
  protobuf_AddDesc_net_2fSlgGuild_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/SlgGuild.proto");
  GOOGLE_CHECK(file != NULL);
  TSlgGuildSyncReq_descriptor_ = file->message_type(0);
  static const int TSlgGuildSyncReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildSyncReq, memberarr_),
  };
  TSlgGuildSyncReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildSyncReq_descriptor_,
      TSlgGuildSyncReq::default_instance_,
      TSlgGuildSyncReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildSyncReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildSyncReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildSyncReq));
  TSlgGuildGetInfoReq_descriptor_ = file->message_type(1);
  static const int TSlgGuildGetInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetInfoReq, memuidarr_),
  };
  TSlgGuildGetInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildGetInfoReq_descriptor_,
      TSlgGuildGetInfoReq::default_instance_,
      TSlgGuildGetInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildGetInfoReq));
  TSlgGuildGetInfoRsp_descriptor_ = file->message_type(2);
  static const int TSlgGuildGetInfoRsp_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetInfoRsp, valkyrieuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetInfoRsp, adviseruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetInfoRsp, warpower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetInfoRsp, summary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetInfoRsp, technologyarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetInfoRsp, grouparr_),
  };
  TSlgGuildGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildGetInfoRsp_descriptor_,
      TSlgGuildGetInfoRsp::default_instance_,
      TSlgGuildGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildGetInfoRsp));
  TSlgGuildMemberInfo_descriptor_ = file->message_type(3);
  static const int TSlgGuildMemberInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildMemberInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildMemberInfo, contribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildMemberInfo, weekcontribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildMemberInfo, fightnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildMemberInfo, weekfightnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildMemberInfo, warpower_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildMemberInfo, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildMemberInfo, y_),
  };
  TSlgGuildMemberInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildMemberInfo_descriptor_,
      TSlgGuildMemberInfo::default_instance_,
      TSlgGuildMemberInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildMemberInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildMemberInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildMemberInfo));
  TSlgGuildGetMemberListRsp_descriptor_ = file->message_type(4);
  static const int TSlgGuildGetMemberListRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetMemberListRsp, memberarr_),
  };
  TSlgGuildGetMemberListRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildGetMemberListRsp_descriptor_,
      TSlgGuildGetMemberListRsp::default_instance_,
      TSlgGuildGetMemberListRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetMemberListRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetMemberListRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildGetMemberListRsp));
  TSlgGuildModifySummaryReq_descriptor_ = file->message_type(5);
  static const int TSlgGuildModifySummaryReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildModifySummaryReq, slgsummary_),
  };
  TSlgGuildModifySummaryReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildModifySummaryReq_descriptor_,
      TSlgGuildModifySummaryReq::default_instance_,
      TSlgGuildModifySummaryReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildModifySummaryReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildModifySummaryReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildModifySummaryReq));
  TSlgGuildResInfo_descriptor_ = file->message_type(6);
  static const int TSlgGuildResInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildResInfo, restype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildResInfo, resnum_),
  };
  TSlgGuildResInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildResInfo_descriptor_,
      TSlgGuildResInfo::default_instance_,
      TSlgGuildResInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildResInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildResInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildResInfo));
  TSlgGuildTechnology_descriptor_ = file->message_type(7);
  static const int TSlgGuildTechnology_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildTechnology, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildTechnology, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildTechnology, resarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildTechnology, upgradetime_),
  };
  TSlgGuildTechnology_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildTechnology_descriptor_,
      TSlgGuildTechnology::default_instance_,
      TSlgGuildTechnology_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildTechnology, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildTechnology, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildTechnology));
  TSlgGuildUpgradeTechnologyReq_descriptor_ = file->message_type(8);
  static const int TSlgGuildUpgradeTechnologyReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildUpgradeTechnologyReq, techtid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildUpgradeTechnologyReq, resarr_),
  };
  TSlgGuildUpgradeTechnologyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildUpgradeTechnologyReq_descriptor_,
      TSlgGuildUpgradeTechnologyReq::default_instance_,
      TSlgGuildUpgradeTechnologyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildUpgradeTechnologyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildUpgradeTechnologyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildUpgradeTechnologyReq));
  TSlgGuildGroupInfo_descriptor_ = file->message_type(9);
  static const int TSlgGuildGroupInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGroupInfo, groupindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGroupInfo, groupname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGroupInfo, memberarr_),
  };
  TSlgGuildGroupInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildGroupInfo_descriptor_,
      TSlgGuildGroupInfo::default_instance_,
      TSlgGuildGroupInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGroupInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGroupInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildGroupInfo));
  TSlgGuildGetGroupInfoRsp_descriptor_ = file->message_type(10);
  static const int TSlgGuildGetGroupInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetGroupInfoRsp, grouparr_),
  };
  TSlgGuildGetGroupInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildGetGroupInfoRsp_descriptor_,
      TSlgGuildGetGroupInfoRsp::default_instance_,
      TSlgGuildGetGroupInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetGroupInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildGetGroupInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildGetGroupInfoRsp));
  TSlgGuildModifyGroupNameReq_descriptor_ = file->message_type(11);
  static const int TSlgGuildModifyGroupNameReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildModifyGroupNameReq, groupindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildModifyGroupNameReq, groupname_),
  };
  TSlgGuildModifyGroupNameReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildModifyGroupNameReq_descriptor_,
      TSlgGuildModifyGroupNameReq::default_instance_,
      TSlgGuildModifyGroupNameReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildModifyGroupNameReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildModifyGroupNameReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildModifyGroupNameReq));
  TSlgGuildModifyGroupMemberReq_descriptor_ = file->message_type(12);
  static const int TSlgGuildModifyGroupMemberReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildModifyGroupMemberReq, groupindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildModifyGroupMemberReq, adduidarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildModifyGroupMemberReq, removeuidarr_),
  };
  TSlgGuildModifyGroupMemberReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildModifyGroupMemberReq_descriptor_,
      TSlgGuildModifyGroupMemberReq::default_instance_,
      TSlgGuildModifyGroupMemberReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildModifyGroupMemberReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildModifyGroupMemberReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildModifyGroupMemberReq));
  TSlgGuildUpdateOurGuildNotify_descriptor_ = file->message_type(13);
  static const int TSlgGuildUpdateOurGuildNotify_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildUpdateOurGuildNotify, technologyarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildUpdateOurGuildNotify, grouparr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildUpdateOurGuildNotify, slgsummary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildUpdateOurGuildNotify, valkyrieuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildUpdateOurGuildNotify, adviseruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildUpdateOurGuildNotify, membernum_),
  };
  TSlgGuildUpdateOurGuildNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSlgGuildUpdateOurGuildNotify_descriptor_,
      TSlgGuildUpdateOurGuildNotify::default_instance_,
      TSlgGuildUpdateOurGuildNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildUpdateOurGuildNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSlgGuildUpdateOurGuildNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSlgGuildUpdateOurGuildNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fSlgGuild_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildSyncReq_descriptor_, &TSlgGuildSyncReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildGetInfoReq_descriptor_, &TSlgGuildGetInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildGetInfoRsp_descriptor_, &TSlgGuildGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildMemberInfo_descriptor_, &TSlgGuildMemberInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildGetMemberListRsp_descriptor_, &TSlgGuildGetMemberListRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildModifySummaryReq_descriptor_, &TSlgGuildModifySummaryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildResInfo_descriptor_, &TSlgGuildResInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildTechnology_descriptor_, &TSlgGuildTechnology::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildUpgradeTechnologyReq_descriptor_, &TSlgGuildUpgradeTechnologyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildGroupInfo_descriptor_, &TSlgGuildGroupInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildGetGroupInfoRsp_descriptor_, &TSlgGuildGetGroupInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildModifyGroupNameReq_descriptor_, &TSlgGuildModifyGroupNameReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildModifyGroupMemberReq_descriptor_, &TSlgGuildModifyGroupMemberReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSlgGuildUpdateOurGuildNotify_descriptor_, &TSlgGuildUpdateOurGuildNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fSlgGuild_2eproto() {
  delete TSlgGuildSyncReq::default_instance_;
  delete TSlgGuildSyncReq_reflection_;
  delete TSlgGuildGetInfoReq::default_instance_;
  delete TSlgGuildGetInfoReq_reflection_;
  delete TSlgGuildGetInfoRsp::default_instance_;
  delete TSlgGuildGetInfoRsp_reflection_;
  delete TSlgGuildMemberInfo::default_instance_;
  delete TSlgGuildMemberInfo_reflection_;
  delete TSlgGuildGetMemberListRsp::default_instance_;
  delete TSlgGuildGetMemberListRsp_reflection_;
  delete TSlgGuildModifySummaryReq::default_instance_;
  delete TSlgGuildModifySummaryReq_reflection_;
  delete TSlgGuildResInfo::default_instance_;
  delete TSlgGuildResInfo_reflection_;
  delete TSlgGuildTechnology::default_instance_;
  delete TSlgGuildTechnology_reflection_;
  delete TSlgGuildUpgradeTechnologyReq::default_instance_;
  delete TSlgGuildUpgradeTechnologyReq_reflection_;
  delete TSlgGuildGroupInfo::default_instance_;
  delete TSlgGuildGroupInfo_reflection_;
  delete TSlgGuildGetGroupInfoRsp::default_instance_;
  delete TSlgGuildGetGroupInfoRsp_reflection_;
  delete TSlgGuildModifyGroupNameReq::default_instance_;
  delete TSlgGuildModifyGroupNameReq_reflection_;
  delete TSlgGuildModifyGroupMemberReq::default_instance_;
  delete TSlgGuildModifyGroupMemberReq_reflection_;
  delete TSlgGuildUpdateOurGuildNotify::default_instance_;
  delete TSlgGuildUpdateOurGuildNotify_reflection_;
}

void protobuf_AddDesc_net_2fSlgGuild_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fGuild_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022net/SlgGuild.proto\022\002pb\032\017net/Guild.prot"
    "o\">\n\020TSlgGuildSyncReq\022*\n\tMemberArr\030\001 \003(\013"
    "2\027.pb.TSlgGuildSyncMember\"(\n\023TSlgGuildGe"
    "tInfoReq\022\021\n\tMemUidArr\030\001 \003(\004\"\273\001\n\023TSlgGuil"
    "dGetInfoRsp\022\023\n\013ValkyrieUid\030\001 \001(\004\022\022\n\nAdvi"
    "serUid\030\002 \001(\004\022\020\n\010WarPower\030\003 \001(\004\022\017\n\007Summar"
    "y\030\004 \001(\t\022.\n\rTechnologyArr\030\005 \003(\0132\027.pb.TSlg"
    "GuildTechnology\022(\n\010GroupArr\030\006 \003(\0132\026.pb.T"
    "SlgGuildGroupInfo\"\236\001\n\023TSlgGuildMemberInf"
    "o\022\013\n\003Uid\030\001 \001(\004\022\022\n\nContribute\030\002 \001(\r\022\026\n\016We"
    "ekContribute\030\003 \001(\r\022\020\n\010FightNum\030\004 \001(\r\022\024\n\014"
    "WeekFightNum\030\005 \001(\r\022\020\n\010WarPower\030\006 \001(\r\022\t\n\001"
    "X\030\007 \001(\005\022\t\n\001Y\030\010 \001(\005\"G\n\031TSlgGuildGetMember"
    "ListRsp\022*\n\tMemberArr\030\001 \003(\0132\027.pb.TSlgGuil"
    "dMemberInfo\"/\n\031TSlgGuildModifySummaryReq"
    "\022\022\n\nSlgSummary\030\001 \001(\t\"3\n\020TSlgGuildResInfo"
    "\022\017\n\007ResType\030\001 \001(\r\022\016\n\006ResNum\030\002 \001(\r\"l\n\023TSl"
    "gGuildTechnology\022\013\n\003Tid\030\001 \001(\r\022\r\n\005Level\030\002"
    " \001(\r\022$\n\006ResArr\030\003 \003(\0132\024.pb.TSlgGuildResIn"
    "fo\022\023\n\013UpgradeTime\030\004 \001(\004\"V\n\035TSlgGuildUpgr"
    "adeTechnologyReq\022\017\n\007TechTid\030\001 \001(\r\022$\n\006Res"
    "Arr\030\002 \003(\0132\024.pb.TSlgGuildResInfo\"N\n\022TSlgG"
    "uildGroupInfo\022\022\n\nGroupIndex\030\001 \001(\r\022\021\n\tGro"
    "upName\030\002 \001(\t\022\021\n\tMemberArr\030\003 \003(\004\"D\n\030TSlgG"
    "uildGetGroupInfoRsp\022(\n\010GroupArr\030\001 \003(\0132\026."
    "pb.TSlgGuildGroupInfo\"D\n\033TSlgGuildModify"
    "GroupNameReq\022\022\n\nGroupIndex\030\001 \001(\r\022\021\n\tGrou"
    "pName\030\002 \001(\t\"\\\n\035TSlgGuildModifyGroupMembe"
    "rReq\022\022\n\nGroupIndex\030\001 \001(\r\022\021\n\tAddUidArr\030\002 "
    "\003(\004\022\024\n\014RemoveUidArr\030\003 \003(\004\"\311\001\n\035TSlgGuildU"
    "pdateOurGuildNotify\022.\n\rTechnologyArr\030\001 \003"
    "(\0132\027.pb.TSlgGuildTechnology\022(\n\010GroupArr\030"
    "\002 \003(\0132\026.pb.TSlgGuildGroupInfo\022\022\n\nSlgSumm"
    "ary\030\003 \001(\t\022\023\n\013ValkyrieUid\030\004 \001(\004\022\022\n\nAdvise"
    "rUid\030\005 \001(\004\022\021\n\tMemberNum\030\006 \001(\r", 1389);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/SlgGuild.proto", &protobuf_RegisterTypes);
  TSlgGuildSyncReq::default_instance_ = new TSlgGuildSyncReq();
  TSlgGuildGetInfoReq::default_instance_ = new TSlgGuildGetInfoReq();
  TSlgGuildGetInfoRsp::default_instance_ = new TSlgGuildGetInfoRsp();
  TSlgGuildMemberInfo::default_instance_ = new TSlgGuildMemberInfo();
  TSlgGuildGetMemberListRsp::default_instance_ = new TSlgGuildGetMemberListRsp();
  TSlgGuildModifySummaryReq::default_instance_ = new TSlgGuildModifySummaryReq();
  TSlgGuildResInfo::default_instance_ = new TSlgGuildResInfo();
  TSlgGuildTechnology::default_instance_ = new TSlgGuildTechnology();
  TSlgGuildUpgradeTechnologyReq::default_instance_ = new TSlgGuildUpgradeTechnologyReq();
  TSlgGuildGroupInfo::default_instance_ = new TSlgGuildGroupInfo();
  TSlgGuildGetGroupInfoRsp::default_instance_ = new TSlgGuildGetGroupInfoRsp();
  TSlgGuildModifyGroupNameReq::default_instance_ = new TSlgGuildModifyGroupNameReq();
  TSlgGuildModifyGroupMemberReq::default_instance_ = new TSlgGuildModifyGroupMemberReq();
  TSlgGuildUpdateOurGuildNotify::default_instance_ = new TSlgGuildUpdateOurGuildNotify();
  TSlgGuildSyncReq::default_instance_->InitAsDefaultInstance();
  TSlgGuildGetInfoReq::default_instance_->InitAsDefaultInstance();
  TSlgGuildGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TSlgGuildMemberInfo::default_instance_->InitAsDefaultInstance();
  TSlgGuildGetMemberListRsp::default_instance_->InitAsDefaultInstance();
  TSlgGuildModifySummaryReq::default_instance_->InitAsDefaultInstance();
  TSlgGuildResInfo::default_instance_->InitAsDefaultInstance();
  TSlgGuildTechnology::default_instance_->InitAsDefaultInstance();
  TSlgGuildUpgradeTechnologyReq::default_instance_->InitAsDefaultInstance();
  TSlgGuildGroupInfo::default_instance_->InitAsDefaultInstance();
  TSlgGuildGetGroupInfoRsp::default_instance_->InitAsDefaultInstance();
  TSlgGuildModifyGroupNameReq::default_instance_->InitAsDefaultInstance();
  TSlgGuildModifyGroupMemberReq::default_instance_->InitAsDefaultInstance();
  TSlgGuildUpdateOurGuildNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fSlgGuild_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fSlgGuild_2eproto {
  StaticDescriptorInitializer_net_2fSlgGuild_2eproto() {
    protobuf_AddDesc_net_2fSlgGuild_2eproto();
  }
} static_descriptor_initializer_net_2fSlgGuild_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildSyncReq::kMemberArrFieldNumber;
#endif  // !_MSC_VER

TSlgGuildSyncReq::TSlgGuildSyncReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildSyncReq)
}

void TSlgGuildSyncReq::InitAsDefaultInstance() {
}

TSlgGuildSyncReq::TSlgGuildSyncReq(const TSlgGuildSyncReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildSyncReq)
}

void TSlgGuildSyncReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildSyncReq::~TSlgGuildSyncReq() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildSyncReq)
  SharedDtor();
}

void TSlgGuildSyncReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgGuildSyncReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildSyncReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildSyncReq_descriptor_;
}

const TSlgGuildSyncReq& TSlgGuildSyncReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildSyncReq* TSlgGuildSyncReq::default_instance_ = NULL;

TSlgGuildSyncReq* TSlgGuildSyncReq::New() const {
  return new TSlgGuildSyncReq;
}

void TSlgGuildSyncReq::Clear() {
  memberarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildSyncReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildSyncReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TSlgGuildSyncMember MemberArr = 1;
      case 1: {
        if (tag == 10) {
         parse_MemberArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_memberarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_MemberArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildSyncReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildSyncReq)
  return false;
#undef DO_
}

void TSlgGuildSyncReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildSyncReq)
  // repeated .pb.TSlgGuildSyncMember MemberArr = 1;
  for (int i = 0; i < this->memberarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->memberarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildSyncReq)
}

::google::protobuf::uint8* TSlgGuildSyncReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildSyncReq)
  // repeated .pb.TSlgGuildSyncMember MemberArr = 1;
  for (int i = 0; i < this->memberarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->memberarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildSyncReq)
  return target;
}

int TSlgGuildSyncReq::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TSlgGuildSyncMember MemberArr = 1;
  total_size += 1 * this->memberarr_size();
  for (int i = 0; i < this->memberarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->memberarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildSyncReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildSyncReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildSyncReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildSyncReq::MergeFrom(const TSlgGuildSyncReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  memberarr_.MergeFrom(from.memberarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildSyncReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildSyncReq::CopyFrom(const TSlgGuildSyncReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildSyncReq::IsInitialized() const {

  return true;
}

void TSlgGuildSyncReq::Swap(TSlgGuildSyncReq* other) {
  if (other != this) {
    memberarr_.Swap(&other->memberarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildSyncReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildSyncReq_descriptor_;
  metadata.reflection = TSlgGuildSyncReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildGetInfoReq::kMemUidArrFieldNumber;
#endif  // !_MSC_VER

TSlgGuildGetInfoReq::TSlgGuildGetInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildGetInfoReq)
}

void TSlgGuildGetInfoReq::InitAsDefaultInstance() {
}

TSlgGuildGetInfoReq::TSlgGuildGetInfoReq(const TSlgGuildGetInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildGetInfoReq)
}

void TSlgGuildGetInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildGetInfoReq::~TSlgGuildGetInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildGetInfoReq)
  SharedDtor();
}

void TSlgGuildGetInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgGuildGetInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildGetInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildGetInfoReq_descriptor_;
}

const TSlgGuildGetInfoReq& TSlgGuildGetInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildGetInfoReq* TSlgGuildGetInfoReq::default_instance_ = NULL;

TSlgGuildGetInfoReq* TSlgGuildGetInfoReq::New() const {
  return new TSlgGuildGetInfoReq;
}

void TSlgGuildGetInfoReq::Clear() {
  memuidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildGetInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildGetInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 MemUidArr = 1;
      case 1: {
        if (tag == 8) {
         parse_MemUidArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_memuidarr())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_memuidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_MemUidArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildGetInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildGetInfoReq)
  return false;
#undef DO_
}

void TSlgGuildGetInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildGetInfoReq)
  // repeated uint64 MemUidArr = 1;
  for (int i = 0; i < this->memuidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->memuidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildGetInfoReq)
}

::google::protobuf::uint8* TSlgGuildGetInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildGetInfoReq)
  // repeated uint64 MemUidArr = 1;
  for (int i = 0; i < this->memuidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->memuidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildGetInfoReq)
  return target;
}

int TSlgGuildGetInfoReq::ByteSize() const {
  int total_size = 0;

  // repeated uint64 MemUidArr = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->memuidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->memuidarr(i));
    }
    total_size += 1 * this->memuidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildGetInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildGetInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildGetInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildGetInfoReq::MergeFrom(const TSlgGuildGetInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  memuidarr_.MergeFrom(from.memuidarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildGetInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildGetInfoReq::CopyFrom(const TSlgGuildGetInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildGetInfoReq::IsInitialized() const {

  return true;
}

void TSlgGuildGetInfoReq::Swap(TSlgGuildGetInfoReq* other) {
  if (other != this) {
    memuidarr_.Swap(&other->memuidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildGetInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildGetInfoReq_descriptor_;
  metadata.reflection = TSlgGuildGetInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildGetInfoRsp::kValkyrieUidFieldNumber;
const int TSlgGuildGetInfoRsp::kAdviserUidFieldNumber;
const int TSlgGuildGetInfoRsp::kWarPowerFieldNumber;
const int TSlgGuildGetInfoRsp::kSummaryFieldNumber;
const int TSlgGuildGetInfoRsp::kTechnologyArrFieldNumber;
const int TSlgGuildGetInfoRsp::kGroupArrFieldNumber;
#endif  // !_MSC_VER

TSlgGuildGetInfoRsp::TSlgGuildGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildGetInfoRsp)
}

void TSlgGuildGetInfoRsp::InitAsDefaultInstance() {
}

TSlgGuildGetInfoRsp::TSlgGuildGetInfoRsp(const TSlgGuildGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildGetInfoRsp)
}

void TSlgGuildGetInfoRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  valkyrieuid_ = GOOGLE_ULONGLONG(0);
  adviseruid_ = GOOGLE_ULONGLONG(0);
  warpower_ = GOOGLE_ULONGLONG(0);
  summary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildGetInfoRsp::~TSlgGuildGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildGetInfoRsp)
  SharedDtor();
}

void TSlgGuildGetInfoRsp::SharedDtor() {
  if (summary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete summary_;
  }
  if (this != default_instance_) {
  }
}

void TSlgGuildGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildGetInfoRsp_descriptor_;
}

const TSlgGuildGetInfoRsp& TSlgGuildGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildGetInfoRsp* TSlgGuildGetInfoRsp::default_instance_ = NULL;

TSlgGuildGetInfoRsp* TSlgGuildGetInfoRsp::New() const {
  return new TSlgGuildGetInfoRsp;
}

void TSlgGuildGetInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TSlgGuildGetInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(valkyrieuid_, warpower_);
    if (has_summary()) {
      if (summary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        summary_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  technologyarr_.Clear();
  grouparr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 ValkyrieUid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &valkyrieuid_)));
          set_has_valkyrieuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AdviserUid;
        break;
      }

      // optional uint64 AdviserUid = 2;
      case 2: {
        if (tag == 16) {
         parse_AdviserUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &adviseruid_)));
          set_has_adviseruid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_WarPower;
        break;
      }

      // optional uint64 WarPower = 3;
      case 3: {
        if (tag == 24) {
         parse_WarPower:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &warpower_)));
          set_has_warpower();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Summary;
        break;
      }

      // optional string Summary = 4;
      case 4: {
        if (tag == 34) {
         parse_Summary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_summary()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->summary().data(), this->summary().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "summary");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_TechnologyArr;
        break;
      }

      // repeated .pb.TSlgGuildTechnology TechnologyArr = 5;
      case 5: {
        if (tag == 42) {
         parse_TechnologyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_technologyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_TechnologyArr;
        if (input->ExpectTag(50)) goto parse_GroupArr;
        break;
      }

      // repeated .pb.TSlgGuildGroupInfo GroupArr = 6;
      case 6: {
        if (tag == 50) {
         parse_GroupArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_grouparr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_GroupArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildGetInfoRsp)
  return false;
#undef DO_
}

void TSlgGuildGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildGetInfoRsp)
  // optional uint64 ValkyrieUid = 1;
  if (has_valkyrieuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->valkyrieuid(), output);
  }

  // optional uint64 AdviserUid = 2;
  if (has_adviseruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->adviseruid(), output);
  }

  // optional uint64 WarPower = 3;
  if (has_warpower()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->warpower(), output);
  }

  // optional string Summary = 4;
  if (has_summary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->summary().data(), this->summary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "summary");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->summary(), output);
  }

  // repeated .pb.TSlgGuildTechnology TechnologyArr = 5;
  for (int i = 0; i < this->technologyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->technologyarr(i), output);
  }

  // repeated .pb.TSlgGuildGroupInfo GroupArr = 6;
  for (int i = 0; i < this->grouparr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->grouparr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildGetInfoRsp)
}

::google::protobuf::uint8* TSlgGuildGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildGetInfoRsp)
  // optional uint64 ValkyrieUid = 1;
  if (has_valkyrieuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->valkyrieuid(), target);
  }

  // optional uint64 AdviserUid = 2;
  if (has_adviseruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->adviseruid(), target);
  }

  // optional uint64 WarPower = 3;
  if (has_warpower()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->warpower(), target);
  }

  // optional string Summary = 4;
  if (has_summary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->summary().data(), this->summary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "summary");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->summary(), target);
  }

  // repeated .pb.TSlgGuildTechnology TechnologyArr = 5;
  for (int i = 0; i < this->technologyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->technologyarr(i), target);
  }

  // repeated .pb.TSlgGuildGroupInfo GroupArr = 6;
  for (int i = 0; i < this->grouparr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->grouparr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildGetInfoRsp)
  return target;
}

int TSlgGuildGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 ValkyrieUid = 1;
    if (has_valkyrieuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->valkyrieuid());
    }

    // optional uint64 AdviserUid = 2;
    if (has_adviseruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->adviseruid());
    }

    // optional uint64 WarPower = 3;
    if (has_warpower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->warpower());
    }

    // optional string Summary = 4;
    if (has_summary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->summary());
    }

  }
  // repeated .pb.TSlgGuildTechnology TechnologyArr = 5;
  total_size += 1 * this->technologyarr_size();
  for (int i = 0; i < this->technologyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->technologyarr(i));
  }

  // repeated .pb.TSlgGuildGroupInfo GroupArr = 6;
  total_size += 1 * this->grouparr_size();
  for (int i = 0; i < this->grouparr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->grouparr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildGetInfoRsp::MergeFrom(const TSlgGuildGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  technologyarr_.MergeFrom(from.technologyarr_);
  grouparr_.MergeFrom(from.grouparr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_valkyrieuid()) {
      set_valkyrieuid(from.valkyrieuid());
    }
    if (from.has_adviseruid()) {
      set_adviseruid(from.adviseruid());
    }
    if (from.has_warpower()) {
      set_warpower(from.warpower());
    }
    if (from.has_summary()) {
      set_summary(from.summary());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildGetInfoRsp::CopyFrom(const TSlgGuildGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildGetInfoRsp::IsInitialized() const {

  return true;
}

void TSlgGuildGetInfoRsp::Swap(TSlgGuildGetInfoRsp* other) {
  if (other != this) {
    std::swap(valkyrieuid_, other->valkyrieuid_);
    std::swap(adviseruid_, other->adviseruid_);
    std::swap(warpower_, other->warpower_);
    std::swap(summary_, other->summary_);
    technologyarr_.Swap(&other->technologyarr_);
    grouparr_.Swap(&other->grouparr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildGetInfoRsp_descriptor_;
  metadata.reflection = TSlgGuildGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildMemberInfo::kUidFieldNumber;
const int TSlgGuildMemberInfo::kContributeFieldNumber;
const int TSlgGuildMemberInfo::kWeekContributeFieldNumber;
const int TSlgGuildMemberInfo::kFightNumFieldNumber;
const int TSlgGuildMemberInfo::kWeekFightNumFieldNumber;
const int TSlgGuildMemberInfo::kWarPowerFieldNumber;
const int TSlgGuildMemberInfo::kXFieldNumber;
const int TSlgGuildMemberInfo::kYFieldNumber;
#endif  // !_MSC_VER

TSlgGuildMemberInfo::TSlgGuildMemberInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildMemberInfo)
}

void TSlgGuildMemberInfo::InitAsDefaultInstance() {
}

TSlgGuildMemberInfo::TSlgGuildMemberInfo(const TSlgGuildMemberInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildMemberInfo)
}

void TSlgGuildMemberInfo::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  contribute_ = 0u;
  weekcontribute_ = 0u;
  fightnum_ = 0u;
  weekfightnum_ = 0u;
  warpower_ = 0u;
  x_ = 0;
  y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildMemberInfo::~TSlgGuildMemberInfo() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildMemberInfo)
  SharedDtor();
}

void TSlgGuildMemberInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgGuildMemberInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildMemberInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildMemberInfo_descriptor_;
}

const TSlgGuildMemberInfo& TSlgGuildMemberInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildMemberInfo* TSlgGuildMemberInfo::default_instance_ = NULL;

TSlgGuildMemberInfo* TSlgGuildMemberInfo::New() const {
  return new TSlgGuildMemberInfo;
}

void TSlgGuildMemberInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TSlgGuildMemberInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(uid_, y_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildMemberInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildMemberInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Contribute;
        break;
      }

      // optional uint32 Contribute = 2;
      case 2: {
        if (tag == 16) {
         parse_Contribute:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contribute_)));
          set_has_contribute();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_WeekContribute;
        break;
      }

      // optional uint32 WeekContribute = 3;
      case 3: {
        if (tag == 24) {
         parse_WeekContribute:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weekcontribute_)));
          set_has_weekcontribute();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_FightNum;
        break;
      }

      // optional uint32 FightNum = 4;
      case 4: {
        if (tag == 32) {
         parse_FightNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fightnum_)));
          set_has_fightnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_WeekFightNum;
        break;
      }

      // optional uint32 WeekFightNum = 5;
      case 5: {
        if (tag == 40) {
         parse_WeekFightNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weekfightnum_)));
          set_has_weekfightnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_WarPower;
        break;
      }

      // optional uint32 WarPower = 6;
      case 6: {
        if (tag == 48) {
         parse_WarPower:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &warpower_)));
          set_has_warpower();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_X;
        break;
      }

      // optional int32 X = 7;
      case 7: {
        if (tag == 56) {
         parse_X:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Y;
        break;
      }

      // optional int32 Y = 8;
      case 8: {
        if (tag == 64) {
         parse_Y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildMemberInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildMemberInfo)
  return false;
#undef DO_
}

void TSlgGuildMemberInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildMemberInfo)
  // optional uint64 Uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // optional uint32 Contribute = 2;
  if (has_contribute()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->contribute(), output);
  }

  // optional uint32 WeekContribute = 3;
  if (has_weekcontribute()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->weekcontribute(), output);
  }

  // optional uint32 FightNum = 4;
  if (has_fightnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->fightnum(), output);
  }

  // optional uint32 WeekFightNum = 5;
  if (has_weekfightnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->weekfightnum(), output);
  }

  // optional uint32 WarPower = 6;
  if (has_warpower()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->warpower(), output);
  }

  // optional int32 X = 7;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->x(), output);
  }

  // optional int32 Y = 8;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildMemberInfo)
}

::google::protobuf::uint8* TSlgGuildMemberInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildMemberInfo)
  // optional uint64 Uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // optional uint32 Contribute = 2;
  if (has_contribute()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->contribute(), target);
  }

  // optional uint32 WeekContribute = 3;
  if (has_weekcontribute()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->weekcontribute(), target);
  }

  // optional uint32 FightNum = 4;
  if (has_fightnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->fightnum(), target);
  }

  // optional uint32 WeekFightNum = 5;
  if (has_weekfightnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->weekfightnum(), target);
  }

  // optional uint32 WarPower = 6;
  if (has_warpower()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->warpower(), target);
  }

  // optional int32 X = 7;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->x(), target);
  }

  // optional int32 Y = 8;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildMemberInfo)
  return target;
}

int TSlgGuildMemberInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional uint32 Contribute = 2;
    if (has_contribute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->contribute());
    }

    // optional uint32 WeekContribute = 3;
    if (has_weekcontribute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->weekcontribute());
    }

    // optional uint32 FightNum = 4;
    if (has_fightnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fightnum());
    }

    // optional uint32 WeekFightNum = 5;
    if (has_weekfightnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->weekfightnum());
    }

    // optional uint32 WarPower = 6;
    if (has_warpower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->warpower());
    }

    // optional int32 X = 7;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 Y = 8;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildMemberInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildMemberInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildMemberInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildMemberInfo::MergeFrom(const TSlgGuildMemberInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_contribute()) {
      set_contribute(from.contribute());
    }
    if (from.has_weekcontribute()) {
      set_weekcontribute(from.weekcontribute());
    }
    if (from.has_fightnum()) {
      set_fightnum(from.fightnum());
    }
    if (from.has_weekfightnum()) {
      set_weekfightnum(from.weekfightnum());
    }
    if (from.has_warpower()) {
      set_warpower(from.warpower());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildMemberInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildMemberInfo::CopyFrom(const TSlgGuildMemberInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildMemberInfo::IsInitialized() const {

  return true;
}

void TSlgGuildMemberInfo::Swap(TSlgGuildMemberInfo* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(contribute_, other->contribute_);
    std::swap(weekcontribute_, other->weekcontribute_);
    std::swap(fightnum_, other->fightnum_);
    std::swap(weekfightnum_, other->weekfightnum_);
    std::swap(warpower_, other->warpower_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildMemberInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildMemberInfo_descriptor_;
  metadata.reflection = TSlgGuildMemberInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildGetMemberListRsp::kMemberArrFieldNumber;
#endif  // !_MSC_VER

TSlgGuildGetMemberListRsp::TSlgGuildGetMemberListRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildGetMemberListRsp)
}

void TSlgGuildGetMemberListRsp::InitAsDefaultInstance() {
}

TSlgGuildGetMemberListRsp::TSlgGuildGetMemberListRsp(const TSlgGuildGetMemberListRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildGetMemberListRsp)
}

void TSlgGuildGetMemberListRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildGetMemberListRsp::~TSlgGuildGetMemberListRsp() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildGetMemberListRsp)
  SharedDtor();
}

void TSlgGuildGetMemberListRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgGuildGetMemberListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildGetMemberListRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildGetMemberListRsp_descriptor_;
}

const TSlgGuildGetMemberListRsp& TSlgGuildGetMemberListRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildGetMemberListRsp* TSlgGuildGetMemberListRsp::default_instance_ = NULL;

TSlgGuildGetMemberListRsp* TSlgGuildGetMemberListRsp::New() const {
  return new TSlgGuildGetMemberListRsp;
}

void TSlgGuildGetMemberListRsp::Clear() {
  memberarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildGetMemberListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildGetMemberListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TSlgGuildMemberInfo MemberArr = 1;
      case 1: {
        if (tag == 10) {
         parse_MemberArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_memberarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_MemberArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildGetMemberListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildGetMemberListRsp)
  return false;
#undef DO_
}

void TSlgGuildGetMemberListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildGetMemberListRsp)
  // repeated .pb.TSlgGuildMemberInfo MemberArr = 1;
  for (int i = 0; i < this->memberarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->memberarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildGetMemberListRsp)
}

::google::protobuf::uint8* TSlgGuildGetMemberListRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildGetMemberListRsp)
  // repeated .pb.TSlgGuildMemberInfo MemberArr = 1;
  for (int i = 0; i < this->memberarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->memberarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildGetMemberListRsp)
  return target;
}

int TSlgGuildGetMemberListRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TSlgGuildMemberInfo MemberArr = 1;
  total_size += 1 * this->memberarr_size();
  for (int i = 0; i < this->memberarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->memberarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildGetMemberListRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildGetMemberListRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildGetMemberListRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildGetMemberListRsp::MergeFrom(const TSlgGuildGetMemberListRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  memberarr_.MergeFrom(from.memberarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildGetMemberListRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildGetMemberListRsp::CopyFrom(const TSlgGuildGetMemberListRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildGetMemberListRsp::IsInitialized() const {

  return true;
}

void TSlgGuildGetMemberListRsp::Swap(TSlgGuildGetMemberListRsp* other) {
  if (other != this) {
    memberarr_.Swap(&other->memberarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildGetMemberListRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildGetMemberListRsp_descriptor_;
  metadata.reflection = TSlgGuildGetMemberListRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildModifySummaryReq::kSlgSummaryFieldNumber;
#endif  // !_MSC_VER

TSlgGuildModifySummaryReq::TSlgGuildModifySummaryReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildModifySummaryReq)
}

void TSlgGuildModifySummaryReq::InitAsDefaultInstance() {
}

TSlgGuildModifySummaryReq::TSlgGuildModifySummaryReq(const TSlgGuildModifySummaryReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildModifySummaryReq)
}

void TSlgGuildModifySummaryReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  slgsummary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildModifySummaryReq::~TSlgGuildModifySummaryReq() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildModifySummaryReq)
  SharedDtor();
}

void TSlgGuildModifySummaryReq::SharedDtor() {
  if (slgsummary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete slgsummary_;
  }
  if (this != default_instance_) {
  }
}

void TSlgGuildModifySummaryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildModifySummaryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildModifySummaryReq_descriptor_;
}

const TSlgGuildModifySummaryReq& TSlgGuildModifySummaryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildModifySummaryReq* TSlgGuildModifySummaryReq::default_instance_ = NULL;

TSlgGuildModifySummaryReq* TSlgGuildModifySummaryReq::New() const {
  return new TSlgGuildModifySummaryReq;
}

void TSlgGuildModifySummaryReq::Clear() {
  if (has_slgsummary()) {
    if (slgsummary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      slgsummary_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildModifySummaryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildModifySummaryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string SlgSummary = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slgsummary()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->slgsummary().data(), this->slgsummary().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "slgsummary");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildModifySummaryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildModifySummaryReq)
  return false;
#undef DO_
}

void TSlgGuildModifySummaryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildModifySummaryReq)
  // optional string SlgSummary = 1;
  if (has_slgsummary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slgsummary().data(), this->slgsummary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "slgsummary");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->slgsummary(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildModifySummaryReq)
}

::google::protobuf::uint8* TSlgGuildModifySummaryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildModifySummaryReq)
  // optional string SlgSummary = 1;
  if (has_slgsummary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slgsummary().data(), this->slgsummary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "slgsummary");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->slgsummary(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildModifySummaryReq)
  return target;
}

int TSlgGuildModifySummaryReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string SlgSummary = 1;
    if (has_slgsummary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->slgsummary());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildModifySummaryReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildModifySummaryReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildModifySummaryReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildModifySummaryReq::MergeFrom(const TSlgGuildModifySummaryReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slgsummary()) {
      set_slgsummary(from.slgsummary());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildModifySummaryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildModifySummaryReq::CopyFrom(const TSlgGuildModifySummaryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildModifySummaryReq::IsInitialized() const {

  return true;
}

void TSlgGuildModifySummaryReq::Swap(TSlgGuildModifySummaryReq* other) {
  if (other != this) {
    std::swap(slgsummary_, other->slgsummary_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildModifySummaryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildModifySummaryReq_descriptor_;
  metadata.reflection = TSlgGuildModifySummaryReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildResInfo::kResTypeFieldNumber;
const int TSlgGuildResInfo::kResNumFieldNumber;
#endif  // !_MSC_VER

TSlgGuildResInfo::TSlgGuildResInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildResInfo)
}

void TSlgGuildResInfo::InitAsDefaultInstance() {
}

TSlgGuildResInfo::TSlgGuildResInfo(const TSlgGuildResInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildResInfo)
}

void TSlgGuildResInfo::SharedCtor() {
  _cached_size_ = 0;
  restype_ = 0u;
  resnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildResInfo::~TSlgGuildResInfo() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildResInfo)
  SharedDtor();
}

void TSlgGuildResInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgGuildResInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildResInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildResInfo_descriptor_;
}

const TSlgGuildResInfo& TSlgGuildResInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildResInfo* TSlgGuildResInfo::default_instance_ = NULL;

TSlgGuildResInfo* TSlgGuildResInfo::New() const {
  return new TSlgGuildResInfo;
}

void TSlgGuildResInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TSlgGuildResInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(restype_, resnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildResInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildResInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ResType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &restype_)));
          set_has_restype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ResNum;
        break;
      }

      // optional uint32 ResNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ResNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resnum_)));
          set_has_resnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildResInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildResInfo)
  return false;
#undef DO_
}

void TSlgGuildResInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildResInfo)
  // optional uint32 ResType = 1;
  if (has_restype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->restype(), output);
  }

  // optional uint32 ResNum = 2;
  if (has_resnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->resnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildResInfo)
}

::google::protobuf::uint8* TSlgGuildResInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildResInfo)
  // optional uint32 ResType = 1;
  if (has_restype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->restype(), target);
  }

  // optional uint32 ResNum = 2;
  if (has_resnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->resnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildResInfo)
  return target;
}

int TSlgGuildResInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ResType = 1;
    if (has_restype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->restype());
    }

    // optional uint32 ResNum = 2;
    if (has_resnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->resnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildResInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildResInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildResInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildResInfo::MergeFrom(const TSlgGuildResInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_restype()) {
      set_restype(from.restype());
    }
    if (from.has_resnum()) {
      set_resnum(from.resnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildResInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildResInfo::CopyFrom(const TSlgGuildResInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildResInfo::IsInitialized() const {

  return true;
}

void TSlgGuildResInfo::Swap(TSlgGuildResInfo* other) {
  if (other != this) {
    std::swap(restype_, other->restype_);
    std::swap(resnum_, other->resnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildResInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildResInfo_descriptor_;
  metadata.reflection = TSlgGuildResInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildTechnology::kTidFieldNumber;
const int TSlgGuildTechnology::kLevelFieldNumber;
const int TSlgGuildTechnology::kResArrFieldNumber;
const int TSlgGuildTechnology::kUpgradeTimeFieldNumber;
#endif  // !_MSC_VER

TSlgGuildTechnology::TSlgGuildTechnology()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildTechnology)
}

void TSlgGuildTechnology::InitAsDefaultInstance() {
}

TSlgGuildTechnology::TSlgGuildTechnology(const TSlgGuildTechnology& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildTechnology)
}

void TSlgGuildTechnology::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  level_ = 0u;
  upgradetime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildTechnology::~TSlgGuildTechnology() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildTechnology)
  SharedDtor();
}

void TSlgGuildTechnology::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgGuildTechnology::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildTechnology::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildTechnology_descriptor_;
}

const TSlgGuildTechnology& TSlgGuildTechnology::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildTechnology* TSlgGuildTechnology::default_instance_ = NULL;

TSlgGuildTechnology* TSlgGuildTechnology::New() const {
  return new TSlgGuildTechnology;
}

void TSlgGuildTechnology::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TSlgGuildTechnology*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 11) {
    ZR_(tid_, level_);
    upgradetime_ = GOOGLE_ULONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  resarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildTechnology::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildTechnology)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 2;
      case 2: {
        if (tag == 16) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ResArr;
        break;
      }

      // repeated .pb.TSlgGuildResInfo ResArr = 3;
      case 3: {
        if (tag == 26) {
         parse_ResArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ResArr;
        if (input->ExpectTag(32)) goto parse_UpgradeTime;
        break;
      }

      // optional uint64 UpgradeTime = 4;
      case 4: {
        if (tag == 32) {
         parse_UpgradeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &upgradetime_)));
          set_has_upgradetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildTechnology)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildTechnology)
  return false;
#undef DO_
}

void TSlgGuildTechnology::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildTechnology)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 Level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // repeated .pb.TSlgGuildResInfo ResArr = 3;
  for (int i = 0; i < this->resarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->resarr(i), output);
  }

  // optional uint64 UpgradeTime = 4;
  if (has_upgradetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->upgradetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildTechnology)
}

::google::protobuf::uint8* TSlgGuildTechnology::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildTechnology)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 Level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // repeated .pb.TSlgGuildResInfo ResArr = 3;
  for (int i = 0; i < this->resarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->resarr(i), target);
  }

  // optional uint64 UpgradeTime = 4;
  if (has_upgradetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->upgradetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildTechnology)
  return target;
}

int TSlgGuildTechnology::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 Level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint64 UpgradeTime = 4;
    if (has_upgradetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->upgradetime());
    }

  }
  // repeated .pb.TSlgGuildResInfo ResArr = 3;
  total_size += 1 * this->resarr_size();
  for (int i = 0; i < this->resarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildTechnology::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildTechnology* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildTechnology*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildTechnology::MergeFrom(const TSlgGuildTechnology& from) {
  GOOGLE_CHECK_NE(&from, this);
  resarr_.MergeFrom(from.resarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_upgradetime()) {
      set_upgradetime(from.upgradetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildTechnology::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildTechnology::CopyFrom(const TSlgGuildTechnology& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildTechnology::IsInitialized() const {

  return true;
}

void TSlgGuildTechnology::Swap(TSlgGuildTechnology* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(level_, other->level_);
    resarr_.Swap(&other->resarr_);
    std::swap(upgradetime_, other->upgradetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildTechnology::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildTechnology_descriptor_;
  metadata.reflection = TSlgGuildTechnology_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildUpgradeTechnologyReq::kTechTidFieldNumber;
const int TSlgGuildUpgradeTechnologyReq::kResArrFieldNumber;
#endif  // !_MSC_VER

TSlgGuildUpgradeTechnologyReq::TSlgGuildUpgradeTechnologyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildUpgradeTechnologyReq)
}

void TSlgGuildUpgradeTechnologyReq::InitAsDefaultInstance() {
}

TSlgGuildUpgradeTechnologyReq::TSlgGuildUpgradeTechnologyReq(const TSlgGuildUpgradeTechnologyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildUpgradeTechnologyReq)
}

void TSlgGuildUpgradeTechnologyReq::SharedCtor() {
  _cached_size_ = 0;
  techtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildUpgradeTechnologyReq::~TSlgGuildUpgradeTechnologyReq() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildUpgradeTechnologyReq)
  SharedDtor();
}

void TSlgGuildUpgradeTechnologyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgGuildUpgradeTechnologyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildUpgradeTechnologyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildUpgradeTechnologyReq_descriptor_;
}

const TSlgGuildUpgradeTechnologyReq& TSlgGuildUpgradeTechnologyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildUpgradeTechnologyReq* TSlgGuildUpgradeTechnologyReq::default_instance_ = NULL;

TSlgGuildUpgradeTechnologyReq* TSlgGuildUpgradeTechnologyReq::New() const {
  return new TSlgGuildUpgradeTechnologyReq;
}

void TSlgGuildUpgradeTechnologyReq::Clear() {
  techtid_ = 0u;
  resarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildUpgradeTechnologyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildUpgradeTechnologyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TechTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &techtid_)));
          set_has_techtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ResArr;
        break;
      }

      // repeated .pb.TSlgGuildResInfo ResArr = 2;
      case 2: {
        if (tag == 18) {
         parse_ResArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ResArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildUpgradeTechnologyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildUpgradeTechnologyReq)
  return false;
#undef DO_
}

void TSlgGuildUpgradeTechnologyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildUpgradeTechnologyReq)
  // optional uint32 TechTid = 1;
  if (has_techtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->techtid(), output);
  }

  // repeated .pb.TSlgGuildResInfo ResArr = 2;
  for (int i = 0; i < this->resarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildUpgradeTechnologyReq)
}

::google::protobuf::uint8* TSlgGuildUpgradeTechnologyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildUpgradeTechnologyReq)
  // optional uint32 TechTid = 1;
  if (has_techtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->techtid(), target);
  }

  // repeated .pb.TSlgGuildResInfo ResArr = 2;
  for (int i = 0; i < this->resarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->resarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildUpgradeTechnologyReq)
  return target;
}

int TSlgGuildUpgradeTechnologyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TechTid = 1;
    if (has_techtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->techtid());
    }

  }
  // repeated .pb.TSlgGuildResInfo ResArr = 2;
  total_size += 1 * this->resarr_size();
  for (int i = 0; i < this->resarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildUpgradeTechnologyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildUpgradeTechnologyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildUpgradeTechnologyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildUpgradeTechnologyReq::MergeFrom(const TSlgGuildUpgradeTechnologyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  resarr_.MergeFrom(from.resarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_techtid()) {
      set_techtid(from.techtid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildUpgradeTechnologyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildUpgradeTechnologyReq::CopyFrom(const TSlgGuildUpgradeTechnologyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildUpgradeTechnologyReq::IsInitialized() const {

  return true;
}

void TSlgGuildUpgradeTechnologyReq::Swap(TSlgGuildUpgradeTechnologyReq* other) {
  if (other != this) {
    std::swap(techtid_, other->techtid_);
    resarr_.Swap(&other->resarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildUpgradeTechnologyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildUpgradeTechnologyReq_descriptor_;
  metadata.reflection = TSlgGuildUpgradeTechnologyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildGroupInfo::kGroupIndexFieldNumber;
const int TSlgGuildGroupInfo::kGroupNameFieldNumber;
const int TSlgGuildGroupInfo::kMemberArrFieldNumber;
#endif  // !_MSC_VER

TSlgGuildGroupInfo::TSlgGuildGroupInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildGroupInfo)
}

void TSlgGuildGroupInfo::InitAsDefaultInstance() {
}

TSlgGuildGroupInfo::TSlgGuildGroupInfo(const TSlgGuildGroupInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildGroupInfo)
}

void TSlgGuildGroupInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  groupindex_ = 0u;
  groupname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildGroupInfo::~TSlgGuildGroupInfo() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildGroupInfo)
  SharedDtor();
}

void TSlgGuildGroupInfo::SharedDtor() {
  if (groupname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete groupname_;
  }
  if (this != default_instance_) {
  }
}

void TSlgGuildGroupInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildGroupInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildGroupInfo_descriptor_;
}

const TSlgGuildGroupInfo& TSlgGuildGroupInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildGroupInfo* TSlgGuildGroupInfo::default_instance_ = NULL;

TSlgGuildGroupInfo* TSlgGuildGroupInfo::New() const {
  return new TSlgGuildGroupInfo;
}

void TSlgGuildGroupInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    groupindex_ = 0u;
    if (has_groupname()) {
      if (groupname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        groupname_->clear();
      }
    }
  }
  memberarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildGroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildGroupInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GroupIndex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupindex_)));
          set_has_groupindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_GroupName;
        break;
      }

      // optional string GroupName = 2;
      case 2: {
        if (tag == 18) {
         parse_GroupName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->groupname().data(), this->groupname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "groupname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MemberArr;
        break;
      }

      // repeated uint64 MemberArr = 3;
      case 3: {
        if (tag == 24) {
         parse_MemberArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_memberarr())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_memberarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MemberArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildGroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildGroupInfo)
  return false;
#undef DO_
}

void TSlgGuildGroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildGroupInfo)
  // optional uint32 GroupIndex = 1;
  if (has_groupindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupindex(), output);
  }

  // optional string GroupName = 2;
  if (has_groupname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "groupname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupname(), output);
  }

  // repeated uint64 MemberArr = 3;
  for (int i = 0; i < this->memberarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->memberarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildGroupInfo)
}

::google::protobuf::uint8* TSlgGuildGroupInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildGroupInfo)
  // optional uint32 GroupIndex = 1;
  if (has_groupindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupindex(), target);
  }

  // optional string GroupName = 2;
  if (has_groupname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "groupname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->groupname(), target);
  }

  // repeated uint64 MemberArr = 3;
  for (int i = 0; i < this->memberarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->memberarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildGroupInfo)
  return target;
}

int TSlgGuildGroupInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GroupIndex = 1;
    if (has_groupindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->groupindex());
    }

    // optional string GroupName = 2;
    if (has_groupname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->groupname());
    }

  }
  // repeated uint64 MemberArr = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->memberarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->memberarr(i));
    }
    total_size += 1 * this->memberarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildGroupInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildGroupInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildGroupInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildGroupInfo::MergeFrom(const TSlgGuildGroupInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  memberarr_.MergeFrom(from.memberarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_groupindex()) {
      set_groupindex(from.groupindex());
    }
    if (from.has_groupname()) {
      set_groupname(from.groupname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildGroupInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildGroupInfo::CopyFrom(const TSlgGuildGroupInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildGroupInfo::IsInitialized() const {

  return true;
}

void TSlgGuildGroupInfo::Swap(TSlgGuildGroupInfo* other) {
  if (other != this) {
    std::swap(groupindex_, other->groupindex_);
    std::swap(groupname_, other->groupname_);
    memberarr_.Swap(&other->memberarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildGroupInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildGroupInfo_descriptor_;
  metadata.reflection = TSlgGuildGroupInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildGetGroupInfoRsp::kGroupArrFieldNumber;
#endif  // !_MSC_VER

TSlgGuildGetGroupInfoRsp::TSlgGuildGetGroupInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildGetGroupInfoRsp)
}

void TSlgGuildGetGroupInfoRsp::InitAsDefaultInstance() {
}

TSlgGuildGetGroupInfoRsp::TSlgGuildGetGroupInfoRsp(const TSlgGuildGetGroupInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildGetGroupInfoRsp)
}

void TSlgGuildGetGroupInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildGetGroupInfoRsp::~TSlgGuildGetGroupInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildGetGroupInfoRsp)
  SharedDtor();
}

void TSlgGuildGetGroupInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgGuildGetGroupInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildGetGroupInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildGetGroupInfoRsp_descriptor_;
}

const TSlgGuildGetGroupInfoRsp& TSlgGuildGetGroupInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildGetGroupInfoRsp* TSlgGuildGetGroupInfoRsp::default_instance_ = NULL;

TSlgGuildGetGroupInfoRsp* TSlgGuildGetGroupInfoRsp::New() const {
  return new TSlgGuildGetGroupInfoRsp;
}

void TSlgGuildGetGroupInfoRsp::Clear() {
  grouparr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildGetGroupInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildGetGroupInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TSlgGuildGroupInfo GroupArr = 1;
      case 1: {
        if (tag == 10) {
         parse_GroupArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_grouparr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_GroupArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildGetGroupInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildGetGroupInfoRsp)
  return false;
#undef DO_
}

void TSlgGuildGetGroupInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildGetGroupInfoRsp)
  // repeated .pb.TSlgGuildGroupInfo GroupArr = 1;
  for (int i = 0; i < this->grouparr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->grouparr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildGetGroupInfoRsp)
}

::google::protobuf::uint8* TSlgGuildGetGroupInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildGetGroupInfoRsp)
  // repeated .pb.TSlgGuildGroupInfo GroupArr = 1;
  for (int i = 0; i < this->grouparr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->grouparr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildGetGroupInfoRsp)
  return target;
}

int TSlgGuildGetGroupInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TSlgGuildGroupInfo GroupArr = 1;
  total_size += 1 * this->grouparr_size();
  for (int i = 0; i < this->grouparr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->grouparr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildGetGroupInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildGetGroupInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildGetGroupInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildGetGroupInfoRsp::MergeFrom(const TSlgGuildGetGroupInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  grouparr_.MergeFrom(from.grouparr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildGetGroupInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildGetGroupInfoRsp::CopyFrom(const TSlgGuildGetGroupInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildGetGroupInfoRsp::IsInitialized() const {

  return true;
}

void TSlgGuildGetGroupInfoRsp::Swap(TSlgGuildGetGroupInfoRsp* other) {
  if (other != this) {
    grouparr_.Swap(&other->grouparr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildGetGroupInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildGetGroupInfoRsp_descriptor_;
  metadata.reflection = TSlgGuildGetGroupInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildModifyGroupNameReq::kGroupIndexFieldNumber;
const int TSlgGuildModifyGroupNameReq::kGroupNameFieldNumber;
#endif  // !_MSC_VER

TSlgGuildModifyGroupNameReq::TSlgGuildModifyGroupNameReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildModifyGroupNameReq)
}

void TSlgGuildModifyGroupNameReq::InitAsDefaultInstance() {
}

TSlgGuildModifyGroupNameReq::TSlgGuildModifyGroupNameReq(const TSlgGuildModifyGroupNameReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildModifyGroupNameReq)
}

void TSlgGuildModifyGroupNameReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  groupindex_ = 0u;
  groupname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildModifyGroupNameReq::~TSlgGuildModifyGroupNameReq() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildModifyGroupNameReq)
  SharedDtor();
}

void TSlgGuildModifyGroupNameReq::SharedDtor() {
  if (groupname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete groupname_;
  }
  if (this != default_instance_) {
  }
}

void TSlgGuildModifyGroupNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildModifyGroupNameReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildModifyGroupNameReq_descriptor_;
}

const TSlgGuildModifyGroupNameReq& TSlgGuildModifyGroupNameReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildModifyGroupNameReq* TSlgGuildModifyGroupNameReq::default_instance_ = NULL;

TSlgGuildModifyGroupNameReq* TSlgGuildModifyGroupNameReq::New() const {
  return new TSlgGuildModifyGroupNameReq;
}

void TSlgGuildModifyGroupNameReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    groupindex_ = 0u;
    if (has_groupname()) {
      if (groupname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        groupname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildModifyGroupNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildModifyGroupNameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GroupIndex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupindex_)));
          set_has_groupindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_GroupName;
        break;
      }

      // optional string GroupName = 2;
      case 2: {
        if (tag == 18) {
         parse_GroupName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->groupname().data(), this->groupname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "groupname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildModifyGroupNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildModifyGroupNameReq)
  return false;
#undef DO_
}

void TSlgGuildModifyGroupNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildModifyGroupNameReq)
  // optional uint32 GroupIndex = 1;
  if (has_groupindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupindex(), output);
  }

  // optional string GroupName = 2;
  if (has_groupname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "groupname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildModifyGroupNameReq)
}

::google::protobuf::uint8* TSlgGuildModifyGroupNameReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildModifyGroupNameReq)
  // optional uint32 GroupIndex = 1;
  if (has_groupindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupindex(), target);
  }

  // optional string GroupName = 2;
  if (has_groupname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "groupname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->groupname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildModifyGroupNameReq)
  return target;
}

int TSlgGuildModifyGroupNameReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GroupIndex = 1;
    if (has_groupindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->groupindex());
    }

    // optional string GroupName = 2;
    if (has_groupname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->groupname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildModifyGroupNameReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildModifyGroupNameReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildModifyGroupNameReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildModifyGroupNameReq::MergeFrom(const TSlgGuildModifyGroupNameReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_groupindex()) {
      set_groupindex(from.groupindex());
    }
    if (from.has_groupname()) {
      set_groupname(from.groupname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildModifyGroupNameReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildModifyGroupNameReq::CopyFrom(const TSlgGuildModifyGroupNameReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildModifyGroupNameReq::IsInitialized() const {

  return true;
}

void TSlgGuildModifyGroupNameReq::Swap(TSlgGuildModifyGroupNameReq* other) {
  if (other != this) {
    std::swap(groupindex_, other->groupindex_);
    std::swap(groupname_, other->groupname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildModifyGroupNameReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildModifyGroupNameReq_descriptor_;
  metadata.reflection = TSlgGuildModifyGroupNameReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildModifyGroupMemberReq::kGroupIndexFieldNumber;
const int TSlgGuildModifyGroupMemberReq::kAddUidArrFieldNumber;
const int TSlgGuildModifyGroupMemberReq::kRemoveUidArrFieldNumber;
#endif  // !_MSC_VER

TSlgGuildModifyGroupMemberReq::TSlgGuildModifyGroupMemberReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildModifyGroupMemberReq)
}

void TSlgGuildModifyGroupMemberReq::InitAsDefaultInstance() {
}

TSlgGuildModifyGroupMemberReq::TSlgGuildModifyGroupMemberReq(const TSlgGuildModifyGroupMemberReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildModifyGroupMemberReq)
}

void TSlgGuildModifyGroupMemberReq::SharedCtor() {
  _cached_size_ = 0;
  groupindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildModifyGroupMemberReq::~TSlgGuildModifyGroupMemberReq() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildModifyGroupMemberReq)
  SharedDtor();
}

void TSlgGuildModifyGroupMemberReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSlgGuildModifyGroupMemberReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildModifyGroupMemberReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildModifyGroupMemberReq_descriptor_;
}

const TSlgGuildModifyGroupMemberReq& TSlgGuildModifyGroupMemberReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildModifyGroupMemberReq* TSlgGuildModifyGroupMemberReq::default_instance_ = NULL;

TSlgGuildModifyGroupMemberReq* TSlgGuildModifyGroupMemberReq::New() const {
  return new TSlgGuildModifyGroupMemberReq;
}

void TSlgGuildModifyGroupMemberReq::Clear() {
  groupindex_ = 0u;
  adduidarr_.Clear();
  removeuidarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildModifyGroupMemberReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildModifyGroupMemberReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GroupIndex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupindex_)));
          set_has_groupindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AddUidArr;
        break;
      }

      // repeated uint64 AddUidArr = 2;
      case 2: {
        if (tag == 16) {
         parse_AddUidArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_adduidarr())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_adduidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AddUidArr;
        if (input->ExpectTag(24)) goto parse_RemoveUidArr;
        break;
      }

      // repeated uint64 RemoveUidArr = 3;
      case 3: {
        if (tag == 24) {
         parse_RemoveUidArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_removeuidarr())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_removeuidarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RemoveUidArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildModifyGroupMemberReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildModifyGroupMemberReq)
  return false;
#undef DO_
}

void TSlgGuildModifyGroupMemberReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildModifyGroupMemberReq)
  // optional uint32 GroupIndex = 1;
  if (has_groupindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupindex(), output);
  }

  // repeated uint64 AddUidArr = 2;
  for (int i = 0; i < this->adduidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->adduidarr(i), output);
  }

  // repeated uint64 RemoveUidArr = 3;
  for (int i = 0; i < this->removeuidarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->removeuidarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildModifyGroupMemberReq)
}

::google::protobuf::uint8* TSlgGuildModifyGroupMemberReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildModifyGroupMemberReq)
  // optional uint32 GroupIndex = 1;
  if (has_groupindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupindex(), target);
  }

  // repeated uint64 AddUidArr = 2;
  for (int i = 0; i < this->adduidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->adduidarr(i), target);
  }

  // repeated uint64 RemoveUidArr = 3;
  for (int i = 0; i < this->removeuidarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->removeuidarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildModifyGroupMemberReq)
  return target;
}

int TSlgGuildModifyGroupMemberReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GroupIndex = 1;
    if (has_groupindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->groupindex());
    }

  }
  // repeated uint64 AddUidArr = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->adduidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->adduidarr(i));
    }
    total_size += 1 * this->adduidarr_size() + data_size;
  }

  // repeated uint64 RemoveUidArr = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->removeuidarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->removeuidarr(i));
    }
    total_size += 1 * this->removeuidarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildModifyGroupMemberReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildModifyGroupMemberReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildModifyGroupMemberReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildModifyGroupMemberReq::MergeFrom(const TSlgGuildModifyGroupMemberReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  adduidarr_.MergeFrom(from.adduidarr_);
  removeuidarr_.MergeFrom(from.removeuidarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_groupindex()) {
      set_groupindex(from.groupindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildModifyGroupMemberReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildModifyGroupMemberReq::CopyFrom(const TSlgGuildModifyGroupMemberReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildModifyGroupMemberReq::IsInitialized() const {

  return true;
}

void TSlgGuildModifyGroupMemberReq::Swap(TSlgGuildModifyGroupMemberReq* other) {
  if (other != this) {
    std::swap(groupindex_, other->groupindex_);
    adduidarr_.Swap(&other->adduidarr_);
    removeuidarr_.Swap(&other->removeuidarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildModifyGroupMemberReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildModifyGroupMemberReq_descriptor_;
  metadata.reflection = TSlgGuildModifyGroupMemberReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSlgGuildUpdateOurGuildNotify::kTechnologyArrFieldNumber;
const int TSlgGuildUpdateOurGuildNotify::kGroupArrFieldNumber;
const int TSlgGuildUpdateOurGuildNotify::kSlgSummaryFieldNumber;
const int TSlgGuildUpdateOurGuildNotify::kValkyrieUidFieldNumber;
const int TSlgGuildUpdateOurGuildNotify::kAdviserUidFieldNumber;
const int TSlgGuildUpdateOurGuildNotify::kMemberNumFieldNumber;
#endif  // !_MSC_VER

TSlgGuildUpdateOurGuildNotify::TSlgGuildUpdateOurGuildNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSlgGuildUpdateOurGuildNotify)
}

void TSlgGuildUpdateOurGuildNotify::InitAsDefaultInstance() {
}

TSlgGuildUpdateOurGuildNotify::TSlgGuildUpdateOurGuildNotify(const TSlgGuildUpdateOurGuildNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSlgGuildUpdateOurGuildNotify)
}

void TSlgGuildUpdateOurGuildNotify::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  slgsummary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valkyrieuid_ = GOOGLE_ULONGLONG(0);
  adviseruid_ = GOOGLE_ULONGLONG(0);
  membernum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSlgGuildUpdateOurGuildNotify::~TSlgGuildUpdateOurGuildNotify() {
  // @@protoc_insertion_point(destructor:pb.TSlgGuildUpdateOurGuildNotify)
  SharedDtor();
}

void TSlgGuildUpdateOurGuildNotify::SharedDtor() {
  if (slgsummary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete slgsummary_;
  }
  if (this != default_instance_) {
  }
}

void TSlgGuildUpdateOurGuildNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSlgGuildUpdateOurGuildNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSlgGuildUpdateOurGuildNotify_descriptor_;
}

const TSlgGuildUpdateOurGuildNotify& TSlgGuildUpdateOurGuildNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fSlgGuild_2eproto();
  return *default_instance_;
}

TSlgGuildUpdateOurGuildNotify* TSlgGuildUpdateOurGuildNotify::default_instance_ = NULL;

TSlgGuildUpdateOurGuildNotify* TSlgGuildUpdateOurGuildNotify::New() const {
  return new TSlgGuildUpdateOurGuildNotify;
}

void TSlgGuildUpdateOurGuildNotify::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TSlgGuildUpdateOurGuildNotify*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 60) {
    ZR_(valkyrieuid_, membernum_);
    if (has_slgsummary()) {
      if (slgsummary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        slgsummary_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  technologyarr_.Clear();
  grouparr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSlgGuildUpdateOurGuildNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSlgGuildUpdateOurGuildNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TSlgGuildTechnology TechnologyArr = 1;
      case 1: {
        if (tag == 10) {
         parse_TechnologyArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_technologyarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_TechnologyArr;
        if (input->ExpectTag(18)) goto parse_GroupArr;
        break;
      }

      // repeated .pb.TSlgGuildGroupInfo GroupArr = 2;
      case 2: {
        if (tag == 18) {
         parse_GroupArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_grouparr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_GroupArr;
        if (input->ExpectTag(26)) goto parse_SlgSummary;
        break;
      }

      // optional string SlgSummary = 3;
      case 3: {
        if (tag == 26) {
         parse_SlgSummary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slgsummary()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->slgsummary().data(), this->slgsummary().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "slgsummary");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ValkyrieUid;
        break;
      }

      // optional uint64 ValkyrieUid = 4;
      case 4: {
        if (tag == 32) {
         parse_ValkyrieUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &valkyrieuid_)));
          set_has_valkyrieuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_AdviserUid;
        break;
      }

      // optional uint64 AdviserUid = 5;
      case 5: {
        if (tag == 40) {
         parse_AdviserUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &adviseruid_)));
          set_has_adviseruid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_MemberNum;
        break;
      }

      // optional uint32 MemberNum = 6;
      case 6: {
        if (tag == 48) {
         parse_MemberNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &membernum_)));
          set_has_membernum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSlgGuildUpdateOurGuildNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSlgGuildUpdateOurGuildNotify)
  return false;
#undef DO_
}

void TSlgGuildUpdateOurGuildNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSlgGuildUpdateOurGuildNotify)
  // repeated .pb.TSlgGuildTechnology TechnologyArr = 1;
  for (int i = 0; i < this->technologyarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->technologyarr(i), output);
  }

  // repeated .pb.TSlgGuildGroupInfo GroupArr = 2;
  for (int i = 0; i < this->grouparr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->grouparr(i), output);
  }

  // optional string SlgSummary = 3;
  if (has_slgsummary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slgsummary().data(), this->slgsummary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "slgsummary");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->slgsummary(), output);
  }

  // optional uint64 ValkyrieUid = 4;
  if (has_valkyrieuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->valkyrieuid(), output);
  }

  // optional uint64 AdviserUid = 5;
  if (has_adviseruid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->adviseruid(), output);
  }

  // optional uint32 MemberNum = 6;
  if (has_membernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->membernum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSlgGuildUpdateOurGuildNotify)
}

::google::protobuf::uint8* TSlgGuildUpdateOurGuildNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSlgGuildUpdateOurGuildNotify)
  // repeated .pb.TSlgGuildTechnology TechnologyArr = 1;
  for (int i = 0; i < this->technologyarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->technologyarr(i), target);
  }

  // repeated .pb.TSlgGuildGroupInfo GroupArr = 2;
  for (int i = 0; i < this->grouparr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->grouparr(i), target);
  }

  // optional string SlgSummary = 3;
  if (has_slgsummary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slgsummary().data(), this->slgsummary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "slgsummary");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->slgsummary(), target);
  }

  // optional uint64 ValkyrieUid = 4;
  if (has_valkyrieuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->valkyrieuid(), target);
  }

  // optional uint64 AdviserUid = 5;
  if (has_adviseruid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->adviseruid(), target);
  }

  // optional uint32 MemberNum = 6;
  if (has_membernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->membernum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSlgGuildUpdateOurGuildNotify)
  return target;
}

int TSlgGuildUpdateOurGuildNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional string SlgSummary = 3;
    if (has_slgsummary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->slgsummary());
    }

    // optional uint64 ValkyrieUid = 4;
    if (has_valkyrieuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->valkyrieuid());
    }

    // optional uint64 AdviserUid = 5;
    if (has_adviseruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->adviseruid());
    }

    // optional uint32 MemberNum = 6;
    if (has_membernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->membernum());
    }

  }
  // repeated .pb.TSlgGuildTechnology TechnologyArr = 1;
  total_size += 1 * this->technologyarr_size();
  for (int i = 0; i < this->technologyarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->technologyarr(i));
  }

  // repeated .pb.TSlgGuildGroupInfo GroupArr = 2;
  total_size += 1 * this->grouparr_size();
  for (int i = 0; i < this->grouparr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->grouparr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSlgGuildUpdateOurGuildNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSlgGuildUpdateOurGuildNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSlgGuildUpdateOurGuildNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSlgGuildUpdateOurGuildNotify::MergeFrom(const TSlgGuildUpdateOurGuildNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  technologyarr_.MergeFrom(from.technologyarr_);
  grouparr_.MergeFrom(from.grouparr_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_slgsummary()) {
      set_slgsummary(from.slgsummary());
    }
    if (from.has_valkyrieuid()) {
      set_valkyrieuid(from.valkyrieuid());
    }
    if (from.has_adviseruid()) {
      set_adviseruid(from.adviseruid());
    }
    if (from.has_membernum()) {
      set_membernum(from.membernum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSlgGuildUpdateOurGuildNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSlgGuildUpdateOurGuildNotify::CopyFrom(const TSlgGuildUpdateOurGuildNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlgGuildUpdateOurGuildNotify::IsInitialized() const {

  return true;
}

void TSlgGuildUpdateOurGuildNotify::Swap(TSlgGuildUpdateOurGuildNotify* other) {
  if (other != this) {
    technologyarr_.Swap(&other->technologyarr_);
    grouparr_.Swap(&other->grouparr_);
    std::swap(slgsummary_, other->slgsummary_);
    std::swap(valkyrieuid_, other->valkyrieuid_);
    std::swap(adviseruid_, other->adviseruid_);
    std::swap(membernum_, other->membernum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSlgGuildUpdateOurGuildNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSlgGuildUpdateOurGuildNotify_descriptor_;
  metadata.reflection = TSlgGuildUpdateOurGuildNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
