// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/DInstance.proto

#ifndef PROTOBUF_net_2fDInstance_2eproto__INCLUDED
#define PROTOBUF_net_2fDInstance_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
#include "net/Battle.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fDInstance_2eproto();
void protobuf_AssignDesc_net_2fDInstance_2eproto();
void protobuf_ShutdownFile_net_2fDInstance_2eproto();

class TDInstanceChapterInfo;
class TDInstanceInfoReq;
class TDInstanceInfoRsp;
class TDInstanceDoBattleReq;
class TDInstanceDoBattleRsp;
class TDInstanceRaidStrongholdReq;
class TDInstanceRaidStrongholdRsp;
class TDInstanceReportBattleReq;
class TDInstanceReportBattleRsp;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TDInstanceChapterInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDInstanceChapterInfo : public ::google::protobuf::Message {
 public:
  TDInstanceChapterInfo();
  virtual ~TDInstanceChapterInfo();

  TDInstanceChapterInfo(const TDInstanceChapterInfo& from);

  inline TDInstanceChapterInfo& operator=(const TDInstanceChapterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDInstanceChapterInfo& default_instance();

  void Swap(TDInstanceChapterInfo* other);

  // implements Message ----------------------------------------------

  TDInstanceChapterInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDInstanceChapterInfo& from);
  void MergeFrom(const TDInstanceChapterInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ChapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceChapterInfo</name>
  	<Function>
  		<name>chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chapterid() const;
  inline void set_chapterid(::google::protobuf::uint32 value);

  // optional uint32 MaxStrongholdId = 2;
  inline bool has_maxstrongholdid() const;
  inline void clear_maxstrongholdid();
  static const int kMaxStrongholdIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceChapterInfo</name>
  	<Function>
  		<name>maxstrongholdid</name>
  		<replaceName>MaxStrongholdId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_maxstrongholdid</name>
  		<replaceName>MaxStrongholdId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_maxstrongholdid</name>
  		<replaceName>MaxStrongholdId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 maxstrongholdid() const;
  inline void set_maxstrongholdid(::google::protobuf::uint32 value);

  // optional uint32 LastStrongholdId = 3;
  inline bool has_laststrongholdid() const;
  inline void clear_laststrongholdid();
  static const int kLastStrongholdIdFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceChapterInfo</name>
  	<Function>
  		<name>laststrongholdid</name>
  		<replaceName>LastStrongholdId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_laststrongholdid</name>
  		<replaceName>LastStrongholdId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_laststrongholdid</name>
  		<replaceName>LastStrongholdId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 laststrongholdid() const;
  inline void set_laststrongholdid(::google::protobuf::uint32 value);

  // optional uint32 UsedFreeChallengeNum = 4;
  inline bool has_usedfreechallengenum() const;
  inline void clear_usedfreechallengenum();
  static const int kUsedFreeChallengeNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceChapterInfo</name>
  	<Function>
  		<name>usedfreechallengenum</name>
  		<replaceName>UsedFreeChallengeNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_usedfreechallengenum</name>
  		<replaceName>UsedFreeChallengeNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_usedfreechallengenum</name>
  		<replaceName>UsedFreeChallengeNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 usedfreechallengenum() const;
  inline void set_usedfreechallengenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDInstanceChapterInfo)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_maxstrongholdid();
  inline void clear_has_maxstrongholdid();
  inline void set_has_laststrongholdid();
  inline void clear_has_laststrongholdid();
  inline void set_has_usedfreechallengenum();
  inline void clear_has_usedfreechallengenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapterid_;
  ::google::protobuf::uint32 maxstrongholdid_;
  ::google::protobuf::uint32 laststrongholdid_;
  ::google::protobuf::uint32 usedfreechallengenum_;
  friend void  protobuf_AddDesc_net_2fDInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fDInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fDInstance_2eproto();

  void InitAsDefaultInstance();
  static TDInstanceChapterInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDInstanceInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDInstanceInfoReq : public ::google::protobuf::Message {
 public:
  TDInstanceInfoReq();
  virtual ~TDInstanceInfoReq();

  TDInstanceInfoReq(const TDInstanceInfoReq& from);

  inline TDInstanceInfoReq& operator=(const TDInstanceInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDInstanceInfoReq& default_instance();

  void Swap(TDInstanceInfoReq* other);

  // implements Message ----------------------------------------------

  TDInstanceInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDInstanceInfoReq& from);
  void MergeFrom(const TDInstanceInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.TDInstanceInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_net_2fDInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fDInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fDInstance_2eproto();

  void InitAsDefaultInstance();
  static TDInstanceInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDInstanceInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDInstanceInfoRsp : public ::google::protobuf::Message {
 public:
  TDInstanceInfoRsp();
  virtual ~TDInstanceInfoRsp();

  TDInstanceInfoRsp(const TDInstanceInfoRsp& from);

  inline TDInstanceInfoRsp& operator=(const TDInstanceInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDInstanceInfoRsp& default_instance();

  void Swap(TDInstanceInfoRsp* other);

  // implements Message ----------------------------------------------

  TDInstanceInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDInstanceInfoRsp& from);
  void MergeFrom(const TDInstanceInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TDInstanceChapterInfo ChapterInfoArray = 1;
  inline int chapterinfoarray_size() const;
  inline void clear_chapterinfoarray();
  static const int kChapterInfoArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceInfoRsp</name>
  	<Function>
  		<name>chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterinfoarray</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>chapterinfoarray_size</name>
  		<replaceName>ChapterInfoArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TDInstanceChapterInfo& chapterinfoarray(int index) const;
  inline ::pb::TDInstanceChapterInfo* mutable_chapterinfoarray(int index);
  inline ::pb::TDInstanceChapterInfo* add_chapterinfoarray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TDInstanceChapterInfo >&
      chapterinfoarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TDInstanceChapterInfo >*
      mutable_chapterinfoarray();

  // @@protoc_insertion_point(class_scope:pb.TDInstanceInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TDInstanceChapterInfo > chapterinfoarray_;
  friend void  protobuf_AddDesc_net_2fDInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fDInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fDInstance_2eproto();

  void InitAsDefaultInstance();
  static TDInstanceInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDInstanceDoBattleReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDInstanceDoBattleReq : public ::google::protobuf::Message {
 public:
  TDInstanceDoBattleReq();
  virtual ~TDInstanceDoBattleReq();

  TDInstanceDoBattleReq(const TDInstanceDoBattleReq& from);

  inline TDInstanceDoBattleReq& operator=(const TDInstanceDoBattleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDInstanceDoBattleReq& default_instance();

  void Swap(TDInstanceDoBattleReq* other);

  // implements Message ----------------------------------------------

  TDInstanceDoBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDInstanceDoBattleReq& from);
  void MergeFrom(const TDInstanceDoBattleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ChapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceDoBattleReq</name>
  	<Function>
  		<name>chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chapterid() const;
  inline void set_chapterid(::google::protobuf::uint32 value);

  // optional uint32 StrongholdId = 2;
  inline bool has_strongholdid() const;
  inline void clear_strongholdid();
  static const int kStrongholdIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceDoBattleReq</name>
  	<Function>
  		<name>strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 strongholdid() const;
  inline void set_strongholdid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDInstanceDoBattleReq)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_strongholdid();
  inline void clear_has_strongholdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapterid_;
  ::google::protobuf::uint32 strongholdid_;
  friend void  protobuf_AddDesc_net_2fDInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fDInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fDInstance_2eproto();

  void InitAsDefaultInstance();
  static TDInstanceDoBattleReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDInstanceDoBattleRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDInstanceDoBattleRsp : public ::google::protobuf::Message {
 public:
  TDInstanceDoBattleRsp();
  virtual ~TDInstanceDoBattleRsp();

  TDInstanceDoBattleRsp(const TDInstanceDoBattleRsp& from);

  inline TDInstanceDoBattleRsp& operator=(const TDInstanceDoBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDInstanceDoBattleRsp& default_instance();

  void Swap(TDInstanceDoBattleRsp* other);

  // implements Message ----------------------------------------------

  TDInstanceDoBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDInstanceDoBattleRsp& from);
  void MergeFrom(const TDInstanceDoBattleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward DropArray = 1;
  inline int droparray_size() const;
  inline void clear_droparray();
  static const int kDropArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceDoBattleRsp</name>
  	<Function>
  		<name>droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>droparray_size</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& droparray(int index) const;
  inline ::pb::TCommonReward* mutable_droparray(int index);
  inline ::pb::TCommonReward* add_droparray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      droparray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_droparray();

  // @@protoc_insertion_point(class_scope:pb.TDInstanceDoBattleRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > droparray_;
  friend void  protobuf_AddDesc_net_2fDInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fDInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fDInstance_2eproto();

  void InitAsDefaultInstance();
  static TDInstanceDoBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDInstanceRaidStrongholdReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDInstanceRaidStrongholdReq : public ::google::protobuf::Message {
 public:
  TDInstanceRaidStrongholdReq();
  virtual ~TDInstanceRaidStrongholdReq();

  TDInstanceRaidStrongholdReq(const TDInstanceRaidStrongholdReq& from);

  inline TDInstanceRaidStrongholdReq& operator=(const TDInstanceRaidStrongholdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDInstanceRaidStrongholdReq& default_instance();

  void Swap(TDInstanceRaidStrongholdReq* other);

  // implements Message ----------------------------------------------

  TDInstanceRaidStrongholdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDInstanceRaidStrongholdReq& from);
  void MergeFrom(const TDInstanceRaidStrongholdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ChapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceRaidStrongholdReq</name>
  	<Function>
  		<name>chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chapterid() const;
  inline void set_chapterid(::google::protobuf::uint32 value);

  // optional uint32 StrongholdId = 2;
  inline bool has_strongholdid() const;
  inline void clear_strongholdid();
  static const int kStrongholdIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceRaidStrongholdReq</name>
  	<Function>
  		<name>strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 strongholdid() const;
  inline void set_strongholdid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TDInstanceRaidStrongholdReq)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_strongholdid();
  inline void clear_has_strongholdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapterid_;
  ::google::protobuf::uint32 strongholdid_;
  friend void  protobuf_AddDesc_net_2fDInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fDInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fDInstance_2eproto();

  void InitAsDefaultInstance();
  static TDInstanceRaidStrongholdReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDInstanceRaidStrongholdRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDInstanceRaidStrongholdRsp : public ::google::protobuf::Message {
 public:
  TDInstanceRaidStrongholdRsp();
  virtual ~TDInstanceRaidStrongholdRsp();

  TDInstanceRaidStrongholdRsp(const TDInstanceRaidStrongholdRsp& from);

  inline TDInstanceRaidStrongholdRsp& operator=(const TDInstanceRaidStrongholdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDInstanceRaidStrongholdRsp& default_instance();

  void Swap(TDInstanceRaidStrongholdRsp* other);

  // implements Message ----------------------------------------------

  TDInstanceRaidStrongholdRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDInstanceRaidStrongholdRsp& from);
  void MergeFrom(const TDInstanceRaidStrongholdRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward DropArray = 1;
  inline int droparray_size() const;
  inline void clear_droparray();
  static const int kDropArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceRaidStrongholdRsp</name>
  	<Function>
  		<name>droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>droparray_size</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& droparray(int index) const;
  inline ::pb::TCommonReward* mutable_droparray(int index);
  inline ::pb::TCommonReward* add_droparray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      droparray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_droparray();

  // @@protoc_insertion_point(class_scope:pb.TDInstanceRaidStrongholdRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > droparray_;
  friend void  protobuf_AddDesc_net_2fDInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fDInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fDInstance_2eproto();

  void InitAsDefaultInstance();
  static TDInstanceRaidStrongholdRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDInstanceReportBattleReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDInstanceReportBattleReq : public ::google::protobuf::Message {
 public:
  TDInstanceReportBattleReq();
  virtual ~TDInstanceReportBattleReq();

  TDInstanceReportBattleReq(const TDInstanceReportBattleReq& from);

  inline TDInstanceReportBattleReq& operator=(const TDInstanceReportBattleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDInstanceReportBattleReq& default_instance();

  void Swap(TDInstanceReportBattleReq* other);

  // implements Message ----------------------------------------------

  TDInstanceReportBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDInstanceReportBattleReq& from);
  void MergeFrom(const TDInstanceReportBattleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ChapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceReportBattleReq</name>
  	<Function>
  		<name>chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_chapterid</name>
  		<replaceName>ChapterId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 chapterid() const;
  inline void set_chapterid(::google::protobuf::uint32 value);

  // optional uint32 StrongholdId = 2;
  inline bool has_strongholdid() const;
  inline void clear_strongholdid();
  static const int kStrongholdIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceReportBattleReq</name>
  	<Function>
  		<name>strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_strongholdid</name>
  		<replaceName>StrongholdId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 strongholdid() const;
  inline void set_strongholdid(::google::protobuf::uint32 value);

  // optional .pb.TBattleResult BattleRet = 3;
  inline bool has_battleret() const;
  inline void clear_battleret();
  static const int kBattleRetFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceReportBattleReq</name>
  	<Function>
  		<name>battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleret</name>
  		<replaceName>BattleRet</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBattleResult& battleret() const;
  inline ::pb::TBattleResult* mutable_battleret();
  inline ::pb::TBattleResult* release_battleret();
  inline void set_allocated_battleret(::pb::TBattleResult* battleret);

  // @@protoc_insertion_point(class_scope:pb.TDInstanceReportBattleReq)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_strongholdid();
  inline void clear_has_strongholdid();
  inline void set_has_battleret();
  inline void clear_has_battleret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapterid_;
  ::google::protobuf::uint32 strongholdid_;
  ::pb::TBattleResult* battleret_;
  friend void  protobuf_AddDesc_net_2fDInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fDInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fDInstance_2eproto();

  void InitAsDefaultInstance();
  static TDInstanceReportBattleReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TDInstanceReportBattleRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/DInstance.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDInstanceReportBattleRsp : public ::google::protobuf::Message {
 public:
  TDInstanceReportBattleRsp();
  virtual ~TDInstanceReportBattleRsp();

  TDInstanceReportBattleRsp(const TDInstanceReportBattleRsp& from);

  inline TDInstanceReportBattleRsp& operator=(const TDInstanceReportBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDInstanceReportBattleRsp& default_instance();

  void Swap(TDInstanceReportBattleRsp* other);

  // implements Message ----------------------------------------------

  TDInstanceReportBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDInstanceReportBattleRsp& from);
  void MergeFrom(const TDInstanceReportBattleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward DropArray = 1;
  inline int droparray_size() const;
  inline void clear_droparray();
  static const int kDropArrayFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDInstanceReportBattleRsp</name>
  	<Function>
  		<name>droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_droparray</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>droparray_size</name>
  		<replaceName>DropArray</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& droparray(int index) const;
  inline ::pb::TCommonReward* mutable_droparray(int index);
  inline ::pb::TCommonReward* add_droparray();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      droparray() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_droparray();

  // @@protoc_insertion_point(class_scope:pb.TDInstanceReportBattleRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > droparray_;
  friend void  protobuf_AddDesc_net_2fDInstance_2eproto();
  friend void protobuf_AssignDesc_net_2fDInstance_2eproto();
  friend void protobuf_ShutdownFile_net_2fDInstance_2eproto();

  void InitAsDefaultInstance();
  static TDInstanceReportBattleRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TDInstanceChapterInfo

// optional uint32 ChapterId = 1;
inline bool TDInstanceChapterInfo::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDInstanceChapterInfo::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDInstanceChapterInfo::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDInstanceChapterInfo::clear_chapterid() {
  chapterid_ = 0u;
  clear_has_chapterid();
}
inline ::google::protobuf::uint32 TDInstanceChapterInfo::chapterid() const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceChapterInfo.ChapterId)
  return chapterid_;
}
inline void TDInstanceChapterInfo::set_chapterid(::google::protobuf::uint32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInstanceChapterInfo.ChapterId)
}

// optional uint32 MaxStrongholdId = 2;
inline bool TDInstanceChapterInfo::has_maxstrongholdid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDInstanceChapterInfo::set_has_maxstrongholdid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDInstanceChapterInfo::clear_has_maxstrongholdid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDInstanceChapterInfo::clear_maxstrongholdid() {
  maxstrongholdid_ = 0u;
  clear_has_maxstrongholdid();
}
inline ::google::protobuf::uint32 TDInstanceChapterInfo::maxstrongholdid() const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceChapterInfo.MaxStrongholdId)
  return maxstrongholdid_;
}
inline void TDInstanceChapterInfo::set_maxstrongholdid(::google::protobuf::uint32 value) {
  set_has_maxstrongholdid();
  maxstrongholdid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInstanceChapterInfo.MaxStrongholdId)
}

// optional uint32 LastStrongholdId = 3;
inline bool TDInstanceChapterInfo::has_laststrongholdid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDInstanceChapterInfo::set_has_laststrongholdid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDInstanceChapterInfo::clear_has_laststrongholdid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDInstanceChapterInfo::clear_laststrongholdid() {
  laststrongholdid_ = 0u;
  clear_has_laststrongholdid();
}
inline ::google::protobuf::uint32 TDInstanceChapterInfo::laststrongholdid() const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceChapterInfo.LastStrongholdId)
  return laststrongholdid_;
}
inline void TDInstanceChapterInfo::set_laststrongholdid(::google::protobuf::uint32 value) {
  set_has_laststrongholdid();
  laststrongholdid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInstanceChapterInfo.LastStrongholdId)
}

// optional uint32 UsedFreeChallengeNum = 4;
inline bool TDInstanceChapterInfo::has_usedfreechallengenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TDInstanceChapterInfo::set_has_usedfreechallengenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TDInstanceChapterInfo::clear_has_usedfreechallengenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TDInstanceChapterInfo::clear_usedfreechallengenum() {
  usedfreechallengenum_ = 0u;
  clear_has_usedfreechallengenum();
}
inline ::google::protobuf::uint32 TDInstanceChapterInfo::usedfreechallengenum() const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceChapterInfo.UsedFreeChallengeNum)
  return usedfreechallengenum_;
}
inline void TDInstanceChapterInfo::set_usedfreechallengenum(::google::protobuf::uint32 value) {
  set_has_usedfreechallengenum();
  usedfreechallengenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInstanceChapterInfo.UsedFreeChallengeNum)
}

// -------------------------------------------------------------------

// TDInstanceInfoReq

// -------------------------------------------------------------------

// TDInstanceInfoRsp

// repeated .pb.TDInstanceChapterInfo ChapterInfoArray = 1;
inline int TDInstanceInfoRsp::chapterinfoarray_size() const {
  return chapterinfoarray_.size();
}
inline void TDInstanceInfoRsp::clear_chapterinfoarray() {
  chapterinfoarray_.Clear();
}
inline const ::pb::TDInstanceChapterInfo& TDInstanceInfoRsp::chapterinfoarray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceInfoRsp.ChapterInfoArray)
  return chapterinfoarray_.Get(index);
}
inline ::pb::TDInstanceChapterInfo* TDInstanceInfoRsp::mutable_chapterinfoarray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDInstanceInfoRsp.ChapterInfoArray)
  return chapterinfoarray_.Mutable(index);
}
inline ::pb::TDInstanceChapterInfo* TDInstanceInfoRsp::add_chapterinfoarray() {
  // @@protoc_insertion_point(field_add:pb.TDInstanceInfoRsp.ChapterInfoArray)
  return chapterinfoarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TDInstanceChapterInfo >&
TDInstanceInfoRsp::chapterinfoarray() const {
  // @@protoc_insertion_point(field_list:pb.TDInstanceInfoRsp.ChapterInfoArray)
  return chapterinfoarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TDInstanceChapterInfo >*
TDInstanceInfoRsp::mutable_chapterinfoarray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDInstanceInfoRsp.ChapterInfoArray)
  return &chapterinfoarray_;
}

// -------------------------------------------------------------------

// TDInstanceDoBattleReq

// optional uint32 ChapterId = 1;
inline bool TDInstanceDoBattleReq::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDInstanceDoBattleReq::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDInstanceDoBattleReq::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDInstanceDoBattleReq::clear_chapterid() {
  chapterid_ = 0u;
  clear_has_chapterid();
}
inline ::google::protobuf::uint32 TDInstanceDoBattleReq::chapterid() const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceDoBattleReq.ChapterId)
  return chapterid_;
}
inline void TDInstanceDoBattleReq::set_chapterid(::google::protobuf::uint32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInstanceDoBattleReq.ChapterId)
}

// optional uint32 StrongholdId = 2;
inline bool TDInstanceDoBattleReq::has_strongholdid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDInstanceDoBattleReq::set_has_strongholdid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDInstanceDoBattleReq::clear_has_strongholdid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDInstanceDoBattleReq::clear_strongholdid() {
  strongholdid_ = 0u;
  clear_has_strongholdid();
}
inline ::google::protobuf::uint32 TDInstanceDoBattleReq::strongholdid() const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceDoBattleReq.StrongholdId)
  return strongholdid_;
}
inline void TDInstanceDoBattleReq::set_strongholdid(::google::protobuf::uint32 value) {
  set_has_strongholdid();
  strongholdid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInstanceDoBattleReq.StrongholdId)
}

// -------------------------------------------------------------------

// TDInstanceDoBattleRsp

// repeated .pb.TCommonReward DropArray = 1;
inline int TDInstanceDoBattleRsp::droparray_size() const {
  return droparray_.size();
}
inline void TDInstanceDoBattleRsp::clear_droparray() {
  droparray_.Clear();
}
inline const ::pb::TCommonReward& TDInstanceDoBattleRsp::droparray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceDoBattleRsp.DropArray)
  return droparray_.Get(index);
}
inline ::pb::TCommonReward* TDInstanceDoBattleRsp::mutable_droparray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDInstanceDoBattleRsp.DropArray)
  return droparray_.Mutable(index);
}
inline ::pb::TCommonReward* TDInstanceDoBattleRsp::add_droparray() {
  // @@protoc_insertion_point(field_add:pb.TDInstanceDoBattleRsp.DropArray)
  return droparray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TDInstanceDoBattleRsp::droparray() const {
  // @@protoc_insertion_point(field_list:pb.TDInstanceDoBattleRsp.DropArray)
  return droparray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TDInstanceDoBattleRsp::mutable_droparray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDInstanceDoBattleRsp.DropArray)
  return &droparray_;
}

// -------------------------------------------------------------------

// TDInstanceRaidStrongholdReq

// optional uint32 ChapterId = 1;
inline bool TDInstanceRaidStrongholdReq::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDInstanceRaidStrongholdReq::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDInstanceRaidStrongholdReq::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDInstanceRaidStrongholdReq::clear_chapterid() {
  chapterid_ = 0u;
  clear_has_chapterid();
}
inline ::google::protobuf::uint32 TDInstanceRaidStrongholdReq::chapterid() const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceRaidStrongholdReq.ChapterId)
  return chapterid_;
}
inline void TDInstanceRaidStrongholdReq::set_chapterid(::google::protobuf::uint32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInstanceRaidStrongholdReq.ChapterId)
}

// optional uint32 StrongholdId = 2;
inline bool TDInstanceRaidStrongholdReq::has_strongholdid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDInstanceRaidStrongholdReq::set_has_strongholdid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDInstanceRaidStrongholdReq::clear_has_strongholdid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDInstanceRaidStrongholdReq::clear_strongholdid() {
  strongholdid_ = 0u;
  clear_has_strongholdid();
}
inline ::google::protobuf::uint32 TDInstanceRaidStrongholdReq::strongholdid() const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceRaidStrongholdReq.StrongholdId)
  return strongholdid_;
}
inline void TDInstanceRaidStrongholdReq::set_strongholdid(::google::protobuf::uint32 value) {
  set_has_strongholdid();
  strongholdid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInstanceRaidStrongholdReq.StrongholdId)
}

// -------------------------------------------------------------------

// TDInstanceRaidStrongholdRsp

// repeated .pb.TCommonReward DropArray = 1;
inline int TDInstanceRaidStrongholdRsp::droparray_size() const {
  return droparray_.size();
}
inline void TDInstanceRaidStrongholdRsp::clear_droparray() {
  droparray_.Clear();
}
inline const ::pb::TCommonReward& TDInstanceRaidStrongholdRsp::droparray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceRaidStrongholdRsp.DropArray)
  return droparray_.Get(index);
}
inline ::pb::TCommonReward* TDInstanceRaidStrongholdRsp::mutable_droparray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDInstanceRaidStrongholdRsp.DropArray)
  return droparray_.Mutable(index);
}
inline ::pb::TCommonReward* TDInstanceRaidStrongholdRsp::add_droparray() {
  // @@protoc_insertion_point(field_add:pb.TDInstanceRaidStrongholdRsp.DropArray)
  return droparray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TDInstanceRaidStrongholdRsp::droparray() const {
  // @@protoc_insertion_point(field_list:pb.TDInstanceRaidStrongholdRsp.DropArray)
  return droparray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TDInstanceRaidStrongholdRsp::mutable_droparray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDInstanceRaidStrongholdRsp.DropArray)
  return &droparray_;
}

// -------------------------------------------------------------------

// TDInstanceReportBattleReq

// optional uint32 ChapterId = 1;
inline bool TDInstanceReportBattleReq::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDInstanceReportBattleReq::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDInstanceReportBattleReq::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDInstanceReportBattleReq::clear_chapterid() {
  chapterid_ = 0u;
  clear_has_chapterid();
}
inline ::google::protobuf::uint32 TDInstanceReportBattleReq::chapterid() const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceReportBattleReq.ChapterId)
  return chapterid_;
}
inline void TDInstanceReportBattleReq::set_chapterid(::google::protobuf::uint32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInstanceReportBattleReq.ChapterId)
}

// optional uint32 StrongholdId = 2;
inline bool TDInstanceReportBattleReq::has_strongholdid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDInstanceReportBattleReq::set_has_strongholdid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDInstanceReportBattleReq::clear_has_strongholdid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDInstanceReportBattleReq::clear_strongholdid() {
  strongholdid_ = 0u;
  clear_has_strongholdid();
}
inline ::google::protobuf::uint32 TDInstanceReportBattleReq::strongholdid() const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceReportBattleReq.StrongholdId)
  return strongholdid_;
}
inline void TDInstanceReportBattleReq::set_strongholdid(::google::protobuf::uint32 value) {
  set_has_strongholdid();
  strongholdid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInstanceReportBattleReq.StrongholdId)
}

// optional .pb.TBattleResult BattleRet = 3;
inline bool TDInstanceReportBattleReq::has_battleret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDInstanceReportBattleReq::set_has_battleret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDInstanceReportBattleReq::clear_has_battleret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDInstanceReportBattleReq::clear_battleret() {
  if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
  clear_has_battleret();
}
inline const ::pb::TBattleResult& TDInstanceReportBattleReq::battleret() const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceReportBattleReq.BattleRet)
  return battleret_ != NULL ? *battleret_ : *default_instance_->battleret_;
}
inline ::pb::TBattleResult* TDInstanceReportBattleReq::mutable_battleret() {
  set_has_battleret();
  if (battleret_ == NULL) battleret_ = new ::pb::TBattleResult;
  // @@protoc_insertion_point(field_mutable:pb.TDInstanceReportBattleReq.BattleRet)
  return battleret_;
}
inline ::pb::TBattleResult* TDInstanceReportBattleReq::release_battleret() {
  clear_has_battleret();
  ::pb::TBattleResult* temp = battleret_;
  battleret_ = NULL;
  return temp;
}
inline void TDInstanceReportBattleReq::set_allocated_battleret(::pb::TBattleResult* battleret) {
  delete battleret_;
  battleret_ = battleret;
  if (battleret) {
    set_has_battleret();
  } else {
    clear_has_battleret();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TDInstanceReportBattleReq.BattleRet)
}

// -------------------------------------------------------------------

// TDInstanceReportBattleRsp

// repeated .pb.TCommonReward DropArray = 1;
inline int TDInstanceReportBattleRsp::droparray_size() const {
  return droparray_.size();
}
inline void TDInstanceReportBattleRsp::clear_droparray() {
  droparray_.Clear();
}
inline const ::pb::TCommonReward& TDInstanceReportBattleRsp::droparray(int index) const {
  // @@protoc_insertion_point(field_get:pb.TDInstanceReportBattleRsp.DropArray)
  return droparray_.Get(index);
}
inline ::pb::TCommonReward* TDInstanceReportBattleRsp::mutable_droparray(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TDInstanceReportBattleRsp.DropArray)
  return droparray_.Mutable(index);
}
inline ::pb::TCommonReward* TDInstanceReportBattleRsp::add_droparray() {
  // @@protoc_insertion_point(field_add:pb.TDInstanceReportBattleRsp.DropArray)
  return droparray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TDInstanceReportBattleRsp::droparray() const {
  // @@protoc_insertion_point(field_list:pb.TDInstanceReportBattleRsp.DropArray)
  return droparray_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TDInstanceReportBattleRsp::mutable_droparray() {
  // @@protoc_insertion_point(field_mutable_list:pb.TDInstanceReportBattleRsp.DropArray)
  return &droparray_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fDInstance_2eproto__INCLUDED
