// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/WholeGroupWelfare.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/WholeGroupWelfare.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TWGWSingleFundInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TWGWSingleFundInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TWholeGroupWelfareGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TWholeGroupWelfareGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TWholeGroupWelfareReceiveRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TWholeGroupWelfareReceiveRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TUpdateFundBuyNumNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TUpdateFundBuyNumNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fWholeGroupWelfare_2eproto() {
  protobuf_AddDesc_net_2fWholeGroupWelfare_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/WholeGroupWelfare.proto");
  GOOGLE_CHECK(file != NULL);
  TWGWSingleFundInfo_descriptor_ = file->message_type(0);
  static const int TWGWSingleFundInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TWGWSingleFundInfo, fundid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TWGWSingleFundInfo, rewardindexarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TWGWSingleFundInfo, buynum_),
  };
  TWGWSingleFundInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TWGWSingleFundInfo_descriptor_,
      TWGWSingleFundInfo::default_instance_,
      TWGWSingleFundInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TWGWSingleFundInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TWGWSingleFundInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TWGWSingleFundInfo));
  TWholeGroupWelfareGetInfoRsp_descriptor_ = file->message_type(1);
  static const int TWholeGroupWelfareGetInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TWholeGroupWelfareGetInfoRsp, fundarr_),
  };
  TWholeGroupWelfareGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TWholeGroupWelfareGetInfoRsp_descriptor_,
      TWholeGroupWelfareGetInfoRsp::default_instance_,
      TWholeGroupWelfareGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TWholeGroupWelfareGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TWholeGroupWelfareGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TWholeGroupWelfareGetInfoRsp));
  TWholeGroupWelfareReceiveRewardReq_descriptor_ = file->message_type(2);
  static const int TWholeGroupWelfareReceiveRewardReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TWholeGroupWelfareReceiveRewardReq, fundid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TWholeGroupWelfareReceiveRewardReq, rewardindex_),
  };
  TWholeGroupWelfareReceiveRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TWholeGroupWelfareReceiveRewardReq_descriptor_,
      TWholeGroupWelfareReceiveRewardReq::default_instance_,
      TWholeGroupWelfareReceiveRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TWholeGroupWelfareReceiveRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TWholeGroupWelfareReceiveRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TWholeGroupWelfareReceiveRewardReq));
  TUpdateFundBuyNumNotify_descriptor_ = file->message_type(3);
  static const int TUpdateFundBuyNumNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUpdateFundBuyNumNotify, fundid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUpdateFundBuyNumNotify, buynum_),
  };
  TUpdateFundBuyNumNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TUpdateFundBuyNumNotify_descriptor_,
      TUpdateFundBuyNumNotify::default_instance_,
      TUpdateFundBuyNumNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUpdateFundBuyNumNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TUpdateFundBuyNumNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TUpdateFundBuyNumNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fWholeGroupWelfare_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TWGWSingleFundInfo_descriptor_, &TWGWSingleFundInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TWholeGroupWelfareGetInfoRsp_descriptor_, &TWholeGroupWelfareGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TWholeGroupWelfareReceiveRewardReq_descriptor_, &TWholeGroupWelfareReceiveRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TUpdateFundBuyNumNotify_descriptor_, &TUpdateFundBuyNumNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fWholeGroupWelfare_2eproto() {
  delete TWGWSingleFundInfo::default_instance_;
  delete TWGWSingleFundInfo_reflection_;
  delete TWholeGroupWelfareGetInfoRsp::default_instance_;
  delete TWholeGroupWelfareGetInfoRsp_reflection_;
  delete TWholeGroupWelfareReceiveRewardReq::default_instance_;
  delete TWholeGroupWelfareReceiveRewardReq_reflection_;
  delete TUpdateFundBuyNumNotify::default_instance_;
  delete TUpdateFundBuyNumNotify_reflection_;
}

void protobuf_AddDesc_net_2fWholeGroupWelfare_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033net/WholeGroupWelfare.proto\022\002pb\"L\n\022TWG"
    "WSingleFundInfo\022\016\n\006FundId\030\001 \001(\r\022\026\n\016Rewar"
    "dIndexArr\030\002 \003(\r\022\016\n\006BuyNum\030\003 \001(\004\"G\n\034TWhol"
    "eGroupWelfareGetInfoRsp\022\'\n\007FundArr\030\001 \003(\013"
    "2\026.pb.TWGWSingleFundInfo\"I\n\"TWholeGroupW"
    "elfareReceiveRewardReq\022\016\n\006FundId\030\001 \001(\r\022\023"
    "\n\013RewardIndex\030\002 \001(\r\"9\n\027TUpdateFundBuyNum"
    "Notify\022\016\n\006FundId\030\001 \001(\r\022\016\n\006BuyNum\030\002 \001(\004", 318);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/WholeGroupWelfare.proto", &protobuf_RegisterTypes);
  TWGWSingleFundInfo::default_instance_ = new TWGWSingleFundInfo();
  TWholeGroupWelfareGetInfoRsp::default_instance_ = new TWholeGroupWelfareGetInfoRsp();
  TWholeGroupWelfareReceiveRewardReq::default_instance_ = new TWholeGroupWelfareReceiveRewardReq();
  TUpdateFundBuyNumNotify::default_instance_ = new TUpdateFundBuyNumNotify();
  TWGWSingleFundInfo::default_instance_->InitAsDefaultInstance();
  TWholeGroupWelfareGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TWholeGroupWelfareReceiveRewardReq::default_instance_->InitAsDefaultInstance();
  TUpdateFundBuyNumNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fWholeGroupWelfare_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fWholeGroupWelfare_2eproto {
  StaticDescriptorInitializer_net_2fWholeGroupWelfare_2eproto() {
    protobuf_AddDesc_net_2fWholeGroupWelfare_2eproto();
  }
} static_descriptor_initializer_net_2fWholeGroupWelfare_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TWGWSingleFundInfo::kFundIdFieldNumber;
const int TWGWSingleFundInfo::kRewardIndexArrFieldNumber;
const int TWGWSingleFundInfo::kBuyNumFieldNumber;
#endif  // !_MSC_VER

TWGWSingleFundInfo::TWGWSingleFundInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TWGWSingleFundInfo)
}

void TWGWSingleFundInfo::InitAsDefaultInstance() {
}

TWGWSingleFundInfo::TWGWSingleFundInfo(const TWGWSingleFundInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TWGWSingleFundInfo)
}

void TWGWSingleFundInfo::SharedCtor() {
  _cached_size_ = 0;
  fundid_ = 0u;
  buynum_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TWGWSingleFundInfo::~TWGWSingleFundInfo() {
  // @@protoc_insertion_point(destructor:pb.TWGWSingleFundInfo)
  SharedDtor();
}

void TWGWSingleFundInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TWGWSingleFundInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TWGWSingleFundInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TWGWSingleFundInfo_descriptor_;
}

const TWGWSingleFundInfo& TWGWSingleFundInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fWholeGroupWelfare_2eproto();
  return *default_instance_;
}

TWGWSingleFundInfo* TWGWSingleFundInfo::default_instance_ = NULL;

TWGWSingleFundInfo* TWGWSingleFundInfo::New() const {
  return new TWGWSingleFundInfo;
}

void TWGWSingleFundInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TWGWSingleFundInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(buynum_, fundid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  rewardindexarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TWGWSingleFundInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TWGWSingleFundInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FundId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fundid_)));
          set_has_fundid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardIndexArr;
        break;
      }

      // repeated uint32 RewardIndexArr = 2;
      case 2: {
        if (tag == 16) {
         parse_RewardIndexArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_rewardindexarr())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_rewardindexarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardIndexArr;
        if (input->ExpectTag(24)) goto parse_BuyNum;
        break;
      }

      // optional uint64 BuyNum = 3;
      case 3: {
        if (tag == 24) {
         parse_BuyNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &buynum_)));
          set_has_buynum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TWGWSingleFundInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TWGWSingleFundInfo)
  return false;
#undef DO_
}

void TWGWSingleFundInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TWGWSingleFundInfo)
  // optional uint32 FundId = 1;
  if (has_fundid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fundid(), output);
  }

  // repeated uint32 RewardIndexArr = 2;
  for (int i = 0; i < this->rewardindexarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->rewardindexarr(i), output);
  }

  // optional uint64 BuyNum = 3;
  if (has_buynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->buynum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TWGWSingleFundInfo)
}

::google::protobuf::uint8* TWGWSingleFundInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TWGWSingleFundInfo)
  // optional uint32 FundId = 1;
  if (has_fundid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fundid(), target);
  }

  // repeated uint32 RewardIndexArr = 2;
  for (int i = 0; i < this->rewardindexarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->rewardindexarr(i), target);
  }

  // optional uint64 BuyNum = 3;
  if (has_buynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->buynum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TWGWSingleFundInfo)
  return target;
}

int TWGWSingleFundInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FundId = 1;
    if (has_fundid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fundid());
    }

    // optional uint64 BuyNum = 3;
    if (has_buynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->buynum());
    }

  }
  // repeated uint32 RewardIndexArr = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->rewardindexarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->rewardindexarr(i));
    }
    total_size += 1 * this->rewardindexarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TWGWSingleFundInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TWGWSingleFundInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TWGWSingleFundInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TWGWSingleFundInfo::MergeFrom(const TWGWSingleFundInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardindexarr_.MergeFrom(from.rewardindexarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fundid()) {
      set_fundid(from.fundid());
    }
    if (from.has_buynum()) {
      set_buynum(from.buynum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TWGWSingleFundInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TWGWSingleFundInfo::CopyFrom(const TWGWSingleFundInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TWGWSingleFundInfo::IsInitialized() const {

  return true;
}

void TWGWSingleFundInfo::Swap(TWGWSingleFundInfo* other) {
  if (other != this) {
    std::swap(fundid_, other->fundid_);
    rewardindexarr_.Swap(&other->rewardindexarr_);
    std::swap(buynum_, other->buynum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TWGWSingleFundInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TWGWSingleFundInfo_descriptor_;
  metadata.reflection = TWGWSingleFundInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TWholeGroupWelfareGetInfoRsp::kFundArrFieldNumber;
#endif  // !_MSC_VER

TWholeGroupWelfareGetInfoRsp::TWholeGroupWelfareGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TWholeGroupWelfareGetInfoRsp)
}

void TWholeGroupWelfareGetInfoRsp::InitAsDefaultInstance() {
}

TWholeGroupWelfareGetInfoRsp::TWholeGroupWelfareGetInfoRsp(const TWholeGroupWelfareGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TWholeGroupWelfareGetInfoRsp)
}

void TWholeGroupWelfareGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TWholeGroupWelfareGetInfoRsp::~TWholeGroupWelfareGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TWholeGroupWelfareGetInfoRsp)
  SharedDtor();
}

void TWholeGroupWelfareGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TWholeGroupWelfareGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TWholeGroupWelfareGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TWholeGroupWelfareGetInfoRsp_descriptor_;
}

const TWholeGroupWelfareGetInfoRsp& TWholeGroupWelfareGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fWholeGroupWelfare_2eproto();
  return *default_instance_;
}

TWholeGroupWelfareGetInfoRsp* TWholeGroupWelfareGetInfoRsp::default_instance_ = NULL;

TWholeGroupWelfareGetInfoRsp* TWholeGroupWelfareGetInfoRsp::New() const {
  return new TWholeGroupWelfareGetInfoRsp;
}

void TWholeGroupWelfareGetInfoRsp::Clear() {
  fundarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TWholeGroupWelfareGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TWholeGroupWelfareGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TWGWSingleFundInfo FundArr = 1;
      case 1: {
        if (tag == 10) {
         parse_FundArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fundarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_FundArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TWholeGroupWelfareGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TWholeGroupWelfareGetInfoRsp)
  return false;
#undef DO_
}

void TWholeGroupWelfareGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TWholeGroupWelfareGetInfoRsp)
  // repeated .pb.TWGWSingleFundInfo FundArr = 1;
  for (int i = 0; i < this->fundarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fundarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TWholeGroupWelfareGetInfoRsp)
}

::google::protobuf::uint8* TWholeGroupWelfareGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TWholeGroupWelfareGetInfoRsp)
  // repeated .pb.TWGWSingleFundInfo FundArr = 1;
  for (int i = 0; i < this->fundarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fundarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TWholeGroupWelfareGetInfoRsp)
  return target;
}

int TWholeGroupWelfareGetInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TWGWSingleFundInfo FundArr = 1;
  total_size += 1 * this->fundarr_size();
  for (int i = 0; i < this->fundarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fundarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TWholeGroupWelfareGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TWholeGroupWelfareGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TWholeGroupWelfareGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TWholeGroupWelfareGetInfoRsp::MergeFrom(const TWholeGroupWelfareGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  fundarr_.MergeFrom(from.fundarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TWholeGroupWelfareGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TWholeGroupWelfareGetInfoRsp::CopyFrom(const TWholeGroupWelfareGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TWholeGroupWelfareGetInfoRsp::IsInitialized() const {

  return true;
}

void TWholeGroupWelfareGetInfoRsp::Swap(TWholeGroupWelfareGetInfoRsp* other) {
  if (other != this) {
    fundarr_.Swap(&other->fundarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TWholeGroupWelfareGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TWholeGroupWelfareGetInfoRsp_descriptor_;
  metadata.reflection = TWholeGroupWelfareGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TWholeGroupWelfareReceiveRewardReq::kFundIdFieldNumber;
const int TWholeGroupWelfareReceiveRewardReq::kRewardIndexFieldNumber;
#endif  // !_MSC_VER

TWholeGroupWelfareReceiveRewardReq::TWholeGroupWelfareReceiveRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TWholeGroupWelfareReceiveRewardReq)
}

void TWholeGroupWelfareReceiveRewardReq::InitAsDefaultInstance() {
}

TWholeGroupWelfareReceiveRewardReq::TWholeGroupWelfareReceiveRewardReq(const TWholeGroupWelfareReceiveRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TWholeGroupWelfareReceiveRewardReq)
}

void TWholeGroupWelfareReceiveRewardReq::SharedCtor() {
  _cached_size_ = 0;
  fundid_ = 0u;
  rewardindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TWholeGroupWelfareReceiveRewardReq::~TWholeGroupWelfareReceiveRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TWholeGroupWelfareReceiveRewardReq)
  SharedDtor();
}

void TWholeGroupWelfareReceiveRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TWholeGroupWelfareReceiveRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TWholeGroupWelfareReceiveRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TWholeGroupWelfareReceiveRewardReq_descriptor_;
}

const TWholeGroupWelfareReceiveRewardReq& TWholeGroupWelfareReceiveRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fWholeGroupWelfare_2eproto();
  return *default_instance_;
}

TWholeGroupWelfareReceiveRewardReq* TWholeGroupWelfareReceiveRewardReq::default_instance_ = NULL;

TWholeGroupWelfareReceiveRewardReq* TWholeGroupWelfareReceiveRewardReq::New() const {
  return new TWholeGroupWelfareReceiveRewardReq;
}

void TWholeGroupWelfareReceiveRewardReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TWholeGroupWelfareReceiveRewardReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(fundid_, rewardindex_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TWholeGroupWelfareReceiveRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TWholeGroupWelfareReceiveRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FundId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fundid_)));
          set_has_fundid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RewardIndex;
        break;
      }

      // optional uint32 RewardIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_RewardIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rewardindex_)));
          set_has_rewardindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TWholeGroupWelfareReceiveRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TWholeGroupWelfareReceiveRewardReq)
  return false;
#undef DO_
}

void TWholeGroupWelfareReceiveRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TWholeGroupWelfareReceiveRewardReq)
  // optional uint32 FundId = 1;
  if (has_fundid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fundid(), output);
  }

  // optional uint32 RewardIndex = 2;
  if (has_rewardindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rewardindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TWholeGroupWelfareReceiveRewardReq)
}

::google::protobuf::uint8* TWholeGroupWelfareReceiveRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TWholeGroupWelfareReceiveRewardReq)
  // optional uint32 FundId = 1;
  if (has_fundid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fundid(), target);
  }

  // optional uint32 RewardIndex = 2;
  if (has_rewardindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rewardindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TWholeGroupWelfareReceiveRewardReq)
  return target;
}

int TWholeGroupWelfareReceiveRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FundId = 1;
    if (has_fundid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fundid());
    }

    // optional uint32 RewardIndex = 2;
    if (has_rewardindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rewardindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TWholeGroupWelfareReceiveRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TWholeGroupWelfareReceiveRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TWholeGroupWelfareReceiveRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TWholeGroupWelfareReceiveRewardReq::MergeFrom(const TWholeGroupWelfareReceiveRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fundid()) {
      set_fundid(from.fundid());
    }
    if (from.has_rewardindex()) {
      set_rewardindex(from.rewardindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TWholeGroupWelfareReceiveRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TWholeGroupWelfareReceiveRewardReq::CopyFrom(const TWholeGroupWelfareReceiveRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TWholeGroupWelfareReceiveRewardReq::IsInitialized() const {

  return true;
}

void TWholeGroupWelfareReceiveRewardReq::Swap(TWholeGroupWelfareReceiveRewardReq* other) {
  if (other != this) {
    std::swap(fundid_, other->fundid_);
    std::swap(rewardindex_, other->rewardindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TWholeGroupWelfareReceiveRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TWholeGroupWelfareReceiveRewardReq_descriptor_;
  metadata.reflection = TWholeGroupWelfareReceiveRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TUpdateFundBuyNumNotify::kFundIdFieldNumber;
const int TUpdateFundBuyNumNotify::kBuyNumFieldNumber;
#endif  // !_MSC_VER

TUpdateFundBuyNumNotify::TUpdateFundBuyNumNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TUpdateFundBuyNumNotify)
}

void TUpdateFundBuyNumNotify::InitAsDefaultInstance() {
}

TUpdateFundBuyNumNotify::TUpdateFundBuyNumNotify(const TUpdateFundBuyNumNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TUpdateFundBuyNumNotify)
}

void TUpdateFundBuyNumNotify::SharedCtor() {
  _cached_size_ = 0;
  fundid_ = 0u;
  buynum_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TUpdateFundBuyNumNotify::~TUpdateFundBuyNumNotify() {
  // @@protoc_insertion_point(destructor:pb.TUpdateFundBuyNumNotify)
  SharedDtor();
}

void TUpdateFundBuyNumNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TUpdateFundBuyNumNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TUpdateFundBuyNumNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TUpdateFundBuyNumNotify_descriptor_;
}

const TUpdateFundBuyNumNotify& TUpdateFundBuyNumNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fWholeGroupWelfare_2eproto();
  return *default_instance_;
}

TUpdateFundBuyNumNotify* TUpdateFundBuyNumNotify::default_instance_ = NULL;

TUpdateFundBuyNumNotify* TUpdateFundBuyNumNotify::New() const {
  return new TUpdateFundBuyNumNotify;
}

void TUpdateFundBuyNumNotify::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TUpdateFundBuyNumNotify*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(buynum_, fundid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TUpdateFundBuyNumNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TUpdateFundBuyNumNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FundId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fundid_)));
          set_has_fundid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BuyNum;
        break;
      }

      // optional uint64 BuyNum = 2;
      case 2: {
        if (tag == 16) {
         parse_BuyNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &buynum_)));
          set_has_buynum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TUpdateFundBuyNumNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TUpdateFundBuyNumNotify)
  return false;
#undef DO_
}

void TUpdateFundBuyNumNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TUpdateFundBuyNumNotify)
  // optional uint32 FundId = 1;
  if (has_fundid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fundid(), output);
  }

  // optional uint64 BuyNum = 2;
  if (has_buynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->buynum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TUpdateFundBuyNumNotify)
}

::google::protobuf::uint8* TUpdateFundBuyNumNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TUpdateFundBuyNumNotify)
  // optional uint32 FundId = 1;
  if (has_fundid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fundid(), target);
  }

  // optional uint64 BuyNum = 2;
  if (has_buynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->buynum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TUpdateFundBuyNumNotify)
  return target;
}

int TUpdateFundBuyNumNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FundId = 1;
    if (has_fundid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fundid());
    }

    // optional uint64 BuyNum = 2;
    if (has_buynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->buynum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TUpdateFundBuyNumNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TUpdateFundBuyNumNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TUpdateFundBuyNumNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TUpdateFundBuyNumNotify::MergeFrom(const TUpdateFundBuyNumNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fundid()) {
      set_fundid(from.fundid());
    }
    if (from.has_buynum()) {
      set_buynum(from.buynum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TUpdateFundBuyNumNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TUpdateFundBuyNumNotify::CopyFrom(const TUpdateFundBuyNumNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUpdateFundBuyNumNotify::IsInitialized() const {

  return true;
}

void TUpdateFundBuyNumNotify::Swap(TUpdateFundBuyNumNotify* other) {
  if (other != this) {
    std::swap(fundid_, other->fundid_);
    std::swap(buynum_, other->buynum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TUpdateFundBuyNumNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TUpdateFundBuyNumNotify_descriptor_;
  metadata.reflection = TUpdateFundBuyNumNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
