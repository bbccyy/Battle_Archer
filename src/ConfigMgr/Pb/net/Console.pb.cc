// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Console.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/Console.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TConsoleExecuteReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TConsoleExecuteReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TConsoleExecuteRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TConsoleExecuteRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fConsole_2eproto() {
  protobuf_AddDesc_net_2fConsole_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/Console.proto");
  GOOGLE_CHECK(file != NULL);
  TConsoleExecuteReq_descriptor_ = file->message_type(0);
  static const int TConsoleExecuteReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TConsoleExecuteReq, command_),
  };
  TConsoleExecuteReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TConsoleExecuteReq_descriptor_,
      TConsoleExecuteReq::default_instance_,
      TConsoleExecuteReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TConsoleExecuteReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TConsoleExecuteReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TConsoleExecuteReq));
  TConsoleExecuteRsp_descriptor_ = file->message_type(1);
  static const int TConsoleExecuteRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TConsoleExecuteRsp, result_),
  };
  TConsoleExecuteRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TConsoleExecuteRsp_descriptor_,
      TConsoleExecuteRsp::default_instance_,
      TConsoleExecuteRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TConsoleExecuteRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TConsoleExecuteRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TConsoleExecuteRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fConsole_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TConsoleExecuteReq_descriptor_, &TConsoleExecuteReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TConsoleExecuteRsp_descriptor_, &TConsoleExecuteRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fConsole_2eproto() {
  delete TConsoleExecuteReq::default_instance_;
  delete TConsoleExecuteReq_reflection_;
  delete TConsoleExecuteRsp::default_instance_;
  delete TConsoleExecuteRsp_reflection_;
}

void protobuf_AddDesc_net_2fConsole_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021net/Console.proto\022\002pb\"%\n\022TConsoleExecu"
    "teReq\022\017\n\007Command\030\001 \001(\t\"$\n\022TConsoleExecut"
    "eRsp\022\016\n\006Result\030\001 \001(\t", 100);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/Console.proto", &protobuf_RegisterTypes);
  TConsoleExecuteReq::default_instance_ = new TConsoleExecuteReq();
  TConsoleExecuteRsp::default_instance_ = new TConsoleExecuteRsp();
  TConsoleExecuteReq::default_instance_->InitAsDefaultInstance();
  TConsoleExecuteRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fConsole_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fConsole_2eproto {
  StaticDescriptorInitializer_net_2fConsole_2eproto() {
    protobuf_AddDesc_net_2fConsole_2eproto();
  }
} static_descriptor_initializer_net_2fConsole_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TConsoleExecuteReq::kCommandFieldNumber;
#endif  // !_MSC_VER

TConsoleExecuteReq::TConsoleExecuteReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TConsoleExecuteReq)
}

void TConsoleExecuteReq::InitAsDefaultInstance() {
}

TConsoleExecuteReq::TConsoleExecuteReq(const TConsoleExecuteReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TConsoleExecuteReq)
}

void TConsoleExecuteReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  command_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TConsoleExecuteReq::~TConsoleExecuteReq() {
  // @@protoc_insertion_point(destructor:pb.TConsoleExecuteReq)
  SharedDtor();
}

void TConsoleExecuteReq::SharedDtor() {
  if (command_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete command_;
  }
  if (this != default_instance_) {
  }
}

void TConsoleExecuteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TConsoleExecuteReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TConsoleExecuteReq_descriptor_;
}

const TConsoleExecuteReq& TConsoleExecuteReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fConsole_2eproto();
  return *default_instance_;
}

TConsoleExecuteReq* TConsoleExecuteReq::default_instance_ = NULL;

TConsoleExecuteReq* TConsoleExecuteReq::New() const {
  return new TConsoleExecuteReq;
}

void TConsoleExecuteReq::Clear() {
  if (has_command()) {
    if (command_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      command_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TConsoleExecuteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TConsoleExecuteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Command = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command().data(), this->command().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "command");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TConsoleExecuteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TConsoleExecuteReq)
  return false;
#undef DO_
}

void TConsoleExecuteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TConsoleExecuteReq)
  // optional string Command = 1;
  if (has_command()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->command(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TConsoleExecuteReq)
}

::google::protobuf::uint8* TConsoleExecuteReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TConsoleExecuteReq)
  // optional string Command = 1;
  if (has_command()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->command(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TConsoleExecuteReq)
  return target;
}

int TConsoleExecuteReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Command = 1;
    if (has_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->command());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TConsoleExecuteReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TConsoleExecuteReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TConsoleExecuteReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TConsoleExecuteReq::MergeFrom(const TConsoleExecuteReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_command()) {
      set_command(from.command());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TConsoleExecuteReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TConsoleExecuteReq::CopyFrom(const TConsoleExecuteReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TConsoleExecuteReq::IsInitialized() const {

  return true;
}

void TConsoleExecuteReq::Swap(TConsoleExecuteReq* other) {
  if (other != this) {
    std::swap(command_, other->command_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TConsoleExecuteReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TConsoleExecuteReq_descriptor_;
  metadata.reflection = TConsoleExecuteReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TConsoleExecuteRsp::kResultFieldNumber;
#endif  // !_MSC_VER

TConsoleExecuteRsp::TConsoleExecuteRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TConsoleExecuteRsp)
}

void TConsoleExecuteRsp::InitAsDefaultInstance() {
}

TConsoleExecuteRsp::TConsoleExecuteRsp(const TConsoleExecuteRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TConsoleExecuteRsp)
}

void TConsoleExecuteRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TConsoleExecuteRsp::~TConsoleExecuteRsp() {
  // @@protoc_insertion_point(destructor:pb.TConsoleExecuteRsp)
  SharedDtor();
}

void TConsoleExecuteRsp::SharedDtor() {
  if (result_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete result_;
  }
  if (this != default_instance_) {
  }
}

void TConsoleExecuteRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TConsoleExecuteRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TConsoleExecuteRsp_descriptor_;
}

const TConsoleExecuteRsp& TConsoleExecuteRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fConsole_2eproto();
  return *default_instance_;
}

TConsoleExecuteRsp* TConsoleExecuteRsp::default_instance_ = NULL;

TConsoleExecuteRsp* TConsoleExecuteRsp::New() const {
  return new TConsoleExecuteRsp;
}

void TConsoleExecuteRsp::Clear() {
  if (has_result()) {
    if (result_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      result_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TConsoleExecuteRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TConsoleExecuteRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Result = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), this->result().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "result");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TConsoleExecuteRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TConsoleExecuteRsp)
  return false;
#undef DO_
}

void TConsoleExecuteRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TConsoleExecuteRsp)
  // optional string Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TConsoleExecuteRsp)
}

::google::protobuf::uint8* TConsoleExecuteRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TConsoleExecuteRsp)
  // optional string Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TConsoleExecuteRsp)
  return target;
}

int TConsoleExecuteRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TConsoleExecuteRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TConsoleExecuteRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TConsoleExecuteRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TConsoleExecuteRsp::MergeFrom(const TConsoleExecuteRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TConsoleExecuteRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TConsoleExecuteRsp::CopyFrom(const TConsoleExecuteRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TConsoleExecuteRsp::IsInitialized() const {

  return true;
}

void TConsoleExecuteRsp::Swap(TConsoleExecuteRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TConsoleExecuteRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TConsoleExecuteRsp_descriptor_;
  metadata.reflection = TConsoleExecuteRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
