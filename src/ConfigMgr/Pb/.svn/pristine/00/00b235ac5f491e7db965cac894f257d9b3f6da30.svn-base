// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/AdventureTeam.proto

#ifndef PROTOBUF_net_2fAdventureTeam_2eproto__INCLUDED
#define PROTOBUF_net_2fAdventureTeam_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/User.pb.h"
#include "net/AdventureBase.pb.h"
#include "net/Team.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

class TAdventureHallMemberInfoData;
class TAdventureTeamUserInfo;
class TAdventureTeamSpecificInfo;
class TAdventureTeamInfo;
class TAdventureSimpleTeamInfo;
class TAdventureGetTeamArrReq;
class TAdventureGetTeamArrRsp;
class TAdventureCreateTeamReq;
class TAdventureCreateTeamRsp;
class TAdventureTeamInviteReq;
class TAdventureJoinTeamReq;
class TAdventureJoinTeamRsp;
class TAdventureKickReq;
class TAdventureQuitTeamReq;
class TAdventureTeamStartReq;
class TAdventureInviteNotify;
class TAdventureGetInviteListReq;
class TAdventureGetInviteListRsp;
class TAdventureUniqTeam;
class TAdventureGetInviteTeamArrReq;
class TAdventureGetInviteTeamArrRsp;
class TAdventureChangeTeamModeReq;
class TAdventureChangeTeamModeRsp;
class TAdventureKickOrQuitTeamRsp;
class TAdventureTeamStartRsp;
class TAdventureSendTeamInviteMsgReq;
class TAdventureSetTeamMemberStatusReq;
class TAdventureSetTeamMemberStatusRsp;
class TAdventureSetTeamStatusReq;
class TAdventureSetTeamStatusRsp;

enum ETeamMemberStatus {
  MEMBER_STATUS_NOREADY = 1,
  MEMBER_STATUS_READY = 2
};
bool ETeamMemberStatus_IsValid(int value);
const ETeamMemberStatus ETeamMemberStatus_MIN = MEMBER_STATUS_NOREADY;
const ETeamMemberStatus ETeamMemberStatus_MAX = MEMBER_STATUS_READY;
const int ETeamMemberStatus_ARRAYSIZE = ETeamMemberStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETeamMemberStatus_descriptor();
inline const ::std::string& ETeamMemberStatus_Name(ETeamMemberStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETeamMemberStatus_descriptor(), value);
}
inline bool ETeamMemberStatus_Parse(
    const ::std::string& name, ETeamMemberStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETeamMemberStatus>(
    ETeamMemberStatus_descriptor(), name, value);
}
enum EAdventureTeamPrivateStatus {
  TEAM_STATUS_PRIVATE = 1,
  TEAM_STATUS_PUBLIC = 2
};
bool EAdventureTeamPrivateStatus_IsValid(int value);
const EAdventureTeamPrivateStatus EAdventureTeamPrivateStatus_MIN = TEAM_STATUS_PRIVATE;
const EAdventureTeamPrivateStatus EAdventureTeamPrivateStatus_MAX = TEAM_STATUS_PUBLIC;
const int EAdventureTeamPrivateStatus_ARRAYSIZE = EAdventureTeamPrivateStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EAdventureTeamPrivateStatus_descriptor();
inline const ::std::string& EAdventureTeamPrivateStatus_Name(EAdventureTeamPrivateStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EAdventureTeamPrivateStatus_descriptor(), value);
}
inline bool EAdventureTeamPrivateStatus_Parse(
    const ::std::string& name, EAdventureTeamPrivateStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EAdventureTeamPrivateStatus>(
    EAdventureTeamPrivateStatus_descriptor(), name, value);
}
enum EJoinTeamErrorCode {
  ERROR_CODE_OK = 0,
  ERROR_CODE_FULL = 1,
  ERROR_CODE_NOTEXIST = 2,
  ERROR_CODE_INTEAM = 3,
  ERROR_CODE_RISKNOTOPEN = 4,
  ERROR_CODE_MAPLVLIMIT = 5,
  ERROR_CODE_PRIVATETEAM = 6
};
bool EJoinTeamErrorCode_IsValid(int value);
const EJoinTeamErrorCode EJoinTeamErrorCode_MIN = ERROR_CODE_OK;
const EJoinTeamErrorCode EJoinTeamErrorCode_MAX = ERROR_CODE_PRIVATETEAM;
const int EJoinTeamErrorCode_ARRAYSIZE = EJoinTeamErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* EJoinTeamErrorCode_descriptor();
inline const ::std::string& EJoinTeamErrorCode_Name(EJoinTeamErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    EJoinTeamErrorCode_descriptor(), value);
}
inline bool EJoinTeamErrorCode_Parse(
    const ::std::string& name, EJoinTeamErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EJoinTeamErrorCode>(
    EJoinTeamErrorCode_descriptor(), name, value);
}
enum EKickOrQuitTeamRetCode {
  KQRET_CODE_OK = 0,
  KQRET_CODE_TEAMNOTEXIST = 1,
  KQRET_CODE_NOTINTEAM = 2
};
bool EKickOrQuitTeamRetCode_IsValid(int value);
const EKickOrQuitTeamRetCode EKickOrQuitTeamRetCode_MIN = KQRET_CODE_OK;
const EKickOrQuitTeamRetCode EKickOrQuitTeamRetCode_MAX = KQRET_CODE_NOTINTEAM;
const int EKickOrQuitTeamRetCode_ARRAYSIZE = EKickOrQuitTeamRetCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* EKickOrQuitTeamRetCode_descriptor();
inline const ::std::string& EKickOrQuitTeamRetCode_Name(EKickOrQuitTeamRetCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    EKickOrQuitTeamRetCode_descriptor(), value);
}
inline bool EKickOrQuitTeamRetCode_Parse(
    const ::std::string& name, EKickOrQuitTeamRetCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EKickOrQuitTeamRetCode>(
    EKickOrQuitTeamRetCode_descriptor(), name, value);
}
enum ETeamStartRetCode {
  TSRET_CODE_OK = 0,
  TSRET_CODE_TEAMNOTEXIST = 1,
  TSRET_CODE_NOTINTEAM = 2,
  TSRET_CODE_NOTLEADER = 3,
  TSRET_CODE_CANNOTSTART = 4,
  TSRET_CODE_GETMAPFAIL = 5,
  TSRET_CODE_NOTREADY = 6
};
bool ETeamStartRetCode_IsValid(int value);
const ETeamStartRetCode ETeamStartRetCode_MIN = TSRET_CODE_OK;
const ETeamStartRetCode ETeamStartRetCode_MAX = TSRET_CODE_NOTREADY;
const int ETeamStartRetCode_ARRAYSIZE = ETeamStartRetCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETeamStartRetCode_descriptor();
inline const ::std::string& ETeamStartRetCode_Name(ETeamStartRetCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETeamStartRetCode_descriptor(), value);
}
inline bool ETeamStartRetCode_Parse(
    const ::std::string& name, ETeamStartRetCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETeamStartRetCode>(
    ETeamStartRetCode_descriptor(), name, value);
}
enum EAdventureInviteType {
  INVIITE_TYPE_GUILD = 1,
  INVIITE_TYPE_FRIEND = 2,
  INVIITE_TYPE_RECOMMEND = 3
};
bool EAdventureInviteType_IsValid(int value);
const EAdventureInviteType EAdventureInviteType_MIN = INVIITE_TYPE_GUILD;
const EAdventureInviteType EAdventureInviteType_MAX = INVIITE_TYPE_RECOMMEND;
const int EAdventureInviteType_ARRAYSIZE = EAdventureInviteType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EAdventureInviteType_descriptor();
inline const ::std::string& EAdventureInviteType_Name(EAdventureInviteType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EAdventureInviteType_descriptor(), value);
}
inline bool EAdventureInviteType_Parse(
    const ::std::string& name, EAdventureInviteType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EAdventureInviteType>(
    EAdventureInviteType_descriptor(), name, value);
}
enum EChangeTeamModeRetCode {
  RET_CODE_CHANGEOK = 0,
  RET_CODE_TEAMSTART = 1,
  RET_CODE_NOINTEAM = 2,
  RET_CODE_INVALIDTEAM = 3
};
bool EChangeTeamModeRetCode_IsValid(int value);
const EChangeTeamModeRetCode EChangeTeamModeRetCode_MIN = RET_CODE_CHANGEOK;
const EChangeTeamModeRetCode EChangeTeamModeRetCode_MAX = RET_CODE_INVALIDTEAM;
const int EChangeTeamModeRetCode_ARRAYSIZE = EChangeTeamModeRetCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* EChangeTeamModeRetCode_descriptor();
inline const ::std::string& EChangeTeamModeRetCode_Name(EChangeTeamModeRetCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    EChangeTeamModeRetCode_descriptor(), value);
}
inline bool EChangeTeamModeRetCode_Parse(
    const ::std::string& name, EChangeTeamModeRetCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EChangeTeamModeRetCode>(
    EChangeTeamModeRetCode_descriptor(), name, value);
}
enum EAdventureTeamRoomId {
  ACTIVITY_ADVENT_ROOM_BASE_ID = 10000
};
bool EAdventureTeamRoomId_IsValid(int value);
const EAdventureTeamRoomId EAdventureTeamRoomId_MIN = ACTIVITY_ADVENT_ROOM_BASE_ID;
const EAdventureTeamRoomId EAdventureTeamRoomId_MAX = ACTIVITY_ADVENT_ROOM_BASE_ID;
const int EAdventureTeamRoomId_ARRAYSIZE = EAdventureTeamRoomId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EAdventureTeamRoomId_descriptor();
inline const ::std::string& EAdventureTeamRoomId_Name(EAdventureTeamRoomId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EAdventureTeamRoomId_descriptor(), value);
}
inline bool EAdventureTeamRoomId_Parse(
    const ::std::string& name, EAdventureTeamRoomId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EAdventureTeamRoomId>(
    EAdventureTeamRoomId_descriptor(), name, value);
}
// ===================================================================

/*FOR2LUA
<Record>
	<name>TAdventureHallMemberInfoData</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureHallMemberInfoData : public ::google::protobuf::Message {
 public:
  TAdventureHallMemberInfoData();
  virtual ~TAdventureHallMemberInfoData();

  TAdventureHallMemberInfoData(const TAdventureHallMemberInfoData& from);

  inline TAdventureHallMemberInfoData& operator=(const TAdventureHallMemberInfoData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureHallMemberInfoData& default_instance();

  void Swap(TAdventureHallMemberInfoData* other);

  // implements Message ----------------------------------------------

  TAdventureHallMemberInfoData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureHallMemberInfoData& from);
  void MergeFrom(const TAdventureHallMemberInfoData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TAdventureUserSimpleInfo UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureHallMemberInfoData</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAdventureUserSimpleInfo& userinfo() const;
  inline ::pb::TAdventureUserSimpleInfo* mutable_userinfo();
  inline ::pb::TAdventureUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TAdventureUserSimpleInfo* userinfo);

  // optional .pb.ETeamMode MemMode = 2;
  inline bool has_memmode() const;
  inline void clear_memmode();
  static const int kMemModeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureHallMemberInfoData</name>
  	<Function>
  		<name>memmode</name>
  		<replaceName>MemMode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_memmode</name>
  		<replaceName>MemMode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_memmode</name>
  		<replaceName>MemMode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ETeamMode memmode() const;
  inline void set_memmode(::pb::ETeamMode value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureHallMemberInfoData)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_memmode();
  inline void clear_has_memmode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TAdventureUserSimpleInfo* userinfo_;
  int memmode_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureHallMemberInfoData* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureTeamUserInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureTeamUserInfo : public ::google::protobuf::Message {
 public:
  TAdventureTeamUserInfo();
  virtual ~TAdventureTeamUserInfo();

  TAdventureTeamUserInfo(const TAdventureTeamUserInfo& from);

  inline TAdventureTeamUserInfo& operator=(const TAdventureTeamUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureTeamUserInfo& default_instance();

  void Swap(TAdventureTeamUserInfo* other);

  // implements Message ----------------------------------------------

  TAdventureTeamUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureTeamUserInfo& from);
  void MergeFrom(const TAdventureTeamUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TAdventureUserSimpleInfo UserInfo = 1;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamUserInfo</name>
  	<Function>
  		<name>userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userinfo</name>
  		<replaceName>UserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAdventureUserSimpleInfo& userinfo() const;
  inline ::pb::TAdventureUserSimpleInfo* mutable_userinfo();
  inline ::pb::TAdventureUserSimpleInfo* release_userinfo();
  inline void set_allocated_userinfo(::pb::TAdventureUserSimpleInfo* userinfo);

  // optional .pb.ETeamMode MemMode = 2;
  inline bool has_memmode() const;
  inline void clear_memmode();
  static const int kMemModeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamUserInfo</name>
  	<Function>
  		<name>memmode</name>
  		<replaceName>MemMode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_memmode</name>
  		<replaceName>MemMode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_memmode</name>
  		<replaceName>MemMode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ETeamMode memmode() const;
  inline void set_memmode(::pb::ETeamMode value);

  // optional .pb.EHallMemberReadyStatus MemberStatus = 3;
  inline bool has_memberstatus() const;
  inline void clear_memberstatus();
  static const int kMemberStatusFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamUserInfo</name>
  	<Function>
  		<name>memberstatus</name>
  		<replaceName>MemberStatus</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_memberstatus</name>
  		<replaceName>MemberStatus</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_memberstatus</name>
  		<replaceName>MemberStatus</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EHallMemberReadyStatus memberstatus() const;
  inline void set_memberstatus(::pb::EHallMemberReadyStatus value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureTeamUserInfo)
 private:
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_memmode();
  inline void clear_has_memmode();
  inline void set_has_memberstatus();
  inline void clear_has_memberstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TAdventureUserSimpleInfo* userinfo_;
  int memmode_;
  int memberstatus_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureTeamUserInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureTeamSpecificInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureTeamSpecificInfo : public ::google::protobuf::Message {
 public:
  TAdventureTeamSpecificInfo();
  virtual ~TAdventureTeamSpecificInfo();

  TAdventureTeamSpecificInfo(const TAdventureTeamSpecificInfo& from);

  inline TAdventureTeamSpecificInfo& operator=(const TAdventureTeamSpecificInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureTeamSpecificInfo& default_instance();

  void Swap(TAdventureTeamSpecificInfo* other);

  // implements Message ----------------------------------------------

  TAdventureTeamSpecificInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureTeamSpecificInfo& from);
  void MergeFrom(const TAdventureTeamSpecificInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 MapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamSpecificInfo</name>
  	<Function>
  		<name>mapid</name>
  		<replaceName>MapId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_mapid</name>
  		<replaceName>MapId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mapid</name>
  		<replaceName>MapId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // optional uint32 MapEntryId = 2;
  inline bool has_mapentryid() const;
  inline void clear_mapentryid();
  static const int kMapEntryIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamSpecificInfo</name>
  	<Function>
  		<name>mapentryid</name>
  		<replaceName>MapEntryId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_mapentryid</name>
  		<replaceName>MapEntryId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mapentryid</name>
  		<replaceName>MapEntryId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 mapentryid() const;
  inline void set_mapentryid(::google::protobuf::uint32 value);

  // optional uint64 MapTime = 3;
  inline bool has_maptime() const;
  inline void clear_maptime();
  static const int kMapTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamSpecificInfo</name>
  	<Function>
  		<name>maptime</name>
  		<replaceName>MapTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_maptime</name>
  		<replaceName>MapTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_maptime</name>
  		<replaceName>MapTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 maptime() const;
  inline void set_maptime(::google::protobuf::uint64 value);

  // optional .pb.EAdventureType AdventureType = 4;
  inline bool has_adventuretype() const;
  inline void clear_adventuretype();
  static const int kAdventureTypeFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamSpecificInfo</name>
  	<Function>
  		<name>adventuretype</name>
  		<replaceName>AdventureType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_adventuretype</name>
  		<replaceName>AdventureType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_adventuretype</name>
  		<replaceName>AdventureType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EAdventureType adventuretype() const;
  inline void set_adventuretype(::pb::EAdventureType value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureTeamSpecificInfo)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_mapentryid();
  inline void clear_has_mapentryid();
  inline void set_has_maptime();
  inline void clear_has_maptime();
  inline void set_has_adventuretype();
  inline void clear_has_adventuretype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 mapid_;
  ::google::protobuf::uint64 maptime_;
  ::google::protobuf::uint32 mapentryid_;
  int adventuretype_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureTeamSpecificInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureTeamInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureTeamInfo : public ::google::protobuf::Message {
 public:
  TAdventureTeamInfo();
  virtual ~TAdventureTeamInfo();

  TAdventureTeamInfo(const TAdventureTeamInfo& from);

  inline TAdventureTeamInfo& operator=(const TAdventureTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureTeamInfo& default_instance();

  void Swap(TAdventureTeamInfo* other);

  // implements Message ----------------------------------------------

  TAdventureTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureTeamInfo& from);
  void MergeFrom(const TAdventureTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamInfo</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamInfo</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint64 LeaderUid = 3;
  inline bool has_leaderuid() const;
  inline void clear_leaderuid();
  static const int kLeaderUidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamInfo</name>
  	<Function>
  		<name>leaderuid</name>
  		<replaceName>LeaderUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_leaderuid</name>
  		<replaceName>LeaderUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_leaderuid</name>
  		<replaceName>LeaderUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 leaderuid() const;
  inline void set_leaderuid(::google::protobuf::uint64 value);

  // repeated .pb.TAdventureTeamUserInfo TeamUserArr = 4;
  inline int teamuserarr_size() const;
  inline void clear_teamuserarr();
  static const int kTeamUserArrFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamInfo</name>
  	<Function>
  		<name>teamuserarr</name>
  		<replaceName>TeamUserArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_teamuserarr</name>
  		<replaceName>TeamUserArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_teamuserarr</name>
  		<replaceName>TeamUserArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamuserarr</name>
  		<replaceName>TeamUserArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>teamuserarr_size</name>
  		<replaceName>TeamUserArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAdventureTeamUserInfo& teamuserarr(int index) const;
  inline ::pb::TAdventureTeamUserInfo* mutable_teamuserarr(int index);
  inline ::pb::TAdventureTeamUserInfo* add_teamuserarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAdventureTeamUserInfo >&
      teamuserarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAdventureTeamUserInfo >*
      mutable_teamuserarr();

  // optional uint32 MapTid = 5;
  inline bool has_maptid() const;
  inline void clear_maptid();
  static const int kMapTidFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamInfo</name>
  	<Function>
  		<name>maptid</name>
  		<replaceName>MapTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_maptid</name>
  		<replaceName>MapTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_maptid</name>
  		<replaceName>MapTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 maptid() const;
  inline void set_maptid(::google::protobuf::uint32 value);

  // optional .pb.EAdventureTeamPrivateStatus Status = 6;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamInfo</name>
  	<Function>
  		<name>status</name>
  		<replaceName>Status</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_status</name>
  		<replaceName>Status</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_status</name>
  		<replaceName>Status</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EAdventureTeamPrivateStatus status() const;
  inline void set_status(::pb::EAdventureTeamPrivateStatus value);

  // optional uint64 MapId = 7;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 7;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamInfo</name>
  	<Function>
  		<name>mapid</name>
  		<replaceName>MapId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_mapid</name>
  		<replaceName>MapId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mapid</name>
  		<replaceName>MapId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureTeamInfo)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_leaderuid();
  inline void clear_has_leaderuid();
  inline void set_has_maptid();
  inline void clear_has_maptid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 leaderuid_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAdventureTeamUserInfo > teamuserarr_;
  ::google::protobuf::uint32 maptid_;
  int status_;
  ::google::protobuf::uint64 mapid_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureSimpleTeamInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureSimpleTeamInfo : public ::google::protobuf::Message {
 public:
  TAdventureSimpleTeamInfo();
  virtual ~TAdventureSimpleTeamInfo();

  TAdventureSimpleTeamInfo(const TAdventureSimpleTeamInfo& from);

  inline TAdventureSimpleTeamInfo& operator=(const TAdventureSimpleTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureSimpleTeamInfo& default_instance();

  void Swap(TAdventureSimpleTeamInfo* other);

  // implements Message ----------------------------------------------

  TAdventureSimpleTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureSimpleTeamInfo& from);
  void MergeFrom(const TAdventureSimpleTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSimpleTeamInfo</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSimpleTeamInfo</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.TAdventureUserSimpleInfo LeaderUserInfo = 3;
  inline bool has_leaderuserinfo() const;
  inline void clear_leaderuserinfo();
  static const int kLeaderUserInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSimpleTeamInfo</name>
  	<Function>
  		<name>leaderuserinfo</name>
  		<replaceName>LeaderUserInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_leaderuserinfo</name>
  		<replaceName>LeaderUserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_leaderuserinfo</name>
  		<replaceName>LeaderUserInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_leaderuserinfo</name>
  		<replaceName>LeaderUserInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAdventureUserSimpleInfo& leaderuserinfo() const;
  inline ::pb::TAdventureUserSimpleInfo* mutable_leaderuserinfo();
  inline ::pb::TAdventureUserSimpleInfo* release_leaderuserinfo();
  inline void set_allocated_leaderuserinfo(::pb::TAdventureUserSimpleInfo* leaderuserinfo);

  // optional uint32 TeamUserNum = 4;
  inline bool has_teamusernum() const;
  inline void clear_teamusernum();
  static const int kTeamUserNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSimpleTeamInfo</name>
  	<Function>
  		<name>teamusernum</name>
  		<replaceName>TeamUserNum</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamusernum</name>
  		<replaceName>TeamUserNum</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamusernum</name>
  		<replaceName>TeamUserNum</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 teamusernum() const;
  inline void set_teamusernum(::google::protobuf::uint32 value);

  // optional uint32 MapTid = 5;
  inline bool has_maptid() const;
  inline void clear_maptid();
  static const int kMapTidFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSimpleTeamInfo</name>
  	<Function>
  		<name>maptid</name>
  		<replaceName>MapTid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_maptid</name>
  		<replaceName>MapTid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_maptid</name>
  		<replaceName>MapTid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 maptid() const;
  inline void set_maptid(::google::protobuf::uint32 value);

  // optional uint64 MapId = 6;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSimpleTeamInfo</name>
  	<Function>
  		<name>mapid</name>
  		<replaceName>MapId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_mapid</name>
  		<replaceName>MapId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_mapid</name>
  		<replaceName>MapId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 mapid() const;
  inline void set_mapid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureSimpleTeamInfo)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_leaderuserinfo();
  inline void clear_has_leaderuserinfo();
  inline void set_has_teamusernum();
  inline void clear_has_teamusernum();
  inline void set_has_maptid();
  inline void clear_has_maptid();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  ::pb::TAdventureUserSimpleInfo* leaderuserinfo_;
  ::google::protobuf::uint32 teamusernum_;
  ::google::protobuf::uint32 maptid_;
  ::google::protobuf::uint64 mapid_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureSimpleTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureGetTeamArrReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureGetTeamArrReq : public ::google::protobuf::Message {
 public:
  TAdventureGetTeamArrReq();
  virtual ~TAdventureGetTeamArrReq();

  TAdventureGetTeamArrReq(const TAdventureGetTeamArrReq& from);

  inline TAdventureGetTeamArrReq& operator=(const TAdventureGetTeamArrReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureGetTeamArrReq& default_instance();

  void Swap(TAdventureGetTeamArrReq* other);

  // implements Message ----------------------------------------------

  TAdventureGetTeamArrReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureGetTeamArrReq& from);
  void MergeFrom(const TAdventureGetTeamArrReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 SelectType = 1;
  inline bool has_selecttype() const;
  inline void clear_selecttype();
  static const int kSelectTypeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureGetTeamArrReq</name>
  	<Function>
  		<name>selecttype</name>
  		<replaceName>SelectType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_selecttype</name>
  		<replaceName>SelectType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_selecttype</name>
  		<replaceName>SelectType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 selecttype() const;
  inline void set_selecttype(::google::protobuf::uint32 value);

  // optional uint32 RoomId = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureGetTeamArrReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 roomid() const;
  inline void set_roomid(::google::protobuf::uint32 value);

  // optional uint32 Num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAdventureGetTeamArrReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureGetTeamArrReq)
 private:
  inline void set_has_selecttype();
  inline void clear_has_selecttype();
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 selecttype_;
  ::google::protobuf::uint32 roomid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureGetTeamArrReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureGetTeamArrRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureGetTeamArrRsp : public ::google::protobuf::Message {
 public:
  TAdventureGetTeamArrRsp();
  virtual ~TAdventureGetTeamArrRsp();

  TAdventureGetTeamArrRsp(const TAdventureGetTeamArrRsp& from);

  inline TAdventureGetTeamArrRsp& operator=(const TAdventureGetTeamArrRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureGetTeamArrRsp& default_instance();

  void Swap(TAdventureGetTeamArrRsp* other);

  // implements Message ----------------------------------------------

  TAdventureGetTeamArrRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureGetTeamArrRsp& from);
  void MergeFrom(const TAdventureGetTeamArrRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TAdventureSimpleTeamInfo TeamArr = 1;
  inline int teamarr_size() const;
  inline void clear_teamarr();
  static const int kTeamArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureGetTeamArrRsp</name>
  	<Function>
  		<name>teamarr</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_teamarr</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_teamarr</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamarr</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>teamarr_size</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAdventureSimpleTeamInfo& teamarr(int index) const;
  inline ::pb::TAdventureSimpleTeamInfo* mutable_teamarr(int index);
  inline ::pb::TAdventureSimpleTeamInfo* add_teamarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAdventureSimpleTeamInfo >&
      teamarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAdventureSimpleTeamInfo >*
      mutable_teamarr();

  // @@protoc_insertion_point(class_scope:pb.TAdventureGetTeamArrRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAdventureSimpleTeamInfo > teamarr_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureGetTeamArrRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureCreateTeamReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureCreateTeamReq : public ::google::protobuf::Message {
 public:
  TAdventureCreateTeamReq();
  virtual ~TAdventureCreateTeamReq();

  TAdventureCreateTeamReq(const TAdventureCreateTeamReq& from);

  inline TAdventureCreateTeamReq& operator=(const TAdventureCreateTeamReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureCreateTeamReq& default_instance();

  void Swap(TAdventureCreateTeamReq* other);

  // implements Message ----------------------------------------------

  TAdventureCreateTeamReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureCreateTeamReq& from);
  void MergeFrom(const TAdventureCreateTeamReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 IndexId = 1;
  inline bool has_indexid() const;
  inline void clear_indexid();
  static const int kIndexIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureCreateTeamReq</name>
  	<Function>
  		<name>indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_indexid</name>
  		<replaceName>IndexId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 indexid() const;
  inline void set_indexid(::google::protobuf::uint64 value);

  // optional .pb.EAdventureTeamPrivateStatus TeamStatus = 2;
  inline bool has_teamstatus() const;
  inline void clear_teamstatus();
  static const int kTeamStatusFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureCreateTeamReq</name>
  	<Function>
  		<name>teamstatus</name>
  		<replaceName>TeamStatus</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamstatus</name>
  		<replaceName>TeamStatus</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamstatus</name>
  		<replaceName>TeamStatus</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EAdventureTeamPrivateStatus teamstatus() const;
  inline void set_teamstatus(::pb::EAdventureTeamPrivateStatus value);

  // optional .pb.EAdventureType AdventureType = 3;
  inline bool has_adventuretype() const;
  inline void clear_adventuretype();
  static const int kAdventureTypeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAdventureCreateTeamReq</name>
  	<Function>
  		<name>adventuretype</name>
  		<replaceName>AdventureType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_adventuretype</name>
  		<replaceName>AdventureType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_adventuretype</name>
  		<replaceName>AdventureType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EAdventureType adventuretype() const;
  inline void set_adventuretype(::pb::EAdventureType value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureCreateTeamReq)
 private:
  inline void set_has_indexid();
  inline void clear_has_indexid();
  inline void set_has_teamstatus();
  inline void clear_has_teamstatus();
  inline void set_has_adventuretype();
  inline void clear_has_adventuretype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 indexid_;
  int teamstatus_;
  int adventuretype_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureCreateTeamReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureCreateTeamRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureCreateTeamRsp : public ::google::protobuf::Message {
 public:
  TAdventureCreateTeamRsp();
  virtual ~TAdventureCreateTeamRsp();

  TAdventureCreateTeamRsp(const TAdventureCreateTeamRsp& from);

  inline TAdventureCreateTeamRsp& operator=(const TAdventureCreateTeamRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureCreateTeamRsp& default_instance();

  void Swap(TAdventureCreateTeamRsp* other);

  // implements Message ----------------------------------------------

  TAdventureCreateTeamRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureCreateTeamRsp& from);
  void MergeFrom(const TAdventureCreateTeamRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TAdventureTeamInfo TeamInfo = 1;
  inline bool has_teaminfo() const;
  inline void clear_teaminfo();
  static const int kTeamInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureCreateTeamRsp</name>
  	<Function>
  		<name>teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAdventureTeamInfo& teaminfo() const;
  inline ::pb::TAdventureTeamInfo* mutable_teaminfo();
  inline ::pb::TAdventureTeamInfo* release_teaminfo();
  inline void set_allocated_teaminfo(::pb::TAdventureTeamInfo* teaminfo);

  // @@protoc_insertion_point(class_scope:pb.TAdventureCreateTeamRsp)
 private:
  inline void set_has_teaminfo();
  inline void clear_has_teaminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TAdventureTeamInfo* teaminfo_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureCreateTeamRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureTeamInviteReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureTeamInviteReq : public ::google::protobuf::Message {
 public:
  TAdventureTeamInviteReq();
  virtual ~TAdventureTeamInviteReq();

  TAdventureTeamInviteReq(const TAdventureTeamInviteReq& from);

  inline TAdventureTeamInviteReq& operator=(const TAdventureTeamInviteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureTeamInviteReq& default_instance();

  void Swap(TAdventureTeamInviteReq* other);

  // implements Message ----------------------------------------------

  TAdventureTeamInviteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureTeamInviteReq& from);
  void MergeFrom(const TAdventureTeamInviteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamInviteReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamInviteReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // repeated uint64 UidArr = 3;
  inline int uidarr_size() const;
  inline void clear_uidarr();
  static const int kUidArrFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamInviteReq</name>
  	<Function>
  		<name>uidarr</name>
  		<replaceName>UidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_uidarr</name>
  		<replaceName>UidArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_uidarr</name>
  		<replaceName>UidArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_uidarr</name>
  		<replaceName>UidArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>uidarr_size</name>
  		<replaceName>UidArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 uidarr(int index) const;
  inline void set_uidarr(int index, ::google::protobuf::uint64 value);
  inline void add_uidarr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      uidarr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_uidarr();

  // @@protoc_insertion_point(class_scope:pb.TAdventureTeamInviteReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > uidarr_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureTeamInviteReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureJoinTeamReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureJoinTeamReq : public ::google::protobuf::Message {
 public:
  TAdventureJoinTeamReq();
  virtual ~TAdventureJoinTeamReq();

  TAdventureJoinTeamReq(const TAdventureJoinTeamReq& from);

  inline TAdventureJoinTeamReq& operator=(const TAdventureJoinTeamReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureJoinTeamReq& default_instance();

  void Swap(TAdventureJoinTeamReq* other);

  // implements Message ----------------------------------------------

  TAdventureJoinTeamReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureJoinTeamReq& from);
  void MergeFrom(const TAdventureJoinTeamReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureJoinTeamReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureJoinTeamReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.ETeamMode JoinMode = 3;
  inline bool has_joinmode() const;
  inline void clear_joinmode();
  static const int kJoinModeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAdventureJoinTeamReq</name>
  	<Function>
  		<name>joinmode</name>
  		<replaceName>JoinMode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_joinmode</name>
  		<replaceName>JoinMode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_joinmode</name>
  		<replaceName>JoinMode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ETeamMode joinmode() const;
  inline void set_joinmode(::pb::ETeamMode value);

  // optional bool CheckPrivate = 4;
  inline bool has_checkprivate() const;
  inline void clear_checkprivate();
  static const int kCheckPrivateFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAdventureJoinTeamReq</name>
  	<Function>
  		<name>checkprivate</name>
  		<replaceName>CheckPrivate</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_checkprivate</name>
  		<replaceName>CheckPrivate</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_checkprivate</name>
  		<replaceName>CheckPrivate</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool checkprivate() const;
  inline void set_checkprivate(bool value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureJoinTeamReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_joinmode();
  inline void clear_has_joinmode();
  inline void set_has_checkprivate();
  inline void clear_has_checkprivate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  int joinmode_;
  bool checkprivate_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureJoinTeamReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureJoinTeamRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureJoinTeamRsp : public ::google::protobuf::Message {
 public:
  TAdventureJoinTeamRsp();
  virtual ~TAdventureJoinTeamRsp();

  TAdventureJoinTeamRsp(const TAdventureJoinTeamRsp& from);

  inline TAdventureJoinTeamRsp& operator=(const TAdventureJoinTeamRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureJoinTeamRsp& default_instance();

  void Swap(TAdventureJoinTeamRsp* other);

  // implements Message ----------------------------------------------

  TAdventureJoinTeamRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureJoinTeamRsp& from);
  void MergeFrom(const TAdventureJoinTeamRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.EJoinTeamErrorCode ErrorCode = 1;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureJoinTeamRsp</name>
  	<Function>
  		<name>errorcode</name>
  		<replaceName>ErrorCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_errorcode</name>
  		<replaceName>ErrorCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_errorcode</name>
  		<replaceName>ErrorCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EJoinTeamErrorCode errorcode() const;
  inline void set_errorcode(::pb::EJoinTeamErrorCode value);

  // optional .pb.TAdventureTeamInfo TeamInfo = 2;
  inline bool has_teaminfo() const;
  inline void clear_teaminfo();
  static const int kTeamInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureJoinTeamRsp</name>
  	<Function>
  		<name>teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teaminfo</name>
  		<replaceName>TeamInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAdventureTeamInfo& teaminfo() const;
  inline ::pb::TAdventureTeamInfo* mutable_teaminfo();
  inline ::pb::TAdventureTeamInfo* release_teaminfo();
  inline void set_allocated_teaminfo(::pb::TAdventureTeamInfo* teaminfo);

  // @@protoc_insertion_point(class_scope:pb.TAdventureJoinTeamRsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_teaminfo();
  inline void clear_has_teaminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TAdventureTeamInfo* teaminfo_;
  int errorcode_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureJoinTeamRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureKickReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureKickReq : public ::google::protobuf::Message {
 public:
  TAdventureKickReq();
  virtual ~TAdventureKickReq();

  TAdventureKickReq(const TAdventureKickReq& from);

  inline TAdventureKickReq& operator=(const TAdventureKickReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureKickReq& default_instance();

  void Swap(TAdventureKickReq* other);

  // implements Message ----------------------------------------------

  TAdventureKickReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureKickReq& from);
  void MergeFrom(const TAdventureKickReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureKickReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureKickReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint64 KickUid = 3;
  inline bool has_kickuid() const;
  inline void clear_kickuid();
  static const int kKickUidFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAdventureKickReq</name>
  	<Function>
  		<name>kickuid</name>
  		<replaceName>KickUid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_kickuid</name>
  		<replaceName>KickUid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_kickuid</name>
  		<replaceName>KickUid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 kickuid() const;
  inline void set_kickuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureKickReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_kickuid();
  inline void clear_has_kickuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 kickuid_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureKickReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureQuitTeamReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureQuitTeamReq : public ::google::protobuf::Message {
 public:
  TAdventureQuitTeamReq();
  virtual ~TAdventureQuitTeamReq();

  TAdventureQuitTeamReq(const TAdventureQuitTeamReq& from);

  inline TAdventureQuitTeamReq& operator=(const TAdventureQuitTeamReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureQuitTeamReq& default_instance();

  void Swap(TAdventureQuitTeamReq* other);

  // implements Message ----------------------------------------------

  TAdventureQuitTeamReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureQuitTeamReq& from);
  void MergeFrom(const TAdventureQuitTeamReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureQuitTeamReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureQuitTeamReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureQuitTeamReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureQuitTeamReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureTeamStartReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureTeamStartReq : public ::google::protobuf::Message {
 public:
  TAdventureTeamStartReq();
  virtual ~TAdventureTeamStartReq();

  TAdventureTeamStartReq(const TAdventureTeamStartReq& from);

  inline TAdventureTeamStartReq& operator=(const TAdventureTeamStartReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureTeamStartReq& default_instance();

  void Swap(TAdventureTeamStartReq* other);

  // implements Message ----------------------------------------------

  TAdventureTeamStartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureTeamStartReq& from);
  void MergeFrom(const TAdventureTeamStartReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamStartReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamStartReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureTeamStartReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureTeamStartReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureInviteNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureInviteNotify : public ::google::protobuf::Message {
 public:
  TAdventureInviteNotify();
  virtual ~TAdventureInviteNotify();

  TAdventureInviteNotify(const TAdventureInviteNotify& from);

  inline TAdventureInviteNotify& operator=(const TAdventureInviteNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureInviteNotify& default_instance();

  void Swap(TAdventureInviteNotify* other);

  // implements Message ----------------------------------------------

  TAdventureInviteNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureInviteNotify& from);
  void MergeFrom(const TAdventureInviteNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureInviteNotify</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureInviteNotify</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureInviteNotify)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureInviteNotify* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureGetInviteListReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureGetInviteListReq : public ::google::protobuf::Message {
 public:
  TAdventureGetInviteListReq();
  virtual ~TAdventureGetInviteListReq();

  TAdventureGetInviteListReq(const TAdventureGetInviteListReq& from);

  inline TAdventureGetInviteListReq& operator=(const TAdventureGetInviteListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureGetInviteListReq& default_instance();

  void Swap(TAdventureGetInviteListReq* other);

  // implements Message ----------------------------------------------

  TAdventureGetInviteListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureGetInviteListReq& from);
  void MergeFrom(const TAdventureGetInviteListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureGetInviteListReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureGetInviteListReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.EAdventureInviteType InviteType = 3;
  inline bool has_invitetype() const;
  inline void clear_invitetype();
  static const int kInviteTypeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAdventureGetInviteListReq</name>
  	<Function>
  		<name>invitetype</name>
  		<replaceName>InviteType</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_invitetype</name>
  		<replaceName>InviteType</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_invitetype</name>
  		<replaceName>InviteType</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EAdventureInviteType invitetype() const;
  inline void set_invitetype(::pb::EAdventureInviteType value);

  // optional uint32 Num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TAdventureGetInviteListReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 Offset = 5;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TAdventureGetInviteListReq</name>
  	<Function>
  		<name>offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_offset</name>
  		<replaceName>Offset</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureGetInviteListReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_invitetype();
  inline void clear_has_invitetype();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_offset();
  inline void clear_has_offset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  int invitetype_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 offset_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureGetInviteListReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureGetInviteListRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureGetInviteListRsp : public ::google::protobuf::Message {
 public:
  TAdventureGetInviteListRsp();
  virtual ~TAdventureGetInviteListRsp();

  TAdventureGetInviteListRsp(const TAdventureGetInviteListRsp& from);

  inline TAdventureGetInviteListRsp& operator=(const TAdventureGetInviteListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureGetInviteListRsp& default_instance();

  void Swap(TAdventureGetInviteListRsp* other);

  // implements Message ----------------------------------------------

  TAdventureGetInviteListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureGetInviteListRsp& from);
  void MergeFrom(const TAdventureGetInviteListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TUserSimpleInfo UserArr = 1;
  inline int userarr_size() const;
  inline void clear_userarr();
  static const int kUserArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureGetInviteListRsp</name>
  	<Function>
  		<name>userarr</name>
  		<replaceName>UserArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_userarr</name>
  		<replaceName>UserArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_userarr</name>
  		<replaceName>UserArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_userarr</name>
  		<replaceName>UserArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>userarr_size</name>
  		<replaceName>UserArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUserSimpleInfo& userarr(int index) const;
  inline ::pb::TUserSimpleInfo* mutable_userarr(int index);
  inline ::pb::TUserSimpleInfo* add_userarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >&
      userarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >*
      mutable_userarr();

  // @@protoc_insertion_point(class_scope:pb.TAdventureGetInviteListRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo > userarr_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureGetInviteListRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureUniqTeam</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureUniqTeam : public ::google::protobuf::Message {
 public:
  TAdventureUniqTeam();
  virtual ~TAdventureUniqTeam();

  TAdventureUniqTeam(const TAdventureUniqTeam& from);

  inline TAdventureUniqTeam& operator=(const TAdventureUniqTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureUniqTeam& default_instance();

  void Swap(TAdventureUniqTeam* other);

  // implements Message ----------------------------------------------

  TAdventureUniqTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureUniqTeam& from);
  void MergeFrom(const TAdventureUniqTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureUniqTeam</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureUniqTeam</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureUniqTeam)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureUniqTeam* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureGetInviteTeamArrReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureGetInviteTeamArrReq : public ::google::protobuf::Message {
 public:
  TAdventureGetInviteTeamArrReq();
  virtual ~TAdventureGetInviteTeamArrReq();

  TAdventureGetInviteTeamArrReq(const TAdventureGetInviteTeamArrReq& from);

  inline TAdventureGetInviteTeamArrReq& operator=(const TAdventureGetInviteTeamArrReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureGetInviteTeamArrReq& default_instance();

  void Swap(TAdventureGetInviteTeamArrReq* other);

  // implements Message ----------------------------------------------

  TAdventureGetInviteTeamArrReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureGetInviteTeamArrReq& from);
  void MergeFrom(const TAdventureGetInviteTeamArrReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TAdventureUniqTeam TeamArr = 1;
  inline int teamarr_size() const;
  inline void clear_teamarr();
  static const int kTeamArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureGetInviteTeamArrReq</name>
  	<Function>
  		<name>teamarr</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_teamarr</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_teamarr</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamarr</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>teamarr_size</name>
  		<replaceName>TeamArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAdventureUniqTeam& teamarr(int index) const;
  inline ::pb::TAdventureUniqTeam* mutable_teamarr(int index);
  inline ::pb::TAdventureUniqTeam* add_teamarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAdventureUniqTeam >&
      teamarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAdventureUniqTeam >*
      mutable_teamarr();

  // @@protoc_insertion_point(class_scope:pb.TAdventureGetInviteTeamArrReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAdventureUniqTeam > teamarr_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureGetInviteTeamArrReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureGetInviteTeamArrRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureGetInviteTeamArrRsp : public ::google::protobuf::Message {
 public:
  TAdventureGetInviteTeamArrRsp();
  virtual ~TAdventureGetInviteTeamArrRsp();

  TAdventureGetInviteTeamArrRsp(const TAdventureGetInviteTeamArrRsp& from);

  inline TAdventureGetInviteTeamArrRsp& operator=(const TAdventureGetInviteTeamArrRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureGetInviteTeamArrRsp& default_instance();

  void Swap(TAdventureGetInviteTeamArrRsp* other);

  // implements Message ----------------------------------------------

  TAdventureGetInviteTeamArrRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureGetInviteTeamArrRsp& from);
  void MergeFrom(const TAdventureGetInviteTeamArrRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TAdventureSimpleTeamInfo TeamInfoArr = 1;
  inline int teaminfoarr_size() const;
  inline void clear_teaminfoarr();
  static const int kTeamInfoArrFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureGetInviteTeamArrRsp</name>
  	<Function>
  		<name>teaminfoarr</name>
  		<replaceName>TeamInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_teaminfoarr</name>
  		<replaceName>TeamInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_teaminfoarr</name>
  		<replaceName>TeamInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teaminfoarr</name>
  		<replaceName>TeamInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>teaminfoarr_size</name>
  		<replaceName>TeamInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TAdventureSimpleTeamInfo& teaminfoarr(int index) const;
  inline ::pb::TAdventureSimpleTeamInfo* mutable_teaminfoarr(int index);
  inline ::pb::TAdventureSimpleTeamInfo* add_teaminfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TAdventureSimpleTeamInfo >&
      teaminfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TAdventureSimpleTeamInfo >*
      mutable_teaminfoarr();

  // @@protoc_insertion_point(class_scope:pb.TAdventureGetInviteTeamArrRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TAdventureSimpleTeamInfo > teaminfoarr_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureGetInviteTeamArrRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureChangeTeamModeReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureChangeTeamModeReq : public ::google::protobuf::Message {
 public:
  TAdventureChangeTeamModeReq();
  virtual ~TAdventureChangeTeamModeReq();

  TAdventureChangeTeamModeReq(const TAdventureChangeTeamModeReq& from);

  inline TAdventureChangeTeamModeReq& operator=(const TAdventureChangeTeamModeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureChangeTeamModeReq& default_instance();

  void Swap(TAdventureChangeTeamModeReq* other);

  // implements Message ----------------------------------------------

  TAdventureChangeTeamModeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureChangeTeamModeReq& from);
  void MergeFrom(const TAdventureChangeTeamModeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureChangeTeamModeReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureChangeTeamModeReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.ETeamMode TeamMode = 3;
  inline bool has_teammode() const;
  inline void clear_teammode();
  static const int kTeamModeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAdventureChangeTeamModeReq</name>
  	<Function>
  		<name>teammode</name>
  		<replaceName>TeamMode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teammode</name>
  		<replaceName>TeamMode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teammode</name>
  		<replaceName>TeamMode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ETeamMode teammode() const;
  inline void set_teammode(::pb::ETeamMode value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureChangeTeamModeReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_teammode();
  inline void clear_has_teammode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  int teammode_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureChangeTeamModeReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureChangeTeamModeRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureChangeTeamModeRsp : public ::google::protobuf::Message {
 public:
  TAdventureChangeTeamModeRsp();
  virtual ~TAdventureChangeTeamModeRsp();

  TAdventureChangeTeamModeRsp(const TAdventureChangeTeamModeRsp& from);

  inline TAdventureChangeTeamModeRsp& operator=(const TAdventureChangeTeamModeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureChangeTeamModeRsp& default_instance();

  void Swap(TAdventureChangeTeamModeRsp* other);

  // implements Message ----------------------------------------------

  TAdventureChangeTeamModeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureChangeTeamModeRsp& from);
  void MergeFrom(const TAdventureChangeTeamModeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.EChangeTeamModeRetCode RetCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureChangeTeamModeRsp</name>
  	<Function>
  		<name>retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EChangeTeamModeRetCode retcode() const;
  inline void set_retcode(::pb::EChangeTeamModeRetCode value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureChangeTeamModeRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int retcode_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureChangeTeamModeRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureKickOrQuitTeamRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureKickOrQuitTeamRsp : public ::google::protobuf::Message {
 public:
  TAdventureKickOrQuitTeamRsp();
  virtual ~TAdventureKickOrQuitTeamRsp();

  TAdventureKickOrQuitTeamRsp(const TAdventureKickOrQuitTeamRsp& from);

  inline TAdventureKickOrQuitTeamRsp& operator=(const TAdventureKickOrQuitTeamRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureKickOrQuitTeamRsp& default_instance();

  void Swap(TAdventureKickOrQuitTeamRsp* other);

  // implements Message ----------------------------------------------

  TAdventureKickOrQuitTeamRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureKickOrQuitTeamRsp& from);
  void MergeFrom(const TAdventureKickOrQuitTeamRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.EKickOrQuitTeamRetCode RetCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureKickOrQuitTeamRsp</name>
  	<Function>
  		<name>retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EKickOrQuitTeamRetCode retcode() const;
  inline void set_retcode(::pb::EKickOrQuitTeamRetCode value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureKickOrQuitTeamRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int retcode_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureKickOrQuitTeamRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureTeamStartRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureTeamStartRsp : public ::google::protobuf::Message {
 public:
  TAdventureTeamStartRsp();
  virtual ~TAdventureTeamStartRsp();

  TAdventureTeamStartRsp(const TAdventureTeamStartRsp& from);

  inline TAdventureTeamStartRsp& operator=(const TAdventureTeamStartRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureTeamStartRsp& default_instance();

  void Swap(TAdventureTeamStartRsp* other);

  // implements Message ----------------------------------------------

  TAdventureTeamStartRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureTeamStartRsp& from);
  void MergeFrom(const TAdventureTeamStartRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.ETeamStartRetCode RetCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureTeamStartRsp</name>
  	<Function>
  		<name>retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::ETeamStartRetCode retcode() const;
  inline void set_retcode(::pb::ETeamStartRetCode value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureTeamStartRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int retcode_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureTeamStartRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureSendTeamInviteMsgReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureSendTeamInviteMsgReq : public ::google::protobuf::Message {
 public:
  TAdventureSendTeamInviteMsgReq();
  virtual ~TAdventureSendTeamInviteMsgReq();

  TAdventureSendTeamInviteMsgReq(const TAdventureSendTeamInviteMsgReq& from);

  inline TAdventureSendTeamInviteMsgReq& operator=(const TAdventureSendTeamInviteMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureSendTeamInviteMsgReq& default_instance();

  void Swap(TAdventureSendTeamInviteMsgReq* other);

  // implements Message ----------------------------------------------

  TAdventureSendTeamInviteMsgReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureSendTeamInviteMsgReq& from);
  void MergeFrom(const TAdventureSendTeamInviteMsgReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSendTeamInviteMsgReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSendTeamInviteMsgReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureSendTeamInviteMsgReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureSendTeamInviteMsgReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureSetTeamMemberStatusReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureSetTeamMemberStatusReq : public ::google::protobuf::Message {
 public:
  TAdventureSetTeamMemberStatusReq();
  virtual ~TAdventureSetTeamMemberStatusReq();

  TAdventureSetTeamMemberStatusReq(const TAdventureSetTeamMemberStatusReq& from);

  inline TAdventureSetTeamMemberStatusReq& operator=(const TAdventureSetTeamMemberStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureSetTeamMemberStatusReq& default_instance();

  void Swap(TAdventureSetTeamMemberStatusReq* other);

  // implements Message ----------------------------------------------

  TAdventureSetTeamMemberStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureSetTeamMemberStatusReq& from);
  void MergeFrom(const TAdventureSetTeamMemberStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSetTeamMemberStatusReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSetTeamMemberStatusReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.EHallMemberReadyStatus MemberStatus = 3;
  inline bool has_memberstatus() const;
  inline void clear_memberstatus();
  static const int kMemberStatusFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSetTeamMemberStatusReq</name>
  	<Function>
  		<name>memberstatus</name>
  		<replaceName>MemberStatus</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_memberstatus</name>
  		<replaceName>MemberStatus</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_memberstatus</name>
  		<replaceName>MemberStatus</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EHallMemberReadyStatus memberstatus() const;
  inline void set_memberstatus(::pb::EHallMemberReadyStatus value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureSetTeamMemberStatusReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_memberstatus();
  inline void clear_has_memberstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  int memberstatus_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureSetTeamMemberStatusReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureSetTeamMemberStatusRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureSetTeamMemberStatusRsp : public ::google::protobuf::Message {
 public:
  TAdventureSetTeamMemberStatusRsp();
  virtual ~TAdventureSetTeamMemberStatusRsp();

  TAdventureSetTeamMemberStatusRsp(const TAdventureSetTeamMemberStatusRsp& from);

  inline TAdventureSetTeamMemberStatusRsp& operator=(const TAdventureSetTeamMemberStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureSetTeamMemberStatusRsp& default_instance();

  void Swap(TAdventureSetTeamMemberStatusRsp* other);

  // implements Message ----------------------------------------------

  TAdventureSetTeamMemberStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureSetTeamMemberStatusRsp& from);
  void MergeFrom(const TAdventureSetTeamMemberStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.EChangeTeamModeRetCode RetCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSetTeamMemberStatusRsp</name>
  	<Function>
  		<name>retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EChangeTeamModeRetCode retcode() const;
  inline void set_retcode(::pb::EChangeTeamModeRetCode value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureSetTeamMemberStatusRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int retcode_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureSetTeamMemberStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureSetTeamStatusReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureSetTeamStatusReq : public ::google::protobuf::Message {
 public:
  TAdventureSetTeamStatusReq();
  virtual ~TAdventureSetTeamStatusReq();

  TAdventureSetTeamStatusReq(const TAdventureSetTeamStatusReq& from);

  inline TAdventureSetTeamStatusReq& operator=(const TAdventureSetTeamStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureSetTeamStatusReq& default_instance();

  void Swap(TAdventureSetTeamStatusReq* other);

  // implements Message ----------------------------------------------

  TAdventureSetTeamStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureSetTeamStatusReq& from);
  void MergeFrom(const TAdventureSetTeamStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 RoomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSetTeamStatusReq</name>
  	<Function>
  		<name>roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_roomid</name>
  		<replaceName>RoomId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // optional uint64 TeamId = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSetTeamStatusReq</name>
  	<Function>
  		<name>teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamid</name>
  		<replaceName>TeamId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .pb.EHallTeamType TeamStatus = 3;
  inline bool has_teamstatus() const;
  inline void clear_teamstatus();
  static const int kTeamStatusFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSetTeamStatusReq</name>
  	<Function>
  		<name>teamstatus</name>
  		<replaceName>TeamStatus</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_teamstatus</name>
  		<replaceName>TeamStatus</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_teamstatus</name>
  		<replaceName>TeamStatus</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EHallTeamType teamstatus() const;
  inline void set_teamstatus(::pb::EHallTeamType value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureSetTeamStatusReq)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_teamstatus();
  inline void clear_has_teamstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 teamid_;
  int teamstatus_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureSetTeamStatusReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TAdventureSetTeamStatusRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AdventureTeam.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TAdventureSetTeamStatusRsp : public ::google::protobuf::Message {
 public:
  TAdventureSetTeamStatusRsp();
  virtual ~TAdventureSetTeamStatusRsp();

  TAdventureSetTeamStatusRsp(const TAdventureSetTeamStatusRsp& from);

  inline TAdventureSetTeamStatusRsp& operator=(const TAdventureSetTeamStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TAdventureSetTeamStatusRsp& default_instance();

  void Swap(TAdventureSetTeamStatusRsp* other);

  // implements Message ----------------------------------------------

  TAdventureSetTeamStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TAdventureSetTeamStatusRsp& from);
  void MergeFrom(const TAdventureSetTeamStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.EChangeTeamModeRetCode RetCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TAdventureSetTeamStatusRsp</name>
  	<Function>
  		<name>retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_retcode</name>
  		<replaceName>RetCode</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::pb::EChangeTeamModeRetCode retcode() const;
  inline void set_retcode(::pb::EChangeTeamModeRetCode value);

  // @@protoc_insertion_point(class_scope:pb.TAdventureSetTeamStatusRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int retcode_;
  friend void  protobuf_AddDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_AssignDesc_net_2fAdventureTeam_2eproto();
  friend void protobuf_ShutdownFile_net_2fAdventureTeam_2eproto();

  void InitAsDefaultInstance();
  static TAdventureSetTeamStatusRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// TAdventureHallMemberInfoData

// optional .pb.TAdventureUserSimpleInfo UserInfo = 1;
inline bool TAdventureHallMemberInfoData::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureHallMemberInfoData::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureHallMemberInfoData::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureHallMemberInfoData::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TAdventureUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TAdventureUserSimpleInfo& TAdventureHallMemberInfoData::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureHallMemberInfoData.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TAdventureUserSimpleInfo* TAdventureHallMemberInfoData::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TAdventureUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAdventureHallMemberInfoData.UserInfo)
  return userinfo_;
}
inline ::pb::TAdventureUserSimpleInfo* TAdventureHallMemberInfoData::release_userinfo() {
  clear_has_userinfo();
  ::pb::TAdventureUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TAdventureHallMemberInfoData::set_allocated_userinfo(::pb::TAdventureUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAdventureHallMemberInfoData.UserInfo)
}

// optional .pb.ETeamMode MemMode = 2;
inline bool TAdventureHallMemberInfoData::has_memmode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureHallMemberInfoData::set_has_memmode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureHallMemberInfoData::clear_has_memmode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureHallMemberInfoData::clear_memmode() {
  memmode_ = 0;
  clear_has_memmode();
}
inline ::pb::ETeamMode TAdventureHallMemberInfoData::memmode() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureHallMemberInfoData.MemMode)
  return static_cast< ::pb::ETeamMode >(memmode_);
}
inline void TAdventureHallMemberInfoData::set_memmode(::pb::ETeamMode value) {
  assert(::pb::ETeamMode_IsValid(value));
  set_has_memmode();
  memmode_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureHallMemberInfoData.MemMode)
}

// -------------------------------------------------------------------

// TAdventureTeamUserInfo

// optional .pb.TAdventureUserSimpleInfo UserInfo = 1;
inline bool TAdventureTeamUserInfo::has_userinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureTeamUserInfo::set_has_userinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureTeamUserInfo::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureTeamUserInfo::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::pb::TAdventureUserSimpleInfo::Clear();
  clear_has_userinfo();
}
inline const ::pb::TAdventureUserSimpleInfo& TAdventureTeamUserInfo::userinfo() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamUserInfo.UserInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::pb::TAdventureUserSimpleInfo* TAdventureTeamUserInfo::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::pb::TAdventureUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAdventureTeamUserInfo.UserInfo)
  return userinfo_;
}
inline ::pb::TAdventureUserSimpleInfo* TAdventureTeamUserInfo::release_userinfo() {
  clear_has_userinfo();
  ::pb::TAdventureUserSimpleInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void TAdventureTeamUserInfo::set_allocated_userinfo(::pb::TAdventureUserSimpleInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAdventureTeamUserInfo.UserInfo)
}

// optional .pb.ETeamMode MemMode = 2;
inline bool TAdventureTeamUserInfo::has_memmode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureTeamUserInfo::set_has_memmode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureTeamUserInfo::clear_has_memmode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureTeamUserInfo::clear_memmode() {
  memmode_ = 0;
  clear_has_memmode();
}
inline ::pb::ETeamMode TAdventureTeamUserInfo::memmode() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamUserInfo.MemMode)
  return static_cast< ::pb::ETeamMode >(memmode_);
}
inline void TAdventureTeamUserInfo::set_memmode(::pb::ETeamMode value) {
  assert(::pb::ETeamMode_IsValid(value));
  set_has_memmode();
  memmode_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamUserInfo.MemMode)
}

// optional .pb.EHallMemberReadyStatus MemberStatus = 3;
inline bool TAdventureTeamUserInfo::has_memberstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAdventureTeamUserInfo::set_has_memberstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAdventureTeamUserInfo::clear_has_memberstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAdventureTeamUserInfo::clear_memberstatus() {
  memberstatus_ = 1;
  clear_has_memberstatus();
}
inline ::pb::EHallMemberReadyStatus TAdventureTeamUserInfo::memberstatus() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamUserInfo.MemberStatus)
  return static_cast< ::pb::EHallMemberReadyStatus >(memberstatus_);
}
inline void TAdventureTeamUserInfo::set_memberstatus(::pb::EHallMemberReadyStatus value) {
  assert(::pb::EHallMemberReadyStatus_IsValid(value));
  set_has_memberstatus();
  memberstatus_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamUserInfo.MemberStatus)
}

// -------------------------------------------------------------------

// TAdventureTeamSpecificInfo

// optional uint64 MapId = 1;
inline bool TAdventureTeamSpecificInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureTeamSpecificInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureTeamSpecificInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureTeamSpecificInfo::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 TAdventureTeamSpecificInfo::mapid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamSpecificInfo.MapId)
  return mapid_;
}
inline void TAdventureTeamSpecificInfo::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamSpecificInfo.MapId)
}

// optional uint32 MapEntryId = 2;
inline bool TAdventureTeamSpecificInfo::has_mapentryid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureTeamSpecificInfo::set_has_mapentryid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureTeamSpecificInfo::clear_has_mapentryid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureTeamSpecificInfo::clear_mapentryid() {
  mapentryid_ = 0u;
  clear_has_mapentryid();
}
inline ::google::protobuf::uint32 TAdventureTeamSpecificInfo::mapentryid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamSpecificInfo.MapEntryId)
  return mapentryid_;
}
inline void TAdventureTeamSpecificInfo::set_mapentryid(::google::protobuf::uint32 value) {
  set_has_mapentryid();
  mapentryid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamSpecificInfo.MapEntryId)
}

// optional uint64 MapTime = 3;
inline bool TAdventureTeamSpecificInfo::has_maptime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAdventureTeamSpecificInfo::set_has_maptime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAdventureTeamSpecificInfo::clear_has_maptime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAdventureTeamSpecificInfo::clear_maptime() {
  maptime_ = GOOGLE_ULONGLONG(0);
  clear_has_maptime();
}
inline ::google::protobuf::uint64 TAdventureTeamSpecificInfo::maptime() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamSpecificInfo.MapTime)
  return maptime_;
}
inline void TAdventureTeamSpecificInfo::set_maptime(::google::protobuf::uint64 value) {
  set_has_maptime();
  maptime_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamSpecificInfo.MapTime)
}

// optional .pb.EAdventureType AdventureType = 4;
inline bool TAdventureTeamSpecificInfo::has_adventuretype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAdventureTeamSpecificInfo::set_has_adventuretype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAdventureTeamSpecificInfo::clear_has_adventuretype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAdventureTeamSpecificInfo::clear_adventuretype() {
  adventuretype_ = 0;
  clear_has_adventuretype();
}
inline ::pb::EAdventureType TAdventureTeamSpecificInfo::adventuretype() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamSpecificInfo.AdventureType)
  return static_cast< ::pb::EAdventureType >(adventuretype_);
}
inline void TAdventureTeamSpecificInfo::set_adventuretype(::pb::EAdventureType value) {
  assert(::pb::EAdventureType_IsValid(value));
  set_has_adventuretype();
  adventuretype_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamSpecificInfo.AdventureType)
}

// -------------------------------------------------------------------

// TAdventureTeamInfo

// optional uint64 RoomId = 1;
inline bool TAdventureTeamInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureTeamInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureTeamInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureTeamInfo::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureTeamInfo::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamInfo.RoomId)
  return roomid_;
}
inline void TAdventureTeamInfo::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamInfo.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureTeamInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureTeamInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureTeamInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureTeamInfo::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureTeamInfo::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamInfo.TeamId)
  return teamid_;
}
inline void TAdventureTeamInfo::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamInfo.TeamId)
}

// optional uint64 LeaderUid = 3;
inline bool TAdventureTeamInfo::has_leaderuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAdventureTeamInfo::set_has_leaderuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAdventureTeamInfo::clear_has_leaderuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAdventureTeamInfo::clear_leaderuid() {
  leaderuid_ = GOOGLE_ULONGLONG(0);
  clear_has_leaderuid();
}
inline ::google::protobuf::uint64 TAdventureTeamInfo::leaderuid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamInfo.LeaderUid)
  return leaderuid_;
}
inline void TAdventureTeamInfo::set_leaderuid(::google::protobuf::uint64 value) {
  set_has_leaderuid();
  leaderuid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamInfo.LeaderUid)
}

// repeated .pb.TAdventureTeamUserInfo TeamUserArr = 4;
inline int TAdventureTeamInfo::teamuserarr_size() const {
  return teamuserarr_.size();
}
inline void TAdventureTeamInfo::clear_teamuserarr() {
  teamuserarr_.Clear();
}
inline const ::pb::TAdventureTeamUserInfo& TAdventureTeamInfo::teamuserarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamInfo.TeamUserArr)
  return teamuserarr_.Get(index);
}
inline ::pb::TAdventureTeamUserInfo* TAdventureTeamInfo::mutable_teamuserarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAdventureTeamInfo.TeamUserArr)
  return teamuserarr_.Mutable(index);
}
inline ::pb::TAdventureTeamUserInfo* TAdventureTeamInfo::add_teamuserarr() {
  // @@protoc_insertion_point(field_add:pb.TAdventureTeamInfo.TeamUserArr)
  return teamuserarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAdventureTeamUserInfo >&
TAdventureTeamInfo::teamuserarr() const {
  // @@protoc_insertion_point(field_list:pb.TAdventureTeamInfo.TeamUserArr)
  return teamuserarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAdventureTeamUserInfo >*
TAdventureTeamInfo::mutable_teamuserarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAdventureTeamInfo.TeamUserArr)
  return &teamuserarr_;
}

// optional uint32 MapTid = 5;
inline bool TAdventureTeamInfo::has_maptid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TAdventureTeamInfo::set_has_maptid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TAdventureTeamInfo::clear_has_maptid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TAdventureTeamInfo::clear_maptid() {
  maptid_ = 0u;
  clear_has_maptid();
}
inline ::google::protobuf::uint32 TAdventureTeamInfo::maptid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamInfo.MapTid)
  return maptid_;
}
inline void TAdventureTeamInfo::set_maptid(::google::protobuf::uint32 value) {
  set_has_maptid();
  maptid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamInfo.MapTid)
}

// optional .pb.EAdventureTeamPrivateStatus Status = 6;
inline bool TAdventureTeamInfo::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TAdventureTeamInfo::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TAdventureTeamInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TAdventureTeamInfo::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::pb::EAdventureTeamPrivateStatus TAdventureTeamInfo::status() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamInfo.Status)
  return static_cast< ::pb::EAdventureTeamPrivateStatus >(status_);
}
inline void TAdventureTeamInfo::set_status(::pb::EAdventureTeamPrivateStatus value) {
  assert(::pb::EAdventureTeamPrivateStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamInfo.Status)
}

// optional uint64 MapId = 7;
inline bool TAdventureTeamInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TAdventureTeamInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TAdventureTeamInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TAdventureTeamInfo::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 TAdventureTeamInfo::mapid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamInfo.MapId)
  return mapid_;
}
inline void TAdventureTeamInfo::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamInfo.MapId)
}

// -------------------------------------------------------------------

// TAdventureSimpleTeamInfo

// optional uint64 RoomId = 1;
inline bool TAdventureSimpleTeamInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureSimpleTeamInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureSimpleTeamInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureSimpleTeamInfo::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureSimpleTeamInfo::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSimpleTeamInfo.RoomId)
  return roomid_;
}
inline void TAdventureSimpleTeamInfo::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSimpleTeamInfo.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureSimpleTeamInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureSimpleTeamInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureSimpleTeamInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureSimpleTeamInfo::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureSimpleTeamInfo::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSimpleTeamInfo.TeamId)
  return teamid_;
}
inline void TAdventureSimpleTeamInfo::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSimpleTeamInfo.TeamId)
}

// optional .pb.TAdventureUserSimpleInfo LeaderUserInfo = 3;
inline bool TAdventureSimpleTeamInfo::has_leaderuserinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAdventureSimpleTeamInfo::set_has_leaderuserinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAdventureSimpleTeamInfo::clear_has_leaderuserinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAdventureSimpleTeamInfo::clear_leaderuserinfo() {
  if (leaderuserinfo_ != NULL) leaderuserinfo_->::pb::TAdventureUserSimpleInfo::Clear();
  clear_has_leaderuserinfo();
}
inline const ::pb::TAdventureUserSimpleInfo& TAdventureSimpleTeamInfo::leaderuserinfo() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSimpleTeamInfo.LeaderUserInfo)
  return leaderuserinfo_ != NULL ? *leaderuserinfo_ : *default_instance_->leaderuserinfo_;
}
inline ::pb::TAdventureUserSimpleInfo* TAdventureSimpleTeamInfo::mutable_leaderuserinfo() {
  set_has_leaderuserinfo();
  if (leaderuserinfo_ == NULL) leaderuserinfo_ = new ::pb::TAdventureUserSimpleInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAdventureSimpleTeamInfo.LeaderUserInfo)
  return leaderuserinfo_;
}
inline ::pb::TAdventureUserSimpleInfo* TAdventureSimpleTeamInfo::release_leaderuserinfo() {
  clear_has_leaderuserinfo();
  ::pb::TAdventureUserSimpleInfo* temp = leaderuserinfo_;
  leaderuserinfo_ = NULL;
  return temp;
}
inline void TAdventureSimpleTeamInfo::set_allocated_leaderuserinfo(::pb::TAdventureUserSimpleInfo* leaderuserinfo) {
  delete leaderuserinfo_;
  leaderuserinfo_ = leaderuserinfo;
  if (leaderuserinfo) {
    set_has_leaderuserinfo();
  } else {
    clear_has_leaderuserinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAdventureSimpleTeamInfo.LeaderUserInfo)
}

// optional uint32 TeamUserNum = 4;
inline bool TAdventureSimpleTeamInfo::has_teamusernum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAdventureSimpleTeamInfo::set_has_teamusernum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAdventureSimpleTeamInfo::clear_has_teamusernum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAdventureSimpleTeamInfo::clear_teamusernum() {
  teamusernum_ = 0u;
  clear_has_teamusernum();
}
inline ::google::protobuf::uint32 TAdventureSimpleTeamInfo::teamusernum() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSimpleTeamInfo.TeamUserNum)
  return teamusernum_;
}
inline void TAdventureSimpleTeamInfo::set_teamusernum(::google::protobuf::uint32 value) {
  set_has_teamusernum();
  teamusernum_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSimpleTeamInfo.TeamUserNum)
}

// optional uint32 MapTid = 5;
inline bool TAdventureSimpleTeamInfo::has_maptid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TAdventureSimpleTeamInfo::set_has_maptid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TAdventureSimpleTeamInfo::clear_has_maptid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TAdventureSimpleTeamInfo::clear_maptid() {
  maptid_ = 0u;
  clear_has_maptid();
}
inline ::google::protobuf::uint32 TAdventureSimpleTeamInfo::maptid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSimpleTeamInfo.MapTid)
  return maptid_;
}
inline void TAdventureSimpleTeamInfo::set_maptid(::google::protobuf::uint32 value) {
  set_has_maptid();
  maptid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSimpleTeamInfo.MapTid)
}

// optional uint64 MapId = 6;
inline bool TAdventureSimpleTeamInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TAdventureSimpleTeamInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TAdventureSimpleTeamInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TAdventureSimpleTeamInfo::clear_mapid() {
  mapid_ = GOOGLE_ULONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::uint64 TAdventureSimpleTeamInfo::mapid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSimpleTeamInfo.MapId)
  return mapid_;
}
inline void TAdventureSimpleTeamInfo::set_mapid(::google::protobuf::uint64 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSimpleTeamInfo.MapId)
}

// -------------------------------------------------------------------

// TAdventureGetTeamArrReq

// optional uint32 SelectType = 1;
inline bool TAdventureGetTeamArrReq::has_selecttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureGetTeamArrReq::set_has_selecttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureGetTeamArrReq::clear_has_selecttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureGetTeamArrReq::clear_selecttype() {
  selecttype_ = 0u;
  clear_has_selecttype();
}
inline ::google::protobuf::uint32 TAdventureGetTeamArrReq::selecttype() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureGetTeamArrReq.SelectType)
  return selecttype_;
}
inline void TAdventureGetTeamArrReq::set_selecttype(::google::protobuf::uint32 value) {
  set_has_selecttype();
  selecttype_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureGetTeamArrReq.SelectType)
}

// optional uint32 RoomId = 2;
inline bool TAdventureGetTeamArrReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureGetTeamArrReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureGetTeamArrReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureGetTeamArrReq::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
inline ::google::protobuf::uint32 TAdventureGetTeamArrReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureGetTeamArrReq.RoomId)
  return roomid_;
}
inline void TAdventureGetTeamArrReq::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureGetTeamArrReq.RoomId)
}

// optional uint32 Num = 3;
inline bool TAdventureGetTeamArrReq::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAdventureGetTeamArrReq::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAdventureGetTeamArrReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAdventureGetTeamArrReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TAdventureGetTeamArrReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureGetTeamArrReq.Num)
  return num_;
}
inline void TAdventureGetTeamArrReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureGetTeamArrReq.Num)
}

// -------------------------------------------------------------------

// TAdventureGetTeamArrRsp

// repeated .pb.TAdventureSimpleTeamInfo TeamArr = 1;
inline int TAdventureGetTeamArrRsp::teamarr_size() const {
  return teamarr_.size();
}
inline void TAdventureGetTeamArrRsp::clear_teamarr() {
  teamarr_.Clear();
}
inline const ::pb::TAdventureSimpleTeamInfo& TAdventureGetTeamArrRsp::teamarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAdventureGetTeamArrRsp.TeamArr)
  return teamarr_.Get(index);
}
inline ::pb::TAdventureSimpleTeamInfo* TAdventureGetTeamArrRsp::mutable_teamarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAdventureGetTeamArrRsp.TeamArr)
  return teamarr_.Mutable(index);
}
inline ::pb::TAdventureSimpleTeamInfo* TAdventureGetTeamArrRsp::add_teamarr() {
  // @@protoc_insertion_point(field_add:pb.TAdventureGetTeamArrRsp.TeamArr)
  return teamarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAdventureSimpleTeamInfo >&
TAdventureGetTeamArrRsp::teamarr() const {
  // @@protoc_insertion_point(field_list:pb.TAdventureGetTeamArrRsp.TeamArr)
  return teamarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAdventureSimpleTeamInfo >*
TAdventureGetTeamArrRsp::mutable_teamarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAdventureGetTeamArrRsp.TeamArr)
  return &teamarr_;
}

// -------------------------------------------------------------------

// TAdventureCreateTeamReq

// optional uint64 IndexId = 1;
inline bool TAdventureCreateTeamReq::has_indexid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureCreateTeamReq::set_has_indexid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureCreateTeamReq::clear_has_indexid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureCreateTeamReq::clear_indexid() {
  indexid_ = GOOGLE_ULONGLONG(0);
  clear_has_indexid();
}
inline ::google::protobuf::uint64 TAdventureCreateTeamReq::indexid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureCreateTeamReq.IndexId)
  return indexid_;
}
inline void TAdventureCreateTeamReq::set_indexid(::google::protobuf::uint64 value) {
  set_has_indexid();
  indexid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureCreateTeamReq.IndexId)
}

// optional .pb.EAdventureTeamPrivateStatus TeamStatus = 2;
inline bool TAdventureCreateTeamReq::has_teamstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureCreateTeamReq::set_has_teamstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureCreateTeamReq::clear_has_teamstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureCreateTeamReq::clear_teamstatus() {
  teamstatus_ = 1;
  clear_has_teamstatus();
}
inline ::pb::EAdventureTeamPrivateStatus TAdventureCreateTeamReq::teamstatus() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureCreateTeamReq.TeamStatus)
  return static_cast< ::pb::EAdventureTeamPrivateStatus >(teamstatus_);
}
inline void TAdventureCreateTeamReq::set_teamstatus(::pb::EAdventureTeamPrivateStatus value) {
  assert(::pb::EAdventureTeamPrivateStatus_IsValid(value));
  set_has_teamstatus();
  teamstatus_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureCreateTeamReq.TeamStatus)
}

// optional .pb.EAdventureType AdventureType = 3;
inline bool TAdventureCreateTeamReq::has_adventuretype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAdventureCreateTeamReq::set_has_adventuretype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAdventureCreateTeamReq::clear_has_adventuretype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAdventureCreateTeamReq::clear_adventuretype() {
  adventuretype_ = 0;
  clear_has_adventuretype();
}
inline ::pb::EAdventureType TAdventureCreateTeamReq::adventuretype() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureCreateTeamReq.AdventureType)
  return static_cast< ::pb::EAdventureType >(adventuretype_);
}
inline void TAdventureCreateTeamReq::set_adventuretype(::pb::EAdventureType value) {
  assert(::pb::EAdventureType_IsValid(value));
  set_has_adventuretype();
  adventuretype_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureCreateTeamReq.AdventureType)
}

// -------------------------------------------------------------------

// TAdventureCreateTeamRsp

// optional .pb.TAdventureTeamInfo TeamInfo = 1;
inline bool TAdventureCreateTeamRsp::has_teaminfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureCreateTeamRsp::set_has_teaminfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureCreateTeamRsp::clear_has_teaminfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureCreateTeamRsp::clear_teaminfo() {
  if (teaminfo_ != NULL) teaminfo_->::pb::TAdventureTeamInfo::Clear();
  clear_has_teaminfo();
}
inline const ::pb::TAdventureTeamInfo& TAdventureCreateTeamRsp::teaminfo() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureCreateTeamRsp.TeamInfo)
  return teaminfo_ != NULL ? *teaminfo_ : *default_instance_->teaminfo_;
}
inline ::pb::TAdventureTeamInfo* TAdventureCreateTeamRsp::mutable_teaminfo() {
  set_has_teaminfo();
  if (teaminfo_ == NULL) teaminfo_ = new ::pb::TAdventureTeamInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAdventureCreateTeamRsp.TeamInfo)
  return teaminfo_;
}
inline ::pb::TAdventureTeamInfo* TAdventureCreateTeamRsp::release_teaminfo() {
  clear_has_teaminfo();
  ::pb::TAdventureTeamInfo* temp = teaminfo_;
  teaminfo_ = NULL;
  return temp;
}
inline void TAdventureCreateTeamRsp::set_allocated_teaminfo(::pb::TAdventureTeamInfo* teaminfo) {
  delete teaminfo_;
  teaminfo_ = teaminfo;
  if (teaminfo) {
    set_has_teaminfo();
  } else {
    clear_has_teaminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAdventureCreateTeamRsp.TeamInfo)
}

// -------------------------------------------------------------------

// TAdventureTeamInviteReq

// optional uint64 RoomId = 1;
inline bool TAdventureTeamInviteReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureTeamInviteReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureTeamInviteReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureTeamInviteReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureTeamInviteReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamInviteReq.RoomId)
  return roomid_;
}
inline void TAdventureTeamInviteReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamInviteReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureTeamInviteReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureTeamInviteReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureTeamInviteReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureTeamInviteReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureTeamInviteReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamInviteReq.TeamId)
  return teamid_;
}
inline void TAdventureTeamInviteReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamInviteReq.TeamId)
}

// repeated uint64 UidArr = 3;
inline int TAdventureTeamInviteReq::uidarr_size() const {
  return uidarr_.size();
}
inline void TAdventureTeamInviteReq::clear_uidarr() {
  uidarr_.Clear();
}
inline ::google::protobuf::uint64 TAdventureTeamInviteReq::uidarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamInviteReq.UidArr)
  return uidarr_.Get(index);
}
inline void TAdventureTeamInviteReq::set_uidarr(int index, ::google::protobuf::uint64 value) {
  uidarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamInviteReq.UidArr)
}
inline void TAdventureTeamInviteReq::add_uidarr(::google::protobuf::uint64 value) {
  uidarr_.Add(value);
  // @@protoc_insertion_point(field_add:pb.TAdventureTeamInviteReq.UidArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TAdventureTeamInviteReq::uidarr() const {
  // @@protoc_insertion_point(field_list:pb.TAdventureTeamInviteReq.UidArr)
  return uidarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TAdventureTeamInviteReq::mutable_uidarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAdventureTeamInviteReq.UidArr)
  return &uidarr_;
}

// -------------------------------------------------------------------

// TAdventureJoinTeamReq

// optional uint64 RoomId = 1;
inline bool TAdventureJoinTeamReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureJoinTeamReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureJoinTeamReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureJoinTeamReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureJoinTeamReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureJoinTeamReq.RoomId)
  return roomid_;
}
inline void TAdventureJoinTeamReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureJoinTeamReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureJoinTeamReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureJoinTeamReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureJoinTeamReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureJoinTeamReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureJoinTeamReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureJoinTeamReq.TeamId)
  return teamid_;
}
inline void TAdventureJoinTeamReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureJoinTeamReq.TeamId)
}

// optional .pb.ETeamMode JoinMode = 3;
inline bool TAdventureJoinTeamReq::has_joinmode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAdventureJoinTeamReq::set_has_joinmode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAdventureJoinTeamReq::clear_has_joinmode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAdventureJoinTeamReq::clear_joinmode() {
  joinmode_ = 0;
  clear_has_joinmode();
}
inline ::pb::ETeamMode TAdventureJoinTeamReq::joinmode() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureJoinTeamReq.JoinMode)
  return static_cast< ::pb::ETeamMode >(joinmode_);
}
inline void TAdventureJoinTeamReq::set_joinmode(::pb::ETeamMode value) {
  assert(::pb::ETeamMode_IsValid(value));
  set_has_joinmode();
  joinmode_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureJoinTeamReq.JoinMode)
}

// optional bool CheckPrivate = 4;
inline bool TAdventureJoinTeamReq::has_checkprivate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAdventureJoinTeamReq::set_has_checkprivate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAdventureJoinTeamReq::clear_has_checkprivate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAdventureJoinTeamReq::clear_checkprivate() {
  checkprivate_ = false;
  clear_has_checkprivate();
}
inline bool TAdventureJoinTeamReq::checkprivate() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureJoinTeamReq.CheckPrivate)
  return checkprivate_;
}
inline void TAdventureJoinTeamReq::set_checkprivate(bool value) {
  set_has_checkprivate();
  checkprivate_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureJoinTeamReq.CheckPrivate)
}

// -------------------------------------------------------------------

// TAdventureJoinTeamRsp

// optional .pb.EJoinTeamErrorCode ErrorCode = 1;
inline bool TAdventureJoinTeamRsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureJoinTeamRsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureJoinTeamRsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureJoinTeamRsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::pb::EJoinTeamErrorCode TAdventureJoinTeamRsp::errorcode() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureJoinTeamRsp.ErrorCode)
  return static_cast< ::pb::EJoinTeamErrorCode >(errorcode_);
}
inline void TAdventureJoinTeamRsp::set_errorcode(::pb::EJoinTeamErrorCode value) {
  assert(::pb::EJoinTeamErrorCode_IsValid(value));
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureJoinTeamRsp.ErrorCode)
}

// optional .pb.TAdventureTeamInfo TeamInfo = 2;
inline bool TAdventureJoinTeamRsp::has_teaminfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureJoinTeamRsp::set_has_teaminfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureJoinTeamRsp::clear_has_teaminfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureJoinTeamRsp::clear_teaminfo() {
  if (teaminfo_ != NULL) teaminfo_->::pb::TAdventureTeamInfo::Clear();
  clear_has_teaminfo();
}
inline const ::pb::TAdventureTeamInfo& TAdventureJoinTeamRsp::teaminfo() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureJoinTeamRsp.TeamInfo)
  return teaminfo_ != NULL ? *teaminfo_ : *default_instance_->teaminfo_;
}
inline ::pb::TAdventureTeamInfo* TAdventureJoinTeamRsp::mutable_teaminfo() {
  set_has_teaminfo();
  if (teaminfo_ == NULL) teaminfo_ = new ::pb::TAdventureTeamInfo;
  // @@protoc_insertion_point(field_mutable:pb.TAdventureJoinTeamRsp.TeamInfo)
  return teaminfo_;
}
inline ::pb::TAdventureTeamInfo* TAdventureJoinTeamRsp::release_teaminfo() {
  clear_has_teaminfo();
  ::pb::TAdventureTeamInfo* temp = teaminfo_;
  teaminfo_ = NULL;
  return temp;
}
inline void TAdventureJoinTeamRsp::set_allocated_teaminfo(::pb::TAdventureTeamInfo* teaminfo) {
  delete teaminfo_;
  teaminfo_ = teaminfo;
  if (teaminfo) {
    set_has_teaminfo();
  } else {
    clear_has_teaminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TAdventureJoinTeamRsp.TeamInfo)
}

// -------------------------------------------------------------------

// TAdventureKickReq

// optional uint64 RoomId = 1;
inline bool TAdventureKickReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureKickReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureKickReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureKickReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureKickReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureKickReq.RoomId)
  return roomid_;
}
inline void TAdventureKickReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureKickReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureKickReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureKickReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureKickReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureKickReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureKickReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureKickReq.TeamId)
  return teamid_;
}
inline void TAdventureKickReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureKickReq.TeamId)
}

// optional uint64 KickUid = 3;
inline bool TAdventureKickReq::has_kickuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAdventureKickReq::set_has_kickuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAdventureKickReq::clear_has_kickuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAdventureKickReq::clear_kickuid() {
  kickuid_ = GOOGLE_ULONGLONG(0);
  clear_has_kickuid();
}
inline ::google::protobuf::uint64 TAdventureKickReq::kickuid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureKickReq.KickUid)
  return kickuid_;
}
inline void TAdventureKickReq::set_kickuid(::google::protobuf::uint64 value) {
  set_has_kickuid();
  kickuid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureKickReq.KickUid)
}

// -------------------------------------------------------------------

// TAdventureQuitTeamReq

// optional uint64 RoomId = 1;
inline bool TAdventureQuitTeamReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureQuitTeamReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureQuitTeamReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureQuitTeamReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureQuitTeamReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureQuitTeamReq.RoomId)
  return roomid_;
}
inline void TAdventureQuitTeamReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureQuitTeamReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureQuitTeamReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureQuitTeamReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureQuitTeamReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureQuitTeamReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureQuitTeamReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureQuitTeamReq.TeamId)
  return teamid_;
}
inline void TAdventureQuitTeamReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureQuitTeamReq.TeamId)
}

// -------------------------------------------------------------------

// TAdventureTeamStartReq

// optional uint64 RoomId = 1;
inline bool TAdventureTeamStartReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureTeamStartReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureTeamStartReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureTeamStartReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureTeamStartReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamStartReq.RoomId)
  return roomid_;
}
inline void TAdventureTeamStartReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamStartReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureTeamStartReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureTeamStartReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureTeamStartReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureTeamStartReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureTeamStartReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamStartReq.TeamId)
  return teamid_;
}
inline void TAdventureTeamStartReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamStartReq.TeamId)
}

// -------------------------------------------------------------------

// TAdventureInviteNotify

// optional uint64 RoomId = 1;
inline bool TAdventureInviteNotify::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureInviteNotify::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureInviteNotify::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureInviteNotify::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureInviteNotify::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureInviteNotify.RoomId)
  return roomid_;
}
inline void TAdventureInviteNotify::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureInviteNotify.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureInviteNotify::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureInviteNotify::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureInviteNotify::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureInviteNotify::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureInviteNotify::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureInviteNotify.TeamId)
  return teamid_;
}
inline void TAdventureInviteNotify::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureInviteNotify.TeamId)
}

// -------------------------------------------------------------------

// TAdventureGetInviteListReq

// optional uint64 RoomId = 1;
inline bool TAdventureGetInviteListReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureGetInviteListReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureGetInviteListReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureGetInviteListReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureGetInviteListReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureGetInviteListReq.RoomId)
  return roomid_;
}
inline void TAdventureGetInviteListReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureGetInviteListReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureGetInviteListReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureGetInviteListReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureGetInviteListReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureGetInviteListReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureGetInviteListReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureGetInviteListReq.TeamId)
  return teamid_;
}
inline void TAdventureGetInviteListReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureGetInviteListReq.TeamId)
}

// optional .pb.EAdventureInviteType InviteType = 3;
inline bool TAdventureGetInviteListReq::has_invitetype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAdventureGetInviteListReq::set_has_invitetype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAdventureGetInviteListReq::clear_has_invitetype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAdventureGetInviteListReq::clear_invitetype() {
  invitetype_ = 1;
  clear_has_invitetype();
}
inline ::pb::EAdventureInviteType TAdventureGetInviteListReq::invitetype() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureGetInviteListReq.InviteType)
  return static_cast< ::pb::EAdventureInviteType >(invitetype_);
}
inline void TAdventureGetInviteListReq::set_invitetype(::pb::EAdventureInviteType value) {
  assert(::pb::EAdventureInviteType_IsValid(value));
  set_has_invitetype();
  invitetype_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureGetInviteListReq.InviteType)
}

// optional uint32 Num = 4;
inline bool TAdventureGetInviteListReq::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TAdventureGetInviteListReq::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TAdventureGetInviteListReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TAdventureGetInviteListReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TAdventureGetInviteListReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureGetInviteListReq.Num)
  return num_;
}
inline void TAdventureGetInviteListReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureGetInviteListReq.Num)
}

// optional uint32 Offset = 5;
inline bool TAdventureGetInviteListReq::has_offset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TAdventureGetInviteListReq::set_has_offset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TAdventureGetInviteListReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TAdventureGetInviteListReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 TAdventureGetInviteListReq::offset() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureGetInviteListReq.Offset)
  return offset_;
}
inline void TAdventureGetInviteListReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureGetInviteListReq.Offset)
}

// -------------------------------------------------------------------

// TAdventureGetInviteListRsp

// repeated .pb.TUserSimpleInfo UserArr = 1;
inline int TAdventureGetInviteListRsp::userarr_size() const {
  return userarr_.size();
}
inline void TAdventureGetInviteListRsp::clear_userarr() {
  userarr_.Clear();
}
inline const ::pb::TUserSimpleInfo& TAdventureGetInviteListRsp::userarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAdventureGetInviteListRsp.UserArr)
  return userarr_.Get(index);
}
inline ::pb::TUserSimpleInfo* TAdventureGetInviteListRsp::mutable_userarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAdventureGetInviteListRsp.UserArr)
  return userarr_.Mutable(index);
}
inline ::pb::TUserSimpleInfo* TAdventureGetInviteListRsp::add_userarr() {
  // @@protoc_insertion_point(field_add:pb.TAdventureGetInviteListRsp.UserArr)
  return userarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >&
TAdventureGetInviteListRsp::userarr() const {
  // @@protoc_insertion_point(field_list:pb.TAdventureGetInviteListRsp.UserArr)
  return userarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TUserSimpleInfo >*
TAdventureGetInviteListRsp::mutable_userarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAdventureGetInviteListRsp.UserArr)
  return &userarr_;
}

// -------------------------------------------------------------------

// TAdventureUniqTeam

// optional uint64 RoomId = 1;
inline bool TAdventureUniqTeam::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureUniqTeam::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureUniqTeam::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureUniqTeam::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureUniqTeam::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureUniqTeam.RoomId)
  return roomid_;
}
inline void TAdventureUniqTeam::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureUniqTeam.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureUniqTeam::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureUniqTeam::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureUniqTeam::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureUniqTeam::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureUniqTeam::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureUniqTeam.TeamId)
  return teamid_;
}
inline void TAdventureUniqTeam::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureUniqTeam.TeamId)
}

// -------------------------------------------------------------------

// TAdventureGetInviteTeamArrReq

// repeated .pb.TAdventureUniqTeam TeamArr = 1;
inline int TAdventureGetInviteTeamArrReq::teamarr_size() const {
  return teamarr_.size();
}
inline void TAdventureGetInviteTeamArrReq::clear_teamarr() {
  teamarr_.Clear();
}
inline const ::pb::TAdventureUniqTeam& TAdventureGetInviteTeamArrReq::teamarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAdventureGetInviteTeamArrReq.TeamArr)
  return teamarr_.Get(index);
}
inline ::pb::TAdventureUniqTeam* TAdventureGetInviteTeamArrReq::mutable_teamarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAdventureGetInviteTeamArrReq.TeamArr)
  return teamarr_.Mutable(index);
}
inline ::pb::TAdventureUniqTeam* TAdventureGetInviteTeamArrReq::add_teamarr() {
  // @@protoc_insertion_point(field_add:pb.TAdventureGetInviteTeamArrReq.TeamArr)
  return teamarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAdventureUniqTeam >&
TAdventureGetInviteTeamArrReq::teamarr() const {
  // @@protoc_insertion_point(field_list:pb.TAdventureGetInviteTeamArrReq.TeamArr)
  return teamarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAdventureUniqTeam >*
TAdventureGetInviteTeamArrReq::mutable_teamarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAdventureGetInviteTeamArrReq.TeamArr)
  return &teamarr_;
}

// -------------------------------------------------------------------

// TAdventureGetInviteTeamArrRsp

// repeated .pb.TAdventureSimpleTeamInfo TeamInfoArr = 1;
inline int TAdventureGetInviteTeamArrRsp::teaminfoarr_size() const {
  return teaminfoarr_.size();
}
inline void TAdventureGetInviteTeamArrRsp::clear_teaminfoarr() {
  teaminfoarr_.Clear();
}
inline const ::pb::TAdventureSimpleTeamInfo& TAdventureGetInviteTeamArrRsp::teaminfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TAdventureGetInviteTeamArrRsp.TeamInfoArr)
  return teaminfoarr_.Get(index);
}
inline ::pb::TAdventureSimpleTeamInfo* TAdventureGetInviteTeamArrRsp::mutable_teaminfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TAdventureGetInviteTeamArrRsp.TeamInfoArr)
  return teaminfoarr_.Mutable(index);
}
inline ::pb::TAdventureSimpleTeamInfo* TAdventureGetInviteTeamArrRsp::add_teaminfoarr() {
  // @@protoc_insertion_point(field_add:pb.TAdventureGetInviteTeamArrRsp.TeamInfoArr)
  return teaminfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TAdventureSimpleTeamInfo >&
TAdventureGetInviteTeamArrRsp::teaminfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TAdventureGetInviteTeamArrRsp.TeamInfoArr)
  return teaminfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TAdventureSimpleTeamInfo >*
TAdventureGetInviteTeamArrRsp::mutable_teaminfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TAdventureGetInviteTeamArrRsp.TeamInfoArr)
  return &teaminfoarr_;
}

// -------------------------------------------------------------------

// TAdventureChangeTeamModeReq

// optional uint64 RoomId = 1;
inline bool TAdventureChangeTeamModeReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureChangeTeamModeReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureChangeTeamModeReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureChangeTeamModeReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureChangeTeamModeReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureChangeTeamModeReq.RoomId)
  return roomid_;
}
inline void TAdventureChangeTeamModeReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureChangeTeamModeReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureChangeTeamModeReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureChangeTeamModeReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureChangeTeamModeReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureChangeTeamModeReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureChangeTeamModeReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureChangeTeamModeReq.TeamId)
  return teamid_;
}
inline void TAdventureChangeTeamModeReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureChangeTeamModeReq.TeamId)
}

// optional .pb.ETeamMode TeamMode = 3;
inline bool TAdventureChangeTeamModeReq::has_teammode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAdventureChangeTeamModeReq::set_has_teammode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAdventureChangeTeamModeReq::clear_has_teammode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAdventureChangeTeamModeReq::clear_teammode() {
  teammode_ = 0;
  clear_has_teammode();
}
inline ::pb::ETeamMode TAdventureChangeTeamModeReq::teammode() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureChangeTeamModeReq.TeamMode)
  return static_cast< ::pb::ETeamMode >(teammode_);
}
inline void TAdventureChangeTeamModeReq::set_teammode(::pb::ETeamMode value) {
  assert(::pb::ETeamMode_IsValid(value));
  set_has_teammode();
  teammode_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureChangeTeamModeReq.TeamMode)
}

// -------------------------------------------------------------------

// TAdventureChangeTeamModeRsp

// optional .pb.EChangeTeamModeRetCode RetCode = 1;
inline bool TAdventureChangeTeamModeRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureChangeTeamModeRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureChangeTeamModeRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureChangeTeamModeRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::pb::EChangeTeamModeRetCode TAdventureChangeTeamModeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureChangeTeamModeRsp.RetCode)
  return static_cast< ::pb::EChangeTeamModeRetCode >(retcode_);
}
inline void TAdventureChangeTeamModeRsp::set_retcode(::pb::EChangeTeamModeRetCode value) {
  assert(::pb::EChangeTeamModeRetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureChangeTeamModeRsp.RetCode)
}

// -------------------------------------------------------------------

// TAdventureKickOrQuitTeamRsp

// optional .pb.EKickOrQuitTeamRetCode RetCode = 1;
inline bool TAdventureKickOrQuitTeamRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureKickOrQuitTeamRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureKickOrQuitTeamRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureKickOrQuitTeamRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::pb::EKickOrQuitTeamRetCode TAdventureKickOrQuitTeamRsp::retcode() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureKickOrQuitTeamRsp.RetCode)
  return static_cast< ::pb::EKickOrQuitTeamRetCode >(retcode_);
}
inline void TAdventureKickOrQuitTeamRsp::set_retcode(::pb::EKickOrQuitTeamRetCode value) {
  assert(::pb::EKickOrQuitTeamRetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureKickOrQuitTeamRsp.RetCode)
}

// -------------------------------------------------------------------

// TAdventureTeamStartRsp

// optional .pb.ETeamStartRetCode RetCode = 1;
inline bool TAdventureTeamStartRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureTeamStartRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureTeamStartRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureTeamStartRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::pb::ETeamStartRetCode TAdventureTeamStartRsp::retcode() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureTeamStartRsp.RetCode)
  return static_cast< ::pb::ETeamStartRetCode >(retcode_);
}
inline void TAdventureTeamStartRsp::set_retcode(::pb::ETeamStartRetCode value) {
  assert(::pb::ETeamStartRetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureTeamStartRsp.RetCode)
}

// -------------------------------------------------------------------

// TAdventureSendTeamInviteMsgReq

// optional uint64 RoomId = 1;
inline bool TAdventureSendTeamInviteMsgReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureSendTeamInviteMsgReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureSendTeamInviteMsgReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureSendTeamInviteMsgReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureSendTeamInviteMsgReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSendTeamInviteMsgReq.RoomId)
  return roomid_;
}
inline void TAdventureSendTeamInviteMsgReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSendTeamInviteMsgReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureSendTeamInviteMsgReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureSendTeamInviteMsgReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureSendTeamInviteMsgReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureSendTeamInviteMsgReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureSendTeamInviteMsgReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSendTeamInviteMsgReq.TeamId)
  return teamid_;
}
inline void TAdventureSendTeamInviteMsgReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSendTeamInviteMsgReq.TeamId)
}

// -------------------------------------------------------------------

// TAdventureSetTeamMemberStatusReq

// optional uint64 RoomId = 1;
inline bool TAdventureSetTeamMemberStatusReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureSetTeamMemberStatusReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureSetTeamMemberStatusReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureSetTeamMemberStatusReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureSetTeamMemberStatusReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSetTeamMemberStatusReq.RoomId)
  return roomid_;
}
inline void TAdventureSetTeamMemberStatusReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSetTeamMemberStatusReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureSetTeamMemberStatusReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureSetTeamMemberStatusReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureSetTeamMemberStatusReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureSetTeamMemberStatusReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureSetTeamMemberStatusReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSetTeamMemberStatusReq.TeamId)
  return teamid_;
}
inline void TAdventureSetTeamMemberStatusReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSetTeamMemberStatusReq.TeamId)
}

// optional .pb.EHallMemberReadyStatus MemberStatus = 3;
inline bool TAdventureSetTeamMemberStatusReq::has_memberstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAdventureSetTeamMemberStatusReq::set_has_memberstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAdventureSetTeamMemberStatusReq::clear_has_memberstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAdventureSetTeamMemberStatusReq::clear_memberstatus() {
  memberstatus_ = 1;
  clear_has_memberstatus();
}
inline ::pb::EHallMemberReadyStatus TAdventureSetTeamMemberStatusReq::memberstatus() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSetTeamMemberStatusReq.MemberStatus)
  return static_cast< ::pb::EHallMemberReadyStatus >(memberstatus_);
}
inline void TAdventureSetTeamMemberStatusReq::set_memberstatus(::pb::EHallMemberReadyStatus value) {
  assert(::pb::EHallMemberReadyStatus_IsValid(value));
  set_has_memberstatus();
  memberstatus_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSetTeamMemberStatusReq.MemberStatus)
}

// -------------------------------------------------------------------

// TAdventureSetTeamMemberStatusRsp

// optional .pb.EChangeTeamModeRetCode RetCode = 1;
inline bool TAdventureSetTeamMemberStatusRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureSetTeamMemberStatusRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureSetTeamMemberStatusRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureSetTeamMemberStatusRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::pb::EChangeTeamModeRetCode TAdventureSetTeamMemberStatusRsp::retcode() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSetTeamMemberStatusRsp.RetCode)
  return static_cast< ::pb::EChangeTeamModeRetCode >(retcode_);
}
inline void TAdventureSetTeamMemberStatusRsp::set_retcode(::pb::EChangeTeamModeRetCode value) {
  assert(::pb::EChangeTeamModeRetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSetTeamMemberStatusRsp.RetCode)
}

// -------------------------------------------------------------------

// TAdventureSetTeamStatusReq

// optional uint64 RoomId = 1;
inline bool TAdventureSetTeamStatusReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureSetTeamStatusReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureSetTeamStatusReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureSetTeamStatusReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 TAdventureSetTeamStatusReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSetTeamStatusReq.RoomId)
  return roomid_;
}
inline void TAdventureSetTeamStatusReq::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSetTeamStatusReq.RoomId)
}

// optional uint64 TeamId = 2;
inline bool TAdventureSetTeamStatusReq::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TAdventureSetTeamStatusReq::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TAdventureSetTeamStatusReq::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TAdventureSetTeamStatusReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 TAdventureSetTeamStatusReq::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSetTeamStatusReq.TeamId)
  return teamid_;
}
inline void TAdventureSetTeamStatusReq::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSetTeamStatusReq.TeamId)
}

// optional .pb.EHallTeamType TeamStatus = 3;
inline bool TAdventureSetTeamStatusReq::has_teamstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TAdventureSetTeamStatusReq::set_has_teamstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TAdventureSetTeamStatusReq::clear_has_teamstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TAdventureSetTeamStatusReq::clear_teamstatus() {
  teamstatus_ = 1;
  clear_has_teamstatus();
}
inline ::pb::EHallTeamType TAdventureSetTeamStatusReq::teamstatus() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSetTeamStatusReq.TeamStatus)
  return static_cast< ::pb::EHallTeamType >(teamstatus_);
}
inline void TAdventureSetTeamStatusReq::set_teamstatus(::pb::EHallTeamType value) {
  assert(::pb::EHallTeamType_IsValid(value));
  set_has_teamstatus();
  teamstatus_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSetTeamStatusReq.TeamStatus)
}

// -------------------------------------------------------------------

// TAdventureSetTeamStatusRsp

// optional .pb.EChangeTeamModeRetCode RetCode = 1;
inline bool TAdventureSetTeamStatusRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TAdventureSetTeamStatusRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TAdventureSetTeamStatusRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TAdventureSetTeamStatusRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::pb::EChangeTeamModeRetCode TAdventureSetTeamStatusRsp::retcode() const {
  // @@protoc_insertion_point(field_get:pb.TAdventureSetTeamStatusRsp.RetCode)
  return static_cast< ::pb::EChangeTeamModeRetCode >(retcode_);
}
inline void TAdventureSetTeamStatusRsp::set_retcode(::pb::EChangeTeamModeRetCode value) {
  assert(::pb::EChangeTeamModeRetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:pb.TAdventureSetTeamStatusRsp.RetCode)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::ETeamMemberStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ETeamMemberStatus>() {
  return ::pb::ETeamMemberStatus_descriptor();
}
template <> struct is_proto_enum< ::pb::EAdventureTeamPrivateStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EAdventureTeamPrivateStatus>() {
  return ::pb::EAdventureTeamPrivateStatus_descriptor();
}
template <> struct is_proto_enum< ::pb::EJoinTeamErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EJoinTeamErrorCode>() {
  return ::pb::EJoinTeamErrorCode_descriptor();
}
template <> struct is_proto_enum< ::pb::EKickOrQuitTeamRetCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EKickOrQuitTeamRetCode>() {
  return ::pb::EKickOrQuitTeamRetCode_descriptor();
}
template <> struct is_proto_enum< ::pb::ETeamStartRetCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::ETeamStartRetCode>() {
  return ::pb::ETeamStartRetCode_descriptor();
}
template <> struct is_proto_enum< ::pb::EAdventureInviteType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EAdventureInviteType>() {
  return ::pb::EAdventureInviteType_descriptor();
}
template <> struct is_proto_enum< ::pb::EChangeTeamModeRetCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EChangeTeamModeRetCode>() {
  return ::pb::EChangeTeamModeRetCode_descriptor();
}
template <> struct is_proto_enum< ::pb::EAdventureTeamRoomId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EAdventureTeamRoomId>() {
  return ::pb::EAdventureTeamRoomId_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fAdventureTeam_2eproto__INCLUDED
