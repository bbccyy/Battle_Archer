// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module/EffectSpecialEvent.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "module/EffectSpecialEvent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* EffectSpecialEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EffectSpecialEvent_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_module_2fEffectSpecialEvent_2eproto() {
  protobuf_AddDesc_module_2fEffectSpecialEvent_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "module/EffectSpecialEvent.proto");
  GOOGLE_CHECK(file != NULL);
  EffectSpecialEvent_descriptor_ = file->message_type(0);
  static const int EffectSpecialEvent_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectSpecialEvent, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectSpecialEvent, effectname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectSpecialEvent, triggerevents_),
  };
  EffectSpecialEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EffectSpecialEvent_descriptor_,
      EffectSpecialEvent::default_instance_,
      EffectSpecialEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectSpecialEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectSpecialEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EffectSpecialEvent));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_module_2fEffectSpecialEvent_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EffectSpecialEvent_descriptor_, &EffectSpecialEvent::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_module_2fEffectSpecialEvent_2eproto() {
  delete EffectSpecialEvent::default_instance_;
  delete EffectSpecialEvent_reflection_;
}

void protobuf_AddDesc_module_2fEffectSpecialEvent_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_module_2fAvatarData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037module/EffectSpecialEvent.proto\022\002pb\032\027m"
    "odule/AvatarData.proto\"]\n\022EffectSpecialE"
    "vent\022\n\n\002Id\030\001 \001(\005\022\022\n\nEffectName\030\002 \001(\t\022\'\n\r"
    "TriggerEvents\030\003 \003(\0132\020.pb.TriggerEvent", 157);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "module/EffectSpecialEvent.proto", &protobuf_RegisterTypes);
  EffectSpecialEvent::default_instance_ = new EffectSpecialEvent();
  EffectSpecialEvent::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_module_2fEffectSpecialEvent_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_module_2fEffectSpecialEvent_2eproto {
  StaticDescriptorInitializer_module_2fEffectSpecialEvent_2eproto() {
    protobuf_AddDesc_module_2fEffectSpecialEvent_2eproto();
  }
} static_descriptor_initializer_module_2fEffectSpecialEvent_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int EffectSpecialEvent::kIdFieldNumber;
const int EffectSpecialEvent::kEffectNameFieldNumber;
const int EffectSpecialEvent::kTriggerEventsFieldNumber;
#endif  // !_MSC_VER

EffectSpecialEvent::EffectSpecialEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.EffectSpecialEvent)
}

void EffectSpecialEvent::InitAsDefaultInstance() {
}

EffectSpecialEvent::EffectSpecialEvent(const EffectSpecialEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.EffectSpecialEvent)
}

void EffectSpecialEvent::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  effectname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EffectSpecialEvent::~EffectSpecialEvent() {
  // @@protoc_insertion_point(destructor:pb.EffectSpecialEvent)
  SharedDtor();
}

void EffectSpecialEvent::SharedDtor() {
  if (effectname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete effectname_;
  }
  if (this != default_instance_) {
  }
}

void EffectSpecialEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EffectSpecialEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EffectSpecialEvent_descriptor_;
}

const EffectSpecialEvent& EffectSpecialEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2fEffectSpecialEvent_2eproto();
  return *default_instance_;
}

EffectSpecialEvent* EffectSpecialEvent::default_instance_ = NULL;

EffectSpecialEvent* EffectSpecialEvent::New() const {
  return new EffectSpecialEvent;
}

void EffectSpecialEvent::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    id_ = 0;
    if (has_effectname()) {
      if (effectname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        effectname_->clear();
      }
    }
  }
  triggerevents_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EffectSpecialEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.EffectSpecialEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_EffectName;
        break;
      }

      // optional string EffectName = 2;
      case 2: {
        if (tag == 18) {
         parse_EffectName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effectname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->effectname().data(), this->effectname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "effectname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_TriggerEvents;
        break;
      }

      // repeated .pb.TriggerEvent TriggerEvents = 3;
      case 3: {
        if (tag == 26) {
         parse_TriggerEvents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_triggerevents()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_TriggerEvents;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.EffectSpecialEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.EffectSpecialEvent)
  return false;
#undef DO_
}

void EffectSpecialEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.EffectSpecialEvent)
  // optional int32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string EffectName = 2;
  if (has_effectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "effectname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->effectname(), output);
  }

  // repeated .pb.TriggerEvent TriggerEvents = 3;
  for (int i = 0; i < this->triggerevents_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->triggerevents(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.EffectSpecialEvent)
}

::google::protobuf::uint8* EffectSpecialEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.EffectSpecialEvent)
  // optional int32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string EffectName = 2;
  if (has_effectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "effectname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->effectname(), target);
  }

  // repeated .pb.TriggerEvent TriggerEvents = 3;
  for (int i = 0; i < this->triggerevents_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->triggerevents(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.EffectSpecialEvent)
  return target;
}

int EffectSpecialEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string EffectName = 2;
    if (has_effectname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effectname());
    }

  }
  // repeated .pb.TriggerEvent TriggerEvents = 3;
  total_size += 1 * this->triggerevents_size();
  for (int i = 0; i < this->triggerevents_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->triggerevents(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EffectSpecialEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EffectSpecialEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EffectSpecialEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EffectSpecialEvent::MergeFrom(const EffectSpecialEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  triggerevents_.MergeFrom(from.triggerevents_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_effectname()) {
      set_effectname(from.effectname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EffectSpecialEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EffectSpecialEvent::CopyFrom(const EffectSpecialEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EffectSpecialEvent::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->triggerevents())) return false;
  return true;
}

void EffectSpecialEvent::Swap(EffectSpecialEvent* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(effectname_, other->effectname_);
    triggerevents_.Swap(&other->triggerevents_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EffectSpecialEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EffectSpecialEvent_descriptor_;
  metadata.reflection = EffectSpecialEvent_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
