// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/AttributerBattleDefine.proto

#ifndef PROTOBUF_net_2fAttributerBattleDefine_2eproto__INCLUDED
#define PROTOBUF_net_2fAttributerBattleDefine_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/BattleBase.pb.h"
#include "net/Battle.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fAttributerBattleDefine_2eproto();
void protobuf_AssignDesc_net_2fAttributerBattleDefine_2eproto();
void protobuf_ShutdownFile_net_2fAttributerBattleDefine_2eproto();

class TDInheritInfo;
class TReqGetTDBattleArgs;
class TRspGetTDBattleArgs;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TDInheritInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AttributerBattleDefine.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TDInheritInfo : public ::google::protobuf::Message {
 public:
  TDInheritInfo();
  virtual ~TDInheritInfo();

  TDInheritInfo(const TDInheritInfo& from);

  inline TDInheritInfo& operator=(const TDInheritInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TDInheritInfo& default_instance();

  void Swap(TDInheritInfo* other);

  // implements Message ----------------------------------------------

  TDInheritInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TDInheritInfo& from);
  void MergeFrom(const TDInheritInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 Hid = 1;
  inline bool has_hid() const;
  inline void clear_hid();
  static const int kHidFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TDInheritInfo</name>
  	<Function>
  		<name>hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_hid</name>
  		<replaceName>Hid</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 hid() const;
  inline void set_hid(::google::protobuf::uint32 value);

  // required uint32 Pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TDInheritInfo</name>
  	<Function>
  		<name>pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_pos</name>
  		<replaceName>Pos</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // required uint64 CurHp = 3;
  inline bool has_curhp() const;
  inline void clear_curhp();
  static const int kCurHpFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TDInheritInfo</name>
  	<Function>
  		<name>curhp</name>
  		<replaceName>CurHp</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_curhp</name>
  		<replaceName>CurHp</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_curhp</name>
  		<replaceName>CurHp</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 curhp() const;
  inline void set_curhp(::google::protobuf::uint64 value);

  // required uint32 CurRage = 4;
  inline bool has_currage() const;
  inline void clear_currage();
  static const int kCurRageFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TDInheritInfo</name>
  	<Function>
  		<name>currage</name>
  		<replaceName>CurRage</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_currage</name>
  		<replaceName>CurRage</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_currage</name>
  		<replaceName>CurRage</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 currage() const;
  inline void set_currage(::google::protobuf::uint32 value);

  // required uint64 CurAbsoluteHp = 5;
  inline bool has_curabsolutehp() const;
  inline void clear_curabsolutehp();
  static const int kCurAbsoluteHpFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TDInheritInfo</name>
  	<Function>
  		<name>curabsolutehp</name>
  		<replaceName>CurAbsoluteHp</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_curabsolutehp</name>
  		<replaceName>CurAbsoluteHp</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_curabsolutehp</name>
  		<replaceName>CurAbsoluteHp</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 curabsolutehp() const;
  inline void set_curabsolutehp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TDInheritInfo)
 private:
  inline void set_has_hid();
  inline void clear_has_hid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_curhp();
  inline void clear_has_curhp();
  inline void set_has_currage();
  inline void clear_has_currage();
  inline void set_has_curabsolutehp();
  inline void clear_has_curabsolutehp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hid_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint64 curhp_;
  ::google::protobuf::uint64 curabsolutehp_;
  ::google::protobuf::uint32 currage_;
  friend void  protobuf_AddDesc_net_2fAttributerBattleDefine_2eproto();
  friend void protobuf_AssignDesc_net_2fAttributerBattleDefine_2eproto();
  friend void protobuf_ShutdownFile_net_2fAttributerBattleDefine_2eproto();

  void InitAsDefaultInstance();
  static TDInheritInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TReqGetTDBattleArgs</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AttributerBattleDefine.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TReqGetTDBattleArgs : public ::google::protobuf::Message {
 public:
  TReqGetTDBattleArgs();
  virtual ~TReqGetTDBattleArgs();

  TReqGetTDBattleArgs(const TReqGetTDBattleArgs& from);

  inline TReqGetTDBattleArgs& operator=(const TReqGetTDBattleArgs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TReqGetTDBattleArgs& default_instance();

  void Swap(TReqGetTDBattleArgs* other);

  // implements Message ----------------------------------------------

  TReqGetTDBattleArgs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TReqGetTDBattleArgs& from);
  void MergeFrom(const TReqGetTDBattleArgs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TDInheritInfo SquidInheritInfo = 1;
  inline int squidinheritinfo_size() const;
  inline void clear_squidinheritinfo();
  static const int kSquidInheritInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TReqGetTDBattleArgs</name>
  	<Function>
  		<name>squidinheritinfo</name>
  		<replaceName>SquidInheritInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_squidinheritinfo</name>
  		<replaceName>SquidInheritInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_squidinheritinfo</name>
  		<replaceName>SquidInheritInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_squidinheritinfo</name>
  		<replaceName>SquidInheritInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>squidinheritinfo_size</name>
  		<replaceName>SquidInheritInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TDInheritInfo& squidinheritinfo(int index) const;
  inline ::pb::TDInheritInfo* mutable_squidinheritinfo(int index);
  inline ::pb::TDInheritInfo* add_squidinheritinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TDInheritInfo >&
      squidinheritinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TDInheritInfo >*
      mutable_squidinheritinfo();

  // optional uint32 TDBattleInfoId = 2;
  inline bool has_tdbattleinfoid() const;
  inline void clear_tdbattleinfoid();
  static const int kTDBattleInfoIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TReqGetTDBattleArgs</name>
  	<Function>
  		<name>tdbattleinfoid</name>
  		<replaceName>TDBattleInfoId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_tdbattleinfoid</name>
  		<replaceName>TDBattleInfoId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_tdbattleinfoid</name>
  		<replaceName>TDBattleInfoId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 tdbattleinfoid() const;
  inline void set_tdbattleinfoid(::google::protobuf::uint32 value);

  // optional bool FirstAttack = 3;
  inline bool has_firstattack() const;
  inline void clear_firstattack();
  static const int kFirstAttackFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TReqGetTDBattleArgs</name>
  	<Function>
  		<name>firstattack</name>
  		<replaceName>FirstAttack</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_firstattack</name>
  		<replaceName>FirstAttack</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_firstattack</name>
  		<replaceName>FirstAttack</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool firstattack() const;
  inline void set_firstattack(bool value);

  // optional bool EnableInherit = 4;
  inline bool has_enableinherit() const;
  inline void clear_enableinherit();
  static const int kEnableInheritFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TReqGetTDBattleArgs</name>
  	<Function>
  		<name>enableinherit</name>
  		<replaceName>EnableInherit</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_enableinherit</name>
  		<replaceName>EnableInherit</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_enableinherit</name>
  		<replaceName>EnableInherit</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline bool enableinherit() const;
  inline void set_enableinherit(bool value);

  // optional .pb.TSkillCountInfo SkillCounter = 5;
  inline bool has_skillcounter() const;
  inline void clear_skillcounter();
  static const int kSkillCounterFieldNumber = 5;
  /*FOR2LUA
  <Record>
  	<name>TReqGetTDBattleArgs</name>
  	<Function>
  		<name>skillcounter</name>
  		<replaceName>SkillCounter</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_skillcounter</name>
  		<replaceName>SkillCounter</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_skillcounter</name>
  		<replaceName>SkillCounter</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_skillcounter</name>
  		<replaceName>SkillCounter</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TSkillCountInfo& skillcounter() const;
  inline ::pb::TSkillCountInfo* mutable_skillcounter();
  inline ::pb::TSkillCountInfo* release_skillcounter();
  inline void set_allocated_skillcounter(::pb::TSkillCountInfo* skillcounter);

  // repeated .pb.TUnitInfo UnitInfoArr = 6;
  inline int unitinfoarr_size() const;
  inline void clear_unitinfoarr();
  static const int kUnitInfoArrFieldNumber = 6;
  /*FOR2LUA
  <Record>
  	<name>TReqGetTDBattleArgs</name>
  	<Function>
  		<name>unitinfoarr</name>
  		<replaceName>UnitInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_unitinfoarr</name>
  		<replaceName>UnitInfoArr</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_unitinfoarr</name>
  		<replaceName>UnitInfoArr</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_unitinfoarr</name>
  		<replaceName>UnitInfoArr</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>unitinfoarr_size</name>
  		<replaceName>UnitInfoArr</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TUnitInfo& unitinfoarr(int index) const;
  inline ::pb::TUnitInfo* mutable_unitinfoarr(int index);
  inline ::pb::TUnitInfo* add_unitinfoarr();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo >&
      unitinfoarr() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo >*
      mutable_unitinfoarr();

  // @@protoc_insertion_point(class_scope:pb.TReqGetTDBattleArgs)
 private:
  inline void set_has_tdbattleinfoid();
  inline void clear_has_tdbattleinfoid();
  inline void set_has_firstattack();
  inline void clear_has_firstattack();
  inline void set_has_enableinherit();
  inline void clear_has_enableinherit();
  inline void set_has_skillcounter();
  inline void clear_has_skillcounter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TDInheritInfo > squidinheritinfo_;
  ::google::protobuf::uint32 tdbattleinfoid_;
  bool firstattack_;
  bool enableinherit_;
  ::pb::TSkillCountInfo* skillcounter_;
  ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo > unitinfoarr_;
  friend void  protobuf_AddDesc_net_2fAttributerBattleDefine_2eproto();
  friend void protobuf_AssignDesc_net_2fAttributerBattleDefine_2eproto();
  friend void protobuf_ShutdownFile_net_2fAttributerBattleDefine_2eproto();

  void InitAsDefaultInstance();
  static TReqGetTDBattleArgs* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TRspGetTDBattleArgs</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/AttributerBattleDefine.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TRspGetTDBattleArgs : public ::google::protobuf::Message {
 public:
  TRspGetTDBattleArgs();
  virtual ~TRspGetTDBattleArgs();

  TRspGetTDBattleArgs(const TRspGetTDBattleArgs& from);

  inline TRspGetTDBattleArgs& operator=(const TRspGetTDBattleArgs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRspGetTDBattleArgs& default_instance();

  void Swap(TRspGetTDBattleArgs* other);

  // implements Message ----------------------------------------------

  TRspGetTDBattleArgs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TRspGetTDBattleArgs& from);
  void MergeFrom(const TRspGetTDBattleArgs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TBattleArgs BattleArgs = 1;
  inline bool has_battleargs() const;
  inline void clear_battleargs();
  static const int kBattleArgsFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TRspGetTDBattleArgs</name>
  	<Function>
  		<name>battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_battleargs</name>
  		<replaceName>BattleArgs</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TBattleArgs& battleargs() const;
  inline ::pb::TBattleArgs* mutable_battleargs();
  inline ::pb::TBattleArgs* release_battleargs();
  inline void set_allocated_battleargs(::pb::TBattleArgs* battleargs);

  // @@protoc_insertion_point(class_scope:pb.TRspGetTDBattleArgs)
 private:
  inline void set_has_battleargs();
  inline void clear_has_battleargs();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TBattleArgs* battleargs_;
  friend void  protobuf_AddDesc_net_2fAttributerBattleDefine_2eproto();
  friend void protobuf_AssignDesc_net_2fAttributerBattleDefine_2eproto();
  friend void protobuf_ShutdownFile_net_2fAttributerBattleDefine_2eproto();

  void InitAsDefaultInstance();
  static TRspGetTDBattleArgs* default_instance_;
};
// ===================================================================


// ===================================================================

// TDInheritInfo

// required uint32 Hid = 1;
inline bool TDInheritInfo::has_hid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TDInheritInfo::set_has_hid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TDInheritInfo::clear_has_hid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TDInheritInfo::clear_hid() {
  hid_ = 0u;
  clear_has_hid();
}
inline ::google::protobuf::uint32 TDInheritInfo::hid() const {
  // @@protoc_insertion_point(field_get:pb.TDInheritInfo.Hid)
  return hid_;
}
inline void TDInheritInfo::set_hid(::google::protobuf::uint32 value) {
  set_has_hid();
  hid_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInheritInfo.Hid)
}

// required uint32 Pos = 2;
inline bool TDInheritInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TDInheritInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TDInheritInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TDInheritInfo::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 TDInheritInfo::pos() const {
  // @@protoc_insertion_point(field_get:pb.TDInheritInfo.Pos)
  return pos_;
}
inline void TDInheritInfo::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInheritInfo.Pos)
}

// required uint64 CurHp = 3;
inline bool TDInheritInfo::has_curhp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TDInheritInfo::set_has_curhp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TDInheritInfo::clear_has_curhp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TDInheritInfo::clear_curhp() {
  curhp_ = GOOGLE_ULONGLONG(0);
  clear_has_curhp();
}
inline ::google::protobuf::uint64 TDInheritInfo::curhp() const {
  // @@protoc_insertion_point(field_get:pb.TDInheritInfo.CurHp)
  return curhp_;
}
inline void TDInheritInfo::set_curhp(::google::protobuf::uint64 value) {
  set_has_curhp();
  curhp_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInheritInfo.CurHp)
}

// required uint32 CurRage = 4;
inline bool TDInheritInfo::has_currage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TDInheritInfo::set_has_currage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TDInheritInfo::clear_has_currage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TDInheritInfo::clear_currage() {
  currage_ = 0u;
  clear_has_currage();
}
inline ::google::protobuf::uint32 TDInheritInfo::currage() const {
  // @@protoc_insertion_point(field_get:pb.TDInheritInfo.CurRage)
  return currage_;
}
inline void TDInheritInfo::set_currage(::google::protobuf::uint32 value) {
  set_has_currage();
  currage_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInheritInfo.CurRage)
}

// required uint64 CurAbsoluteHp = 5;
inline bool TDInheritInfo::has_curabsolutehp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TDInheritInfo::set_has_curabsolutehp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TDInheritInfo::clear_has_curabsolutehp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TDInheritInfo::clear_curabsolutehp() {
  curabsolutehp_ = GOOGLE_ULONGLONG(0);
  clear_has_curabsolutehp();
}
inline ::google::protobuf::uint64 TDInheritInfo::curabsolutehp() const {
  // @@protoc_insertion_point(field_get:pb.TDInheritInfo.CurAbsoluteHp)
  return curabsolutehp_;
}
inline void TDInheritInfo::set_curabsolutehp(::google::protobuf::uint64 value) {
  set_has_curabsolutehp();
  curabsolutehp_ = value;
  // @@protoc_insertion_point(field_set:pb.TDInheritInfo.CurAbsoluteHp)
}

// -------------------------------------------------------------------

// TReqGetTDBattleArgs

// repeated .pb.TDInheritInfo SquidInheritInfo = 1;
inline int TReqGetTDBattleArgs::squidinheritinfo_size() const {
  return squidinheritinfo_.size();
}
inline void TReqGetTDBattleArgs::clear_squidinheritinfo() {
  squidinheritinfo_.Clear();
}
inline const ::pb::TDInheritInfo& TReqGetTDBattleArgs::squidinheritinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TReqGetTDBattleArgs.SquidInheritInfo)
  return squidinheritinfo_.Get(index);
}
inline ::pb::TDInheritInfo* TReqGetTDBattleArgs::mutable_squidinheritinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TReqGetTDBattleArgs.SquidInheritInfo)
  return squidinheritinfo_.Mutable(index);
}
inline ::pb::TDInheritInfo* TReqGetTDBattleArgs::add_squidinheritinfo() {
  // @@protoc_insertion_point(field_add:pb.TReqGetTDBattleArgs.SquidInheritInfo)
  return squidinheritinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TDInheritInfo >&
TReqGetTDBattleArgs::squidinheritinfo() const {
  // @@protoc_insertion_point(field_list:pb.TReqGetTDBattleArgs.SquidInheritInfo)
  return squidinheritinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TDInheritInfo >*
TReqGetTDBattleArgs::mutable_squidinheritinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TReqGetTDBattleArgs.SquidInheritInfo)
  return &squidinheritinfo_;
}

// optional uint32 TDBattleInfoId = 2;
inline bool TReqGetTDBattleArgs::has_tdbattleinfoid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TReqGetTDBattleArgs::set_has_tdbattleinfoid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TReqGetTDBattleArgs::clear_has_tdbattleinfoid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TReqGetTDBattleArgs::clear_tdbattleinfoid() {
  tdbattleinfoid_ = 0u;
  clear_has_tdbattleinfoid();
}
inline ::google::protobuf::uint32 TReqGetTDBattleArgs::tdbattleinfoid() const {
  // @@protoc_insertion_point(field_get:pb.TReqGetTDBattleArgs.TDBattleInfoId)
  return tdbattleinfoid_;
}
inline void TReqGetTDBattleArgs::set_tdbattleinfoid(::google::protobuf::uint32 value) {
  set_has_tdbattleinfoid();
  tdbattleinfoid_ = value;
  // @@protoc_insertion_point(field_set:pb.TReqGetTDBattleArgs.TDBattleInfoId)
}

// optional bool FirstAttack = 3;
inline bool TReqGetTDBattleArgs::has_firstattack() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TReqGetTDBattleArgs::set_has_firstattack() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TReqGetTDBattleArgs::clear_has_firstattack() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TReqGetTDBattleArgs::clear_firstattack() {
  firstattack_ = false;
  clear_has_firstattack();
}
inline bool TReqGetTDBattleArgs::firstattack() const {
  // @@protoc_insertion_point(field_get:pb.TReqGetTDBattleArgs.FirstAttack)
  return firstattack_;
}
inline void TReqGetTDBattleArgs::set_firstattack(bool value) {
  set_has_firstattack();
  firstattack_ = value;
  // @@protoc_insertion_point(field_set:pb.TReqGetTDBattleArgs.FirstAttack)
}

// optional bool EnableInherit = 4;
inline bool TReqGetTDBattleArgs::has_enableinherit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TReqGetTDBattleArgs::set_has_enableinherit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TReqGetTDBattleArgs::clear_has_enableinherit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TReqGetTDBattleArgs::clear_enableinherit() {
  enableinherit_ = false;
  clear_has_enableinherit();
}
inline bool TReqGetTDBattleArgs::enableinherit() const {
  // @@protoc_insertion_point(field_get:pb.TReqGetTDBattleArgs.EnableInherit)
  return enableinherit_;
}
inline void TReqGetTDBattleArgs::set_enableinherit(bool value) {
  set_has_enableinherit();
  enableinherit_ = value;
  // @@protoc_insertion_point(field_set:pb.TReqGetTDBattleArgs.EnableInherit)
}

// optional .pb.TSkillCountInfo SkillCounter = 5;
inline bool TReqGetTDBattleArgs::has_skillcounter() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TReqGetTDBattleArgs::set_has_skillcounter() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TReqGetTDBattleArgs::clear_has_skillcounter() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TReqGetTDBattleArgs::clear_skillcounter() {
  if (skillcounter_ != NULL) skillcounter_->::pb::TSkillCountInfo::Clear();
  clear_has_skillcounter();
}
inline const ::pb::TSkillCountInfo& TReqGetTDBattleArgs::skillcounter() const {
  // @@protoc_insertion_point(field_get:pb.TReqGetTDBattleArgs.SkillCounter)
  return skillcounter_ != NULL ? *skillcounter_ : *default_instance_->skillcounter_;
}
inline ::pb::TSkillCountInfo* TReqGetTDBattleArgs::mutable_skillcounter() {
  set_has_skillcounter();
  if (skillcounter_ == NULL) skillcounter_ = new ::pb::TSkillCountInfo;
  // @@protoc_insertion_point(field_mutable:pb.TReqGetTDBattleArgs.SkillCounter)
  return skillcounter_;
}
inline ::pb::TSkillCountInfo* TReqGetTDBattleArgs::release_skillcounter() {
  clear_has_skillcounter();
  ::pb::TSkillCountInfo* temp = skillcounter_;
  skillcounter_ = NULL;
  return temp;
}
inline void TReqGetTDBattleArgs::set_allocated_skillcounter(::pb::TSkillCountInfo* skillcounter) {
  delete skillcounter_;
  skillcounter_ = skillcounter;
  if (skillcounter) {
    set_has_skillcounter();
  } else {
    clear_has_skillcounter();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TReqGetTDBattleArgs.SkillCounter)
}

// repeated .pb.TUnitInfo UnitInfoArr = 6;
inline int TReqGetTDBattleArgs::unitinfoarr_size() const {
  return unitinfoarr_.size();
}
inline void TReqGetTDBattleArgs::clear_unitinfoarr() {
  unitinfoarr_.Clear();
}
inline const ::pb::TUnitInfo& TReqGetTDBattleArgs::unitinfoarr(int index) const {
  // @@protoc_insertion_point(field_get:pb.TReqGetTDBattleArgs.UnitInfoArr)
  return unitinfoarr_.Get(index);
}
inline ::pb::TUnitInfo* TReqGetTDBattleArgs::mutable_unitinfoarr(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TReqGetTDBattleArgs.UnitInfoArr)
  return unitinfoarr_.Mutable(index);
}
inline ::pb::TUnitInfo* TReqGetTDBattleArgs::add_unitinfoarr() {
  // @@protoc_insertion_point(field_add:pb.TReqGetTDBattleArgs.UnitInfoArr)
  return unitinfoarr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo >&
TReqGetTDBattleArgs::unitinfoarr() const {
  // @@protoc_insertion_point(field_list:pb.TReqGetTDBattleArgs.UnitInfoArr)
  return unitinfoarr_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TUnitInfo >*
TReqGetTDBattleArgs::mutable_unitinfoarr() {
  // @@protoc_insertion_point(field_mutable_list:pb.TReqGetTDBattleArgs.UnitInfoArr)
  return &unitinfoarr_;
}

// -------------------------------------------------------------------

// TRspGetTDBattleArgs

// optional .pb.TBattleArgs BattleArgs = 1;
inline bool TRspGetTDBattleArgs::has_battleargs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TRspGetTDBattleArgs::set_has_battleargs() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TRspGetTDBattleArgs::clear_has_battleargs() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TRspGetTDBattleArgs::clear_battleargs() {
  if (battleargs_ != NULL) battleargs_->::pb::TBattleArgs::Clear();
  clear_has_battleargs();
}
inline const ::pb::TBattleArgs& TRspGetTDBattleArgs::battleargs() const {
  // @@protoc_insertion_point(field_get:pb.TRspGetTDBattleArgs.BattleArgs)
  return battleargs_ != NULL ? *battleargs_ : *default_instance_->battleargs_;
}
inline ::pb::TBattleArgs* TRspGetTDBattleArgs::mutable_battleargs() {
  set_has_battleargs();
  if (battleargs_ == NULL) battleargs_ = new ::pb::TBattleArgs;
  // @@protoc_insertion_point(field_mutable:pb.TRspGetTDBattleArgs.BattleArgs)
  return battleargs_;
}
inline ::pb::TBattleArgs* TRspGetTDBattleArgs::release_battleargs() {
  clear_has_battleargs();
  ::pb::TBattleArgs* temp = battleargs_;
  battleargs_ = NULL;
  return temp;
}
inline void TRspGetTDBattleArgs::set_allocated_battleargs(::pb::TBattleArgs* battleargs) {
  delete battleargs_;
  battleargs_ = battleargs;
  if (battleargs) {
    set_has_battleargs();
  } else {
    clear_has_battleargs();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TRspGetTDBattleArgs.BattleArgs)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fAttributerBattleDefine_2eproto__INCLUDED
