// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/DivineTroops.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/DivineTroops.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TDivineTroopsSmeltReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineTroopsSmeltReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineTroopsSmeltRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineTroopsSmeltRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineTroopsReplaceSmeltReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineTroopsReplaceSmeltReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineTroopsReplaceSmeltRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineTroopsReplaceSmeltRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineTroopsCancelSmeltReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineTroopsCancelSmeltReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineTroopsSurmountReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineTroopsSurmountReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineTroopsSurmountRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineTroopsSurmountRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineTroopsLotteryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineTroopsLotteryReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineTroopsLotteryRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineTroopsLotteryRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineRecruitBuyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineRecruitBuyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineRecruitBuyRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineRecruitBuyRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineRecruitInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineRecruitInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemIdInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemIdInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineRecruitRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineRecruitRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineRecruitRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineRecruitRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineGetChallengeRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineGetChallengeRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TSquadInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TSquadInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineTroopsSetSquadReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineTroopsSetSquadReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TBuyChallengeNumReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TBuyChallengeNumReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineDoBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineDoBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineDoBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineDoBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineReportBattleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineReportBattleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineReportBattleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineReportBattleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineSweepReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineSweepReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineSweepRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineSweepRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineSkipFightReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineSkipFightReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineSkipFightRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineSkipFightRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineBookReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineBookReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineGetBookItemRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineGetBookItemRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineRecycleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineRecycleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineRecycleRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineRecycleRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineCompoundFragReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineCompoundFragReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TDivineCompoundFragRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TDivineCompoundFragRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fDivineTroops_2eproto() {
  protobuf_AddDesc_net_2fDivineTroops_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/DivineTroops.proto");
  GOOGLE_CHECK(file != NULL);
  TDivineTroopsSmeltReq_descriptor_ = file->message_type(0);
  static const int TDivineTroopsSmeltReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSmeltReq, equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSmeltReq, smelttype_),
  };
  TDivineTroopsSmeltReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineTroopsSmeltReq_descriptor_,
      TDivineTroopsSmeltReq::default_instance_,
      TDivineTroopsSmeltReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSmeltReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSmeltReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineTroopsSmeltReq));
  TDivineTroopsSmeltRsp_descriptor_ = file->message_type(1);
  static const int TDivineTroopsSmeltRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSmeltRsp, smeltafterlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSmeltRsp, smeltunsubmitattribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSmeltRsp, smeltattribute_),
  };
  TDivineTroopsSmeltRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineTroopsSmeltRsp_descriptor_,
      TDivineTroopsSmeltRsp::default_instance_,
      TDivineTroopsSmeltRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSmeltRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSmeltRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineTroopsSmeltRsp));
  TDivineTroopsReplaceSmeltReq_descriptor_ = file->message_type(2);
  static const int TDivineTroopsReplaceSmeltReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsReplaceSmeltReq, equipid_),
  };
  TDivineTroopsReplaceSmeltReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineTroopsReplaceSmeltReq_descriptor_,
      TDivineTroopsReplaceSmeltReq::default_instance_,
      TDivineTroopsReplaceSmeltReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsReplaceSmeltReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsReplaceSmeltReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineTroopsReplaceSmeltReq));
  TDivineTroopsReplaceSmeltRsp_descriptor_ = file->message_type(3);
  static const int TDivineTroopsReplaceSmeltRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsReplaceSmeltRsp, smeltlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsReplaceSmeltRsp, smeltattribute_),
  };
  TDivineTroopsReplaceSmeltRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineTroopsReplaceSmeltRsp_descriptor_,
      TDivineTroopsReplaceSmeltRsp::default_instance_,
      TDivineTroopsReplaceSmeltRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsReplaceSmeltRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsReplaceSmeltRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineTroopsReplaceSmeltRsp));
  TDivineTroopsCancelSmeltReq_descriptor_ = file->message_type(4);
  static const int TDivineTroopsCancelSmeltReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsCancelSmeltReq, equipid_),
  };
  TDivineTroopsCancelSmeltReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineTroopsCancelSmeltReq_descriptor_,
      TDivineTroopsCancelSmeltReq::default_instance_,
      TDivineTroopsCancelSmeltReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsCancelSmeltReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsCancelSmeltReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineTroopsCancelSmeltReq));
  TDivineTroopsSurmountReq_descriptor_ = file->message_type(5);
  static const int TDivineTroopsSurmountReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSurmountReq, equipid_),
  };
  TDivineTroopsSurmountReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineTroopsSurmountReq_descriptor_,
      TDivineTroopsSurmountReq::default_instance_,
      TDivineTroopsSurmountReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSurmountReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSurmountReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineTroopsSurmountReq));
  TDivineTroopsSurmountRes_descriptor_ = file->message_type(6);
  static const int TDivineTroopsSurmountRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSurmountRes, smeltlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSurmountRes, surmountlv_),
  };
  TDivineTroopsSurmountRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineTroopsSurmountRes_descriptor_,
      TDivineTroopsSurmountRes::default_instance_,
      TDivineTroopsSurmountRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSurmountRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSurmountRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineTroopsSurmountRes));
  TDivineTroopsLotteryReq_descriptor_ = file->message_type(7);
  static const int TDivineTroopsLotteryReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsLotteryReq, drawtype_),
  };
  TDivineTroopsLotteryReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineTroopsLotteryReq_descriptor_,
      TDivineTroopsLotteryReq::default_instance_,
      TDivineTroopsLotteryReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsLotteryReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsLotteryReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineTroopsLotteryReq));
  TDivineTroopsLotteryRsp_descriptor_ = file->message_type(8);
  static const int TDivineTroopsLotteryRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsLotteryRsp, arrreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsLotteryRsp, recruitscore_),
  };
  TDivineTroopsLotteryRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineTroopsLotteryRsp_descriptor_,
      TDivineTroopsLotteryRsp::default_instance_,
      TDivineTroopsLotteryRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsLotteryRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsLotteryRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineTroopsLotteryRsp));
  TDivineRecruitBuyReq_descriptor_ = file->message_type(9);
  static const int TDivineRecruitBuyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitBuyReq, recruitbuytype_),
  };
  TDivineRecruitBuyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineRecruitBuyReq_descriptor_,
      TDivineRecruitBuyReq::default_instance_,
      TDivineRecruitBuyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitBuyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitBuyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineRecruitBuyReq));
  TDivineRecruitBuyRsp_descriptor_ = file->message_type(10);
  static const int TDivineRecruitBuyRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitBuyRsp, arrreward_),
  };
  TDivineRecruitBuyRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineRecruitBuyRsp_descriptor_,
      TDivineRecruitBuyRsp::default_instance_,
      TDivineRecruitBuyRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitBuyRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitBuyRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineRecruitBuyRsp));
  TDivineRecruitInfoRsp_descriptor_ = file->message_type(11);
  static const int TDivineRecruitInfoRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitInfoRsp, recruitscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitInfoRsp, recruitnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitInfoRsp, hasbuynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitInfoRsp, itemid_),
  };
  TDivineRecruitInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineRecruitInfoRsp_descriptor_,
      TDivineRecruitInfoRsp::default_instance_,
      TDivineRecruitInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineRecruitInfoRsp));
  TItemIdInfo_descriptor_ = file->message_type(12);
  static const int TItemIdInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemIdInfo, ids_),
  };
  TItemIdInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemIdInfo_descriptor_,
      TItemIdInfo::default_instance_,
      TItemIdInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemIdInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemIdInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemIdInfo));
  TDivineRecruitRewardReq_descriptor_ = file->message_type(13);
  static const int TDivineRecruitRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitRewardReq, id_),
  };
  TDivineRecruitRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineRecruitRewardReq_descriptor_,
      TDivineRecruitRewardReq::default_instance_,
      TDivineRecruitRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineRecruitRewardReq));
  TDivineRecruitRewardRsp_descriptor_ = file->message_type(14);
  static const int TDivineRecruitRewardRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitRewardRsp, arrreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitRewardRsp, itemid_),
  };
  TDivineRecruitRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineRecruitRewardRsp_descriptor_,
      TDivineRecruitRewardRsp::default_instance_,
      TDivineRecruitRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecruitRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineRecruitRewardRsp));
  TDivineGetChallengeRsp_descriptor_ = file->message_type(15);
  static const int TDivineGetChallengeRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineGetChallengeRsp, currentindexid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineGetChallengeRsp, changenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineGetChallengeRsp, buychangenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineGetChallengeRsp, squadarr_),
  };
  TDivineGetChallengeRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineGetChallengeRsp_descriptor_,
      TDivineGetChallengeRsp::default_instance_,
      TDivineGetChallengeRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineGetChallengeRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineGetChallengeRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineGetChallengeRsp));
  TSquadInfo_descriptor_ = file->message_type(16);
  static const int TSquadInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSquadInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSquadInfo, hid_),
  };
  TSquadInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TSquadInfo_descriptor_,
      TSquadInfo::default_instance_,
      TSquadInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSquadInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TSquadInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TSquadInfo));
  TDivineTroopsSetSquadReq_descriptor_ = file->message_type(17);
  static const int TDivineTroopsSetSquadReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSetSquadReq, squadarr_),
  };
  TDivineTroopsSetSquadReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineTroopsSetSquadReq_descriptor_,
      TDivineTroopsSetSquadReq::default_instance_,
      TDivineTroopsSetSquadReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSetSquadReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineTroopsSetSquadReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineTroopsSetSquadReq));
  TBuyChallengeNumReq_descriptor_ = file->message_type(18);
  static const int TBuyChallengeNumReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBuyChallengeNumReq, num_),
  };
  TBuyChallengeNumReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TBuyChallengeNumReq_descriptor_,
      TBuyChallengeNumReq::default_instance_,
      TBuyChallengeNumReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBuyChallengeNumReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TBuyChallengeNumReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TBuyChallengeNumReq));
  TDivineDoBattleReq_descriptor_ = file->message_type(19);
  static const int TDivineDoBattleReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineDoBattleReq, indexid_),
  };
  TDivineDoBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineDoBattleReq_descriptor_,
      TDivineDoBattleReq::default_instance_,
      TDivineDoBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineDoBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineDoBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineDoBattleReq));
  TDivineDoBattleRsp_descriptor_ = file->message_type(20);
  static const int TDivineDoBattleRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineDoBattleRsp, droparray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineDoBattleRsp, battleargs_),
  };
  TDivineDoBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineDoBattleRsp_descriptor_,
      TDivineDoBattleRsp::default_instance_,
      TDivineDoBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineDoBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineDoBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineDoBattleRsp));
  TDivineReportBattleReq_descriptor_ = file->message_type(21);
  static const int TDivineReportBattleReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineReportBattleReq, indexid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineReportBattleReq, battleresultbytes_),
  };
  TDivineReportBattleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineReportBattleReq_descriptor_,
      TDivineReportBattleReq::default_instance_,
      TDivineReportBattleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineReportBattleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineReportBattleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineReportBattleReq));
  TDivineReportBattleRsp_descriptor_ = file->message_type(22);
  static const int TDivineReportBattleRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineReportBattleRsp, droparray_),
  };
  TDivineReportBattleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineReportBattleRsp_descriptor_,
      TDivineReportBattleRsp::default_instance_,
      TDivineReportBattleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineReportBattleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineReportBattleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineReportBattleRsp));
  TDivineSweepReq_descriptor_ = file->message_type(23);
  static const int TDivineSweepReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSweepReq, indexid_),
  };
  TDivineSweepReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineSweepReq_descriptor_,
      TDivineSweepReq::default_instance_,
      TDivineSweepReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSweepReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSweepReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineSweepReq));
  TDivineSweepRsp_descriptor_ = file->message_type(24);
  static const int TDivineSweepRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSweepRsp, droparray_),
  };
  TDivineSweepRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineSweepRsp_descriptor_,
      TDivineSweepRsp::default_instance_,
      TDivineSweepRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSweepRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSweepRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineSweepRsp));
  TDivineSkipFightReq_descriptor_ = file->message_type(25);
  static const int TDivineSkipFightReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSkipFightReq, indexid_),
  };
  TDivineSkipFightReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineSkipFightReq_descriptor_,
      TDivineSkipFightReq::default_instance_,
      TDivineSkipFightReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSkipFightReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSkipFightReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineSkipFightReq));
  TDivineSkipFightRsp_descriptor_ = file->message_type(26);
  static const int TDivineSkipFightRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSkipFightRsp, battleret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSkipFightRsp, rewardarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSkipFightRsp, success_),
  };
  TDivineSkipFightRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineSkipFightRsp_descriptor_,
      TDivineSkipFightRsp::default_instance_,
      TDivineSkipFightRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSkipFightRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineSkipFightRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineSkipFightRsp));
  TDivineBookReq_descriptor_ = file->message_type(27);
  static const int TDivineBookReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineBookReq, bookid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineBookReq, booktype_),
  };
  TDivineBookReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineBookReq_descriptor_,
      TDivineBookReq::default_instance_,
      TDivineBookReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineBookReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineBookReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineBookReq));
  TDivineGetBookItemRsp_descriptor_ = file->message_type(28);
  static const int TDivineGetBookItemRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineGetBookItemRsp, bookid_),
  };
  TDivineGetBookItemRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineGetBookItemRsp_descriptor_,
      TDivineGetBookItemRsp::default_instance_,
      TDivineGetBookItemRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineGetBookItemRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineGetBookItemRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineGetBookItemRsp));
  TDivineRecycleReq_descriptor_ = file->message_type(29);
  static const int TDivineRecycleReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecycleReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecycleReq, recycletype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecycleReq, acttype_),
  };
  TDivineRecycleReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineRecycleReq_descriptor_,
      TDivineRecycleReq::default_instance_,
      TDivineRecycleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecycleReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecycleReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineRecycleReq));
  TDivineRecycleRsp_descriptor_ = file->message_type(30);
  static const int TDivineRecycleRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecycleRsp, arrreward_),
  };
  TDivineRecycleRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineRecycleRsp_descriptor_,
      TDivineRecycleRsp::default_instance_,
      TDivineRecycleRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecycleRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineRecycleRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineRecycleRsp));
  TDivineCompoundFragReq_descriptor_ = file->message_type(31);
  static const int TDivineCompoundFragReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineCompoundFragReq, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineCompoundFragReq, flagid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineCompoundFragReq, acttype_),
  };
  TDivineCompoundFragReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineCompoundFragReq_descriptor_,
      TDivineCompoundFragReq::default_instance_,
      TDivineCompoundFragReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineCompoundFragReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineCompoundFragReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineCompoundFragReq));
  TDivineCompoundFragRsp_descriptor_ = file->message_type(32);
  static const int TDivineCompoundFragRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineCompoundFragRsp, itemid_),
  };
  TDivineCompoundFragRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TDivineCompoundFragRsp_descriptor_,
      TDivineCompoundFragRsp::default_instance_,
      TDivineCompoundFragRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineCompoundFragRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TDivineCompoundFragRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TDivineCompoundFragRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fDivineTroops_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineTroopsSmeltReq_descriptor_, &TDivineTroopsSmeltReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineTroopsSmeltRsp_descriptor_, &TDivineTroopsSmeltRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineTroopsReplaceSmeltReq_descriptor_, &TDivineTroopsReplaceSmeltReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineTroopsReplaceSmeltRsp_descriptor_, &TDivineTroopsReplaceSmeltRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineTroopsCancelSmeltReq_descriptor_, &TDivineTroopsCancelSmeltReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineTroopsSurmountReq_descriptor_, &TDivineTroopsSurmountReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineTroopsSurmountRes_descriptor_, &TDivineTroopsSurmountRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineTroopsLotteryReq_descriptor_, &TDivineTroopsLotteryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineTroopsLotteryRsp_descriptor_, &TDivineTroopsLotteryRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineRecruitBuyReq_descriptor_, &TDivineRecruitBuyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineRecruitBuyRsp_descriptor_, &TDivineRecruitBuyRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineRecruitInfoRsp_descriptor_, &TDivineRecruitInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemIdInfo_descriptor_, &TItemIdInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineRecruitRewardReq_descriptor_, &TDivineRecruitRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineRecruitRewardRsp_descriptor_, &TDivineRecruitRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineGetChallengeRsp_descriptor_, &TDivineGetChallengeRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TSquadInfo_descriptor_, &TSquadInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineTroopsSetSquadReq_descriptor_, &TDivineTroopsSetSquadReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TBuyChallengeNumReq_descriptor_, &TBuyChallengeNumReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineDoBattleReq_descriptor_, &TDivineDoBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineDoBattleRsp_descriptor_, &TDivineDoBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineReportBattleReq_descriptor_, &TDivineReportBattleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineReportBattleRsp_descriptor_, &TDivineReportBattleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineSweepReq_descriptor_, &TDivineSweepReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineSweepRsp_descriptor_, &TDivineSweepRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineSkipFightReq_descriptor_, &TDivineSkipFightReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineSkipFightRsp_descriptor_, &TDivineSkipFightRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineBookReq_descriptor_, &TDivineBookReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineGetBookItemRsp_descriptor_, &TDivineGetBookItemRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineRecycleReq_descriptor_, &TDivineRecycleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineRecycleRsp_descriptor_, &TDivineRecycleRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineCompoundFragReq_descriptor_, &TDivineCompoundFragReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TDivineCompoundFragRsp_descriptor_, &TDivineCompoundFragRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fDivineTroops_2eproto() {
  delete TDivineTroopsSmeltReq::default_instance_;
  delete TDivineTroopsSmeltReq_reflection_;
  delete TDivineTroopsSmeltRsp::default_instance_;
  delete TDivineTroopsSmeltRsp_reflection_;
  delete TDivineTroopsReplaceSmeltReq::default_instance_;
  delete TDivineTroopsReplaceSmeltReq_reflection_;
  delete TDivineTroopsReplaceSmeltRsp::default_instance_;
  delete TDivineTroopsReplaceSmeltRsp_reflection_;
  delete TDivineTroopsCancelSmeltReq::default_instance_;
  delete TDivineTroopsCancelSmeltReq_reflection_;
  delete TDivineTroopsSurmountReq::default_instance_;
  delete TDivineTroopsSurmountReq_reflection_;
  delete TDivineTroopsSurmountRes::default_instance_;
  delete TDivineTroopsSurmountRes_reflection_;
  delete TDivineTroopsLotteryReq::default_instance_;
  delete TDivineTroopsLotteryReq_reflection_;
  delete TDivineTroopsLotteryRsp::default_instance_;
  delete TDivineTroopsLotteryRsp_reflection_;
  delete TDivineRecruitBuyReq::default_instance_;
  delete TDivineRecruitBuyReq_reflection_;
  delete TDivineRecruitBuyRsp::default_instance_;
  delete TDivineRecruitBuyRsp_reflection_;
  delete TDivineRecruitInfoRsp::default_instance_;
  delete TDivineRecruitInfoRsp_reflection_;
  delete TItemIdInfo::default_instance_;
  delete TItemIdInfo_reflection_;
  delete TDivineRecruitRewardReq::default_instance_;
  delete TDivineRecruitRewardReq_reflection_;
  delete TDivineRecruitRewardRsp::default_instance_;
  delete TDivineRecruitRewardRsp_reflection_;
  delete TDivineGetChallengeRsp::default_instance_;
  delete TDivineGetChallengeRsp_reflection_;
  delete TSquadInfo::default_instance_;
  delete TSquadInfo_reflection_;
  delete TDivineTroopsSetSquadReq::default_instance_;
  delete TDivineTroopsSetSquadReq_reflection_;
  delete TBuyChallengeNumReq::default_instance_;
  delete TBuyChallengeNumReq_reflection_;
  delete TDivineDoBattleReq::default_instance_;
  delete TDivineDoBattleReq_reflection_;
  delete TDivineDoBattleRsp::default_instance_;
  delete TDivineDoBattleRsp_reflection_;
  delete TDivineReportBattleReq::default_instance_;
  delete TDivineReportBattleReq_reflection_;
  delete TDivineReportBattleRsp::default_instance_;
  delete TDivineReportBattleRsp_reflection_;
  delete TDivineSweepReq::default_instance_;
  delete TDivineSweepReq_reflection_;
  delete TDivineSweepRsp::default_instance_;
  delete TDivineSweepRsp_reflection_;
  delete TDivineSkipFightReq::default_instance_;
  delete TDivineSkipFightReq_reflection_;
  delete TDivineSkipFightRsp::default_instance_;
  delete TDivineSkipFightRsp_reflection_;
  delete TDivineBookReq::default_instance_;
  delete TDivineBookReq_reflection_;
  delete TDivineGetBookItemRsp::default_instance_;
  delete TDivineGetBookItemRsp_reflection_;
  delete TDivineRecycleReq::default_instance_;
  delete TDivineRecycleReq_reflection_;
  delete TDivineRecycleRsp::default_instance_;
  delete TDivineRecycleRsp_reflection_;
  delete TDivineCompoundFragReq::default_instance_;
  delete TDivineCompoundFragReq_reflection_;
  delete TDivineCompoundFragRsp::default_instance_;
  delete TDivineCompoundFragRsp_reflection_;
}

void protobuf_AddDesc_net_2fDivineTroops_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::pb::protobuf_AddDesc_module_2fAttributer_2eproto();
  ::pb::protobuf_AddDesc_net_2fBattle_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026net/DivineTroops.proto\022\002pb\032\026net/Common"
    "Reward.proto\032\027module/Attributer.proto\032\020n"
    "et/Battle.proto\";\n\025TDivineTroopsSmeltReq"
    "\022\017\n\007EquipId\030\001 \001(\r\022\021\n\tSmeltType\030\002 \001(\r\"\215\001\n"
    "\025TDivineTroopsSmeltRsp\022\024\n\014SmeltAfterLv\030\001"
    " \001(\r\0222\n\026SmeltUnSubmitAttribute\030\002 \003(\0132\022.p"
    "b.TAttributeInfo\022*\n\016SmeltAttribute\030\003 \003(\013"
    "2\022.pb.TAttributeInfo\"/\n\034TDivineTroopsRep"
    "laceSmeltReq\022\017\n\007EquipId\030\001 \001(\r\"[\n\034TDivine"
    "TroopsReplaceSmeltRsp\022\017\n\007SmeltLv\030\001 \001(\r\022*"
    "\n\016SmeltAttribute\030\002 \003(\0132\022.pb.TAttributeIn"
    "fo\".\n\033TDivineTroopsCancelSmeltReq\022\017\n\007Equ"
    "ipId\030\001 \001(\r\"+\n\030TDivineTroopsSurmountReq\022\017"
    "\n\007EquipId\030\001 \001(\r\"\?\n\030TDivineTroopsSurmount"
    "Res\022\017\n\007SmeltLv\030\001 \001(\r\022\022\n\nSurmountLv\030\002 \001(\r"
    "\"+\n\027TDivineTroopsLotteryReq\022\020\n\010DrawType\030"
    "\001 \001(\r\"U\n\027TDivineTroopsLotteryRsp\022$\n\tArrR"
    "eward\030\001 \003(\0132\021.pb.TCommonReward\022\024\n\014Recrui"
    "tScore\030\002 \001(\r\".\n\024TDivineRecruitBuyReq\022\026\n\016"
    "RecruitBuyType\030\001 \001(\r\"<\n\024TDivineRecruitBu"
    "yRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb.TCommonRewa"
    "rd\"u\n\025TDivineRecruitInfoRsp\022\024\n\014RecruitSc"
    "ore\030\001 \001(\r\022\022\n\nRecruitNum\030\002 \001(\r\022\021\n\tHasBuyN"
    "um\030\003 \001(\r\022\037\n\006ItemId\030\004 \003(\0132\017.pb.TItemIdInf"
    "o\"\032\n\013TItemIdInfo\022\013\n\003ids\030\001 \003(\r\"%\n\027TDivine"
    "RecruitRewardReq\022\n\n\002Id\030\001 \001(\r\"`\n\027TDivineR"
    "ecruitRewardRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb."
    "TCommonReward\022\037\n\006ItemId\030\002 \003(\0132\017.pb.TItem"
    "IdInfo\"{\n\026TDivineGetChallengeRsp\022\026\n\016Curr"
    "entIndexId\030\001 \001(\r\022\021\n\tChangeNum\030\002 \001(\r\022\024\n\014b"
    "uyChangeNum\030\003 \001(\r\022 \n\010SquadArr\030\004 \003(\0132\016.pb"
    ".TSquadInfo\"&\n\nTSquadInfo\022\013\n\003Pos\030\001 \001(\r\022\013"
    "\n\003Hid\030\002 \001(\r\"<\n\030TDivineTroopsSetSquadReq\022"
    " \n\010SquadArr\030\001 \003(\0132\016.pb.TSquadInfo\"\"\n\023TBu"
    "yChallengeNumReq\022\013\n\003Num\030\001 \001(\r\"%\n\022TDivine"
    "DoBattleReq\022\017\n\007IndexId\030\001 \001(\r\"_\n\022TDivineD"
    "oBattleRsp\022$\n\tDropArray\030\001 \003(\0132\021.pb.TComm"
    "onReward\022#\n\nBattleArgs\030\002 \001(\0132\017.pb.TBattl"
    "eArgs\"D\n\026TDivineReportBattleReq\022\017\n\007Index"
    "Id\030\001 \001(\r\022\031\n\021BattleResultBytes\030\002 \001(\014\">\n\026T"
    "DivineReportBattleRsp\022$\n\tDropArray\030\001 \003(\013"
    "2\021.pb.TCommonReward\"\"\n\017TDivineSweepReq\022\017"
    "\n\007IndexId\030\001 \001(\r\"7\n\017TDivineSweepRsp\022$\n\tDr"
    "opArray\030\001 \003(\0132\021.pb.TCommonReward\"&\n\023TDiv"
    "ineSkipFightReq\022\017\n\007IndexId\030\001 \001(\r\"t\n\023TDiv"
    "ineSkipFightRsp\022$\n\tBattleRet\030\001 \001(\0132\021.pb."
    "TBattleResult\022&\n\013RewardArray\030\002 \003(\0132\021.pb."
    "TCommonReward\022\017\n\007Success\030\003 \001(\r\"2\n\016TDivin"
    "eBookReq\022\016\n\006BookId\030\001 \001(\r\022\020\n\010BookType\030\002 \001"
    "(\r\"\'\n\025TDivineGetBookItemRsp\022\016\n\006BookId\030\001 "
    "\003(\r\"E\n\021TDivineRecycleReq\022\n\n\002Id\030\001 \003(\r\022\023\n\013"
    "RecycleType\030\002 \001(\r\022\017\n\007ActType\030\003 \001(\r\"9\n\021TD"
    "ivineRecycleRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb."
    "TCommonReward\"F\n\026TDivineCompoundFragReq\022"
    "\013\n\003Num\030\001 \001(\r\022\016\n\006FlagId\030\002 \003(\r\022\017\n\007ActType\030"
    "\003 \001(\r\"(\n\026TDivineCompoundFragRsp\022\016\n\006ItemI"
    "d\030\001 \003(\r", 2247);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/DivineTroops.proto", &protobuf_RegisterTypes);
  TDivineTroopsSmeltReq::default_instance_ = new TDivineTroopsSmeltReq();
  TDivineTroopsSmeltRsp::default_instance_ = new TDivineTroopsSmeltRsp();
  TDivineTroopsReplaceSmeltReq::default_instance_ = new TDivineTroopsReplaceSmeltReq();
  TDivineTroopsReplaceSmeltRsp::default_instance_ = new TDivineTroopsReplaceSmeltRsp();
  TDivineTroopsCancelSmeltReq::default_instance_ = new TDivineTroopsCancelSmeltReq();
  TDivineTroopsSurmountReq::default_instance_ = new TDivineTroopsSurmountReq();
  TDivineTroopsSurmountRes::default_instance_ = new TDivineTroopsSurmountRes();
  TDivineTroopsLotteryReq::default_instance_ = new TDivineTroopsLotteryReq();
  TDivineTroopsLotteryRsp::default_instance_ = new TDivineTroopsLotteryRsp();
  TDivineRecruitBuyReq::default_instance_ = new TDivineRecruitBuyReq();
  TDivineRecruitBuyRsp::default_instance_ = new TDivineRecruitBuyRsp();
  TDivineRecruitInfoRsp::default_instance_ = new TDivineRecruitInfoRsp();
  TItemIdInfo::default_instance_ = new TItemIdInfo();
  TDivineRecruitRewardReq::default_instance_ = new TDivineRecruitRewardReq();
  TDivineRecruitRewardRsp::default_instance_ = new TDivineRecruitRewardRsp();
  TDivineGetChallengeRsp::default_instance_ = new TDivineGetChallengeRsp();
  TSquadInfo::default_instance_ = new TSquadInfo();
  TDivineTroopsSetSquadReq::default_instance_ = new TDivineTroopsSetSquadReq();
  TBuyChallengeNumReq::default_instance_ = new TBuyChallengeNumReq();
  TDivineDoBattleReq::default_instance_ = new TDivineDoBattleReq();
  TDivineDoBattleRsp::default_instance_ = new TDivineDoBattleRsp();
  TDivineReportBattleReq::default_instance_ = new TDivineReportBattleReq();
  TDivineReportBattleRsp::default_instance_ = new TDivineReportBattleRsp();
  TDivineSweepReq::default_instance_ = new TDivineSweepReq();
  TDivineSweepRsp::default_instance_ = new TDivineSweepRsp();
  TDivineSkipFightReq::default_instance_ = new TDivineSkipFightReq();
  TDivineSkipFightRsp::default_instance_ = new TDivineSkipFightRsp();
  TDivineBookReq::default_instance_ = new TDivineBookReq();
  TDivineGetBookItemRsp::default_instance_ = new TDivineGetBookItemRsp();
  TDivineRecycleReq::default_instance_ = new TDivineRecycleReq();
  TDivineRecycleRsp::default_instance_ = new TDivineRecycleRsp();
  TDivineCompoundFragReq::default_instance_ = new TDivineCompoundFragReq();
  TDivineCompoundFragRsp::default_instance_ = new TDivineCompoundFragRsp();
  TDivineTroopsSmeltReq::default_instance_->InitAsDefaultInstance();
  TDivineTroopsSmeltRsp::default_instance_->InitAsDefaultInstance();
  TDivineTroopsReplaceSmeltReq::default_instance_->InitAsDefaultInstance();
  TDivineTroopsReplaceSmeltRsp::default_instance_->InitAsDefaultInstance();
  TDivineTroopsCancelSmeltReq::default_instance_->InitAsDefaultInstance();
  TDivineTroopsSurmountReq::default_instance_->InitAsDefaultInstance();
  TDivineTroopsSurmountRes::default_instance_->InitAsDefaultInstance();
  TDivineTroopsLotteryReq::default_instance_->InitAsDefaultInstance();
  TDivineTroopsLotteryRsp::default_instance_->InitAsDefaultInstance();
  TDivineRecruitBuyReq::default_instance_->InitAsDefaultInstance();
  TDivineRecruitBuyRsp::default_instance_->InitAsDefaultInstance();
  TDivineRecruitInfoRsp::default_instance_->InitAsDefaultInstance();
  TItemIdInfo::default_instance_->InitAsDefaultInstance();
  TDivineRecruitRewardReq::default_instance_->InitAsDefaultInstance();
  TDivineRecruitRewardRsp::default_instance_->InitAsDefaultInstance();
  TDivineGetChallengeRsp::default_instance_->InitAsDefaultInstance();
  TSquadInfo::default_instance_->InitAsDefaultInstance();
  TDivineTroopsSetSquadReq::default_instance_->InitAsDefaultInstance();
  TBuyChallengeNumReq::default_instance_->InitAsDefaultInstance();
  TDivineDoBattleReq::default_instance_->InitAsDefaultInstance();
  TDivineDoBattleRsp::default_instance_->InitAsDefaultInstance();
  TDivineReportBattleReq::default_instance_->InitAsDefaultInstance();
  TDivineReportBattleRsp::default_instance_->InitAsDefaultInstance();
  TDivineSweepReq::default_instance_->InitAsDefaultInstance();
  TDivineSweepRsp::default_instance_->InitAsDefaultInstance();
  TDivineSkipFightReq::default_instance_->InitAsDefaultInstance();
  TDivineSkipFightRsp::default_instance_->InitAsDefaultInstance();
  TDivineBookReq::default_instance_->InitAsDefaultInstance();
  TDivineGetBookItemRsp::default_instance_->InitAsDefaultInstance();
  TDivineRecycleReq::default_instance_->InitAsDefaultInstance();
  TDivineRecycleRsp::default_instance_->InitAsDefaultInstance();
  TDivineCompoundFragReq::default_instance_->InitAsDefaultInstance();
  TDivineCompoundFragRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fDivineTroops_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fDivineTroops_2eproto {
  StaticDescriptorInitializer_net_2fDivineTroops_2eproto() {
    protobuf_AddDesc_net_2fDivineTroops_2eproto();
  }
} static_descriptor_initializer_net_2fDivineTroops_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TDivineTroopsSmeltReq::kEquipIdFieldNumber;
const int TDivineTroopsSmeltReq::kSmeltTypeFieldNumber;
#endif  // !_MSC_VER

TDivineTroopsSmeltReq::TDivineTroopsSmeltReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineTroopsSmeltReq)
}

void TDivineTroopsSmeltReq::InitAsDefaultInstance() {
}

TDivineTroopsSmeltReq::TDivineTroopsSmeltReq(const TDivineTroopsSmeltReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineTroopsSmeltReq)
}

void TDivineTroopsSmeltReq::SharedCtor() {
  _cached_size_ = 0;
  equipid_ = 0u;
  smelttype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineTroopsSmeltReq::~TDivineTroopsSmeltReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineTroopsSmeltReq)
  SharedDtor();
}

void TDivineTroopsSmeltReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineTroopsSmeltReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineTroopsSmeltReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineTroopsSmeltReq_descriptor_;
}

const TDivineTroopsSmeltReq& TDivineTroopsSmeltReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineTroopsSmeltReq* TDivineTroopsSmeltReq::default_instance_ = NULL;

TDivineTroopsSmeltReq* TDivineTroopsSmeltReq::New() const {
  return new TDivineTroopsSmeltReq;
}

void TDivineTroopsSmeltReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDivineTroopsSmeltReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(equipid_, smelttype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineTroopsSmeltReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineTroopsSmeltReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EquipId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SmeltType;
        break;
      }

      // optional uint32 SmeltType = 2;
      case 2: {
        if (tag == 16) {
         parse_SmeltType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &smelttype_)));
          set_has_smelttype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineTroopsSmeltReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineTroopsSmeltReq)
  return false;
#undef DO_
}

void TDivineTroopsSmeltReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineTroopsSmeltReq)
  // optional uint32 EquipId = 1;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->equipid(), output);
  }

  // optional uint32 SmeltType = 2;
  if (has_smelttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->smelttype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineTroopsSmeltReq)
}

::google::protobuf::uint8* TDivineTroopsSmeltReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineTroopsSmeltReq)
  // optional uint32 EquipId = 1;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->equipid(), target);
  }

  // optional uint32 SmeltType = 2;
  if (has_smelttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->smelttype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineTroopsSmeltReq)
  return target;
}

int TDivineTroopsSmeltReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 EquipId = 1;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->equipid());
    }

    // optional uint32 SmeltType = 2;
    if (has_smelttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->smelttype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineTroopsSmeltReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineTroopsSmeltReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineTroopsSmeltReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineTroopsSmeltReq::MergeFrom(const TDivineTroopsSmeltReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
    if (from.has_smelttype()) {
      set_smelttype(from.smelttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineTroopsSmeltReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineTroopsSmeltReq::CopyFrom(const TDivineTroopsSmeltReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineTroopsSmeltReq::IsInitialized() const {

  return true;
}

void TDivineTroopsSmeltReq::Swap(TDivineTroopsSmeltReq* other) {
  if (other != this) {
    std::swap(equipid_, other->equipid_);
    std::swap(smelttype_, other->smelttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineTroopsSmeltReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineTroopsSmeltReq_descriptor_;
  metadata.reflection = TDivineTroopsSmeltReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineTroopsSmeltRsp::kSmeltAfterLvFieldNumber;
const int TDivineTroopsSmeltRsp::kSmeltUnSubmitAttributeFieldNumber;
const int TDivineTroopsSmeltRsp::kSmeltAttributeFieldNumber;
#endif  // !_MSC_VER

TDivineTroopsSmeltRsp::TDivineTroopsSmeltRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineTroopsSmeltRsp)
}

void TDivineTroopsSmeltRsp::InitAsDefaultInstance() {
}

TDivineTroopsSmeltRsp::TDivineTroopsSmeltRsp(const TDivineTroopsSmeltRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineTroopsSmeltRsp)
}

void TDivineTroopsSmeltRsp::SharedCtor() {
  _cached_size_ = 0;
  smeltafterlv_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineTroopsSmeltRsp::~TDivineTroopsSmeltRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineTroopsSmeltRsp)
  SharedDtor();
}

void TDivineTroopsSmeltRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineTroopsSmeltRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineTroopsSmeltRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineTroopsSmeltRsp_descriptor_;
}

const TDivineTroopsSmeltRsp& TDivineTroopsSmeltRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineTroopsSmeltRsp* TDivineTroopsSmeltRsp::default_instance_ = NULL;

TDivineTroopsSmeltRsp* TDivineTroopsSmeltRsp::New() const {
  return new TDivineTroopsSmeltRsp;
}

void TDivineTroopsSmeltRsp::Clear() {
  smeltafterlv_ = 0u;
  smeltunsubmitattribute_.Clear();
  smeltattribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineTroopsSmeltRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineTroopsSmeltRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 SmeltAfterLv = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &smeltafterlv_)));
          set_has_smeltafterlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SmeltUnSubmitAttribute;
        break;
      }

      // repeated .pb.TAttributeInfo SmeltUnSubmitAttribute = 2;
      case 2: {
        if (tag == 18) {
         parse_SmeltUnSubmitAttribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_smeltunsubmitattribute()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SmeltUnSubmitAttribute;
        if (input->ExpectTag(26)) goto parse_SmeltAttribute;
        break;
      }

      // repeated .pb.TAttributeInfo SmeltAttribute = 3;
      case 3: {
        if (tag == 26) {
         parse_SmeltAttribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_smeltattribute()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_SmeltAttribute;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineTroopsSmeltRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineTroopsSmeltRsp)
  return false;
#undef DO_
}

void TDivineTroopsSmeltRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineTroopsSmeltRsp)
  // optional uint32 SmeltAfterLv = 1;
  if (has_smeltafterlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->smeltafterlv(), output);
  }

  // repeated .pb.TAttributeInfo SmeltUnSubmitAttribute = 2;
  for (int i = 0; i < this->smeltunsubmitattribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->smeltunsubmitattribute(i), output);
  }

  // repeated .pb.TAttributeInfo SmeltAttribute = 3;
  for (int i = 0; i < this->smeltattribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->smeltattribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineTroopsSmeltRsp)
}

::google::protobuf::uint8* TDivineTroopsSmeltRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineTroopsSmeltRsp)
  // optional uint32 SmeltAfterLv = 1;
  if (has_smeltafterlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->smeltafterlv(), target);
  }

  // repeated .pb.TAttributeInfo SmeltUnSubmitAttribute = 2;
  for (int i = 0; i < this->smeltunsubmitattribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->smeltunsubmitattribute(i), target);
  }

  // repeated .pb.TAttributeInfo SmeltAttribute = 3;
  for (int i = 0; i < this->smeltattribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->smeltattribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineTroopsSmeltRsp)
  return target;
}

int TDivineTroopsSmeltRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 SmeltAfterLv = 1;
    if (has_smeltafterlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->smeltafterlv());
    }

  }
  // repeated .pb.TAttributeInfo SmeltUnSubmitAttribute = 2;
  total_size += 1 * this->smeltunsubmitattribute_size();
  for (int i = 0; i < this->smeltunsubmitattribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->smeltunsubmitattribute(i));
  }

  // repeated .pb.TAttributeInfo SmeltAttribute = 3;
  total_size += 1 * this->smeltattribute_size();
  for (int i = 0; i < this->smeltattribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->smeltattribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineTroopsSmeltRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineTroopsSmeltRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineTroopsSmeltRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineTroopsSmeltRsp::MergeFrom(const TDivineTroopsSmeltRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  smeltunsubmitattribute_.MergeFrom(from.smeltunsubmitattribute_);
  smeltattribute_.MergeFrom(from.smeltattribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smeltafterlv()) {
      set_smeltafterlv(from.smeltafterlv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineTroopsSmeltRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineTroopsSmeltRsp::CopyFrom(const TDivineTroopsSmeltRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineTroopsSmeltRsp::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->smeltunsubmitattribute())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->smeltattribute())) return false;
  return true;
}

void TDivineTroopsSmeltRsp::Swap(TDivineTroopsSmeltRsp* other) {
  if (other != this) {
    std::swap(smeltafterlv_, other->smeltafterlv_);
    smeltunsubmitattribute_.Swap(&other->smeltunsubmitattribute_);
    smeltattribute_.Swap(&other->smeltattribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineTroopsSmeltRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineTroopsSmeltRsp_descriptor_;
  metadata.reflection = TDivineTroopsSmeltRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineTroopsReplaceSmeltReq::kEquipIdFieldNumber;
#endif  // !_MSC_VER

TDivineTroopsReplaceSmeltReq::TDivineTroopsReplaceSmeltReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineTroopsReplaceSmeltReq)
}

void TDivineTroopsReplaceSmeltReq::InitAsDefaultInstance() {
}

TDivineTroopsReplaceSmeltReq::TDivineTroopsReplaceSmeltReq(const TDivineTroopsReplaceSmeltReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineTroopsReplaceSmeltReq)
}

void TDivineTroopsReplaceSmeltReq::SharedCtor() {
  _cached_size_ = 0;
  equipid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineTroopsReplaceSmeltReq::~TDivineTroopsReplaceSmeltReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineTroopsReplaceSmeltReq)
  SharedDtor();
}

void TDivineTroopsReplaceSmeltReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineTroopsReplaceSmeltReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineTroopsReplaceSmeltReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineTroopsReplaceSmeltReq_descriptor_;
}

const TDivineTroopsReplaceSmeltReq& TDivineTroopsReplaceSmeltReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineTroopsReplaceSmeltReq* TDivineTroopsReplaceSmeltReq::default_instance_ = NULL;

TDivineTroopsReplaceSmeltReq* TDivineTroopsReplaceSmeltReq::New() const {
  return new TDivineTroopsReplaceSmeltReq;
}

void TDivineTroopsReplaceSmeltReq::Clear() {
  equipid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineTroopsReplaceSmeltReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineTroopsReplaceSmeltReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EquipId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineTroopsReplaceSmeltReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineTroopsReplaceSmeltReq)
  return false;
#undef DO_
}

void TDivineTroopsReplaceSmeltReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineTroopsReplaceSmeltReq)
  // optional uint32 EquipId = 1;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->equipid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineTroopsReplaceSmeltReq)
}

::google::protobuf::uint8* TDivineTroopsReplaceSmeltReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineTroopsReplaceSmeltReq)
  // optional uint32 EquipId = 1;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->equipid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineTroopsReplaceSmeltReq)
  return target;
}

int TDivineTroopsReplaceSmeltReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 EquipId = 1;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->equipid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineTroopsReplaceSmeltReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineTroopsReplaceSmeltReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineTroopsReplaceSmeltReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineTroopsReplaceSmeltReq::MergeFrom(const TDivineTroopsReplaceSmeltReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineTroopsReplaceSmeltReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineTroopsReplaceSmeltReq::CopyFrom(const TDivineTroopsReplaceSmeltReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineTroopsReplaceSmeltReq::IsInitialized() const {

  return true;
}

void TDivineTroopsReplaceSmeltReq::Swap(TDivineTroopsReplaceSmeltReq* other) {
  if (other != this) {
    std::swap(equipid_, other->equipid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineTroopsReplaceSmeltReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineTroopsReplaceSmeltReq_descriptor_;
  metadata.reflection = TDivineTroopsReplaceSmeltReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineTroopsReplaceSmeltRsp::kSmeltLvFieldNumber;
const int TDivineTroopsReplaceSmeltRsp::kSmeltAttributeFieldNumber;
#endif  // !_MSC_VER

TDivineTroopsReplaceSmeltRsp::TDivineTroopsReplaceSmeltRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineTroopsReplaceSmeltRsp)
}

void TDivineTroopsReplaceSmeltRsp::InitAsDefaultInstance() {
}

TDivineTroopsReplaceSmeltRsp::TDivineTroopsReplaceSmeltRsp(const TDivineTroopsReplaceSmeltRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineTroopsReplaceSmeltRsp)
}

void TDivineTroopsReplaceSmeltRsp::SharedCtor() {
  _cached_size_ = 0;
  smeltlv_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineTroopsReplaceSmeltRsp::~TDivineTroopsReplaceSmeltRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineTroopsReplaceSmeltRsp)
  SharedDtor();
}

void TDivineTroopsReplaceSmeltRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineTroopsReplaceSmeltRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineTroopsReplaceSmeltRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineTroopsReplaceSmeltRsp_descriptor_;
}

const TDivineTroopsReplaceSmeltRsp& TDivineTroopsReplaceSmeltRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineTroopsReplaceSmeltRsp* TDivineTroopsReplaceSmeltRsp::default_instance_ = NULL;

TDivineTroopsReplaceSmeltRsp* TDivineTroopsReplaceSmeltRsp::New() const {
  return new TDivineTroopsReplaceSmeltRsp;
}

void TDivineTroopsReplaceSmeltRsp::Clear() {
  smeltlv_ = 0u;
  smeltattribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineTroopsReplaceSmeltRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineTroopsReplaceSmeltRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 SmeltLv = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &smeltlv_)));
          set_has_smeltlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SmeltAttribute;
        break;
      }

      // repeated .pb.TAttributeInfo SmeltAttribute = 2;
      case 2: {
        if (tag == 18) {
         parse_SmeltAttribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_smeltattribute()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SmeltAttribute;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineTroopsReplaceSmeltRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineTroopsReplaceSmeltRsp)
  return false;
#undef DO_
}

void TDivineTroopsReplaceSmeltRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineTroopsReplaceSmeltRsp)
  // optional uint32 SmeltLv = 1;
  if (has_smeltlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->smeltlv(), output);
  }

  // repeated .pb.TAttributeInfo SmeltAttribute = 2;
  for (int i = 0; i < this->smeltattribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->smeltattribute(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineTroopsReplaceSmeltRsp)
}

::google::protobuf::uint8* TDivineTroopsReplaceSmeltRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineTroopsReplaceSmeltRsp)
  // optional uint32 SmeltLv = 1;
  if (has_smeltlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->smeltlv(), target);
  }

  // repeated .pb.TAttributeInfo SmeltAttribute = 2;
  for (int i = 0; i < this->smeltattribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->smeltattribute(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineTroopsReplaceSmeltRsp)
  return target;
}

int TDivineTroopsReplaceSmeltRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 SmeltLv = 1;
    if (has_smeltlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->smeltlv());
    }

  }
  // repeated .pb.TAttributeInfo SmeltAttribute = 2;
  total_size += 1 * this->smeltattribute_size();
  for (int i = 0; i < this->smeltattribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->smeltattribute(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineTroopsReplaceSmeltRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineTroopsReplaceSmeltRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineTroopsReplaceSmeltRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineTroopsReplaceSmeltRsp::MergeFrom(const TDivineTroopsReplaceSmeltRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  smeltattribute_.MergeFrom(from.smeltattribute_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smeltlv()) {
      set_smeltlv(from.smeltlv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineTroopsReplaceSmeltRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineTroopsReplaceSmeltRsp::CopyFrom(const TDivineTroopsReplaceSmeltRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineTroopsReplaceSmeltRsp::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->smeltattribute())) return false;
  return true;
}

void TDivineTroopsReplaceSmeltRsp::Swap(TDivineTroopsReplaceSmeltRsp* other) {
  if (other != this) {
    std::swap(smeltlv_, other->smeltlv_);
    smeltattribute_.Swap(&other->smeltattribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineTroopsReplaceSmeltRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineTroopsReplaceSmeltRsp_descriptor_;
  metadata.reflection = TDivineTroopsReplaceSmeltRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineTroopsCancelSmeltReq::kEquipIdFieldNumber;
#endif  // !_MSC_VER

TDivineTroopsCancelSmeltReq::TDivineTroopsCancelSmeltReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineTroopsCancelSmeltReq)
}

void TDivineTroopsCancelSmeltReq::InitAsDefaultInstance() {
}

TDivineTroopsCancelSmeltReq::TDivineTroopsCancelSmeltReq(const TDivineTroopsCancelSmeltReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineTroopsCancelSmeltReq)
}

void TDivineTroopsCancelSmeltReq::SharedCtor() {
  _cached_size_ = 0;
  equipid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineTroopsCancelSmeltReq::~TDivineTroopsCancelSmeltReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineTroopsCancelSmeltReq)
  SharedDtor();
}

void TDivineTroopsCancelSmeltReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineTroopsCancelSmeltReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineTroopsCancelSmeltReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineTroopsCancelSmeltReq_descriptor_;
}

const TDivineTroopsCancelSmeltReq& TDivineTroopsCancelSmeltReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineTroopsCancelSmeltReq* TDivineTroopsCancelSmeltReq::default_instance_ = NULL;

TDivineTroopsCancelSmeltReq* TDivineTroopsCancelSmeltReq::New() const {
  return new TDivineTroopsCancelSmeltReq;
}

void TDivineTroopsCancelSmeltReq::Clear() {
  equipid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineTroopsCancelSmeltReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineTroopsCancelSmeltReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EquipId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineTroopsCancelSmeltReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineTroopsCancelSmeltReq)
  return false;
#undef DO_
}

void TDivineTroopsCancelSmeltReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineTroopsCancelSmeltReq)
  // optional uint32 EquipId = 1;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->equipid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineTroopsCancelSmeltReq)
}

::google::protobuf::uint8* TDivineTroopsCancelSmeltReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineTroopsCancelSmeltReq)
  // optional uint32 EquipId = 1;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->equipid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineTroopsCancelSmeltReq)
  return target;
}

int TDivineTroopsCancelSmeltReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 EquipId = 1;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->equipid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineTroopsCancelSmeltReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineTroopsCancelSmeltReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineTroopsCancelSmeltReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineTroopsCancelSmeltReq::MergeFrom(const TDivineTroopsCancelSmeltReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineTroopsCancelSmeltReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineTroopsCancelSmeltReq::CopyFrom(const TDivineTroopsCancelSmeltReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineTroopsCancelSmeltReq::IsInitialized() const {

  return true;
}

void TDivineTroopsCancelSmeltReq::Swap(TDivineTroopsCancelSmeltReq* other) {
  if (other != this) {
    std::swap(equipid_, other->equipid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineTroopsCancelSmeltReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineTroopsCancelSmeltReq_descriptor_;
  metadata.reflection = TDivineTroopsCancelSmeltReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineTroopsSurmountReq::kEquipIdFieldNumber;
#endif  // !_MSC_VER

TDivineTroopsSurmountReq::TDivineTroopsSurmountReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineTroopsSurmountReq)
}

void TDivineTroopsSurmountReq::InitAsDefaultInstance() {
}

TDivineTroopsSurmountReq::TDivineTroopsSurmountReq(const TDivineTroopsSurmountReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineTroopsSurmountReq)
}

void TDivineTroopsSurmountReq::SharedCtor() {
  _cached_size_ = 0;
  equipid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineTroopsSurmountReq::~TDivineTroopsSurmountReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineTroopsSurmountReq)
  SharedDtor();
}

void TDivineTroopsSurmountReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineTroopsSurmountReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineTroopsSurmountReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineTroopsSurmountReq_descriptor_;
}

const TDivineTroopsSurmountReq& TDivineTroopsSurmountReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineTroopsSurmountReq* TDivineTroopsSurmountReq::default_instance_ = NULL;

TDivineTroopsSurmountReq* TDivineTroopsSurmountReq::New() const {
  return new TDivineTroopsSurmountReq;
}

void TDivineTroopsSurmountReq::Clear() {
  equipid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineTroopsSurmountReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineTroopsSurmountReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EquipId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineTroopsSurmountReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineTroopsSurmountReq)
  return false;
#undef DO_
}

void TDivineTroopsSurmountReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineTroopsSurmountReq)
  // optional uint32 EquipId = 1;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->equipid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineTroopsSurmountReq)
}

::google::protobuf::uint8* TDivineTroopsSurmountReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineTroopsSurmountReq)
  // optional uint32 EquipId = 1;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->equipid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineTroopsSurmountReq)
  return target;
}

int TDivineTroopsSurmountReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 EquipId = 1;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->equipid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineTroopsSurmountReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineTroopsSurmountReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineTroopsSurmountReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineTroopsSurmountReq::MergeFrom(const TDivineTroopsSurmountReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineTroopsSurmountReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineTroopsSurmountReq::CopyFrom(const TDivineTroopsSurmountReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineTroopsSurmountReq::IsInitialized() const {

  return true;
}

void TDivineTroopsSurmountReq::Swap(TDivineTroopsSurmountReq* other) {
  if (other != this) {
    std::swap(equipid_, other->equipid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineTroopsSurmountReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineTroopsSurmountReq_descriptor_;
  metadata.reflection = TDivineTroopsSurmountReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineTroopsSurmountRes::kSmeltLvFieldNumber;
const int TDivineTroopsSurmountRes::kSurmountLvFieldNumber;
#endif  // !_MSC_VER

TDivineTroopsSurmountRes::TDivineTroopsSurmountRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineTroopsSurmountRes)
}

void TDivineTroopsSurmountRes::InitAsDefaultInstance() {
}

TDivineTroopsSurmountRes::TDivineTroopsSurmountRes(const TDivineTroopsSurmountRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineTroopsSurmountRes)
}

void TDivineTroopsSurmountRes::SharedCtor() {
  _cached_size_ = 0;
  smeltlv_ = 0u;
  surmountlv_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineTroopsSurmountRes::~TDivineTroopsSurmountRes() {
  // @@protoc_insertion_point(destructor:pb.TDivineTroopsSurmountRes)
  SharedDtor();
}

void TDivineTroopsSurmountRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineTroopsSurmountRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineTroopsSurmountRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineTroopsSurmountRes_descriptor_;
}

const TDivineTroopsSurmountRes& TDivineTroopsSurmountRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineTroopsSurmountRes* TDivineTroopsSurmountRes::default_instance_ = NULL;

TDivineTroopsSurmountRes* TDivineTroopsSurmountRes::New() const {
  return new TDivineTroopsSurmountRes;
}

void TDivineTroopsSurmountRes::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDivineTroopsSurmountRes*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(smeltlv_, surmountlv_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineTroopsSurmountRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineTroopsSurmountRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 SmeltLv = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &smeltlv_)));
          set_has_smeltlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SurmountLv;
        break;
      }

      // optional uint32 SurmountLv = 2;
      case 2: {
        if (tag == 16) {
         parse_SurmountLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &surmountlv_)));
          set_has_surmountlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineTroopsSurmountRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineTroopsSurmountRes)
  return false;
#undef DO_
}

void TDivineTroopsSurmountRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineTroopsSurmountRes)
  // optional uint32 SmeltLv = 1;
  if (has_smeltlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->smeltlv(), output);
  }

  // optional uint32 SurmountLv = 2;
  if (has_surmountlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->surmountlv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineTroopsSurmountRes)
}

::google::protobuf::uint8* TDivineTroopsSurmountRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineTroopsSurmountRes)
  // optional uint32 SmeltLv = 1;
  if (has_smeltlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->smeltlv(), target);
  }

  // optional uint32 SurmountLv = 2;
  if (has_surmountlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->surmountlv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineTroopsSurmountRes)
  return target;
}

int TDivineTroopsSurmountRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 SmeltLv = 1;
    if (has_smeltlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->smeltlv());
    }

    // optional uint32 SurmountLv = 2;
    if (has_surmountlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->surmountlv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineTroopsSurmountRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineTroopsSurmountRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineTroopsSurmountRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineTroopsSurmountRes::MergeFrom(const TDivineTroopsSurmountRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smeltlv()) {
      set_smeltlv(from.smeltlv());
    }
    if (from.has_surmountlv()) {
      set_surmountlv(from.surmountlv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineTroopsSurmountRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineTroopsSurmountRes::CopyFrom(const TDivineTroopsSurmountRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineTroopsSurmountRes::IsInitialized() const {

  return true;
}

void TDivineTroopsSurmountRes::Swap(TDivineTroopsSurmountRes* other) {
  if (other != this) {
    std::swap(smeltlv_, other->smeltlv_);
    std::swap(surmountlv_, other->surmountlv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineTroopsSurmountRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineTroopsSurmountRes_descriptor_;
  metadata.reflection = TDivineTroopsSurmountRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineTroopsLotteryReq::kDrawTypeFieldNumber;
#endif  // !_MSC_VER

TDivineTroopsLotteryReq::TDivineTroopsLotteryReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineTroopsLotteryReq)
}

void TDivineTroopsLotteryReq::InitAsDefaultInstance() {
}

TDivineTroopsLotteryReq::TDivineTroopsLotteryReq(const TDivineTroopsLotteryReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineTroopsLotteryReq)
}

void TDivineTroopsLotteryReq::SharedCtor() {
  _cached_size_ = 0;
  drawtype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineTroopsLotteryReq::~TDivineTroopsLotteryReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineTroopsLotteryReq)
  SharedDtor();
}

void TDivineTroopsLotteryReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineTroopsLotteryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineTroopsLotteryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineTroopsLotteryReq_descriptor_;
}

const TDivineTroopsLotteryReq& TDivineTroopsLotteryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineTroopsLotteryReq* TDivineTroopsLotteryReq::default_instance_ = NULL;

TDivineTroopsLotteryReq* TDivineTroopsLotteryReq::New() const {
  return new TDivineTroopsLotteryReq;
}

void TDivineTroopsLotteryReq::Clear() {
  drawtype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineTroopsLotteryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineTroopsLotteryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 DrawType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drawtype_)));
          set_has_drawtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineTroopsLotteryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineTroopsLotteryReq)
  return false;
#undef DO_
}

void TDivineTroopsLotteryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineTroopsLotteryReq)
  // optional uint32 DrawType = 1;
  if (has_drawtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->drawtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineTroopsLotteryReq)
}

::google::protobuf::uint8* TDivineTroopsLotteryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineTroopsLotteryReq)
  // optional uint32 DrawType = 1;
  if (has_drawtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->drawtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineTroopsLotteryReq)
  return target;
}

int TDivineTroopsLotteryReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 DrawType = 1;
    if (has_drawtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->drawtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineTroopsLotteryReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineTroopsLotteryReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineTroopsLotteryReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineTroopsLotteryReq::MergeFrom(const TDivineTroopsLotteryReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_drawtype()) {
      set_drawtype(from.drawtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineTroopsLotteryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineTroopsLotteryReq::CopyFrom(const TDivineTroopsLotteryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineTroopsLotteryReq::IsInitialized() const {

  return true;
}

void TDivineTroopsLotteryReq::Swap(TDivineTroopsLotteryReq* other) {
  if (other != this) {
    std::swap(drawtype_, other->drawtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineTroopsLotteryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineTroopsLotteryReq_descriptor_;
  metadata.reflection = TDivineTroopsLotteryReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineTroopsLotteryRsp::kArrRewardFieldNumber;
const int TDivineTroopsLotteryRsp::kRecruitScoreFieldNumber;
#endif  // !_MSC_VER

TDivineTroopsLotteryRsp::TDivineTroopsLotteryRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineTroopsLotteryRsp)
}

void TDivineTroopsLotteryRsp::InitAsDefaultInstance() {
}

TDivineTroopsLotteryRsp::TDivineTroopsLotteryRsp(const TDivineTroopsLotteryRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineTroopsLotteryRsp)
}

void TDivineTroopsLotteryRsp::SharedCtor() {
  _cached_size_ = 0;
  recruitscore_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineTroopsLotteryRsp::~TDivineTroopsLotteryRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineTroopsLotteryRsp)
  SharedDtor();
}

void TDivineTroopsLotteryRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineTroopsLotteryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineTroopsLotteryRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineTroopsLotteryRsp_descriptor_;
}

const TDivineTroopsLotteryRsp& TDivineTroopsLotteryRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineTroopsLotteryRsp* TDivineTroopsLotteryRsp::default_instance_ = NULL;

TDivineTroopsLotteryRsp* TDivineTroopsLotteryRsp::New() const {
  return new TDivineTroopsLotteryRsp;
}

void TDivineTroopsLotteryRsp::Clear() {
  recruitscore_ = 0u;
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineTroopsLotteryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineTroopsLotteryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectTag(16)) goto parse_RecruitScore;
        break;
      }

      // optional uint32 RecruitScore = 2;
      case 2: {
        if (tag == 16) {
         parse_RecruitScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recruitscore_)));
          set_has_recruitscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineTroopsLotteryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineTroopsLotteryRsp)
  return false;
#undef DO_
}

void TDivineTroopsLotteryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineTroopsLotteryRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  // optional uint32 RecruitScore = 2;
  if (has_recruitscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recruitscore(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineTroopsLotteryRsp)
}

::google::protobuf::uint8* TDivineTroopsLotteryRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineTroopsLotteryRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  // optional uint32 RecruitScore = 2;
  if (has_recruitscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recruitscore(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineTroopsLotteryRsp)
  return target;
}

int TDivineTroopsLotteryRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 RecruitScore = 2;
    if (has_recruitscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recruitscore());
    }

  }
  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineTroopsLotteryRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineTroopsLotteryRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineTroopsLotteryRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineTroopsLotteryRsp::MergeFrom(const TDivineTroopsLotteryRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_recruitscore()) {
      set_recruitscore(from.recruitscore());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineTroopsLotteryRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineTroopsLotteryRsp::CopyFrom(const TDivineTroopsLotteryRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineTroopsLotteryRsp::IsInitialized() const {

  return true;
}

void TDivineTroopsLotteryRsp::Swap(TDivineTroopsLotteryRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(recruitscore_, other->recruitscore_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineTroopsLotteryRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineTroopsLotteryRsp_descriptor_;
  metadata.reflection = TDivineTroopsLotteryRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineRecruitBuyReq::kRecruitBuyTypeFieldNumber;
#endif  // !_MSC_VER

TDivineRecruitBuyReq::TDivineRecruitBuyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineRecruitBuyReq)
}

void TDivineRecruitBuyReq::InitAsDefaultInstance() {
}

TDivineRecruitBuyReq::TDivineRecruitBuyReq(const TDivineRecruitBuyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineRecruitBuyReq)
}

void TDivineRecruitBuyReq::SharedCtor() {
  _cached_size_ = 0;
  recruitbuytype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineRecruitBuyReq::~TDivineRecruitBuyReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineRecruitBuyReq)
  SharedDtor();
}

void TDivineRecruitBuyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineRecruitBuyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineRecruitBuyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineRecruitBuyReq_descriptor_;
}

const TDivineRecruitBuyReq& TDivineRecruitBuyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineRecruitBuyReq* TDivineRecruitBuyReq::default_instance_ = NULL;

TDivineRecruitBuyReq* TDivineRecruitBuyReq::New() const {
  return new TDivineRecruitBuyReq;
}

void TDivineRecruitBuyReq::Clear() {
  recruitbuytype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineRecruitBuyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineRecruitBuyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RecruitBuyType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recruitbuytype_)));
          set_has_recruitbuytype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineRecruitBuyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineRecruitBuyReq)
  return false;
#undef DO_
}

void TDivineRecruitBuyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineRecruitBuyReq)
  // optional uint32 RecruitBuyType = 1;
  if (has_recruitbuytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recruitbuytype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineRecruitBuyReq)
}

::google::protobuf::uint8* TDivineRecruitBuyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineRecruitBuyReq)
  // optional uint32 RecruitBuyType = 1;
  if (has_recruitbuytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recruitbuytype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineRecruitBuyReq)
  return target;
}

int TDivineRecruitBuyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RecruitBuyType = 1;
    if (has_recruitbuytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recruitbuytype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineRecruitBuyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineRecruitBuyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineRecruitBuyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineRecruitBuyReq::MergeFrom(const TDivineRecruitBuyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recruitbuytype()) {
      set_recruitbuytype(from.recruitbuytype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineRecruitBuyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineRecruitBuyReq::CopyFrom(const TDivineRecruitBuyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineRecruitBuyReq::IsInitialized() const {

  return true;
}

void TDivineRecruitBuyReq::Swap(TDivineRecruitBuyReq* other) {
  if (other != this) {
    std::swap(recruitbuytype_, other->recruitbuytype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineRecruitBuyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineRecruitBuyReq_descriptor_;
  metadata.reflection = TDivineRecruitBuyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineRecruitBuyRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TDivineRecruitBuyRsp::TDivineRecruitBuyRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineRecruitBuyRsp)
}

void TDivineRecruitBuyRsp::InitAsDefaultInstance() {
}

TDivineRecruitBuyRsp::TDivineRecruitBuyRsp(const TDivineRecruitBuyRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineRecruitBuyRsp)
}

void TDivineRecruitBuyRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineRecruitBuyRsp::~TDivineRecruitBuyRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineRecruitBuyRsp)
  SharedDtor();
}

void TDivineRecruitBuyRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineRecruitBuyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineRecruitBuyRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineRecruitBuyRsp_descriptor_;
}

const TDivineRecruitBuyRsp& TDivineRecruitBuyRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineRecruitBuyRsp* TDivineRecruitBuyRsp::default_instance_ = NULL;

TDivineRecruitBuyRsp* TDivineRecruitBuyRsp::New() const {
  return new TDivineRecruitBuyRsp;
}

void TDivineRecruitBuyRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineRecruitBuyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineRecruitBuyRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineRecruitBuyRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineRecruitBuyRsp)
  return false;
#undef DO_
}

void TDivineRecruitBuyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineRecruitBuyRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineRecruitBuyRsp)
}

::google::protobuf::uint8* TDivineRecruitBuyRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineRecruitBuyRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineRecruitBuyRsp)
  return target;
}

int TDivineRecruitBuyRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineRecruitBuyRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineRecruitBuyRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineRecruitBuyRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineRecruitBuyRsp::MergeFrom(const TDivineRecruitBuyRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineRecruitBuyRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineRecruitBuyRsp::CopyFrom(const TDivineRecruitBuyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineRecruitBuyRsp::IsInitialized() const {

  return true;
}

void TDivineRecruitBuyRsp::Swap(TDivineRecruitBuyRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineRecruitBuyRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineRecruitBuyRsp_descriptor_;
  metadata.reflection = TDivineRecruitBuyRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineRecruitInfoRsp::kRecruitScoreFieldNumber;
const int TDivineRecruitInfoRsp::kRecruitNumFieldNumber;
const int TDivineRecruitInfoRsp::kHasBuyNumFieldNumber;
const int TDivineRecruitInfoRsp::kItemIdFieldNumber;
#endif  // !_MSC_VER

TDivineRecruitInfoRsp::TDivineRecruitInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineRecruitInfoRsp)
}

void TDivineRecruitInfoRsp::InitAsDefaultInstance() {
}

TDivineRecruitInfoRsp::TDivineRecruitInfoRsp(const TDivineRecruitInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineRecruitInfoRsp)
}

void TDivineRecruitInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  recruitscore_ = 0u;
  recruitnum_ = 0u;
  hasbuynum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineRecruitInfoRsp::~TDivineRecruitInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineRecruitInfoRsp)
  SharedDtor();
}

void TDivineRecruitInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineRecruitInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineRecruitInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineRecruitInfoRsp_descriptor_;
}

const TDivineRecruitInfoRsp& TDivineRecruitInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineRecruitInfoRsp* TDivineRecruitInfoRsp::default_instance_ = NULL;

TDivineRecruitInfoRsp* TDivineRecruitInfoRsp::New() const {
  return new TDivineRecruitInfoRsp;
}

void TDivineRecruitInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDivineRecruitInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(recruitscore_, recruitnum_);
    hasbuynum_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  itemid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineRecruitInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineRecruitInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RecruitScore = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recruitscore_)));
          set_has_recruitscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RecruitNum;
        break;
      }

      // optional uint32 RecruitNum = 2;
      case 2: {
        if (tag == 16) {
         parse_RecruitNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recruitnum_)));
          set_has_recruitnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_HasBuyNum;
        break;
      }

      // optional uint32 HasBuyNum = 3;
      case 3: {
        if (tag == 24) {
         parse_HasBuyNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hasbuynum_)));
          set_has_hasbuynum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ItemId;
        break;
      }

      // repeated .pb.TItemIdInfo ItemId = 4;
      case 4: {
        if (tag == 34) {
         parse_ItemId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ItemId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineRecruitInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineRecruitInfoRsp)
  return false;
#undef DO_
}

void TDivineRecruitInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineRecruitInfoRsp)
  // optional uint32 RecruitScore = 1;
  if (has_recruitscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recruitscore(), output);
  }

  // optional uint32 RecruitNum = 2;
  if (has_recruitnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recruitnum(), output);
  }

  // optional uint32 HasBuyNum = 3;
  if (has_hasbuynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hasbuynum(), output);
  }

  // repeated .pb.TItemIdInfo ItemId = 4;
  for (int i = 0; i < this->itemid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->itemid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineRecruitInfoRsp)
}

::google::protobuf::uint8* TDivineRecruitInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineRecruitInfoRsp)
  // optional uint32 RecruitScore = 1;
  if (has_recruitscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recruitscore(), target);
  }

  // optional uint32 RecruitNum = 2;
  if (has_recruitnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recruitnum(), target);
  }

  // optional uint32 HasBuyNum = 3;
  if (has_hasbuynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hasbuynum(), target);
  }

  // repeated .pb.TItemIdInfo ItemId = 4;
  for (int i = 0; i < this->itemid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->itemid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineRecruitInfoRsp)
  return target;
}

int TDivineRecruitInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RecruitScore = 1;
    if (has_recruitscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recruitscore());
    }

    // optional uint32 RecruitNum = 2;
    if (has_recruitnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recruitnum());
    }

    // optional uint32 HasBuyNum = 3;
    if (has_hasbuynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hasbuynum());
    }

  }
  // repeated .pb.TItemIdInfo ItemId = 4;
  total_size += 1 * this->itemid_size();
  for (int i = 0; i < this->itemid_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemid(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineRecruitInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineRecruitInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineRecruitInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineRecruitInfoRsp::MergeFrom(const TDivineRecruitInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  itemid_.MergeFrom(from.itemid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recruitscore()) {
      set_recruitscore(from.recruitscore());
    }
    if (from.has_recruitnum()) {
      set_recruitnum(from.recruitnum());
    }
    if (from.has_hasbuynum()) {
      set_hasbuynum(from.hasbuynum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineRecruitInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineRecruitInfoRsp::CopyFrom(const TDivineRecruitInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineRecruitInfoRsp::IsInitialized() const {

  return true;
}

void TDivineRecruitInfoRsp::Swap(TDivineRecruitInfoRsp* other) {
  if (other != this) {
    std::swap(recruitscore_, other->recruitscore_);
    std::swap(recruitnum_, other->recruitnum_);
    std::swap(hasbuynum_, other->hasbuynum_);
    itemid_.Swap(&other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineRecruitInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineRecruitInfoRsp_descriptor_;
  metadata.reflection = TDivineRecruitInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemIdInfo::kIdsFieldNumber;
#endif  // !_MSC_VER

TItemIdInfo::TItemIdInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemIdInfo)
}

void TItemIdInfo::InitAsDefaultInstance() {
}

TItemIdInfo::TItemIdInfo(const TItemIdInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemIdInfo)
}

void TItemIdInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemIdInfo::~TItemIdInfo() {
  // @@protoc_insertion_point(destructor:pb.TItemIdInfo)
  SharedDtor();
}

void TItemIdInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemIdInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemIdInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemIdInfo_descriptor_;
}

const TItemIdInfo& TItemIdInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TItemIdInfo* TItemIdInfo::default_instance_ = NULL;

TItemIdInfo* TItemIdInfo::New() const {
  return new TItemIdInfo;
}

void TItemIdInfo::Clear() {
  ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemIdInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemIdInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ids = 1;
      case 1: {
        if (tag == 8) {
         parse_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_ids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemIdInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemIdInfo)
  return false;
#undef DO_
}

void TItemIdInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemIdInfo)
  // repeated uint32 ids = 1;
  for (int i = 0; i < this->ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemIdInfo)
}

::google::protobuf::uint8* TItemIdInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemIdInfo)
  // repeated uint32 ids = 1;
  for (int i = 0; i < this->ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemIdInfo)
  return target;
}

int TItemIdInfo::ByteSize() const {
  int total_size = 0;

  // repeated uint32 ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ids(i));
    }
    total_size += 1 * this->ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemIdInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemIdInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemIdInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemIdInfo::MergeFrom(const TItemIdInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  ids_.MergeFrom(from.ids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemIdInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemIdInfo::CopyFrom(const TItemIdInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemIdInfo::IsInitialized() const {

  return true;
}

void TItemIdInfo::Swap(TItemIdInfo* other) {
  if (other != this) {
    ids_.Swap(&other->ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemIdInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemIdInfo_descriptor_;
  metadata.reflection = TItemIdInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineRecruitRewardReq::kIdFieldNumber;
#endif  // !_MSC_VER

TDivineRecruitRewardReq::TDivineRecruitRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineRecruitRewardReq)
}

void TDivineRecruitRewardReq::InitAsDefaultInstance() {
}

TDivineRecruitRewardReq::TDivineRecruitRewardReq(const TDivineRecruitRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineRecruitRewardReq)
}

void TDivineRecruitRewardReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineRecruitRewardReq::~TDivineRecruitRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineRecruitRewardReq)
  SharedDtor();
}

void TDivineRecruitRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineRecruitRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineRecruitRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineRecruitRewardReq_descriptor_;
}

const TDivineRecruitRewardReq& TDivineRecruitRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineRecruitRewardReq* TDivineRecruitRewardReq::default_instance_ = NULL;

TDivineRecruitRewardReq* TDivineRecruitRewardReq::New() const {
  return new TDivineRecruitRewardReq;
}

void TDivineRecruitRewardReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineRecruitRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineRecruitRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineRecruitRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineRecruitRewardReq)
  return false;
#undef DO_
}

void TDivineRecruitRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineRecruitRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineRecruitRewardReq)
}

::google::protobuf::uint8* TDivineRecruitRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineRecruitRewardReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineRecruitRewardReq)
  return target;
}

int TDivineRecruitRewardReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineRecruitRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineRecruitRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineRecruitRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineRecruitRewardReq::MergeFrom(const TDivineRecruitRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineRecruitRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineRecruitRewardReq::CopyFrom(const TDivineRecruitRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineRecruitRewardReq::IsInitialized() const {

  return true;
}

void TDivineRecruitRewardReq::Swap(TDivineRecruitRewardReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineRecruitRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineRecruitRewardReq_descriptor_;
  metadata.reflection = TDivineRecruitRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineRecruitRewardRsp::kArrRewardFieldNumber;
const int TDivineRecruitRewardRsp::kItemIdFieldNumber;
#endif  // !_MSC_VER

TDivineRecruitRewardRsp::TDivineRecruitRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineRecruitRewardRsp)
}

void TDivineRecruitRewardRsp::InitAsDefaultInstance() {
}

TDivineRecruitRewardRsp::TDivineRecruitRewardRsp(const TDivineRecruitRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineRecruitRewardRsp)
}

void TDivineRecruitRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineRecruitRewardRsp::~TDivineRecruitRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineRecruitRewardRsp)
  SharedDtor();
}

void TDivineRecruitRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineRecruitRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineRecruitRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineRecruitRewardRsp_descriptor_;
}

const TDivineRecruitRewardRsp& TDivineRecruitRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineRecruitRewardRsp* TDivineRecruitRewardRsp::default_instance_ = NULL;

TDivineRecruitRewardRsp* TDivineRecruitRewardRsp::New() const {
  return new TDivineRecruitRewardRsp;
}

void TDivineRecruitRewardRsp::Clear() {
  arrreward_.Clear();
  itemid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineRecruitRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineRecruitRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectTag(18)) goto parse_ItemId;
        break;
      }

      // repeated .pb.TItemIdInfo ItemId = 2;
      case 2: {
        if (tag == 18) {
         parse_ItemId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ItemId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineRecruitRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineRecruitRewardRsp)
  return false;
#undef DO_
}

void TDivineRecruitRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineRecruitRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  // repeated .pb.TItemIdInfo ItemId = 2;
  for (int i = 0; i < this->itemid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineRecruitRewardRsp)
}

::google::protobuf::uint8* TDivineRecruitRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineRecruitRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  // repeated .pb.TItemIdInfo ItemId = 2;
  for (int i = 0; i < this->itemid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineRecruitRewardRsp)
  return target;
}

int TDivineRecruitRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  // repeated .pb.TItemIdInfo ItemId = 2;
  total_size += 1 * this->itemid_size();
  for (int i = 0; i < this->itemid_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemid(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineRecruitRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineRecruitRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineRecruitRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineRecruitRewardRsp::MergeFrom(const TDivineRecruitRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  itemid_.MergeFrom(from.itemid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineRecruitRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineRecruitRewardRsp::CopyFrom(const TDivineRecruitRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineRecruitRewardRsp::IsInitialized() const {

  return true;
}

void TDivineRecruitRewardRsp::Swap(TDivineRecruitRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    itemid_.Swap(&other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineRecruitRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineRecruitRewardRsp_descriptor_;
  metadata.reflection = TDivineRecruitRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineGetChallengeRsp::kCurrentIndexIdFieldNumber;
const int TDivineGetChallengeRsp::kChangeNumFieldNumber;
const int TDivineGetChallengeRsp::kBuyChangeNumFieldNumber;
const int TDivineGetChallengeRsp::kSquadArrFieldNumber;
#endif  // !_MSC_VER

TDivineGetChallengeRsp::TDivineGetChallengeRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineGetChallengeRsp)
}

void TDivineGetChallengeRsp::InitAsDefaultInstance() {
}

TDivineGetChallengeRsp::TDivineGetChallengeRsp(const TDivineGetChallengeRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineGetChallengeRsp)
}

void TDivineGetChallengeRsp::SharedCtor() {
  _cached_size_ = 0;
  currentindexid_ = 0u;
  changenum_ = 0u;
  buychangenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineGetChallengeRsp::~TDivineGetChallengeRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineGetChallengeRsp)
  SharedDtor();
}

void TDivineGetChallengeRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineGetChallengeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineGetChallengeRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineGetChallengeRsp_descriptor_;
}

const TDivineGetChallengeRsp& TDivineGetChallengeRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineGetChallengeRsp* TDivineGetChallengeRsp::default_instance_ = NULL;

TDivineGetChallengeRsp* TDivineGetChallengeRsp::New() const {
  return new TDivineGetChallengeRsp;
}

void TDivineGetChallengeRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDivineGetChallengeRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(currentindexid_, changenum_);
    buychangenum_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  squadarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineGetChallengeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineGetChallengeRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CurrentIndexId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currentindexid_)));
          set_has_currentindexid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ChangeNum;
        break;
      }

      // optional uint32 ChangeNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ChangeNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &changenum_)));
          set_has_changenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_buyChangeNum;
        break;
      }

      // optional uint32 buyChangeNum = 3;
      case 3: {
        if (tag == 24) {
         parse_buyChangeNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buychangenum_)));
          set_has_buychangenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_SquadArr;
        break;
      }

      // repeated .pb.TSquadInfo SquadArr = 4;
      case 4: {
        if (tag == 34) {
         parse_SquadArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_squadarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_SquadArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineGetChallengeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineGetChallengeRsp)
  return false;
#undef DO_
}

void TDivineGetChallengeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineGetChallengeRsp)
  // optional uint32 CurrentIndexId = 1;
  if (has_currentindexid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->currentindexid(), output);
  }

  // optional uint32 ChangeNum = 2;
  if (has_changenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->changenum(), output);
  }

  // optional uint32 buyChangeNum = 3;
  if (has_buychangenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->buychangenum(), output);
  }

  // repeated .pb.TSquadInfo SquadArr = 4;
  for (int i = 0; i < this->squadarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->squadarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineGetChallengeRsp)
}

::google::protobuf::uint8* TDivineGetChallengeRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineGetChallengeRsp)
  // optional uint32 CurrentIndexId = 1;
  if (has_currentindexid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->currentindexid(), target);
  }

  // optional uint32 ChangeNum = 2;
  if (has_changenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->changenum(), target);
  }

  // optional uint32 buyChangeNum = 3;
  if (has_buychangenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->buychangenum(), target);
  }

  // repeated .pb.TSquadInfo SquadArr = 4;
  for (int i = 0; i < this->squadarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->squadarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineGetChallengeRsp)
  return target;
}

int TDivineGetChallengeRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 CurrentIndexId = 1;
    if (has_currentindexid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currentindexid());
    }

    // optional uint32 ChangeNum = 2;
    if (has_changenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->changenum());
    }

    // optional uint32 buyChangeNum = 3;
    if (has_buychangenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buychangenum());
    }

  }
  // repeated .pb.TSquadInfo SquadArr = 4;
  total_size += 1 * this->squadarr_size();
  for (int i = 0; i < this->squadarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->squadarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineGetChallengeRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineGetChallengeRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineGetChallengeRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineGetChallengeRsp::MergeFrom(const TDivineGetChallengeRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  squadarr_.MergeFrom(from.squadarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_currentindexid()) {
      set_currentindexid(from.currentindexid());
    }
    if (from.has_changenum()) {
      set_changenum(from.changenum());
    }
    if (from.has_buychangenum()) {
      set_buychangenum(from.buychangenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineGetChallengeRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineGetChallengeRsp::CopyFrom(const TDivineGetChallengeRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineGetChallengeRsp::IsInitialized() const {

  return true;
}

void TDivineGetChallengeRsp::Swap(TDivineGetChallengeRsp* other) {
  if (other != this) {
    std::swap(currentindexid_, other->currentindexid_);
    std::swap(changenum_, other->changenum_);
    std::swap(buychangenum_, other->buychangenum_);
    squadarr_.Swap(&other->squadarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineGetChallengeRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineGetChallengeRsp_descriptor_;
  metadata.reflection = TDivineGetChallengeRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TSquadInfo::kPosFieldNumber;
const int TSquadInfo::kHidFieldNumber;
#endif  // !_MSC_VER

TSquadInfo::TSquadInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSquadInfo)
}

void TSquadInfo::InitAsDefaultInstance() {
}

TSquadInfo::TSquadInfo(const TSquadInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TSquadInfo)
}

void TSquadInfo::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0u;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TSquadInfo::~TSquadInfo() {
  // @@protoc_insertion_point(destructor:pb.TSquadInfo)
  SharedDtor();
}

void TSquadInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TSquadInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TSquadInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TSquadInfo_descriptor_;
}

const TSquadInfo& TSquadInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TSquadInfo* TSquadInfo::default_instance_ = NULL;

TSquadInfo* TSquadInfo::New() const {
  return new TSquadInfo;
}

void TSquadInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TSquadInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(pos_, hid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TSquadInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSquadInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Hid;
        break;
      }

      // optional uint32 Hid = 2;
      case 2: {
        if (tag == 16) {
         parse_Hid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSquadInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSquadInfo)
  return false;
#undef DO_
}

void TSquadInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSquadInfo)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSquadInfo)
}

::google::protobuf::uint8* TSquadInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSquadInfo)
  // optional uint32 Pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional uint32 Hid = 2;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSquadInfo)
  return target;
}

int TSquadInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 Hid = 2;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TSquadInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TSquadInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TSquadInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TSquadInfo::MergeFrom(const TSquadInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TSquadInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSquadInfo::CopyFrom(const TSquadInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSquadInfo::IsInitialized() const {

  return true;
}

void TSquadInfo::Swap(TSquadInfo* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TSquadInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TSquadInfo_descriptor_;
  metadata.reflection = TSquadInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineTroopsSetSquadReq::kSquadArrFieldNumber;
#endif  // !_MSC_VER

TDivineTroopsSetSquadReq::TDivineTroopsSetSquadReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineTroopsSetSquadReq)
}

void TDivineTroopsSetSquadReq::InitAsDefaultInstance() {
}

TDivineTroopsSetSquadReq::TDivineTroopsSetSquadReq(const TDivineTroopsSetSquadReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineTroopsSetSquadReq)
}

void TDivineTroopsSetSquadReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineTroopsSetSquadReq::~TDivineTroopsSetSquadReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineTroopsSetSquadReq)
  SharedDtor();
}

void TDivineTroopsSetSquadReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineTroopsSetSquadReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineTroopsSetSquadReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineTroopsSetSquadReq_descriptor_;
}

const TDivineTroopsSetSquadReq& TDivineTroopsSetSquadReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineTroopsSetSquadReq* TDivineTroopsSetSquadReq::default_instance_ = NULL;

TDivineTroopsSetSquadReq* TDivineTroopsSetSquadReq::New() const {
  return new TDivineTroopsSetSquadReq;
}

void TDivineTroopsSetSquadReq::Clear() {
  squadarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineTroopsSetSquadReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineTroopsSetSquadReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TSquadInfo SquadArr = 1;
      case 1: {
        if (tag == 10) {
         parse_SquadArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_squadarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_SquadArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineTroopsSetSquadReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineTroopsSetSquadReq)
  return false;
#undef DO_
}

void TDivineTroopsSetSquadReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineTroopsSetSquadReq)
  // repeated .pb.TSquadInfo SquadArr = 1;
  for (int i = 0; i < this->squadarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->squadarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineTroopsSetSquadReq)
}

::google::protobuf::uint8* TDivineTroopsSetSquadReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineTroopsSetSquadReq)
  // repeated .pb.TSquadInfo SquadArr = 1;
  for (int i = 0; i < this->squadarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->squadarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineTroopsSetSquadReq)
  return target;
}

int TDivineTroopsSetSquadReq::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TSquadInfo SquadArr = 1;
  total_size += 1 * this->squadarr_size();
  for (int i = 0; i < this->squadarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->squadarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineTroopsSetSquadReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineTroopsSetSquadReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineTroopsSetSquadReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineTroopsSetSquadReq::MergeFrom(const TDivineTroopsSetSquadReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  squadarr_.MergeFrom(from.squadarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineTroopsSetSquadReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineTroopsSetSquadReq::CopyFrom(const TDivineTroopsSetSquadReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineTroopsSetSquadReq::IsInitialized() const {

  return true;
}

void TDivineTroopsSetSquadReq::Swap(TDivineTroopsSetSquadReq* other) {
  if (other != this) {
    squadarr_.Swap(&other->squadarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineTroopsSetSquadReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineTroopsSetSquadReq_descriptor_;
  metadata.reflection = TDivineTroopsSetSquadReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TBuyChallengeNumReq::kNumFieldNumber;
#endif  // !_MSC_VER

TBuyChallengeNumReq::TBuyChallengeNumReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TBuyChallengeNumReq)
}

void TBuyChallengeNumReq::InitAsDefaultInstance() {
}

TBuyChallengeNumReq::TBuyChallengeNumReq(const TBuyChallengeNumReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TBuyChallengeNumReq)
}

void TBuyChallengeNumReq::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TBuyChallengeNumReq::~TBuyChallengeNumReq() {
  // @@protoc_insertion_point(destructor:pb.TBuyChallengeNumReq)
  SharedDtor();
}

void TBuyChallengeNumReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TBuyChallengeNumReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TBuyChallengeNumReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TBuyChallengeNumReq_descriptor_;
}

const TBuyChallengeNumReq& TBuyChallengeNumReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TBuyChallengeNumReq* TBuyChallengeNumReq::default_instance_ = NULL;

TBuyChallengeNumReq* TBuyChallengeNumReq::New() const {
  return new TBuyChallengeNumReq;
}

void TBuyChallengeNumReq::Clear() {
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TBuyChallengeNumReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TBuyChallengeNumReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TBuyChallengeNumReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TBuyChallengeNumReq)
  return false;
#undef DO_
}

void TBuyChallengeNumReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TBuyChallengeNumReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TBuyChallengeNumReq)
}

::google::protobuf::uint8* TBuyChallengeNumReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TBuyChallengeNumReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TBuyChallengeNumReq)
  return target;
}

int TBuyChallengeNumReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TBuyChallengeNumReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TBuyChallengeNumReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TBuyChallengeNumReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TBuyChallengeNumReq::MergeFrom(const TBuyChallengeNumReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TBuyChallengeNumReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TBuyChallengeNumReq::CopyFrom(const TBuyChallengeNumReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBuyChallengeNumReq::IsInitialized() const {

  return true;
}

void TBuyChallengeNumReq::Swap(TBuyChallengeNumReq* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TBuyChallengeNumReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TBuyChallengeNumReq_descriptor_;
  metadata.reflection = TBuyChallengeNumReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineDoBattleReq::kIndexIdFieldNumber;
#endif  // !_MSC_VER

TDivineDoBattleReq::TDivineDoBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineDoBattleReq)
}

void TDivineDoBattleReq::InitAsDefaultInstance() {
}

TDivineDoBattleReq::TDivineDoBattleReq(const TDivineDoBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineDoBattleReq)
}

void TDivineDoBattleReq::SharedCtor() {
  _cached_size_ = 0;
  indexid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineDoBattleReq::~TDivineDoBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineDoBattleReq)
  SharedDtor();
}

void TDivineDoBattleReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineDoBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineDoBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineDoBattleReq_descriptor_;
}

const TDivineDoBattleReq& TDivineDoBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineDoBattleReq* TDivineDoBattleReq::default_instance_ = NULL;

TDivineDoBattleReq* TDivineDoBattleReq::New() const {
  return new TDivineDoBattleReq;
}

void TDivineDoBattleReq::Clear() {
  indexid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineDoBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineDoBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 IndexId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &indexid_)));
          set_has_indexid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineDoBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineDoBattleReq)
  return false;
#undef DO_
}

void TDivineDoBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineDoBattleReq)
  // optional uint32 IndexId = 1;
  if (has_indexid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->indexid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineDoBattleReq)
}

::google::protobuf::uint8* TDivineDoBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineDoBattleReq)
  // optional uint32 IndexId = 1;
  if (has_indexid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->indexid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineDoBattleReq)
  return target;
}

int TDivineDoBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 IndexId = 1;
    if (has_indexid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->indexid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineDoBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineDoBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineDoBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineDoBattleReq::MergeFrom(const TDivineDoBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_indexid()) {
      set_indexid(from.indexid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineDoBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineDoBattleReq::CopyFrom(const TDivineDoBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineDoBattleReq::IsInitialized() const {

  return true;
}

void TDivineDoBattleReq::Swap(TDivineDoBattleReq* other) {
  if (other != this) {
    std::swap(indexid_, other->indexid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineDoBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineDoBattleReq_descriptor_;
  metadata.reflection = TDivineDoBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineDoBattleRsp::kDropArrayFieldNumber;
const int TDivineDoBattleRsp::kBattleArgsFieldNumber;
#endif  // !_MSC_VER

TDivineDoBattleRsp::TDivineDoBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineDoBattleRsp)
}

void TDivineDoBattleRsp::InitAsDefaultInstance() {
  battleargs_ = const_cast< ::pb::TBattleArgs*>(&::pb::TBattleArgs::default_instance());
}

TDivineDoBattleRsp::TDivineDoBattleRsp(const TDivineDoBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineDoBattleRsp)
}

void TDivineDoBattleRsp::SharedCtor() {
  _cached_size_ = 0;
  battleargs_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineDoBattleRsp::~TDivineDoBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineDoBattleRsp)
  SharedDtor();
}

void TDivineDoBattleRsp::SharedDtor() {
  if (this != default_instance_) {
    delete battleargs_;
  }
}

void TDivineDoBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineDoBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineDoBattleRsp_descriptor_;
}

const TDivineDoBattleRsp& TDivineDoBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineDoBattleRsp* TDivineDoBattleRsp::default_instance_ = NULL;

TDivineDoBattleRsp* TDivineDoBattleRsp::New() const {
  return new TDivineDoBattleRsp;
}

void TDivineDoBattleRsp::Clear() {
  if (has_battleargs()) {
    if (battleargs_ != NULL) battleargs_->::pb::TBattleArgs::Clear();
  }
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineDoBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineDoBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectTag(18)) goto parse_BattleArgs;
        break;
      }

      // optional .pb.TBattleArgs BattleArgs = 2;
      case 2: {
        if (tag == 18) {
         parse_BattleArgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleargs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineDoBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineDoBattleRsp)
  return false;
#undef DO_
}

void TDivineDoBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineDoBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  // optional .pb.TBattleArgs BattleArgs = 2;
  if (has_battleargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->battleargs(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineDoBattleRsp)
}

::google::protobuf::uint8* TDivineDoBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineDoBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  // optional .pb.TBattleArgs BattleArgs = 2;
  if (has_battleargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->battleargs(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineDoBattleRsp)
  return target;
}

int TDivineDoBattleRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .pb.TBattleArgs BattleArgs = 2;
    if (has_battleargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleargs());
    }

  }
  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineDoBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineDoBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineDoBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineDoBattleRsp::MergeFrom(const TDivineDoBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_battleargs()) {
      mutable_battleargs()->::pb::TBattleArgs::MergeFrom(from.battleargs());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineDoBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineDoBattleRsp::CopyFrom(const TDivineDoBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineDoBattleRsp::IsInitialized() const {

  if (has_battleargs()) {
    if (!this->battleargs().IsInitialized()) return false;
  }
  return true;
}

void TDivineDoBattleRsp::Swap(TDivineDoBattleRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(battleargs_, other->battleargs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineDoBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineDoBattleRsp_descriptor_;
  metadata.reflection = TDivineDoBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineReportBattleReq::kIndexIdFieldNumber;
const int TDivineReportBattleReq::kBattleResultBytesFieldNumber;
#endif  // !_MSC_VER

TDivineReportBattleReq::TDivineReportBattleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineReportBattleReq)
}

void TDivineReportBattleReq::InitAsDefaultInstance() {
}

TDivineReportBattleReq::TDivineReportBattleReq(const TDivineReportBattleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineReportBattleReq)
}

void TDivineReportBattleReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  indexid_ = 0u;
  battleresultbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineReportBattleReq::~TDivineReportBattleReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineReportBattleReq)
  SharedDtor();
}

void TDivineReportBattleReq::SharedDtor() {
  if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete battleresultbytes_;
  }
  if (this != default_instance_) {
  }
}

void TDivineReportBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineReportBattleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineReportBattleReq_descriptor_;
}

const TDivineReportBattleReq& TDivineReportBattleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineReportBattleReq* TDivineReportBattleReq::default_instance_ = NULL;

TDivineReportBattleReq* TDivineReportBattleReq::New() const {
  return new TDivineReportBattleReq;
}

void TDivineReportBattleReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    indexid_ = 0u;
    if (has_battleresultbytes()) {
      if (battleresultbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        battleresultbytes_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineReportBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineReportBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 IndexId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &indexid_)));
          set_has_indexid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BattleResultBytes;
        break;
      }

      // optional bytes BattleResultBytes = 2;
      case 2: {
        if (tag == 18) {
         parse_BattleResultBytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_battleresultbytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineReportBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineReportBattleReq)
  return false;
#undef DO_
}

void TDivineReportBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineReportBattleReq)
  // optional uint32 IndexId = 1;
  if (has_indexid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->indexid(), output);
  }

  // optional bytes BattleResultBytes = 2;
  if (has_battleresultbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->battleresultbytes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineReportBattleReq)
}

::google::protobuf::uint8* TDivineReportBattleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineReportBattleReq)
  // optional uint32 IndexId = 1;
  if (has_indexid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->indexid(), target);
  }

  // optional bytes BattleResultBytes = 2;
  if (has_battleresultbytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->battleresultbytes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineReportBattleReq)
  return target;
}

int TDivineReportBattleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 IndexId = 1;
    if (has_indexid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->indexid());
    }

    // optional bytes BattleResultBytes = 2;
    if (has_battleresultbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->battleresultbytes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineReportBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineReportBattleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineReportBattleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineReportBattleReq::MergeFrom(const TDivineReportBattleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_indexid()) {
      set_indexid(from.indexid());
    }
    if (from.has_battleresultbytes()) {
      set_battleresultbytes(from.battleresultbytes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineReportBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineReportBattleReq::CopyFrom(const TDivineReportBattleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineReportBattleReq::IsInitialized() const {

  return true;
}

void TDivineReportBattleReq::Swap(TDivineReportBattleReq* other) {
  if (other != this) {
    std::swap(indexid_, other->indexid_);
    std::swap(battleresultbytes_, other->battleresultbytes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineReportBattleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineReportBattleReq_descriptor_;
  metadata.reflection = TDivineReportBattleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineReportBattleRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TDivineReportBattleRsp::TDivineReportBattleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineReportBattleRsp)
}

void TDivineReportBattleRsp::InitAsDefaultInstance() {
}

TDivineReportBattleRsp::TDivineReportBattleRsp(const TDivineReportBattleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineReportBattleRsp)
}

void TDivineReportBattleRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineReportBattleRsp::~TDivineReportBattleRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineReportBattleRsp)
  SharedDtor();
}

void TDivineReportBattleRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineReportBattleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineReportBattleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineReportBattleRsp_descriptor_;
}

const TDivineReportBattleRsp& TDivineReportBattleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineReportBattleRsp* TDivineReportBattleRsp::default_instance_ = NULL;

TDivineReportBattleRsp* TDivineReportBattleRsp::New() const {
  return new TDivineReportBattleRsp;
}

void TDivineReportBattleRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineReportBattleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineReportBattleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineReportBattleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineReportBattleRsp)
  return false;
#undef DO_
}

void TDivineReportBattleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineReportBattleRsp)
}

::google::protobuf::uint8* TDivineReportBattleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineReportBattleRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineReportBattleRsp)
  return target;
}

int TDivineReportBattleRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineReportBattleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineReportBattleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineReportBattleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineReportBattleRsp::MergeFrom(const TDivineReportBattleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineReportBattleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineReportBattleRsp::CopyFrom(const TDivineReportBattleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineReportBattleRsp::IsInitialized() const {

  return true;
}

void TDivineReportBattleRsp::Swap(TDivineReportBattleRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineReportBattleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineReportBattleRsp_descriptor_;
  metadata.reflection = TDivineReportBattleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineSweepReq::kIndexIdFieldNumber;
#endif  // !_MSC_VER

TDivineSweepReq::TDivineSweepReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineSweepReq)
}

void TDivineSweepReq::InitAsDefaultInstance() {
}

TDivineSweepReq::TDivineSweepReq(const TDivineSweepReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineSweepReq)
}

void TDivineSweepReq::SharedCtor() {
  _cached_size_ = 0;
  indexid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineSweepReq::~TDivineSweepReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineSweepReq)
  SharedDtor();
}

void TDivineSweepReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineSweepReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineSweepReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineSweepReq_descriptor_;
}

const TDivineSweepReq& TDivineSweepReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineSweepReq* TDivineSweepReq::default_instance_ = NULL;

TDivineSweepReq* TDivineSweepReq::New() const {
  return new TDivineSweepReq;
}

void TDivineSweepReq::Clear() {
  indexid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineSweepReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineSweepReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 IndexId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &indexid_)));
          set_has_indexid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineSweepReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineSweepReq)
  return false;
#undef DO_
}

void TDivineSweepReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineSweepReq)
  // optional uint32 IndexId = 1;
  if (has_indexid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->indexid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineSweepReq)
}

::google::protobuf::uint8* TDivineSweepReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineSweepReq)
  // optional uint32 IndexId = 1;
  if (has_indexid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->indexid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineSweepReq)
  return target;
}

int TDivineSweepReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 IndexId = 1;
    if (has_indexid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->indexid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineSweepReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineSweepReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineSweepReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineSweepReq::MergeFrom(const TDivineSweepReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_indexid()) {
      set_indexid(from.indexid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineSweepReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineSweepReq::CopyFrom(const TDivineSweepReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineSweepReq::IsInitialized() const {

  return true;
}

void TDivineSweepReq::Swap(TDivineSweepReq* other) {
  if (other != this) {
    std::swap(indexid_, other->indexid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineSweepReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineSweepReq_descriptor_;
  metadata.reflection = TDivineSweepReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineSweepRsp::kDropArrayFieldNumber;
#endif  // !_MSC_VER

TDivineSweepRsp::TDivineSweepRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineSweepRsp)
}

void TDivineSweepRsp::InitAsDefaultInstance() {
}

TDivineSweepRsp::TDivineSweepRsp(const TDivineSweepRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineSweepRsp)
}

void TDivineSweepRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineSweepRsp::~TDivineSweepRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineSweepRsp)
  SharedDtor();
}

void TDivineSweepRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineSweepRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineSweepRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineSweepRsp_descriptor_;
}

const TDivineSweepRsp& TDivineSweepRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineSweepRsp* TDivineSweepRsp::default_instance_ = NULL;

TDivineSweepRsp* TDivineSweepRsp::New() const {
  return new TDivineSweepRsp;
}

void TDivineSweepRsp::Clear() {
  droparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineSweepRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineSweepRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward DropArray = 1;
      case 1: {
        if (tag == 10) {
         parse_DropArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_droparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_DropArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineSweepRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineSweepRsp)
  return false;
#undef DO_
}

void TDivineSweepRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineSweepRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->droparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineSweepRsp)
}

::google::protobuf::uint8* TDivineSweepRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineSweepRsp)
  // repeated .pb.TCommonReward DropArray = 1;
  for (int i = 0; i < this->droparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->droparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineSweepRsp)
  return target;
}

int TDivineSweepRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward DropArray = 1;
  total_size += 1 * this->droparray_size();
  for (int i = 0; i < this->droparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->droparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineSweepRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineSweepRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineSweepRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineSweepRsp::MergeFrom(const TDivineSweepRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  droparray_.MergeFrom(from.droparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineSweepRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineSweepRsp::CopyFrom(const TDivineSweepRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineSweepRsp::IsInitialized() const {

  return true;
}

void TDivineSweepRsp::Swap(TDivineSweepRsp* other) {
  if (other != this) {
    droparray_.Swap(&other->droparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineSweepRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineSweepRsp_descriptor_;
  metadata.reflection = TDivineSweepRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineSkipFightReq::kIndexIdFieldNumber;
#endif  // !_MSC_VER

TDivineSkipFightReq::TDivineSkipFightReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineSkipFightReq)
}

void TDivineSkipFightReq::InitAsDefaultInstance() {
}

TDivineSkipFightReq::TDivineSkipFightReq(const TDivineSkipFightReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineSkipFightReq)
}

void TDivineSkipFightReq::SharedCtor() {
  _cached_size_ = 0;
  indexid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineSkipFightReq::~TDivineSkipFightReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineSkipFightReq)
  SharedDtor();
}

void TDivineSkipFightReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineSkipFightReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineSkipFightReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineSkipFightReq_descriptor_;
}

const TDivineSkipFightReq& TDivineSkipFightReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineSkipFightReq* TDivineSkipFightReq::default_instance_ = NULL;

TDivineSkipFightReq* TDivineSkipFightReq::New() const {
  return new TDivineSkipFightReq;
}

void TDivineSkipFightReq::Clear() {
  indexid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineSkipFightReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineSkipFightReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 IndexId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &indexid_)));
          set_has_indexid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineSkipFightReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineSkipFightReq)
  return false;
#undef DO_
}

void TDivineSkipFightReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineSkipFightReq)
  // optional uint32 IndexId = 1;
  if (has_indexid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->indexid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineSkipFightReq)
}

::google::protobuf::uint8* TDivineSkipFightReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineSkipFightReq)
  // optional uint32 IndexId = 1;
  if (has_indexid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->indexid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineSkipFightReq)
  return target;
}

int TDivineSkipFightReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 IndexId = 1;
    if (has_indexid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->indexid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineSkipFightReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineSkipFightReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineSkipFightReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineSkipFightReq::MergeFrom(const TDivineSkipFightReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_indexid()) {
      set_indexid(from.indexid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineSkipFightReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineSkipFightReq::CopyFrom(const TDivineSkipFightReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineSkipFightReq::IsInitialized() const {

  return true;
}

void TDivineSkipFightReq::Swap(TDivineSkipFightReq* other) {
  if (other != this) {
    std::swap(indexid_, other->indexid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineSkipFightReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineSkipFightReq_descriptor_;
  metadata.reflection = TDivineSkipFightReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineSkipFightRsp::kBattleRetFieldNumber;
const int TDivineSkipFightRsp::kRewardArrayFieldNumber;
const int TDivineSkipFightRsp::kSuccessFieldNumber;
#endif  // !_MSC_VER

TDivineSkipFightRsp::TDivineSkipFightRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineSkipFightRsp)
}

void TDivineSkipFightRsp::InitAsDefaultInstance() {
  battleret_ = const_cast< ::pb::TBattleResult*>(&::pb::TBattleResult::default_instance());
}

TDivineSkipFightRsp::TDivineSkipFightRsp(const TDivineSkipFightRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineSkipFightRsp)
}

void TDivineSkipFightRsp::SharedCtor() {
  _cached_size_ = 0;
  battleret_ = NULL;
  success_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineSkipFightRsp::~TDivineSkipFightRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineSkipFightRsp)
  SharedDtor();
}

void TDivineSkipFightRsp::SharedDtor() {
  if (this != default_instance_) {
    delete battleret_;
  }
}

void TDivineSkipFightRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineSkipFightRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineSkipFightRsp_descriptor_;
}

const TDivineSkipFightRsp& TDivineSkipFightRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineSkipFightRsp* TDivineSkipFightRsp::default_instance_ = NULL;

TDivineSkipFightRsp* TDivineSkipFightRsp::New() const {
  return new TDivineSkipFightRsp;
}

void TDivineSkipFightRsp::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    if (has_battleret()) {
      if (battleret_ != NULL) battleret_->::pb::TBattleResult::Clear();
    }
    success_ = 0u;
  }
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineSkipFightRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineSkipFightRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TBattleResult BattleRet = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battleret()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RewardArray;
        break;
      }

      // repeated .pb.TCommonReward RewardArray = 2;
      case 2: {
        if (tag == 18) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RewardArray;
        if (input->ExpectTag(24)) goto parse_Success;
        break;
      }

      // optional uint32 Success = 3;
      case 3: {
        if (tag == 24) {
         parse_Success:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineSkipFightRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineSkipFightRsp)
  return false;
#undef DO_
}

void TDivineSkipFightRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineSkipFightRsp)
  // optional .pb.TBattleResult BattleRet = 1;
  if (has_battleret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->battleret(), output);
  }

  // repeated .pb.TCommonReward RewardArray = 2;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rewardarray(i), output);
  }

  // optional uint32 Success = 3;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->success(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineSkipFightRsp)
}

::google::protobuf::uint8* TDivineSkipFightRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineSkipFightRsp)
  // optional .pb.TBattleResult BattleRet = 1;
  if (has_battleret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->battleret(), target);
  }

  // repeated .pb.TCommonReward RewardArray = 2;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rewardarray(i), target);
  }

  // optional uint32 Success = 3;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->success(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineSkipFightRsp)
  return target;
}

int TDivineSkipFightRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TBattleResult BattleRet = 1;
    if (has_battleret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleret());
    }

    // optional uint32 Success = 3;
    if (has_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->success());
    }

  }
  // repeated .pb.TCommonReward RewardArray = 2;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineSkipFightRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineSkipFightRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineSkipFightRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineSkipFightRsp::MergeFrom(const TDivineSkipFightRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_battleret()) {
      mutable_battleret()->::pb::TBattleResult::MergeFrom(from.battleret());
    }
    if (from.has_success()) {
      set_success(from.success());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineSkipFightRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineSkipFightRsp::CopyFrom(const TDivineSkipFightRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineSkipFightRsp::IsInitialized() const {

  if (has_battleret()) {
    if (!this->battleret().IsInitialized()) return false;
  }
  return true;
}

void TDivineSkipFightRsp::Swap(TDivineSkipFightRsp* other) {
  if (other != this) {
    std::swap(battleret_, other->battleret_);
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(success_, other->success_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineSkipFightRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineSkipFightRsp_descriptor_;
  metadata.reflection = TDivineSkipFightRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineBookReq::kBookIdFieldNumber;
const int TDivineBookReq::kBookTypeFieldNumber;
#endif  // !_MSC_VER

TDivineBookReq::TDivineBookReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineBookReq)
}

void TDivineBookReq::InitAsDefaultInstance() {
}

TDivineBookReq::TDivineBookReq(const TDivineBookReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineBookReq)
}

void TDivineBookReq::SharedCtor() {
  _cached_size_ = 0;
  bookid_ = 0u;
  booktype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineBookReq::~TDivineBookReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineBookReq)
  SharedDtor();
}

void TDivineBookReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineBookReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineBookReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineBookReq_descriptor_;
}

const TDivineBookReq& TDivineBookReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineBookReq* TDivineBookReq::default_instance_ = NULL;

TDivineBookReq* TDivineBookReq::New() const {
  return new TDivineBookReq;
}

void TDivineBookReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDivineBookReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(bookid_, booktype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineBookReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineBookReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BookId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bookid_)));
          set_has_bookid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BookType;
        break;
      }

      // optional uint32 BookType = 2;
      case 2: {
        if (tag == 16) {
         parse_BookType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &booktype_)));
          set_has_booktype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineBookReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineBookReq)
  return false;
#undef DO_
}

void TDivineBookReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineBookReq)
  // optional uint32 BookId = 1;
  if (has_bookid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bookid(), output);
  }

  // optional uint32 BookType = 2;
  if (has_booktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->booktype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineBookReq)
}

::google::protobuf::uint8* TDivineBookReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineBookReq)
  // optional uint32 BookId = 1;
  if (has_bookid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bookid(), target);
  }

  // optional uint32 BookType = 2;
  if (has_booktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->booktype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineBookReq)
  return target;
}

int TDivineBookReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BookId = 1;
    if (has_bookid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bookid());
    }

    // optional uint32 BookType = 2;
    if (has_booktype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->booktype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineBookReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineBookReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineBookReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineBookReq::MergeFrom(const TDivineBookReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bookid()) {
      set_bookid(from.bookid());
    }
    if (from.has_booktype()) {
      set_booktype(from.booktype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineBookReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineBookReq::CopyFrom(const TDivineBookReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineBookReq::IsInitialized() const {

  return true;
}

void TDivineBookReq::Swap(TDivineBookReq* other) {
  if (other != this) {
    std::swap(bookid_, other->bookid_);
    std::swap(booktype_, other->booktype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineBookReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineBookReq_descriptor_;
  metadata.reflection = TDivineBookReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineGetBookItemRsp::kBookIdFieldNumber;
#endif  // !_MSC_VER

TDivineGetBookItemRsp::TDivineGetBookItemRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineGetBookItemRsp)
}

void TDivineGetBookItemRsp::InitAsDefaultInstance() {
}

TDivineGetBookItemRsp::TDivineGetBookItemRsp(const TDivineGetBookItemRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineGetBookItemRsp)
}

void TDivineGetBookItemRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineGetBookItemRsp::~TDivineGetBookItemRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineGetBookItemRsp)
  SharedDtor();
}

void TDivineGetBookItemRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineGetBookItemRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineGetBookItemRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineGetBookItemRsp_descriptor_;
}

const TDivineGetBookItemRsp& TDivineGetBookItemRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineGetBookItemRsp* TDivineGetBookItemRsp::default_instance_ = NULL;

TDivineGetBookItemRsp* TDivineGetBookItemRsp::New() const {
  return new TDivineGetBookItemRsp;
}

void TDivineGetBookItemRsp::Clear() {
  bookid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineGetBookItemRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineGetBookItemRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 BookId = 1;
      case 1: {
        if (tag == 8) {
         parse_BookId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_bookid())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_bookid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_BookId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineGetBookItemRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineGetBookItemRsp)
  return false;
#undef DO_
}

void TDivineGetBookItemRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineGetBookItemRsp)
  // repeated uint32 BookId = 1;
  for (int i = 0; i < this->bookid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->bookid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineGetBookItemRsp)
}

::google::protobuf::uint8* TDivineGetBookItemRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineGetBookItemRsp)
  // repeated uint32 BookId = 1;
  for (int i = 0; i < this->bookid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->bookid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineGetBookItemRsp)
  return target;
}

int TDivineGetBookItemRsp::ByteSize() const {
  int total_size = 0;

  // repeated uint32 BookId = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->bookid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->bookid(i));
    }
    total_size += 1 * this->bookid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineGetBookItemRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineGetBookItemRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineGetBookItemRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineGetBookItemRsp::MergeFrom(const TDivineGetBookItemRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  bookid_.MergeFrom(from.bookid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineGetBookItemRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineGetBookItemRsp::CopyFrom(const TDivineGetBookItemRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineGetBookItemRsp::IsInitialized() const {

  return true;
}

void TDivineGetBookItemRsp::Swap(TDivineGetBookItemRsp* other) {
  if (other != this) {
    bookid_.Swap(&other->bookid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineGetBookItemRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineGetBookItemRsp_descriptor_;
  metadata.reflection = TDivineGetBookItemRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineRecycleReq::kIdFieldNumber;
const int TDivineRecycleReq::kRecycleTypeFieldNumber;
const int TDivineRecycleReq::kActTypeFieldNumber;
#endif  // !_MSC_VER

TDivineRecycleReq::TDivineRecycleReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineRecycleReq)
}

void TDivineRecycleReq::InitAsDefaultInstance() {
}

TDivineRecycleReq::TDivineRecycleReq(const TDivineRecycleReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineRecycleReq)
}

void TDivineRecycleReq::SharedCtor() {
  _cached_size_ = 0;
  recycletype_ = 0u;
  acttype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineRecycleReq::~TDivineRecycleReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineRecycleReq)
  SharedDtor();
}

void TDivineRecycleReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineRecycleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineRecycleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineRecycleReq_descriptor_;
}

const TDivineRecycleReq& TDivineRecycleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineRecycleReq* TDivineRecycleReq::default_instance_ = NULL;

TDivineRecycleReq* TDivineRecycleReq::New() const {
  return new TDivineRecycleReq;
}

void TDivineRecycleReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDivineRecycleReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(recycletype_, acttype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineRecycleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineRecycleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 Id = 1;
      case 1: {
        if (tag == 8) {
         parse_Id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_id())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_Id;
        if (input->ExpectTag(16)) goto parse_RecycleType;
        break;
      }

      // optional uint32 RecycleType = 2;
      case 2: {
        if (tag == 16) {
         parse_RecycleType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recycletype_)));
          set_has_recycletype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ActType;
        break;
      }

      // optional uint32 ActType = 3;
      case 3: {
        if (tag == 24) {
         parse_ActType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &acttype_)));
          set_has_acttype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineRecycleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineRecycleReq)
  return false;
#undef DO_
}

void TDivineRecycleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineRecycleReq)
  // repeated uint32 Id = 1;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->id(i), output);
  }

  // optional uint32 RecycleType = 2;
  if (has_recycletype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recycletype(), output);
  }

  // optional uint32 ActType = 3;
  if (has_acttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->acttype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineRecycleReq)
}

::google::protobuf::uint8* TDivineRecycleReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineRecycleReq)
  // repeated uint32 Id = 1;
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->id(i), target);
  }

  // optional uint32 RecycleType = 2;
  if (has_recycletype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recycletype(), target);
  }

  // optional uint32 ActType = 3;
  if (has_acttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->acttype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineRecycleReq)
  return target;
}

int TDivineRecycleReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 RecycleType = 2;
    if (has_recycletype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recycletype());
    }

    // optional uint32 ActType = 3;
    if (has_acttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->acttype());
    }

  }
  // repeated uint32 Id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->id(i));
    }
    total_size += 1 * this->id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineRecycleReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineRecycleReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineRecycleReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineRecycleReq::MergeFrom(const TDivineRecycleReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  id_.MergeFrom(from.id_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_recycletype()) {
      set_recycletype(from.recycletype());
    }
    if (from.has_acttype()) {
      set_acttype(from.acttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineRecycleReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineRecycleReq::CopyFrom(const TDivineRecycleReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineRecycleReq::IsInitialized() const {

  return true;
}

void TDivineRecycleReq::Swap(TDivineRecycleReq* other) {
  if (other != this) {
    id_.Swap(&other->id_);
    std::swap(recycletype_, other->recycletype_);
    std::swap(acttype_, other->acttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineRecycleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineRecycleReq_descriptor_;
  metadata.reflection = TDivineRecycleReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineRecycleRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TDivineRecycleRsp::TDivineRecycleRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineRecycleRsp)
}

void TDivineRecycleRsp::InitAsDefaultInstance() {
}

TDivineRecycleRsp::TDivineRecycleRsp(const TDivineRecycleRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineRecycleRsp)
}

void TDivineRecycleRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineRecycleRsp::~TDivineRecycleRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineRecycleRsp)
  SharedDtor();
}

void TDivineRecycleRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineRecycleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineRecycleRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineRecycleRsp_descriptor_;
}

const TDivineRecycleRsp& TDivineRecycleRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineRecycleRsp* TDivineRecycleRsp::default_instance_ = NULL;

TDivineRecycleRsp* TDivineRecycleRsp::New() const {
  return new TDivineRecycleRsp;
}

void TDivineRecycleRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineRecycleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineRecycleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineRecycleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineRecycleRsp)
  return false;
#undef DO_
}

void TDivineRecycleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineRecycleRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineRecycleRsp)
}

::google::protobuf::uint8* TDivineRecycleRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineRecycleRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineRecycleRsp)
  return target;
}

int TDivineRecycleRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineRecycleRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineRecycleRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineRecycleRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineRecycleRsp::MergeFrom(const TDivineRecycleRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineRecycleRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineRecycleRsp::CopyFrom(const TDivineRecycleRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineRecycleRsp::IsInitialized() const {

  return true;
}

void TDivineRecycleRsp::Swap(TDivineRecycleRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineRecycleRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineRecycleRsp_descriptor_;
  metadata.reflection = TDivineRecycleRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineCompoundFragReq::kNumFieldNumber;
const int TDivineCompoundFragReq::kFlagIdFieldNumber;
const int TDivineCompoundFragReq::kActTypeFieldNumber;
#endif  // !_MSC_VER

TDivineCompoundFragReq::TDivineCompoundFragReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineCompoundFragReq)
}

void TDivineCompoundFragReq::InitAsDefaultInstance() {
}

TDivineCompoundFragReq::TDivineCompoundFragReq(const TDivineCompoundFragReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineCompoundFragReq)
}

void TDivineCompoundFragReq::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0u;
  acttype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineCompoundFragReq::~TDivineCompoundFragReq() {
  // @@protoc_insertion_point(destructor:pb.TDivineCompoundFragReq)
  SharedDtor();
}

void TDivineCompoundFragReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineCompoundFragReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineCompoundFragReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineCompoundFragReq_descriptor_;
}

const TDivineCompoundFragReq& TDivineCompoundFragReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineCompoundFragReq* TDivineCompoundFragReq::default_instance_ = NULL;

TDivineCompoundFragReq* TDivineCompoundFragReq::New() const {
  return new TDivineCompoundFragReq;
}

void TDivineCompoundFragReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TDivineCompoundFragReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(num_, acttype_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  flagid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineCompoundFragReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineCompoundFragReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FlagId;
        break;
      }

      // repeated uint32 FlagId = 2;
      case 2: {
        if (tag == 16) {
         parse_FlagId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_flagid())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_flagid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FlagId;
        if (input->ExpectTag(24)) goto parse_ActType;
        break;
      }

      // optional uint32 ActType = 3;
      case 3: {
        if (tag == 24) {
         parse_ActType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &acttype_)));
          set_has_acttype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineCompoundFragReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineCompoundFragReq)
  return false;
#undef DO_
}

void TDivineCompoundFragReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineCompoundFragReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  // repeated uint32 FlagId = 2;
  for (int i = 0; i < this->flagid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->flagid(i), output);
  }

  // optional uint32 ActType = 3;
  if (has_acttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->acttype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineCompoundFragReq)
}

::google::protobuf::uint8* TDivineCompoundFragReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineCompoundFragReq)
  // optional uint32 Num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  // repeated uint32 FlagId = 2;
  for (int i = 0; i < this->flagid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->flagid(i), target);
  }

  // optional uint32 ActType = 3;
  if (has_acttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->acttype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineCompoundFragReq)
  return target;
}

int TDivineCompoundFragReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint32 ActType = 3;
    if (has_acttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->acttype());
    }

  }
  // repeated uint32 FlagId = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->flagid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->flagid(i));
    }
    total_size += 1 * this->flagid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineCompoundFragReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineCompoundFragReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineCompoundFragReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineCompoundFragReq::MergeFrom(const TDivineCompoundFragReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  flagid_.MergeFrom(from.flagid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_acttype()) {
      set_acttype(from.acttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineCompoundFragReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineCompoundFragReq::CopyFrom(const TDivineCompoundFragReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineCompoundFragReq::IsInitialized() const {

  return true;
}

void TDivineCompoundFragReq::Swap(TDivineCompoundFragReq* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    flagid_.Swap(&other->flagid_);
    std::swap(acttype_, other->acttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineCompoundFragReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineCompoundFragReq_descriptor_;
  metadata.reflection = TDivineCompoundFragReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TDivineCompoundFragRsp::kItemIdFieldNumber;
#endif  // !_MSC_VER

TDivineCompoundFragRsp::TDivineCompoundFragRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TDivineCompoundFragRsp)
}

void TDivineCompoundFragRsp::InitAsDefaultInstance() {
}

TDivineCompoundFragRsp::TDivineCompoundFragRsp(const TDivineCompoundFragRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TDivineCompoundFragRsp)
}

void TDivineCompoundFragRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TDivineCompoundFragRsp::~TDivineCompoundFragRsp() {
  // @@protoc_insertion_point(destructor:pb.TDivineCompoundFragRsp)
  SharedDtor();
}

void TDivineCompoundFragRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TDivineCompoundFragRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TDivineCompoundFragRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TDivineCompoundFragRsp_descriptor_;
}

const TDivineCompoundFragRsp& TDivineCompoundFragRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fDivineTroops_2eproto();
  return *default_instance_;
}

TDivineCompoundFragRsp* TDivineCompoundFragRsp::default_instance_ = NULL;

TDivineCompoundFragRsp* TDivineCompoundFragRsp::New() const {
  return new TDivineCompoundFragRsp;
}

void TDivineCompoundFragRsp::Clear() {
  itemid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TDivineCompoundFragRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TDivineCompoundFragRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
         parse_ItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_itemid())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_itemid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ItemId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TDivineCompoundFragRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TDivineCompoundFragRsp)
  return false;
#undef DO_
}

void TDivineCompoundFragRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TDivineCompoundFragRsp)
  // repeated uint32 ItemId = 1;
  for (int i = 0; i < this->itemid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->itemid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TDivineCompoundFragRsp)
}

::google::protobuf::uint8* TDivineCompoundFragRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TDivineCompoundFragRsp)
  // repeated uint32 ItemId = 1;
  for (int i = 0; i < this->itemid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->itemid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TDivineCompoundFragRsp)
  return target;
}

int TDivineCompoundFragRsp::ByteSize() const {
  int total_size = 0;

  // repeated uint32 ItemId = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->itemid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->itemid(i));
    }
    total_size += 1 * this->itemid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TDivineCompoundFragRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TDivineCompoundFragRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TDivineCompoundFragRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TDivineCompoundFragRsp::MergeFrom(const TDivineCompoundFragRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  itemid_.MergeFrom(from.itemid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TDivineCompoundFragRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDivineCompoundFragRsp::CopyFrom(const TDivineCompoundFragRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDivineCompoundFragRsp::IsInitialized() const {

  return true;
}

void TDivineCompoundFragRsp::Swap(TDivineCompoundFragRsp* other) {
  if (other != this) {
    itemid_.Swap(&other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TDivineCompoundFragRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TDivineCompoundFragRsp_descriptor_;
  metadata.reflection = TDivineCompoundFragRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
