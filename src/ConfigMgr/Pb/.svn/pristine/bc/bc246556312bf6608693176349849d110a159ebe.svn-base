// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ItemOp.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ItemOp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TItemOpCombinePromoteReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpCombinePromoteReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpEnhanceArmReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpEnhanceArmReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpAutoEnhanceArmReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpAutoEnhanceArmReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpRefineArmReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpRefineArmReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpEnhanceAccessoryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpEnhanceAccessoryReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpEnhanceAccessoryRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpEnhanceAccessoryRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpEnhanceAccessoryLvUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpEnhanceAccessoryLvUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpEnhanceAccessoryLvUpRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpEnhanceAccessoryLvUpRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpRefineAccessoryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpRefineAccessoryReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpAdvanceSoulReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpAdvanceSoulReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpAdvanceExclEquipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpAdvanceExclEquipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpAutoAdvanceExclEquipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpAutoAdvanceExclEquipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpStarUpExclEquipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpStarUpExclEquipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpGetRefineExclEquipResultReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpGetRefineExclEquipResultReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpGetRefineExclEquipResultRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpGetRefineExclEquipResultRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpReplaceRefineExclEquipAttrReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpReplaceRefineExclEquipAttrReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpRefineExclEquipUnlockSlotReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpRefineExclEquipUnlockSlotReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpRefineExclEquipReplaceAndRefineReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpRefineExclEquipReplaceAndRefineReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpRefineExclEquipReplaceAndRefineRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpRefineExclEquipReplaceAndRefineRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpComposeFavoriteReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpComposeFavoriteReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpComposeMaterialReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpComposeMaterialReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpComposeMaterialRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpComposeMaterialRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpComposeTreasureReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpComposeTreasureReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpComposeTreasureRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpComposeTreasureRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpReforgeExclEquipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpReforgeExclEquipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpReforgeExclEquipRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpReforgeExclEquipRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpReforgeExclEquipConfirmReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpReforgeExclEquipConfirmReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpBeastArmEnhanceReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpBeastArmEnhanceReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpAutoBeastArmEnhanceReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpAutoBeastArmEnhanceReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpBeastArmAdvanceReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpBeastArmAdvanceReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpBeastArmRefineReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpBeastArmRefineReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpBeastArmRefreshRandAttrReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpBeastArmRefreshRandAttrReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpIdentifyHeroSoulReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpIdentifyHeroSoulReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpHeroSoulDropInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpHeroSoulDropInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpIdentifyHeroSoulRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpIdentifyHeroSoulRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpBreakArmReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpBreakArmReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpWhiteGoldBreakArmReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpWhiteGoldBreakArmReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpBreakAccessoryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpBreakAccessoryReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpWhiteGoldBreakAccessoryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpWhiteGoldBreakAccessoryReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpTransformHeroSoulReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpTransformHeroSoulReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpTransformHeroSoulRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpTransformHeroSoulRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpMountEquipLvUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpMountEquipLvUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpGoldTransformExclEquipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpGoldTransformExclEquipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpEngraveExclEquipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpEngraveExclEquipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpTreasureActivateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpTreasureActivateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpTreasureFragmentItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpTreasureFragmentItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpTreasureStarLevelUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpTreasureStarLevelUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpTreasureAwakeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpTreasureAwakeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpSilkBagEnhanceReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpSilkBagEnhanceReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpSilkBagStarUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpSilkBagStarUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpTreasureStoneCombineReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpTreasureStoneCombineReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpRefineArmLvReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpRefineArmLvReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpRefineAccessoryLvReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpRefineAccessoryLvReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpArmCarveReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpArmCarveReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpDecorationItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpDecorationItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpDecorationStarLevelUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpDecorationStarLevelUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpArmEvolveReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpArmEvolveReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpArmEvolveRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpArmEvolveRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpArmEvolveLvUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpArmEvolveLvUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpForceSoulEnhanceReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpForceSoulEnhanceReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpForceSoulStarUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpForceSoulStarUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TItemOpComposeForceSoulReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TItemOpComposeForceSoulReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EBeastArmRefineCostType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fItemOp_2eproto() {
  protobuf_AddDesc_net_2fItemOp_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ItemOp.proto");
  GOOGLE_CHECK(file != NULL);
  TItemOpCombinePromoteReq_descriptor_ = file->message_type(0);
  static const int TItemOpCombinePromoteReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpCombinePromoteReq, itemtplid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpCombinePromoteReq, itemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpCombinePromoteReq, hid_),
  };
  TItemOpCombinePromoteReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpCombinePromoteReq_descriptor_,
      TItemOpCombinePromoteReq::default_instance_,
      TItemOpCombinePromoteReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpCombinePromoteReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpCombinePromoteReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpCombinePromoteReq));
  TItemOpEnhanceArmReq_descriptor_ = file->message_type(1);
  static const int TItemOpEnhanceArmReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceArmReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceArmReq, enhancenum_),
  };
  TItemOpEnhanceArmReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpEnhanceArmReq_descriptor_,
      TItemOpEnhanceArmReq::default_instance_,
      TItemOpEnhanceArmReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceArmReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceArmReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpEnhanceArmReq));
  TItemOpAutoEnhanceArmReq_descriptor_ = file->message_type(2);
  static const int TItemOpAutoEnhanceArmReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAutoEnhanceArmReq, hid_),
  };
  TItemOpAutoEnhanceArmReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpAutoEnhanceArmReq_descriptor_,
      TItemOpAutoEnhanceArmReq::default_instance_,
      TItemOpAutoEnhanceArmReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAutoEnhanceArmReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAutoEnhanceArmReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpAutoEnhanceArmReq));
  TItemOpRefineArmReq_descriptor_ = file->message_type(3);
  static const int TItemOpRefineArmReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineArmReq, itemid_),
  };
  TItemOpRefineArmReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpRefineArmReq_descriptor_,
      TItemOpRefineArmReq::default_instance_,
      TItemOpRefineArmReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineArmReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineArmReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpRefineArmReq));
  TItemOpEnhanceAccessoryReq_descriptor_ = file->message_type(4);
  static const int TItemOpEnhanceAccessoryReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceAccessoryReq, itemid_),
  };
  TItemOpEnhanceAccessoryReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpEnhanceAccessoryReq_descriptor_,
      TItemOpEnhanceAccessoryReq::default_instance_,
      TItemOpEnhanceAccessoryReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceAccessoryReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceAccessoryReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpEnhanceAccessoryReq));
  TItemOpEnhanceAccessoryRsp_descriptor_ = file->message_type(5);
  static const int TItemOpEnhanceAccessoryRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceAccessoryRsp, critratio_),
  };
  TItemOpEnhanceAccessoryRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpEnhanceAccessoryRsp_descriptor_,
      TItemOpEnhanceAccessoryRsp::default_instance_,
      TItemOpEnhanceAccessoryRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceAccessoryRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceAccessoryRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpEnhanceAccessoryRsp));
  TItemOpEnhanceAccessoryLvUpReq_descriptor_ = file->message_type(6);
  static const int TItemOpEnhanceAccessoryLvUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceAccessoryLvUpReq, itemid_),
  };
  TItemOpEnhanceAccessoryLvUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpEnhanceAccessoryLvUpReq_descriptor_,
      TItemOpEnhanceAccessoryLvUpReq::default_instance_,
      TItemOpEnhanceAccessoryLvUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceAccessoryLvUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceAccessoryLvUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpEnhanceAccessoryLvUpReq));
  TItemOpEnhanceAccessoryLvUpRsp_descriptor_ = file->message_type(7);
  static const int TItemOpEnhanceAccessoryLvUpRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceAccessoryLvUpRsp, critratio_),
  };
  TItemOpEnhanceAccessoryLvUpRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpEnhanceAccessoryLvUpRsp_descriptor_,
      TItemOpEnhanceAccessoryLvUpRsp::default_instance_,
      TItemOpEnhanceAccessoryLvUpRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceAccessoryLvUpRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEnhanceAccessoryLvUpRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpEnhanceAccessoryLvUpRsp));
  TItemOpRefineAccessoryReq_descriptor_ = file->message_type(8);
  static const int TItemOpRefineAccessoryReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineAccessoryReq, itemid_),
  };
  TItemOpRefineAccessoryReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpRefineAccessoryReq_descriptor_,
      TItemOpRefineAccessoryReq::default_instance_,
      TItemOpRefineAccessoryReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineAccessoryReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineAccessoryReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpRefineAccessoryReq));
  TItemOpAdvanceSoulReq_descriptor_ = file->message_type(9);
  static const int TItemOpAdvanceSoulReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAdvanceSoulReq, itemid_),
  };
  TItemOpAdvanceSoulReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpAdvanceSoulReq_descriptor_,
      TItemOpAdvanceSoulReq::default_instance_,
      TItemOpAdvanceSoulReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAdvanceSoulReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAdvanceSoulReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpAdvanceSoulReq));
  TItemOpAdvanceExclEquipReq_descriptor_ = file->message_type(10);
  static const int TItemOpAdvanceExclEquipReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAdvanceExclEquipReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAdvanceExclEquipReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAdvanceExclEquipReq, num_),
  };
  TItemOpAdvanceExclEquipReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpAdvanceExclEquipReq_descriptor_,
      TItemOpAdvanceExclEquipReq::default_instance_,
      TItemOpAdvanceExclEquipReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAdvanceExclEquipReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAdvanceExclEquipReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpAdvanceExclEquipReq));
  TItemOpAutoAdvanceExclEquipReq_descriptor_ = file->message_type(11);
  static const int TItemOpAutoAdvanceExclEquipReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAutoAdvanceExclEquipReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAutoAdvanceExclEquipReq, uplv_),
  };
  TItemOpAutoAdvanceExclEquipReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpAutoAdvanceExclEquipReq_descriptor_,
      TItemOpAutoAdvanceExclEquipReq::default_instance_,
      TItemOpAutoAdvanceExclEquipReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAutoAdvanceExclEquipReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAutoAdvanceExclEquipReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpAutoAdvanceExclEquipReq));
  TItemOpStarUpExclEquipReq_descriptor_ = file->message_type(12);
  static const int TItemOpStarUpExclEquipReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpStarUpExclEquipReq, itemid_),
  };
  TItemOpStarUpExclEquipReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpStarUpExclEquipReq_descriptor_,
      TItemOpStarUpExclEquipReq::default_instance_,
      TItemOpStarUpExclEquipReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpStarUpExclEquipReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpStarUpExclEquipReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpStarUpExclEquipReq));
  TItemOpGetRefineExclEquipResultReq_descriptor_ = file->message_type(13);
  static const int TItemOpGetRefineExclEquipResultReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpGetRefineExclEquipResultReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpGetRefineExclEquipResultReq, posid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpGetRefineExclEquipResultReq, reforgenum_),
  };
  TItemOpGetRefineExclEquipResultReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpGetRefineExclEquipResultReq_descriptor_,
      TItemOpGetRefineExclEquipResultReq::default_instance_,
      TItemOpGetRefineExclEquipResultReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpGetRefineExclEquipResultReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpGetRefineExclEquipResultReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpGetRefineExclEquipResultReq));
  TItemOpGetRefineExclEquipResultRsp_descriptor_ = file->message_type(14);
  static const int TItemOpGetRefineExclEquipResultRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpGetRefineExclEquipResultRsp, reforgeattrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpGetRefineExclEquipResultRsp, reforgeattrvalue_),
  };
  TItemOpGetRefineExclEquipResultRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpGetRefineExclEquipResultRsp_descriptor_,
      TItemOpGetRefineExclEquipResultRsp::default_instance_,
      TItemOpGetRefineExclEquipResultRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpGetRefineExclEquipResultRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpGetRefineExclEquipResultRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpGetRefineExclEquipResultRsp));
  TItemOpReplaceRefineExclEquipAttrReq_descriptor_ = file->message_type(15);
  static const int TItemOpReplaceRefineExclEquipAttrReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReplaceRefineExclEquipAttrReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReplaceRefineExclEquipAttrReq, posid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReplaceRefineExclEquipAttrReq, operate_),
  };
  TItemOpReplaceRefineExclEquipAttrReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpReplaceRefineExclEquipAttrReq_descriptor_,
      TItemOpReplaceRefineExclEquipAttrReq::default_instance_,
      TItemOpReplaceRefineExclEquipAttrReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReplaceRefineExclEquipAttrReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReplaceRefineExclEquipAttrReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpReplaceRefineExclEquipAttrReq));
  TItemOpRefineExclEquipUnlockSlotReq_descriptor_ = file->message_type(16);
  static const int TItemOpRefineExclEquipUnlockSlotReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineExclEquipUnlockSlotReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineExclEquipUnlockSlotReq, posid_),
  };
  TItemOpRefineExclEquipUnlockSlotReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpRefineExclEquipUnlockSlotReq_descriptor_,
      TItemOpRefineExclEquipUnlockSlotReq::default_instance_,
      TItemOpRefineExclEquipUnlockSlotReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineExclEquipUnlockSlotReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineExclEquipUnlockSlotReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpRefineExclEquipUnlockSlotReq));
  TItemOpRefineExclEquipReplaceAndRefineReq_descriptor_ = file->message_type(17);
  static const int TItemOpRefineExclEquipReplaceAndRefineReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineExclEquipReplaceAndRefineReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineExclEquipReplaceAndRefineReq, posid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineExclEquipReplaceAndRefineReq, refinenum_),
  };
  TItemOpRefineExclEquipReplaceAndRefineReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpRefineExclEquipReplaceAndRefineReq_descriptor_,
      TItemOpRefineExclEquipReplaceAndRefineReq::default_instance_,
      TItemOpRefineExclEquipReplaceAndRefineReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineExclEquipReplaceAndRefineReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineExclEquipReplaceAndRefineReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpRefineExclEquipReplaceAndRefineReq));
  TItemOpRefineExclEquipReplaceAndRefineRsp_descriptor_ = file->message_type(18);
  static const int TItemOpRefineExclEquipReplaceAndRefineRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineExclEquipReplaceAndRefineRsp, reforgeattrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineExclEquipReplaceAndRefineRsp, reforgeattrvalue_),
  };
  TItemOpRefineExclEquipReplaceAndRefineRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpRefineExclEquipReplaceAndRefineRsp_descriptor_,
      TItemOpRefineExclEquipReplaceAndRefineRsp::default_instance_,
      TItemOpRefineExclEquipReplaceAndRefineRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineExclEquipReplaceAndRefineRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineExclEquipReplaceAndRefineRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpRefineExclEquipReplaceAndRefineRsp));
  TItemOpComposeFavoriteReq_descriptor_ = file->message_type(19);
  static const int TItemOpComposeFavoriteReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeFavoriteReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeFavoriteReq, num_),
  };
  TItemOpComposeFavoriteReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpComposeFavoriteReq_descriptor_,
      TItemOpComposeFavoriteReq::default_instance_,
      TItemOpComposeFavoriteReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeFavoriteReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeFavoriteReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpComposeFavoriteReq));
  TItemOpComposeMaterialReq_descriptor_ = file->message_type(20);
  static const int TItemOpComposeMaterialReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeMaterialReq, arritemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeMaterialReq, num_),
  };
  TItemOpComposeMaterialReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpComposeMaterialReq_descriptor_,
      TItemOpComposeMaterialReq::default_instance_,
      TItemOpComposeMaterialReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeMaterialReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeMaterialReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpComposeMaterialReq));
  TItemOpComposeMaterialRsp_descriptor_ = file->message_type(21);
  static const int TItemOpComposeMaterialRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeMaterialRsp, rewardarray_),
  };
  TItemOpComposeMaterialRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpComposeMaterialRsp_descriptor_,
      TItemOpComposeMaterialRsp::default_instance_,
      TItemOpComposeMaterialRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeMaterialRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeMaterialRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpComposeMaterialRsp));
  TItemOpComposeTreasureReq_descriptor_ = file->message_type(22);
  static const int TItemOpComposeTreasureReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeTreasureReq, arritemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeTreasureReq, num_),
  };
  TItemOpComposeTreasureReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpComposeTreasureReq_descriptor_,
      TItemOpComposeTreasureReq::default_instance_,
      TItemOpComposeTreasureReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeTreasureReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeTreasureReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpComposeTreasureReq));
  TItemOpComposeTreasureRsp_descriptor_ = file->message_type(23);
  static const int TItemOpComposeTreasureRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeTreasureRsp, rewardarray_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeTreasureRsp, issuc_),
  };
  TItemOpComposeTreasureRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpComposeTreasureRsp_descriptor_,
      TItemOpComposeTreasureRsp::default_instance_,
      TItemOpComposeTreasureRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeTreasureRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeTreasureRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpComposeTreasureRsp));
  TItemOpReforgeExclEquipReq_descriptor_ = file->message_type(24);
  static const int TItemOpReforgeExclEquipReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReforgeExclEquipReq, itemid_),
  };
  TItemOpReforgeExclEquipReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpReforgeExclEquipReq_descriptor_,
      TItemOpReforgeExclEquipReq::default_instance_,
      TItemOpReforgeExclEquipReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReforgeExclEquipReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReforgeExclEquipReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpReforgeExclEquipReq));
  TItemOpReforgeExclEquipRsp_descriptor_ = file->message_type(25);
  static const int TItemOpReforgeExclEquipRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReforgeExclEquipRsp, itemtid_),
  };
  TItemOpReforgeExclEquipRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpReforgeExclEquipRsp_descriptor_,
      TItemOpReforgeExclEquipRsp::default_instance_,
      TItemOpReforgeExclEquipRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReforgeExclEquipRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReforgeExclEquipRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpReforgeExclEquipRsp));
  TItemOpReforgeExclEquipConfirmReq_descriptor_ = file->message_type(26);
  static const int TItemOpReforgeExclEquipConfirmReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReforgeExclEquipConfirmReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReforgeExclEquipConfirmReq, itemtid_),
  };
  TItemOpReforgeExclEquipConfirmReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpReforgeExclEquipConfirmReq_descriptor_,
      TItemOpReforgeExclEquipConfirmReq::default_instance_,
      TItemOpReforgeExclEquipConfirmReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReforgeExclEquipConfirmReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpReforgeExclEquipConfirmReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpReforgeExclEquipConfirmReq));
  TItemOpBeastArmEnhanceReq_descriptor_ = file->message_type(27);
  static const int TItemOpBeastArmEnhanceReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmEnhanceReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmEnhanceReq, num_),
  };
  TItemOpBeastArmEnhanceReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpBeastArmEnhanceReq_descriptor_,
      TItemOpBeastArmEnhanceReq::default_instance_,
      TItemOpBeastArmEnhanceReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmEnhanceReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmEnhanceReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpBeastArmEnhanceReq));
  TItemOpAutoBeastArmEnhanceReq_descriptor_ = file->message_type(28);
  static const int TItemOpAutoBeastArmEnhanceReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAutoBeastArmEnhanceReq, beastid_),
  };
  TItemOpAutoBeastArmEnhanceReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpAutoBeastArmEnhanceReq_descriptor_,
      TItemOpAutoBeastArmEnhanceReq::default_instance_,
      TItemOpAutoBeastArmEnhanceReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAutoBeastArmEnhanceReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpAutoBeastArmEnhanceReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpAutoBeastArmEnhanceReq));
  TItemOpBeastArmAdvanceReq_descriptor_ = file->message_type(29);
  static const int TItemOpBeastArmAdvanceReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmAdvanceReq, itemid_),
  };
  TItemOpBeastArmAdvanceReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpBeastArmAdvanceReq_descriptor_,
      TItemOpBeastArmAdvanceReq::default_instance_,
      TItemOpBeastArmAdvanceReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmAdvanceReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmAdvanceReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpBeastArmAdvanceReq));
  TItemOpBeastArmRefineReq_descriptor_ = file->message_type(30);
  static const int TItemOpBeastArmRefineReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmRefineReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmRefineReq, randattrindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmRefineReq, refinenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmRefineReq, costtype_),
  };
  TItemOpBeastArmRefineReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpBeastArmRefineReq_descriptor_,
      TItemOpBeastArmRefineReq::default_instance_,
      TItemOpBeastArmRefineReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmRefineReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmRefineReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpBeastArmRefineReq));
  TItemOpBeastArmRefreshRandAttrReq_descriptor_ = file->message_type(31);
  static const int TItemOpBeastArmRefreshRandAttrReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmRefreshRandAttrReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmRefreshRandAttrReq, randattrindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmRefreshRandAttrReq, refineindex_),
  };
  TItemOpBeastArmRefreshRandAttrReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpBeastArmRefreshRandAttrReq_descriptor_,
      TItemOpBeastArmRefreshRandAttrReq::default_instance_,
      TItemOpBeastArmRefreshRandAttrReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmRefreshRandAttrReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBeastArmRefreshRandAttrReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpBeastArmRefreshRandAttrReq));
  TItemOpIdentifyHeroSoulReq_descriptor_ = file->message_type(32);
  static const int TItemOpIdentifyHeroSoulReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpIdentifyHeroSoulReq, arritemid_),
  };
  TItemOpIdentifyHeroSoulReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpIdentifyHeroSoulReq_descriptor_,
      TItemOpIdentifyHeroSoulReq::default_instance_,
      TItemOpIdentifyHeroSoulReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpIdentifyHeroSoulReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpIdentifyHeroSoulReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpIdentifyHeroSoulReq));
  TItemOpHeroSoulDropInfo_descriptor_ = file->message_type(33);
  static const int TItemOpHeroSoulDropInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpHeroSoulDropInfo, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpHeroSoulDropInfo, rewardarray_),
  };
  TItemOpHeroSoulDropInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpHeroSoulDropInfo_descriptor_,
      TItemOpHeroSoulDropInfo::default_instance_,
      TItemOpHeroSoulDropInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpHeroSoulDropInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpHeroSoulDropInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpHeroSoulDropInfo));
  TItemOpIdentifyHeroSoulRsp_descriptor_ = file->message_type(34);
  static const int TItemOpIdentifyHeroSoulRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpIdentifyHeroSoulRsp, arrdropinfo_),
  };
  TItemOpIdentifyHeroSoulRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpIdentifyHeroSoulRsp_descriptor_,
      TItemOpIdentifyHeroSoulRsp::default_instance_,
      TItemOpIdentifyHeroSoulRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpIdentifyHeroSoulRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpIdentifyHeroSoulRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpIdentifyHeroSoulRsp));
  TItemOpBreakArmReq_descriptor_ = file->message_type(35);
  static const int TItemOpBreakArmReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBreakArmReq, itemid_),
  };
  TItemOpBreakArmReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpBreakArmReq_descriptor_,
      TItemOpBreakArmReq::default_instance_,
      TItemOpBreakArmReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBreakArmReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBreakArmReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpBreakArmReq));
  TItemOpWhiteGoldBreakArmReq_descriptor_ = file->message_type(36);
  static const int TItemOpWhiteGoldBreakArmReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpWhiteGoldBreakArmReq, itemid_),
  };
  TItemOpWhiteGoldBreakArmReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpWhiteGoldBreakArmReq_descriptor_,
      TItemOpWhiteGoldBreakArmReq::default_instance_,
      TItemOpWhiteGoldBreakArmReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpWhiteGoldBreakArmReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpWhiteGoldBreakArmReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpWhiteGoldBreakArmReq));
  TItemOpBreakAccessoryReq_descriptor_ = file->message_type(37);
  static const int TItemOpBreakAccessoryReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBreakAccessoryReq, itemid_),
  };
  TItemOpBreakAccessoryReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpBreakAccessoryReq_descriptor_,
      TItemOpBreakAccessoryReq::default_instance_,
      TItemOpBreakAccessoryReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBreakAccessoryReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpBreakAccessoryReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpBreakAccessoryReq));
  TItemOpWhiteGoldBreakAccessoryReq_descriptor_ = file->message_type(38);
  static const int TItemOpWhiteGoldBreakAccessoryReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpWhiteGoldBreakAccessoryReq, itemid_),
  };
  TItemOpWhiteGoldBreakAccessoryReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpWhiteGoldBreakAccessoryReq_descriptor_,
      TItemOpWhiteGoldBreakAccessoryReq::default_instance_,
      TItemOpWhiteGoldBreakAccessoryReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpWhiteGoldBreakAccessoryReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpWhiteGoldBreakAccessoryReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpWhiteGoldBreakAccessoryReq));
  TItemOpTransformHeroSoulReq_descriptor_ = file->message_type(39);
  static const int TItemOpTransformHeroSoulReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTransformHeroSoulReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTransformHeroSoulReq, num_),
  };
  TItemOpTransformHeroSoulReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpTransformHeroSoulReq_descriptor_,
      TItemOpTransformHeroSoulReq::default_instance_,
      TItemOpTransformHeroSoulReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTransformHeroSoulReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTransformHeroSoulReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpTransformHeroSoulReq));
  TItemOpTransformHeroSoulRsp_descriptor_ = file->message_type(40);
  static const int TItemOpTransformHeroSoulRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTransformHeroSoulRsp, arrreward_),
  };
  TItemOpTransformHeroSoulRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpTransformHeroSoulRsp_descriptor_,
      TItemOpTransformHeroSoulRsp::default_instance_,
      TItemOpTransformHeroSoulRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTransformHeroSoulRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTransformHeroSoulRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpTransformHeroSoulRsp));
  TItemOpMountEquipLvUpReq_descriptor_ = file->message_type(41);
  static const int TItemOpMountEquipLvUpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpMountEquipLvUpReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpMountEquipLvUpReq, uplevel_),
  };
  TItemOpMountEquipLvUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpMountEquipLvUpReq_descriptor_,
      TItemOpMountEquipLvUpReq::default_instance_,
      TItemOpMountEquipLvUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpMountEquipLvUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpMountEquipLvUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpMountEquipLvUpReq));
  TItemOpGoldTransformExclEquipReq_descriptor_ = file->message_type(42);
  static const int TItemOpGoldTransformExclEquipReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpGoldTransformExclEquipReq, itemid_),
  };
  TItemOpGoldTransformExclEquipReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpGoldTransformExclEquipReq_descriptor_,
      TItemOpGoldTransformExclEquipReq::default_instance_,
      TItemOpGoldTransformExclEquipReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpGoldTransformExclEquipReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpGoldTransformExclEquipReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpGoldTransformExclEquipReq));
  TItemOpEngraveExclEquipReq_descriptor_ = file->message_type(43);
  static const int TItemOpEngraveExclEquipReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEngraveExclEquipReq, itemid_),
  };
  TItemOpEngraveExclEquipReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpEngraveExclEquipReq_descriptor_,
      TItemOpEngraveExclEquipReq::default_instance_,
      TItemOpEngraveExclEquipReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEngraveExclEquipReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpEngraveExclEquipReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpEngraveExclEquipReq));
  TItemOpTreasureActivateReq_descriptor_ = file->message_type(44);
  static const int TItemOpTreasureActivateReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureActivateReq, tid_),
  };
  TItemOpTreasureActivateReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpTreasureActivateReq_descriptor_,
      TItemOpTreasureActivateReq::default_instance_,
      TItemOpTreasureActivateReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureActivateReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureActivateReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpTreasureActivateReq));
  TItemOpTreasureFragmentItem_descriptor_ = file->message_type(45);
  static const int TItemOpTreasureFragmentItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureFragmentItem, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureFragmentItem, num_),
  };
  TItemOpTreasureFragmentItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpTreasureFragmentItem_descriptor_,
      TItemOpTreasureFragmentItem::default_instance_,
      TItemOpTreasureFragmentItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureFragmentItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureFragmentItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpTreasureFragmentItem));
  TItemOpTreasureStarLevelUpReq_descriptor_ = file->message_type(46);
  static const int TItemOpTreasureStarLevelUpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureStarLevelUpReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureStarLevelUpReq, consumarr_),
  };
  TItemOpTreasureStarLevelUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpTreasureStarLevelUpReq_descriptor_,
      TItemOpTreasureStarLevelUpReq::default_instance_,
      TItemOpTreasureStarLevelUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureStarLevelUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureStarLevelUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpTreasureStarLevelUpReq));
  TItemOpTreasureAwakeReq_descriptor_ = file->message_type(47);
  static const int TItemOpTreasureAwakeReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureAwakeReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureAwakeReq, consumarr_),
  };
  TItemOpTreasureAwakeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpTreasureAwakeReq_descriptor_,
      TItemOpTreasureAwakeReq::default_instance_,
      TItemOpTreasureAwakeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureAwakeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureAwakeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpTreasureAwakeReq));
  TItemOpSilkBagEnhanceReq_descriptor_ = file->message_type(48);
  static const int TItemOpSilkBagEnhanceReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpSilkBagEnhanceReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpSilkBagEnhanceReq, enhancenum_),
  };
  TItemOpSilkBagEnhanceReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpSilkBagEnhanceReq_descriptor_,
      TItemOpSilkBagEnhanceReq::default_instance_,
      TItemOpSilkBagEnhanceReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpSilkBagEnhanceReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpSilkBagEnhanceReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpSilkBagEnhanceReq));
  TItemOpSilkBagStarUpReq_descriptor_ = file->message_type(49);
  static const int TItemOpSilkBagStarUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpSilkBagStarUpReq, itemid_),
  };
  TItemOpSilkBagStarUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpSilkBagStarUpReq_descriptor_,
      TItemOpSilkBagStarUpReq::default_instance_,
      TItemOpSilkBagStarUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpSilkBagStarUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpSilkBagStarUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpSilkBagStarUpReq));
  TItemOpTreasureStoneCombineReq_descriptor_ = file->message_type(50);
  static const int TItemOpTreasureStoneCombineReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureStoneCombineReq, stonetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureStoneCombineReq, consumnum_),
  };
  TItemOpTreasureStoneCombineReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpTreasureStoneCombineReq_descriptor_,
      TItemOpTreasureStoneCombineReq::default_instance_,
      TItemOpTreasureStoneCombineReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureStoneCombineReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpTreasureStoneCombineReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpTreasureStoneCombineReq));
  TItemOpRefineArmLvReq_descriptor_ = file->message_type(51);
  static const int TItemOpRefineArmLvReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineArmLvReq, itemid_),
  };
  TItemOpRefineArmLvReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpRefineArmLvReq_descriptor_,
      TItemOpRefineArmLvReq::default_instance_,
      TItemOpRefineArmLvReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineArmLvReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineArmLvReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpRefineArmLvReq));
  TItemOpRefineAccessoryLvReq_descriptor_ = file->message_type(52);
  static const int TItemOpRefineAccessoryLvReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineAccessoryLvReq, itemid_),
  };
  TItemOpRefineAccessoryLvReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpRefineAccessoryLvReq_descriptor_,
      TItemOpRefineAccessoryLvReq::default_instance_,
      TItemOpRefineAccessoryLvReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineAccessoryLvReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpRefineAccessoryLvReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpRefineAccessoryLvReq));
  TItemOpArmCarveReq_descriptor_ = file->message_type(53);
  static const int TItemOpArmCarveReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpArmCarveReq, itemid_),
  };
  TItemOpArmCarveReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpArmCarveReq_descriptor_,
      TItemOpArmCarveReq::default_instance_,
      TItemOpArmCarveReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpArmCarveReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpArmCarveReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpArmCarveReq));
  TItemOpDecorationItem_descriptor_ = file->message_type(54);
  static const int TItemOpDecorationItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpDecorationItem, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpDecorationItem, num_),
  };
  TItemOpDecorationItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpDecorationItem_descriptor_,
      TItemOpDecorationItem::default_instance_,
      TItemOpDecorationItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpDecorationItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpDecorationItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpDecorationItem));
  TItemOpDecorationStarLevelUpReq_descriptor_ = file->message_type(55);
  static const int TItemOpDecorationStarLevelUpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpDecorationStarLevelUpReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpDecorationStarLevelUpReq, consumeitemarr_),
  };
  TItemOpDecorationStarLevelUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpDecorationStarLevelUpReq_descriptor_,
      TItemOpDecorationStarLevelUpReq::default_instance_,
      TItemOpDecorationStarLevelUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpDecorationStarLevelUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpDecorationStarLevelUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpDecorationStarLevelUpReq));
  TItemOpArmEvolveReq_descriptor_ = file->message_type(56);
  static const int TItemOpArmEvolveReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpArmEvolveReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpArmEvolveReq, num_),
  };
  TItemOpArmEvolveReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpArmEvolveReq_descriptor_,
      TItemOpArmEvolveReq::default_instance_,
      TItemOpArmEvolveReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpArmEvolveReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpArmEvolveReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpArmEvolveReq));
  TItemOpArmEvolveRsp_descriptor_ = file->message_type(57);
  static const int TItemOpArmEvolveRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpArmEvolveRsp, critratio_),
  };
  TItemOpArmEvolveRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpArmEvolveRsp_descriptor_,
      TItemOpArmEvolveRsp::default_instance_,
      TItemOpArmEvolveRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpArmEvolveRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpArmEvolveRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpArmEvolveRsp));
  TItemOpArmEvolveLvUpReq_descriptor_ = file->message_type(58);
  static const int TItemOpArmEvolveLvUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpArmEvolveLvUpReq, itemid_),
  };
  TItemOpArmEvolveLvUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpArmEvolveLvUpReq_descriptor_,
      TItemOpArmEvolveLvUpReq::default_instance_,
      TItemOpArmEvolveLvUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpArmEvolveLvUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpArmEvolveLvUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpArmEvolveLvUpReq));
  TItemOpForceSoulEnhanceReq_descriptor_ = file->message_type(59);
  static const int TItemOpForceSoulEnhanceReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpForceSoulEnhanceReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpForceSoulEnhanceReq, num_),
  };
  TItemOpForceSoulEnhanceReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpForceSoulEnhanceReq_descriptor_,
      TItemOpForceSoulEnhanceReq::default_instance_,
      TItemOpForceSoulEnhanceReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpForceSoulEnhanceReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpForceSoulEnhanceReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpForceSoulEnhanceReq));
  TItemOpForceSoulStarUpReq_descriptor_ = file->message_type(60);
  static const int TItemOpForceSoulStarUpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpForceSoulStarUpReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpForceSoulStarUpReq, arritemid_),
  };
  TItemOpForceSoulStarUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpForceSoulStarUpReq_descriptor_,
      TItemOpForceSoulStarUpReq::default_instance_,
      TItemOpForceSoulStarUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpForceSoulStarUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpForceSoulStarUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpForceSoulStarUpReq));
  TItemOpComposeForceSoulReq_descriptor_ = file->message_type(61);
  static const int TItemOpComposeForceSoulReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeForceSoulReq, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeForceSoulReq, arritemid_),
  };
  TItemOpComposeForceSoulReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TItemOpComposeForceSoulReq_descriptor_,
      TItemOpComposeForceSoulReq::default_instance_,
      TItemOpComposeForceSoulReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeForceSoulReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TItemOpComposeForceSoulReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TItemOpComposeForceSoulReq));
  EBeastArmRefineCostType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fItemOp_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpCombinePromoteReq_descriptor_, &TItemOpCombinePromoteReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpEnhanceArmReq_descriptor_, &TItemOpEnhanceArmReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpAutoEnhanceArmReq_descriptor_, &TItemOpAutoEnhanceArmReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpRefineArmReq_descriptor_, &TItemOpRefineArmReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpEnhanceAccessoryReq_descriptor_, &TItemOpEnhanceAccessoryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpEnhanceAccessoryRsp_descriptor_, &TItemOpEnhanceAccessoryRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpEnhanceAccessoryLvUpReq_descriptor_, &TItemOpEnhanceAccessoryLvUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpEnhanceAccessoryLvUpRsp_descriptor_, &TItemOpEnhanceAccessoryLvUpRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpRefineAccessoryReq_descriptor_, &TItemOpRefineAccessoryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpAdvanceSoulReq_descriptor_, &TItemOpAdvanceSoulReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpAdvanceExclEquipReq_descriptor_, &TItemOpAdvanceExclEquipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpAutoAdvanceExclEquipReq_descriptor_, &TItemOpAutoAdvanceExclEquipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpStarUpExclEquipReq_descriptor_, &TItemOpStarUpExclEquipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpGetRefineExclEquipResultReq_descriptor_, &TItemOpGetRefineExclEquipResultReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpGetRefineExclEquipResultRsp_descriptor_, &TItemOpGetRefineExclEquipResultRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpReplaceRefineExclEquipAttrReq_descriptor_, &TItemOpReplaceRefineExclEquipAttrReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpRefineExclEquipUnlockSlotReq_descriptor_, &TItemOpRefineExclEquipUnlockSlotReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpRefineExclEquipReplaceAndRefineReq_descriptor_, &TItemOpRefineExclEquipReplaceAndRefineReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpRefineExclEquipReplaceAndRefineRsp_descriptor_, &TItemOpRefineExclEquipReplaceAndRefineRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpComposeFavoriteReq_descriptor_, &TItemOpComposeFavoriteReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpComposeMaterialReq_descriptor_, &TItemOpComposeMaterialReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpComposeMaterialRsp_descriptor_, &TItemOpComposeMaterialRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpComposeTreasureReq_descriptor_, &TItemOpComposeTreasureReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpComposeTreasureRsp_descriptor_, &TItemOpComposeTreasureRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpReforgeExclEquipReq_descriptor_, &TItemOpReforgeExclEquipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpReforgeExclEquipRsp_descriptor_, &TItemOpReforgeExclEquipRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpReforgeExclEquipConfirmReq_descriptor_, &TItemOpReforgeExclEquipConfirmReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpBeastArmEnhanceReq_descriptor_, &TItemOpBeastArmEnhanceReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpAutoBeastArmEnhanceReq_descriptor_, &TItemOpAutoBeastArmEnhanceReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpBeastArmAdvanceReq_descriptor_, &TItemOpBeastArmAdvanceReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpBeastArmRefineReq_descriptor_, &TItemOpBeastArmRefineReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpBeastArmRefreshRandAttrReq_descriptor_, &TItemOpBeastArmRefreshRandAttrReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpIdentifyHeroSoulReq_descriptor_, &TItemOpIdentifyHeroSoulReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpHeroSoulDropInfo_descriptor_, &TItemOpHeroSoulDropInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpIdentifyHeroSoulRsp_descriptor_, &TItemOpIdentifyHeroSoulRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpBreakArmReq_descriptor_, &TItemOpBreakArmReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpWhiteGoldBreakArmReq_descriptor_, &TItemOpWhiteGoldBreakArmReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpBreakAccessoryReq_descriptor_, &TItemOpBreakAccessoryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpWhiteGoldBreakAccessoryReq_descriptor_, &TItemOpWhiteGoldBreakAccessoryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpTransformHeroSoulReq_descriptor_, &TItemOpTransformHeroSoulReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpTransformHeroSoulRsp_descriptor_, &TItemOpTransformHeroSoulRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpMountEquipLvUpReq_descriptor_, &TItemOpMountEquipLvUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpGoldTransformExclEquipReq_descriptor_, &TItemOpGoldTransformExclEquipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpEngraveExclEquipReq_descriptor_, &TItemOpEngraveExclEquipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpTreasureActivateReq_descriptor_, &TItemOpTreasureActivateReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpTreasureFragmentItem_descriptor_, &TItemOpTreasureFragmentItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpTreasureStarLevelUpReq_descriptor_, &TItemOpTreasureStarLevelUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpTreasureAwakeReq_descriptor_, &TItemOpTreasureAwakeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpSilkBagEnhanceReq_descriptor_, &TItemOpSilkBagEnhanceReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpSilkBagStarUpReq_descriptor_, &TItemOpSilkBagStarUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpTreasureStoneCombineReq_descriptor_, &TItemOpTreasureStoneCombineReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpRefineArmLvReq_descriptor_, &TItemOpRefineArmLvReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpRefineAccessoryLvReq_descriptor_, &TItemOpRefineAccessoryLvReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpArmCarveReq_descriptor_, &TItemOpArmCarveReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpDecorationItem_descriptor_, &TItemOpDecorationItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpDecorationStarLevelUpReq_descriptor_, &TItemOpDecorationStarLevelUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpArmEvolveReq_descriptor_, &TItemOpArmEvolveReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpArmEvolveRsp_descriptor_, &TItemOpArmEvolveRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpArmEvolveLvUpReq_descriptor_, &TItemOpArmEvolveLvUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpForceSoulEnhanceReq_descriptor_, &TItemOpForceSoulEnhanceReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpForceSoulStarUpReq_descriptor_, &TItemOpForceSoulStarUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TItemOpComposeForceSoulReq_descriptor_, &TItemOpComposeForceSoulReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fItemOp_2eproto() {
  delete TItemOpCombinePromoteReq::default_instance_;
  delete TItemOpCombinePromoteReq_reflection_;
  delete TItemOpEnhanceArmReq::default_instance_;
  delete TItemOpEnhanceArmReq_reflection_;
  delete TItemOpAutoEnhanceArmReq::default_instance_;
  delete TItemOpAutoEnhanceArmReq_reflection_;
  delete TItemOpRefineArmReq::default_instance_;
  delete TItemOpRefineArmReq_reflection_;
  delete TItemOpEnhanceAccessoryReq::default_instance_;
  delete TItemOpEnhanceAccessoryReq_reflection_;
  delete TItemOpEnhanceAccessoryRsp::default_instance_;
  delete TItemOpEnhanceAccessoryRsp_reflection_;
  delete TItemOpEnhanceAccessoryLvUpReq::default_instance_;
  delete TItemOpEnhanceAccessoryLvUpReq_reflection_;
  delete TItemOpEnhanceAccessoryLvUpRsp::default_instance_;
  delete TItemOpEnhanceAccessoryLvUpRsp_reflection_;
  delete TItemOpRefineAccessoryReq::default_instance_;
  delete TItemOpRefineAccessoryReq_reflection_;
  delete TItemOpAdvanceSoulReq::default_instance_;
  delete TItemOpAdvanceSoulReq_reflection_;
  delete TItemOpAdvanceExclEquipReq::default_instance_;
  delete TItemOpAdvanceExclEquipReq_reflection_;
  delete TItemOpAutoAdvanceExclEquipReq::default_instance_;
  delete TItemOpAutoAdvanceExclEquipReq_reflection_;
  delete TItemOpStarUpExclEquipReq::default_instance_;
  delete TItemOpStarUpExclEquipReq_reflection_;
  delete TItemOpGetRefineExclEquipResultReq::default_instance_;
  delete TItemOpGetRefineExclEquipResultReq_reflection_;
  delete TItemOpGetRefineExclEquipResultRsp::default_instance_;
  delete TItemOpGetRefineExclEquipResultRsp_reflection_;
  delete TItemOpReplaceRefineExclEquipAttrReq::default_instance_;
  delete TItemOpReplaceRefineExclEquipAttrReq_reflection_;
  delete TItemOpRefineExclEquipUnlockSlotReq::default_instance_;
  delete TItemOpRefineExclEquipUnlockSlotReq_reflection_;
  delete TItemOpRefineExclEquipReplaceAndRefineReq::default_instance_;
  delete TItemOpRefineExclEquipReplaceAndRefineReq_reflection_;
  delete TItemOpRefineExclEquipReplaceAndRefineRsp::default_instance_;
  delete TItemOpRefineExclEquipReplaceAndRefineRsp_reflection_;
  delete TItemOpComposeFavoriteReq::default_instance_;
  delete TItemOpComposeFavoriteReq_reflection_;
  delete TItemOpComposeMaterialReq::default_instance_;
  delete TItemOpComposeMaterialReq_reflection_;
  delete TItemOpComposeMaterialRsp::default_instance_;
  delete TItemOpComposeMaterialRsp_reflection_;
  delete TItemOpComposeTreasureReq::default_instance_;
  delete TItemOpComposeTreasureReq_reflection_;
  delete TItemOpComposeTreasureRsp::default_instance_;
  delete TItemOpComposeTreasureRsp_reflection_;
  delete TItemOpReforgeExclEquipReq::default_instance_;
  delete TItemOpReforgeExclEquipReq_reflection_;
  delete TItemOpReforgeExclEquipRsp::default_instance_;
  delete TItemOpReforgeExclEquipRsp_reflection_;
  delete TItemOpReforgeExclEquipConfirmReq::default_instance_;
  delete TItemOpReforgeExclEquipConfirmReq_reflection_;
  delete TItemOpBeastArmEnhanceReq::default_instance_;
  delete TItemOpBeastArmEnhanceReq_reflection_;
  delete TItemOpAutoBeastArmEnhanceReq::default_instance_;
  delete TItemOpAutoBeastArmEnhanceReq_reflection_;
  delete TItemOpBeastArmAdvanceReq::default_instance_;
  delete TItemOpBeastArmAdvanceReq_reflection_;
  delete TItemOpBeastArmRefineReq::default_instance_;
  delete TItemOpBeastArmRefineReq_reflection_;
  delete TItemOpBeastArmRefreshRandAttrReq::default_instance_;
  delete TItemOpBeastArmRefreshRandAttrReq_reflection_;
  delete TItemOpIdentifyHeroSoulReq::default_instance_;
  delete TItemOpIdentifyHeroSoulReq_reflection_;
  delete TItemOpHeroSoulDropInfo::default_instance_;
  delete TItemOpHeroSoulDropInfo_reflection_;
  delete TItemOpIdentifyHeroSoulRsp::default_instance_;
  delete TItemOpIdentifyHeroSoulRsp_reflection_;
  delete TItemOpBreakArmReq::default_instance_;
  delete TItemOpBreakArmReq_reflection_;
  delete TItemOpWhiteGoldBreakArmReq::default_instance_;
  delete TItemOpWhiteGoldBreakArmReq_reflection_;
  delete TItemOpBreakAccessoryReq::default_instance_;
  delete TItemOpBreakAccessoryReq_reflection_;
  delete TItemOpWhiteGoldBreakAccessoryReq::default_instance_;
  delete TItemOpWhiteGoldBreakAccessoryReq_reflection_;
  delete TItemOpTransformHeroSoulReq::default_instance_;
  delete TItemOpTransformHeroSoulReq_reflection_;
  delete TItemOpTransformHeroSoulRsp::default_instance_;
  delete TItemOpTransformHeroSoulRsp_reflection_;
  delete TItemOpMountEquipLvUpReq::default_instance_;
  delete TItemOpMountEquipLvUpReq_reflection_;
  delete TItemOpGoldTransformExclEquipReq::default_instance_;
  delete TItemOpGoldTransformExclEquipReq_reflection_;
  delete TItemOpEngraveExclEquipReq::default_instance_;
  delete TItemOpEngraveExclEquipReq_reflection_;
  delete TItemOpTreasureActivateReq::default_instance_;
  delete TItemOpTreasureActivateReq_reflection_;
  delete TItemOpTreasureFragmentItem::default_instance_;
  delete TItemOpTreasureFragmentItem_reflection_;
  delete TItemOpTreasureStarLevelUpReq::default_instance_;
  delete TItemOpTreasureStarLevelUpReq_reflection_;
  delete TItemOpTreasureAwakeReq::default_instance_;
  delete TItemOpTreasureAwakeReq_reflection_;
  delete TItemOpSilkBagEnhanceReq::default_instance_;
  delete TItemOpSilkBagEnhanceReq_reflection_;
  delete TItemOpSilkBagStarUpReq::default_instance_;
  delete TItemOpSilkBagStarUpReq_reflection_;
  delete TItemOpTreasureStoneCombineReq::default_instance_;
  delete TItemOpTreasureStoneCombineReq_reflection_;
  delete TItemOpRefineArmLvReq::default_instance_;
  delete TItemOpRefineArmLvReq_reflection_;
  delete TItemOpRefineAccessoryLvReq::default_instance_;
  delete TItemOpRefineAccessoryLvReq_reflection_;
  delete TItemOpArmCarveReq::default_instance_;
  delete TItemOpArmCarveReq_reflection_;
  delete TItemOpDecorationItem::default_instance_;
  delete TItemOpDecorationItem_reflection_;
  delete TItemOpDecorationStarLevelUpReq::default_instance_;
  delete TItemOpDecorationStarLevelUpReq_reflection_;
  delete TItemOpArmEvolveReq::default_instance_;
  delete TItemOpArmEvolveReq_reflection_;
  delete TItemOpArmEvolveRsp::default_instance_;
  delete TItemOpArmEvolveRsp_reflection_;
  delete TItemOpArmEvolveLvUpReq::default_instance_;
  delete TItemOpArmEvolveLvUpReq_reflection_;
  delete TItemOpForceSoulEnhanceReq::default_instance_;
  delete TItemOpForceSoulEnhanceReq_reflection_;
  delete TItemOpForceSoulStarUpReq::default_instance_;
  delete TItemOpForceSoulStarUpReq_reflection_;
  delete TItemOpComposeForceSoulReq::default_instance_;
  delete TItemOpComposeForceSoulReq_reflection_;
}

void protobuf_AddDesc_net_2fItemOp_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommon_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020net/ItemOp.proto\022\002pb\032\020net/Common.proto"
    "\032\026net/CommonReward.proto\"K\n\030TItemOpCombi"
    "nePromoteReq\022\021\n\tItemTplId\030\001 \001(\r\022\017\n\007ItemN"
    "um\030\002 \001(\r\022\013\n\003Hid\030\003 \001(\r\":\n\024TItemOpEnhanceA"
    "rmReq\022\016\n\006ItemId\030\001 \001(\r\022\022\n\nEnhanceNum\030\002 \001("
    "\r\"\'\n\030TItemOpAutoEnhanceArmReq\022\013\n\003Hid\030\001 \001"
    "(\r\"%\n\023TItemOpRefineArmReq\022\016\n\006ItemId\030\001 \001("
    "\r\",\n\032TItemOpEnhanceAccessoryReq\022\016\n\006ItemI"
    "d\030\001 \001(\r\"/\n\032TItemOpEnhanceAccessoryRsp\022\021\n"
    "\tCritRatio\030\001 \001(\r\"0\n\036TItemOpEnhanceAccess"
    "oryLvUpReq\022\016\n\006ItemId\030\001 \001(\r\"3\n\036TItemOpEnh"
    "anceAccessoryLvUpRsp\022\021\n\tCritRatio\030\001 \001(\r\""
    "+\n\031TItemOpRefineAccessoryReq\022\016\n\006ItemId\030\001"
    " \001(\r\"\'\n\025TItemOpAdvanceSoulReq\022\016\n\006ItemId\030"
    "\001 \001(\r\"F\n\032TItemOpAdvanceExclEquipReq\022\016\n\006I"
    "temId\030\001 \001(\r\022\013\n\003Pos\030\002 \001(\r\022\013\n\003Num\030\003 \001(\r\">\n"
    "\036TItemOpAutoAdvanceExclEquipReq\022\016\n\006ItemI"
    "d\030\001 \001(\r\022\014\n\004UpLv\030\002 \001(\r\"+\n\031TItemOpStarUpEx"
    "clEquipReq\022\016\n\006ItemId\030\001 \001(\r\"W\n\"TItemOpGet"
    "RefineExclEquipResultReq\022\016\n\006ItemId\030\001 \001(\r"
    "\022\r\n\005PosId\030\002 \001(\r\022\022\n\nReforgeNum\030\003 \001(\r\"U\n\"T"
    "ItemOpGetRefineExclEquipResultRsp\022\025\n\rRef"
    "orgeAttrId\030\001 \001(\r\022\030\n\020ReforgeAttrValue\030\002 \001"
    "(\r\"V\n$TItemOpReplaceRefineExclEquipAttrR"
    "eq\022\016\n\006ItemId\030\001 \001(\r\022\r\n\005PosId\030\002 \001(\r\022\017\n\007Ope"
    "rate\030\003 \001(\r\"D\n#TItemOpRefineExclEquipUnlo"
    "ckSlotReq\022\016\n\006ItemId\030\001 \001(\r\022\r\n\005PosId\030\002 \001(\r"
    "\"]\n)TItemOpRefineExclEquipReplaceAndRefi"
    "neReq\022\016\n\006ItemId\030\001 \001(\r\022\r\n\005PosId\030\002 \001(\r\022\021\n\t"
    "RefineNum\030\003 \001(\r\"\\\n)TItemOpRefineExclEqui"
    "pReplaceAndRefineRsp\022\025\n\rReforgeAttrId\030\001 "
    "\001(\r\022\030\n\020ReforgeAttrValue\030\002 \001(\r\"4\n\031TItemOp"
    "ComposeFavoriteReq\022\n\n\002Id\030\001 \001(\r\022\013\n\003Num\030\002 "
    "\001(\r\";\n\031TItemOpComposeMaterialReq\022\021\n\tArrI"
    "temId\030\001 \003(\r\022\013\n\003Num\030\002 \001(\r\"C\n\031TItemOpCompo"
    "seMaterialRsp\022&\n\013RewardArray\030\001 \003(\0132\021.pb."
    "TCommonReward\";\n\031TItemOpComposeTreasureR"
    "eq\022\021\n\tArrItemId\030\001 \003(\r\022\013\n\003Num\030\002 \001(\r\"R\n\031TI"
    "temOpComposeTreasureRsp\022&\n\013RewardArray\030\001"
    " \003(\0132\021.pb.TCommonReward\022\r\n\005IsSuc\030\002 \001(\r\","
    "\n\032TItemOpReforgeExclEquipReq\022\016\n\006ItemId\030\001"
    " \001(\r\"-\n\032TItemOpReforgeExclEquipRsp\022\017\n\007It"
    "emTid\030\001 \001(\r\"D\n!TItemOpReforgeExclEquipCo"
    "nfirmReq\022\016\n\006ItemId\030\001 \001(\r\022\017\n\007ItemTid\030\002 \001("
    "\r\"8\n\031TItemOpBeastArmEnhanceReq\022\016\n\006ItemId"
    "\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\"0\n\035TItemOpAutoBeastA"
    "rmEnhanceReq\022\017\n\007BeastId\030\001 \001(\r\"+\n\031TItemOp"
    "BeastArmAdvanceReq\022\016\n\006ItemId\030\001 \001(\r\"\203\001\n\030T"
    "ItemOpBeastArmRefineReq\022\016\n\006ItemId\030\001 \001(\r\022"
    "\025\n\rRandAttrIndex\030\002 \001(\r\022\021\n\tRefineNum\030\003 \001("
    "\r\022-\n\010CostType\030\004 \001(\0162\033.pb.EBeastArmRefine"
    "CostType\"_\n!TItemOpBeastArmRefreshRandAt"
    "trReq\022\016\n\006ItemId\030\001 \001(\r\022\025\n\rRandAttrIndex\030\002"
    " \001(\r\022\023\n\013RefineIndex\030\003 \001(\r\"/\n\032TItemOpIden"
    "tifyHeroSoulReq\022\021\n\tArrItemId\030\001 \003(\r\"Q\n\027TI"
    "temOpHeroSoulDropInfo\022\016\n\006ItemId\030\001 \001(\r\022&\n"
    "\013RewardArray\030\002 \003(\0132\021.pb.TCommonReward\"N\n"
    "\032TItemOpIdentifyHeroSoulRsp\0220\n\013ArrDropIn"
    "fo\030\001 \003(\0132\033.pb.TItemOpHeroSoulDropInfo\"$\n"
    "\022TItemOpBreakArmReq\022\016\n\006ItemId\030\001 \001(\r\"-\n\033T"
    "ItemOpWhiteGoldBreakArmReq\022\016\n\006ItemId\030\001 \001"
    "(\r\"*\n\030TItemOpBreakAccessoryReq\022\016\n\006ItemId"
    "\030\001 \001(\r\"3\n!TItemOpWhiteGoldBreakAccessory"
    "Req\022\016\n\006ItemId\030\001 \001(\r\":\n\033TItemOpTransformH"
    "eroSoulReq\022\016\n\006ItemId\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\""
    "C\n\033TItemOpTransformHeroSoulRsp\022$\n\tarrRew"
    "ard\030\001 \003(\0132\021.pb.TCommonReward\";\n\030TItemOpM"
    "ountEquipLvUpReq\022\016\n\006ItemId\030\001 \001(\r\022\017\n\007UpLe"
    "vel\030\002 \001(\r\"2\n TItemOpGoldTransformExclEqu"
    "ipReq\022\016\n\006ItemId\030\001 \001(\r\",\n\032TItemOpEngraveE"
    "xclEquipReq\022\016\n\006ItemId\030\001 \001(\r\")\n\032TItemOpTr"
    "easureActivateReq\022\013\n\003Tid\030\001 \001(\r\"7\n\033TItemO"
    "pTreasureFragmentItem\022\013\n\003Tid\030\001 \001(\r\022\013\n\003Nu"
    "m\030\002 \001(\r\"c\n\035TItemOpTreasureStarLevelUpReq"
    "\022\016\n\006ItemId\030\001 \001(\r\0222\n\tConsumArr\030\002 \003(\0132\037.pb"
    ".TItemOpTreasureFragmentItem\"]\n\027TItemOpT"
    "reasureAwakeReq\022\016\n\006ItemId\030\001 \001(\r\0222\n\tConsu"
    "mArr\030\002 \003(\0132\037.pb.TItemOpTreasureFragmentI"
    "tem\">\n\030TItemOpSilkBagEnhanceReq\022\016\n\006ItemI"
    "d\030\001 \001(\r\022\022\n\nEnhanceNum\030\002 \001(\r\")\n\027TItemOpSi"
    "lkBagStarUpReq\022\016\n\006ItemId\030\001 \001(\r\"E\n\036TItemO"
    "pTreasureStoneCombineReq\022\020\n\010StoneTid\030\001 \001"
    "(\r\022\021\n\tConsumNum\030\002 \001(\r\"\'\n\025TItemOpRefineAr"
    "mLvReq\022\016\n\006ItemId\030\001 \001(\r\"-\n\033TItemOpRefineA"
    "ccessoryLvReq\022\016\n\006ItemId\030\001 \001(\r\"$\n\022TItemOp"
    "ArmCarveReq\022\016\n\006ItemId\030\001 \001(\r\"1\n\025TItemOpDe"
    "corationItem\022\013\n\003Tid\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\"d"
    "\n\037TItemOpDecorationStarLevelUpReq\022\016\n\006Ite"
    "mId\030\001 \001(\r\0221\n\016ConsumeItemArr\030\002 \003(\0132\031.pb.T"
    "ItemOpDecorationItem\"2\n\023TItemOpArmEvolve"
    "Req\022\016\n\006ItemId\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\"(\n\023TIte"
    "mOpArmEvolveRsp\022\021\n\tCritRatio\030\001 \001(\r\")\n\027TI"
    "temOpArmEvolveLvUpReq\022\016\n\006ItemId\030\001 \001(\r\"9\n"
    "\032TItemOpForceSoulEnhanceReq\022\016\n\006ItemId\030\001 "
    "\001(\r\022\013\n\003num\030\002 \001(\r\">\n\031TItemOpForceSoulStar"
    "UpReq\022\016\n\006ItemId\030\001 \001(\r\022\021\n\tArrItemId\030\002 \003(\r"
    "\"<\n\032TItemOpComposeForceSoulReq\022\013\n\003Tid\030\001 "
    "\001(\r\022\021\n\tArrItemId\030\002 \003(\r*E\n\027EBeastArmRefin"
    "eCostType\022\024\n\020REFINE_COST_ITEM\020\001\022\024\n\020REFIN"
    "E_COST_GOLD\020\002", 3973);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ItemOp.proto", &protobuf_RegisterTypes);
  TItemOpCombinePromoteReq::default_instance_ = new TItemOpCombinePromoteReq();
  TItemOpEnhanceArmReq::default_instance_ = new TItemOpEnhanceArmReq();
  TItemOpAutoEnhanceArmReq::default_instance_ = new TItemOpAutoEnhanceArmReq();
  TItemOpRefineArmReq::default_instance_ = new TItemOpRefineArmReq();
  TItemOpEnhanceAccessoryReq::default_instance_ = new TItemOpEnhanceAccessoryReq();
  TItemOpEnhanceAccessoryRsp::default_instance_ = new TItemOpEnhanceAccessoryRsp();
  TItemOpEnhanceAccessoryLvUpReq::default_instance_ = new TItemOpEnhanceAccessoryLvUpReq();
  TItemOpEnhanceAccessoryLvUpRsp::default_instance_ = new TItemOpEnhanceAccessoryLvUpRsp();
  TItemOpRefineAccessoryReq::default_instance_ = new TItemOpRefineAccessoryReq();
  TItemOpAdvanceSoulReq::default_instance_ = new TItemOpAdvanceSoulReq();
  TItemOpAdvanceExclEquipReq::default_instance_ = new TItemOpAdvanceExclEquipReq();
  TItemOpAutoAdvanceExclEquipReq::default_instance_ = new TItemOpAutoAdvanceExclEquipReq();
  TItemOpStarUpExclEquipReq::default_instance_ = new TItemOpStarUpExclEquipReq();
  TItemOpGetRefineExclEquipResultReq::default_instance_ = new TItemOpGetRefineExclEquipResultReq();
  TItemOpGetRefineExclEquipResultRsp::default_instance_ = new TItemOpGetRefineExclEquipResultRsp();
  TItemOpReplaceRefineExclEquipAttrReq::default_instance_ = new TItemOpReplaceRefineExclEquipAttrReq();
  TItemOpRefineExclEquipUnlockSlotReq::default_instance_ = new TItemOpRefineExclEquipUnlockSlotReq();
  TItemOpRefineExclEquipReplaceAndRefineReq::default_instance_ = new TItemOpRefineExclEquipReplaceAndRefineReq();
  TItemOpRefineExclEquipReplaceAndRefineRsp::default_instance_ = new TItemOpRefineExclEquipReplaceAndRefineRsp();
  TItemOpComposeFavoriteReq::default_instance_ = new TItemOpComposeFavoriteReq();
  TItemOpComposeMaterialReq::default_instance_ = new TItemOpComposeMaterialReq();
  TItemOpComposeMaterialRsp::default_instance_ = new TItemOpComposeMaterialRsp();
  TItemOpComposeTreasureReq::default_instance_ = new TItemOpComposeTreasureReq();
  TItemOpComposeTreasureRsp::default_instance_ = new TItemOpComposeTreasureRsp();
  TItemOpReforgeExclEquipReq::default_instance_ = new TItemOpReforgeExclEquipReq();
  TItemOpReforgeExclEquipRsp::default_instance_ = new TItemOpReforgeExclEquipRsp();
  TItemOpReforgeExclEquipConfirmReq::default_instance_ = new TItemOpReforgeExclEquipConfirmReq();
  TItemOpBeastArmEnhanceReq::default_instance_ = new TItemOpBeastArmEnhanceReq();
  TItemOpAutoBeastArmEnhanceReq::default_instance_ = new TItemOpAutoBeastArmEnhanceReq();
  TItemOpBeastArmAdvanceReq::default_instance_ = new TItemOpBeastArmAdvanceReq();
  TItemOpBeastArmRefineReq::default_instance_ = new TItemOpBeastArmRefineReq();
  TItemOpBeastArmRefreshRandAttrReq::default_instance_ = new TItemOpBeastArmRefreshRandAttrReq();
  TItemOpIdentifyHeroSoulReq::default_instance_ = new TItemOpIdentifyHeroSoulReq();
  TItemOpHeroSoulDropInfo::default_instance_ = new TItemOpHeroSoulDropInfo();
  TItemOpIdentifyHeroSoulRsp::default_instance_ = new TItemOpIdentifyHeroSoulRsp();
  TItemOpBreakArmReq::default_instance_ = new TItemOpBreakArmReq();
  TItemOpWhiteGoldBreakArmReq::default_instance_ = new TItemOpWhiteGoldBreakArmReq();
  TItemOpBreakAccessoryReq::default_instance_ = new TItemOpBreakAccessoryReq();
  TItemOpWhiteGoldBreakAccessoryReq::default_instance_ = new TItemOpWhiteGoldBreakAccessoryReq();
  TItemOpTransformHeroSoulReq::default_instance_ = new TItemOpTransformHeroSoulReq();
  TItemOpTransformHeroSoulRsp::default_instance_ = new TItemOpTransformHeroSoulRsp();
  TItemOpMountEquipLvUpReq::default_instance_ = new TItemOpMountEquipLvUpReq();
  TItemOpGoldTransformExclEquipReq::default_instance_ = new TItemOpGoldTransformExclEquipReq();
  TItemOpEngraveExclEquipReq::default_instance_ = new TItemOpEngraveExclEquipReq();
  TItemOpTreasureActivateReq::default_instance_ = new TItemOpTreasureActivateReq();
  TItemOpTreasureFragmentItem::default_instance_ = new TItemOpTreasureFragmentItem();
  TItemOpTreasureStarLevelUpReq::default_instance_ = new TItemOpTreasureStarLevelUpReq();
  TItemOpTreasureAwakeReq::default_instance_ = new TItemOpTreasureAwakeReq();
  TItemOpSilkBagEnhanceReq::default_instance_ = new TItemOpSilkBagEnhanceReq();
  TItemOpSilkBagStarUpReq::default_instance_ = new TItemOpSilkBagStarUpReq();
  TItemOpTreasureStoneCombineReq::default_instance_ = new TItemOpTreasureStoneCombineReq();
  TItemOpRefineArmLvReq::default_instance_ = new TItemOpRefineArmLvReq();
  TItemOpRefineAccessoryLvReq::default_instance_ = new TItemOpRefineAccessoryLvReq();
  TItemOpArmCarveReq::default_instance_ = new TItemOpArmCarveReq();
  TItemOpDecorationItem::default_instance_ = new TItemOpDecorationItem();
  TItemOpDecorationStarLevelUpReq::default_instance_ = new TItemOpDecorationStarLevelUpReq();
  TItemOpArmEvolveReq::default_instance_ = new TItemOpArmEvolveReq();
  TItemOpArmEvolveRsp::default_instance_ = new TItemOpArmEvolveRsp();
  TItemOpArmEvolveLvUpReq::default_instance_ = new TItemOpArmEvolveLvUpReq();
  TItemOpForceSoulEnhanceReq::default_instance_ = new TItemOpForceSoulEnhanceReq();
  TItemOpForceSoulStarUpReq::default_instance_ = new TItemOpForceSoulStarUpReq();
  TItemOpComposeForceSoulReq::default_instance_ = new TItemOpComposeForceSoulReq();
  TItemOpCombinePromoteReq::default_instance_->InitAsDefaultInstance();
  TItemOpEnhanceArmReq::default_instance_->InitAsDefaultInstance();
  TItemOpAutoEnhanceArmReq::default_instance_->InitAsDefaultInstance();
  TItemOpRefineArmReq::default_instance_->InitAsDefaultInstance();
  TItemOpEnhanceAccessoryReq::default_instance_->InitAsDefaultInstance();
  TItemOpEnhanceAccessoryRsp::default_instance_->InitAsDefaultInstance();
  TItemOpEnhanceAccessoryLvUpReq::default_instance_->InitAsDefaultInstance();
  TItemOpEnhanceAccessoryLvUpRsp::default_instance_->InitAsDefaultInstance();
  TItemOpRefineAccessoryReq::default_instance_->InitAsDefaultInstance();
  TItemOpAdvanceSoulReq::default_instance_->InitAsDefaultInstance();
  TItemOpAdvanceExclEquipReq::default_instance_->InitAsDefaultInstance();
  TItemOpAutoAdvanceExclEquipReq::default_instance_->InitAsDefaultInstance();
  TItemOpStarUpExclEquipReq::default_instance_->InitAsDefaultInstance();
  TItemOpGetRefineExclEquipResultReq::default_instance_->InitAsDefaultInstance();
  TItemOpGetRefineExclEquipResultRsp::default_instance_->InitAsDefaultInstance();
  TItemOpReplaceRefineExclEquipAttrReq::default_instance_->InitAsDefaultInstance();
  TItemOpRefineExclEquipUnlockSlotReq::default_instance_->InitAsDefaultInstance();
  TItemOpRefineExclEquipReplaceAndRefineReq::default_instance_->InitAsDefaultInstance();
  TItemOpRefineExclEquipReplaceAndRefineRsp::default_instance_->InitAsDefaultInstance();
  TItemOpComposeFavoriteReq::default_instance_->InitAsDefaultInstance();
  TItemOpComposeMaterialReq::default_instance_->InitAsDefaultInstance();
  TItemOpComposeMaterialRsp::default_instance_->InitAsDefaultInstance();
  TItemOpComposeTreasureReq::default_instance_->InitAsDefaultInstance();
  TItemOpComposeTreasureRsp::default_instance_->InitAsDefaultInstance();
  TItemOpReforgeExclEquipReq::default_instance_->InitAsDefaultInstance();
  TItemOpReforgeExclEquipRsp::default_instance_->InitAsDefaultInstance();
  TItemOpReforgeExclEquipConfirmReq::default_instance_->InitAsDefaultInstance();
  TItemOpBeastArmEnhanceReq::default_instance_->InitAsDefaultInstance();
  TItemOpAutoBeastArmEnhanceReq::default_instance_->InitAsDefaultInstance();
  TItemOpBeastArmAdvanceReq::default_instance_->InitAsDefaultInstance();
  TItemOpBeastArmRefineReq::default_instance_->InitAsDefaultInstance();
  TItemOpBeastArmRefreshRandAttrReq::default_instance_->InitAsDefaultInstance();
  TItemOpIdentifyHeroSoulReq::default_instance_->InitAsDefaultInstance();
  TItemOpHeroSoulDropInfo::default_instance_->InitAsDefaultInstance();
  TItemOpIdentifyHeroSoulRsp::default_instance_->InitAsDefaultInstance();
  TItemOpBreakArmReq::default_instance_->InitAsDefaultInstance();
  TItemOpWhiteGoldBreakArmReq::default_instance_->InitAsDefaultInstance();
  TItemOpBreakAccessoryReq::default_instance_->InitAsDefaultInstance();
  TItemOpWhiteGoldBreakAccessoryReq::default_instance_->InitAsDefaultInstance();
  TItemOpTransformHeroSoulReq::default_instance_->InitAsDefaultInstance();
  TItemOpTransformHeroSoulRsp::default_instance_->InitAsDefaultInstance();
  TItemOpMountEquipLvUpReq::default_instance_->InitAsDefaultInstance();
  TItemOpGoldTransformExclEquipReq::default_instance_->InitAsDefaultInstance();
  TItemOpEngraveExclEquipReq::default_instance_->InitAsDefaultInstance();
  TItemOpTreasureActivateReq::default_instance_->InitAsDefaultInstance();
  TItemOpTreasureFragmentItem::default_instance_->InitAsDefaultInstance();
  TItemOpTreasureStarLevelUpReq::default_instance_->InitAsDefaultInstance();
  TItemOpTreasureAwakeReq::default_instance_->InitAsDefaultInstance();
  TItemOpSilkBagEnhanceReq::default_instance_->InitAsDefaultInstance();
  TItemOpSilkBagStarUpReq::default_instance_->InitAsDefaultInstance();
  TItemOpTreasureStoneCombineReq::default_instance_->InitAsDefaultInstance();
  TItemOpRefineArmLvReq::default_instance_->InitAsDefaultInstance();
  TItemOpRefineAccessoryLvReq::default_instance_->InitAsDefaultInstance();
  TItemOpArmCarveReq::default_instance_->InitAsDefaultInstance();
  TItemOpDecorationItem::default_instance_->InitAsDefaultInstance();
  TItemOpDecorationStarLevelUpReq::default_instance_->InitAsDefaultInstance();
  TItemOpArmEvolveReq::default_instance_->InitAsDefaultInstance();
  TItemOpArmEvolveRsp::default_instance_->InitAsDefaultInstance();
  TItemOpArmEvolveLvUpReq::default_instance_->InitAsDefaultInstance();
  TItemOpForceSoulEnhanceReq::default_instance_->InitAsDefaultInstance();
  TItemOpForceSoulStarUpReq::default_instance_->InitAsDefaultInstance();
  TItemOpComposeForceSoulReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fItemOp_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fItemOp_2eproto {
  StaticDescriptorInitializer_net_2fItemOp_2eproto() {
    protobuf_AddDesc_net_2fItemOp_2eproto();
  }
} static_descriptor_initializer_net_2fItemOp_2eproto_;
const ::google::protobuf::EnumDescriptor* EBeastArmRefineCostType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EBeastArmRefineCostType_descriptor_;
}
bool EBeastArmRefineCostType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpCombinePromoteReq::kItemTplIdFieldNumber;
const int TItemOpCombinePromoteReq::kItemNumFieldNumber;
const int TItemOpCombinePromoteReq::kHidFieldNumber;
#endif  // !_MSC_VER

TItemOpCombinePromoteReq::TItemOpCombinePromoteReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpCombinePromoteReq)
}

void TItemOpCombinePromoteReq::InitAsDefaultInstance() {
}

TItemOpCombinePromoteReq::TItemOpCombinePromoteReq(const TItemOpCombinePromoteReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpCombinePromoteReq)
}

void TItemOpCombinePromoteReq::SharedCtor() {
  _cached_size_ = 0;
  itemtplid_ = 0u;
  itemnum_ = 0u;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpCombinePromoteReq::~TItemOpCombinePromoteReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpCombinePromoteReq)
  SharedDtor();
}

void TItemOpCombinePromoteReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpCombinePromoteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpCombinePromoteReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpCombinePromoteReq_descriptor_;
}

const TItemOpCombinePromoteReq& TItemOpCombinePromoteReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpCombinePromoteReq* TItemOpCombinePromoteReq::default_instance_ = NULL;

TItemOpCombinePromoteReq* TItemOpCombinePromoteReq::New() const {
  return new TItemOpCombinePromoteReq;
}

void TItemOpCombinePromoteReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpCombinePromoteReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemtplid_, hid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpCombinePromoteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpCombinePromoteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemTplId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemtplid_)));
          set_has_itemtplid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemNum;
        break;
      }

      // optional uint32 ItemNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemnum_)));
          set_has_itemnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Hid;
        break;
      }

      // optional uint32 Hid = 3;
      case 3: {
        if (tag == 24) {
         parse_Hid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpCombinePromoteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpCombinePromoteReq)
  return false;
#undef DO_
}

void TItemOpCombinePromoteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpCombinePromoteReq)
  // optional uint32 ItemTplId = 1;
  if (has_itemtplid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemtplid(), output);
  }

  // optional uint32 ItemNum = 2;
  if (has_itemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itemnum(), output);
  }

  // optional uint32 Hid = 3;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpCombinePromoteReq)
}

::google::protobuf::uint8* TItemOpCombinePromoteReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpCombinePromoteReq)
  // optional uint32 ItemTplId = 1;
  if (has_itemtplid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemtplid(), target);
  }

  // optional uint32 ItemNum = 2;
  if (has_itemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itemnum(), target);
  }

  // optional uint32 Hid = 3;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpCombinePromoteReq)
  return target;
}

int TItemOpCombinePromoteReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemTplId = 1;
    if (has_itemtplid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemtplid());
    }

    // optional uint32 ItemNum = 2;
    if (has_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemnum());
    }

    // optional uint32 Hid = 3;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpCombinePromoteReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpCombinePromoteReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpCombinePromoteReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpCombinePromoteReq::MergeFrom(const TItemOpCombinePromoteReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemtplid()) {
      set_itemtplid(from.itemtplid());
    }
    if (from.has_itemnum()) {
      set_itemnum(from.itemnum());
    }
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpCombinePromoteReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpCombinePromoteReq::CopyFrom(const TItemOpCombinePromoteReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpCombinePromoteReq::IsInitialized() const {

  return true;
}

void TItemOpCombinePromoteReq::Swap(TItemOpCombinePromoteReq* other) {
  if (other != this) {
    std::swap(itemtplid_, other->itemtplid_);
    std::swap(itemnum_, other->itemnum_);
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpCombinePromoteReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpCombinePromoteReq_descriptor_;
  metadata.reflection = TItemOpCombinePromoteReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpEnhanceArmReq::kItemIdFieldNumber;
const int TItemOpEnhanceArmReq::kEnhanceNumFieldNumber;
#endif  // !_MSC_VER

TItemOpEnhanceArmReq::TItemOpEnhanceArmReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpEnhanceArmReq)
}

void TItemOpEnhanceArmReq::InitAsDefaultInstance() {
}

TItemOpEnhanceArmReq::TItemOpEnhanceArmReq(const TItemOpEnhanceArmReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpEnhanceArmReq)
}

void TItemOpEnhanceArmReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  enhancenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpEnhanceArmReq::~TItemOpEnhanceArmReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpEnhanceArmReq)
  SharedDtor();
}

void TItemOpEnhanceArmReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpEnhanceArmReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpEnhanceArmReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpEnhanceArmReq_descriptor_;
}

const TItemOpEnhanceArmReq& TItemOpEnhanceArmReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpEnhanceArmReq* TItemOpEnhanceArmReq::default_instance_ = NULL;

TItemOpEnhanceArmReq* TItemOpEnhanceArmReq::New() const {
  return new TItemOpEnhanceArmReq;
}

void TItemOpEnhanceArmReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpEnhanceArmReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, enhancenum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpEnhanceArmReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpEnhanceArmReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_EnhanceNum;
        break;
      }

      // optional uint32 EnhanceNum = 2;
      case 2: {
        if (tag == 16) {
         parse_EnhanceNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enhancenum_)));
          set_has_enhancenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpEnhanceArmReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpEnhanceArmReq)
  return false;
#undef DO_
}

void TItemOpEnhanceArmReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpEnhanceArmReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 EnhanceNum = 2;
  if (has_enhancenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->enhancenum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpEnhanceArmReq)
}

::google::protobuf::uint8* TItemOpEnhanceArmReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpEnhanceArmReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 EnhanceNum = 2;
  if (has_enhancenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->enhancenum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpEnhanceArmReq)
  return target;
}

int TItemOpEnhanceArmReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 EnhanceNum = 2;
    if (has_enhancenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->enhancenum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpEnhanceArmReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpEnhanceArmReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpEnhanceArmReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpEnhanceArmReq::MergeFrom(const TItemOpEnhanceArmReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_enhancenum()) {
      set_enhancenum(from.enhancenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpEnhanceArmReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpEnhanceArmReq::CopyFrom(const TItemOpEnhanceArmReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpEnhanceArmReq::IsInitialized() const {

  return true;
}

void TItemOpEnhanceArmReq::Swap(TItemOpEnhanceArmReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(enhancenum_, other->enhancenum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpEnhanceArmReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpEnhanceArmReq_descriptor_;
  metadata.reflection = TItemOpEnhanceArmReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpAutoEnhanceArmReq::kHidFieldNumber;
#endif  // !_MSC_VER

TItemOpAutoEnhanceArmReq::TItemOpAutoEnhanceArmReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpAutoEnhanceArmReq)
}

void TItemOpAutoEnhanceArmReq::InitAsDefaultInstance() {
}

TItemOpAutoEnhanceArmReq::TItemOpAutoEnhanceArmReq(const TItemOpAutoEnhanceArmReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpAutoEnhanceArmReq)
}

void TItemOpAutoEnhanceArmReq::SharedCtor() {
  _cached_size_ = 0;
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpAutoEnhanceArmReq::~TItemOpAutoEnhanceArmReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpAutoEnhanceArmReq)
  SharedDtor();
}

void TItemOpAutoEnhanceArmReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpAutoEnhanceArmReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpAutoEnhanceArmReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpAutoEnhanceArmReq_descriptor_;
}

const TItemOpAutoEnhanceArmReq& TItemOpAutoEnhanceArmReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpAutoEnhanceArmReq* TItemOpAutoEnhanceArmReq::default_instance_ = NULL;

TItemOpAutoEnhanceArmReq* TItemOpAutoEnhanceArmReq::New() const {
  return new TItemOpAutoEnhanceArmReq;
}

void TItemOpAutoEnhanceArmReq::Clear() {
  hid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpAutoEnhanceArmReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpAutoEnhanceArmReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Hid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hid_)));
          set_has_hid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpAutoEnhanceArmReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpAutoEnhanceArmReq)
  return false;
#undef DO_
}

void TItemOpAutoEnhanceArmReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpAutoEnhanceArmReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpAutoEnhanceArmReq)
}

::google::protobuf::uint8* TItemOpAutoEnhanceArmReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpAutoEnhanceArmReq)
  // optional uint32 Hid = 1;
  if (has_hid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpAutoEnhanceArmReq)
  return target;
}

int TItemOpAutoEnhanceArmReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Hid = 1;
    if (has_hid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpAutoEnhanceArmReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpAutoEnhanceArmReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpAutoEnhanceArmReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpAutoEnhanceArmReq::MergeFrom(const TItemOpAutoEnhanceArmReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hid()) {
      set_hid(from.hid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpAutoEnhanceArmReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpAutoEnhanceArmReq::CopyFrom(const TItemOpAutoEnhanceArmReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpAutoEnhanceArmReq::IsInitialized() const {

  return true;
}

void TItemOpAutoEnhanceArmReq::Swap(TItemOpAutoEnhanceArmReq* other) {
  if (other != this) {
    std::swap(hid_, other->hid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpAutoEnhanceArmReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpAutoEnhanceArmReq_descriptor_;
  metadata.reflection = TItemOpAutoEnhanceArmReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpRefineArmReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpRefineArmReq::TItemOpRefineArmReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpRefineArmReq)
}

void TItemOpRefineArmReq::InitAsDefaultInstance() {
}

TItemOpRefineArmReq::TItemOpRefineArmReq(const TItemOpRefineArmReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpRefineArmReq)
}

void TItemOpRefineArmReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpRefineArmReq::~TItemOpRefineArmReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpRefineArmReq)
  SharedDtor();
}

void TItemOpRefineArmReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpRefineArmReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpRefineArmReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpRefineArmReq_descriptor_;
}

const TItemOpRefineArmReq& TItemOpRefineArmReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpRefineArmReq* TItemOpRefineArmReq::default_instance_ = NULL;

TItemOpRefineArmReq* TItemOpRefineArmReq::New() const {
  return new TItemOpRefineArmReq;
}

void TItemOpRefineArmReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpRefineArmReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpRefineArmReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpRefineArmReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpRefineArmReq)
  return false;
#undef DO_
}

void TItemOpRefineArmReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpRefineArmReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpRefineArmReq)
}

::google::protobuf::uint8* TItemOpRefineArmReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpRefineArmReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpRefineArmReq)
  return target;
}

int TItemOpRefineArmReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpRefineArmReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpRefineArmReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpRefineArmReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpRefineArmReq::MergeFrom(const TItemOpRefineArmReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpRefineArmReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpRefineArmReq::CopyFrom(const TItemOpRefineArmReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpRefineArmReq::IsInitialized() const {

  return true;
}

void TItemOpRefineArmReq::Swap(TItemOpRefineArmReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpRefineArmReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpRefineArmReq_descriptor_;
  metadata.reflection = TItemOpRefineArmReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpEnhanceAccessoryReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpEnhanceAccessoryReq::TItemOpEnhanceAccessoryReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpEnhanceAccessoryReq)
}

void TItemOpEnhanceAccessoryReq::InitAsDefaultInstance() {
}

TItemOpEnhanceAccessoryReq::TItemOpEnhanceAccessoryReq(const TItemOpEnhanceAccessoryReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpEnhanceAccessoryReq)
}

void TItemOpEnhanceAccessoryReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpEnhanceAccessoryReq::~TItemOpEnhanceAccessoryReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpEnhanceAccessoryReq)
  SharedDtor();
}

void TItemOpEnhanceAccessoryReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpEnhanceAccessoryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpEnhanceAccessoryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpEnhanceAccessoryReq_descriptor_;
}

const TItemOpEnhanceAccessoryReq& TItemOpEnhanceAccessoryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpEnhanceAccessoryReq* TItemOpEnhanceAccessoryReq::default_instance_ = NULL;

TItemOpEnhanceAccessoryReq* TItemOpEnhanceAccessoryReq::New() const {
  return new TItemOpEnhanceAccessoryReq;
}

void TItemOpEnhanceAccessoryReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpEnhanceAccessoryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpEnhanceAccessoryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpEnhanceAccessoryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpEnhanceAccessoryReq)
  return false;
#undef DO_
}

void TItemOpEnhanceAccessoryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpEnhanceAccessoryReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpEnhanceAccessoryReq)
}

::google::protobuf::uint8* TItemOpEnhanceAccessoryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpEnhanceAccessoryReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpEnhanceAccessoryReq)
  return target;
}

int TItemOpEnhanceAccessoryReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpEnhanceAccessoryReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpEnhanceAccessoryReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpEnhanceAccessoryReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpEnhanceAccessoryReq::MergeFrom(const TItemOpEnhanceAccessoryReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpEnhanceAccessoryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpEnhanceAccessoryReq::CopyFrom(const TItemOpEnhanceAccessoryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpEnhanceAccessoryReq::IsInitialized() const {

  return true;
}

void TItemOpEnhanceAccessoryReq::Swap(TItemOpEnhanceAccessoryReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpEnhanceAccessoryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpEnhanceAccessoryReq_descriptor_;
  metadata.reflection = TItemOpEnhanceAccessoryReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpEnhanceAccessoryRsp::kCritRatioFieldNumber;
#endif  // !_MSC_VER

TItemOpEnhanceAccessoryRsp::TItemOpEnhanceAccessoryRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpEnhanceAccessoryRsp)
}

void TItemOpEnhanceAccessoryRsp::InitAsDefaultInstance() {
}

TItemOpEnhanceAccessoryRsp::TItemOpEnhanceAccessoryRsp(const TItemOpEnhanceAccessoryRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpEnhanceAccessoryRsp)
}

void TItemOpEnhanceAccessoryRsp::SharedCtor() {
  _cached_size_ = 0;
  critratio_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpEnhanceAccessoryRsp::~TItemOpEnhanceAccessoryRsp() {
  // @@protoc_insertion_point(destructor:pb.TItemOpEnhanceAccessoryRsp)
  SharedDtor();
}

void TItemOpEnhanceAccessoryRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpEnhanceAccessoryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpEnhanceAccessoryRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpEnhanceAccessoryRsp_descriptor_;
}

const TItemOpEnhanceAccessoryRsp& TItemOpEnhanceAccessoryRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpEnhanceAccessoryRsp* TItemOpEnhanceAccessoryRsp::default_instance_ = NULL;

TItemOpEnhanceAccessoryRsp* TItemOpEnhanceAccessoryRsp::New() const {
  return new TItemOpEnhanceAccessoryRsp;
}

void TItemOpEnhanceAccessoryRsp::Clear() {
  critratio_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpEnhanceAccessoryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpEnhanceAccessoryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CritRatio = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &critratio_)));
          set_has_critratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpEnhanceAccessoryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpEnhanceAccessoryRsp)
  return false;
#undef DO_
}

void TItemOpEnhanceAccessoryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpEnhanceAccessoryRsp)
  // optional uint32 CritRatio = 1;
  if (has_critratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->critratio(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpEnhanceAccessoryRsp)
}

::google::protobuf::uint8* TItemOpEnhanceAccessoryRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpEnhanceAccessoryRsp)
  // optional uint32 CritRatio = 1;
  if (has_critratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->critratio(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpEnhanceAccessoryRsp)
  return target;
}

int TItemOpEnhanceAccessoryRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 CritRatio = 1;
    if (has_critratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->critratio());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpEnhanceAccessoryRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpEnhanceAccessoryRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpEnhanceAccessoryRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpEnhanceAccessoryRsp::MergeFrom(const TItemOpEnhanceAccessoryRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_critratio()) {
      set_critratio(from.critratio());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpEnhanceAccessoryRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpEnhanceAccessoryRsp::CopyFrom(const TItemOpEnhanceAccessoryRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpEnhanceAccessoryRsp::IsInitialized() const {

  return true;
}

void TItemOpEnhanceAccessoryRsp::Swap(TItemOpEnhanceAccessoryRsp* other) {
  if (other != this) {
    std::swap(critratio_, other->critratio_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpEnhanceAccessoryRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpEnhanceAccessoryRsp_descriptor_;
  metadata.reflection = TItemOpEnhanceAccessoryRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpEnhanceAccessoryLvUpReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpEnhanceAccessoryLvUpReq::TItemOpEnhanceAccessoryLvUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpEnhanceAccessoryLvUpReq)
}

void TItemOpEnhanceAccessoryLvUpReq::InitAsDefaultInstance() {
}

TItemOpEnhanceAccessoryLvUpReq::TItemOpEnhanceAccessoryLvUpReq(const TItemOpEnhanceAccessoryLvUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpEnhanceAccessoryLvUpReq)
}

void TItemOpEnhanceAccessoryLvUpReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpEnhanceAccessoryLvUpReq::~TItemOpEnhanceAccessoryLvUpReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpEnhanceAccessoryLvUpReq)
  SharedDtor();
}

void TItemOpEnhanceAccessoryLvUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpEnhanceAccessoryLvUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpEnhanceAccessoryLvUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpEnhanceAccessoryLvUpReq_descriptor_;
}

const TItemOpEnhanceAccessoryLvUpReq& TItemOpEnhanceAccessoryLvUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpEnhanceAccessoryLvUpReq* TItemOpEnhanceAccessoryLvUpReq::default_instance_ = NULL;

TItemOpEnhanceAccessoryLvUpReq* TItemOpEnhanceAccessoryLvUpReq::New() const {
  return new TItemOpEnhanceAccessoryLvUpReq;
}

void TItemOpEnhanceAccessoryLvUpReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpEnhanceAccessoryLvUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpEnhanceAccessoryLvUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpEnhanceAccessoryLvUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpEnhanceAccessoryLvUpReq)
  return false;
#undef DO_
}

void TItemOpEnhanceAccessoryLvUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpEnhanceAccessoryLvUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpEnhanceAccessoryLvUpReq)
}

::google::protobuf::uint8* TItemOpEnhanceAccessoryLvUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpEnhanceAccessoryLvUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpEnhanceAccessoryLvUpReq)
  return target;
}

int TItemOpEnhanceAccessoryLvUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpEnhanceAccessoryLvUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpEnhanceAccessoryLvUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpEnhanceAccessoryLvUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpEnhanceAccessoryLvUpReq::MergeFrom(const TItemOpEnhanceAccessoryLvUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpEnhanceAccessoryLvUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpEnhanceAccessoryLvUpReq::CopyFrom(const TItemOpEnhanceAccessoryLvUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpEnhanceAccessoryLvUpReq::IsInitialized() const {

  return true;
}

void TItemOpEnhanceAccessoryLvUpReq::Swap(TItemOpEnhanceAccessoryLvUpReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpEnhanceAccessoryLvUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpEnhanceAccessoryLvUpReq_descriptor_;
  metadata.reflection = TItemOpEnhanceAccessoryLvUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpEnhanceAccessoryLvUpRsp::kCritRatioFieldNumber;
#endif  // !_MSC_VER

TItemOpEnhanceAccessoryLvUpRsp::TItemOpEnhanceAccessoryLvUpRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpEnhanceAccessoryLvUpRsp)
}

void TItemOpEnhanceAccessoryLvUpRsp::InitAsDefaultInstance() {
}

TItemOpEnhanceAccessoryLvUpRsp::TItemOpEnhanceAccessoryLvUpRsp(const TItemOpEnhanceAccessoryLvUpRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpEnhanceAccessoryLvUpRsp)
}

void TItemOpEnhanceAccessoryLvUpRsp::SharedCtor() {
  _cached_size_ = 0;
  critratio_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpEnhanceAccessoryLvUpRsp::~TItemOpEnhanceAccessoryLvUpRsp() {
  // @@protoc_insertion_point(destructor:pb.TItemOpEnhanceAccessoryLvUpRsp)
  SharedDtor();
}

void TItemOpEnhanceAccessoryLvUpRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpEnhanceAccessoryLvUpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpEnhanceAccessoryLvUpRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpEnhanceAccessoryLvUpRsp_descriptor_;
}

const TItemOpEnhanceAccessoryLvUpRsp& TItemOpEnhanceAccessoryLvUpRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpEnhanceAccessoryLvUpRsp* TItemOpEnhanceAccessoryLvUpRsp::default_instance_ = NULL;

TItemOpEnhanceAccessoryLvUpRsp* TItemOpEnhanceAccessoryLvUpRsp::New() const {
  return new TItemOpEnhanceAccessoryLvUpRsp;
}

void TItemOpEnhanceAccessoryLvUpRsp::Clear() {
  critratio_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpEnhanceAccessoryLvUpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpEnhanceAccessoryLvUpRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CritRatio = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &critratio_)));
          set_has_critratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpEnhanceAccessoryLvUpRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpEnhanceAccessoryLvUpRsp)
  return false;
#undef DO_
}

void TItemOpEnhanceAccessoryLvUpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpEnhanceAccessoryLvUpRsp)
  // optional uint32 CritRatio = 1;
  if (has_critratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->critratio(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpEnhanceAccessoryLvUpRsp)
}

::google::protobuf::uint8* TItemOpEnhanceAccessoryLvUpRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpEnhanceAccessoryLvUpRsp)
  // optional uint32 CritRatio = 1;
  if (has_critratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->critratio(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpEnhanceAccessoryLvUpRsp)
  return target;
}

int TItemOpEnhanceAccessoryLvUpRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 CritRatio = 1;
    if (has_critratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->critratio());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpEnhanceAccessoryLvUpRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpEnhanceAccessoryLvUpRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpEnhanceAccessoryLvUpRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpEnhanceAccessoryLvUpRsp::MergeFrom(const TItemOpEnhanceAccessoryLvUpRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_critratio()) {
      set_critratio(from.critratio());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpEnhanceAccessoryLvUpRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpEnhanceAccessoryLvUpRsp::CopyFrom(const TItemOpEnhanceAccessoryLvUpRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpEnhanceAccessoryLvUpRsp::IsInitialized() const {

  return true;
}

void TItemOpEnhanceAccessoryLvUpRsp::Swap(TItemOpEnhanceAccessoryLvUpRsp* other) {
  if (other != this) {
    std::swap(critratio_, other->critratio_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpEnhanceAccessoryLvUpRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpEnhanceAccessoryLvUpRsp_descriptor_;
  metadata.reflection = TItemOpEnhanceAccessoryLvUpRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpRefineAccessoryReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpRefineAccessoryReq::TItemOpRefineAccessoryReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpRefineAccessoryReq)
}

void TItemOpRefineAccessoryReq::InitAsDefaultInstance() {
}

TItemOpRefineAccessoryReq::TItemOpRefineAccessoryReq(const TItemOpRefineAccessoryReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpRefineAccessoryReq)
}

void TItemOpRefineAccessoryReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpRefineAccessoryReq::~TItemOpRefineAccessoryReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpRefineAccessoryReq)
  SharedDtor();
}

void TItemOpRefineAccessoryReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpRefineAccessoryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpRefineAccessoryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpRefineAccessoryReq_descriptor_;
}

const TItemOpRefineAccessoryReq& TItemOpRefineAccessoryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpRefineAccessoryReq* TItemOpRefineAccessoryReq::default_instance_ = NULL;

TItemOpRefineAccessoryReq* TItemOpRefineAccessoryReq::New() const {
  return new TItemOpRefineAccessoryReq;
}

void TItemOpRefineAccessoryReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpRefineAccessoryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpRefineAccessoryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpRefineAccessoryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpRefineAccessoryReq)
  return false;
#undef DO_
}

void TItemOpRefineAccessoryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpRefineAccessoryReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpRefineAccessoryReq)
}

::google::protobuf::uint8* TItemOpRefineAccessoryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpRefineAccessoryReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpRefineAccessoryReq)
  return target;
}

int TItemOpRefineAccessoryReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpRefineAccessoryReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpRefineAccessoryReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpRefineAccessoryReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpRefineAccessoryReq::MergeFrom(const TItemOpRefineAccessoryReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpRefineAccessoryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpRefineAccessoryReq::CopyFrom(const TItemOpRefineAccessoryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpRefineAccessoryReq::IsInitialized() const {

  return true;
}

void TItemOpRefineAccessoryReq::Swap(TItemOpRefineAccessoryReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpRefineAccessoryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpRefineAccessoryReq_descriptor_;
  metadata.reflection = TItemOpRefineAccessoryReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpAdvanceSoulReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpAdvanceSoulReq::TItemOpAdvanceSoulReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpAdvanceSoulReq)
}

void TItemOpAdvanceSoulReq::InitAsDefaultInstance() {
}

TItemOpAdvanceSoulReq::TItemOpAdvanceSoulReq(const TItemOpAdvanceSoulReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpAdvanceSoulReq)
}

void TItemOpAdvanceSoulReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpAdvanceSoulReq::~TItemOpAdvanceSoulReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpAdvanceSoulReq)
  SharedDtor();
}

void TItemOpAdvanceSoulReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpAdvanceSoulReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpAdvanceSoulReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpAdvanceSoulReq_descriptor_;
}

const TItemOpAdvanceSoulReq& TItemOpAdvanceSoulReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpAdvanceSoulReq* TItemOpAdvanceSoulReq::default_instance_ = NULL;

TItemOpAdvanceSoulReq* TItemOpAdvanceSoulReq::New() const {
  return new TItemOpAdvanceSoulReq;
}

void TItemOpAdvanceSoulReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpAdvanceSoulReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpAdvanceSoulReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpAdvanceSoulReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpAdvanceSoulReq)
  return false;
#undef DO_
}

void TItemOpAdvanceSoulReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpAdvanceSoulReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpAdvanceSoulReq)
}

::google::protobuf::uint8* TItemOpAdvanceSoulReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpAdvanceSoulReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpAdvanceSoulReq)
  return target;
}

int TItemOpAdvanceSoulReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpAdvanceSoulReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpAdvanceSoulReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpAdvanceSoulReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpAdvanceSoulReq::MergeFrom(const TItemOpAdvanceSoulReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpAdvanceSoulReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpAdvanceSoulReq::CopyFrom(const TItemOpAdvanceSoulReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpAdvanceSoulReq::IsInitialized() const {

  return true;
}

void TItemOpAdvanceSoulReq::Swap(TItemOpAdvanceSoulReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpAdvanceSoulReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpAdvanceSoulReq_descriptor_;
  metadata.reflection = TItemOpAdvanceSoulReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpAdvanceExclEquipReq::kItemIdFieldNumber;
const int TItemOpAdvanceExclEquipReq::kPosFieldNumber;
const int TItemOpAdvanceExclEquipReq::kNumFieldNumber;
#endif  // !_MSC_VER

TItemOpAdvanceExclEquipReq::TItemOpAdvanceExclEquipReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpAdvanceExclEquipReq)
}

void TItemOpAdvanceExclEquipReq::InitAsDefaultInstance() {
}

TItemOpAdvanceExclEquipReq::TItemOpAdvanceExclEquipReq(const TItemOpAdvanceExclEquipReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpAdvanceExclEquipReq)
}

void TItemOpAdvanceExclEquipReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  pos_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpAdvanceExclEquipReq::~TItemOpAdvanceExclEquipReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpAdvanceExclEquipReq)
  SharedDtor();
}

void TItemOpAdvanceExclEquipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpAdvanceExclEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpAdvanceExclEquipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpAdvanceExclEquipReq_descriptor_;
}

const TItemOpAdvanceExclEquipReq& TItemOpAdvanceExclEquipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpAdvanceExclEquipReq* TItemOpAdvanceExclEquipReq::default_instance_ = NULL;

TItemOpAdvanceExclEquipReq* TItemOpAdvanceExclEquipReq::New() const {
  return new TItemOpAdvanceExclEquipReq;
}

void TItemOpAdvanceExclEquipReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpAdvanceExclEquipReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpAdvanceExclEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpAdvanceExclEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Pos;
        break;
      }

      // optional uint32 Pos = 2;
      case 2: {
        if (tag == 16) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 3;
      case 3: {
        if (tag == 24) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpAdvanceExclEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpAdvanceExclEquipReq)
  return false;
#undef DO_
}

void TItemOpAdvanceExclEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpAdvanceExclEquipReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 Pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pos(), output);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpAdvanceExclEquipReq)
}

::google::protobuf::uint8* TItemOpAdvanceExclEquipReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpAdvanceExclEquipReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 Pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pos(), target);
  }

  // optional uint32 Num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpAdvanceExclEquipReq)
  return target;
}

int TItemOpAdvanceExclEquipReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 Pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 Num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpAdvanceExclEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpAdvanceExclEquipReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpAdvanceExclEquipReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpAdvanceExclEquipReq::MergeFrom(const TItemOpAdvanceExclEquipReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpAdvanceExclEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpAdvanceExclEquipReq::CopyFrom(const TItemOpAdvanceExclEquipReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpAdvanceExclEquipReq::IsInitialized() const {

  return true;
}

void TItemOpAdvanceExclEquipReq::Swap(TItemOpAdvanceExclEquipReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(pos_, other->pos_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpAdvanceExclEquipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpAdvanceExclEquipReq_descriptor_;
  metadata.reflection = TItemOpAdvanceExclEquipReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpAutoAdvanceExclEquipReq::kItemIdFieldNumber;
const int TItemOpAutoAdvanceExclEquipReq::kUpLvFieldNumber;
#endif  // !_MSC_VER

TItemOpAutoAdvanceExclEquipReq::TItemOpAutoAdvanceExclEquipReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpAutoAdvanceExclEquipReq)
}

void TItemOpAutoAdvanceExclEquipReq::InitAsDefaultInstance() {
}

TItemOpAutoAdvanceExclEquipReq::TItemOpAutoAdvanceExclEquipReq(const TItemOpAutoAdvanceExclEquipReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpAutoAdvanceExclEquipReq)
}

void TItemOpAutoAdvanceExclEquipReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  uplv_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpAutoAdvanceExclEquipReq::~TItemOpAutoAdvanceExclEquipReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpAutoAdvanceExclEquipReq)
  SharedDtor();
}

void TItemOpAutoAdvanceExclEquipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpAutoAdvanceExclEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpAutoAdvanceExclEquipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpAutoAdvanceExclEquipReq_descriptor_;
}

const TItemOpAutoAdvanceExclEquipReq& TItemOpAutoAdvanceExclEquipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpAutoAdvanceExclEquipReq* TItemOpAutoAdvanceExclEquipReq::default_instance_ = NULL;

TItemOpAutoAdvanceExclEquipReq* TItemOpAutoAdvanceExclEquipReq::New() const {
  return new TItemOpAutoAdvanceExclEquipReq;
}

void TItemOpAutoAdvanceExclEquipReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpAutoAdvanceExclEquipReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, uplv_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpAutoAdvanceExclEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpAutoAdvanceExclEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_UpLv;
        break;
      }

      // optional uint32 UpLv = 2;
      case 2: {
        if (tag == 16) {
         parse_UpLv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uplv_)));
          set_has_uplv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpAutoAdvanceExclEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpAutoAdvanceExclEquipReq)
  return false;
#undef DO_
}

void TItemOpAutoAdvanceExclEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpAutoAdvanceExclEquipReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 UpLv = 2;
  if (has_uplv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uplv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpAutoAdvanceExclEquipReq)
}

::google::protobuf::uint8* TItemOpAutoAdvanceExclEquipReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpAutoAdvanceExclEquipReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 UpLv = 2;
  if (has_uplv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uplv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpAutoAdvanceExclEquipReq)
  return target;
}

int TItemOpAutoAdvanceExclEquipReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 UpLv = 2;
    if (has_uplv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uplv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpAutoAdvanceExclEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpAutoAdvanceExclEquipReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpAutoAdvanceExclEquipReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpAutoAdvanceExclEquipReq::MergeFrom(const TItemOpAutoAdvanceExclEquipReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_uplv()) {
      set_uplv(from.uplv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpAutoAdvanceExclEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpAutoAdvanceExclEquipReq::CopyFrom(const TItemOpAutoAdvanceExclEquipReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpAutoAdvanceExclEquipReq::IsInitialized() const {

  return true;
}

void TItemOpAutoAdvanceExclEquipReq::Swap(TItemOpAutoAdvanceExclEquipReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(uplv_, other->uplv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpAutoAdvanceExclEquipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpAutoAdvanceExclEquipReq_descriptor_;
  metadata.reflection = TItemOpAutoAdvanceExclEquipReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpStarUpExclEquipReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpStarUpExclEquipReq::TItemOpStarUpExclEquipReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpStarUpExclEquipReq)
}

void TItemOpStarUpExclEquipReq::InitAsDefaultInstance() {
}

TItemOpStarUpExclEquipReq::TItemOpStarUpExclEquipReq(const TItemOpStarUpExclEquipReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpStarUpExclEquipReq)
}

void TItemOpStarUpExclEquipReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpStarUpExclEquipReq::~TItemOpStarUpExclEquipReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpStarUpExclEquipReq)
  SharedDtor();
}

void TItemOpStarUpExclEquipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpStarUpExclEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpStarUpExclEquipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpStarUpExclEquipReq_descriptor_;
}

const TItemOpStarUpExclEquipReq& TItemOpStarUpExclEquipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpStarUpExclEquipReq* TItemOpStarUpExclEquipReq::default_instance_ = NULL;

TItemOpStarUpExclEquipReq* TItemOpStarUpExclEquipReq::New() const {
  return new TItemOpStarUpExclEquipReq;
}

void TItemOpStarUpExclEquipReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpStarUpExclEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpStarUpExclEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpStarUpExclEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpStarUpExclEquipReq)
  return false;
#undef DO_
}

void TItemOpStarUpExclEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpStarUpExclEquipReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpStarUpExclEquipReq)
}

::google::protobuf::uint8* TItemOpStarUpExclEquipReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpStarUpExclEquipReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpStarUpExclEquipReq)
  return target;
}

int TItemOpStarUpExclEquipReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpStarUpExclEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpStarUpExclEquipReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpStarUpExclEquipReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpStarUpExclEquipReq::MergeFrom(const TItemOpStarUpExclEquipReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpStarUpExclEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpStarUpExclEquipReq::CopyFrom(const TItemOpStarUpExclEquipReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpStarUpExclEquipReq::IsInitialized() const {

  return true;
}

void TItemOpStarUpExclEquipReq::Swap(TItemOpStarUpExclEquipReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpStarUpExclEquipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpStarUpExclEquipReq_descriptor_;
  metadata.reflection = TItemOpStarUpExclEquipReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpGetRefineExclEquipResultReq::kItemIdFieldNumber;
const int TItemOpGetRefineExclEquipResultReq::kPosIdFieldNumber;
const int TItemOpGetRefineExclEquipResultReq::kReforgeNumFieldNumber;
#endif  // !_MSC_VER

TItemOpGetRefineExclEquipResultReq::TItemOpGetRefineExclEquipResultReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpGetRefineExclEquipResultReq)
}

void TItemOpGetRefineExclEquipResultReq::InitAsDefaultInstance() {
}

TItemOpGetRefineExclEquipResultReq::TItemOpGetRefineExclEquipResultReq(const TItemOpGetRefineExclEquipResultReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpGetRefineExclEquipResultReq)
}

void TItemOpGetRefineExclEquipResultReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  posid_ = 0u;
  reforgenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpGetRefineExclEquipResultReq::~TItemOpGetRefineExclEquipResultReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpGetRefineExclEquipResultReq)
  SharedDtor();
}

void TItemOpGetRefineExclEquipResultReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpGetRefineExclEquipResultReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpGetRefineExclEquipResultReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpGetRefineExclEquipResultReq_descriptor_;
}

const TItemOpGetRefineExclEquipResultReq& TItemOpGetRefineExclEquipResultReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpGetRefineExclEquipResultReq* TItemOpGetRefineExclEquipResultReq::default_instance_ = NULL;

TItemOpGetRefineExclEquipResultReq* TItemOpGetRefineExclEquipResultReq::New() const {
  return new TItemOpGetRefineExclEquipResultReq;
}

void TItemOpGetRefineExclEquipResultReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpGetRefineExclEquipResultReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, reforgenum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpGetRefineExclEquipResultReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpGetRefineExclEquipResultReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PosId;
        break;
      }

      // optional uint32 PosId = 2;
      case 2: {
        if (tag == 16) {
         parse_PosId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posid_)));
          set_has_posid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ReforgeNum;
        break;
      }

      // optional uint32 ReforgeNum = 3;
      case 3: {
        if (tag == 24) {
         parse_ReforgeNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reforgenum_)));
          set_has_reforgenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpGetRefineExclEquipResultReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpGetRefineExclEquipResultReq)
  return false;
#undef DO_
}

void TItemOpGetRefineExclEquipResultReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpGetRefineExclEquipResultReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->posid(), output);
  }

  // optional uint32 ReforgeNum = 3;
  if (has_reforgenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->reforgenum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpGetRefineExclEquipResultReq)
}

::google::protobuf::uint8* TItemOpGetRefineExclEquipResultReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpGetRefineExclEquipResultReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->posid(), target);
  }

  // optional uint32 ReforgeNum = 3;
  if (has_reforgenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->reforgenum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpGetRefineExclEquipResultReq)
  return target;
}

int TItemOpGetRefineExclEquipResultReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 PosId = 2;
    if (has_posid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->posid());
    }

    // optional uint32 ReforgeNum = 3;
    if (has_reforgenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reforgenum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpGetRefineExclEquipResultReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpGetRefineExclEquipResultReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpGetRefineExclEquipResultReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpGetRefineExclEquipResultReq::MergeFrom(const TItemOpGetRefineExclEquipResultReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_posid()) {
      set_posid(from.posid());
    }
    if (from.has_reforgenum()) {
      set_reforgenum(from.reforgenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpGetRefineExclEquipResultReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpGetRefineExclEquipResultReq::CopyFrom(const TItemOpGetRefineExclEquipResultReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpGetRefineExclEquipResultReq::IsInitialized() const {

  return true;
}

void TItemOpGetRefineExclEquipResultReq::Swap(TItemOpGetRefineExclEquipResultReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(posid_, other->posid_);
    std::swap(reforgenum_, other->reforgenum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpGetRefineExclEquipResultReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpGetRefineExclEquipResultReq_descriptor_;
  metadata.reflection = TItemOpGetRefineExclEquipResultReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpGetRefineExclEquipResultRsp::kReforgeAttrIdFieldNumber;
const int TItemOpGetRefineExclEquipResultRsp::kReforgeAttrValueFieldNumber;
#endif  // !_MSC_VER

TItemOpGetRefineExclEquipResultRsp::TItemOpGetRefineExclEquipResultRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpGetRefineExclEquipResultRsp)
}

void TItemOpGetRefineExclEquipResultRsp::InitAsDefaultInstance() {
}

TItemOpGetRefineExclEquipResultRsp::TItemOpGetRefineExclEquipResultRsp(const TItemOpGetRefineExclEquipResultRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpGetRefineExclEquipResultRsp)
}

void TItemOpGetRefineExclEquipResultRsp::SharedCtor() {
  _cached_size_ = 0;
  reforgeattrid_ = 0u;
  reforgeattrvalue_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpGetRefineExclEquipResultRsp::~TItemOpGetRefineExclEquipResultRsp() {
  // @@protoc_insertion_point(destructor:pb.TItemOpGetRefineExclEquipResultRsp)
  SharedDtor();
}

void TItemOpGetRefineExclEquipResultRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpGetRefineExclEquipResultRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpGetRefineExclEquipResultRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpGetRefineExclEquipResultRsp_descriptor_;
}

const TItemOpGetRefineExclEquipResultRsp& TItemOpGetRefineExclEquipResultRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpGetRefineExclEquipResultRsp* TItemOpGetRefineExclEquipResultRsp::default_instance_ = NULL;

TItemOpGetRefineExclEquipResultRsp* TItemOpGetRefineExclEquipResultRsp::New() const {
  return new TItemOpGetRefineExclEquipResultRsp;
}

void TItemOpGetRefineExclEquipResultRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpGetRefineExclEquipResultRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(reforgeattrid_, reforgeattrvalue_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpGetRefineExclEquipResultRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpGetRefineExclEquipResultRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ReforgeAttrId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reforgeattrid_)));
          set_has_reforgeattrid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ReforgeAttrValue;
        break;
      }

      // optional uint32 ReforgeAttrValue = 2;
      case 2: {
        if (tag == 16) {
         parse_ReforgeAttrValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reforgeattrvalue_)));
          set_has_reforgeattrvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpGetRefineExclEquipResultRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpGetRefineExclEquipResultRsp)
  return false;
#undef DO_
}

void TItemOpGetRefineExclEquipResultRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpGetRefineExclEquipResultRsp)
  // optional uint32 ReforgeAttrId = 1;
  if (has_reforgeattrid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->reforgeattrid(), output);
  }

  // optional uint32 ReforgeAttrValue = 2;
  if (has_reforgeattrvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reforgeattrvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpGetRefineExclEquipResultRsp)
}

::google::protobuf::uint8* TItemOpGetRefineExclEquipResultRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpGetRefineExclEquipResultRsp)
  // optional uint32 ReforgeAttrId = 1;
  if (has_reforgeattrid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->reforgeattrid(), target);
  }

  // optional uint32 ReforgeAttrValue = 2;
  if (has_reforgeattrvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reforgeattrvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpGetRefineExclEquipResultRsp)
  return target;
}

int TItemOpGetRefineExclEquipResultRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ReforgeAttrId = 1;
    if (has_reforgeattrid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reforgeattrid());
    }

    // optional uint32 ReforgeAttrValue = 2;
    if (has_reforgeattrvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reforgeattrvalue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpGetRefineExclEquipResultRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpGetRefineExclEquipResultRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpGetRefineExclEquipResultRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpGetRefineExclEquipResultRsp::MergeFrom(const TItemOpGetRefineExclEquipResultRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reforgeattrid()) {
      set_reforgeattrid(from.reforgeattrid());
    }
    if (from.has_reforgeattrvalue()) {
      set_reforgeattrvalue(from.reforgeattrvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpGetRefineExclEquipResultRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpGetRefineExclEquipResultRsp::CopyFrom(const TItemOpGetRefineExclEquipResultRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpGetRefineExclEquipResultRsp::IsInitialized() const {

  return true;
}

void TItemOpGetRefineExclEquipResultRsp::Swap(TItemOpGetRefineExclEquipResultRsp* other) {
  if (other != this) {
    std::swap(reforgeattrid_, other->reforgeattrid_);
    std::swap(reforgeattrvalue_, other->reforgeattrvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpGetRefineExclEquipResultRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpGetRefineExclEquipResultRsp_descriptor_;
  metadata.reflection = TItemOpGetRefineExclEquipResultRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpReplaceRefineExclEquipAttrReq::kItemIdFieldNumber;
const int TItemOpReplaceRefineExclEquipAttrReq::kPosIdFieldNumber;
const int TItemOpReplaceRefineExclEquipAttrReq::kOperateFieldNumber;
#endif  // !_MSC_VER

TItemOpReplaceRefineExclEquipAttrReq::TItemOpReplaceRefineExclEquipAttrReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpReplaceRefineExclEquipAttrReq)
}

void TItemOpReplaceRefineExclEquipAttrReq::InitAsDefaultInstance() {
}

TItemOpReplaceRefineExclEquipAttrReq::TItemOpReplaceRefineExclEquipAttrReq(const TItemOpReplaceRefineExclEquipAttrReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpReplaceRefineExclEquipAttrReq)
}

void TItemOpReplaceRefineExclEquipAttrReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  posid_ = 0u;
  operate_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpReplaceRefineExclEquipAttrReq::~TItemOpReplaceRefineExclEquipAttrReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpReplaceRefineExclEquipAttrReq)
  SharedDtor();
}

void TItemOpReplaceRefineExclEquipAttrReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpReplaceRefineExclEquipAttrReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpReplaceRefineExclEquipAttrReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpReplaceRefineExclEquipAttrReq_descriptor_;
}

const TItemOpReplaceRefineExclEquipAttrReq& TItemOpReplaceRefineExclEquipAttrReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpReplaceRefineExclEquipAttrReq* TItemOpReplaceRefineExclEquipAttrReq::default_instance_ = NULL;

TItemOpReplaceRefineExclEquipAttrReq* TItemOpReplaceRefineExclEquipAttrReq::New() const {
  return new TItemOpReplaceRefineExclEquipAttrReq;
}

void TItemOpReplaceRefineExclEquipAttrReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpReplaceRefineExclEquipAttrReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, operate_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpReplaceRefineExclEquipAttrReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpReplaceRefineExclEquipAttrReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PosId;
        break;
      }

      // optional uint32 PosId = 2;
      case 2: {
        if (tag == 16) {
         parse_PosId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posid_)));
          set_has_posid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Operate;
        break;
      }

      // optional uint32 Operate = 3;
      case 3: {
        if (tag == 24) {
         parse_Operate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operate_)));
          set_has_operate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpReplaceRefineExclEquipAttrReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpReplaceRefineExclEquipAttrReq)
  return false;
#undef DO_
}

void TItemOpReplaceRefineExclEquipAttrReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpReplaceRefineExclEquipAttrReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->posid(), output);
  }

  // optional uint32 Operate = 3;
  if (has_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->operate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpReplaceRefineExclEquipAttrReq)
}

::google::protobuf::uint8* TItemOpReplaceRefineExclEquipAttrReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpReplaceRefineExclEquipAttrReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->posid(), target);
  }

  // optional uint32 Operate = 3;
  if (has_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->operate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpReplaceRefineExclEquipAttrReq)
  return target;
}

int TItemOpReplaceRefineExclEquipAttrReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 PosId = 2;
    if (has_posid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->posid());
    }

    // optional uint32 Operate = 3;
    if (has_operate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->operate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpReplaceRefineExclEquipAttrReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpReplaceRefineExclEquipAttrReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpReplaceRefineExclEquipAttrReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpReplaceRefineExclEquipAttrReq::MergeFrom(const TItemOpReplaceRefineExclEquipAttrReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_posid()) {
      set_posid(from.posid());
    }
    if (from.has_operate()) {
      set_operate(from.operate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpReplaceRefineExclEquipAttrReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpReplaceRefineExclEquipAttrReq::CopyFrom(const TItemOpReplaceRefineExclEquipAttrReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpReplaceRefineExclEquipAttrReq::IsInitialized() const {

  return true;
}

void TItemOpReplaceRefineExclEquipAttrReq::Swap(TItemOpReplaceRefineExclEquipAttrReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(posid_, other->posid_);
    std::swap(operate_, other->operate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpReplaceRefineExclEquipAttrReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpReplaceRefineExclEquipAttrReq_descriptor_;
  metadata.reflection = TItemOpReplaceRefineExclEquipAttrReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpRefineExclEquipUnlockSlotReq::kItemIdFieldNumber;
const int TItemOpRefineExclEquipUnlockSlotReq::kPosIdFieldNumber;
#endif  // !_MSC_VER

TItemOpRefineExclEquipUnlockSlotReq::TItemOpRefineExclEquipUnlockSlotReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpRefineExclEquipUnlockSlotReq)
}

void TItemOpRefineExclEquipUnlockSlotReq::InitAsDefaultInstance() {
}

TItemOpRefineExclEquipUnlockSlotReq::TItemOpRefineExclEquipUnlockSlotReq(const TItemOpRefineExclEquipUnlockSlotReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpRefineExclEquipUnlockSlotReq)
}

void TItemOpRefineExclEquipUnlockSlotReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  posid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpRefineExclEquipUnlockSlotReq::~TItemOpRefineExclEquipUnlockSlotReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpRefineExclEquipUnlockSlotReq)
  SharedDtor();
}

void TItemOpRefineExclEquipUnlockSlotReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpRefineExclEquipUnlockSlotReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpRefineExclEquipUnlockSlotReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpRefineExclEquipUnlockSlotReq_descriptor_;
}

const TItemOpRefineExclEquipUnlockSlotReq& TItemOpRefineExclEquipUnlockSlotReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpRefineExclEquipUnlockSlotReq* TItemOpRefineExclEquipUnlockSlotReq::default_instance_ = NULL;

TItemOpRefineExclEquipUnlockSlotReq* TItemOpRefineExclEquipUnlockSlotReq::New() const {
  return new TItemOpRefineExclEquipUnlockSlotReq;
}

void TItemOpRefineExclEquipUnlockSlotReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpRefineExclEquipUnlockSlotReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, posid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpRefineExclEquipUnlockSlotReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpRefineExclEquipUnlockSlotReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PosId;
        break;
      }

      // optional uint32 PosId = 2;
      case 2: {
        if (tag == 16) {
         parse_PosId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posid_)));
          set_has_posid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpRefineExclEquipUnlockSlotReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpRefineExclEquipUnlockSlotReq)
  return false;
#undef DO_
}

void TItemOpRefineExclEquipUnlockSlotReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpRefineExclEquipUnlockSlotReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->posid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpRefineExclEquipUnlockSlotReq)
}

::google::protobuf::uint8* TItemOpRefineExclEquipUnlockSlotReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpRefineExclEquipUnlockSlotReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->posid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpRefineExclEquipUnlockSlotReq)
  return target;
}

int TItemOpRefineExclEquipUnlockSlotReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 PosId = 2;
    if (has_posid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->posid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpRefineExclEquipUnlockSlotReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpRefineExclEquipUnlockSlotReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpRefineExclEquipUnlockSlotReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpRefineExclEquipUnlockSlotReq::MergeFrom(const TItemOpRefineExclEquipUnlockSlotReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_posid()) {
      set_posid(from.posid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpRefineExclEquipUnlockSlotReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpRefineExclEquipUnlockSlotReq::CopyFrom(const TItemOpRefineExclEquipUnlockSlotReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpRefineExclEquipUnlockSlotReq::IsInitialized() const {

  return true;
}

void TItemOpRefineExclEquipUnlockSlotReq::Swap(TItemOpRefineExclEquipUnlockSlotReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(posid_, other->posid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpRefineExclEquipUnlockSlotReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpRefineExclEquipUnlockSlotReq_descriptor_;
  metadata.reflection = TItemOpRefineExclEquipUnlockSlotReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpRefineExclEquipReplaceAndRefineReq::kItemIdFieldNumber;
const int TItemOpRefineExclEquipReplaceAndRefineReq::kPosIdFieldNumber;
const int TItemOpRefineExclEquipReplaceAndRefineReq::kRefineNumFieldNumber;
#endif  // !_MSC_VER

TItemOpRefineExclEquipReplaceAndRefineReq::TItemOpRefineExclEquipReplaceAndRefineReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpRefineExclEquipReplaceAndRefineReq)
}

void TItemOpRefineExclEquipReplaceAndRefineReq::InitAsDefaultInstance() {
}

TItemOpRefineExclEquipReplaceAndRefineReq::TItemOpRefineExclEquipReplaceAndRefineReq(const TItemOpRefineExclEquipReplaceAndRefineReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpRefineExclEquipReplaceAndRefineReq)
}

void TItemOpRefineExclEquipReplaceAndRefineReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  posid_ = 0u;
  refinenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpRefineExclEquipReplaceAndRefineReq::~TItemOpRefineExclEquipReplaceAndRefineReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpRefineExclEquipReplaceAndRefineReq)
  SharedDtor();
}

void TItemOpRefineExclEquipReplaceAndRefineReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpRefineExclEquipReplaceAndRefineReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpRefineExclEquipReplaceAndRefineReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpRefineExclEquipReplaceAndRefineReq_descriptor_;
}

const TItemOpRefineExclEquipReplaceAndRefineReq& TItemOpRefineExclEquipReplaceAndRefineReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpRefineExclEquipReplaceAndRefineReq* TItemOpRefineExclEquipReplaceAndRefineReq::default_instance_ = NULL;

TItemOpRefineExclEquipReplaceAndRefineReq* TItemOpRefineExclEquipReplaceAndRefineReq::New() const {
  return new TItemOpRefineExclEquipReplaceAndRefineReq;
}

void TItemOpRefineExclEquipReplaceAndRefineReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpRefineExclEquipReplaceAndRefineReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, refinenum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpRefineExclEquipReplaceAndRefineReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpRefineExclEquipReplaceAndRefineReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PosId;
        break;
      }

      // optional uint32 PosId = 2;
      case 2: {
        if (tag == 16) {
         parse_PosId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posid_)));
          set_has_posid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RefineNum;
        break;
      }

      // optional uint32 RefineNum = 3;
      case 3: {
        if (tag == 24) {
         parse_RefineNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refinenum_)));
          set_has_refinenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpRefineExclEquipReplaceAndRefineReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpRefineExclEquipReplaceAndRefineReq)
  return false;
#undef DO_
}

void TItemOpRefineExclEquipReplaceAndRefineReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpRefineExclEquipReplaceAndRefineReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->posid(), output);
  }

  // optional uint32 RefineNum = 3;
  if (has_refinenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->refinenum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpRefineExclEquipReplaceAndRefineReq)
}

::google::protobuf::uint8* TItemOpRefineExclEquipReplaceAndRefineReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpRefineExclEquipReplaceAndRefineReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 PosId = 2;
  if (has_posid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->posid(), target);
  }

  // optional uint32 RefineNum = 3;
  if (has_refinenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->refinenum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpRefineExclEquipReplaceAndRefineReq)
  return target;
}

int TItemOpRefineExclEquipReplaceAndRefineReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 PosId = 2;
    if (has_posid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->posid());
    }

    // optional uint32 RefineNum = 3;
    if (has_refinenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->refinenum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpRefineExclEquipReplaceAndRefineReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpRefineExclEquipReplaceAndRefineReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpRefineExclEquipReplaceAndRefineReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpRefineExclEquipReplaceAndRefineReq::MergeFrom(const TItemOpRefineExclEquipReplaceAndRefineReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_posid()) {
      set_posid(from.posid());
    }
    if (from.has_refinenum()) {
      set_refinenum(from.refinenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpRefineExclEquipReplaceAndRefineReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpRefineExclEquipReplaceAndRefineReq::CopyFrom(const TItemOpRefineExclEquipReplaceAndRefineReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpRefineExclEquipReplaceAndRefineReq::IsInitialized() const {

  return true;
}

void TItemOpRefineExclEquipReplaceAndRefineReq::Swap(TItemOpRefineExclEquipReplaceAndRefineReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(posid_, other->posid_);
    std::swap(refinenum_, other->refinenum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpRefineExclEquipReplaceAndRefineReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpRefineExclEquipReplaceAndRefineReq_descriptor_;
  metadata.reflection = TItemOpRefineExclEquipReplaceAndRefineReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpRefineExclEquipReplaceAndRefineRsp::kReforgeAttrIdFieldNumber;
const int TItemOpRefineExclEquipReplaceAndRefineRsp::kReforgeAttrValueFieldNumber;
#endif  // !_MSC_VER

TItemOpRefineExclEquipReplaceAndRefineRsp::TItemOpRefineExclEquipReplaceAndRefineRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpRefineExclEquipReplaceAndRefineRsp)
}

void TItemOpRefineExclEquipReplaceAndRefineRsp::InitAsDefaultInstance() {
}

TItemOpRefineExclEquipReplaceAndRefineRsp::TItemOpRefineExclEquipReplaceAndRefineRsp(const TItemOpRefineExclEquipReplaceAndRefineRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpRefineExclEquipReplaceAndRefineRsp)
}

void TItemOpRefineExclEquipReplaceAndRefineRsp::SharedCtor() {
  _cached_size_ = 0;
  reforgeattrid_ = 0u;
  reforgeattrvalue_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpRefineExclEquipReplaceAndRefineRsp::~TItemOpRefineExclEquipReplaceAndRefineRsp() {
  // @@protoc_insertion_point(destructor:pb.TItemOpRefineExclEquipReplaceAndRefineRsp)
  SharedDtor();
}

void TItemOpRefineExclEquipReplaceAndRefineRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpRefineExclEquipReplaceAndRefineRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpRefineExclEquipReplaceAndRefineRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpRefineExclEquipReplaceAndRefineRsp_descriptor_;
}

const TItemOpRefineExclEquipReplaceAndRefineRsp& TItemOpRefineExclEquipReplaceAndRefineRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpRefineExclEquipReplaceAndRefineRsp* TItemOpRefineExclEquipReplaceAndRefineRsp::default_instance_ = NULL;

TItemOpRefineExclEquipReplaceAndRefineRsp* TItemOpRefineExclEquipReplaceAndRefineRsp::New() const {
  return new TItemOpRefineExclEquipReplaceAndRefineRsp;
}

void TItemOpRefineExclEquipReplaceAndRefineRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpRefineExclEquipReplaceAndRefineRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(reforgeattrid_, reforgeattrvalue_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpRefineExclEquipReplaceAndRefineRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpRefineExclEquipReplaceAndRefineRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ReforgeAttrId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reforgeattrid_)));
          set_has_reforgeattrid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ReforgeAttrValue;
        break;
      }

      // optional uint32 ReforgeAttrValue = 2;
      case 2: {
        if (tag == 16) {
         parse_ReforgeAttrValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reforgeattrvalue_)));
          set_has_reforgeattrvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpRefineExclEquipReplaceAndRefineRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpRefineExclEquipReplaceAndRefineRsp)
  return false;
#undef DO_
}

void TItemOpRefineExclEquipReplaceAndRefineRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpRefineExclEquipReplaceAndRefineRsp)
  // optional uint32 ReforgeAttrId = 1;
  if (has_reforgeattrid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->reforgeattrid(), output);
  }

  // optional uint32 ReforgeAttrValue = 2;
  if (has_reforgeattrvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reforgeattrvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpRefineExclEquipReplaceAndRefineRsp)
}

::google::protobuf::uint8* TItemOpRefineExclEquipReplaceAndRefineRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpRefineExclEquipReplaceAndRefineRsp)
  // optional uint32 ReforgeAttrId = 1;
  if (has_reforgeattrid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->reforgeattrid(), target);
  }

  // optional uint32 ReforgeAttrValue = 2;
  if (has_reforgeattrvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reforgeattrvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpRefineExclEquipReplaceAndRefineRsp)
  return target;
}

int TItemOpRefineExclEquipReplaceAndRefineRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ReforgeAttrId = 1;
    if (has_reforgeattrid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reforgeattrid());
    }

    // optional uint32 ReforgeAttrValue = 2;
    if (has_reforgeattrvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reforgeattrvalue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpRefineExclEquipReplaceAndRefineRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpRefineExclEquipReplaceAndRefineRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpRefineExclEquipReplaceAndRefineRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpRefineExclEquipReplaceAndRefineRsp::MergeFrom(const TItemOpRefineExclEquipReplaceAndRefineRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reforgeattrid()) {
      set_reforgeattrid(from.reforgeattrid());
    }
    if (from.has_reforgeattrvalue()) {
      set_reforgeattrvalue(from.reforgeattrvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpRefineExclEquipReplaceAndRefineRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpRefineExclEquipReplaceAndRefineRsp::CopyFrom(const TItemOpRefineExclEquipReplaceAndRefineRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpRefineExclEquipReplaceAndRefineRsp::IsInitialized() const {

  return true;
}

void TItemOpRefineExclEquipReplaceAndRefineRsp::Swap(TItemOpRefineExclEquipReplaceAndRefineRsp* other) {
  if (other != this) {
    std::swap(reforgeattrid_, other->reforgeattrid_);
    std::swap(reforgeattrvalue_, other->reforgeattrvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpRefineExclEquipReplaceAndRefineRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpRefineExclEquipReplaceAndRefineRsp_descriptor_;
  metadata.reflection = TItemOpRefineExclEquipReplaceAndRefineRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpComposeFavoriteReq::kIdFieldNumber;
const int TItemOpComposeFavoriteReq::kNumFieldNumber;
#endif  // !_MSC_VER

TItemOpComposeFavoriteReq::TItemOpComposeFavoriteReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpComposeFavoriteReq)
}

void TItemOpComposeFavoriteReq::InitAsDefaultInstance() {
}

TItemOpComposeFavoriteReq::TItemOpComposeFavoriteReq(const TItemOpComposeFavoriteReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpComposeFavoriteReq)
}

void TItemOpComposeFavoriteReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpComposeFavoriteReq::~TItemOpComposeFavoriteReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpComposeFavoriteReq)
  SharedDtor();
}

void TItemOpComposeFavoriteReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpComposeFavoriteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpComposeFavoriteReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpComposeFavoriteReq_descriptor_;
}

const TItemOpComposeFavoriteReq& TItemOpComposeFavoriteReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpComposeFavoriteReq* TItemOpComposeFavoriteReq::default_instance_ = NULL;

TItemOpComposeFavoriteReq* TItemOpComposeFavoriteReq::New() const {
  return new TItemOpComposeFavoriteReq;
}

void TItemOpComposeFavoriteReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpComposeFavoriteReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpComposeFavoriteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpComposeFavoriteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpComposeFavoriteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpComposeFavoriteReq)
  return false;
#undef DO_
}

void TItemOpComposeFavoriteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpComposeFavoriteReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpComposeFavoriteReq)
}

::google::protobuf::uint8* TItemOpComposeFavoriteReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpComposeFavoriteReq)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpComposeFavoriteReq)
  return target;
}

int TItemOpComposeFavoriteReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpComposeFavoriteReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpComposeFavoriteReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpComposeFavoriteReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpComposeFavoriteReq::MergeFrom(const TItemOpComposeFavoriteReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpComposeFavoriteReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpComposeFavoriteReq::CopyFrom(const TItemOpComposeFavoriteReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpComposeFavoriteReq::IsInitialized() const {

  return true;
}

void TItemOpComposeFavoriteReq::Swap(TItemOpComposeFavoriteReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpComposeFavoriteReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpComposeFavoriteReq_descriptor_;
  metadata.reflection = TItemOpComposeFavoriteReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpComposeMaterialReq::kArrItemIdFieldNumber;
const int TItemOpComposeMaterialReq::kNumFieldNumber;
#endif  // !_MSC_VER

TItemOpComposeMaterialReq::TItemOpComposeMaterialReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpComposeMaterialReq)
}

void TItemOpComposeMaterialReq::InitAsDefaultInstance() {
}

TItemOpComposeMaterialReq::TItemOpComposeMaterialReq(const TItemOpComposeMaterialReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpComposeMaterialReq)
}

void TItemOpComposeMaterialReq::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpComposeMaterialReq::~TItemOpComposeMaterialReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpComposeMaterialReq)
  SharedDtor();
}

void TItemOpComposeMaterialReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpComposeMaterialReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpComposeMaterialReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpComposeMaterialReq_descriptor_;
}

const TItemOpComposeMaterialReq& TItemOpComposeMaterialReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpComposeMaterialReq* TItemOpComposeMaterialReq::default_instance_ = NULL;

TItemOpComposeMaterialReq* TItemOpComposeMaterialReq::New() const {
  return new TItemOpComposeMaterialReq;
}

void TItemOpComposeMaterialReq::Clear() {
  num_ = 0u;
  arritemid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpComposeMaterialReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpComposeMaterialReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ArrItemId = 1;
      case 1: {
        if (tag == 8) {
         parse_ArrItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_arritemid())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arritemid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ArrItemId;
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpComposeMaterialReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpComposeMaterialReq)
  return false;
#undef DO_
}

void TItemOpComposeMaterialReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpComposeMaterialReq)
  // repeated uint32 ArrItemId = 1;
  for (int i = 0; i < this->arritemid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->arritemid(i), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpComposeMaterialReq)
}

::google::protobuf::uint8* TItemOpComposeMaterialReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpComposeMaterialReq)
  // repeated uint32 ArrItemId = 1;
  for (int i = 0; i < this->arritemid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->arritemid(i), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpComposeMaterialReq)
  return target;
}

int TItemOpComposeMaterialReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  // repeated uint32 ArrItemId = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->arritemid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arritemid(i));
    }
    total_size += 1 * this->arritemid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpComposeMaterialReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpComposeMaterialReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpComposeMaterialReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpComposeMaterialReq::MergeFrom(const TItemOpComposeMaterialReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arritemid_.MergeFrom(from.arritemid_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpComposeMaterialReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpComposeMaterialReq::CopyFrom(const TItemOpComposeMaterialReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpComposeMaterialReq::IsInitialized() const {

  return true;
}

void TItemOpComposeMaterialReq::Swap(TItemOpComposeMaterialReq* other) {
  if (other != this) {
    arritemid_.Swap(&other->arritemid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpComposeMaterialReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpComposeMaterialReq_descriptor_;
  metadata.reflection = TItemOpComposeMaterialReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpComposeMaterialRsp::kRewardArrayFieldNumber;
#endif  // !_MSC_VER

TItemOpComposeMaterialRsp::TItemOpComposeMaterialRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpComposeMaterialRsp)
}

void TItemOpComposeMaterialRsp::InitAsDefaultInstance() {
}

TItemOpComposeMaterialRsp::TItemOpComposeMaterialRsp(const TItemOpComposeMaterialRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpComposeMaterialRsp)
}

void TItemOpComposeMaterialRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpComposeMaterialRsp::~TItemOpComposeMaterialRsp() {
  // @@protoc_insertion_point(destructor:pb.TItemOpComposeMaterialRsp)
  SharedDtor();
}

void TItemOpComposeMaterialRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpComposeMaterialRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpComposeMaterialRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpComposeMaterialRsp_descriptor_;
}

const TItemOpComposeMaterialRsp& TItemOpComposeMaterialRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpComposeMaterialRsp* TItemOpComposeMaterialRsp::default_instance_ = NULL;

TItemOpComposeMaterialRsp* TItemOpComposeMaterialRsp::New() const {
  return new TItemOpComposeMaterialRsp;
}

void TItemOpComposeMaterialRsp::Clear() {
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpComposeMaterialRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpComposeMaterialRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpComposeMaterialRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpComposeMaterialRsp)
  return false;
#undef DO_
}

void TItemOpComposeMaterialRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpComposeMaterialRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpComposeMaterialRsp)
}

::google::protobuf::uint8* TItemOpComposeMaterialRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpComposeMaterialRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpComposeMaterialRsp)
  return target;
}

int TItemOpComposeMaterialRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpComposeMaterialRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpComposeMaterialRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpComposeMaterialRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpComposeMaterialRsp::MergeFrom(const TItemOpComposeMaterialRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpComposeMaterialRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpComposeMaterialRsp::CopyFrom(const TItemOpComposeMaterialRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpComposeMaterialRsp::IsInitialized() const {

  return true;
}

void TItemOpComposeMaterialRsp::Swap(TItemOpComposeMaterialRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpComposeMaterialRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpComposeMaterialRsp_descriptor_;
  metadata.reflection = TItemOpComposeMaterialRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpComposeTreasureReq::kArrItemIdFieldNumber;
const int TItemOpComposeTreasureReq::kNumFieldNumber;
#endif  // !_MSC_VER

TItemOpComposeTreasureReq::TItemOpComposeTreasureReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpComposeTreasureReq)
}

void TItemOpComposeTreasureReq::InitAsDefaultInstance() {
}

TItemOpComposeTreasureReq::TItemOpComposeTreasureReq(const TItemOpComposeTreasureReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpComposeTreasureReq)
}

void TItemOpComposeTreasureReq::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpComposeTreasureReq::~TItemOpComposeTreasureReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpComposeTreasureReq)
  SharedDtor();
}

void TItemOpComposeTreasureReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpComposeTreasureReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpComposeTreasureReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpComposeTreasureReq_descriptor_;
}

const TItemOpComposeTreasureReq& TItemOpComposeTreasureReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpComposeTreasureReq* TItemOpComposeTreasureReq::default_instance_ = NULL;

TItemOpComposeTreasureReq* TItemOpComposeTreasureReq::New() const {
  return new TItemOpComposeTreasureReq;
}

void TItemOpComposeTreasureReq::Clear() {
  num_ = 0u;
  arritemid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpComposeTreasureReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpComposeTreasureReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ArrItemId = 1;
      case 1: {
        if (tag == 8) {
         parse_ArrItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_arritemid())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arritemid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ArrItemId;
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpComposeTreasureReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpComposeTreasureReq)
  return false;
#undef DO_
}

void TItemOpComposeTreasureReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpComposeTreasureReq)
  // repeated uint32 ArrItemId = 1;
  for (int i = 0; i < this->arritemid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->arritemid(i), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpComposeTreasureReq)
}

::google::protobuf::uint8* TItemOpComposeTreasureReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpComposeTreasureReq)
  // repeated uint32 ArrItemId = 1;
  for (int i = 0; i < this->arritemid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->arritemid(i), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpComposeTreasureReq)
  return target;
}

int TItemOpComposeTreasureReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  // repeated uint32 ArrItemId = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->arritemid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arritemid(i));
    }
    total_size += 1 * this->arritemid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpComposeTreasureReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpComposeTreasureReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpComposeTreasureReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpComposeTreasureReq::MergeFrom(const TItemOpComposeTreasureReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arritemid_.MergeFrom(from.arritemid_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpComposeTreasureReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpComposeTreasureReq::CopyFrom(const TItemOpComposeTreasureReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpComposeTreasureReq::IsInitialized() const {

  return true;
}

void TItemOpComposeTreasureReq::Swap(TItemOpComposeTreasureReq* other) {
  if (other != this) {
    arritemid_.Swap(&other->arritemid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpComposeTreasureReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpComposeTreasureReq_descriptor_;
  metadata.reflection = TItemOpComposeTreasureReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpComposeTreasureRsp::kRewardArrayFieldNumber;
const int TItemOpComposeTreasureRsp::kIsSucFieldNumber;
#endif  // !_MSC_VER

TItemOpComposeTreasureRsp::TItemOpComposeTreasureRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpComposeTreasureRsp)
}

void TItemOpComposeTreasureRsp::InitAsDefaultInstance() {
}

TItemOpComposeTreasureRsp::TItemOpComposeTreasureRsp(const TItemOpComposeTreasureRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpComposeTreasureRsp)
}

void TItemOpComposeTreasureRsp::SharedCtor() {
  _cached_size_ = 0;
  issuc_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpComposeTreasureRsp::~TItemOpComposeTreasureRsp() {
  // @@protoc_insertion_point(destructor:pb.TItemOpComposeTreasureRsp)
  SharedDtor();
}

void TItemOpComposeTreasureRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpComposeTreasureRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpComposeTreasureRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpComposeTreasureRsp_descriptor_;
}

const TItemOpComposeTreasureRsp& TItemOpComposeTreasureRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpComposeTreasureRsp* TItemOpComposeTreasureRsp::default_instance_ = NULL;

TItemOpComposeTreasureRsp* TItemOpComposeTreasureRsp::New() const {
  return new TItemOpComposeTreasureRsp;
}

void TItemOpComposeTreasureRsp::Clear() {
  issuc_ = 0u;
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpComposeTreasureRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpComposeTreasureRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectTag(16)) goto parse_IsSuc;
        break;
      }

      // optional uint32 IsSuc = 2;
      case 2: {
        if (tag == 16) {
         parse_IsSuc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &issuc_)));
          set_has_issuc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpComposeTreasureRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpComposeTreasureRsp)
  return false;
#undef DO_
}

void TItemOpComposeTreasureRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpComposeTreasureRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  // optional uint32 IsSuc = 2;
  if (has_issuc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->issuc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpComposeTreasureRsp)
}

::google::protobuf::uint8* TItemOpComposeTreasureRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpComposeTreasureRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  // optional uint32 IsSuc = 2;
  if (has_issuc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->issuc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpComposeTreasureRsp)
  return target;
}

int TItemOpComposeTreasureRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 IsSuc = 2;
    if (has_issuc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->issuc());
    }

  }
  // repeated .pb.TCommonReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpComposeTreasureRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpComposeTreasureRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpComposeTreasureRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpComposeTreasureRsp::MergeFrom(const TItemOpComposeTreasureRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_issuc()) {
      set_issuc(from.issuc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpComposeTreasureRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpComposeTreasureRsp::CopyFrom(const TItemOpComposeTreasureRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpComposeTreasureRsp::IsInitialized() const {

  return true;
}

void TItemOpComposeTreasureRsp::Swap(TItemOpComposeTreasureRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(issuc_, other->issuc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpComposeTreasureRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpComposeTreasureRsp_descriptor_;
  metadata.reflection = TItemOpComposeTreasureRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpReforgeExclEquipReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpReforgeExclEquipReq::TItemOpReforgeExclEquipReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpReforgeExclEquipReq)
}

void TItemOpReforgeExclEquipReq::InitAsDefaultInstance() {
}

TItemOpReforgeExclEquipReq::TItemOpReforgeExclEquipReq(const TItemOpReforgeExclEquipReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpReforgeExclEquipReq)
}

void TItemOpReforgeExclEquipReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpReforgeExclEquipReq::~TItemOpReforgeExclEquipReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpReforgeExclEquipReq)
  SharedDtor();
}

void TItemOpReforgeExclEquipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpReforgeExclEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpReforgeExclEquipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpReforgeExclEquipReq_descriptor_;
}

const TItemOpReforgeExclEquipReq& TItemOpReforgeExclEquipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpReforgeExclEquipReq* TItemOpReforgeExclEquipReq::default_instance_ = NULL;

TItemOpReforgeExclEquipReq* TItemOpReforgeExclEquipReq::New() const {
  return new TItemOpReforgeExclEquipReq;
}

void TItemOpReforgeExclEquipReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpReforgeExclEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpReforgeExclEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpReforgeExclEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpReforgeExclEquipReq)
  return false;
#undef DO_
}

void TItemOpReforgeExclEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpReforgeExclEquipReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpReforgeExclEquipReq)
}

::google::protobuf::uint8* TItemOpReforgeExclEquipReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpReforgeExclEquipReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpReforgeExclEquipReq)
  return target;
}

int TItemOpReforgeExclEquipReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpReforgeExclEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpReforgeExclEquipReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpReforgeExclEquipReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpReforgeExclEquipReq::MergeFrom(const TItemOpReforgeExclEquipReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpReforgeExclEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpReforgeExclEquipReq::CopyFrom(const TItemOpReforgeExclEquipReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpReforgeExclEquipReq::IsInitialized() const {

  return true;
}

void TItemOpReforgeExclEquipReq::Swap(TItemOpReforgeExclEquipReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpReforgeExclEquipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpReforgeExclEquipReq_descriptor_;
  metadata.reflection = TItemOpReforgeExclEquipReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpReforgeExclEquipRsp::kItemTidFieldNumber;
#endif  // !_MSC_VER

TItemOpReforgeExclEquipRsp::TItemOpReforgeExclEquipRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpReforgeExclEquipRsp)
}

void TItemOpReforgeExclEquipRsp::InitAsDefaultInstance() {
}

TItemOpReforgeExclEquipRsp::TItemOpReforgeExclEquipRsp(const TItemOpReforgeExclEquipRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpReforgeExclEquipRsp)
}

void TItemOpReforgeExclEquipRsp::SharedCtor() {
  _cached_size_ = 0;
  itemtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpReforgeExclEquipRsp::~TItemOpReforgeExclEquipRsp() {
  // @@protoc_insertion_point(destructor:pb.TItemOpReforgeExclEquipRsp)
  SharedDtor();
}

void TItemOpReforgeExclEquipRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpReforgeExclEquipRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpReforgeExclEquipRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpReforgeExclEquipRsp_descriptor_;
}

const TItemOpReforgeExclEquipRsp& TItemOpReforgeExclEquipRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpReforgeExclEquipRsp* TItemOpReforgeExclEquipRsp::default_instance_ = NULL;

TItemOpReforgeExclEquipRsp* TItemOpReforgeExclEquipRsp::New() const {
  return new TItemOpReforgeExclEquipRsp;
}

void TItemOpReforgeExclEquipRsp::Clear() {
  itemtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpReforgeExclEquipRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpReforgeExclEquipRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemtid_)));
          set_has_itemtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpReforgeExclEquipRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpReforgeExclEquipRsp)
  return false;
#undef DO_
}

void TItemOpReforgeExclEquipRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpReforgeExclEquipRsp)
  // optional uint32 ItemTid = 1;
  if (has_itemtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemtid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpReforgeExclEquipRsp)
}

::google::protobuf::uint8* TItemOpReforgeExclEquipRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpReforgeExclEquipRsp)
  // optional uint32 ItemTid = 1;
  if (has_itemtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemtid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpReforgeExclEquipRsp)
  return target;
}

int TItemOpReforgeExclEquipRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemTid = 1;
    if (has_itemtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemtid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpReforgeExclEquipRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpReforgeExclEquipRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpReforgeExclEquipRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpReforgeExclEquipRsp::MergeFrom(const TItemOpReforgeExclEquipRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemtid()) {
      set_itemtid(from.itemtid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpReforgeExclEquipRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpReforgeExclEquipRsp::CopyFrom(const TItemOpReforgeExclEquipRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpReforgeExclEquipRsp::IsInitialized() const {

  return true;
}

void TItemOpReforgeExclEquipRsp::Swap(TItemOpReforgeExclEquipRsp* other) {
  if (other != this) {
    std::swap(itemtid_, other->itemtid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpReforgeExclEquipRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpReforgeExclEquipRsp_descriptor_;
  metadata.reflection = TItemOpReforgeExclEquipRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpReforgeExclEquipConfirmReq::kItemIdFieldNumber;
const int TItemOpReforgeExclEquipConfirmReq::kItemTidFieldNumber;
#endif  // !_MSC_VER

TItemOpReforgeExclEquipConfirmReq::TItemOpReforgeExclEquipConfirmReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpReforgeExclEquipConfirmReq)
}

void TItemOpReforgeExclEquipConfirmReq::InitAsDefaultInstance() {
}

TItemOpReforgeExclEquipConfirmReq::TItemOpReforgeExclEquipConfirmReq(const TItemOpReforgeExclEquipConfirmReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpReforgeExclEquipConfirmReq)
}

void TItemOpReforgeExclEquipConfirmReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  itemtid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpReforgeExclEquipConfirmReq::~TItemOpReforgeExclEquipConfirmReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpReforgeExclEquipConfirmReq)
  SharedDtor();
}

void TItemOpReforgeExclEquipConfirmReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpReforgeExclEquipConfirmReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpReforgeExclEquipConfirmReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpReforgeExclEquipConfirmReq_descriptor_;
}

const TItemOpReforgeExclEquipConfirmReq& TItemOpReforgeExclEquipConfirmReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpReforgeExclEquipConfirmReq* TItemOpReforgeExclEquipConfirmReq::default_instance_ = NULL;

TItemOpReforgeExclEquipConfirmReq* TItemOpReforgeExclEquipConfirmReq::New() const {
  return new TItemOpReforgeExclEquipConfirmReq;
}

void TItemOpReforgeExclEquipConfirmReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpReforgeExclEquipConfirmReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, itemtid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpReforgeExclEquipConfirmReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpReforgeExclEquipConfirmReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemTid;
        break;
      }

      // optional uint32 ItemTid = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemTid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemtid_)));
          set_has_itemtid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpReforgeExclEquipConfirmReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpReforgeExclEquipConfirmReq)
  return false;
#undef DO_
}

void TItemOpReforgeExclEquipConfirmReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpReforgeExclEquipConfirmReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 ItemTid = 2;
  if (has_itemtid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itemtid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpReforgeExclEquipConfirmReq)
}

::google::protobuf::uint8* TItemOpReforgeExclEquipConfirmReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpReforgeExclEquipConfirmReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 ItemTid = 2;
  if (has_itemtid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itemtid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpReforgeExclEquipConfirmReq)
  return target;
}

int TItemOpReforgeExclEquipConfirmReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 ItemTid = 2;
    if (has_itemtid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemtid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpReforgeExclEquipConfirmReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpReforgeExclEquipConfirmReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpReforgeExclEquipConfirmReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpReforgeExclEquipConfirmReq::MergeFrom(const TItemOpReforgeExclEquipConfirmReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_itemtid()) {
      set_itemtid(from.itemtid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpReforgeExclEquipConfirmReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpReforgeExclEquipConfirmReq::CopyFrom(const TItemOpReforgeExclEquipConfirmReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpReforgeExclEquipConfirmReq::IsInitialized() const {

  return true;
}

void TItemOpReforgeExclEquipConfirmReq::Swap(TItemOpReforgeExclEquipConfirmReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(itemtid_, other->itemtid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpReforgeExclEquipConfirmReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpReforgeExclEquipConfirmReq_descriptor_;
  metadata.reflection = TItemOpReforgeExclEquipConfirmReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpBeastArmEnhanceReq::kItemIdFieldNumber;
const int TItemOpBeastArmEnhanceReq::kNumFieldNumber;
#endif  // !_MSC_VER

TItemOpBeastArmEnhanceReq::TItemOpBeastArmEnhanceReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpBeastArmEnhanceReq)
}

void TItemOpBeastArmEnhanceReq::InitAsDefaultInstance() {
}

TItemOpBeastArmEnhanceReq::TItemOpBeastArmEnhanceReq(const TItemOpBeastArmEnhanceReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpBeastArmEnhanceReq)
}

void TItemOpBeastArmEnhanceReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpBeastArmEnhanceReq::~TItemOpBeastArmEnhanceReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpBeastArmEnhanceReq)
  SharedDtor();
}

void TItemOpBeastArmEnhanceReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpBeastArmEnhanceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpBeastArmEnhanceReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpBeastArmEnhanceReq_descriptor_;
}

const TItemOpBeastArmEnhanceReq& TItemOpBeastArmEnhanceReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpBeastArmEnhanceReq* TItemOpBeastArmEnhanceReq::default_instance_ = NULL;

TItemOpBeastArmEnhanceReq* TItemOpBeastArmEnhanceReq::New() const {
  return new TItemOpBeastArmEnhanceReq;
}

void TItemOpBeastArmEnhanceReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpBeastArmEnhanceReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpBeastArmEnhanceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpBeastArmEnhanceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpBeastArmEnhanceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpBeastArmEnhanceReq)
  return false;
#undef DO_
}

void TItemOpBeastArmEnhanceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpBeastArmEnhanceReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpBeastArmEnhanceReq)
}

::google::protobuf::uint8* TItemOpBeastArmEnhanceReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpBeastArmEnhanceReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpBeastArmEnhanceReq)
  return target;
}

int TItemOpBeastArmEnhanceReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpBeastArmEnhanceReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpBeastArmEnhanceReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpBeastArmEnhanceReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpBeastArmEnhanceReq::MergeFrom(const TItemOpBeastArmEnhanceReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpBeastArmEnhanceReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpBeastArmEnhanceReq::CopyFrom(const TItemOpBeastArmEnhanceReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpBeastArmEnhanceReq::IsInitialized() const {

  return true;
}

void TItemOpBeastArmEnhanceReq::Swap(TItemOpBeastArmEnhanceReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpBeastArmEnhanceReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpBeastArmEnhanceReq_descriptor_;
  metadata.reflection = TItemOpBeastArmEnhanceReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpAutoBeastArmEnhanceReq::kBeastIdFieldNumber;
#endif  // !_MSC_VER

TItemOpAutoBeastArmEnhanceReq::TItemOpAutoBeastArmEnhanceReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpAutoBeastArmEnhanceReq)
}

void TItemOpAutoBeastArmEnhanceReq::InitAsDefaultInstance() {
}

TItemOpAutoBeastArmEnhanceReq::TItemOpAutoBeastArmEnhanceReq(const TItemOpAutoBeastArmEnhanceReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpAutoBeastArmEnhanceReq)
}

void TItemOpAutoBeastArmEnhanceReq::SharedCtor() {
  _cached_size_ = 0;
  beastid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpAutoBeastArmEnhanceReq::~TItemOpAutoBeastArmEnhanceReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpAutoBeastArmEnhanceReq)
  SharedDtor();
}

void TItemOpAutoBeastArmEnhanceReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpAutoBeastArmEnhanceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpAutoBeastArmEnhanceReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpAutoBeastArmEnhanceReq_descriptor_;
}

const TItemOpAutoBeastArmEnhanceReq& TItemOpAutoBeastArmEnhanceReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpAutoBeastArmEnhanceReq* TItemOpAutoBeastArmEnhanceReq::default_instance_ = NULL;

TItemOpAutoBeastArmEnhanceReq* TItemOpAutoBeastArmEnhanceReq::New() const {
  return new TItemOpAutoBeastArmEnhanceReq;
}

void TItemOpAutoBeastArmEnhanceReq::Clear() {
  beastid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpAutoBeastArmEnhanceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpAutoBeastArmEnhanceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BeastId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beastid_)));
          set_has_beastid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpAutoBeastArmEnhanceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpAutoBeastArmEnhanceReq)
  return false;
#undef DO_
}

void TItemOpAutoBeastArmEnhanceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpAutoBeastArmEnhanceReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->beastid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpAutoBeastArmEnhanceReq)
}

::google::protobuf::uint8* TItemOpAutoBeastArmEnhanceReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpAutoBeastArmEnhanceReq)
  // optional uint32 BeastId = 1;
  if (has_beastid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->beastid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpAutoBeastArmEnhanceReq)
  return target;
}

int TItemOpAutoBeastArmEnhanceReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 BeastId = 1;
    if (has_beastid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beastid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpAutoBeastArmEnhanceReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpAutoBeastArmEnhanceReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpAutoBeastArmEnhanceReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpAutoBeastArmEnhanceReq::MergeFrom(const TItemOpAutoBeastArmEnhanceReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beastid()) {
      set_beastid(from.beastid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpAutoBeastArmEnhanceReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpAutoBeastArmEnhanceReq::CopyFrom(const TItemOpAutoBeastArmEnhanceReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpAutoBeastArmEnhanceReq::IsInitialized() const {

  return true;
}

void TItemOpAutoBeastArmEnhanceReq::Swap(TItemOpAutoBeastArmEnhanceReq* other) {
  if (other != this) {
    std::swap(beastid_, other->beastid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpAutoBeastArmEnhanceReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpAutoBeastArmEnhanceReq_descriptor_;
  metadata.reflection = TItemOpAutoBeastArmEnhanceReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpBeastArmAdvanceReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpBeastArmAdvanceReq::TItemOpBeastArmAdvanceReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpBeastArmAdvanceReq)
}

void TItemOpBeastArmAdvanceReq::InitAsDefaultInstance() {
}

TItemOpBeastArmAdvanceReq::TItemOpBeastArmAdvanceReq(const TItemOpBeastArmAdvanceReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpBeastArmAdvanceReq)
}

void TItemOpBeastArmAdvanceReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpBeastArmAdvanceReq::~TItemOpBeastArmAdvanceReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpBeastArmAdvanceReq)
  SharedDtor();
}

void TItemOpBeastArmAdvanceReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpBeastArmAdvanceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpBeastArmAdvanceReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpBeastArmAdvanceReq_descriptor_;
}

const TItemOpBeastArmAdvanceReq& TItemOpBeastArmAdvanceReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpBeastArmAdvanceReq* TItemOpBeastArmAdvanceReq::default_instance_ = NULL;

TItemOpBeastArmAdvanceReq* TItemOpBeastArmAdvanceReq::New() const {
  return new TItemOpBeastArmAdvanceReq;
}

void TItemOpBeastArmAdvanceReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpBeastArmAdvanceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpBeastArmAdvanceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpBeastArmAdvanceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpBeastArmAdvanceReq)
  return false;
#undef DO_
}

void TItemOpBeastArmAdvanceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpBeastArmAdvanceReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpBeastArmAdvanceReq)
}

::google::protobuf::uint8* TItemOpBeastArmAdvanceReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpBeastArmAdvanceReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpBeastArmAdvanceReq)
  return target;
}

int TItemOpBeastArmAdvanceReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpBeastArmAdvanceReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpBeastArmAdvanceReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpBeastArmAdvanceReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpBeastArmAdvanceReq::MergeFrom(const TItemOpBeastArmAdvanceReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpBeastArmAdvanceReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpBeastArmAdvanceReq::CopyFrom(const TItemOpBeastArmAdvanceReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpBeastArmAdvanceReq::IsInitialized() const {

  return true;
}

void TItemOpBeastArmAdvanceReq::Swap(TItemOpBeastArmAdvanceReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpBeastArmAdvanceReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpBeastArmAdvanceReq_descriptor_;
  metadata.reflection = TItemOpBeastArmAdvanceReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpBeastArmRefineReq::kItemIdFieldNumber;
const int TItemOpBeastArmRefineReq::kRandAttrIndexFieldNumber;
const int TItemOpBeastArmRefineReq::kRefineNumFieldNumber;
const int TItemOpBeastArmRefineReq::kCostTypeFieldNumber;
#endif  // !_MSC_VER

TItemOpBeastArmRefineReq::TItemOpBeastArmRefineReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpBeastArmRefineReq)
}

void TItemOpBeastArmRefineReq::InitAsDefaultInstance() {
}

TItemOpBeastArmRefineReq::TItemOpBeastArmRefineReq(const TItemOpBeastArmRefineReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpBeastArmRefineReq)
}

void TItemOpBeastArmRefineReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  randattrindex_ = 0u;
  refinenum_ = 0u;
  costtype_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpBeastArmRefineReq::~TItemOpBeastArmRefineReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpBeastArmRefineReq)
  SharedDtor();
}

void TItemOpBeastArmRefineReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpBeastArmRefineReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpBeastArmRefineReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpBeastArmRefineReq_descriptor_;
}

const TItemOpBeastArmRefineReq& TItemOpBeastArmRefineReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpBeastArmRefineReq* TItemOpBeastArmRefineReq::default_instance_ = NULL;

TItemOpBeastArmRefineReq* TItemOpBeastArmRefineReq::New() const {
  return new TItemOpBeastArmRefineReq;
}

void TItemOpBeastArmRefineReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpBeastArmRefineReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(itemid_, refinenum_);
    costtype_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpBeastArmRefineReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpBeastArmRefineReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RandAttrIndex;
        break;
      }

      // optional uint32 RandAttrIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_RandAttrIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &randattrindex_)));
          set_has_randattrindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RefineNum;
        break;
      }

      // optional uint32 RefineNum = 3;
      case 3: {
        if (tag == 24) {
         parse_RefineNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refinenum_)));
          set_has_refinenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CostType;
        break;
      }

      // optional .pb.EBeastArmRefineCostType CostType = 4;
      case 4: {
        if (tag == 32) {
         parse_CostType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::EBeastArmRefineCostType_IsValid(value)) {
            set_costtype(static_cast< ::pb::EBeastArmRefineCostType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpBeastArmRefineReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpBeastArmRefineReq)
  return false;
#undef DO_
}

void TItemOpBeastArmRefineReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpBeastArmRefineReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 RandAttrIndex = 2;
  if (has_randattrindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->randattrindex(), output);
  }

  // optional uint32 RefineNum = 3;
  if (has_refinenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->refinenum(), output);
  }

  // optional .pb.EBeastArmRefineCostType CostType = 4;
  if (has_costtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->costtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpBeastArmRefineReq)
}

::google::protobuf::uint8* TItemOpBeastArmRefineReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpBeastArmRefineReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 RandAttrIndex = 2;
  if (has_randattrindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->randattrindex(), target);
  }

  // optional uint32 RefineNum = 3;
  if (has_refinenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->refinenum(), target);
  }

  // optional .pb.EBeastArmRefineCostType CostType = 4;
  if (has_costtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->costtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpBeastArmRefineReq)
  return target;
}

int TItemOpBeastArmRefineReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 RandAttrIndex = 2;
    if (has_randattrindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->randattrindex());
    }

    // optional uint32 RefineNum = 3;
    if (has_refinenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->refinenum());
    }

    // optional .pb.EBeastArmRefineCostType CostType = 4;
    if (has_costtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->costtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpBeastArmRefineReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpBeastArmRefineReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpBeastArmRefineReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpBeastArmRefineReq::MergeFrom(const TItemOpBeastArmRefineReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_randattrindex()) {
      set_randattrindex(from.randattrindex());
    }
    if (from.has_refinenum()) {
      set_refinenum(from.refinenum());
    }
    if (from.has_costtype()) {
      set_costtype(from.costtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpBeastArmRefineReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpBeastArmRefineReq::CopyFrom(const TItemOpBeastArmRefineReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpBeastArmRefineReq::IsInitialized() const {

  return true;
}

void TItemOpBeastArmRefineReq::Swap(TItemOpBeastArmRefineReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(randattrindex_, other->randattrindex_);
    std::swap(refinenum_, other->refinenum_);
    std::swap(costtype_, other->costtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpBeastArmRefineReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpBeastArmRefineReq_descriptor_;
  metadata.reflection = TItemOpBeastArmRefineReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpBeastArmRefreshRandAttrReq::kItemIdFieldNumber;
const int TItemOpBeastArmRefreshRandAttrReq::kRandAttrIndexFieldNumber;
const int TItemOpBeastArmRefreshRandAttrReq::kRefineIndexFieldNumber;
#endif  // !_MSC_VER

TItemOpBeastArmRefreshRandAttrReq::TItemOpBeastArmRefreshRandAttrReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpBeastArmRefreshRandAttrReq)
}

void TItemOpBeastArmRefreshRandAttrReq::InitAsDefaultInstance() {
}

TItemOpBeastArmRefreshRandAttrReq::TItemOpBeastArmRefreshRandAttrReq(const TItemOpBeastArmRefreshRandAttrReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpBeastArmRefreshRandAttrReq)
}

void TItemOpBeastArmRefreshRandAttrReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  randattrindex_ = 0u;
  refineindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpBeastArmRefreshRandAttrReq::~TItemOpBeastArmRefreshRandAttrReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpBeastArmRefreshRandAttrReq)
  SharedDtor();
}

void TItemOpBeastArmRefreshRandAttrReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpBeastArmRefreshRandAttrReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpBeastArmRefreshRandAttrReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpBeastArmRefreshRandAttrReq_descriptor_;
}

const TItemOpBeastArmRefreshRandAttrReq& TItemOpBeastArmRefreshRandAttrReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpBeastArmRefreshRandAttrReq* TItemOpBeastArmRefreshRandAttrReq::default_instance_ = NULL;

TItemOpBeastArmRefreshRandAttrReq* TItemOpBeastArmRefreshRandAttrReq::New() const {
  return new TItemOpBeastArmRefreshRandAttrReq;
}

void TItemOpBeastArmRefreshRandAttrReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpBeastArmRefreshRandAttrReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, refineindex_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpBeastArmRefreshRandAttrReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpBeastArmRefreshRandAttrReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RandAttrIndex;
        break;
      }

      // optional uint32 RandAttrIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_RandAttrIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &randattrindex_)));
          set_has_randattrindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RefineIndex;
        break;
      }

      // optional uint32 RefineIndex = 3;
      case 3: {
        if (tag == 24) {
         parse_RefineIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refineindex_)));
          set_has_refineindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpBeastArmRefreshRandAttrReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpBeastArmRefreshRandAttrReq)
  return false;
#undef DO_
}

void TItemOpBeastArmRefreshRandAttrReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpBeastArmRefreshRandAttrReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 RandAttrIndex = 2;
  if (has_randattrindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->randattrindex(), output);
  }

  // optional uint32 RefineIndex = 3;
  if (has_refineindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->refineindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpBeastArmRefreshRandAttrReq)
}

::google::protobuf::uint8* TItemOpBeastArmRefreshRandAttrReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpBeastArmRefreshRandAttrReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 RandAttrIndex = 2;
  if (has_randattrindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->randattrindex(), target);
  }

  // optional uint32 RefineIndex = 3;
  if (has_refineindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->refineindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpBeastArmRefreshRandAttrReq)
  return target;
}

int TItemOpBeastArmRefreshRandAttrReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 RandAttrIndex = 2;
    if (has_randattrindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->randattrindex());
    }

    // optional uint32 RefineIndex = 3;
    if (has_refineindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->refineindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpBeastArmRefreshRandAttrReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpBeastArmRefreshRandAttrReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpBeastArmRefreshRandAttrReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpBeastArmRefreshRandAttrReq::MergeFrom(const TItemOpBeastArmRefreshRandAttrReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_randattrindex()) {
      set_randattrindex(from.randattrindex());
    }
    if (from.has_refineindex()) {
      set_refineindex(from.refineindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpBeastArmRefreshRandAttrReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpBeastArmRefreshRandAttrReq::CopyFrom(const TItemOpBeastArmRefreshRandAttrReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpBeastArmRefreshRandAttrReq::IsInitialized() const {

  return true;
}

void TItemOpBeastArmRefreshRandAttrReq::Swap(TItemOpBeastArmRefreshRandAttrReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(randattrindex_, other->randattrindex_);
    std::swap(refineindex_, other->refineindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpBeastArmRefreshRandAttrReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpBeastArmRefreshRandAttrReq_descriptor_;
  metadata.reflection = TItemOpBeastArmRefreshRandAttrReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpIdentifyHeroSoulReq::kArrItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpIdentifyHeroSoulReq::TItemOpIdentifyHeroSoulReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpIdentifyHeroSoulReq)
}

void TItemOpIdentifyHeroSoulReq::InitAsDefaultInstance() {
}

TItemOpIdentifyHeroSoulReq::TItemOpIdentifyHeroSoulReq(const TItemOpIdentifyHeroSoulReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpIdentifyHeroSoulReq)
}

void TItemOpIdentifyHeroSoulReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpIdentifyHeroSoulReq::~TItemOpIdentifyHeroSoulReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpIdentifyHeroSoulReq)
  SharedDtor();
}

void TItemOpIdentifyHeroSoulReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpIdentifyHeroSoulReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpIdentifyHeroSoulReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpIdentifyHeroSoulReq_descriptor_;
}

const TItemOpIdentifyHeroSoulReq& TItemOpIdentifyHeroSoulReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpIdentifyHeroSoulReq* TItemOpIdentifyHeroSoulReq::default_instance_ = NULL;

TItemOpIdentifyHeroSoulReq* TItemOpIdentifyHeroSoulReq::New() const {
  return new TItemOpIdentifyHeroSoulReq;
}

void TItemOpIdentifyHeroSoulReq::Clear() {
  arritemid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpIdentifyHeroSoulReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpIdentifyHeroSoulReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ArrItemId = 1;
      case 1: {
        if (tag == 8) {
         parse_ArrItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_arritemid())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arritemid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ArrItemId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpIdentifyHeroSoulReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpIdentifyHeroSoulReq)
  return false;
#undef DO_
}

void TItemOpIdentifyHeroSoulReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpIdentifyHeroSoulReq)
  // repeated uint32 ArrItemId = 1;
  for (int i = 0; i < this->arritemid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->arritemid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpIdentifyHeroSoulReq)
}

::google::protobuf::uint8* TItemOpIdentifyHeroSoulReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpIdentifyHeroSoulReq)
  // repeated uint32 ArrItemId = 1;
  for (int i = 0; i < this->arritemid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->arritemid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpIdentifyHeroSoulReq)
  return target;
}

int TItemOpIdentifyHeroSoulReq::ByteSize() const {
  int total_size = 0;

  // repeated uint32 ArrItemId = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->arritemid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arritemid(i));
    }
    total_size += 1 * this->arritemid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpIdentifyHeroSoulReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpIdentifyHeroSoulReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpIdentifyHeroSoulReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpIdentifyHeroSoulReq::MergeFrom(const TItemOpIdentifyHeroSoulReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arritemid_.MergeFrom(from.arritemid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpIdentifyHeroSoulReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpIdentifyHeroSoulReq::CopyFrom(const TItemOpIdentifyHeroSoulReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpIdentifyHeroSoulReq::IsInitialized() const {

  return true;
}

void TItemOpIdentifyHeroSoulReq::Swap(TItemOpIdentifyHeroSoulReq* other) {
  if (other != this) {
    arritemid_.Swap(&other->arritemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpIdentifyHeroSoulReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpIdentifyHeroSoulReq_descriptor_;
  metadata.reflection = TItemOpIdentifyHeroSoulReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpHeroSoulDropInfo::kItemIdFieldNumber;
const int TItemOpHeroSoulDropInfo::kRewardArrayFieldNumber;
#endif  // !_MSC_VER

TItemOpHeroSoulDropInfo::TItemOpHeroSoulDropInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpHeroSoulDropInfo)
}

void TItemOpHeroSoulDropInfo::InitAsDefaultInstance() {
}

TItemOpHeroSoulDropInfo::TItemOpHeroSoulDropInfo(const TItemOpHeroSoulDropInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpHeroSoulDropInfo)
}

void TItemOpHeroSoulDropInfo::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpHeroSoulDropInfo::~TItemOpHeroSoulDropInfo() {
  // @@protoc_insertion_point(destructor:pb.TItemOpHeroSoulDropInfo)
  SharedDtor();
}

void TItemOpHeroSoulDropInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpHeroSoulDropInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpHeroSoulDropInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpHeroSoulDropInfo_descriptor_;
}

const TItemOpHeroSoulDropInfo& TItemOpHeroSoulDropInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpHeroSoulDropInfo* TItemOpHeroSoulDropInfo::default_instance_ = NULL;

TItemOpHeroSoulDropInfo* TItemOpHeroSoulDropInfo::New() const {
  return new TItemOpHeroSoulDropInfo;
}

void TItemOpHeroSoulDropInfo::Clear() {
  itemid_ = 0u;
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpHeroSoulDropInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpHeroSoulDropInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RewardArray;
        break;
      }

      // repeated .pb.TCommonReward RewardArray = 2;
      case 2: {
        if (tag == 18) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RewardArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpHeroSoulDropInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpHeroSoulDropInfo)
  return false;
#undef DO_
}

void TItemOpHeroSoulDropInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpHeroSoulDropInfo)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // repeated .pb.TCommonReward RewardArray = 2;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rewardarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpHeroSoulDropInfo)
}

::google::protobuf::uint8* TItemOpHeroSoulDropInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpHeroSoulDropInfo)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // repeated .pb.TCommonReward RewardArray = 2;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rewardarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpHeroSoulDropInfo)
  return target;
}

int TItemOpHeroSoulDropInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  // repeated .pb.TCommonReward RewardArray = 2;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpHeroSoulDropInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpHeroSoulDropInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpHeroSoulDropInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpHeroSoulDropInfo::MergeFrom(const TItemOpHeroSoulDropInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpHeroSoulDropInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpHeroSoulDropInfo::CopyFrom(const TItemOpHeroSoulDropInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpHeroSoulDropInfo::IsInitialized() const {

  return true;
}

void TItemOpHeroSoulDropInfo::Swap(TItemOpHeroSoulDropInfo* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpHeroSoulDropInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpHeroSoulDropInfo_descriptor_;
  metadata.reflection = TItemOpHeroSoulDropInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpIdentifyHeroSoulRsp::kArrDropInfoFieldNumber;
#endif  // !_MSC_VER

TItemOpIdentifyHeroSoulRsp::TItemOpIdentifyHeroSoulRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpIdentifyHeroSoulRsp)
}

void TItemOpIdentifyHeroSoulRsp::InitAsDefaultInstance() {
}

TItemOpIdentifyHeroSoulRsp::TItemOpIdentifyHeroSoulRsp(const TItemOpIdentifyHeroSoulRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpIdentifyHeroSoulRsp)
}

void TItemOpIdentifyHeroSoulRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpIdentifyHeroSoulRsp::~TItemOpIdentifyHeroSoulRsp() {
  // @@protoc_insertion_point(destructor:pb.TItemOpIdentifyHeroSoulRsp)
  SharedDtor();
}

void TItemOpIdentifyHeroSoulRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpIdentifyHeroSoulRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpIdentifyHeroSoulRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpIdentifyHeroSoulRsp_descriptor_;
}

const TItemOpIdentifyHeroSoulRsp& TItemOpIdentifyHeroSoulRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpIdentifyHeroSoulRsp* TItemOpIdentifyHeroSoulRsp::default_instance_ = NULL;

TItemOpIdentifyHeroSoulRsp* TItemOpIdentifyHeroSoulRsp::New() const {
  return new TItemOpIdentifyHeroSoulRsp;
}

void TItemOpIdentifyHeroSoulRsp::Clear() {
  arrdropinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpIdentifyHeroSoulRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpIdentifyHeroSoulRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TItemOpHeroSoulDropInfo ArrDropInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrDropInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrdropinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrDropInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpIdentifyHeroSoulRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpIdentifyHeroSoulRsp)
  return false;
#undef DO_
}

void TItemOpIdentifyHeroSoulRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpIdentifyHeroSoulRsp)
  // repeated .pb.TItemOpHeroSoulDropInfo ArrDropInfo = 1;
  for (int i = 0; i < this->arrdropinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrdropinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpIdentifyHeroSoulRsp)
}

::google::protobuf::uint8* TItemOpIdentifyHeroSoulRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpIdentifyHeroSoulRsp)
  // repeated .pb.TItemOpHeroSoulDropInfo ArrDropInfo = 1;
  for (int i = 0; i < this->arrdropinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrdropinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpIdentifyHeroSoulRsp)
  return target;
}

int TItemOpIdentifyHeroSoulRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TItemOpHeroSoulDropInfo ArrDropInfo = 1;
  total_size += 1 * this->arrdropinfo_size();
  for (int i = 0; i < this->arrdropinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrdropinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpIdentifyHeroSoulRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpIdentifyHeroSoulRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpIdentifyHeroSoulRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpIdentifyHeroSoulRsp::MergeFrom(const TItemOpIdentifyHeroSoulRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrdropinfo_.MergeFrom(from.arrdropinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpIdentifyHeroSoulRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpIdentifyHeroSoulRsp::CopyFrom(const TItemOpIdentifyHeroSoulRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpIdentifyHeroSoulRsp::IsInitialized() const {

  return true;
}

void TItemOpIdentifyHeroSoulRsp::Swap(TItemOpIdentifyHeroSoulRsp* other) {
  if (other != this) {
    arrdropinfo_.Swap(&other->arrdropinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpIdentifyHeroSoulRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpIdentifyHeroSoulRsp_descriptor_;
  metadata.reflection = TItemOpIdentifyHeroSoulRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpBreakArmReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpBreakArmReq::TItemOpBreakArmReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpBreakArmReq)
}

void TItemOpBreakArmReq::InitAsDefaultInstance() {
}

TItemOpBreakArmReq::TItemOpBreakArmReq(const TItemOpBreakArmReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpBreakArmReq)
}

void TItemOpBreakArmReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpBreakArmReq::~TItemOpBreakArmReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpBreakArmReq)
  SharedDtor();
}

void TItemOpBreakArmReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpBreakArmReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpBreakArmReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpBreakArmReq_descriptor_;
}

const TItemOpBreakArmReq& TItemOpBreakArmReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpBreakArmReq* TItemOpBreakArmReq::default_instance_ = NULL;

TItemOpBreakArmReq* TItemOpBreakArmReq::New() const {
  return new TItemOpBreakArmReq;
}

void TItemOpBreakArmReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpBreakArmReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpBreakArmReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpBreakArmReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpBreakArmReq)
  return false;
#undef DO_
}

void TItemOpBreakArmReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpBreakArmReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpBreakArmReq)
}

::google::protobuf::uint8* TItemOpBreakArmReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpBreakArmReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpBreakArmReq)
  return target;
}

int TItemOpBreakArmReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpBreakArmReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpBreakArmReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpBreakArmReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpBreakArmReq::MergeFrom(const TItemOpBreakArmReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpBreakArmReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpBreakArmReq::CopyFrom(const TItemOpBreakArmReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpBreakArmReq::IsInitialized() const {

  return true;
}

void TItemOpBreakArmReq::Swap(TItemOpBreakArmReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpBreakArmReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpBreakArmReq_descriptor_;
  metadata.reflection = TItemOpBreakArmReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpWhiteGoldBreakArmReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpWhiteGoldBreakArmReq::TItemOpWhiteGoldBreakArmReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpWhiteGoldBreakArmReq)
}

void TItemOpWhiteGoldBreakArmReq::InitAsDefaultInstance() {
}

TItemOpWhiteGoldBreakArmReq::TItemOpWhiteGoldBreakArmReq(const TItemOpWhiteGoldBreakArmReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpWhiteGoldBreakArmReq)
}

void TItemOpWhiteGoldBreakArmReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpWhiteGoldBreakArmReq::~TItemOpWhiteGoldBreakArmReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpWhiteGoldBreakArmReq)
  SharedDtor();
}

void TItemOpWhiteGoldBreakArmReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpWhiteGoldBreakArmReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpWhiteGoldBreakArmReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpWhiteGoldBreakArmReq_descriptor_;
}

const TItemOpWhiteGoldBreakArmReq& TItemOpWhiteGoldBreakArmReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpWhiteGoldBreakArmReq* TItemOpWhiteGoldBreakArmReq::default_instance_ = NULL;

TItemOpWhiteGoldBreakArmReq* TItemOpWhiteGoldBreakArmReq::New() const {
  return new TItemOpWhiteGoldBreakArmReq;
}

void TItemOpWhiteGoldBreakArmReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpWhiteGoldBreakArmReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpWhiteGoldBreakArmReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpWhiteGoldBreakArmReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpWhiteGoldBreakArmReq)
  return false;
#undef DO_
}

void TItemOpWhiteGoldBreakArmReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpWhiteGoldBreakArmReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpWhiteGoldBreakArmReq)
}

::google::protobuf::uint8* TItemOpWhiteGoldBreakArmReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpWhiteGoldBreakArmReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpWhiteGoldBreakArmReq)
  return target;
}

int TItemOpWhiteGoldBreakArmReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpWhiteGoldBreakArmReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpWhiteGoldBreakArmReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpWhiteGoldBreakArmReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpWhiteGoldBreakArmReq::MergeFrom(const TItemOpWhiteGoldBreakArmReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpWhiteGoldBreakArmReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpWhiteGoldBreakArmReq::CopyFrom(const TItemOpWhiteGoldBreakArmReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpWhiteGoldBreakArmReq::IsInitialized() const {

  return true;
}

void TItemOpWhiteGoldBreakArmReq::Swap(TItemOpWhiteGoldBreakArmReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpWhiteGoldBreakArmReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpWhiteGoldBreakArmReq_descriptor_;
  metadata.reflection = TItemOpWhiteGoldBreakArmReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpBreakAccessoryReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpBreakAccessoryReq::TItemOpBreakAccessoryReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpBreakAccessoryReq)
}

void TItemOpBreakAccessoryReq::InitAsDefaultInstance() {
}

TItemOpBreakAccessoryReq::TItemOpBreakAccessoryReq(const TItemOpBreakAccessoryReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpBreakAccessoryReq)
}

void TItemOpBreakAccessoryReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpBreakAccessoryReq::~TItemOpBreakAccessoryReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpBreakAccessoryReq)
  SharedDtor();
}

void TItemOpBreakAccessoryReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpBreakAccessoryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpBreakAccessoryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpBreakAccessoryReq_descriptor_;
}

const TItemOpBreakAccessoryReq& TItemOpBreakAccessoryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpBreakAccessoryReq* TItemOpBreakAccessoryReq::default_instance_ = NULL;

TItemOpBreakAccessoryReq* TItemOpBreakAccessoryReq::New() const {
  return new TItemOpBreakAccessoryReq;
}

void TItemOpBreakAccessoryReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpBreakAccessoryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpBreakAccessoryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpBreakAccessoryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpBreakAccessoryReq)
  return false;
#undef DO_
}

void TItemOpBreakAccessoryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpBreakAccessoryReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpBreakAccessoryReq)
}

::google::protobuf::uint8* TItemOpBreakAccessoryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpBreakAccessoryReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpBreakAccessoryReq)
  return target;
}

int TItemOpBreakAccessoryReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpBreakAccessoryReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpBreakAccessoryReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpBreakAccessoryReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpBreakAccessoryReq::MergeFrom(const TItemOpBreakAccessoryReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpBreakAccessoryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpBreakAccessoryReq::CopyFrom(const TItemOpBreakAccessoryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpBreakAccessoryReq::IsInitialized() const {

  return true;
}

void TItemOpBreakAccessoryReq::Swap(TItemOpBreakAccessoryReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpBreakAccessoryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpBreakAccessoryReq_descriptor_;
  metadata.reflection = TItemOpBreakAccessoryReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpWhiteGoldBreakAccessoryReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpWhiteGoldBreakAccessoryReq::TItemOpWhiteGoldBreakAccessoryReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpWhiteGoldBreakAccessoryReq)
}

void TItemOpWhiteGoldBreakAccessoryReq::InitAsDefaultInstance() {
}

TItemOpWhiteGoldBreakAccessoryReq::TItemOpWhiteGoldBreakAccessoryReq(const TItemOpWhiteGoldBreakAccessoryReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpWhiteGoldBreakAccessoryReq)
}

void TItemOpWhiteGoldBreakAccessoryReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpWhiteGoldBreakAccessoryReq::~TItemOpWhiteGoldBreakAccessoryReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpWhiteGoldBreakAccessoryReq)
  SharedDtor();
}

void TItemOpWhiteGoldBreakAccessoryReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpWhiteGoldBreakAccessoryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpWhiteGoldBreakAccessoryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpWhiteGoldBreakAccessoryReq_descriptor_;
}

const TItemOpWhiteGoldBreakAccessoryReq& TItemOpWhiteGoldBreakAccessoryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpWhiteGoldBreakAccessoryReq* TItemOpWhiteGoldBreakAccessoryReq::default_instance_ = NULL;

TItemOpWhiteGoldBreakAccessoryReq* TItemOpWhiteGoldBreakAccessoryReq::New() const {
  return new TItemOpWhiteGoldBreakAccessoryReq;
}

void TItemOpWhiteGoldBreakAccessoryReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpWhiteGoldBreakAccessoryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpWhiteGoldBreakAccessoryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpWhiteGoldBreakAccessoryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpWhiteGoldBreakAccessoryReq)
  return false;
#undef DO_
}

void TItemOpWhiteGoldBreakAccessoryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpWhiteGoldBreakAccessoryReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpWhiteGoldBreakAccessoryReq)
}

::google::protobuf::uint8* TItemOpWhiteGoldBreakAccessoryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpWhiteGoldBreakAccessoryReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpWhiteGoldBreakAccessoryReq)
  return target;
}

int TItemOpWhiteGoldBreakAccessoryReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpWhiteGoldBreakAccessoryReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpWhiteGoldBreakAccessoryReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpWhiteGoldBreakAccessoryReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpWhiteGoldBreakAccessoryReq::MergeFrom(const TItemOpWhiteGoldBreakAccessoryReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpWhiteGoldBreakAccessoryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpWhiteGoldBreakAccessoryReq::CopyFrom(const TItemOpWhiteGoldBreakAccessoryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpWhiteGoldBreakAccessoryReq::IsInitialized() const {

  return true;
}

void TItemOpWhiteGoldBreakAccessoryReq::Swap(TItemOpWhiteGoldBreakAccessoryReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpWhiteGoldBreakAccessoryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpWhiteGoldBreakAccessoryReq_descriptor_;
  metadata.reflection = TItemOpWhiteGoldBreakAccessoryReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpTransformHeroSoulReq::kItemIdFieldNumber;
const int TItemOpTransformHeroSoulReq::kNumFieldNumber;
#endif  // !_MSC_VER

TItemOpTransformHeroSoulReq::TItemOpTransformHeroSoulReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpTransformHeroSoulReq)
}

void TItemOpTransformHeroSoulReq::InitAsDefaultInstance() {
}

TItemOpTransformHeroSoulReq::TItemOpTransformHeroSoulReq(const TItemOpTransformHeroSoulReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpTransformHeroSoulReq)
}

void TItemOpTransformHeroSoulReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpTransformHeroSoulReq::~TItemOpTransformHeroSoulReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpTransformHeroSoulReq)
  SharedDtor();
}

void TItemOpTransformHeroSoulReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpTransformHeroSoulReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpTransformHeroSoulReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpTransformHeroSoulReq_descriptor_;
}

const TItemOpTransformHeroSoulReq& TItemOpTransformHeroSoulReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpTransformHeroSoulReq* TItemOpTransformHeroSoulReq::default_instance_ = NULL;

TItemOpTransformHeroSoulReq* TItemOpTransformHeroSoulReq::New() const {
  return new TItemOpTransformHeroSoulReq;
}

void TItemOpTransformHeroSoulReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpTransformHeroSoulReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpTransformHeroSoulReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpTransformHeroSoulReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpTransformHeroSoulReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpTransformHeroSoulReq)
  return false;
#undef DO_
}

void TItemOpTransformHeroSoulReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpTransformHeroSoulReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpTransformHeroSoulReq)
}

::google::protobuf::uint8* TItemOpTransformHeroSoulReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpTransformHeroSoulReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpTransformHeroSoulReq)
  return target;
}

int TItemOpTransformHeroSoulReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpTransformHeroSoulReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpTransformHeroSoulReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpTransformHeroSoulReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpTransformHeroSoulReq::MergeFrom(const TItemOpTransformHeroSoulReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpTransformHeroSoulReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpTransformHeroSoulReq::CopyFrom(const TItemOpTransformHeroSoulReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpTransformHeroSoulReq::IsInitialized() const {

  return true;
}

void TItemOpTransformHeroSoulReq::Swap(TItemOpTransformHeroSoulReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpTransformHeroSoulReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpTransformHeroSoulReq_descriptor_;
  metadata.reflection = TItemOpTransformHeroSoulReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpTransformHeroSoulRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TItemOpTransformHeroSoulRsp::TItemOpTransformHeroSoulRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpTransformHeroSoulRsp)
}

void TItemOpTransformHeroSoulRsp::InitAsDefaultInstance() {
}

TItemOpTransformHeroSoulRsp::TItemOpTransformHeroSoulRsp(const TItemOpTransformHeroSoulRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpTransformHeroSoulRsp)
}

void TItemOpTransformHeroSoulRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpTransformHeroSoulRsp::~TItemOpTransformHeroSoulRsp() {
  // @@protoc_insertion_point(destructor:pb.TItemOpTransformHeroSoulRsp)
  SharedDtor();
}

void TItemOpTransformHeroSoulRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpTransformHeroSoulRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpTransformHeroSoulRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpTransformHeroSoulRsp_descriptor_;
}

const TItemOpTransformHeroSoulRsp& TItemOpTransformHeroSoulRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpTransformHeroSoulRsp* TItemOpTransformHeroSoulRsp::default_instance_ = NULL;

TItemOpTransformHeroSoulRsp* TItemOpTransformHeroSoulRsp::New() const {
  return new TItemOpTransformHeroSoulRsp;
}

void TItemOpTransformHeroSoulRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpTransformHeroSoulRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpTransformHeroSoulRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward arrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_arrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_arrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpTransformHeroSoulRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpTransformHeroSoulRsp)
  return false;
#undef DO_
}

void TItemOpTransformHeroSoulRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpTransformHeroSoulRsp)
  // repeated .pb.TCommonReward arrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpTransformHeroSoulRsp)
}

::google::protobuf::uint8* TItemOpTransformHeroSoulRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpTransformHeroSoulRsp)
  // repeated .pb.TCommonReward arrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpTransformHeroSoulRsp)
  return target;
}

int TItemOpTransformHeroSoulRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward arrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpTransformHeroSoulRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpTransformHeroSoulRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpTransformHeroSoulRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpTransformHeroSoulRsp::MergeFrom(const TItemOpTransformHeroSoulRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpTransformHeroSoulRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpTransformHeroSoulRsp::CopyFrom(const TItemOpTransformHeroSoulRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpTransformHeroSoulRsp::IsInitialized() const {

  return true;
}

void TItemOpTransformHeroSoulRsp::Swap(TItemOpTransformHeroSoulRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpTransformHeroSoulRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpTransformHeroSoulRsp_descriptor_;
  metadata.reflection = TItemOpTransformHeroSoulRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpMountEquipLvUpReq::kItemIdFieldNumber;
const int TItemOpMountEquipLvUpReq::kUpLevelFieldNumber;
#endif  // !_MSC_VER

TItemOpMountEquipLvUpReq::TItemOpMountEquipLvUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpMountEquipLvUpReq)
}

void TItemOpMountEquipLvUpReq::InitAsDefaultInstance() {
}

TItemOpMountEquipLvUpReq::TItemOpMountEquipLvUpReq(const TItemOpMountEquipLvUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpMountEquipLvUpReq)
}

void TItemOpMountEquipLvUpReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  uplevel_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpMountEquipLvUpReq::~TItemOpMountEquipLvUpReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpMountEquipLvUpReq)
  SharedDtor();
}

void TItemOpMountEquipLvUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpMountEquipLvUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpMountEquipLvUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpMountEquipLvUpReq_descriptor_;
}

const TItemOpMountEquipLvUpReq& TItemOpMountEquipLvUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpMountEquipLvUpReq* TItemOpMountEquipLvUpReq::default_instance_ = NULL;

TItemOpMountEquipLvUpReq* TItemOpMountEquipLvUpReq::New() const {
  return new TItemOpMountEquipLvUpReq;
}

void TItemOpMountEquipLvUpReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpMountEquipLvUpReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, uplevel_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpMountEquipLvUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpMountEquipLvUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_UpLevel;
        break;
      }

      // optional uint32 UpLevel = 2;
      case 2: {
        if (tag == 16) {
         parse_UpLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uplevel_)));
          set_has_uplevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpMountEquipLvUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpMountEquipLvUpReq)
  return false;
#undef DO_
}

void TItemOpMountEquipLvUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpMountEquipLvUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 UpLevel = 2;
  if (has_uplevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uplevel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpMountEquipLvUpReq)
}

::google::protobuf::uint8* TItemOpMountEquipLvUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpMountEquipLvUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 UpLevel = 2;
  if (has_uplevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uplevel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpMountEquipLvUpReq)
  return target;
}

int TItemOpMountEquipLvUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 UpLevel = 2;
    if (has_uplevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uplevel());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpMountEquipLvUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpMountEquipLvUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpMountEquipLvUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpMountEquipLvUpReq::MergeFrom(const TItemOpMountEquipLvUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_uplevel()) {
      set_uplevel(from.uplevel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpMountEquipLvUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpMountEquipLvUpReq::CopyFrom(const TItemOpMountEquipLvUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpMountEquipLvUpReq::IsInitialized() const {

  return true;
}

void TItemOpMountEquipLvUpReq::Swap(TItemOpMountEquipLvUpReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(uplevel_, other->uplevel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpMountEquipLvUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpMountEquipLvUpReq_descriptor_;
  metadata.reflection = TItemOpMountEquipLvUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpGoldTransformExclEquipReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpGoldTransformExclEquipReq::TItemOpGoldTransformExclEquipReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpGoldTransformExclEquipReq)
}

void TItemOpGoldTransformExclEquipReq::InitAsDefaultInstance() {
}

TItemOpGoldTransformExclEquipReq::TItemOpGoldTransformExclEquipReq(const TItemOpGoldTransformExclEquipReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpGoldTransformExclEquipReq)
}

void TItemOpGoldTransformExclEquipReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpGoldTransformExclEquipReq::~TItemOpGoldTransformExclEquipReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpGoldTransformExclEquipReq)
  SharedDtor();
}

void TItemOpGoldTransformExclEquipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpGoldTransformExclEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpGoldTransformExclEquipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpGoldTransformExclEquipReq_descriptor_;
}

const TItemOpGoldTransformExclEquipReq& TItemOpGoldTransformExclEquipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpGoldTransformExclEquipReq* TItemOpGoldTransformExclEquipReq::default_instance_ = NULL;

TItemOpGoldTransformExclEquipReq* TItemOpGoldTransformExclEquipReq::New() const {
  return new TItemOpGoldTransformExclEquipReq;
}

void TItemOpGoldTransformExclEquipReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpGoldTransformExclEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpGoldTransformExclEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpGoldTransformExclEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpGoldTransformExclEquipReq)
  return false;
#undef DO_
}

void TItemOpGoldTransformExclEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpGoldTransformExclEquipReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpGoldTransformExclEquipReq)
}

::google::protobuf::uint8* TItemOpGoldTransformExclEquipReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpGoldTransformExclEquipReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpGoldTransformExclEquipReq)
  return target;
}

int TItemOpGoldTransformExclEquipReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpGoldTransformExclEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpGoldTransformExclEquipReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpGoldTransformExclEquipReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpGoldTransformExclEquipReq::MergeFrom(const TItemOpGoldTransformExclEquipReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpGoldTransformExclEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpGoldTransformExclEquipReq::CopyFrom(const TItemOpGoldTransformExclEquipReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpGoldTransformExclEquipReq::IsInitialized() const {

  return true;
}

void TItemOpGoldTransformExclEquipReq::Swap(TItemOpGoldTransformExclEquipReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpGoldTransformExclEquipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpGoldTransformExclEquipReq_descriptor_;
  metadata.reflection = TItemOpGoldTransformExclEquipReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpEngraveExclEquipReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpEngraveExclEquipReq::TItemOpEngraveExclEquipReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpEngraveExclEquipReq)
}

void TItemOpEngraveExclEquipReq::InitAsDefaultInstance() {
}

TItemOpEngraveExclEquipReq::TItemOpEngraveExclEquipReq(const TItemOpEngraveExclEquipReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpEngraveExclEquipReq)
}

void TItemOpEngraveExclEquipReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpEngraveExclEquipReq::~TItemOpEngraveExclEquipReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpEngraveExclEquipReq)
  SharedDtor();
}

void TItemOpEngraveExclEquipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpEngraveExclEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpEngraveExclEquipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpEngraveExclEquipReq_descriptor_;
}

const TItemOpEngraveExclEquipReq& TItemOpEngraveExclEquipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpEngraveExclEquipReq* TItemOpEngraveExclEquipReq::default_instance_ = NULL;

TItemOpEngraveExclEquipReq* TItemOpEngraveExclEquipReq::New() const {
  return new TItemOpEngraveExclEquipReq;
}

void TItemOpEngraveExclEquipReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpEngraveExclEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpEngraveExclEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpEngraveExclEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpEngraveExclEquipReq)
  return false;
#undef DO_
}

void TItemOpEngraveExclEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpEngraveExclEquipReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpEngraveExclEquipReq)
}

::google::protobuf::uint8* TItemOpEngraveExclEquipReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpEngraveExclEquipReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpEngraveExclEquipReq)
  return target;
}

int TItemOpEngraveExclEquipReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpEngraveExclEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpEngraveExclEquipReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpEngraveExclEquipReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpEngraveExclEquipReq::MergeFrom(const TItemOpEngraveExclEquipReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpEngraveExclEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpEngraveExclEquipReq::CopyFrom(const TItemOpEngraveExclEquipReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpEngraveExclEquipReq::IsInitialized() const {

  return true;
}

void TItemOpEngraveExclEquipReq::Swap(TItemOpEngraveExclEquipReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpEngraveExclEquipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpEngraveExclEquipReq_descriptor_;
  metadata.reflection = TItemOpEngraveExclEquipReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpTreasureActivateReq::kTidFieldNumber;
#endif  // !_MSC_VER

TItemOpTreasureActivateReq::TItemOpTreasureActivateReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpTreasureActivateReq)
}

void TItemOpTreasureActivateReq::InitAsDefaultInstance() {
}

TItemOpTreasureActivateReq::TItemOpTreasureActivateReq(const TItemOpTreasureActivateReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpTreasureActivateReq)
}

void TItemOpTreasureActivateReq::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpTreasureActivateReq::~TItemOpTreasureActivateReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpTreasureActivateReq)
  SharedDtor();
}

void TItemOpTreasureActivateReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpTreasureActivateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpTreasureActivateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpTreasureActivateReq_descriptor_;
}

const TItemOpTreasureActivateReq& TItemOpTreasureActivateReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpTreasureActivateReq* TItemOpTreasureActivateReq::default_instance_ = NULL;

TItemOpTreasureActivateReq* TItemOpTreasureActivateReq::New() const {
  return new TItemOpTreasureActivateReq;
}

void TItemOpTreasureActivateReq::Clear() {
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpTreasureActivateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpTreasureActivateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpTreasureActivateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpTreasureActivateReq)
  return false;
#undef DO_
}

void TItemOpTreasureActivateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpTreasureActivateReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpTreasureActivateReq)
}

::google::protobuf::uint8* TItemOpTreasureActivateReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpTreasureActivateReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpTreasureActivateReq)
  return target;
}

int TItemOpTreasureActivateReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpTreasureActivateReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpTreasureActivateReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpTreasureActivateReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpTreasureActivateReq::MergeFrom(const TItemOpTreasureActivateReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpTreasureActivateReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpTreasureActivateReq::CopyFrom(const TItemOpTreasureActivateReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpTreasureActivateReq::IsInitialized() const {

  return true;
}

void TItemOpTreasureActivateReq::Swap(TItemOpTreasureActivateReq* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpTreasureActivateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpTreasureActivateReq_descriptor_;
  metadata.reflection = TItemOpTreasureActivateReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpTreasureFragmentItem::kTidFieldNumber;
const int TItemOpTreasureFragmentItem::kNumFieldNumber;
#endif  // !_MSC_VER

TItemOpTreasureFragmentItem::TItemOpTreasureFragmentItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpTreasureFragmentItem)
}

void TItemOpTreasureFragmentItem::InitAsDefaultInstance() {
}

TItemOpTreasureFragmentItem::TItemOpTreasureFragmentItem(const TItemOpTreasureFragmentItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpTreasureFragmentItem)
}

void TItemOpTreasureFragmentItem::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpTreasureFragmentItem::~TItemOpTreasureFragmentItem() {
  // @@protoc_insertion_point(destructor:pb.TItemOpTreasureFragmentItem)
  SharedDtor();
}

void TItemOpTreasureFragmentItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpTreasureFragmentItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpTreasureFragmentItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpTreasureFragmentItem_descriptor_;
}

const TItemOpTreasureFragmentItem& TItemOpTreasureFragmentItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpTreasureFragmentItem* TItemOpTreasureFragmentItem::default_instance_ = NULL;

TItemOpTreasureFragmentItem* TItemOpTreasureFragmentItem::New() const {
  return new TItemOpTreasureFragmentItem;
}

void TItemOpTreasureFragmentItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpTreasureFragmentItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpTreasureFragmentItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpTreasureFragmentItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpTreasureFragmentItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpTreasureFragmentItem)
  return false;
#undef DO_
}

void TItemOpTreasureFragmentItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpTreasureFragmentItem)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpTreasureFragmentItem)
}

::google::protobuf::uint8* TItemOpTreasureFragmentItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpTreasureFragmentItem)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpTreasureFragmentItem)
  return target;
}

int TItemOpTreasureFragmentItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpTreasureFragmentItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpTreasureFragmentItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpTreasureFragmentItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpTreasureFragmentItem::MergeFrom(const TItemOpTreasureFragmentItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpTreasureFragmentItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpTreasureFragmentItem::CopyFrom(const TItemOpTreasureFragmentItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpTreasureFragmentItem::IsInitialized() const {

  return true;
}

void TItemOpTreasureFragmentItem::Swap(TItemOpTreasureFragmentItem* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpTreasureFragmentItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpTreasureFragmentItem_descriptor_;
  metadata.reflection = TItemOpTreasureFragmentItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpTreasureStarLevelUpReq::kItemIdFieldNumber;
const int TItemOpTreasureStarLevelUpReq::kConsumArrFieldNumber;
#endif  // !_MSC_VER

TItemOpTreasureStarLevelUpReq::TItemOpTreasureStarLevelUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpTreasureStarLevelUpReq)
}

void TItemOpTreasureStarLevelUpReq::InitAsDefaultInstance() {
}

TItemOpTreasureStarLevelUpReq::TItemOpTreasureStarLevelUpReq(const TItemOpTreasureStarLevelUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpTreasureStarLevelUpReq)
}

void TItemOpTreasureStarLevelUpReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpTreasureStarLevelUpReq::~TItemOpTreasureStarLevelUpReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpTreasureStarLevelUpReq)
  SharedDtor();
}

void TItemOpTreasureStarLevelUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpTreasureStarLevelUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpTreasureStarLevelUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpTreasureStarLevelUpReq_descriptor_;
}

const TItemOpTreasureStarLevelUpReq& TItemOpTreasureStarLevelUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpTreasureStarLevelUpReq* TItemOpTreasureStarLevelUpReq::default_instance_ = NULL;

TItemOpTreasureStarLevelUpReq* TItemOpTreasureStarLevelUpReq::New() const {
  return new TItemOpTreasureStarLevelUpReq;
}

void TItemOpTreasureStarLevelUpReq::Clear() {
  itemid_ = 0u;
  consumarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpTreasureStarLevelUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpTreasureStarLevelUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ConsumArr;
        break;
      }

      // repeated .pb.TItemOpTreasureFragmentItem ConsumArr = 2;
      case 2: {
        if (tag == 18) {
         parse_ConsumArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_consumarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ConsumArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpTreasureStarLevelUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpTreasureStarLevelUpReq)
  return false;
#undef DO_
}

void TItemOpTreasureStarLevelUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpTreasureStarLevelUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // repeated .pb.TItemOpTreasureFragmentItem ConsumArr = 2;
  for (int i = 0; i < this->consumarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->consumarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpTreasureStarLevelUpReq)
}

::google::protobuf::uint8* TItemOpTreasureStarLevelUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpTreasureStarLevelUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // repeated .pb.TItemOpTreasureFragmentItem ConsumArr = 2;
  for (int i = 0; i < this->consumarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->consumarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpTreasureStarLevelUpReq)
  return target;
}

int TItemOpTreasureStarLevelUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  // repeated .pb.TItemOpTreasureFragmentItem ConsumArr = 2;
  total_size += 1 * this->consumarr_size();
  for (int i = 0; i < this->consumarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->consumarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpTreasureStarLevelUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpTreasureStarLevelUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpTreasureStarLevelUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpTreasureStarLevelUpReq::MergeFrom(const TItemOpTreasureStarLevelUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  consumarr_.MergeFrom(from.consumarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpTreasureStarLevelUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpTreasureStarLevelUpReq::CopyFrom(const TItemOpTreasureStarLevelUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpTreasureStarLevelUpReq::IsInitialized() const {

  return true;
}

void TItemOpTreasureStarLevelUpReq::Swap(TItemOpTreasureStarLevelUpReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    consumarr_.Swap(&other->consumarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpTreasureStarLevelUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpTreasureStarLevelUpReq_descriptor_;
  metadata.reflection = TItemOpTreasureStarLevelUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpTreasureAwakeReq::kItemIdFieldNumber;
const int TItemOpTreasureAwakeReq::kConsumArrFieldNumber;
#endif  // !_MSC_VER

TItemOpTreasureAwakeReq::TItemOpTreasureAwakeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpTreasureAwakeReq)
}

void TItemOpTreasureAwakeReq::InitAsDefaultInstance() {
}

TItemOpTreasureAwakeReq::TItemOpTreasureAwakeReq(const TItemOpTreasureAwakeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpTreasureAwakeReq)
}

void TItemOpTreasureAwakeReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpTreasureAwakeReq::~TItemOpTreasureAwakeReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpTreasureAwakeReq)
  SharedDtor();
}

void TItemOpTreasureAwakeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpTreasureAwakeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpTreasureAwakeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpTreasureAwakeReq_descriptor_;
}

const TItemOpTreasureAwakeReq& TItemOpTreasureAwakeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpTreasureAwakeReq* TItemOpTreasureAwakeReq::default_instance_ = NULL;

TItemOpTreasureAwakeReq* TItemOpTreasureAwakeReq::New() const {
  return new TItemOpTreasureAwakeReq;
}

void TItemOpTreasureAwakeReq::Clear() {
  itemid_ = 0u;
  consumarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpTreasureAwakeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpTreasureAwakeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ConsumArr;
        break;
      }

      // repeated .pb.TItemOpTreasureFragmentItem ConsumArr = 2;
      case 2: {
        if (tag == 18) {
         parse_ConsumArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_consumarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ConsumArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpTreasureAwakeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpTreasureAwakeReq)
  return false;
#undef DO_
}

void TItemOpTreasureAwakeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpTreasureAwakeReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // repeated .pb.TItemOpTreasureFragmentItem ConsumArr = 2;
  for (int i = 0; i < this->consumarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->consumarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpTreasureAwakeReq)
}

::google::protobuf::uint8* TItemOpTreasureAwakeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpTreasureAwakeReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // repeated .pb.TItemOpTreasureFragmentItem ConsumArr = 2;
  for (int i = 0; i < this->consumarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->consumarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpTreasureAwakeReq)
  return target;
}

int TItemOpTreasureAwakeReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  // repeated .pb.TItemOpTreasureFragmentItem ConsumArr = 2;
  total_size += 1 * this->consumarr_size();
  for (int i = 0; i < this->consumarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->consumarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpTreasureAwakeReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpTreasureAwakeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpTreasureAwakeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpTreasureAwakeReq::MergeFrom(const TItemOpTreasureAwakeReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  consumarr_.MergeFrom(from.consumarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpTreasureAwakeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpTreasureAwakeReq::CopyFrom(const TItemOpTreasureAwakeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpTreasureAwakeReq::IsInitialized() const {

  return true;
}

void TItemOpTreasureAwakeReq::Swap(TItemOpTreasureAwakeReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    consumarr_.Swap(&other->consumarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpTreasureAwakeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpTreasureAwakeReq_descriptor_;
  metadata.reflection = TItemOpTreasureAwakeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpSilkBagEnhanceReq::kItemIdFieldNumber;
const int TItemOpSilkBagEnhanceReq::kEnhanceNumFieldNumber;
#endif  // !_MSC_VER

TItemOpSilkBagEnhanceReq::TItemOpSilkBagEnhanceReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpSilkBagEnhanceReq)
}

void TItemOpSilkBagEnhanceReq::InitAsDefaultInstance() {
}

TItemOpSilkBagEnhanceReq::TItemOpSilkBagEnhanceReq(const TItemOpSilkBagEnhanceReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpSilkBagEnhanceReq)
}

void TItemOpSilkBagEnhanceReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  enhancenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpSilkBagEnhanceReq::~TItemOpSilkBagEnhanceReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpSilkBagEnhanceReq)
  SharedDtor();
}

void TItemOpSilkBagEnhanceReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpSilkBagEnhanceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpSilkBagEnhanceReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpSilkBagEnhanceReq_descriptor_;
}

const TItemOpSilkBagEnhanceReq& TItemOpSilkBagEnhanceReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpSilkBagEnhanceReq* TItemOpSilkBagEnhanceReq::default_instance_ = NULL;

TItemOpSilkBagEnhanceReq* TItemOpSilkBagEnhanceReq::New() const {
  return new TItemOpSilkBagEnhanceReq;
}

void TItemOpSilkBagEnhanceReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpSilkBagEnhanceReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, enhancenum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpSilkBagEnhanceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpSilkBagEnhanceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_EnhanceNum;
        break;
      }

      // optional uint32 EnhanceNum = 2;
      case 2: {
        if (tag == 16) {
         parse_EnhanceNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enhancenum_)));
          set_has_enhancenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpSilkBagEnhanceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpSilkBagEnhanceReq)
  return false;
#undef DO_
}

void TItemOpSilkBagEnhanceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpSilkBagEnhanceReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 EnhanceNum = 2;
  if (has_enhancenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->enhancenum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpSilkBagEnhanceReq)
}

::google::protobuf::uint8* TItemOpSilkBagEnhanceReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpSilkBagEnhanceReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 EnhanceNum = 2;
  if (has_enhancenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->enhancenum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpSilkBagEnhanceReq)
  return target;
}

int TItemOpSilkBagEnhanceReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 EnhanceNum = 2;
    if (has_enhancenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->enhancenum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpSilkBagEnhanceReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpSilkBagEnhanceReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpSilkBagEnhanceReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpSilkBagEnhanceReq::MergeFrom(const TItemOpSilkBagEnhanceReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_enhancenum()) {
      set_enhancenum(from.enhancenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpSilkBagEnhanceReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpSilkBagEnhanceReq::CopyFrom(const TItemOpSilkBagEnhanceReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpSilkBagEnhanceReq::IsInitialized() const {

  return true;
}

void TItemOpSilkBagEnhanceReq::Swap(TItemOpSilkBagEnhanceReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(enhancenum_, other->enhancenum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpSilkBagEnhanceReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpSilkBagEnhanceReq_descriptor_;
  metadata.reflection = TItemOpSilkBagEnhanceReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpSilkBagStarUpReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpSilkBagStarUpReq::TItemOpSilkBagStarUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpSilkBagStarUpReq)
}

void TItemOpSilkBagStarUpReq::InitAsDefaultInstance() {
}

TItemOpSilkBagStarUpReq::TItemOpSilkBagStarUpReq(const TItemOpSilkBagStarUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpSilkBagStarUpReq)
}

void TItemOpSilkBagStarUpReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpSilkBagStarUpReq::~TItemOpSilkBagStarUpReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpSilkBagStarUpReq)
  SharedDtor();
}

void TItemOpSilkBagStarUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpSilkBagStarUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpSilkBagStarUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpSilkBagStarUpReq_descriptor_;
}

const TItemOpSilkBagStarUpReq& TItemOpSilkBagStarUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpSilkBagStarUpReq* TItemOpSilkBagStarUpReq::default_instance_ = NULL;

TItemOpSilkBagStarUpReq* TItemOpSilkBagStarUpReq::New() const {
  return new TItemOpSilkBagStarUpReq;
}

void TItemOpSilkBagStarUpReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpSilkBagStarUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpSilkBagStarUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpSilkBagStarUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpSilkBagStarUpReq)
  return false;
#undef DO_
}

void TItemOpSilkBagStarUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpSilkBagStarUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpSilkBagStarUpReq)
}

::google::protobuf::uint8* TItemOpSilkBagStarUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpSilkBagStarUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpSilkBagStarUpReq)
  return target;
}

int TItemOpSilkBagStarUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpSilkBagStarUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpSilkBagStarUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpSilkBagStarUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpSilkBagStarUpReq::MergeFrom(const TItemOpSilkBagStarUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpSilkBagStarUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpSilkBagStarUpReq::CopyFrom(const TItemOpSilkBagStarUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpSilkBagStarUpReq::IsInitialized() const {

  return true;
}

void TItemOpSilkBagStarUpReq::Swap(TItemOpSilkBagStarUpReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpSilkBagStarUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpSilkBagStarUpReq_descriptor_;
  metadata.reflection = TItemOpSilkBagStarUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpTreasureStoneCombineReq::kStoneTidFieldNumber;
const int TItemOpTreasureStoneCombineReq::kConsumNumFieldNumber;
#endif  // !_MSC_VER

TItemOpTreasureStoneCombineReq::TItemOpTreasureStoneCombineReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpTreasureStoneCombineReq)
}

void TItemOpTreasureStoneCombineReq::InitAsDefaultInstance() {
}

TItemOpTreasureStoneCombineReq::TItemOpTreasureStoneCombineReq(const TItemOpTreasureStoneCombineReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpTreasureStoneCombineReq)
}

void TItemOpTreasureStoneCombineReq::SharedCtor() {
  _cached_size_ = 0;
  stonetid_ = 0u;
  consumnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpTreasureStoneCombineReq::~TItemOpTreasureStoneCombineReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpTreasureStoneCombineReq)
  SharedDtor();
}

void TItemOpTreasureStoneCombineReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpTreasureStoneCombineReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpTreasureStoneCombineReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpTreasureStoneCombineReq_descriptor_;
}

const TItemOpTreasureStoneCombineReq& TItemOpTreasureStoneCombineReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpTreasureStoneCombineReq* TItemOpTreasureStoneCombineReq::default_instance_ = NULL;

TItemOpTreasureStoneCombineReq* TItemOpTreasureStoneCombineReq::New() const {
  return new TItemOpTreasureStoneCombineReq;
}

void TItemOpTreasureStoneCombineReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpTreasureStoneCombineReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(stonetid_, consumnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpTreasureStoneCombineReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpTreasureStoneCombineReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 StoneTid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stonetid_)));
          set_has_stonetid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ConsumNum;
        break;
      }

      // optional uint32 ConsumNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ConsumNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consumnum_)));
          set_has_consumnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpTreasureStoneCombineReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpTreasureStoneCombineReq)
  return false;
#undef DO_
}

void TItemOpTreasureStoneCombineReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpTreasureStoneCombineReq)
  // optional uint32 StoneTid = 1;
  if (has_stonetid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stonetid(), output);
  }

  // optional uint32 ConsumNum = 2;
  if (has_consumnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->consumnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpTreasureStoneCombineReq)
}

::google::protobuf::uint8* TItemOpTreasureStoneCombineReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpTreasureStoneCombineReq)
  // optional uint32 StoneTid = 1;
  if (has_stonetid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stonetid(), target);
  }

  // optional uint32 ConsumNum = 2;
  if (has_consumnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->consumnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpTreasureStoneCombineReq)
  return target;
}

int TItemOpTreasureStoneCombineReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 StoneTid = 1;
    if (has_stonetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stonetid());
    }

    // optional uint32 ConsumNum = 2;
    if (has_consumnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->consumnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpTreasureStoneCombineReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpTreasureStoneCombineReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpTreasureStoneCombineReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpTreasureStoneCombineReq::MergeFrom(const TItemOpTreasureStoneCombineReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stonetid()) {
      set_stonetid(from.stonetid());
    }
    if (from.has_consumnum()) {
      set_consumnum(from.consumnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpTreasureStoneCombineReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpTreasureStoneCombineReq::CopyFrom(const TItemOpTreasureStoneCombineReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpTreasureStoneCombineReq::IsInitialized() const {

  return true;
}

void TItemOpTreasureStoneCombineReq::Swap(TItemOpTreasureStoneCombineReq* other) {
  if (other != this) {
    std::swap(stonetid_, other->stonetid_);
    std::swap(consumnum_, other->consumnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpTreasureStoneCombineReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpTreasureStoneCombineReq_descriptor_;
  metadata.reflection = TItemOpTreasureStoneCombineReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpRefineArmLvReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpRefineArmLvReq::TItemOpRefineArmLvReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpRefineArmLvReq)
}

void TItemOpRefineArmLvReq::InitAsDefaultInstance() {
}

TItemOpRefineArmLvReq::TItemOpRefineArmLvReq(const TItemOpRefineArmLvReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpRefineArmLvReq)
}

void TItemOpRefineArmLvReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpRefineArmLvReq::~TItemOpRefineArmLvReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpRefineArmLvReq)
  SharedDtor();
}

void TItemOpRefineArmLvReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpRefineArmLvReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpRefineArmLvReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpRefineArmLvReq_descriptor_;
}

const TItemOpRefineArmLvReq& TItemOpRefineArmLvReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpRefineArmLvReq* TItemOpRefineArmLvReq::default_instance_ = NULL;

TItemOpRefineArmLvReq* TItemOpRefineArmLvReq::New() const {
  return new TItemOpRefineArmLvReq;
}

void TItemOpRefineArmLvReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpRefineArmLvReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpRefineArmLvReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpRefineArmLvReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpRefineArmLvReq)
  return false;
#undef DO_
}

void TItemOpRefineArmLvReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpRefineArmLvReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpRefineArmLvReq)
}

::google::protobuf::uint8* TItemOpRefineArmLvReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpRefineArmLvReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpRefineArmLvReq)
  return target;
}

int TItemOpRefineArmLvReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpRefineArmLvReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpRefineArmLvReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpRefineArmLvReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpRefineArmLvReq::MergeFrom(const TItemOpRefineArmLvReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpRefineArmLvReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpRefineArmLvReq::CopyFrom(const TItemOpRefineArmLvReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpRefineArmLvReq::IsInitialized() const {

  return true;
}

void TItemOpRefineArmLvReq::Swap(TItemOpRefineArmLvReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpRefineArmLvReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpRefineArmLvReq_descriptor_;
  metadata.reflection = TItemOpRefineArmLvReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpRefineAccessoryLvReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpRefineAccessoryLvReq::TItemOpRefineAccessoryLvReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpRefineAccessoryLvReq)
}

void TItemOpRefineAccessoryLvReq::InitAsDefaultInstance() {
}

TItemOpRefineAccessoryLvReq::TItemOpRefineAccessoryLvReq(const TItemOpRefineAccessoryLvReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpRefineAccessoryLvReq)
}

void TItemOpRefineAccessoryLvReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpRefineAccessoryLvReq::~TItemOpRefineAccessoryLvReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpRefineAccessoryLvReq)
  SharedDtor();
}

void TItemOpRefineAccessoryLvReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpRefineAccessoryLvReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpRefineAccessoryLvReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpRefineAccessoryLvReq_descriptor_;
}

const TItemOpRefineAccessoryLvReq& TItemOpRefineAccessoryLvReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpRefineAccessoryLvReq* TItemOpRefineAccessoryLvReq::default_instance_ = NULL;

TItemOpRefineAccessoryLvReq* TItemOpRefineAccessoryLvReq::New() const {
  return new TItemOpRefineAccessoryLvReq;
}

void TItemOpRefineAccessoryLvReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpRefineAccessoryLvReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpRefineAccessoryLvReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpRefineAccessoryLvReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpRefineAccessoryLvReq)
  return false;
#undef DO_
}

void TItemOpRefineAccessoryLvReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpRefineAccessoryLvReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpRefineAccessoryLvReq)
}

::google::protobuf::uint8* TItemOpRefineAccessoryLvReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpRefineAccessoryLvReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpRefineAccessoryLvReq)
  return target;
}

int TItemOpRefineAccessoryLvReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpRefineAccessoryLvReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpRefineAccessoryLvReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpRefineAccessoryLvReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpRefineAccessoryLvReq::MergeFrom(const TItemOpRefineAccessoryLvReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpRefineAccessoryLvReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpRefineAccessoryLvReq::CopyFrom(const TItemOpRefineAccessoryLvReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpRefineAccessoryLvReq::IsInitialized() const {

  return true;
}

void TItemOpRefineAccessoryLvReq::Swap(TItemOpRefineAccessoryLvReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpRefineAccessoryLvReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpRefineAccessoryLvReq_descriptor_;
  metadata.reflection = TItemOpRefineAccessoryLvReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpArmCarveReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpArmCarveReq::TItemOpArmCarveReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpArmCarveReq)
}

void TItemOpArmCarveReq::InitAsDefaultInstance() {
}

TItemOpArmCarveReq::TItemOpArmCarveReq(const TItemOpArmCarveReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpArmCarveReq)
}

void TItemOpArmCarveReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpArmCarveReq::~TItemOpArmCarveReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpArmCarveReq)
  SharedDtor();
}

void TItemOpArmCarveReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpArmCarveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpArmCarveReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpArmCarveReq_descriptor_;
}

const TItemOpArmCarveReq& TItemOpArmCarveReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpArmCarveReq* TItemOpArmCarveReq::default_instance_ = NULL;

TItemOpArmCarveReq* TItemOpArmCarveReq::New() const {
  return new TItemOpArmCarveReq;
}

void TItemOpArmCarveReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpArmCarveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpArmCarveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpArmCarveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpArmCarveReq)
  return false;
#undef DO_
}

void TItemOpArmCarveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpArmCarveReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpArmCarveReq)
}

::google::protobuf::uint8* TItemOpArmCarveReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpArmCarveReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpArmCarveReq)
  return target;
}

int TItemOpArmCarveReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpArmCarveReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpArmCarveReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpArmCarveReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpArmCarveReq::MergeFrom(const TItemOpArmCarveReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpArmCarveReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpArmCarveReq::CopyFrom(const TItemOpArmCarveReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpArmCarveReq::IsInitialized() const {

  return true;
}

void TItemOpArmCarveReq::Swap(TItemOpArmCarveReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpArmCarveReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpArmCarveReq_descriptor_;
  metadata.reflection = TItemOpArmCarveReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpDecorationItem::kTidFieldNumber;
const int TItemOpDecorationItem::kNumFieldNumber;
#endif  // !_MSC_VER

TItemOpDecorationItem::TItemOpDecorationItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpDecorationItem)
}

void TItemOpDecorationItem::InitAsDefaultInstance() {
}

TItemOpDecorationItem::TItemOpDecorationItem(const TItemOpDecorationItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpDecorationItem)
}

void TItemOpDecorationItem::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpDecorationItem::~TItemOpDecorationItem() {
  // @@protoc_insertion_point(destructor:pb.TItemOpDecorationItem)
  SharedDtor();
}

void TItemOpDecorationItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpDecorationItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpDecorationItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpDecorationItem_descriptor_;
}

const TItemOpDecorationItem& TItemOpDecorationItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpDecorationItem* TItemOpDecorationItem::default_instance_ = NULL;

TItemOpDecorationItem* TItemOpDecorationItem::New() const {
  return new TItemOpDecorationItem;
}

void TItemOpDecorationItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpDecorationItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(tid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpDecorationItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpDecorationItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpDecorationItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpDecorationItem)
  return false;
#undef DO_
}

void TItemOpDecorationItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpDecorationItem)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpDecorationItem)
}

::google::protobuf::uint8* TItemOpDecorationItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpDecorationItem)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpDecorationItem)
  return target;
}

int TItemOpDecorationItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpDecorationItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpDecorationItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpDecorationItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpDecorationItem::MergeFrom(const TItemOpDecorationItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpDecorationItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpDecorationItem::CopyFrom(const TItemOpDecorationItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpDecorationItem::IsInitialized() const {

  return true;
}

void TItemOpDecorationItem::Swap(TItemOpDecorationItem* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpDecorationItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpDecorationItem_descriptor_;
  metadata.reflection = TItemOpDecorationItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpDecorationStarLevelUpReq::kItemIdFieldNumber;
const int TItemOpDecorationStarLevelUpReq::kConsumeItemArrFieldNumber;
#endif  // !_MSC_VER

TItemOpDecorationStarLevelUpReq::TItemOpDecorationStarLevelUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpDecorationStarLevelUpReq)
}

void TItemOpDecorationStarLevelUpReq::InitAsDefaultInstance() {
}

TItemOpDecorationStarLevelUpReq::TItemOpDecorationStarLevelUpReq(const TItemOpDecorationStarLevelUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpDecorationStarLevelUpReq)
}

void TItemOpDecorationStarLevelUpReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpDecorationStarLevelUpReq::~TItemOpDecorationStarLevelUpReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpDecorationStarLevelUpReq)
  SharedDtor();
}

void TItemOpDecorationStarLevelUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpDecorationStarLevelUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpDecorationStarLevelUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpDecorationStarLevelUpReq_descriptor_;
}

const TItemOpDecorationStarLevelUpReq& TItemOpDecorationStarLevelUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpDecorationStarLevelUpReq* TItemOpDecorationStarLevelUpReq::default_instance_ = NULL;

TItemOpDecorationStarLevelUpReq* TItemOpDecorationStarLevelUpReq::New() const {
  return new TItemOpDecorationStarLevelUpReq;
}

void TItemOpDecorationStarLevelUpReq::Clear() {
  itemid_ = 0u;
  consumeitemarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpDecorationStarLevelUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpDecorationStarLevelUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ConsumeItemArr;
        break;
      }

      // repeated .pb.TItemOpDecorationItem ConsumeItemArr = 2;
      case 2: {
        if (tag == 18) {
         parse_ConsumeItemArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_consumeitemarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ConsumeItemArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpDecorationStarLevelUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpDecorationStarLevelUpReq)
  return false;
#undef DO_
}

void TItemOpDecorationStarLevelUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpDecorationStarLevelUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // repeated .pb.TItemOpDecorationItem ConsumeItemArr = 2;
  for (int i = 0; i < this->consumeitemarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->consumeitemarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpDecorationStarLevelUpReq)
}

::google::protobuf::uint8* TItemOpDecorationStarLevelUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpDecorationStarLevelUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // repeated .pb.TItemOpDecorationItem ConsumeItemArr = 2;
  for (int i = 0; i < this->consumeitemarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->consumeitemarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpDecorationStarLevelUpReq)
  return target;
}

int TItemOpDecorationStarLevelUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  // repeated .pb.TItemOpDecorationItem ConsumeItemArr = 2;
  total_size += 1 * this->consumeitemarr_size();
  for (int i = 0; i < this->consumeitemarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->consumeitemarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpDecorationStarLevelUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpDecorationStarLevelUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpDecorationStarLevelUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpDecorationStarLevelUpReq::MergeFrom(const TItemOpDecorationStarLevelUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  consumeitemarr_.MergeFrom(from.consumeitemarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpDecorationStarLevelUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpDecorationStarLevelUpReq::CopyFrom(const TItemOpDecorationStarLevelUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpDecorationStarLevelUpReq::IsInitialized() const {

  return true;
}

void TItemOpDecorationStarLevelUpReq::Swap(TItemOpDecorationStarLevelUpReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    consumeitemarr_.Swap(&other->consumeitemarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpDecorationStarLevelUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpDecorationStarLevelUpReq_descriptor_;
  metadata.reflection = TItemOpDecorationStarLevelUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpArmEvolveReq::kItemIdFieldNumber;
const int TItemOpArmEvolveReq::kNumFieldNumber;
#endif  // !_MSC_VER

TItemOpArmEvolveReq::TItemOpArmEvolveReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpArmEvolveReq)
}

void TItemOpArmEvolveReq::InitAsDefaultInstance() {
}

TItemOpArmEvolveReq::TItemOpArmEvolveReq(const TItemOpArmEvolveReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpArmEvolveReq)
}

void TItemOpArmEvolveReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpArmEvolveReq::~TItemOpArmEvolveReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpArmEvolveReq)
  SharedDtor();
}

void TItemOpArmEvolveReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpArmEvolveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpArmEvolveReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpArmEvolveReq_descriptor_;
}

const TItemOpArmEvolveReq& TItemOpArmEvolveReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpArmEvolveReq* TItemOpArmEvolveReq::default_instance_ = NULL;

TItemOpArmEvolveReq* TItemOpArmEvolveReq::New() const {
  return new TItemOpArmEvolveReq;
}

void TItemOpArmEvolveReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpArmEvolveReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpArmEvolveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpArmEvolveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpArmEvolveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpArmEvolveReq)
  return false;
#undef DO_
}

void TItemOpArmEvolveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpArmEvolveReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpArmEvolveReq)
}

::google::protobuf::uint8* TItemOpArmEvolveReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpArmEvolveReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpArmEvolveReq)
  return target;
}

int TItemOpArmEvolveReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpArmEvolveReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpArmEvolveReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpArmEvolveReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpArmEvolveReq::MergeFrom(const TItemOpArmEvolveReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpArmEvolveReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpArmEvolveReq::CopyFrom(const TItemOpArmEvolveReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpArmEvolveReq::IsInitialized() const {

  return true;
}

void TItemOpArmEvolveReq::Swap(TItemOpArmEvolveReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpArmEvolveReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpArmEvolveReq_descriptor_;
  metadata.reflection = TItemOpArmEvolveReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpArmEvolveRsp::kCritRatioFieldNumber;
#endif  // !_MSC_VER

TItemOpArmEvolveRsp::TItemOpArmEvolveRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpArmEvolveRsp)
}

void TItemOpArmEvolveRsp::InitAsDefaultInstance() {
}

TItemOpArmEvolveRsp::TItemOpArmEvolveRsp(const TItemOpArmEvolveRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpArmEvolveRsp)
}

void TItemOpArmEvolveRsp::SharedCtor() {
  _cached_size_ = 0;
  critratio_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpArmEvolveRsp::~TItemOpArmEvolveRsp() {
  // @@protoc_insertion_point(destructor:pb.TItemOpArmEvolveRsp)
  SharedDtor();
}

void TItemOpArmEvolveRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpArmEvolveRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpArmEvolveRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpArmEvolveRsp_descriptor_;
}

const TItemOpArmEvolveRsp& TItemOpArmEvolveRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpArmEvolveRsp* TItemOpArmEvolveRsp::default_instance_ = NULL;

TItemOpArmEvolveRsp* TItemOpArmEvolveRsp::New() const {
  return new TItemOpArmEvolveRsp;
}

void TItemOpArmEvolveRsp::Clear() {
  critratio_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpArmEvolveRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpArmEvolveRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CritRatio = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &critratio_)));
          set_has_critratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpArmEvolveRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpArmEvolveRsp)
  return false;
#undef DO_
}

void TItemOpArmEvolveRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpArmEvolveRsp)
  // optional uint32 CritRatio = 1;
  if (has_critratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->critratio(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpArmEvolveRsp)
}

::google::protobuf::uint8* TItemOpArmEvolveRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpArmEvolveRsp)
  // optional uint32 CritRatio = 1;
  if (has_critratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->critratio(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpArmEvolveRsp)
  return target;
}

int TItemOpArmEvolveRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 CritRatio = 1;
    if (has_critratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->critratio());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpArmEvolveRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpArmEvolveRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpArmEvolveRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpArmEvolveRsp::MergeFrom(const TItemOpArmEvolveRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_critratio()) {
      set_critratio(from.critratio());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpArmEvolveRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpArmEvolveRsp::CopyFrom(const TItemOpArmEvolveRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpArmEvolveRsp::IsInitialized() const {

  return true;
}

void TItemOpArmEvolveRsp::Swap(TItemOpArmEvolveRsp* other) {
  if (other != this) {
    std::swap(critratio_, other->critratio_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpArmEvolveRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpArmEvolveRsp_descriptor_;
  metadata.reflection = TItemOpArmEvolveRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpArmEvolveLvUpReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpArmEvolveLvUpReq::TItemOpArmEvolveLvUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpArmEvolveLvUpReq)
}

void TItemOpArmEvolveLvUpReq::InitAsDefaultInstance() {
}

TItemOpArmEvolveLvUpReq::TItemOpArmEvolveLvUpReq(const TItemOpArmEvolveLvUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpArmEvolveLvUpReq)
}

void TItemOpArmEvolveLvUpReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpArmEvolveLvUpReq::~TItemOpArmEvolveLvUpReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpArmEvolveLvUpReq)
  SharedDtor();
}

void TItemOpArmEvolveLvUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpArmEvolveLvUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpArmEvolveLvUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpArmEvolveLvUpReq_descriptor_;
}

const TItemOpArmEvolveLvUpReq& TItemOpArmEvolveLvUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpArmEvolveLvUpReq* TItemOpArmEvolveLvUpReq::default_instance_ = NULL;

TItemOpArmEvolveLvUpReq* TItemOpArmEvolveLvUpReq::New() const {
  return new TItemOpArmEvolveLvUpReq;
}

void TItemOpArmEvolveLvUpReq::Clear() {
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpArmEvolveLvUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpArmEvolveLvUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpArmEvolveLvUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpArmEvolveLvUpReq)
  return false;
#undef DO_
}

void TItemOpArmEvolveLvUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpArmEvolveLvUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpArmEvolveLvUpReq)
}

::google::protobuf::uint8* TItemOpArmEvolveLvUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpArmEvolveLvUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpArmEvolveLvUpReq)
  return target;
}

int TItemOpArmEvolveLvUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpArmEvolveLvUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpArmEvolveLvUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpArmEvolveLvUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpArmEvolveLvUpReq::MergeFrom(const TItemOpArmEvolveLvUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpArmEvolveLvUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpArmEvolveLvUpReq::CopyFrom(const TItemOpArmEvolveLvUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpArmEvolveLvUpReq::IsInitialized() const {

  return true;
}

void TItemOpArmEvolveLvUpReq::Swap(TItemOpArmEvolveLvUpReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpArmEvolveLvUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpArmEvolveLvUpReq_descriptor_;
  metadata.reflection = TItemOpArmEvolveLvUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpForceSoulEnhanceReq::kItemIdFieldNumber;
const int TItemOpForceSoulEnhanceReq::kNumFieldNumber;
#endif  // !_MSC_VER

TItemOpForceSoulEnhanceReq::TItemOpForceSoulEnhanceReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpForceSoulEnhanceReq)
}

void TItemOpForceSoulEnhanceReq::InitAsDefaultInstance() {
}

TItemOpForceSoulEnhanceReq::TItemOpForceSoulEnhanceReq(const TItemOpForceSoulEnhanceReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpForceSoulEnhanceReq)
}

void TItemOpForceSoulEnhanceReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpForceSoulEnhanceReq::~TItemOpForceSoulEnhanceReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpForceSoulEnhanceReq)
  SharedDtor();
}

void TItemOpForceSoulEnhanceReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpForceSoulEnhanceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpForceSoulEnhanceReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpForceSoulEnhanceReq_descriptor_;
}

const TItemOpForceSoulEnhanceReq& TItemOpForceSoulEnhanceReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpForceSoulEnhanceReq* TItemOpForceSoulEnhanceReq::default_instance_ = NULL;

TItemOpForceSoulEnhanceReq* TItemOpForceSoulEnhanceReq::New() const {
  return new TItemOpForceSoulEnhanceReq;
}

void TItemOpForceSoulEnhanceReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TItemOpForceSoulEnhanceReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpForceSoulEnhanceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpForceSoulEnhanceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional uint32 num = 2;
      case 2: {
        if (tag == 16) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpForceSoulEnhanceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpForceSoulEnhanceReq)
  return false;
#undef DO_
}

void TItemOpForceSoulEnhanceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpForceSoulEnhanceReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpForceSoulEnhanceReq)
}

::google::protobuf::uint8* TItemOpForceSoulEnhanceReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpForceSoulEnhanceReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpForceSoulEnhanceReq)
  return target;
}

int TItemOpForceSoulEnhanceReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // optional uint32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpForceSoulEnhanceReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpForceSoulEnhanceReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpForceSoulEnhanceReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpForceSoulEnhanceReq::MergeFrom(const TItemOpForceSoulEnhanceReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpForceSoulEnhanceReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpForceSoulEnhanceReq::CopyFrom(const TItemOpForceSoulEnhanceReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpForceSoulEnhanceReq::IsInitialized() const {

  return true;
}

void TItemOpForceSoulEnhanceReq::Swap(TItemOpForceSoulEnhanceReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpForceSoulEnhanceReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpForceSoulEnhanceReq_descriptor_;
  metadata.reflection = TItemOpForceSoulEnhanceReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpForceSoulStarUpReq::kItemIdFieldNumber;
const int TItemOpForceSoulStarUpReq::kArrItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpForceSoulStarUpReq::TItemOpForceSoulStarUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpForceSoulStarUpReq)
}

void TItemOpForceSoulStarUpReq::InitAsDefaultInstance() {
}

TItemOpForceSoulStarUpReq::TItemOpForceSoulStarUpReq(const TItemOpForceSoulStarUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpForceSoulStarUpReq)
}

void TItemOpForceSoulStarUpReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpForceSoulStarUpReq::~TItemOpForceSoulStarUpReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpForceSoulStarUpReq)
  SharedDtor();
}

void TItemOpForceSoulStarUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpForceSoulStarUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpForceSoulStarUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpForceSoulStarUpReq_descriptor_;
}

const TItemOpForceSoulStarUpReq& TItemOpForceSoulStarUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpForceSoulStarUpReq* TItemOpForceSoulStarUpReq::default_instance_ = NULL;

TItemOpForceSoulStarUpReq* TItemOpForceSoulStarUpReq::New() const {
  return new TItemOpForceSoulStarUpReq;
}

void TItemOpForceSoulStarUpReq::Clear() {
  itemid_ = 0u;
  arritemid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpForceSoulStarUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpForceSoulStarUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ArrItemId;
        break;
      }

      // repeated uint32 ArrItemId = 2;
      case 2: {
        if (tag == 16) {
         parse_ArrItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_arritemid())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arritemid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ArrItemId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpForceSoulStarUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpForceSoulStarUpReq)
  return false;
#undef DO_
}

void TItemOpForceSoulStarUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpForceSoulStarUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // repeated uint32 ArrItemId = 2;
  for (int i = 0; i < this->arritemid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->arritemid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpForceSoulStarUpReq)
}

::google::protobuf::uint8* TItemOpForceSoulStarUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpForceSoulStarUpReq)
  // optional uint32 ItemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // repeated uint32 ArrItemId = 2;
  for (int i = 0; i < this->arritemid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->arritemid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpForceSoulStarUpReq)
  return target;
}

int TItemOpForceSoulStarUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  // repeated uint32 ArrItemId = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->arritemid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arritemid(i));
    }
    total_size += 1 * this->arritemid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpForceSoulStarUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpForceSoulStarUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpForceSoulStarUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpForceSoulStarUpReq::MergeFrom(const TItemOpForceSoulStarUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arritemid_.MergeFrom(from.arritemid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpForceSoulStarUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpForceSoulStarUpReq::CopyFrom(const TItemOpForceSoulStarUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpForceSoulStarUpReq::IsInitialized() const {

  return true;
}

void TItemOpForceSoulStarUpReq::Swap(TItemOpForceSoulStarUpReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    arritemid_.Swap(&other->arritemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpForceSoulStarUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpForceSoulStarUpReq_descriptor_;
  metadata.reflection = TItemOpForceSoulStarUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TItemOpComposeForceSoulReq::kTidFieldNumber;
const int TItemOpComposeForceSoulReq::kArrItemIdFieldNumber;
#endif  // !_MSC_VER

TItemOpComposeForceSoulReq::TItemOpComposeForceSoulReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TItemOpComposeForceSoulReq)
}

void TItemOpComposeForceSoulReq::InitAsDefaultInstance() {
}

TItemOpComposeForceSoulReq::TItemOpComposeForceSoulReq(const TItemOpComposeForceSoulReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TItemOpComposeForceSoulReq)
}

void TItemOpComposeForceSoulReq::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TItemOpComposeForceSoulReq::~TItemOpComposeForceSoulReq() {
  // @@protoc_insertion_point(destructor:pb.TItemOpComposeForceSoulReq)
  SharedDtor();
}

void TItemOpComposeForceSoulReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TItemOpComposeForceSoulReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TItemOpComposeForceSoulReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TItemOpComposeForceSoulReq_descriptor_;
}

const TItemOpComposeForceSoulReq& TItemOpComposeForceSoulReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fItemOp_2eproto();
  return *default_instance_;
}

TItemOpComposeForceSoulReq* TItemOpComposeForceSoulReq::default_instance_ = NULL;

TItemOpComposeForceSoulReq* TItemOpComposeForceSoulReq::New() const {
  return new TItemOpComposeForceSoulReq;
}

void TItemOpComposeForceSoulReq::Clear() {
  tid_ = 0u;
  arritemid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TItemOpComposeForceSoulReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TItemOpComposeForceSoulReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ArrItemId;
        break;
      }

      // repeated uint32 ArrItemId = 2;
      case 2: {
        if (tag == 16) {
         parse_ArrItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_arritemid())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arritemid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ArrItemId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TItemOpComposeForceSoulReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TItemOpComposeForceSoulReq)
  return false;
#undef DO_
}

void TItemOpComposeForceSoulReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TItemOpComposeForceSoulReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // repeated uint32 ArrItemId = 2;
  for (int i = 0; i < this->arritemid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->arritemid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TItemOpComposeForceSoulReq)
}

::google::protobuf::uint8* TItemOpComposeForceSoulReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TItemOpComposeForceSoulReq)
  // optional uint32 Tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // repeated uint32 ArrItemId = 2;
  for (int i = 0; i < this->arritemid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->arritemid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TItemOpComposeForceSoulReq)
  return target;
}

int TItemOpComposeForceSoulReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

  }
  // repeated uint32 ArrItemId = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->arritemid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arritemid(i));
    }
    total_size += 1 * this->arritemid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TItemOpComposeForceSoulReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TItemOpComposeForceSoulReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TItemOpComposeForceSoulReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TItemOpComposeForceSoulReq::MergeFrom(const TItemOpComposeForceSoulReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arritemid_.MergeFrom(from.arritemid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TItemOpComposeForceSoulReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TItemOpComposeForceSoulReq::CopyFrom(const TItemOpComposeForceSoulReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TItemOpComposeForceSoulReq::IsInitialized() const {

  return true;
}

void TItemOpComposeForceSoulReq::Swap(TItemOpComposeForceSoulReq* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    arritemid_.Swap(&other->arritemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TItemOpComposeForceSoulReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TItemOpComposeForceSoulReq_descriptor_;
  metadata.reflection = TItemOpComposeForceSoulReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
