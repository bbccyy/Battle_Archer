// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/ActUnifiedWorld.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/ActUnifiedWorld.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TActUnifiedWorldGiftInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnifiedWorldGiftInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnifiedWorldTaskInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnifiedWorldTaskInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnifiedWorldGetInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnifiedWorldGetInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnifiedWorldGetArrScoreRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnifiedWorldGetArrScoreRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnifiedWorldGetArrScoreRewardRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnifiedWorldGetArrScoreRewardRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnifiedWorldRankInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnifiedWorldRankInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnifiedWorldGetStageRankReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnifiedWorldGetStageRankReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnifiedWorldGetStageRankRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnifiedWorldGetStageRankRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnifiedWorldGetTotalRankReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnifiedWorldGetTotalRankReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnifiedWorldGetTotalRankRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnifiedWorldGetTotalRankRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnifiedWorldGetLastTotalRankReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnifiedWorldGetLastTotalRankReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnifiedWorldGetLastTotalRankRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnifiedWorldGetLastTotalRankRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TActUnifiedWorldNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TActUnifiedWorldNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto() {
  protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/ActUnifiedWorld.proto");
  GOOGLE_CHECK(file != NULL);
  TActUnifiedWorldGiftInfo_descriptor_ = file->message_type(0);
  static const int TActUnifiedWorldGiftInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGiftInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGiftInfo, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGiftInfo, buytime_),
  };
  TActUnifiedWorldGiftInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnifiedWorldGiftInfo_descriptor_,
      TActUnifiedWorldGiftInfo::default_instance_,
      TActUnifiedWorldGiftInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGiftInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGiftInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnifiedWorldGiftInfo));
  TActUnifiedWorldTaskInfo_descriptor_ = file->message_type(1);
  static const int TActUnifiedWorldTaskInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldTaskInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldTaskInfo, num_),
  };
  TActUnifiedWorldTaskInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnifiedWorldTaskInfo_descriptor_,
      TActUnifiedWorldTaskInfo::default_instance_,
      TActUnifiedWorldTaskInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldTaskInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldTaskInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnifiedWorldTaskInfo));
  TActUnifiedWorldGetInfoRsp_descriptor_ = file->message_type(2);
  static const int TActUnifiedWorldGetInfoRsp_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetInfoRsp, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetInfoRsp, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetInfoRsp, totalscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetInfoRsp, arrgiftinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetInfoRsp, arrtaskinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetInfoRsp, arrscorerewardinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetInfoRsp, stagerankarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetInfoRsp, totalrank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetInfoRsp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetInfoRsp, maxstagerankarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetInfoRsp, maxtotalrank_),
  };
  TActUnifiedWorldGetInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnifiedWorldGetInfoRsp_descriptor_,
      TActUnifiedWorldGetInfoRsp::default_instance_,
      TActUnifiedWorldGetInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnifiedWorldGetInfoRsp));
  TActUnifiedWorldGetArrScoreRewardReq_descriptor_ = file->message_type(3);
  static const int TActUnifiedWorldGetArrScoreRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetArrScoreRewardReq, arrid_),
  };
  TActUnifiedWorldGetArrScoreRewardReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnifiedWorldGetArrScoreRewardReq_descriptor_,
      TActUnifiedWorldGetArrScoreRewardReq::default_instance_,
      TActUnifiedWorldGetArrScoreRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetArrScoreRewardReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetArrScoreRewardReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnifiedWorldGetArrScoreRewardReq));
  TActUnifiedWorldGetArrScoreRewardRsp_descriptor_ = file->message_type(4);
  static const int TActUnifiedWorldGetArrScoreRewardRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetArrScoreRewardRsp, arrreward_),
  };
  TActUnifiedWorldGetArrScoreRewardRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnifiedWorldGetArrScoreRewardRsp_descriptor_,
      TActUnifiedWorldGetArrScoreRewardRsp::default_instance_,
      TActUnifiedWorldGetArrScoreRewardRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetArrScoreRewardRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetArrScoreRewardRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnifiedWorldGetArrScoreRewardRsp));
  TActUnifiedWorldRankInfo_descriptor_ = file->message_type(5);
  static const int TActUnifiedWorldRankInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldRankInfo, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldRankInfo, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldRankInfo, score_),
  };
  TActUnifiedWorldRankInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnifiedWorldRankInfo_descriptor_,
      TActUnifiedWorldRankInfo::default_instance_,
      TActUnifiedWorldRankInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldRankInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldRankInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnifiedWorldRankInfo));
  TActUnifiedWorldGetStageRankReq_descriptor_ = file->message_type(6);
  static const int TActUnifiedWorldGetStageRankReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetStageRankReq, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetStageRankReq, limit_),
  };
  TActUnifiedWorldGetStageRankReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnifiedWorldGetStageRankReq_descriptor_,
      TActUnifiedWorldGetStageRankReq::default_instance_,
      TActUnifiedWorldGetStageRankReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetStageRankReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetStageRankReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnifiedWorldGetStageRankReq));
  TActUnifiedWorldGetStageRankRsp_descriptor_ = file->message_type(7);
  static const int TActUnifiedWorldGetStageRankRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetStageRankRsp, arrrankinfo_),
  };
  TActUnifiedWorldGetStageRankRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnifiedWorldGetStageRankRsp_descriptor_,
      TActUnifiedWorldGetStageRankRsp::default_instance_,
      TActUnifiedWorldGetStageRankRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetStageRankRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetStageRankRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnifiedWorldGetStageRankRsp));
  TActUnifiedWorldGetTotalRankReq_descriptor_ = file->message_type(8);
  static const int TActUnifiedWorldGetTotalRankReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetTotalRankReq, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetTotalRankReq, limit_),
  };
  TActUnifiedWorldGetTotalRankReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnifiedWorldGetTotalRankReq_descriptor_,
      TActUnifiedWorldGetTotalRankReq::default_instance_,
      TActUnifiedWorldGetTotalRankReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetTotalRankReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetTotalRankReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnifiedWorldGetTotalRankReq));
  TActUnifiedWorldGetTotalRankRsp_descriptor_ = file->message_type(9);
  static const int TActUnifiedWorldGetTotalRankRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetTotalRankRsp, arrrankinfo_),
  };
  TActUnifiedWorldGetTotalRankRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnifiedWorldGetTotalRankRsp_descriptor_,
      TActUnifiedWorldGetTotalRankRsp::default_instance_,
      TActUnifiedWorldGetTotalRankRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetTotalRankRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetTotalRankRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnifiedWorldGetTotalRankRsp));
  TActUnifiedWorldGetLastTotalRankReq_descriptor_ = file->message_type(10);
  static const int TActUnifiedWorldGetLastTotalRankReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetLastTotalRankReq, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetLastTotalRankReq, limit_),
  };
  TActUnifiedWorldGetLastTotalRankReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnifiedWorldGetLastTotalRankReq_descriptor_,
      TActUnifiedWorldGetLastTotalRankReq::default_instance_,
      TActUnifiedWorldGetLastTotalRankReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetLastTotalRankReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetLastTotalRankReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnifiedWorldGetLastTotalRankReq));
  TActUnifiedWorldGetLastTotalRankRsp_descriptor_ = file->message_type(11);
  static const int TActUnifiedWorldGetLastTotalRankRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetLastTotalRankRsp, myrank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetLastTotalRankRsp, arrrankinfo_),
  };
  TActUnifiedWorldGetLastTotalRankRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnifiedWorldGetLastTotalRankRsp_descriptor_,
      TActUnifiedWorldGetLastTotalRankRsp::default_instance_,
      TActUnifiedWorldGetLastTotalRankRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetLastTotalRankRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldGetLastTotalRankRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnifiedWorldGetLastTotalRankRsp));
  TActUnifiedWorldNotify_descriptor_ = file->message_type(12);
  static const int TActUnifiedWorldNotify_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldNotify, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldNotify, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldNotify, totalscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldNotify, arrgiftinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldNotify, arrtaskinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldNotify, stagerank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldNotify, totalrank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldNotify, maxstagerank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldNotify, maxtotalrank_),
  };
  TActUnifiedWorldNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TActUnifiedWorldNotify_descriptor_,
      TActUnifiedWorldNotify::default_instance_,
      TActUnifiedWorldNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TActUnifiedWorldNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TActUnifiedWorldNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fActUnifiedWorld_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnifiedWorldGiftInfo_descriptor_, &TActUnifiedWorldGiftInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnifiedWorldTaskInfo_descriptor_, &TActUnifiedWorldTaskInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnifiedWorldGetInfoRsp_descriptor_, &TActUnifiedWorldGetInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnifiedWorldGetArrScoreRewardReq_descriptor_, &TActUnifiedWorldGetArrScoreRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnifiedWorldGetArrScoreRewardRsp_descriptor_, &TActUnifiedWorldGetArrScoreRewardRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnifiedWorldRankInfo_descriptor_, &TActUnifiedWorldRankInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnifiedWorldGetStageRankReq_descriptor_, &TActUnifiedWorldGetStageRankReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnifiedWorldGetStageRankRsp_descriptor_, &TActUnifiedWorldGetStageRankRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnifiedWorldGetTotalRankReq_descriptor_, &TActUnifiedWorldGetTotalRankReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnifiedWorldGetTotalRankRsp_descriptor_, &TActUnifiedWorldGetTotalRankRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnifiedWorldGetLastTotalRankReq_descriptor_, &TActUnifiedWorldGetLastTotalRankReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnifiedWorldGetLastTotalRankRsp_descriptor_, &TActUnifiedWorldGetLastTotalRankRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TActUnifiedWorldNotify_descriptor_, &TActUnifiedWorldNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto() {
  delete TActUnifiedWorldGiftInfo::default_instance_;
  delete TActUnifiedWorldGiftInfo_reflection_;
  delete TActUnifiedWorldTaskInfo::default_instance_;
  delete TActUnifiedWorldTaskInfo_reflection_;
  delete TActUnifiedWorldGetInfoRsp::default_instance_;
  delete TActUnifiedWorldGetInfoRsp_reflection_;
  delete TActUnifiedWorldGetArrScoreRewardReq::default_instance_;
  delete TActUnifiedWorldGetArrScoreRewardReq_reflection_;
  delete TActUnifiedWorldGetArrScoreRewardRsp::default_instance_;
  delete TActUnifiedWorldGetArrScoreRewardRsp_reflection_;
  delete TActUnifiedWorldRankInfo::default_instance_;
  delete TActUnifiedWorldRankInfo_reflection_;
  delete TActUnifiedWorldGetStageRankReq::default_instance_;
  delete TActUnifiedWorldGetStageRankReq_reflection_;
  delete TActUnifiedWorldGetStageRankRsp::default_instance_;
  delete TActUnifiedWorldGetStageRankRsp_reflection_;
  delete TActUnifiedWorldGetTotalRankReq::default_instance_;
  delete TActUnifiedWorldGetTotalRankReq_reflection_;
  delete TActUnifiedWorldGetTotalRankRsp::default_instance_;
  delete TActUnifiedWorldGetTotalRankRsp_reflection_;
  delete TActUnifiedWorldGetLastTotalRankReq::default_instance_;
  delete TActUnifiedWorldGetLastTotalRankReq_reflection_;
  delete TActUnifiedWorldGetLastTotalRankRsp::default_instance_;
  delete TActUnifiedWorldGetLastTotalRankRsp_reflection_;
  delete TActUnifiedWorldNotify::default_instance_;
  delete TActUnifiedWorldNotify_reflection_;
}

void protobuf_AddDesc_net_2fActUnifiedWorld_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fUser_2eproto();
  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::pb::protobuf_AddDesc_net_2fOpenActivity_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031net/ActUnifiedWorld.proto\022\002pb\032\016net/Use"
    "r.proto\032\026net/CommonReward.proto\032\026net/Ope"
    "nActivity.proto\"D\n\030TActUnifiedWorldGiftI"
    "nfo\022\n\n\002Id\030\001 \001(\r\022\013\n\003Num\030\002 \001(\r\022\017\n\007BuyTime\030"
    "\003 \001(\004\"3\n\030TActUnifiedWorldTaskInfo\022\n\n\002Id\030"
    "\001 \001(\r\022\013\n\003Num\030\002 \001(\004\"\317\002\n\032TActUnifiedWorldG"
    "etInfoRsp\022\n\n\002Id\030\001 \001(\r\022\r\n\005Score\030\002 \001(\004\022\022\n\n"
    "TotalScore\030\003 \001(\004\0221\n\013ArrGiftInfo\030\004 \003(\0132\034."
    "pb.TActUnifiedWorldGiftInfo\0221\n\013ArrTaskIn"
    "fo\030\005 \003(\0132\034.pb.TActUnifiedWorldTaskInfo\0223"
    "\n\022ArrScoreRewardInfo\030\006 \003(\0132\027.pb.TActivit"
    "yRewardInfo\022\024\n\014StageRankArr\030\007 \003(\005\022\021\n\tTot"
    "alRank\030\010 \001(\r\022\017\n\007GroupId\030\t \001(\r\022\027\n\017MaxStag"
    "eRankArr\030\n \003(\005\022\024\n\014MaxTotalRank\030\013 \001(\r\"5\n$"
    "TActUnifiedWorldGetArrScoreRewardReq\022\r\n\005"
    "ArrId\030\001 \003(\r\"L\n$TActUnifiedWorldGetArrSco"
    "reRewardRsp\022$\n\tArrReward\030\001 \003(\0132\021.pb.TCom"
    "monReward\"^\n\030TActUnifiedWorldRankInfo\022%\n"
    "\010UserInfo\030\001 \001(\0132\023.pb.TUserSimpleInfo\022\014\n\004"
    "Rank\030\002 \001(\r\022\r\n\005Score\030\003 \001(\004\"@\n\037TActUnified"
    "WorldGetStageRankReq\022\016\n\006Offset\030\001 \001(\r\022\r\n\005"
    "Limit\030\002 \001(\r\"T\n\037TActUnifiedWorldGetStageR"
    "ankRsp\0221\n\013ArrRankInfo\030\001 \003(\0132\034.pb.TActUni"
    "fiedWorldRankInfo\"@\n\037TActUnifiedWorldGet"
    "TotalRankReq\022\016\n\006Offset\030\001 \001(\r\022\r\n\005Limit\030\002 "
    "\001(\r\"T\n\037TActUnifiedWorldGetTotalRankRsp\0221"
    "\n\013ArrRankInfo\030\001 \003(\0132\034.pb.TActUnifiedWorl"
    "dRankInfo\"D\n#TActUnifiedWorldGetLastTota"
    "lRankReq\022\016\n\006Offset\030\001 \001(\r\022\r\n\005Limit\030\002 \001(\r\""
    "h\n#TActUnifiedWorldGetLastTotalRankRsp\022\016"
    "\n\006MyRank\030\001 \001(\r\0221\n\013ArrRankInfo\030\002 \003(\0132\034.pb"
    ".TActUnifiedWorldRankInfo\"\377\001\n\026TActUnifie"
    "dWorldNotify\022\n\n\002Id\030\001 \001(\r\022\r\n\005Score\030\002 \001(\004\022"
    "\022\n\nTotalScore\030\003 \001(\004\0221\n\013ArrGiftInfo\030\004 \003(\013"
    "2\034.pb.TActUnifiedWorldGiftInfo\0221\n\013ArrTas"
    "kInfo\030\005 \003(\0132\034.pb.TActUnifiedWorldTaskInf"
    "o\022\021\n\tStageRank\030\006 \001(\r\022\021\n\tTotalRank\030\007 \001(\r\022"
    "\024\n\014MaxStageRank\030\010 \001(\r\022\024\n\014MaxTotalRank\030\t "
    "\001(\r", 1523);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/ActUnifiedWorld.proto", &protobuf_RegisterTypes);
  TActUnifiedWorldGiftInfo::default_instance_ = new TActUnifiedWorldGiftInfo();
  TActUnifiedWorldTaskInfo::default_instance_ = new TActUnifiedWorldTaskInfo();
  TActUnifiedWorldGetInfoRsp::default_instance_ = new TActUnifiedWorldGetInfoRsp();
  TActUnifiedWorldGetArrScoreRewardReq::default_instance_ = new TActUnifiedWorldGetArrScoreRewardReq();
  TActUnifiedWorldGetArrScoreRewardRsp::default_instance_ = new TActUnifiedWorldGetArrScoreRewardRsp();
  TActUnifiedWorldRankInfo::default_instance_ = new TActUnifiedWorldRankInfo();
  TActUnifiedWorldGetStageRankReq::default_instance_ = new TActUnifiedWorldGetStageRankReq();
  TActUnifiedWorldGetStageRankRsp::default_instance_ = new TActUnifiedWorldGetStageRankRsp();
  TActUnifiedWorldGetTotalRankReq::default_instance_ = new TActUnifiedWorldGetTotalRankReq();
  TActUnifiedWorldGetTotalRankRsp::default_instance_ = new TActUnifiedWorldGetTotalRankRsp();
  TActUnifiedWorldGetLastTotalRankReq::default_instance_ = new TActUnifiedWorldGetLastTotalRankReq();
  TActUnifiedWorldGetLastTotalRankRsp::default_instance_ = new TActUnifiedWorldGetLastTotalRankRsp();
  TActUnifiedWorldNotify::default_instance_ = new TActUnifiedWorldNotify();
  TActUnifiedWorldGiftInfo::default_instance_->InitAsDefaultInstance();
  TActUnifiedWorldTaskInfo::default_instance_->InitAsDefaultInstance();
  TActUnifiedWorldGetInfoRsp::default_instance_->InitAsDefaultInstance();
  TActUnifiedWorldGetArrScoreRewardReq::default_instance_->InitAsDefaultInstance();
  TActUnifiedWorldGetArrScoreRewardRsp::default_instance_->InitAsDefaultInstance();
  TActUnifiedWorldRankInfo::default_instance_->InitAsDefaultInstance();
  TActUnifiedWorldGetStageRankReq::default_instance_->InitAsDefaultInstance();
  TActUnifiedWorldGetStageRankRsp::default_instance_->InitAsDefaultInstance();
  TActUnifiedWorldGetTotalRankReq::default_instance_->InitAsDefaultInstance();
  TActUnifiedWorldGetTotalRankRsp::default_instance_->InitAsDefaultInstance();
  TActUnifiedWorldGetLastTotalRankReq::default_instance_->InitAsDefaultInstance();
  TActUnifiedWorldGetLastTotalRankRsp::default_instance_->InitAsDefaultInstance();
  TActUnifiedWorldNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fActUnifiedWorld_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fActUnifiedWorld_2eproto {
  StaticDescriptorInitializer_net_2fActUnifiedWorld_2eproto() {
    protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  }
} static_descriptor_initializer_net_2fActUnifiedWorld_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TActUnifiedWorldGiftInfo::kIdFieldNumber;
const int TActUnifiedWorldGiftInfo::kNumFieldNumber;
const int TActUnifiedWorldGiftInfo::kBuyTimeFieldNumber;
#endif  // !_MSC_VER

TActUnifiedWorldGiftInfo::TActUnifiedWorldGiftInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnifiedWorldGiftInfo)
}

void TActUnifiedWorldGiftInfo::InitAsDefaultInstance() {
}

TActUnifiedWorldGiftInfo::TActUnifiedWorldGiftInfo(const TActUnifiedWorldGiftInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnifiedWorldGiftInfo)
}

void TActUnifiedWorldGiftInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  buytime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnifiedWorldGiftInfo::~TActUnifiedWorldGiftInfo() {
  // @@protoc_insertion_point(destructor:pb.TActUnifiedWorldGiftInfo)
  SharedDtor();
}

void TActUnifiedWorldGiftInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnifiedWorldGiftInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnifiedWorldGiftInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnifiedWorldGiftInfo_descriptor_;
}

const TActUnifiedWorldGiftInfo& TActUnifiedWorldGiftInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  return *default_instance_;
}

TActUnifiedWorldGiftInfo* TActUnifiedWorldGiftInfo::default_instance_ = NULL;

TActUnifiedWorldGiftInfo* TActUnifiedWorldGiftInfo::New() const {
  return new TActUnifiedWorldGiftInfo;
}

void TActUnifiedWorldGiftInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActUnifiedWorldGiftInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, buytime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnifiedWorldGiftInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnifiedWorldGiftInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BuyTime;
        break;
      }

      // optional uint64 BuyTime = 3;
      case 3: {
        if (tag == 24) {
         parse_BuyTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &buytime_)));
          set_has_buytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnifiedWorldGiftInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnifiedWorldGiftInfo)
  return false;
#undef DO_
}

void TActUnifiedWorldGiftInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnifiedWorldGiftInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  // optional uint64 BuyTime = 3;
  if (has_buytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->buytime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnifiedWorldGiftInfo)
}

::google::protobuf::uint8* TActUnifiedWorldGiftInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnifiedWorldGiftInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  // optional uint64 BuyTime = 3;
  if (has_buytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->buytime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnifiedWorldGiftInfo)
  return target;
}

int TActUnifiedWorldGiftInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint64 BuyTime = 3;
    if (has_buytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->buytime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnifiedWorldGiftInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnifiedWorldGiftInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnifiedWorldGiftInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnifiedWorldGiftInfo::MergeFrom(const TActUnifiedWorldGiftInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_buytime()) {
      set_buytime(from.buytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnifiedWorldGiftInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnifiedWorldGiftInfo::CopyFrom(const TActUnifiedWorldGiftInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnifiedWorldGiftInfo::IsInitialized() const {

  return true;
}

void TActUnifiedWorldGiftInfo::Swap(TActUnifiedWorldGiftInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(buytime_, other->buytime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnifiedWorldGiftInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnifiedWorldGiftInfo_descriptor_;
  metadata.reflection = TActUnifiedWorldGiftInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnifiedWorldTaskInfo::kIdFieldNumber;
const int TActUnifiedWorldTaskInfo::kNumFieldNumber;
#endif  // !_MSC_VER

TActUnifiedWorldTaskInfo::TActUnifiedWorldTaskInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnifiedWorldTaskInfo)
}

void TActUnifiedWorldTaskInfo::InitAsDefaultInstance() {
}

TActUnifiedWorldTaskInfo::TActUnifiedWorldTaskInfo(const TActUnifiedWorldTaskInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnifiedWorldTaskInfo)
}

void TActUnifiedWorldTaskInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnifiedWorldTaskInfo::~TActUnifiedWorldTaskInfo() {
  // @@protoc_insertion_point(destructor:pb.TActUnifiedWorldTaskInfo)
  SharedDtor();
}

void TActUnifiedWorldTaskInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnifiedWorldTaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnifiedWorldTaskInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnifiedWorldTaskInfo_descriptor_;
}

const TActUnifiedWorldTaskInfo& TActUnifiedWorldTaskInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  return *default_instance_;
}

TActUnifiedWorldTaskInfo* TActUnifiedWorldTaskInfo::default_instance_ = NULL;

TActUnifiedWorldTaskInfo* TActUnifiedWorldTaskInfo::New() const {
  return new TActUnifiedWorldTaskInfo;
}

void TActUnifiedWorldTaskInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActUnifiedWorldTaskInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(num_, id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnifiedWorldTaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnifiedWorldTaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint64 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnifiedWorldTaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnifiedWorldTaskInfo)
  return false;
#undef DO_
}

void TActUnifiedWorldTaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnifiedWorldTaskInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnifiedWorldTaskInfo)
}

::google::protobuf::uint8* TActUnifiedWorldTaskInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnifiedWorldTaskInfo)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnifiedWorldTaskInfo)
  return target;
}

int TActUnifiedWorldTaskInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnifiedWorldTaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnifiedWorldTaskInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnifiedWorldTaskInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnifiedWorldTaskInfo::MergeFrom(const TActUnifiedWorldTaskInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnifiedWorldTaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnifiedWorldTaskInfo::CopyFrom(const TActUnifiedWorldTaskInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnifiedWorldTaskInfo::IsInitialized() const {

  return true;
}

void TActUnifiedWorldTaskInfo::Swap(TActUnifiedWorldTaskInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnifiedWorldTaskInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnifiedWorldTaskInfo_descriptor_;
  metadata.reflection = TActUnifiedWorldTaskInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnifiedWorldGetInfoRsp::kIdFieldNumber;
const int TActUnifiedWorldGetInfoRsp::kScoreFieldNumber;
const int TActUnifiedWorldGetInfoRsp::kTotalScoreFieldNumber;
const int TActUnifiedWorldGetInfoRsp::kArrGiftInfoFieldNumber;
const int TActUnifiedWorldGetInfoRsp::kArrTaskInfoFieldNumber;
const int TActUnifiedWorldGetInfoRsp::kArrScoreRewardInfoFieldNumber;
const int TActUnifiedWorldGetInfoRsp::kStageRankArrFieldNumber;
const int TActUnifiedWorldGetInfoRsp::kTotalRankFieldNumber;
const int TActUnifiedWorldGetInfoRsp::kGroupIdFieldNumber;
const int TActUnifiedWorldGetInfoRsp::kMaxStageRankArrFieldNumber;
const int TActUnifiedWorldGetInfoRsp::kMaxTotalRankFieldNumber;
#endif  // !_MSC_VER

TActUnifiedWorldGetInfoRsp::TActUnifiedWorldGetInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnifiedWorldGetInfoRsp)
}

void TActUnifiedWorldGetInfoRsp::InitAsDefaultInstance() {
}

TActUnifiedWorldGetInfoRsp::TActUnifiedWorldGetInfoRsp(const TActUnifiedWorldGetInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnifiedWorldGetInfoRsp)
}

void TActUnifiedWorldGetInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  score_ = GOOGLE_ULONGLONG(0);
  totalscore_ = GOOGLE_ULONGLONG(0);
  totalrank_ = 0u;
  groupid_ = 0u;
  maxtotalrank_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnifiedWorldGetInfoRsp::~TActUnifiedWorldGetInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TActUnifiedWorldGetInfoRsp)
  SharedDtor();
}

void TActUnifiedWorldGetInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnifiedWorldGetInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnifiedWorldGetInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnifiedWorldGetInfoRsp_descriptor_;
}

const TActUnifiedWorldGetInfoRsp& TActUnifiedWorldGetInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  return *default_instance_;
}

TActUnifiedWorldGetInfoRsp* TActUnifiedWorldGetInfoRsp::default_instance_ = NULL;

TActUnifiedWorldGetInfoRsp* TActUnifiedWorldGetInfoRsp::New() const {
  return new TActUnifiedWorldGetInfoRsp;
}

void TActUnifiedWorldGetInfoRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActUnifiedWorldGetInfoRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(score_, totalscore_);
  ZR_(id_, totalrank_);
  ZR_(groupid_, maxtotalrank_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrgiftinfo_.Clear();
  arrtaskinfo_.Clear();
  arrscorerewardinfo_.Clear();
  stagerankarr_.Clear();
  maxstagerankarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnifiedWorldGetInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnifiedWorldGetInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Score;
        break;
      }

      // optional uint64 Score = 2;
      case 2: {
        if (tag == 16) {
         parse_Score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_TotalScore;
        break;
      }

      // optional uint64 TotalScore = 3;
      case 3: {
        if (tag == 24) {
         parse_TotalScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totalscore_)));
          set_has_totalscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrGiftInfo;
        break;
      }

      // repeated .pb.TActUnifiedWorldGiftInfo ArrGiftInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_ArrGiftInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrgiftinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrGiftInfo;
        if (input->ExpectTag(42)) goto parse_ArrTaskInfo;
        break;
      }

      // repeated .pb.TActUnifiedWorldTaskInfo ArrTaskInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_ArrTaskInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtaskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ArrTaskInfo;
        if (input->ExpectTag(50)) goto parse_ArrScoreRewardInfo;
        break;
      }

      // repeated .pb.TActivityRewardInfo ArrScoreRewardInfo = 6;
      case 6: {
        if (tag == 50) {
         parse_ArrScoreRewardInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrscorerewardinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ArrScoreRewardInfo;
        if (input->ExpectTag(56)) goto parse_StageRankArr;
        break;
      }

      // repeated int32 StageRankArr = 7;
      case 7: {
        if (tag == 56) {
         parse_StageRankArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_stagerankarr())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_stagerankarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_StageRankArr;
        if (input->ExpectTag(64)) goto parse_TotalRank;
        break;
      }

      // optional uint32 TotalRank = 8;
      case 8: {
        if (tag == 64) {
         parse_TotalRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalrank_)));
          set_has_totalrank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_GroupId;
        break;
      }

      // optional uint32 GroupId = 9;
      case 9: {
        if (tag == 72) {
         parse_GroupId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));
          set_has_groupid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_MaxStageRankArr;
        break;
      }

      // repeated int32 MaxStageRankArr = 10;
      case 10: {
        if (tag == 80) {
         parse_MaxStageRankArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 80, input, this->mutable_maxstagerankarr())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_maxstagerankarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_MaxStageRankArr;
        if (input->ExpectTag(88)) goto parse_MaxTotalRank;
        break;
      }

      // optional uint32 MaxTotalRank = 11;
      case 11: {
        if (tag == 88) {
         parse_MaxTotalRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxtotalrank_)));
          set_has_maxtotalrank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnifiedWorldGetInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnifiedWorldGetInfoRsp)
  return false;
#undef DO_
}

void TActUnifiedWorldGetInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnifiedWorldGetInfoRsp)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 Score = 2;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->score(), output);
  }

  // optional uint64 TotalScore = 3;
  if (has_totalscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->totalscore(), output);
  }

  // repeated .pb.TActUnifiedWorldGiftInfo ArrGiftInfo = 4;
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->arrgiftinfo(i), output);
  }

  // repeated .pb.TActUnifiedWorldTaskInfo ArrTaskInfo = 5;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->arrtaskinfo(i), output);
  }

  // repeated .pb.TActivityRewardInfo ArrScoreRewardInfo = 6;
  for (int i = 0; i < this->arrscorerewardinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->arrscorerewardinfo(i), output);
  }

  // repeated int32 StageRankArr = 7;
  for (int i = 0; i < this->stagerankarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->stagerankarr(i), output);
  }

  // optional uint32 TotalRank = 8;
  if (has_totalrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->totalrank(), output);
  }

  // optional uint32 GroupId = 9;
  if (has_groupid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->groupid(), output);
  }

  // repeated int32 MaxStageRankArr = 10;
  for (int i = 0; i < this->maxstagerankarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      10, this->maxstagerankarr(i), output);
  }

  // optional uint32 MaxTotalRank = 11;
  if (has_maxtotalrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->maxtotalrank(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnifiedWorldGetInfoRsp)
}

::google::protobuf::uint8* TActUnifiedWorldGetInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnifiedWorldGetInfoRsp)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 Score = 2;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->score(), target);
  }

  // optional uint64 TotalScore = 3;
  if (has_totalscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->totalscore(), target);
  }

  // repeated .pb.TActUnifiedWorldGiftInfo ArrGiftInfo = 4;
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->arrgiftinfo(i), target);
  }

  // repeated .pb.TActUnifiedWorldTaskInfo ArrTaskInfo = 5;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->arrtaskinfo(i), target);
  }

  // repeated .pb.TActivityRewardInfo ArrScoreRewardInfo = 6;
  for (int i = 0; i < this->arrscorerewardinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->arrscorerewardinfo(i), target);
  }

  // repeated int32 StageRankArr = 7;
  for (int i = 0; i < this->stagerankarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->stagerankarr(i), target);
  }

  // optional uint32 TotalRank = 8;
  if (has_totalrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->totalrank(), target);
  }

  // optional uint32 GroupId = 9;
  if (has_groupid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->groupid(), target);
  }

  // repeated int32 MaxStageRankArr = 10;
  for (int i = 0; i < this->maxstagerankarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(10, this->maxstagerankarr(i), target);
  }

  // optional uint32 MaxTotalRank = 11;
  if (has_maxtotalrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->maxtotalrank(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnifiedWorldGetInfoRsp)
  return target;
}

int TActUnifiedWorldGetInfoRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 Score = 2;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->score());
    }

    // optional uint64 TotalScore = 3;
    if (has_totalscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->totalscore());
    }

    // optional uint32 TotalRank = 8;
    if (has_totalrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->totalrank());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 GroupId = 9;
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->groupid());
    }

    // optional uint32 MaxTotalRank = 11;
    if (has_maxtotalrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxtotalrank());
    }

  }
  // repeated .pb.TActUnifiedWorldGiftInfo ArrGiftInfo = 4;
  total_size += 1 * this->arrgiftinfo_size();
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrgiftinfo(i));
  }

  // repeated .pb.TActUnifiedWorldTaskInfo ArrTaskInfo = 5;
  total_size += 1 * this->arrtaskinfo_size();
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtaskinfo(i));
  }

  // repeated .pb.TActivityRewardInfo ArrScoreRewardInfo = 6;
  total_size += 1 * this->arrscorerewardinfo_size();
  for (int i = 0; i < this->arrscorerewardinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrscorerewardinfo(i));
  }

  // repeated int32 StageRankArr = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->stagerankarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->stagerankarr(i));
    }
    total_size += 1 * this->stagerankarr_size() + data_size;
  }

  // repeated int32 MaxStageRankArr = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->maxstagerankarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->maxstagerankarr(i));
    }
    total_size += 1 * this->maxstagerankarr_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnifiedWorldGetInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnifiedWorldGetInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnifiedWorldGetInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnifiedWorldGetInfoRsp::MergeFrom(const TActUnifiedWorldGetInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrgiftinfo_.MergeFrom(from.arrgiftinfo_);
  arrtaskinfo_.MergeFrom(from.arrtaskinfo_);
  arrscorerewardinfo_.MergeFrom(from.arrscorerewardinfo_);
  stagerankarr_.MergeFrom(from.stagerankarr_);
  maxstagerankarr_.MergeFrom(from.maxstagerankarr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_totalscore()) {
      set_totalscore(from.totalscore());
    }
    if (from.has_totalrank()) {
      set_totalrank(from.totalrank());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_groupid()) {
      set_groupid(from.groupid());
    }
    if (from.has_maxtotalrank()) {
      set_maxtotalrank(from.maxtotalrank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnifiedWorldGetInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnifiedWorldGetInfoRsp::CopyFrom(const TActUnifiedWorldGetInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnifiedWorldGetInfoRsp::IsInitialized() const {

  return true;
}

void TActUnifiedWorldGetInfoRsp::Swap(TActUnifiedWorldGetInfoRsp* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(score_, other->score_);
    std::swap(totalscore_, other->totalscore_);
    arrgiftinfo_.Swap(&other->arrgiftinfo_);
    arrtaskinfo_.Swap(&other->arrtaskinfo_);
    arrscorerewardinfo_.Swap(&other->arrscorerewardinfo_);
    stagerankarr_.Swap(&other->stagerankarr_);
    std::swap(totalrank_, other->totalrank_);
    std::swap(groupid_, other->groupid_);
    maxstagerankarr_.Swap(&other->maxstagerankarr_);
    std::swap(maxtotalrank_, other->maxtotalrank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnifiedWorldGetInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnifiedWorldGetInfoRsp_descriptor_;
  metadata.reflection = TActUnifiedWorldGetInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnifiedWorldGetArrScoreRewardReq::kArrIdFieldNumber;
#endif  // !_MSC_VER

TActUnifiedWorldGetArrScoreRewardReq::TActUnifiedWorldGetArrScoreRewardReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnifiedWorldGetArrScoreRewardReq)
}

void TActUnifiedWorldGetArrScoreRewardReq::InitAsDefaultInstance() {
}

TActUnifiedWorldGetArrScoreRewardReq::TActUnifiedWorldGetArrScoreRewardReq(const TActUnifiedWorldGetArrScoreRewardReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnifiedWorldGetArrScoreRewardReq)
}

void TActUnifiedWorldGetArrScoreRewardReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnifiedWorldGetArrScoreRewardReq::~TActUnifiedWorldGetArrScoreRewardReq() {
  // @@protoc_insertion_point(destructor:pb.TActUnifiedWorldGetArrScoreRewardReq)
  SharedDtor();
}

void TActUnifiedWorldGetArrScoreRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnifiedWorldGetArrScoreRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnifiedWorldGetArrScoreRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnifiedWorldGetArrScoreRewardReq_descriptor_;
}

const TActUnifiedWorldGetArrScoreRewardReq& TActUnifiedWorldGetArrScoreRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  return *default_instance_;
}

TActUnifiedWorldGetArrScoreRewardReq* TActUnifiedWorldGetArrScoreRewardReq::default_instance_ = NULL;

TActUnifiedWorldGetArrScoreRewardReq* TActUnifiedWorldGetArrScoreRewardReq::New() const {
  return new TActUnifiedWorldGetArrScoreRewardReq;
}

void TActUnifiedWorldGetArrScoreRewardReq::Clear() {
  arrid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnifiedWorldGetArrScoreRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnifiedWorldGetArrScoreRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ArrId = 1;
      case 1: {
        if (tag == 8) {
         parse_ArrId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_arrid())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_arrid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ArrId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnifiedWorldGetArrScoreRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnifiedWorldGetArrScoreRewardReq)
  return false;
#undef DO_
}

void TActUnifiedWorldGetArrScoreRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnifiedWorldGetArrScoreRewardReq)
  // repeated uint32 ArrId = 1;
  for (int i = 0; i < this->arrid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->arrid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnifiedWorldGetArrScoreRewardReq)
}

::google::protobuf::uint8* TActUnifiedWorldGetArrScoreRewardReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnifiedWorldGetArrScoreRewardReq)
  // repeated uint32 ArrId = 1;
  for (int i = 0; i < this->arrid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->arrid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnifiedWorldGetArrScoreRewardReq)
  return target;
}

int TActUnifiedWorldGetArrScoreRewardReq::ByteSize() const {
  int total_size = 0;

  // repeated uint32 ArrId = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->arrid(i));
    }
    total_size += 1 * this->arrid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnifiedWorldGetArrScoreRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnifiedWorldGetArrScoreRewardReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnifiedWorldGetArrScoreRewardReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnifiedWorldGetArrScoreRewardReq::MergeFrom(const TActUnifiedWorldGetArrScoreRewardReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrid_.MergeFrom(from.arrid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnifiedWorldGetArrScoreRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnifiedWorldGetArrScoreRewardReq::CopyFrom(const TActUnifiedWorldGetArrScoreRewardReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnifiedWorldGetArrScoreRewardReq::IsInitialized() const {

  return true;
}

void TActUnifiedWorldGetArrScoreRewardReq::Swap(TActUnifiedWorldGetArrScoreRewardReq* other) {
  if (other != this) {
    arrid_.Swap(&other->arrid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnifiedWorldGetArrScoreRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnifiedWorldGetArrScoreRewardReq_descriptor_;
  metadata.reflection = TActUnifiedWorldGetArrScoreRewardReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnifiedWorldGetArrScoreRewardRsp::kArrRewardFieldNumber;
#endif  // !_MSC_VER

TActUnifiedWorldGetArrScoreRewardRsp::TActUnifiedWorldGetArrScoreRewardRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnifiedWorldGetArrScoreRewardRsp)
}

void TActUnifiedWorldGetArrScoreRewardRsp::InitAsDefaultInstance() {
}

TActUnifiedWorldGetArrScoreRewardRsp::TActUnifiedWorldGetArrScoreRewardRsp(const TActUnifiedWorldGetArrScoreRewardRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnifiedWorldGetArrScoreRewardRsp)
}

void TActUnifiedWorldGetArrScoreRewardRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnifiedWorldGetArrScoreRewardRsp::~TActUnifiedWorldGetArrScoreRewardRsp() {
  // @@protoc_insertion_point(destructor:pb.TActUnifiedWorldGetArrScoreRewardRsp)
  SharedDtor();
}

void TActUnifiedWorldGetArrScoreRewardRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnifiedWorldGetArrScoreRewardRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnifiedWorldGetArrScoreRewardRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnifiedWorldGetArrScoreRewardRsp_descriptor_;
}

const TActUnifiedWorldGetArrScoreRewardRsp& TActUnifiedWorldGetArrScoreRewardRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  return *default_instance_;
}

TActUnifiedWorldGetArrScoreRewardRsp* TActUnifiedWorldGetArrScoreRewardRsp::default_instance_ = NULL;

TActUnifiedWorldGetArrScoreRewardRsp* TActUnifiedWorldGetArrScoreRewardRsp::New() const {
  return new TActUnifiedWorldGetArrScoreRewardRsp;
}

void TActUnifiedWorldGetArrScoreRewardRsp::Clear() {
  arrreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnifiedWorldGetArrScoreRewardRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnifiedWorldGetArrScoreRewardRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward ArrReward = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrReward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrreward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrReward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnifiedWorldGetArrScoreRewardRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnifiedWorldGetArrScoreRewardRsp)
  return false;
#undef DO_
}

void TActUnifiedWorldGetArrScoreRewardRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnifiedWorldGetArrScoreRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnifiedWorldGetArrScoreRewardRsp)
}

::google::protobuf::uint8* TActUnifiedWorldGetArrScoreRewardRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnifiedWorldGetArrScoreRewardRsp)
  // repeated .pb.TCommonReward ArrReward = 1;
  for (int i = 0; i < this->arrreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnifiedWorldGetArrScoreRewardRsp)
  return target;
}

int TActUnifiedWorldGetArrScoreRewardRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward ArrReward = 1;
  total_size += 1 * this->arrreward_size();
  for (int i = 0; i < this->arrreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnifiedWorldGetArrScoreRewardRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnifiedWorldGetArrScoreRewardRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnifiedWorldGetArrScoreRewardRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnifiedWorldGetArrScoreRewardRsp::MergeFrom(const TActUnifiedWorldGetArrScoreRewardRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrreward_.MergeFrom(from.arrreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnifiedWorldGetArrScoreRewardRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnifiedWorldGetArrScoreRewardRsp::CopyFrom(const TActUnifiedWorldGetArrScoreRewardRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnifiedWorldGetArrScoreRewardRsp::IsInitialized() const {

  return true;
}

void TActUnifiedWorldGetArrScoreRewardRsp::Swap(TActUnifiedWorldGetArrScoreRewardRsp* other) {
  if (other != this) {
    arrreward_.Swap(&other->arrreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnifiedWorldGetArrScoreRewardRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnifiedWorldGetArrScoreRewardRsp_descriptor_;
  metadata.reflection = TActUnifiedWorldGetArrScoreRewardRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnifiedWorldRankInfo::kUserInfoFieldNumber;
const int TActUnifiedWorldRankInfo::kRankFieldNumber;
const int TActUnifiedWorldRankInfo::kScoreFieldNumber;
#endif  // !_MSC_VER

TActUnifiedWorldRankInfo::TActUnifiedWorldRankInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnifiedWorldRankInfo)
}

void TActUnifiedWorldRankInfo::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::pb::TUserSimpleInfo*>(&::pb::TUserSimpleInfo::default_instance());
}

TActUnifiedWorldRankInfo::TActUnifiedWorldRankInfo(const TActUnifiedWorldRankInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnifiedWorldRankInfo)
}

void TActUnifiedWorldRankInfo::SharedCtor() {
  _cached_size_ = 0;
  userinfo_ = NULL;
  rank_ = 0u;
  score_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnifiedWorldRankInfo::~TActUnifiedWorldRankInfo() {
  // @@protoc_insertion_point(destructor:pb.TActUnifiedWorldRankInfo)
  SharedDtor();
}

void TActUnifiedWorldRankInfo::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void TActUnifiedWorldRankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnifiedWorldRankInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnifiedWorldRankInfo_descriptor_;
}

const TActUnifiedWorldRankInfo& TActUnifiedWorldRankInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  return *default_instance_;
}

TActUnifiedWorldRankInfo* TActUnifiedWorldRankInfo::default_instance_ = NULL;

TActUnifiedWorldRankInfo* TActUnifiedWorldRankInfo::New() const {
  return new TActUnifiedWorldRankInfo;
}

void TActUnifiedWorldRankInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActUnifiedWorldRankInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(score_, rank_);
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::pb::TUserSimpleInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnifiedWorldRankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnifiedWorldRankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TUserSimpleInfo UserInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Rank;
        break;
      }

      // optional uint32 Rank = 2;
      case 2: {
        if (tag == 16) {
         parse_Rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Score;
        break;
      }

      // optional uint64 Score = 3;
      case 3: {
        if (tag == 24) {
         parse_Score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnifiedWorldRankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnifiedWorldRankInfo)
  return false;
#undef DO_
}

void TActUnifiedWorldRankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnifiedWorldRankInfo)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(), output);
  }

  // optional uint32 Rank = 2;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rank(), output);
  }

  // optional uint64 Score = 3;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->score(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnifiedWorldRankInfo)
}

::google::protobuf::uint8* TActUnifiedWorldRankInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnifiedWorldRankInfo)
  // optional .pb.TUserSimpleInfo UserInfo = 1;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userinfo(), target);
  }

  // optional uint32 Rank = 2;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rank(), target);
  }

  // optional uint64 Score = 3;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->score(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnifiedWorldRankInfo)
  return target;
}

int TActUnifiedWorldRankInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TUserSimpleInfo UserInfo = 1;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfo());
    }

    // optional uint32 Rank = 2;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rank());
    }

    // optional uint64 Score = 3;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->score());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnifiedWorldRankInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnifiedWorldRankInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnifiedWorldRankInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnifiedWorldRankInfo::MergeFrom(const TActUnifiedWorldRankInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userinfo()) {
      mutable_userinfo()->::pb::TUserSimpleInfo::MergeFrom(from.userinfo());
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnifiedWorldRankInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnifiedWorldRankInfo::CopyFrom(const TActUnifiedWorldRankInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnifiedWorldRankInfo::IsInitialized() const {

  return true;
}

void TActUnifiedWorldRankInfo::Swap(TActUnifiedWorldRankInfo* other) {
  if (other != this) {
    std::swap(userinfo_, other->userinfo_);
    std::swap(rank_, other->rank_);
    std::swap(score_, other->score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnifiedWorldRankInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnifiedWorldRankInfo_descriptor_;
  metadata.reflection = TActUnifiedWorldRankInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnifiedWorldGetStageRankReq::kOffsetFieldNumber;
const int TActUnifiedWorldGetStageRankReq::kLimitFieldNumber;
#endif  // !_MSC_VER

TActUnifiedWorldGetStageRankReq::TActUnifiedWorldGetStageRankReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnifiedWorldGetStageRankReq)
}

void TActUnifiedWorldGetStageRankReq::InitAsDefaultInstance() {
}

TActUnifiedWorldGetStageRankReq::TActUnifiedWorldGetStageRankReq(const TActUnifiedWorldGetStageRankReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnifiedWorldGetStageRankReq)
}

void TActUnifiedWorldGetStageRankReq::SharedCtor() {
  _cached_size_ = 0;
  offset_ = 0u;
  limit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnifiedWorldGetStageRankReq::~TActUnifiedWorldGetStageRankReq() {
  // @@protoc_insertion_point(destructor:pb.TActUnifiedWorldGetStageRankReq)
  SharedDtor();
}

void TActUnifiedWorldGetStageRankReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnifiedWorldGetStageRankReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnifiedWorldGetStageRankReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnifiedWorldGetStageRankReq_descriptor_;
}

const TActUnifiedWorldGetStageRankReq& TActUnifiedWorldGetStageRankReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  return *default_instance_;
}

TActUnifiedWorldGetStageRankReq* TActUnifiedWorldGetStageRankReq::default_instance_ = NULL;

TActUnifiedWorldGetStageRankReq* TActUnifiedWorldGetStageRankReq::New() const {
  return new TActUnifiedWorldGetStageRankReq;
}

void TActUnifiedWorldGetStageRankReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActUnifiedWorldGetStageRankReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(offset_, limit_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnifiedWorldGetStageRankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnifiedWorldGetStageRankReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Offset = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Limit;
        break;
      }

      // optional uint32 Limit = 2;
      case 2: {
        if (tag == 16) {
         parse_Limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnifiedWorldGetStageRankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnifiedWorldGetStageRankReq)
  return false;
#undef DO_
}

void TActUnifiedWorldGetStageRankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnifiedWorldGetStageRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->offset(), output);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnifiedWorldGetStageRankReq)
}

::google::protobuf::uint8* TActUnifiedWorldGetStageRankReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnifiedWorldGetStageRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->offset(), target);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnifiedWorldGetStageRankReq)
  return target;
}

int TActUnifiedWorldGetStageRankReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Offset = 1;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 Limit = 2;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnifiedWorldGetStageRankReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnifiedWorldGetStageRankReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnifiedWorldGetStageRankReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnifiedWorldGetStageRankReq::MergeFrom(const TActUnifiedWorldGetStageRankReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnifiedWorldGetStageRankReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnifiedWorldGetStageRankReq::CopyFrom(const TActUnifiedWorldGetStageRankReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnifiedWorldGetStageRankReq::IsInitialized() const {

  return true;
}

void TActUnifiedWorldGetStageRankReq::Swap(TActUnifiedWorldGetStageRankReq* other) {
  if (other != this) {
    std::swap(offset_, other->offset_);
    std::swap(limit_, other->limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnifiedWorldGetStageRankReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnifiedWorldGetStageRankReq_descriptor_;
  metadata.reflection = TActUnifiedWorldGetStageRankReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnifiedWorldGetStageRankRsp::kArrRankInfoFieldNumber;
#endif  // !_MSC_VER

TActUnifiedWorldGetStageRankRsp::TActUnifiedWorldGetStageRankRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnifiedWorldGetStageRankRsp)
}

void TActUnifiedWorldGetStageRankRsp::InitAsDefaultInstance() {
}

TActUnifiedWorldGetStageRankRsp::TActUnifiedWorldGetStageRankRsp(const TActUnifiedWorldGetStageRankRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnifiedWorldGetStageRankRsp)
}

void TActUnifiedWorldGetStageRankRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnifiedWorldGetStageRankRsp::~TActUnifiedWorldGetStageRankRsp() {
  // @@protoc_insertion_point(destructor:pb.TActUnifiedWorldGetStageRankRsp)
  SharedDtor();
}

void TActUnifiedWorldGetStageRankRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnifiedWorldGetStageRankRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnifiedWorldGetStageRankRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnifiedWorldGetStageRankRsp_descriptor_;
}

const TActUnifiedWorldGetStageRankRsp& TActUnifiedWorldGetStageRankRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  return *default_instance_;
}

TActUnifiedWorldGetStageRankRsp* TActUnifiedWorldGetStageRankRsp::default_instance_ = NULL;

TActUnifiedWorldGetStageRankRsp* TActUnifiedWorldGetStageRankRsp::New() const {
  return new TActUnifiedWorldGetStageRankRsp;
}

void TActUnifiedWorldGetStageRankRsp::Clear() {
  arrrankinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnifiedWorldGetStageRankRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnifiedWorldGetStageRankRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrRankInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrankinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrRankInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnifiedWorldGetStageRankRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnifiedWorldGetStageRankRsp)
  return false;
#undef DO_
}

void TActUnifiedWorldGetStageRankRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnifiedWorldGetStageRankRsp)
  // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 1;
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrrankinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnifiedWorldGetStageRankRsp)
}

::google::protobuf::uint8* TActUnifiedWorldGetStageRankRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnifiedWorldGetStageRankRsp)
  // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 1;
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrrankinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnifiedWorldGetStageRankRsp)
  return target;
}

int TActUnifiedWorldGetStageRankRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 1;
  total_size += 1 * this->arrrankinfo_size();
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrankinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnifiedWorldGetStageRankRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnifiedWorldGetStageRankRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnifiedWorldGetStageRankRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnifiedWorldGetStageRankRsp::MergeFrom(const TActUnifiedWorldGetStageRankRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrankinfo_.MergeFrom(from.arrrankinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnifiedWorldGetStageRankRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnifiedWorldGetStageRankRsp::CopyFrom(const TActUnifiedWorldGetStageRankRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnifiedWorldGetStageRankRsp::IsInitialized() const {

  return true;
}

void TActUnifiedWorldGetStageRankRsp::Swap(TActUnifiedWorldGetStageRankRsp* other) {
  if (other != this) {
    arrrankinfo_.Swap(&other->arrrankinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnifiedWorldGetStageRankRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnifiedWorldGetStageRankRsp_descriptor_;
  metadata.reflection = TActUnifiedWorldGetStageRankRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnifiedWorldGetTotalRankReq::kOffsetFieldNumber;
const int TActUnifiedWorldGetTotalRankReq::kLimitFieldNumber;
#endif  // !_MSC_VER

TActUnifiedWorldGetTotalRankReq::TActUnifiedWorldGetTotalRankReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnifiedWorldGetTotalRankReq)
}

void TActUnifiedWorldGetTotalRankReq::InitAsDefaultInstance() {
}

TActUnifiedWorldGetTotalRankReq::TActUnifiedWorldGetTotalRankReq(const TActUnifiedWorldGetTotalRankReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnifiedWorldGetTotalRankReq)
}

void TActUnifiedWorldGetTotalRankReq::SharedCtor() {
  _cached_size_ = 0;
  offset_ = 0u;
  limit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnifiedWorldGetTotalRankReq::~TActUnifiedWorldGetTotalRankReq() {
  // @@protoc_insertion_point(destructor:pb.TActUnifiedWorldGetTotalRankReq)
  SharedDtor();
}

void TActUnifiedWorldGetTotalRankReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnifiedWorldGetTotalRankReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnifiedWorldGetTotalRankReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnifiedWorldGetTotalRankReq_descriptor_;
}

const TActUnifiedWorldGetTotalRankReq& TActUnifiedWorldGetTotalRankReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  return *default_instance_;
}

TActUnifiedWorldGetTotalRankReq* TActUnifiedWorldGetTotalRankReq::default_instance_ = NULL;

TActUnifiedWorldGetTotalRankReq* TActUnifiedWorldGetTotalRankReq::New() const {
  return new TActUnifiedWorldGetTotalRankReq;
}

void TActUnifiedWorldGetTotalRankReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActUnifiedWorldGetTotalRankReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(offset_, limit_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnifiedWorldGetTotalRankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnifiedWorldGetTotalRankReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Offset = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Limit;
        break;
      }

      // optional uint32 Limit = 2;
      case 2: {
        if (tag == 16) {
         parse_Limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnifiedWorldGetTotalRankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnifiedWorldGetTotalRankReq)
  return false;
#undef DO_
}

void TActUnifiedWorldGetTotalRankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnifiedWorldGetTotalRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->offset(), output);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnifiedWorldGetTotalRankReq)
}

::google::protobuf::uint8* TActUnifiedWorldGetTotalRankReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnifiedWorldGetTotalRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->offset(), target);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnifiedWorldGetTotalRankReq)
  return target;
}

int TActUnifiedWorldGetTotalRankReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Offset = 1;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 Limit = 2;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnifiedWorldGetTotalRankReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnifiedWorldGetTotalRankReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnifiedWorldGetTotalRankReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnifiedWorldGetTotalRankReq::MergeFrom(const TActUnifiedWorldGetTotalRankReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnifiedWorldGetTotalRankReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnifiedWorldGetTotalRankReq::CopyFrom(const TActUnifiedWorldGetTotalRankReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnifiedWorldGetTotalRankReq::IsInitialized() const {

  return true;
}

void TActUnifiedWorldGetTotalRankReq::Swap(TActUnifiedWorldGetTotalRankReq* other) {
  if (other != this) {
    std::swap(offset_, other->offset_);
    std::swap(limit_, other->limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnifiedWorldGetTotalRankReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnifiedWorldGetTotalRankReq_descriptor_;
  metadata.reflection = TActUnifiedWorldGetTotalRankReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnifiedWorldGetTotalRankRsp::kArrRankInfoFieldNumber;
#endif  // !_MSC_VER

TActUnifiedWorldGetTotalRankRsp::TActUnifiedWorldGetTotalRankRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnifiedWorldGetTotalRankRsp)
}

void TActUnifiedWorldGetTotalRankRsp::InitAsDefaultInstance() {
}

TActUnifiedWorldGetTotalRankRsp::TActUnifiedWorldGetTotalRankRsp(const TActUnifiedWorldGetTotalRankRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnifiedWorldGetTotalRankRsp)
}

void TActUnifiedWorldGetTotalRankRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnifiedWorldGetTotalRankRsp::~TActUnifiedWorldGetTotalRankRsp() {
  // @@protoc_insertion_point(destructor:pb.TActUnifiedWorldGetTotalRankRsp)
  SharedDtor();
}

void TActUnifiedWorldGetTotalRankRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnifiedWorldGetTotalRankRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnifiedWorldGetTotalRankRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnifiedWorldGetTotalRankRsp_descriptor_;
}

const TActUnifiedWorldGetTotalRankRsp& TActUnifiedWorldGetTotalRankRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  return *default_instance_;
}

TActUnifiedWorldGetTotalRankRsp* TActUnifiedWorldGetTotalRankRsp::default_instance_ = NULL;

TActUnifiedWorldGetTotalRankRsp* TActUnifiedWorldGetTotalRankRsp::New() const {
  return new TActUnifiedWorldGetTotalRankRsp;
}

void TActUnifiedWorldGetTotalRankRsp::Clear() {
  arrrankinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnifiedWorldGetTotalRankRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnifiedWorldGetTotalRankRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_ArrRankInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrankinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ArrRankInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnifiedWorldGetTotalRankRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnifiedWorldGetTotalRankRsp)
  return false;
#undef DO_
}

void TActUnifiedWorldGetTotalRankRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnifiedWorldGetTotalRankRsp)
  // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 1;
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrrankinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnifiedWorldGetTotalRankRsp)
}

::google::protobuf::uint8* TActUnifiedWorldGetTotalRankRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnifiedWorldGetTotalRankRsp)
  // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 1;
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->arrrankinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnifiedWorldGetTotalRankRsp)
  return target;
}

int TActUnifiedWorldGetTotalRankRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 1;
  total_size += 1 * this->arrrankinfo_size();
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrankinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnifiedWorldGetTotalRankRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnifiedWorldGetTotalRankRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnifiedWorldGetTotalRankRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnifiedWorldGetTotalRankRsp::MergeFrom(const TActUnifiedWorldGetTotalRankRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrankinfo_.MergeFrom(from.arrrankinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnifiedWorldGetTotalRankRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnifiedWorldGetTotalRankRsp::CopyFrom(const TActUnifiedWorldGetTotalRankRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnifiedWorldGetTotalRankRsp::IsInitialized() const {

  return true;
}

void TActUnifiedWorldGetTotalRankRsp::Swap(TActUnifiedWorldGetTotalRankRsp* other) {
  if (other != this) {
    arrrankinfo_.Swap(&other->arrrankinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnifiedWorldGetTotalRankRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnifiedWorldGetTotalRankRsp_descriptor_;
  metadata.reflection = TActUnifiedWorldGetTotalRankRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnifiedWorldGetLastTotalRankReq::kOffsetFieldNumber;
const int TActUnifiedWorldGetLastTotalRankReq::kLimitFieldNumber;
#endif  // !_MSC_VER

TActUnifiedWorldGetLastTotalRankReq::TActUnifiedWorldGetLastTotalRankReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnifiedWorldGetLastTotalRankReq)
}

void TActUnifiedWorldGetLastTotalRankReq::InitAsDefaultInstance() {
}

TActUnifiedWorldGetLastTotalRankReq::TActUnifiedWorldGetLastTotalRankReq(const TActUnifiedWorldGetLastTotalRankReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnifiedWorldGetLastTotalRankReq)
}

void TActUnifiedWorldGetLastTotalRankReq::SharedCtor() {
  _cached_size_ = 0;
  offset_ = 0u;
  limit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnifiedWorldGetLastTotalRankReq::~TActUnifiedWorldGetLastTotalRankReq() {
  // @@protoc_insertion_point(destructor:pb.TActUnifiedWorldGetLastTotalRankReq)
  SharedDtor();
}

void TActUnifiedWorldGetLastTotalRankReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnifiedWorldGetLastTotalRankReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnifiedWorldGetLastTotalRankReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnifiedWorldGetLastTotalRankReq_descriptor_;
}

const TActUnifiedWorldGetLastTotalRankReq& TActUnifiedWorldGetLastTotalRankReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  return *default_instance_;
}

TActUnifiedWorldGetLastTotalRankReq* TActUnifiedWorldGetLastTotalRankReq::default_instance_ = NULL;

TActUnifiedWorldGetLastTotalRankReq* TActUnifiedWorldGetLastTotalRankReq::New() const {
  return new TActUnifiedWorldGetLastTotalRankReq;
}

void TActUnifiedWorldGetLastTotalRankReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActUnifiedWorldGetLastTotalRankReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(offset_, limit_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnifiedWorldGetLastTotalRankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnifiedWorldGetLastTotalRankReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Offset = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Limit;
        break;
      }

      // optional uint32 Limit = 2;
      case 2: {
        if (tag == 16) {
         parse_Limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnifiedWorldGetLastTotalRankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnifiedWorldGetLastTotalRankReq)
  return false;
#undef DO_
}

void TActUnifiedWorldGetLastTotalRankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnifiedWorldGetLastTotalRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->offset(), output);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnifiedWorldGetLastTotalRankReq)
}

::google::protobuf::uint8* TActUnifiedWorldGetLastTotalRankReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnifiedWorldGetLastTotalRankReq)
  // optional uint32 Offset = 1;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->offset(), target);
  }

  // optional uint32 Limit = 2;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnifiedWorldGetLastTotalRankReq)
  return target;
}

int TActUnifiedWorldGetLastTotalRankReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Offset = 1;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 Limit = 2;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnifiedWorldGetLastTotalRankReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnifiedWorldGetLastTotalRankReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnifiedWorldGetLastTotalRankReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnifiedWorldGetLastTotalRankReq::MergeFrom(const TActUnifiedWorldGetLastTotalRankReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnifiedWorldGetLastTotalRankReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnifiedWorldGetLastTotalRankReq::CopyFrom(const TActUnifiedWorldGetLastTotalRankReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnifiedWorldGetLastTotalRankReq::IsInitialized() const {

  return true;
}

void TActUnifiedWorldGetLastTotalRankReq::Swap(TActUnifiedWorldGetLastTotalRankReq* other) {
  if (other != this) {
    std::swap(offset_, other->offset_);
    std::swap(limit_, other->limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnifiedWorldGetLastTotalRankReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnifiedWorldGetLastTotalRankReq_descriptor_;
  metadata.reflection = TActUnifiedWorldGetLastTotalRankReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnifiedWorldGetLastTotalRankRsp::kMyRankFieldNumber;
const int TActUnifiedWorldGetLastTotalRankRsp::kArrRankInfoFieldNumber;
#endif  // !_MSC_VER

TActUnifiedWorldGetLastTotalRankRsp::TActUnifiedWorldGetLastTotalRankRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnifiedWorldGetLastTotalRankRsp)
}

void TActUnifiedWorldGetLastTotalRankRsp::InitAsDefaultInstance() {
}

TActUnifiedWorldGetLastTotalRankRsp::TActUnifiedWorldGetLastTotalRankRsp(const TActUnifiedWorldGetLastTotalRankRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnifiedWorldGetLastTotalRankRsp)
}

void TActUnifiedWorldGetLastTotalRankRsp::SharedCtor() {
  _cached_size_ = 0;
  myrank_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnifiedWorldGetLastTotalRankRsp::~TActUnifiedWorldGetLastTotalRankRsp() {
  // @@protoc_insertion_point(destructor:pb.TActUnifiedWorldGetLastTotalRankRsp)
  SharedDtor();
}

void TActUnifiedWorldGetLastTotalRankRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnifiedWorldGetLastTotalRankRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnifiedWorldGetLastTotalRankRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnifiedWorldGetLastTotalRankRsp_descriptor_;
}

const TActUnifiedWorldGetLastTotalRankRsp& TActUnifiedWorldGetLastTotalRankRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  return *default_instance_;
}

TActUnifiedWorldGetLastTotalRankRsp* TActUnifiedWorldGetLastTotalRankRsp::default_instance_ = NULL;

TActUnifiedWorldGetLastTotalRankRsp* TActUnifiedWorldGetLastTotalRankRsp::New() const {
  return new TActUnifiedWorldGetLastTotalRankRsp;
}

void TActUnifiedWorldGetLastTotalRankRsp::Clear() {
  myrank_ = 0u;
  arrrankinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnifiedWorldGetLastTotalRankRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnifiedWorldGetLastTotalRankRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MyRank = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &myrank_)));
          set_has_myrank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRankInfo;
        break;
      }

      // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_ArrRankInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrrankinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ArrRankInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnifiedWorldGetLastTotalRankRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnifiedWorldGetLastTotalRankRsp)
  return false;
#undef DO_
}

void TActUnifiedWorldGetLastTotalRankRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnifiedWorldGetLastTotalRankRsp)
  // optional uint32 MyRank = 1;
  if (has_myrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->myrank(), output);
  }

  // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 2;
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arrrankinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnifiedWorldGetLastTotalRankRsp)
}

::google::protobuf::uint8* TActUnifiedWorldGetLastTotalRankRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnifiedWorldGetLastTotalRankRsp)
  // optional uint32 MyRank = 1;
  if (has_myrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->myrank(), target);
  }

  // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 2;
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->arrrankinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnifiedWorldGetLastTotalRankRsp)
  return target;
}

int TActUnifiedWorldGetLastTotalRankRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MyRank = 1;
    if (has_myrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->myrank());
    }

  }
  // repeated .pb.TActUnifiedWorldRankInfo ArrRankInfo = 2;
  total_size += 1 * this->arrrankinfo_size();
  for (int i = 0; i < this->arrrankinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrrankinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnifiedWorldGetLastTotalRankRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnifiedWorldGetLastTotalRankRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnifiedWorldGetLastTotalRankRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnifiedWorldGetLastTotalRankRsp::MergeFrom(const TActUnifiedWorldGetLastTotalRankRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrrankinfo_.MergeFrom(from.arrrankinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myrank()) {
      set_myrank(from.myrank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnifiedWorldGetLastTotalRankRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnifiedWorldGetLastTotalRankRsp::CopyFrom(const TActUnifiedWorldGetLastTotalRankRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnifiedWorldGetLastTotalRankRsp::IsInitialized() const {

  return true;
}

void TActUnifiedWorldGetLastTotalRankRsp::Swap(TActUnifiedWorldGetLastTotalRankRsp* other) {
  if (other != this) {
    std::swap(myrank_, other->myrank_);
    arrrankinfo_.Swap(&other->arrrankinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnifiedWorldGetLastTotalRankRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnifiedWorldGetLastTotalRankRsp_descriptor_;
  metadata.reflection = TActUnifiedWorldGetLastTotalRankRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TActUnifiedWorldNotify::kIdFieldNumber;
const int TActUnifiedWorldNotify::kScoreFieldNumber;
const int TActUnifiedWorldNotify::kTotalScoreFieldNumber;
const int TActUnifiedWorldNotify::kArrGiftInfoFieldNumber;
const int TActUnifiedWorldNotify::kArrTaskInfoFieldNumber;
const int TActUnifiedWorldNotify::kStageRankFieldNumber;
const int TActUnifiedWorldNotify::kTotalRankFieldNumber;
const int TActUnifiedWorldNotify::kMaxStageRankFieldNumber;
const int TActUnifiedWorldNotify::kMaxTotalRankFieldNumber;
#endif  // !_MSC_VER

TActUnifiedWorldNotify::TActUnifiedWorldNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TActUnifiedWorldNotify)
}

void TActUnifiedWorldNotify::InitAsDefaultInstance() {
}

TActUnifiedWorldNotify::TActUnifiedWorldNotify(const TActUnifiedWorldNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TActUnifiedWorldNotify)
}

void TActUnifiedWorldNotify::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  score_ = GOOGLE_ULONGLONG(0);
  totalscore_ = GOOGLE_ULONGLONG(0);
  stagerank_ = 0u;
  totalrank_ = 0u;
  maxstagerank_ = 0u;
  maxtotalrank_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TActUnifiedWorldNotify::~TActUnifiedWorldNotify() {
  // @@protoc_insertion_point(destructor:pb.TActUnifiedWorldNotify)
  SharedDtor();
}

void TActUnifiedWorldNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TActUnifiedWorldNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TActUnifiedWorldNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TActUnifiedWorldNotify_descriptor_;
}

const TActUnifiedWorldNotify& TActUnifiedWorldNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fActUnifiedWorld_2eproto();
  return *default_instance_;
}

TActUnifiedWorldNotify* TActUnifiedWorldNotify::default_instance_ = NULL;

TActUnifiedWorldNotify* TActUnifiedWorldNotify::New() const {
  return new TActUnifiedWorldNotify;
}

void TActUnifiedWorldNotify::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TActUnifiedWorldNotify*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 231) {
    ZR_(score_, stagerank_);
    ZR_(totalrank_, maxstagerank_);
  }
  maxtotalrank_ = 0u;

#undef OFFSET_OF_FIELD_
#undef ZR_

  arrgiftinfo_.Clear();
  arrtaskinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TActUnifiedWorldNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TActUnifiedWorldNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Score;
        break;
      }

      // optional uint64 Score = 2;
      case 2: {
        if (tag == 16) {
         parse_Score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_TotalScore;
        break;
      }

      // optional uint64 TotalScore = 3;
      case 3: {
        if (tag == 24) {
         parse_TotalScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totalscore_)));
          set_has_totalscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrGiftInfo;
        break;
      }

      // repeated .pb.TActUnifiedWorldGiftInfo ArrGiftInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_ArrGiftInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrgiftinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ArrGiftInfo;
        if (input->ExpectTag(42)) goto parse_ArrTaskInfo;
        break;
      }

      // repeated .pb.TActUnifiedWorldTaskInfo ArrTaskInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_ArrTaskInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arrtaskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ArrTaskInfo;
        if (input->ExpectTag(48)) goto parse_StageRank;
        break;
      }

      // optional uint32 StageRank = 6;
      case 6: {
        if (tag == 48) {
         parse_StageRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stagerank_)));
          set_has_stagerank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_TotalRank;
        break;
      }

      // optional uint32 TotalRank = 7;
      case 7: {
        if (tag == 56) {
         parse_TotalRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalrank_)));
          set_has_totalrank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_MaxStageRank;
        break;
      }

      // optional uint32 MaxStageRank = 8;
      case 8: {
        if (tag == 64) {
         parse_MaxStageRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxstagerank_)));
          set_has_maxstagerank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_MaxTotalRank;
        break;
      }

      // optional uint32 MaxTotalRank = 9;
      case 9: {
        if (tag == 72) {
         parse_MaxTotalRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxtotalrank_)));
          set_has_maxtotalrank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TActUnifiedWorldNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TActUnifiedWorldNotify)
  return false;
#undef DO_
}

void TActUnifiedWorldNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TActUnifiedWorldNotify)
  // optional uint32 Id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 Score = 2;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->score(), output);
  }

  // optional uint64 TotalScore = 3;
  if (has_totalscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->totalscore(), output);
  }

  // repeated .pb.TActUnifiedWorldGiftInfo ArrGiftInfo = 4;
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->arrgiftinfo(i), output);
  }

  // repeated .pb.TActUnifiedWorldTaskInfo ArrTaskInfo = 5;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->arrtaskinfo(i), output);
  }

  // optional uint32 StageRank = 6;
  if (has_stagerank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->stagerank(), output);
  }

  // optional uint32 TotalRank = 7;
  if (has_totalrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->totalrank(), output);
  }

  // optional uint32 MaxStageRank = 8;
  if (has_maxstagerank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->maxstagerank(), output);
  }

  // optional uint32 MaxTotalRank = 9;
  if (has_maxtotalrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->maxtotalrank(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TActUnifiedWorldNotify)
}

::google::protobuf::uint8* TActUnifiedWorldNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TActUnifiedWorldNotify)
  // optional uint32 Id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 Score = 2;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->score(), target);
  }

  // optional uint64 TotalScore = 3;
  if (has_totalscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->totalscore(), target);
  }

  // repeated .pb.TActUnifiedWorldGiftInfo ArrGiftInfo = 4;
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->arrgiftinfo(i), target);
  }

  // repeated .pb.TActUnifiedWorldTaskInfo ArrTaskInfo = 5;
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->arrtaskinfo(i), target);
  }

  // optional uint32 StageRank = 6;
  if (has_stagerank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->stagerank(), target);
  }

  // optional uint32 TotalRank = 7;
  if (has_totalrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->totalrank(), target);
  }

  // optional uint32 MaxStageRank = 8;
  if (has_maxstagerank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->maxstagerank(), target);
  }

  // optional uint32 MaxTotalRank = 9;
  if (has_maxtotalrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->maxtotalrank(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TActUnifiedWorldNotify)
  return target;
}

int TActUnifiedWorldNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 Score = 2;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->score());
    }

    // optional uint64 TotalScore = 3;
    if (has_totalscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->totalscore());
    }

    // optional uint32 StageRank = 6;
    if (has_stagerank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stagerank());
    }

    // optional uint32 TotalRank = 7;
    if (has_totalrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->totalrank());
    }

    // optional uint32 MaxStageRank = 8;
    if (has_maxstagerank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxstagerank());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 MaxTotalRank = 9;
    if (has_maxtotalrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxtotalrank());
    }

  }
  // repeated .pb.TActUnifiedWorldGiftInfo ArrGiftInfo = 4;
  total_size += 1 * this->arrgiftinfo_size();
  for (int i = 0; i < this->arrgiftinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrgiftinfo(i));
  }

  // repeated .pb.TActUnifiedWorldTaskInfo ArrTaskInfo = 5;
  total_size += 1 * this->arrtaskinfo_size();
  for (int i = 0; i < this->arrtaskinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrtaskinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TActUnifiedWorldNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TActUnifiedWorldNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TActUnifiedWorldNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TActUnifiedWorldNotify::MergeFrom(const TActUnifiedWorldNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  arrgiftinfo_.MergeFrom(from.arrgiftinfo_);
  arrtaskinfo_.MergeFrom(from.arrtaskinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_totalscore()) {
      set_totalscore(from.totalscore());
    }
    if (from.has_stagerank()) {
      set_stagerank(from.stagerank());
    }
    if (from.has_totalrank()) {
      set_totalrank(from.totalrank());
    }
    if (from.has_maxstagerank()) {
      set_maxstagerank(from.maxstagerank());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_maxtotalrank()) {
      set_maxtotalrank(from.maxtotalrank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TActUnifiedWorldNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TActUnifiedWorldNotify::CopyFrom(const TActUnifiedWorldNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TActUnifiedWorldNotify::IsInitialized() const {

  return true;
}

void TActUnifiedWorldNotify::Swap(TActUnifiedWorldNotify* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(score_, other->score_);
    std::swap(totalscore_, other->totalscore_);
    arrgiftinfo_.Swap(&other->arrgiftinfo_);
    arrtaskinfo_.Swap(&other->arrtaskinfo_);
    std::swap(stagerank_, other->stagerank_);
    std::swap(totalrank_, other->totalrank_);
    std::swap(maxstagerank_, other->maxstagerank_);
    std::swap(maxtotalrank_, other->maxtotalrank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TActUnifiedWorldNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TActUnifiedWorldNotify_descriptor_;
  metadata.reflection = TActUnifiedWorldNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
