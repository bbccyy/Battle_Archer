// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/Shop.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/Shop.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* TShopGoodsInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TShopGoodsInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TShopSingleShopInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TShopSingleShopInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TShopInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TShopInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TShopInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TShopInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TShopInfoByIdReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TShopInfoByIdReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TShopInfoByIdRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TShopInfoByIdRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TShopRefreshByIdReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TShopRefreshByIdReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TShopRefreshByIdRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TShopRefreshByIdRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TShopBuyGoodsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TShopBuyGoodsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TShopBuyGoodsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TShopBuyGoodsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TShopGetBuyRecordByIdReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TShopGetBuyRecordByIdReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TShopGetBuyRecordByIdRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TShopGetBuyRecordByIdRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2fShop_2eproto() {
  protobuf_AddDesc_net_2fShop_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/Shop.proto");
  GOOGLE_CHECK(file != NULL);
  TShopGoodsInfo_descriptor_ = file->message_type(0);
  static const int TShopGoodsInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopGoodsInfo, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopGoodsInfo, boughtnum_),
  };
  TShopGoodsInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TShopGoodsInfo_descriptor_,
      TShopGoodsInfo::default_instance_,
      TShopGoodsInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopGoodsInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopGoodsInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TShopGoodsInfo));
  TShopSingleShopInfo_descriptor_ = file->message_type(1);
  static const int TShopSingleShopInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopSingleShopInfo, shopid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopSingleShopInfo, refreshtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopSingleShopInfo, refreshnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopSingleShopInfo, goodsarray_),
  };
  TShopSingleShopInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TShopSingleShopInfo_descriptor_,
      TShopSingleShopInfo::default_instance_,
      TShopSingleShopInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopSingleShopInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopSingleShopInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TShopSingleShopInfo));
  TShopInfoReq_descriptor_ = file->message_type(2);
  static const int TShopInfoReq_offsets_[1] = {
  };
  TShopInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TShopInfoReq_descriptor_,
      TShopInfoReq::default_instance_,
      TShopInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TShopInfoReq));
  TShopInfoRsp_descriptor_ = file->message_type(3);
  static const int TShopInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopInfoRsp, singleshoparray_),
  };
  TShopInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TShopInfoRsp_descriptor_,
      TShopInfoRsp::default_instance_,
      TShopInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TShopInfoRsp));
  TShopInfoByIdReq_descriptor_ = file->message_type(4);
  static const int TShopInfoByIdReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopInfoByIdReq, shopid_),
  };
  TShopInfoByIdReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TShopInfoByIdReq_descriptor_,
      TShopInfoByIdReq::default_instance_,
      TShopInfoByIdReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopInfoByIdReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopInfoByIdReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TShopInfoByIdReq));
  TShopInfoByIdRsp_descriptor_ = file->message_type(5);
  static const int TShopInfoByIdRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopInfoByIdRsp, singleshopinfo_),
  };
  TShopInfoByIdRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TShopInfoByIdRsp_descriptor_,
      TShopInfoByIdRsp::default_instance_,
      TShopInfoByIdRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopInfoByIdRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopInfoByIdRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TShopInfoByIdRsp));
  TShopRefreshByIdReq_descriptor_ = file->message_type(6);
  static const int TShopRefreshByIdReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopRefreshByIdReq, shopid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopRefreshByIdReq, refreshnum_),
  };
  TShopRefreshByIdReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TShopRefreshByIdReq_descriptor_,
      TShopRefreshByIdReq::default_instance_,
      TShopRefreshByIdReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopRefreshByIdReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopRefreshByIdReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TShopRefreshByIdReq));
  TShopRefreshByIdRsp_descriptor_ = file->message_type(7);
  static const int TShopRefreshByIdRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopRefreshByIdRsp, singleshopinfo_),
  };
  TShopRefreshByIdRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TShopRefreshByIdRsp_descriptor_,
      TShopRefreshByIdRsp::default_instance_,
      TShopRefreshByIdRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopRefreshByIdRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopRefreshByIdRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TShopRefreshByIdRsp));
  TShopBuyGoodsReq_descriptor_ = file->message_type(8);
  static const int TShopBuyGoodsReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopBuyGoodsReq, shopid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopBuyGoodsReq, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopBuyGoodsReq, buynum_),
  };
  TShopBuyGoodsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TShopBuyGoodsReq_descriptor_,
      TShopBuyGoodsReq::default_instance_,
      TShopBuyGoodsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopBuyGoodsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopBuyGoodsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TShopBuyGoodsReq));
  TShopBuyGoodsRsp_descriptor_ = file->message_type(9);
  static const int TShopBuyGoodsRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopBuyGoodsRsp, rewardarray_),
  };
  TShopBuyGoodsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TShopBuyGoodsRsp_descriptor_,
      TShopBuyGoodsRsp::default_instance_,
      TShopBuyGoodsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopBuyGoodsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopBuyGoodsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TShopBuyGoodsRsp));
  TShopGetBuyRecordByIdReq_descriptor_ = file->message_type(10);
  static const int TShopGetBuyRecordByIdReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopGetBuyRecordByIdReq, shopid_),
  };
  TShopGetBuyRecordByIdReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TShopGetBuyRecordByIdReq_descriptor_,
      TShopGetBuyRecordByIdReq::default_instance_,
      TShopGetBuyRecordByIdReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopGetBuyRecordByIdReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopGetBuyRecordByIdReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TShopGetBuyRecordByIdReq));
  TShopGetBuyRecordByIdRsp_descriptor_ = file->message_type(11);
  static const int TShopGetBuyRecordByIdRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopGetBuyRecordByIdRsp, buygoodsarr_),
  };
  TShopGetBuyRecordByIdRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TShopGetBuyRecordByIdRsp_descriptor_,
      TShopGetBuyRecordByIdRsp::default_instance_,
      TShopGetBuyRecordByIdRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopGetBuyRecordByIdRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TShopGetBuyRecordByIdRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TShopGetBuyRecordByIdRsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2fShop_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TShopGoodsInfo_descriptor_, &TShopGoodsInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TShopSingleShopInfo_descriptor_, &TShopSingleShopInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TShopInfoReq_descriptor_, &TShopInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TShopInfoRsp_descriptor_, &TShopInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TShopInfoByIdReq_descriptor_, &TShopInfoByIdReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TShopInfoByIdRsp_descriptor_, &TShopInfoByIdRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TShopRefreshByIdReq_descriptor_, &TShopRefreshByIdReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TShopRefreshByIdRsp_descriptor_, &TShopRefreshByIdRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TShopBuyGoodsReq_descriptor_, &TShopBuyGoodsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TShopBuyGoodsRsp_descriptor_, &TShopBuyGoodsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TShopGetBuyRecordByIdReq_descriptor_, &TShopGetBuyRecordByIdReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TShopGetBuyRecordByIdRsp_descriptor_, &TShopGetBuyRecordByIdRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2fShop_2eproto() {
  delete TShopGoodsInfo::default_instance_;
  delete TShopGoodsInfo_reflection_;
  delete TShopSingleShopInfo::default_instance_;
  delete TShopSingleShopInfo_reflection_;
  delete TShopInfoReq::default_instance_;
  delete TShopInfoReq_reflection_;
  delete TShopInfoRsp::default_instance_;
  delete TShopInfoRsp_reflection_;
  delete TShopInfoByIdReq::default_instance_;
  delete TShopInfoByIdReq_reflection_;
  delete TShopInfoByIdRsp::default_instance_;
  delete TShopInfoByIdRsp_reflection_;
  delete TShopRefreshByIdReq::default_instance_;
  delete TShopRefreshByIdReq_reflection_;
  delete TShopRefreshByIdRsp::default_instance_;
  delete TShopRefreshByIdRsp_reflection_;
  delete TShopBuyGoodsReq::default_instance_;
  delete TShopBuyGoodsReq_reflection_;
  delete TShopBuyGoodsRsp::default_instance_;
  delete TShopBuyGoodsRsp_reflection_;
  delete TShopGetBuyRecordByIdReq::default_instance_;
  delete TShopGetBuyRecordByIdReq_reflection_;
  delete TShopGetBuyRecordByIdRsp::default_instance_;
  delete TShopGetBuyRecordByIdRsp_reflection_;
}

void protobuf_AddDesc_net_2fShop_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_net_2fCommonReward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016net/Shop.proto\022\002pb\032\026net/CommonReward.p"
    "roto\"4\n\016TShopGoodsInfo\022\017\n\007GoodsId\030\001 \001(\r\022"
    "\021\n\tBoughtNum\030\002 \001(\r\"v\n\023TShopSingleShopInf"
    "o\022\016\n\006ShopId\030\001 \001(\r\022\023\n\013RefreshTime\030\002 \001(\004\022\022"
    "\n\nRefreshNum\030\003 \001(\r\022&\n\nGoodsArray\030\004 \003(\0132\022"
    ".pb.TShopGoodsInfo\"\016\n\014TShopInfoReq\"@\n\014TS"
    "hopInfoRsp\0220\n\017SingleShopArray\030\001 \003(\0132\027.pb"
    ".TShopSingleShopInfo\"\"\n\020TShopInfoByIdReq"
    "\022\016\n\006ShopId\030\001 \001(\r\"C\n\020TShopInfoByIdRsp\022/\n\016"
    "SingleShopInfo\030\001 \001(\0132\027.pb.TShopSingleSho"
    "pInfo\"9\n\023TShopRefreshByIdReq\022\016\n\006ShopId\030\001"
    " \001(\r\022\022\n\nRefreshNum\030\002 \001(\r\"F\n\023TShopRefresh"
    "ByIdRsp\022/\n\016SingleShopInfo\030\001 \001(\0132\027.pb.TSh"
    "opSingleShopInfo\"C\n\020TShopBuyGoodsReq\022\016\n\006"
    "ShopId\030\001 \001(\r\022\017\n\007GoodsId\030\002 \001(\r\022\016\n\006BuyNum\030"
    "\003 \001(\r\":\n\020TShopBuyGoodsRsp\022&\n\013RewardArray"
    "\030\001 \003(\0132\021.pb.TCommonReward\"*\n\030TShopGetBuy"
    "RecordByIdReq\022\016\n\006ShopId\030\001 \001(\r\"C\n\030TShopGe"
    "tBuyRecordByIdRsp\022\'\n\013BuyGoodsArr\030\001 \003(\0132\022"
    ".pb.TShopGoodsInfo", 778);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/Shop.proto", &protobuf_RegisterTypes);
  TShopGoodsInfo::default_instance_ = new TShopGoodsInfo();
  TShopSingleShopInfo::default_instance_ = new TShopSingleShopInfo();
  TShopInfoReq::default_instance_ = new TShopInfoReq();
  TShopInfoRsp::default_instance_ = new TShopInfoRsp();
  TShopInfoByIdReq::default_instance_ = new TShopInfoByIdReq();
  TShopInfoByIdRsp::default_instance_ = new TShopInfoByIdRsp();
  TShopRefreshByIdReq::default_instance_ = new TShopRefreshByIdReq();
  TShopRefreshByIdRsp::default_instance_ = new TShopRefreshByIdRsp();
  TShopBuyGoodsReq::default_instance_ = new TShopBuyGoodsReq();
  TShopBuyGoodsRsp::default_instance_ = new TShopBuyGoodsRsp();
  TShopGetBuyRecordByIdReq::default_instance_ = new TShopGetBuyRecordByIdReq();
  TShopGetBuyRecordByIdRsp::default_instance_ = new TShopGetBuyRecordByIdRsp();
  TShopGoodsInfo::default_instance_->InitAsDefaultInstance();
  TShopSingleShopInfo::default_instance_->InitAsDefaultInstance();
  TShopInfoReq::default_instance_->InitAsDefaultInstance();
  TShopInfoRsp::default_instance_->InitAsDefaultInstance();
  TShopInfoByIdReq::default_instance_->InitAsDefaultInstance();
  TShopInfoByIdRsp::default_instance_->InitAsDefaultInstance();
  TShopRefreshByIdReq::default_instance_->InitAsDefaultInstance();
  TShopRefreshByIdRsp::default_instance_->InitAsDefaultInstance();
  TShopBuyGoodsReq::default_instance_->InitAsDefaultInstance();
  TShopBuyGoodsRsp::default_instance_->InitAsDefaultInstance();
  TShopGetBuyRecordByIdReq::default_instance_->InitAsDefaultInstance();
  TShopGetBuyRecordByIdRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2fShop_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2fShop_2eproto {
  StaticDescriptorInitializer_net_2fShop_2eproto() {
    protobuf_AddDesc_net_2fShop_2eproto();
  }
} static_descriptor_initializer_net_2fShop_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TShopGoodsInfo::kGoodsIdFieldNumber;
const int TShopGoodsInfo::kBoughtNumFieldNumber;
#endif  // !_MSC_VER

TShopGoodsInfo::TShopGoodsInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TShopGoodsInfo)
}

void TShopGoodsInfo::InitAsDefaultInstance() {
}

TShopGoodsInfo::TShopGoodsInfo(const TShopGoodsInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TShopGoodsInfo)
}

void TShopGoodsInfo::SharedCtor() {
  _cached_size_ = 0;
  goodsid_ = 0u;
  boughtnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TShopGoodsInfo::~TShopGoodsInfo() {
  // @@protoc_insertion_point(destructor:pb.TShopGoodsInfo)
  SharedDtor();
}

void TShopGoodsInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TShopGoodsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TShopGoodsInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TShopGoodsInfo_descriptor_;
}

const TShopGoodsInfo& TShopGoodsInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fShop_2eproto();
  return *default_instance_;
}

TShopGoodsInfo* TShopGoodsInfo::default_instance_ = NULL;

TShopGoodsInfo* TShopGoodsInfo::New() const {
  return new TShopGoodsInfo;
}

void TShopGoodsInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TShopGoodsInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(goodsid_, boughtnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TShopGoodsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TShopGoodsInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GoodsId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BoughtNum;
        break;
      }

      // optional uint32 BoughtNum = 2;
      case 2: {
        if (tag == 16) {
         parse_BoughtNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &boughtnum_)));
          set_has_boughtnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TShopGoodsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TShopGoodsInfo)
  return false;
#undef DO_
}

void TShopGoodsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TShopGoodsInfo)
  // optional uint32 GoodsId = 1;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->goodsid(), output);
  }

  // optional uint32 BoughtNum = 2;
  if (has_boughtnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->boughtnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TShopGoodsInfo)
}

::google::protobuf::uint8* TShopGoodsInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TShopGoodsInfo)
  // optional uint32 GoodsId = 1;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->goodsid(), target);
  }

  // optional uint32 BoughtNum = 2;
  if (has_boughtnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->boughtnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TShopGoodsInfo)
  return target;
}

int TShopGoodsInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GoodsId = 1;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodsid());
    }

    // optional uint32 BoughtNum = 2;
    if (has_boughtnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->boughtnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TShopGoodsInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TShopGoodsInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TShopGoodsInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TShopGoodsInfo::MergeFrom(const TShopGoodsInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
    if (from.has_boughtnum()) {
      set_boughtnum(from.boughtnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TShopGoodsInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TShopGoodsInfo::CopyFrom(const TShopGoodsInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TShopGoodsInfo::IsInitialized() const {

  return true;
}

void TShopGoodsInfo::Swap(TShopGoodsInfo* other) {
  if (other != this) {
    std::swap(goodsid_, other->goodsid_);
    std::swap(boughtnum_, other->boughtnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TShopGoodsInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TShopGoodsInfo_descriptor_;
  metadata.reflection = TShopGoodsInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TShopSingleShopInfo::kShopIdFieldNumber;
const int TShopSingleShopInfo::kRefreshTimeFieldNumber;
const int TShopSingleShopInfo::kRefreshNumFieldNumber;
const int TShopSingleShopInfo::kGoodsArrayFieldNumber;
#endif  // !_MSC_VER

TShopSingleShopInfo::TShopSingleShopInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TShopSingleShopInfo)
}

void TShopSingleShopInfo::InitAsDefaultInstance() {
}

TShopSingleShopInfo::TShopSingleShopInfo(const TShopSingleShopInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TShopSingleShopInfo)
}

void TShopSingleShopInfo::SharedCtor() {
  _cached_size_ = 0;
  shopid_ = 0u;
  refreshtime_ = GOOGLE_ULONGLONG(0);
  refreshnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TShopSingleShopInfo::~TShopSingleShopInfo() {
  // @@protoc_insertion_point(destructor:pb.TShopSingleShopInfo)
  SharedDtor();
}

void TShopSingleShopInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TShopSingleShopInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TShopSingleShopInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TShopSingleShopInfo_descriptor_;
}

const TShopSingleShopInfo& TShopSingleShopInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fShop_2eproto();
  return *default_instance_;
}

TShopSingleShopInfo* TShopSingleShopInfo::default_instance_ = NULL;

TShopSingleShopInfo* TShopSingleShopInfo::New() const {
  return new TShopSingleShopInfo;
}

void TShopSingleShopInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TShopSingleShopInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(refreshtime_, refreshnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  goodsarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TShopSingleShopInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TShopSingleShopInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ShopId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RefreshTime;
        break;
      }

      // optional uint64 RefreshTime = 2;
      case 2: {
        if (tag == 16) {
         parse_RefreshTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &refreshtime_)));
          set_has_refreshtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RefreshNum;
        break;
      }

      // optional uint32 RefreshNum = 3;
      case 3: {
        if (tag == 24) {
         parse_RefreshNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refreshnum_)));
          set_has_refreshnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_GoodsArray;
        break;
      }

      // repeated .pb.TShopGoodsInfo GoodsArray = 4;
      case 4: {
        if (tag == 34) {
         parse_GoodsArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goodsarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_GoodsArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TShopSingleShopInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TShopSingleShopInfo)
  return false;
#undef DO_
}

void TShopSingleShopInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TShopSingleShopInfo)
  // optional uint32 ShopId = 1;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shopid(), output);
  }

  // optional uint64 RefreshTime = 2;
  if (has_refreshtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->refreshtime(), output);
  }

  // optional uint32 RefreshNum = 3;
  if (has_refreshnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->refreshnum(), output);
  }

  // repeated .pb.TShopGoodsInfo GoodsArray = 4;
  for (int i = 0; i < this->goodsarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->goodsarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TShopSingleShopInfo)
}

::google::protobuf::uint8* TShopSingleShopInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TShopSingleShopInfo)
  // optional uint32 ShopId = 1;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shopid(), target);
  }

  // optional uint64 RefreshTime = 2;
  if (has_refreshtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->refreshtime(), target);
  }

  // optional uint32 RefreshNum = 3;
  if (has_refreshnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->refreshnum(), target);
  }

  // repeated .pb.TShopGoodsInfo GoodsArray = 4;
  for (int i = 0; i < this->goodsarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->goodsarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TShopSingleShopInfo)
  return target;
}

int TShopSingleShopInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ShopId = 1;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

    // optional uint64 RefreshTime = 2;
    if (has_refreshtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->refreshtime());
    }

    // optional uint32 RefreshNum = 3;
    if (has_refreshnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->refreshnum());
    }

  }
  // repeated .pb.TShopGoodsInfo GoodsArray = 4;
  total_size += 1 * this->goodsarray_size();
  for (int i = 0; i < this->goodsarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goodsarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TShopSingleShopInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TShopSingleShopInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TShopSingleShopInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TShopSingleShopInfo::MergeFrom(const TShopSingleShopInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  goodsarray_.MergeFrom(from.goodsarray_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
    if (from.has_refreshtime()) {
      set_refreshtime(from.refreshtime());
    }
    if (from.has_refreshnum()) {
      set_refreshnum(from.refreshnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TShopSingleShopInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TShopSingleShopInfo::CopyFrom(const TShopSingleShopInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TShopSingleShopInfo::IsInitialized() const {

  return true;
}

void TShopSingleShopInfo::Swap(TShopSingleShopInfo* other) {
  if (other != this) {
    std::swap(shopid_, other->shopid_);
    std::swap(refreshtime_, other->refreshtime_);
    std::swap(refreshnum_, other->refreshnum_);
    goodsarray_.Swap(&other->goodsarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TShopSingleShopInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TShopSingleShopInfo_descriptor_;
  metadata.reflection = TShopSingleShopInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

TShopInfoReq::TShopInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TShopInfoReq)
}

void TShopInfoReq::InitAsDefaultInstance() {
}

TShopInfoReq::TShopInfoReq(const TShopInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TShopInfoReq)
}

void TShopInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TShopInfoReq::~TShopInfoReq() {
  // @@protoc_insertion_point(destructor:pb.TShopInfoReq)
  SharedDtor();
}

void TShopInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TShopInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TShopInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TShopInfoReq_descriptor_;
}

const TShopInfoReq& TShopInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fShop_2eproto();
  return *default_instance_;
}

TShopInfoReq* TShopInfoReq::default_instance_ = NULL;

TShopInfoReq* TShopInfoReq::New() const {
  return new TShopInfoReq;
}

void TShopInfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TShopInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TShopInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TShopInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TShopInfoReq)
  return false;
#undef DO_
}

void TShopInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TShopInfoReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TShopInfoReq)
}

::google::protobuf::uint8* TShopInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TShopInfoReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TShopInfoReq)
  return target;
}

int TShopInfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TShopInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TShopInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TShopInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TShopInfoReq::MergeFrom(const TShopInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TShopInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TShopInfoReq::CopyFrom(const TShopInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TShopInfoReq::IsInitialized() const {

  return true;
}

void TShopInfoReq::Swap(TShopInfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TShopInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TShopInfoReq_descriptor_;
  metadata.reflection = TShopInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TShopInfoRsp::kSingleShopArrayFieldNumber;
#endif  // !_MSC_VER

TShopInfoRsp::TShopInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TShopInfoRsp)
}

void TShopInfoRsp::InitAsDefaultInstance() {
}

TShopInfoRsp::TShopInfoRsp(const TShopInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TShopInfoRsp)
}

void TShopInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TShopInfoRsp::~TShopInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.TShopInfoRsp)
  SharedDtor();
}

void TShopInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TShopInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TShopInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TShopInfoRsp_descriptor_;
}

const TShopInfoRsp& TShopInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fShop_2eproto();
  return *default_instance_;
}

TShopInfoRsp* TShopInfoRsp::default_instance_ = NULL;

TShopInfoRsp* TShopInfoRsp::New() const {
  return new TShopInfoRsp;
}

void TShopInfoRsp::Clear() {
  singleshoparray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TShopInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TShopInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TShopSingleShopInfo SingleShopArray = 1;
      case 1: {
        if (tag == 10) {
         parse_SingleShopArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_singleshoparray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_SingleShopArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TShopInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TShopInfoRsp)
  return false;
#undef DO_
}

void TShopInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TShopInfoRsp)
  // repeated .pb.TShopSingleShopInfo SingleShopArray = 1;
  for (int i = 0; i < this->singleshoparray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->singleshoparray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TShopInfoRsp)
}

::google::protobuf::uint8* TShopInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TShopInfoRsp)
  // repeated .pb.TShopSingleShopInfo SingleShopArray = 1;
  for (int i = 0; i < this->singleshoparray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->singleshoparray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TShopInfoRsp)
  return target;
}

int TShopInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TShopSingleShopInfo SingleShopArray = 1;
  total_size += 1 * this->singleshoparray_size();
  for (int i = 0; i < this->singleshoparray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->singleshoparray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TShopInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TShopInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TShopInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TShopInfoRsp::MergeFrom(const TShopInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  singleshoparray_.MergeFrom(from.singleshoparray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TShopInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TShopInfoRsp::CopyFrom(const TShopInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TShopInfoRsp::IsInitialized() const {

  return true;
}

void TShopInfoRsp::Swap(TShopInfoRsp* other) {
  if (other != this) {
    singleshoparray_.Swap(&other->singleshoparray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TShopInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TShopInfoRsp_descriptor_;
  metadata.reflection = TShopInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TShopInfoByIdReq::kShopIdFieldNumber;
#endif  // !_MSC_VER

TShopInfoByIdReq::TShopInfoByIdReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TShopInfoByIdReq)
}

void TShopInfoByIdReq::InitAsDefaultInstance() {
}

TShopInfoByIdReq::TShopInfoByIdReq(const TShopInfoByIdReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TShopInfoByIdReq)
}

void TShopInfoByIdReq::SharedCtor() {
  _cached_size_ = 0;
  shopid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TShopInfoByIdReq::~TShopInfoByIdReq() {
  // @@protoc_insertion_point(destructor:pb.TShopInfoByIdReq)
  SharedDtor();
}

void TShopInfoByIdReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TShopInfoByIdReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TShopInfoByIdReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TShopInfoByIdReq_descriptor_;
}

const TShopInfoByIdReq& TShopInfoByIdReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fShop_2eproto();
  return *default_instance_;
}

TShopInfoByIdReq* TShopInfoByIdReq::default_instance_ = NULL;

TShopInfoByIdReq* TShopInfoByIdReq::New() const {
  return new TShopInfoByIdReq;
}

void TShopInfoByIdReq::Clear() {
  shopid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TShopInfoByIdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TShopInfoByIdReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ShopId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TShopInfoByIdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TShopInfoByIdReq)
  return false;
#undef DO_
}

void TShopInfoByIdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TShopInfoByIdReq)
  // optional uint32 ShopId = 1;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shopid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TShopInfoByIdReq)
}

::google::protobuf::uint8* TShopInfoByIdReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TShopInfoByIdReq)
  // optional uint32 ShopId = 1;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shopid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TShopInfoByIdReq)
  return target;
}

int TShopInfoByIdReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ShopId = 1;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TShopInfoByIdReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TShopInfoByIdReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TShopInfoByIdReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TShopInfoByIdReq::MergeFrom(const TShopInfoByIdReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TShopInfoByIdReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TShopInfoByIdReq::CopyFrom(const TShopInfoByIdReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TShopInfoByIdReq::IsInitialized() const {

  return true;
}

void TShopInfoByIdReq::Swap(TShopInfoByIdReq* other) {
  if (other != this) {
    std::swap(shopid_, other->shopid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TShopInfoByIdReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TShopInfoByIdReq_descriptor_;
  metadata.reflection = TShopInfoByIdReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TShopInfoByIdRsp::kSingleShopInfoFieldNumber;
#endif  // !_MSC_VER

TShopInfoByIdRsp::TShopInfoByIdRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TShopInfoByIdRsp)
}

void TShopInfoByIdRsp::InitAsDefaultInstance() {
  singleshopinfo_ = const_cast< ::pb::TShopSingleShopInfo*>(&::pb::TShopSingleShopInfo::default_instance());
}

TShopInfoByIdRsp::TShopInfoByIdRsp(const TShopInfoByIdRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TShopInfoByIdRsp)
}

void TShopInfoByIdRsp::SharedCtor() {
  _cached_size_ = 0;
  singleshopinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TShopInfoByIdRsp::~TShopInfoByIdRsp() {
  // @@protoc_insertion_point(destructor:pb.TShopInfoByIdRsp)
  SharedDtor();
}

void TShopInfoByIdRsp::SharedDtor() {
  if (this != default_instance_) {
    delete singleshopinfo_;
  }
}

void TShopInfoByIdRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TShopInfoByIdRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TShopInfoByIdRsp_descriptor_;
}

const TShopInfoByIdRsp& TShopInfoByIdRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fShop_2eproto();
  return *default_instance_;
}

TShopInfoByIdRsp* TShopInfoByIdRsp::default_instance_ = NULL;

TShopInfoByIdRsp* TShopInfoByIdRsp::New() const {
  return new TShopInfoByIdRsp;
}

void TShopInfoByIdRsp::Clear() {
  if (has_singleshopinfo()) {
    if (singleshopinfo_ != NULL) singleshopinfo_->::pb::TShopSingleShopInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TShopInfoByIdRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TShopInfoByIdRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TShopSingleShopInfo SingleShopInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_singleshopinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TShopInfoByIdRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TShopInfoByIdRsp)
  return false;
#undef DO_
}

void TShopInfoByIdRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TShopInfoByIdRsp)
  // optional .pb.TShopSingleShopInfo SingleShopInfo = 1;
  if (has_singleshopinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->singleshopinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TShopInfoByIdRsp)
}

::google::protobuf::uint8* TShopInfoByIdRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TShopInfoByIdRsp)
  // optional .pb.TShopSingleShopInfo SingleShopInfo = 1;
  if (has_singleshopinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->singleshopinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TShopInfoByIdRsp)
  return target;
}

int TShopInfoByIdRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TShopSingleShopInfo SingleShopInfo = 1;
    if (has_singleshopinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->singleshopinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TShopInfoByIdRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TShopInfoByIdRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TShopInfoByIdRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TShopInfoByIdRsp::MergeFrom(const TShopInfoByIdRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_singleshopinfo()) {
      mutable_singleshopinfo()->::pb::TShopSingleShopInfo::MergeFrom(from.singleshopinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TShopInfoByIdRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TShopInfoByIdRsp::CopyFrom(const TShopInfoByIdRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TShopInfoByIdRsp::IsInitialized() const {

  return true;
}

void TShopInfoByIdRsp::Swap(TShopInfoByIdRsp* other) {
  if (other != this) {
    std::swap(singleshopinfo_, other->singleshopinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TShopInfoByIdRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TShopInfoByIdRsp_descriptor_;
  metadata.reflection = TShopInfoByIdRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TShopRefreshByIdReq::kShopIdFieldNumber;
const int TShopRefreshByIdReq::kRefreshNumFieldNumber;
#endif  // !_MSC_VER

TShopRefreshByIdReq::TShopRefreshByIdReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TShopRefreshByIdReq)
}

void TShopRefreshByIdReq::InitAsDefaultInstance() {
}

TShopRefreshByIdReq::TShopRefreshByIdReq(const TShopRefreshByIdReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TShopRefreshByIdReq)
}

void TShopRefreshByIdReq::SharedCtor() {
  _cached_size_ = 0;
  shopid_ = 0u;
  refreshnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TShopRefreshByIdReq::~TShopRefreshByIdReq() {
  // @@protoc_insertion_point(destructor:pb.TShopRefreshByIdReq)
  SharedDtor();
}

void TShopRefreshByIdReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TShopRefreshByIdReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TShopRefreshByIdReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TShopRefreshByIdReq_descriptor_;
}

const TShopRefreshByIdReq& TShopRefreshByIdReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fShop_2eproto();
  return *default_instance_;
}

TShopRefreshByIdReq* TShopRefreshByIdReq::default_instance_ = NULL;

TShopRefreshByIdReq* TShopRefreshByIdReq::New() const {
  return new TShopRefreshByIdReq;
}

void TShopRefreshByIdReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TShopRefreshByIdReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(shopid_, refreshnum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TShopRefreshByIdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TShopRefreshByIdReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ShopId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RefreshNum;
        break;
      }

      // optional uint32 RefreshNum = 2;
      case 2: {
        if (tag == 16) {
         parse_RefreshNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refreshnum_)));
          set_has_refreshnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TShopRefreshByIdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TShopRefreshByIdReq)
  return false;
#undef DO_
}

void TShopRefreshByIdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TShopRefreshByIdReq)
  // optional uint32 ShopId = 1;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shopid(), output);
  }

  // optional uint32 RefreshNum = 2;
  if (has_refreshnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->refreshnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TShopRefreshByIdReq)
}

::google::protobuf::uint8* TShopRefreshByIdReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TShopRefreshByIdReq)
  // optional uint32 ShopId = 1;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shopid(), target);
  }

  // optional uint32 RefreshNum = 2;
  if (has_refreshnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->refreshnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TShopRefreshByIdReq)
  return target;
}

int TShopRefreshByIdReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ShopId = 1;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

    // optional uint32 RefreshNum = 2;
    if (has_refreshnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->refreshnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TShopRefreshByIdReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TShopRefreshByIdReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TShopRefreshByIdReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TShopRefreshByIdReq::MergeFrom(const TShopRefreshByIdReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
    if (from.has_refreshnum()) {
      set_refreshnum(from.refreshnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TShopRefreshByIdReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TShopRefreshByIdReq::CopyFrom(const TShopRefreshByIdReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TShopRefreshByIdReq::IsInitialized() const {

  return true;
}

void TShopRefreshByIdReq::Swap(TShopRefreshByIdReq* other) {
  if (other != this) {
    std::swap(shopid_, other->shopid_);
    std::swap(refreshnum_, other->refreshnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TShopRefreshByIdReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TShopRefreshByIdReq_descriptor_;
  metadata.reflection = TShopRefreshByIdReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TShopRefreshByIdRsp::kSingleShopInfoFieldNumber;
#endif  // !_MSC_VER

TShopRefreshByIdRsp::TShopRefreshByIdRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TShopRefreshByIdRsp)
}

void TShopRefreshByIdRsp::InitAsDefaultInstance() {
  singleshopinfo_ = const_cast< ::pb::TShopSingleShopInfo*>(&::pb::TShopSingleShopInfo::default_instance());
}

TShopRefreshByIdRsp::TShopRefreshByIdRsp(const TShopRefreshByIdRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TShopRefreshByIdRsp)
}

void TShopRefreshByIdRsp::SharedCtor() {
  _cached_size_ = 0;
  singleshopinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TShopRefreshByIdRsp::~TShopRefreshByIdRsp() {
  // @@protoc_insertion_point(destructor:pb.TShopRefreshByIdRsp)
  SharedDtor();
}

void TShopRefreshByIdRsp::SharedDtor() {
  if (this != default_instance_) {
    delete singleshopinfo_;
  }
}

void TShopRefreshByIdRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TShopRefreshByIdRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TShopRefreshByIdRsp_descriptor_;
}

const TShopRefreshByIdRsp& TShopRefreshByIdRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fShop_2eproto();
  return *default_instance_;
}

TShopRefreshByIdRsp* TShopRefreshByIdRsp::default_instance_ = NULL;

TShopRefreshByIdRsp* TShopRefreshByIdRsp::New() const {
  return new TShopRefreshByIdRsp;
}

void TShopRefreshByIdRsp::Clear() {
  if (has_singleshopinfo()) {
    if (singleshopinfo_ != NULL) singleshopinfo_->::pb::TShopSingleShopInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TShopRefreshByIdRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TShopRefreshByIdRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.TShopSingleShopInfo SingleShopInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_singleshopinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TShopRefreshByIdRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TShopRefreshByIdRsp)
  return false;
#undef DO_
}

void TShopRefreshByIdRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TShopRefreshByIdRsp)
  // optional .pb.TShopSingleShopInfo SingleShopInfo = 1;
  if (has_singleshopinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->singleshopinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TShopRefreshByIdRsp)
}

::google::protobuf::uint8* TShopRefreshByIdRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TShopRefreshByIdRsp)
  // optional .pb.TShopSingleShopInfo SingleShopInfo = 1;
  if (has_singleshopinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->singleshopinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TShopRefreshByIdRsp)
  return target;
}

int TShopRefreshByIdRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pb.TShopSingleShopInfo SingleShopInfo = 1;
    if (has_singleshopinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->singleshopinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TShopRefreshByIdRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TShopRefreshByIdRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TShopRefreshByIdRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TShopRefreshByIdRsp::MergeFrom(const TShopRefreshByIdRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_singleshopinfo()) {
      mutable_singleshopinfo()->::pb::TShopSingleShopInfo::MergeFrom(from.singleshopinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TShopRefreshByIdRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TShopRefreshByIdRsp::CopyFrom(const TShopRefreshByIdRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TShopRefreshByIdRsp::IsInitialized() const {

  return true;
}

void TShopRefreshByIdRsp::Swap(TShopRefreshByIdRsp* other) {
  if (other != this) {
    std::swap(singleshopinfo_, other->singleshopinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TShopRefreshByIdRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TShopRefreshByIdRsp_descriptor_;
  metadata.reflection = TShopRefreshByIdRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TShopBuyGoodsReq::kShopIdFieldNumber;
const int TShopBuyGoodsReq::kGoodsIdFieldNumber;
const int TShopBuyGoodsReq::kBuyNumFieldNumber;
#endif  // !_MSC_VER

TShopBuyGoodsReq::TShopBuyGoodsReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TShopBuyGoodsReq)
}

void TShopBuyGoodsReq::InitAsDefaultInstance() {
}

TShopBuyGoodsReq::TShopBuyGoodsReq(const TShopBuyGoodsReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TShopBuyGoodsReq)
}

void TShopBuyGoodsReq::SharedCtor() {
  _cached_size_ = 0;
  shopid_ = 0u;
  goodsid_ = 0u;
  buynum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TShopBuyGoodsReq::~TShopBuyGoodsReq() {
  // @@protoc_insertion_point(destructor:pb.TShopBuyGoodsReq)
  SharedDtor();
}

void TShopBuyGoodsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TShopBuyGoodsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TShopBuyGoodsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TShopBuyGoodsReq_descriptor_;
}

const TShopBuyGoodsReq& TShopBuyGoodsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fShop_2eproto();
  return *default_instance_;
}

TShopBuyGoodsReq* TShopBuyGoodsReq::default_instance_ = NULL;

TShopBuyGoodsReq* TShopBuyGoodsReq::New() const {
  return new TShopBuyGoodsReq;
}

void TShopBuyGoodsReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TShopBuyGoodsReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(shopid_, buynum_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TShopBuyGoodsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TShopBuyGoodsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ShopId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_GoodsId;
        break;
      }

      // optional uint32 GoodsId = 2;
      case 2: {
        if (tag == 16) {
         parse_GoodsId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BuyNum;
        break;
      }

      // optional uint32 BuyNum = 3;
      case 3: {
        if (tag == 24) {
         parse_BuyNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buynum_)));
          set_has_buynum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TShopBuyGoodsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TShopBuyGoodsReq)
  return false;
#undef DO_
}

void TShopBuyGoodsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TShopBuyGoodsReq)
  // optional uint32 ShopId = 1;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shopid(), output);
  }

  // optional uint32 GoodsId = 2;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->goodsid(), output);
  }

  // optional uint32 BuyNum = 3;
  if (has_buynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->buynum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TShopBuyGoodsReq)
}

::google::protobuf::uint8* TShopBuyGoodsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TShopBuyGoodsReq)
  // optional uint32 ShopId = 1;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shopid(), target);
  }

  // optional uint32 GoodsId = 2;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->goodsid(), target);
  }

  // optional uint32 BuyNum = 3;
  if (has_buynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->buynum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TShopBuyGoodsReq)
  return target;
}

int TShopBuyGoodsReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ShopId = 1;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

    // optional uint32 GoodsId = 2;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodsid());
    }

    // optional uint32 BuyNum = 3;
    if (has_buynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buynum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TShopBuyGoodsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TShopBuyGoodsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TShopBuyGoodsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TShopBuyGoodsReq::MergeFrom(const TShopBuyGoodsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
    if (from.has_buynum()) {
      set_buynum(from.buynum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TShopBuyGoodsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TShopBuyGoodsReq::CopyFrom(const TShopBuyGoodsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TShopBuyGoodsReq::IsInitialized() const {

  return true;
}

void TShopBuyGoodsReq::Swap(TShopBuyGoodsReq* other) {
  if (other != this) {
    std::swap(shopid_, other->shopid_);
    std::swap(goodsid_, other->goodsid_);
    std::swap(buynum_, other->buynum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TShopBuyGoodsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TShopBuyGoodsReq_descriptor_;
  metadata.reflection = TShopBuyGoodsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TShopBuyGoodsRsp::kRewardArrayFieldNumber;
#endif  // !_MSC_VER

TShopBuyGoodsRsp::TShopBuyGoodsRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TShopBuyGoodsRsp)
}

void TShopBuyGoodsRsp::InitAsDefaultInstance() {
}

TShopBuyGoodsRsp::TShopBuyGoodsRsp(const TShopBuyGoodsRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TShopBuyGoodsRsp)
}

void TShopBuyGoodsRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TShopBuyGoodsRsp::~TShopBuyGoodsRsp() {
  // @@protoc_insertion_point(destructor:pb.TShopBuyGoodsRsp)
  SharedDtor();
}

void TShopBuyGoodsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TShopBuyGoodsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TShopBuyGoodsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TShopBuyGoodsRsp_descriptor_;
}

const TShopBuyGoodsRsp& TShopBuyGoodsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fShop_2eproto();
  return *default_instance_;
}

TShopBuyGoodsRsp* TShopBuyGoodsRsp::default_instance_ = NULL;

TShopBuyGoodsRsp* TShopBuyGoodsRsp::New() const {
  return new TShopBuyGoodsRsp;
}

void TShopBuyGoodsRsp::Clear() {
  rewardarray_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TShopBuyGoodsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TShopBuyGoodsRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TCommonReward RewardArray = 1;
      case 1: {
        if (tag == 10) {
         parse_RewardArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_RewardArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TShopBuyGoodsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TShopBuyGoodsRsp)
  return false;
#undef DO_
}

void TShopBuyGoodsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TShopBuyGoodsRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardarray(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TShopBuyGoodsRsp)
}

::google::protobuf::uint8* TShopBuyGoodsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TShopBuyGoodsRsp)
  // repeated .pb.TCommonReward RewardArray = 1;
  for (int i = 0; i < this->rewardarray_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewardarray(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TShopBuyGoodsRsp)
  return target;
}

int TShopBuyGoodsRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TCommonReward RewardArray = 1;
  total_size += 1 * this->rewardarray_size();
  for (int i = 0; i < this->rewardarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardarray(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TShopBuyGoodsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TShopBuyGoodsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TShopBuyGoodsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TShopBuyGoodsRsp::MergeFrom(const TShopBuyGoodsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewardarray_.MergeFrom(from.rewardarray_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TShopBuyGoodsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TShopBuyGoodsRsp::CopyFrom(const TShopBuyGoodsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TShopBuyGoodsRsp::IsInitialized() const {

  return true;
}

void TShopBuyGoodsRsp::Swap(TShopBuyGoodsRsp* other) {
  if (other != this) {
    rewardarray_.Swap(&other->rewardarray_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TShopBuyGoodsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TShopBuyGoodsRsp_descriptor_;
  metadata.reflection = TShopBuyGoodsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TShopGetBuyRecordByIdReq::kShopIdFieldNumber;
#endif  // !_MSC_VER

TShopGetBuyRecordByIdReq::TShopGetBuyRecordByIdReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TShopGetBuyRecordByIdReq)
}

void TShopGetBuyRecordByIdReq::InitAsDefaultInstance() {
}

TShopGetBuyRecordByIdReq::TShopGetBuyRecordByIdReq(const TShopGetBuyRecordByIdReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TShopGetBuyRecordByIdReq)
}

void TShopGetBuyRecordByIdReq::SharedCtor() {
  _cached_size_ = 0;
  shopid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TShopGetBuyRecordByIdReq::~TShopGetBuyRecordByIdReq() {
  // @@protoc_insertion_point(destructor:pb.TShopGetBuyRecordByIdReq)
  SharedDtor();
}

void TShopGetBuyRecordByIdReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TShopGetBuyRecordByIdReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TShopGetBuyRecordByIdReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TShopGetBuyRecordByIdReq_descriptor_;
}

const TShopGetBuyRecordByIdReq& TShopGetBuyRecordByIdReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fShop_2eproto();
  return *default_instance_;
}

TShopGetBuyRecordByIdReq* TShopGetBuyRecordByIdReq::default_instance_ = NULL;

TShopGetBuyRecordByIdReq* TShopGetBuyRecordByIdReq::New() const {
  return new TShopGetBuyRecordByIdReq;
}

void TShopGetBuyRecordByIdReq::Clear() {
  shopid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TShopGetBuyRecordByIdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TShopGetBuyRecordByIdReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ShopId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
          set_has_shopid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TShopGetBuyRecordByIdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TShopGetBuyRecordByIdReq)
  return false;
#undef DO_
}

void TShopGetBuyRecordByIdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TShopGetBuyRecordByIdReq)
  // optional uint32 ShopId = 1;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shopid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TShopGetBuyRecordByIdReq)
}

::google::protobuf::uint8* TShopGetBuyRecordByIdReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TShopGetBuyRecordByIdReq)
  // optional uint32 ShopId = 1;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shopid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TShopGetBuyRecordByIdReq)
  return target;
}

int TShopGetBuyRecordByIdReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ShopId = 1;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TShopGetBuyRecordByIdReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TShopGetBuyRecordByIdReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TShopGetBuyRecordByIdReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TShopGetBuyRecordByIdReq::MergeFrom(const TShopGetBuyRecordByIdReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TShopGetBuyRecordByIdReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TShopGetBuyRecordByIdReq::CopyFrom(const TShopGetBuyRecordByIdReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TShopGetBuyRecordByIdReq::IsInitialized() const {

  return true;
}

void TShopGetBuyRecordByIdReq::Swap(TShopGetBuyRecordByIdReq* other) {
  if (other != this) {
    std::swap(shopid_, other->shopid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TShopGetBuyRecordByIdReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TShopGetBuyRecordByIdReq_descriptor_;
  metadata.reflection = TShopGetBuyRecordByIdReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TShopGetBuyRecordByIdRsp::kBuyGoodsArrFieldNumber;
#endif  // !_MSC_VER

TShopGetBuyRecordByIdRsp::TShopGetBuyRecordByIdRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TShopGetBuyRecordByIdRsp)
}

void TShopGetBuyRecordByIdRsp::InitAsDefaultInstance() {
}

TShopGetBuyRecordByIdRsp::TShopGetBuyRecordByIdRsp(const TShopGetBuyRecordByIdRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TShopGetBuyRecordByIdRsp)
}

void TShopGetBuyRecordByIdRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TShopGetBuyRecordByIdRsp::~TShopGetBuyRecordByIdRsp() {
  // @@protoc_insertion_point(destructor:pb.TShopGetBuyRecordByIdRsp)
  SharedDtor();
}

void TShopGetBuyRecordByIdRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TShopGetBuyRecordByIdRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TShopGetBuyRecordByIdRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TShopGetBuyRecordByIdRsp_descriptor_;
}

const TShopGetBuyRecordByIdRsp& TShopGetBuyRecordByIdRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2fShop_2eproto();
  return *default_instance_;
}

TShopGetBuyRecordByIdRsp* TShopGetBuyRecordByIdRsp::default_instance_ = NULL;

TShopGetBuyRecordByIdRsp* TShopGetBuyRecordByIdRsp::New() const {
  return new TShopGetBuyRecordByIdRsp;
}

void TShopGetBuyRecordByIdRsp::Clear() {
  buygoodsarr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TShopGetBuyRecordByIdRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TShopGetBuyRecordByIdRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TShopGoodsInfo BuyGoodsArr = 1;
      case 1: {
        if (tag == 10) {
         parse_BuyGoodsArr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buygoodsarr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_BuyGoodsArr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TShopGetBuyRecordByIdRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TShopGetBuyRecordByIdRsp)
  return false;
#undef DO_
}

void TShopGetBuyRecordByIdRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TShopGetBuyRecordByIdRsp)
  // repeated .pb.TShopGoodsInfo BuyGoodsArr = 1;
  for (int i = 0; i < this->buygoodsarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->buygoodsarr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TShopGetBuyRecordByIdRsp)
}

::google::protobuf::uint8* TShopGetBuyRecordByIdRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TShopGetBuyRecordByIdRsp)
  // repeated .pb.TShopGoodsInfo BuyGoodsArr = 1;
  for (int i = 0; i < this->buygoodsarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->buygoodsarr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TShopGetBuyRecordByIdRsp)
  return target;
}

int TShopGetBuyRecordByIdRsp::ByteSize() const {
  int total_size = 0;

  // repeated .pb.TShopGoodsInfo BuyGoodsArr = 1;
  total_size += 1 * this->buygoodsarr_size();
  for (int i = 0; i < this->buygoodsarr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buygoodsarr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TShopGetBuyRecordByIdRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TShopGetBuyRecordByIdRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TShopGetBuyRecordByIdRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TShopGetBuyRecordByIdRsp::MergeFrom(const TShopGetBuyRecordByIdRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  buygoodsarr_.MergeFrom(from.buygoodsarr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TShopGetBuyRecordByIdRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TShopGetBuyRecordByIdRsp::CopyFrom(const TShopGetBuyRecordByIdRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TShopGetBuyRecordByIdRsp::IsInitialized() const {

  return true;
}

void TShopGetBuyRecordByIdRsp::Swap(TShopGetBuyRecordByIdRsp* other) {
  if (other != this) {
    buygoodsarr_.Swap(&other->buygoodsarr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TShopGetBuyRecordByIdRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TShopGetBuyRecordByIdRsp_descriptor_;
  metadata.reflection = TShopGetBuyRecordByIdRsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
