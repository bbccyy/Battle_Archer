// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/FunGift.proto

#ifndef PROTOBUF_net_2fFunGift_2eproto__INCLUDED
#define PROTOBUF_net_2fFunGift_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "net/CommonReward.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2fFunGift_2eproto();
void protobuf_AssignDesc_net_2fFunGift_2eproto();
void protobuf_ShutdownFile_net_2fFunGift_2eproto();

class TFunGiftBuyInfo;
class TFunGiftInfo;
class TFunGiftGetInfoRsp;
class TFunGiftGetSingleInfoReq;
class TFunGiftGetSingleInfoRsp;
class TFunGiftBuyFreeGiftReq;
class TFunGiftBuyFreeGiftRsp;
class TFunGiftBuyGoldGiftReq;
class TFunGiftBuyGoldGiftRsp;
class TFunGiftRmbGiftChangeNotify;

// ===================================================================

/*FOR2LUA
<Record>
	<name>TFunGiftBuyInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FunGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFunGiftBuyInfo : public ::google::protobuf::Message {
 public:
  TFunGiftBuyInfo();
  virtual ~TFunGiftBuyInfo();

  TFunGiftBuyInfo(const TFunGiftBuyInfo& from);

  inline TFunGiftBuyInfo& operator=(const TFunGiftBuyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFunGiftBuyInfo& default_instance();

  void Swap(TFunGiftBuyInfo* other);

  // implements Message ----------------------------------------------

  TFunGiftBuyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFunGiftBuyInfo& from);
  void MergeFrom(const TFunGiftBuyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftBuyInfo</name>
  	<Function>
  		<name>id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_id</name>
  		<replaceName>Id</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftBuyInfo</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint64 BuyTime = 3;
  inline bool has_buytime() const;
  inline void clear_buytime();
  static const int kBuyTimeFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftBuyInfo</name>
  	<Function>
  		<name>buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_buytime</name>
  		<replaceName>BuyTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 buytime() const;
  inline void set_buytime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.TFunGiftBuyInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_buytime();
  inline void clear_has_buytime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint64 buytime_;
  friend void  protobuf_AddDesc_net_2fFunGift_2eproto();
  friend void protobuf_AssignDesc_net_2fFunGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fFunGift_2eproto();

  void InitAsDefaultInstance();
  static TFunGiftBuyInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFunGiftInfo</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FunGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFunGiftInfo : public ::google::protobuf::Message {
 public:
  TFunGiftInfo();
  virtual ~TFunGiftInfo();

  TFunGiftInfo(const TFunGiftInfo& from);

  inline TFunGiftInfo& operator=(const TFunGiftInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFunGiftInfo& default_instance();

  void Swap(TFunGiftInfo* other);

  // implements Message ----------------------------------------------

  TFunGiftInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFunGiftInfo& from);
  void MergeFrom(const TFunGiftInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ConfId = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftInfo</name>
  	<Function>
  		<name>confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 confid() const;
  inline void set_confid(::google::protobuf::uint32 value);

  // optional uint64 StartTime = 2;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftInfo</name>
  	<Function>
  		<name>starttime</name>
  		<replaceName>StartTime</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_starttime</name>
  		<replaceName>StartTime</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_starttime</name>
  		<replaceName>StartTime</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // repeated .pb.TFunGiftBuyInfo ArrRmbGiftBuyInfo = 3;
  inline int arrrmbgiftbuyinfo_size() const;
  inline void clear_arrrmbgiftbuyinfo();
  static const int kArrRmbGiftBuyInfoFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftInfo</name>
  	<Function>
  		<name>arrrmbgiftbuyinfo</name>
  		<replaceName>ArrRmbGiftBuyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrmbgiftbuyinfo</name>
  		<replaceName>ArrRmbGiftBuyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrmbgiftbuyinfo</name>
  		<replaceName>ArrRmbGiftBuyInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrmbgiftbuyinfo</name>
  		<replaceName>ArrRmbGiftBuyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrmbgiftbuyinfo_size</name>
  		<replaceName>ArrRmbGiftBuyInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFunGiftBuyInfo& arrrmbgiftbuyinfo(int index) const;
  inline ::pb::TFunGiftBuyInfo* mutable_arrrmbgiftbuyinfo(int index);
  inline ::pb::TFunGiftBuyInfo* add_arrrmbgiftbuyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo >&
      arrrmbgiftbuyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo >*
      mutable_arrrmbgiftbuyinfo();

  // repeated .pb.TFunGiftBuyInfo ArrGoldGiftBuyInfo = 4;
  inline int arrgoldgiftbuyinfo_size() const;
  inline void clear_arrgoldgiftbuyinfo();
  static const int kArrGoldGiftBuyInfoFieldNumber = 4;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftInfo</name>
  	<Function>
  		<name>arrgoldgiftbuyinfo</name>
  		<replaceName>ArrGoldGiftBuyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrgoldgiftbuyinfo</name>
  		<replaceName>ArrGoldGiftBuyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrgoldgiftbuyinfo</name>
  		<replaceName>ArrGoldGiftBuyInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrgoldgiftbuyinfo</name>
  		<replaceName>ArrGoldGiftBuyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrgoldgiftbuyinfo_size</name>
  		<replaceName>ArrGoldGiftBuyInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFunGiftBuyInfo& arrgoldgiftbuyinfo(int index) const;
  inline ::pb::TFunGiftBuyInfo* mutable_arrgoldgiftbuyinfo(int index);
  inline ::pb::TFunGiftBuyInfo* add_arrgoldgiftbuyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo >&
      arrgoldgiftbuyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo >*
      mutable_arrgoldgiftbuyinfo();

  // @@protoc_insertion_point(class_scope:pb.TFunGiftInfo)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_starttime();
  inline void clear_has_starttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo > arrrmbgiftbuyinfo_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo > arrgoldgiftbuyinfo_;
  ::google::protobuf::uint32 confid_;
  friend void  protobuf_AddDesc_net_2fFunGift_2eproto();
  friend void protobuf_AssignDesc_net_2fFunGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fFunGift_2eproto();

  void InitAsDefaultInstance();
  static TFunGiftInfo* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFunGiftGetInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FunGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFunGiftGetInfoRsp : public ::google::protobuf::Message {
 public:
  TFunGiftGetInfoRsp();
  virtual ~TFunGiftGetInfoRsp();

  TFunGiftGetInfoRsp(const TFunGiftGetInfoRsp& from);

  inline TFunGiftGetInfoRsp& operator=(const TFunGiftGetInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFunGiftGetInfoRsp& default_instance();

  void Swap(TFunGiftGetInfoRsp* other);

  // implements Message ----------------------------------------------

  TFunGiftGetInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFunGiftGetInfoRsp& from);
  void MergeFrom(const TFunGiftGetInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TFunGiftInfo ArrFunGiftInfo = 1;
  inline int arrfungiftinfo_size() const;
  inline void clear_arrfungiftinfo();
  static const int kArrFunGiftInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftGetInfoRsp</name>
  	<Function>
  		<name>arrfungiftinfo</name>
  		<replaceName>ArrFunGiftInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrfungiftinfo</name>
  		<replaceName>ArrFunGiftInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrfungiftinfo</name>
  		<replaceName>ArrFunGiftInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrfungiftinfo</name>
  		<replaceName>ArrFunGiftInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrfungiftinfo_size</name>
  		<replaceName>ArrFunGiftInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFunGiftInfo& arrfungiftinfo(int index) const;
  inline ::pb::TFunGiftInfo* mutable_arrfungiftinfo(int index);
  inline ::pb::TFunGiftInfo* add_arrfungiftinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftInfo >&
      arrfungiftinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftInfo >*
      mutable_arrfungiftinfo();

  // @@protoc_insertion_point(class_scope:pb.TFunGiftGetInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftInfo > arrfungiftinfo_;
  friend void  protobuf_AddDesc_net_2fFunGift_2eproto();
  friend void protobuf_AssignDesc_net_2fFunGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fFunGift_2eproto();

  void InitAsDefaultInstance();
  static TFunGiftGetInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFunGiftGetSingleInfoReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FunGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFunGiftGetSingleInfoReq : public ::google::protobuf::Message {
 public:
  TFunGiftGetSingleInfoReq();
  virtual ~TFunGiftGetSingleInfoReq();

  TFunGiftGetSingleInfoReq(const TFunGiftGetSingleInfoReq& from);

  inline TFunGiftGetSingleInfoReq& operator=(const TFunGiftGetSingleInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFunGiftGetSingleInfoReq& default_instance();

  void Swap(TFunGiftGetSingleInfoReq* other);

  // implements Message ----------------------------------------------

  TFunGiftGetSingleInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFunGiftGetSingleInfoReq& from);
  void MergeFrom(const TFunGiftGetSingleInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ConfId = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftGetSingleInfoReq</name>
  	<Function>
  		<name>confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 confid() const;
  inline void set_confid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TFunGiftGetSingleInfoReq)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 confid_;
  friend void  protobuf_AddDesc_net_2fFunGift_2eproto();
  friend void protobuf_AssignDesc_net_2fFunGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fFunGift_2eproto();

  void InitAsDefaultInstance();
  static TFunGiftGetSingleInfoReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFunGiftGetSingleInfoRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FunGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFunGiftGetSingleInfoRsp : public ::google::protobuf::Message {
 public:
  TFunGiftGetSingleInfoRsp();
  virtual ~TFunGiftGetSingleInfoRsp();

  TFunGiftGetSingleInfoRsp(const TFunGiftGetSingleInfoRsp& from);

  inline TFunGiftGetSingleInfoRsp& operator=(const TFunGiftGetSingleInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFunGiftGetSingleInfoRsp& default_instance();

  void Swap(TFunGiftGetSingleInfoRsp* other);

  // implements Message ----------------------------------------------

  TFunGiftGetSingleInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFunGiftGetSingleInfoRsp& from);
  void MergeFrom(const TFunGiftGetSingleInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pb.TFunGiftInfo FunGiftInfo = 1;
  inline bool has_fungiftinfo() const;
  inline void clear_fungiftinfo();
  static const int kFunGiftInfoFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftGetSingleInfoRsp</name>
  	<Function>
  		<name>fungiftinfo</name>
  		<replaceName>FunGiftInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_fungiftinfo</name>
  		<replaceName>FunGiftInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_allocated_fungiftinfo</name>
  		<replaceName>FunGiftInfo</replaceName>
  		<handler>descripter = pb_set_message_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_fungiftinfo</name>
  		<replaceName>FunGiftInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFunGiftInfo& fungiftinfo() const;
  inline ::pb::TFunGiftInfo* mutable_fungiftinfo();
  inline ::pb::TFunGiftInfo* release_fungiftinfo();
  inline void set_allocated_fungiftinfo(::pb::TFunGiftInfo* fungiftinfo);

  // @@protoc_insertion_point(class_scope:pb.TFunGiftGetSingleInfoRsp)
 private:
  inline void set_has_fungiftinfo();
  inline void clear_has_fungiftinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::TFunGiftInfo* fungiftinfo_;
  friend void  protobuf_AddDesc_net_2fFunGift_2eproto();
  friend void protobuf_AssignDesc_net_2fFunGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fFunGift_2eproto();

  void InitAsDefaultInstance();
  static TFunGiftGetSingleInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFunGiftBuyFreeGiftReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FunGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFunGiftBuyFreeGiftReq : public ::google::protobuf::Message {
 public:
  TFunGiftBuyFreeGiftReq();
  virtual ~TFunGiftBuyFreeGiftReq();

  TFunGiftBuyFreeGiftReq(const TFunGiftBuyFreeGiftReq& from);

  inline TFunGiftBuyFreeGiftReq& operator=(const TFunGiftBuyFreeGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFunGiftBuyFreeGiftReq& default_instance();

  void Swap(TFunGiftBuyFreeGiftReq* other);

  // implements Message ----------------------------------------------

  TFunGiftBuyFreeGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFunGiftBuyFreeGiftReq& from);
  void MergeFrom(const TFunGiftBuyFreeGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ConfId = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftBuyFreeGiftReq</name>
  	<Function>
  		<name>confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 confid() const;
  inline void set_confid(::google::protobuf::uint32 value);

  // optional uint32 GiftId = 2;
  inline bool has_giftid() const;
  inline void clear_giftid();
  static const int kGiftIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftBuyFreeGiftReq</name>
  	<Function>
  		<name>giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 giftid() const;
  inline void set_giftid(::google::protobuf::uint32 value);

  // optional uint32 Num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftBuyFreeGiftReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TFunGiftBuyFreeGiftReq)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_giftid();
  inline void clear_has_giftid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 confid_;
  ::google::protobuf::uint32 giftid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fFunGift_2eproto();
  friend void protobuf_AssignDesc_net_2fFunGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fFunGift_2eproto();

  void InitAsDefaultInstance();
  static TFunGiftBuyFreeGiftReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFunGiftBuyFreeGiftRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FunGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFunGiftBuyFreeGiftRsp : public ::google::protobuf::Message {
 public:
  TFunGiftBuyFreeGiftRsp();
  virtual ~TFunGiftBuyFreeGiftRsp();

  TFunGiftBuyFreeGiftRsp(const TFunGiftBuyFreeGiftRsp& from);

  inline TFunGiftBuyFreeGiftRsp& operator=(const TFunGiftBuyFreeGiftRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFunGiftBuyFreeGiftRsp& default_instance();

  void Swap(TFunGiftBuyFreeGiftRsp* other);

  // implements Message ----------------------------------------------

  TFunGiftBuyFreeGiftRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFunGiftBuyFreeGiftRsp& from);
  void MergeFrom(const TFunGiftBuyFreeGiftRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftBuyFreeGiftRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TFunGiftBuyFreeGiftRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fFunGift_2eproto();
  friend void protobuf_AssignDesc_net_2fFunGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fFunGift_2eproto();

  void InitAsDefaultInstance();
  static TFunGiftBuyFreeGiftRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFunGiftBuyGoldGiftReq</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FunGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFunGiftBuyGoldGiftReq : public ::google::protobuf::Message {
 public:
  TFunGiftBuyGoldGiftReq();
  virtual ~TFunGiftBuyGoldGiftReq();

  TFunGiftBuyGoldGiftReq(const TFunGiftBuyGoldGiftReq& from);

  inline TFunGiftBuyGoldGiftReq& operator=(const TFunGiftBuyGoldGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFunGiftBuyGoldGiftReq& default_instance();

  void Swap(TFunGiftBuyGoldGiftReq* other);

  // implements Message ----------------------------------------------

  TFunGiftBuyGoldGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFunGiftBuyGoldGiftReq& from);
  void MergeFrom(const TFunGiftBuyGoldGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ConfId = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftBuyGoldGiftReq</name>
  	<Function>
  		<name>confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 confid() const;
  inline void set_confid(::google::protobuf::uint32 value);

  // optional uint32 GiftId = 2;
  inline bool has_giftid() const;
  inline void clear_giftid();
  static const int kGiftIdFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftBuyGoldGiftReq</name>
  	<Function>
  		<name>giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_giftid</name>
  		<replaceName>GiftId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 giftid() const;
  inline void set_giftid(::google::protobuf::uint32 value);

  // optional uint32 Num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftBuyGoldGiftReq</name>
  	<Function>
  		<name>num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_num</name>
  		<replaceName>Num</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.TFunGiftBuyGoldGiftReq)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_giftid();
  inline void clear_has_giftid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 confid_;
  ::google::protobuf::uint32 giftid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_net_2fFunGift_2eproto();
  friend void protobuf_AssignDesc_net_2fFunGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fFunGift_2eproto();

  void InitAsDefaultInstance();
  static TFunGiftBuyGoldGiftReq* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFunGiftBuyGoldGiftRsp</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FunGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFunGiftBuyGoldGiftRsp : public ::google::protobuf::Message {
 public:
  TFunGiftBuyGoldGiftRsp();
  virtual ~TFunGiftBuyGoldGiftRsp();

  TFunGiftBuyGoldGiftRsp(const TFunGiftBuyGoldGiftRsp& from);

  inline TFunGiftBuyGoldGiftRsp& operator=(const TFunGiftBuyGoldGiftRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFunGiftBuyGoldGiftRsp& default_instance();

  void Swap(TFunGiftBuyGoldGiftRsp* other);

  // implements Message ----------------------------------------------

  TFunGiftBuyGoldGiftRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFunGiftBuyGoldGiftRsp& from);
  void MergeFrom(const TFunGiftBuyGoldGiftRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.TCommonReward ArrReward = 1;
  inline int arrreward_size() const;
  inline void clear_arrreward();
  static const int kArrRewardFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftBuyGoldGiftRsp</name>
  	<Function>
  		<name>arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrreward</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrreward_size</name>
  		<replaceName>ArrReward</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TCommonReward& arrreward(int index) const;
  inline ::pb::TCommonReward* mutable_arrreward(int index);
  inline ::pb::TCommonReward* add_arrreward();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
      arrreward() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
      mutable_arrreward();

  // @@protoc_insertion_point(class_scope:pb.TFunGiftBuyGoldGiftRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward > arrreward_;
  friend void  protobuf_AddDesc_net_2fFunGift_2eproto();
  friend void protobuf_AssignDesc_net_2fFunGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fFunGift_2eproto();

  void InitAsDefaultInstance();
  static TFunGiftBuyGoldGiftRsp* default_instance_;
};
// -------------------------------------------------------------------

/*FOR2LUA
<Record>
	<name>TFunGiftRmbGiftChangeNotify</name>
	<Function>
		<name>CopyFrom</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_copyfrom_cpp()</handler>
	</Function>
	<Function>
		<name>operator_equal</name>
		<replaceName>MergeFrom</replaceName>
		<handler>descripter = pb_operator_equal_cpp()</handler>
	</Function>
	<Function>
		<name>new</name>
		<replaceName>net/FunGift.proto</replaceName>
		<handler>descripter = pb_new_cpp()</handler>
	</Function>
	<Function>
		<name>ParsePartialFromArray</name>
		<replaceName>ParseFromString</replaceName>
		<handler>descripter = pb_decode_cpp()</handler>
	</Function>
	<Function>
		<name>SerializePartialToArray</name>
		<replaceName>SerializeToString</replaceName>
		<handler>descripter = pb_encode_cpp()</handler>
	</Function>
</Record>
FOR2LUA*/
class TFunGiftRmbGiftChangeNotify : public ::google::protobuf::Message {
 public:
  TFunGiftRmbGiftChangeNotify();
  virtual ~TFunGiftRmbGiftChangeNotify();

  TFunGiftRmbGiftChangeNotify(const TFunGiftRmbGiftChangeNotify& from);

  inline TFunGiftRmbGiftChangeNotify& operator=(const TFunGiftRmbGiftChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFunGiftRmbGiftChangeNotify& default_instance();

  void Swap(TFunGiftRmbGiftChangeNotify* other);

  // implements Message ----------------------------------------------

  TFunGiftRmbGiftChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFunGiftRmbGiftChangeNotify& from);
  void MergeFrom(const TFunGiftRmbGiftChangeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ConfId = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfIdFieldNumber = 1;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftRmbGiftChangeNotify</name>
  	<Function>
  		<name>confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>set_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_set_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_confid</name>
  		<replaceName>ConfId</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline ::google::protobuf::uint32 confid() const;
  inline void set_confid(::google::protobuf::uint32 value);

  // repeated .pb.TFunGiftBuyInfo ArrRmbGiftBuyInfo = 2;
  inline int arrrmbgiftbuyinfo_size() const;
  inline void clear_arrrmbgiftbuyinfo();
  static const int kArrRmbGiftBuyInfoFieldNumber = 2;
  /*FOR2LUA
  <Record>
  	<name>TFunGiftRmbGiftChangeNotify</name>
  	<Function>
  		<name>arrrmbgiftbuyinfo</name>
  		<replaceName>ArrRmbGiftBuyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>mutable_arrrmbgiftbuyinfo</name>
  		<replaceName>ArrRmbGiftBuyInfo</replaceName>
  		<handler>descripter = pb_cpp()</handler>
  	</Function>
  	<Function>
  		<name>add_arrrmbgiftbuyinfo</name>
  		<replaceName>ArrRmbGiftBuyInfo</replaceName>
  		<handler>descripter = pb_repeated_add_cpp()</handler>
  	</Function>
  	<Function>
  		<name>has_arrrmbgiftbuyinfo</name>
  		<replaceName>ArrRmbGiftBuyInfo</replaceName>
  		<handler>descripter = pb_has_cpp()</handler>
  	</Function>
  	<Function>
  		<name>arrrmbgiftbuyinfo_size</name>
  		<replaceName>ArrRmbGiftBuyInfo</replaceName>
  		<handler>descripter = pb_repeated_size_cpp()</handler>
  	</Function>
  </Record>
  FOR2LUA*/
  inline const ::pb::TFunGiftBuyInfo& arrrmbgiftbuyinfo(int index) const;
  inline ::pb::TFunGiftBuyInfo* mutable_arrrmbgiftbuyinfo(int index);
  inline ::pb::TFunGiftBuyInfo* add_arrrmbgiftbuyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo >&
      arrrmbgiftbuyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo >*
      mutable_arrrmbgiftbuyinfo();

  // @@protoc_insertion_point(class_scope:pb.TFunGiftRmbGiftChangeNotify)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo > arrrmbgiftbuyinfo_;
  ::google::protobuf::uint32 confid_;
  friend void  protobuf_AddDesc_net_2fFunGift_2eproto();
  friend void protobuf_AssignDesc_net_2fFunGift_2eproto();
  friend void protobuf_ShutdownFile_net_2fFunGift_2eproto();

  void InitAsDefaultInstance();
  static TFunGiftRmbGiftChangeNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// TFunGiftBuyInfo

// optional uint32 Id = 1;
inline bool TFunGiftBuyInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFunGiftBuyInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFunGiftBuyInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFunGiftBuyInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TFunGiftBuyInfo::id() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftBuyInfo.Id)
  return id_;
}
inline void TFunGiftBuyInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TFunGiftBuyInfo.Id)
}

// optional uint32 Num = 2;
inline bool TFunGiftBuyInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFunGiftBuyInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFunGiftBuyInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFunGiftBuyInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TFunGiftBuyInfo::num() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftBuyInfo.Num)
  return num_;
}
inline void TFunGiftBuyInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TFunGiftBuyInfo.Num)
}

// optional uint64 BuyTime = 3;
inline bool TFunGiftBuyInfo::has_buytime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFunGiftBuyInfo::set_has_buytime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFunGiftBuyInfo::clear_has_buytime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFunGiftBuyInfo::clear_buytime() {
  buytime_ = GOOGLE_ULONGLONG(0);
  clear_has_buytime();
}
inline ::google::protobuf::uint64 TFunGiftBuyInfo::buytime() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftBuyInfo.BuyTime)
  return buytime_;
}
inline void TFunGiftBuyInfo::set_buytime(::google::protobuf::uint64 value) {
  set_has_buytime();
  buytime_ = value;
  // @@protoc_insertion_point(field_set:pb.TFunGiftBuyInfo.BuyTime)
}

// -------------------------------------------------------------------

// TFunGiftInfo

// optional uint32 ConfId = 1;
inline bool TFunGiftInfo::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFunGiftInfo::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFunGiftInfo::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFunGiftInfo::clear_confid() {
  confid_ = 0u;
  clear_has_confid();
}
inline ::google::protobuf::uint32 TFunGiftInfo::confid() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftInfo.ConfId)
  return confid_;
}
inline void TFunGiftInfo::set_confid(::google::protobuf::uint32 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFunGiftInfo.ConfId)
}

// optional uint64 StartTime = 2;
inline bool TFunGiftInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFunGiftInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFunGiftInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFunGiftInfo::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 TFunGiftInfo::starttime() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftInfo.StartTime)
  return starttime_;
}
inline void TFunGiftInfo::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:pb.TFunGiftInfo.StartTime)
}

// repeated .pb.TFunGiftBuyInfo ArrRmbGiftBuyInfo = 3;
inline int TFunGiftInfo::arrrmbgiftbuyinfo_size() const {
  return arrrmbgiftbuyinfo_.size();
}
inline void TFunGiftInfo::clear_arrrmbgiftbuyinfo() {
  arrrmbgiftbuyinfo_.Clear();
}
inline const ::pb::TFunGiftBuyInfo& TFunGiftInfo::arrrmbgiftbuyinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftInfo.ArrRmbGiftBuyInfo)
  return arrrmbgiftbuyinfo_.Get(index);
}
inline ::pb::TFunGiftBuyInfo* TFunGiftInfo::mutable_arrrmbgiftbuyinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFunGiftInfo.ArrRmbGiftBuyInfo)
  return arrrmbgiftbuyinfo_.Mutable(index);
}
inline ::pb::TFunGiftBuyInfo* TFunGiftInfo::add_arrrmbgiftbuyinfo() {
  // @@protoc_insertion_point(field_add:pb.TFunGiftInfo.ArrRmbGiftBuyInfo)
  return arrrmbgiftbuyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo >&
TFunGiftInfo::arrrmbgiftbuyinfo() const {
  // @@protoc_insertion_point(field_list:pb.TFunGiftInfo.ArrRmbGiftBuyInfo)
  return arrrmbgiftbuyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo >*
TFunGiftInfo::mutable_arrrmbgiftbuyinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFunGiftInfo.ArrRmbGiftBuyInfo)
  return &arrrmbgiftbuyinfo_;
}

// repeated .pb.TFunGiftBuyInfo ArrGoldGiftBuyInfo = 4;
inline int TFunGiftInfo::arrgoldgiftbuyinfo_size() const {
  return arrgoldgiftbuyinfo_.size();
}
inline void TFunGiftInfo::clear_arrgoldgiftbuyinfo() {
  arrgoldgiftbuyinfo_.Clear();
}
inline const ::pb::TFunGiftBuyInfo& TFunGiftInfo::arrgoldgiftbuyinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftInfo.ArrGoldGiftBuyInfo)
  return arrgoldgiftbuyinfo_.Get(index);
}
inline ::pb::TFunGiftBuyInfo* TFunGiftInfo::mutable_arrgoldgiftbuyinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFunGiftInfo.ArrGoldGiftBuyInfo)
  return arrgoldgiftbuyinfo_.Mutable(index);
}
inline ::pb::TFunGiftBuyInfo* TFunGiftInfo::add_arrgoldgiftbuyinfo() {
  // @@protoc_insertion_point(field_add:pb.TFunGiftInfo.ArrGoldGiftBuyInfo)
  return arrgoldgiftbuyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo >&
TFunGiftInfo::arrgoldgiftbuyinfo() const {
  // @@protoc_insertion_point(field_list:pb.TFunGiftInfo.ArrGoldGiftBuyInfo)
  return arrgoldgiftbuyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo >*
TFunGiftInfo::mutable_arrgoldgiftbuyinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFunGiftInfo.ArrGoldGiftBuyInfo)
  return &arrgoldgiftbuyinfo_;
}

// -------------------------------------------------------------------

// TFunGiftGetInfoRsp

// repeated .pb.TFunGiftInfo ArrFunGiftInfo = 1;
inline int TFunGiftGetInfoRsp::arrfungiftinfo_size() const {
  return arrfungiftinfo_.size();
}
inline void TFunGiftGetInfoRsp::clear_arrfungiftinfo() {
  arrfungiftinfo_.Clear();
}
inline const ::pb::TFunGiftInfo& TFunGiftGetInfoRsp::arrfungiftinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftGetInfoRsp.ArrFunGiftInfo)
  return arrfungiftinfo_.Get(index);
}
inline ::pb::TFunGiftInfo* TFunGiftGetInfoRsp::mutable_arrfungiftinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFunGiftGetInfoRsp.ArrFunGiftInfo)
  return arrfungiftinfo_.Mutable(index);
}
inline ::pb::TFunGiftInfo* TFunGiftGetInfoRsp::add_arrfungiftinfo() {
  // @@protoc_insertion_point(field_add:pb.TFunGiftGetInfoRsp.ArrFunGiftInfo)
  return arrfungiftinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftInfo >&
TFunGiftGetInfoRsp::arrfungiftinfo() const {
  // @@protoc_insertion_point(field_list:pb.TFunGiftGetInfoRsp.ArrFunGiftInfo)
  return arrfungiftinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftInfo >*
TFunGiftGetInfoRsp::mutable_arrfungiftinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFunGiftGetInfoRsp.ArrFunGiftInfo)
  return &arrfungiftinfo_;
}

// -------------------------------------------------------------------

// TFunGiftGetSingleInfoReq

// optional uint32 ConfId = 1;
inline bool TFunGiftGetSingleInfoReq::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFunGiftGetSingleInfoReq::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFunGiftGetSingleInfoReq::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFunGiftGetSingleInfoReq::clear_confid() {
  confid_ = 0u;
  clear_has_confid();
}
inline ::google::protobuf::uint32 TFunGiftGetSingleInfoReq::confid() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftGetSingleInfoReq.ConfId)
  return confid_;
}
inline void TFunGiftGetSingleInfoReq::set_confid(::google::protobuf::uint32 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFunGiftGetSingleInfoReq.ConfId)
}

// -------------------------------------------------------------------

// TFunGiftGetSingleInfoRsp

// optional .pb.TFunGiftInfo FunGiftInfo = 1;
inline bool TFunGiftGetSingleInfoRsp::has_fungiftinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFunGiftGetSingleInfoRsp::set_has_fungiftinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFunGiftGetSingleInfoRsp::clear_has_fungiftinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFunGiftGetSingleInfoRsp::clear_fungiftinfo() {
  if (fungiftinfo_ != NULL) fungiftinfo_->::pb::TFunGiftInfo::Clear();
  clear_has_fungiftinfo();
}
inline const ::pb::TFunGiftInfo& TFunGiftGetSingleInfoRsp::fungiftinfo() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftGetSingleInfoRsp.FunGiftInfo)
  return fungiftinfo_ != NULL ? *fungiftinfo_ : *default_instance_->fungiftinfo_;
}
inline ::pb::TFunGiftInfo* TFunGiftGetSingleInfoRsp::mutable_fungiftinfo() {
  set_has_fungiftinfo();
  if (fungiftinfo_ == NULL) fungiftinfo_ = new ::pb::TFunGiftInfo;
  // @@protoc_insertion_point(field_mutable:pb.TFunGiftGetSingleInfoRsp.FunGiftInfo)
  return fungiftinfo_;
}
inline ::pb::TFunGiftInfo* TFunGiftGetSingleInfoRsp::release_fungiftinfo() {
  clear_has_fungiftinfo();
  ::pb::TFunGiftInfo* temp = fungiftinfo_;
  fungiftinfo_ = NULL;
  return temp;
}
inline void TFunGiftGetSingleInfoRsp::set_allocated_fungiftinfo(::pb::TFunGiftInfo* fungiftinfo) {
  delete fungiftinfo_;
  fungiftinfo_ = fungiftinfo;
  if (fungiftinfo) {
    set_has_fungiftinfo();
  } else {
    clear_has_fungiftinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.TFunGiftGetSingleInfoRsp.FunGiftInfo)
}

// -------------------------------------------------------------------

// TFunGiftBuyFreeGiftReq

// optional uint32 ConfId = 1;
inline bool TFunGiftBuyFreeGiftReq::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFunGiftBuyFreeGiftReq::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFunGiftBuyFreeGiftReq::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFunGiftBuyFreeGiftReq::clear_confid() {
  confid_ = 0u;
  clear_has_confid();
}
inline ::google::protobuf::uint32 TFunGiftBuyFreeGiftReq::confid() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftBuyFreeGiftReq.ConfId)
  return confid_;
}
inline void TFunGiftBuyFreeGiftReq::set_confid(::google::protobuf::uint32 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFunGiftBuyFreeGiftReq.ConfId)
}

// optional uint32 GiftId = 2;
inline bool TFunGiftBuyFreeGiftReq::has_giftid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFunGiftBuyFreeGiftReq::set_has_giftid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFunGiftBuyFreeGiftReq::clear_has_giftid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFunGiftBuyFreeGiftReq::clear_giftid() {
  giftid_ = 0u;
  clear_has_giftid();
}
inline ::google::protobuf::uint32 TFunGiftBuyFreeGiftReq::giftid() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftBuyFreeGiftReq.GiftId)
  return giftid_;
}
inline void TFunGiftBuyFreeGiftReq::set_giftid(::google::protobuf::uint32 value) {
  set_has_giftid();
  giftid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFunGiftBuyFreeGiftReq.GiftId)
}

// optional uint32 Num = 3;
inline bool TFunGiftBuyFreeGiftReq::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFunGiftBuyFreeGiftReq::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFunGiftBuyFreeGiftReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFunGiftBuyFreeGiftReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TFunGiftBuyFreeGiftReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftBuyFreeGiftReq.Num)
  return num_;
}
inline void TFunGiftBuyFreeGiftReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TFunGiftBuyFreeGiftReq.Num)
}

// -------------------------------------------------------------------

// TFunGiftBuyFreeGiftRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TFunGiftBuyFreeGiftRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TFunGiftBuyFreeGiftRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TFunGiftBuyFreeGiftRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftBuyFreeGiftRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TFunGiftBuyFreeGiftRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFunGiftBuyFreeGiftRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TFunGiftBuyFreeGiftRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TFunGiftBuyFreeGiftRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TFunGiftBuyFreeGiftRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TFunGiftBuyFreeGiftRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TFunGiftBuyFreeGiftRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFunGiftBuyFreeGiftRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TFunGiftBuyGoldGiftReq

// optional uint32 ConfId = 1;
inline bool TFunGiftBuyGoldGiftReq::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFunGiftBuyGoldGiftReq::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFunGiftBuyGoldGiftReq::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFunGiftBuyGoldGiftReq::clear_confid() {
  confid_ = 0u;
  clear_has_confid();
}
inline ::google::protobuf::uint32 TFunGiftBuyGoldGiftReq::confid() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftBuyGoldGiftReq.ConfId)
  return confid_;
}
inline void TFunGiftBuyGoldGiftReq::set_confid(::google::protobuf::uint32 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFunGiftBuyGoldGiftReq.ConfId)
}

// optional uint32 GiftId = 2;
inline bool TFunGiftBuyGoldGiftReq::has_giftid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFunGiftBuyGoldGiftReq::set_has_giftid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFunGiftBuyGoldGiftReq::clear_has_giftid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFunGiftBuyGoldGiftReq::clear_giftid() {
  giftid_ = 0u;
  clear_has_giftid();
}
inline ::google::protobuf::uint32 TFunGiftBuyGoldGiftReq::giftid() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftBuyGoldGiftReq.GiftId)
  return giftid_;
}
inline void TFunGiftBuyGoldGiftReq::set_giftid(::google::protobuf::uint32 value) {
  set_has_giftid();
  giftid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFunGiftBuyGoldGiftReq.GiftId)
}

// optional uint32 Num = 3;
inline bool TFunGiftBuyGoldGiftReq::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFunGiftBuyGoldGiftReq::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFunGiftBuyGoldGiftReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFunGiftBuyGoldGiftReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 TFunGiftBuyGoldGiftReq::num() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftBuyGoldGiftReq.Num)
  return num_;
}
inline void TFunGiftBuyGoldGiftReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.TFunGiftBuyGoldGiftReq.Num)
}

// -------------------------------------------------------------------

// TFunGiftBuyGoldGiftRsp

// repeated .pb.TCommonReward ArrReward = 1;
inline int TFunGiftBuyGoldGiftRsp::arrreward_size() const {
  return arrreward_.size();
}
inline void TFunGiftBuyGoldGiftRsp::clear_arrreward() {
  arrreward_.Clear();
}
inline const ::pb::TCommonReward& TFunGiftBuyGoldGiftRsp::arrreward(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftBuyGoldGiftRsp.ArrReward)
  return arrreward_.Get(index);
}
inline ::pb::TCommonReward* TFunGiftBuyGoldGiftRsp::mutable_arrreward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFunGiftBuyGoldGiftRsp.ArrReward)
  return arrreward_.Mutable(index);
}
inline ::pb::TCommonReward* TFunGiftBuyGoldGiftRsp::add_arrreward() {
  // @@protoc_insertion_point(field_add:pb.TFunGiftBuyGoldGiftRsp.ArrReward)
  return arrreward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >&
TFunGiftBuyGoldGiftRsp::arrreward() const {
  // @@protoc_insertion_point(field_list:pb.TFunGiftBuyGoldGiftRsp.ArrReward)
  return arrreward_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TCommonReward >*
TFunGiftBuyGoldGiftRsp::mutable_arrreward() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFunGiftBuyGoldGiftRsp.ArrReward)
  return &arrreward_;
}

// -------------------------------------------------------------------

// TFunGiftRmbGiftChangeNotify

// optional uint32 ConfId = 1;
inline bool TFunGiftRmbGiftChangeNotify::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFunGiftRmbGiftChangeNotify::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFunGiftRmbGiftChangeNotify::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFunGiftRmbGiftChangeNotify::clear_confid() {
  confid_ = 0u;
  clear_has_confid();
}
inline ::google::protobuf::uint32 TFunGiftRmbGiftChangeNotify::confid() const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftRmbGiftChangeNotify.ConfId)
  return confid_;
}
inline void TFunGiftRmbGiftChangeNotify::set_confid(::google::protobuf::uint32 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:pb.TFunGiftRmbGiftChangeNotify.ConfId)
}

// repeated .pb.TFunGiftBuyInfo ArrRmbGiftBuyInfo = 2;
inline int TFunGiftRmbGiftChangeNotify::arrrmbgiftbuyinfo_size() const {
  return arrrmbgiftbuyinfo_.size();
}
inline void TFunGiftRmbGiftChangeNotify::clear_arrrmbgiftbuyinfo() {
  arrrmbgiftbuyinfo_.Clear();
}
inline const ::pb::TFunGiftBuyInfo& TFunGiftRmbGiftChangeNotify::arrrmbgiftbuyinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.TFunGiftRmbGiftChangeNotify.ArrRmbGiftBuyInfo)
  return arrrmbgiftbuyinfo_.Get(index);
}
inline ::pb::TFunGiftBuyInfo* TFunGiftRmbGiftChangeNotify::mutable_arrrmbgiftbuyinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TFunGiftRmbGiftChangeNotify.ArrRmbGiftBuyInfo)
  return arrrmbgiftbuyinfo_.Mutable(index);
}
inline ::pb::TFunGiftBuyInfo* TFunGiftRmbGiftChangeNotify::add_arrrmbgiftbuyinfo() {
  // @@protoc_insertion_point(field_add:pb.TFunGiftRmbGiftChangeNotify.ArrRmbGiftBuyInfo)
  return arrrmbgiftbuyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo >&
TFunGiftRmbGiftChangeNotify::arrrmbgiftbuyinfo() const {
  // @@protoc_insertion_point(field_list:pb.TFunGiftRmbGiftChangeNotify.ArrRmbGiftBuyInfo)
  return arrrmbgiftbuyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::TFunGiftBuyInfo >*
TFunGiftRmbGiftChangeNotify::mutable_arrrmbgiftbuyinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.TFunGiftRmbGiftChangeNotify.ArrRmbGiftBuyInfo)
  return &arrrmbgiftbuyinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2fFunGift_2eproto__INCLUDED
